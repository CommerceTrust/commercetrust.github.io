@charset "UTF-8";
article, aside, details, figcaption, figure, footer, header, hgroup, nav, section, summary {
  display: block; }

audio, canvas, video {
  display: inline-block; }

audio:not([controls]) {
  display: none;
  height: 0; }

[hidden], template {
  display: none; }

html {
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%; }

body {
  margin: 0; }

a {
  background: transparent; }
  a:hover, a:active {
    outline: 0; }

/* @if \$normalize_headings == true {
    h1 {
        font-size: \$h1_font_size;
        margin: \$h1_margin;
    }

    h2 {
        font-size: \$h2_font_size;
        margin: \$h2_margin;
    }

    h3 {
        font-size: \$h3_font_size;
        margin: \$h3_margin;
    }

    h4 {
        font-size: \$h4_font_size;
        margin: \$h4_margin;
    }

    h5 {
        font-size: \$h5_font_size;
        margin: \$h5_margin;
    }

    h6 {
        font-size: \$h6_font_size;
        margin: \$h6_margin;
    }
} */
abbr[title] {
  border-bottom: 1px dotted; }

b, strong {
  font-weight: bold; }

dfn {
  font-style: italic; }

mark {
  background: #ff0;
  color: #000; }

code, kbd, pre, samp {
  font-family: monospace, serif;
  font-size: 1em; }

pre {
  white-space: pre;
  white-space: pre-wrap;
  word-wrap: break-word; }

q {
  quotes: "\201C" "\201D" "\2018" "\2019"; }

q:before, q:after {
  content: '';
  content: none; }

/* /small {
    font-size: 80%;
} */
sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

img {
  border: 0; }

svg:not(:root) {
  overflow: hidden; }

figure {
  margin: 0; }

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

legend {
  border: 0;
  padding: 0;
  white-space: normal; }

button, input, select, textarea {
  font-family: inherit;
  font-size: 100%;
  margin: 0;
  vertical-align: baseline; }

button, input {
  line-height: normal; }

button, select {
  text-transform: none; }

button, html input[type="button"], input[type="reset"], input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer; }

button[disabled], input[disabled] {
  cursor: default; }

button::-moz-focus-inner, input::-moz-focus-inner {
  border: 0;
  padding: 0; }

textarea {
  overflow: auto;
  vertical-align: top; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

input[type="search"] {
  -webkit-appearance: textfield;
  -moz-box-sizing: content-box;
  box-sizing: content-box; }
  input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration {
    -webkit-appearance: none; }
input[type="checkbox"], input[type="radio"] {
  -moz-box-sizing: border-box;
       box-sizing: border-box;
  padding: 0; }

html {
  font-size: 16px;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased; }

body {
  color: #333;
  line-height: 1.5;
  font-family: News Cycle, sans-serif;
  -moz-background-size: auto 24px;
       background-size: auto 24px;
  margin: 0; }

[class*='__heading'] {
  color: #267e64;
  font-family: Playfair Display, serif;
  font-size: 40px;
  font-size: 2.5rem;
  font-weight: 400;
  line-height: 1;
  margin-bottom: 32px;
  margin-bottom: 2rem; }

[class*=__button], input[type="button"], input[type="reset"] {
  border: 1px solid #267e64;
  cursor: pointer;
  display: inline-block;
  font-family: Playfair Display, serif;
  font-size: 19px;
  font-size: 1.2rem;
  font-style: italic;
  text-align: center;
  padding: 12px 48px;
  padding: .75rem 3rem;
  text-decoration: none;
  /*Items for transition */
  background-color: transparent;
  color: #267e64;
  /*Transition settings */
  -webkit-transition: all .2s ease;
     -moz-transition: all .2s ease;
       -o-transition: all .2s ease;
          transition: all .2s ease; }
  [class*=__button]:hover, input[type="button"]:hover, input[type="reset"]:hover {
    /*These will transition on hover */
    background-color: #267e64;
    color: #fff;
    text-decoration: none; }

.loader__button.disabled {
  background-color: #e5e6e7;
  color: #267e64;
  cursor: default;
  opacity: .3;
  filter: alpha(opacity=30); }

.clearfix:after {
  content: "";
  display: table;
  clear: both; }

img, iframe, embed {
  width: 100%; }

.container {
  background-color: #fff;
  border-left: 1px solid #ccc;
  border-right: 1px solid #ccc;
  margin: 0 auto;
  max-width: 1200px; }

[class*='col-'] {
  display: table-cell;
  vertical-align: middle; }

.col-2-12 {
  width: 16.66667%; }

.col-3-12 {
  width: 25%; }

.col-4-12 {
  width: 33.33333%; }

.col-5-12 {
  width: 41.66667%; }

.col-6-12 {
  width: 50%; }

.col-7-12 {
  width: 58.33333%; }

.col-8-12 {
  width: 66.66667%; }

.col-9-12 {
  width: 75%; }

.col-10-12 {
  width: 83.33333%; }

.col-11-12 {
  width: 91.66667%; }

* {
  margin: 0;
  padding: 0;
  -moz-box-sizing: border-box;
       box-sizing: border-box; }
  *::after, *::before {
    -moz-box-sizing: border-box;
         box-sizing: border-box; }

body {
  background-color: #eceee6;
  padding: 0; }

a {
  text-decoration: none;
  color: #267e64; }
  a:hover {
    color: #455652;
    text-decoration: underline; }

table {
  margin: 0 0 1.5em;
  width: 100%; }

tr {
  border-bottom: 1px solid #e5e6e7; }
  tr:nth-child(even) {
    background-color: #f8f8f8; }

td {
  vertical-align: top;
  padding: 10px 5px; }

thead {
  background-color: #e5e6e7; }
  thead th {
    font-weight: 600;
    text-align: left;
    padding: 5px; }

.nav-minor {
  display: block;
  text-align: right; }
  .nav-minor__container {
    background-color: #fff;
    border-left: 1px solid #ccc;
    border-right: 1px solid #ccc;
    margin: 0 auto;
    padding: 16px 24px;
    padding: 1rem 1.5rem;
    max-width: 1200px; }
  .nav-minor li {
    display: inline-block; }
    .nav-minor li:after {
      display: inline-block;
      content: ' | ';
      color: #267e64;
      margin: 0 2px 0 4px;
      margin: 0 2px 0 .3rem; }
    .nav-minor li:nth-child(3):after {
      content: ' '; }
    .nav-minor li:last-child a {
      font-weight: bold;
      margin-right: 10px; }
  .nav-minor__link {
    color: #333;
    display: inline-block;
    padding: 0 4px 0;
    padding: 0 .3rem 0; }
    .nav-minor__link:hover {
      color: #267e64; }

.site-map a {
  color: #333; }
  .site-map a:hover {
    color: #267e64; }

a.cd-nav-item:hover img {
  opacity: .7 !important;
  filter: alpha(opacity=70); }
a.cd-nav-item:hover h3 {
  color: #6bd2b4; }

input[type="search"]::-ms-clear {
  display: none; }

input[type="search"]::-webkit-search-decoration, input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-results-button, input[type="search"]::-webkit-search-results-decoration {
  display: none; }

/* --------------------------------
 *
 *Main components
 *
 *--------------------------------* */
.cd-main-content, .cd-main-header {
  /* Force Hardware Acceleration in WebKit */
  -webkit-transform: translateZ(0);
     -moz-transform: translateZ(0);
          transform: translateZ(0);
  will-change: transform; }
  .cd-main-content ul, .cd-main-header ul {
    list-style: none; }

.cd-main-content {
  position: relative;
  -webkit-transition: -webkit-transform 0.3s;
     -moz-transition: -moz-transform 0.3s;
       -o-transition: -o-transform 0.3s;
          transition: transform 0.3s; }

.cd-main-header {
  font-family: Playfair Display, serif;
  position: relative;
  -webkit-transition: -webkit-transform 0.3s;
     -moz-transition: -moz-transform 0.3s;
       -o-transition: -o-transform 0.3s;
          transition: transform 0.3s; }

.cd-main-content {
  min-height: 100vh;
  z-index: 2; }

.cd-main-header {
  height: 50px;
  background: #fff;
  z-index: 3;
  border-bottom: 1px solid #e5e6e7; }
  .nav-is-fixed .cd-main-header {
    /* add .nav-is-fixed class to body if you want a fixed navigation on > 1024px */
    position: fixed;
    top: 0;
    left: 0;
    width: 100%; }

.cd-logo {
  position: absolute;
  top: 12px;
  left: 5%; }
  .cd-logo img {
    display: block; }

.cd-header-buttons {
  position: absolute;
  display: inline-block;
  top: 3px;
  right: 5%; }
  .cd-header-buttons li {
    display: inline-block; }

.cd-search-trigger, .cd-nav-trigger {
  position: relative;
  display: block;
  width: 44px;
  height: 44px;
  overflow: hidden;
  white-space: nowrap;
  /* hide text */
  color: transparent;
  z-index: 3; }

.cd-search-trigger::before, .cd-search-trigger::after {
  /* search icon */
  content: '';
  position: absolute;
  -webkit-transition: opacity 0.3s;
     -moz-transition: opacity 0.3s;
       -o-transition: opacity 0.3s;
          transition: opacity 0.3s;
  /* Force Hardware Acceleration in WebKit */
  -webkit-transform: translateZ(0);
     -moz-transform: translateZ(0);
          transform: translateZ(0);
  -webkit-backface-visibility: hidden;
     -moz-backface-visibility: hidden;
          backface-visibility: hidden; }
.cd-search-trigger::before {
  /* lens */
  top: 11px;
  left: 11px;
  width: 18px;
  height: 18px;
  -moz-border-radius: 50%;
       border-radius: 50%;
  border: 3px solid #455652; }
.cd-search-trigger::after {
  /* handle */
  height: 3px;
  width: 8px;
  background: #455652;
  bottom: 14px;
  right: 11px;
  -webkit-transform: rotate(45deg);
     -moz-transform: rotate(45deg);
      -ms-transform: rotate(45deg);
       -o-transform: rotate(45deg);
          transform: rotate(45deg); }
.cd-search-trigger span {
  /* container for the X icon */
  position: absolute;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0; }
.cd-search-trigger span::before, .cd-search-trigger span::after {
  /* close icon */
  content: '';
  position: absolute;
  display: inline-block;
  height: 3px;
  width: 22px;
  top: 50%;
  margin-top: -2px;
  left: 50%;
  margin-left: -11px;
  background: #455652;
  opacity: 0;
  filter: alpha(opacity=0);
  /* Force Hardware Acceleration in WebKit */
  -webkit-transform: translateZ(0);
     -moz-transform: translateZ(0);
          transform: translateZ(0);
  -webkit-backface-visibility: hidden;
     -moz-backface-visibility: hidden;
          backface-visibility: hidden;
  -webkit-transition: opacity 0.3s, -webkit-transform 0.3s;
     -moz-transition: opacity 0.3s, -moz-transform 0.3s;
       -o-transition: opacity 0.3s, -o-transform 0.3s;
          transition: opacity 0.3s, transform 0.3s; }
.cd-search-trigger span::before {
  -webkit-transform: rotate(45deg);
     -moz-transform: rotate(45deg);
      -ms-transform: rotate(45deg);
       -o-transform: rotate(45deg);
          transform: rotate(45deg); }
.cd-search-trigger span::after {
  -webkit-transform: rotate(-45deg);
     -moz-transform: rotate(-45deg);
      -ms-transform: rotate(-45deg);
       -o-transform: rotate(-45deg);
          transform: rotate(-45deg); }
.cd-search-trigger.search-is-visible::before, .cd-search-trigger.search-is-visible::after {
  /* hide search icon */
  opacity: 0;
  filter: alpha(opacity=0); }
.cd-search-trigger.search-is-visible span::before, .cd-search-trigger.search-is-visible span::after {
  /* show close icon */
  opacity: 1;
  filter: alpha(opacity=100); }
.cd-search-trigger.search-is-visible span::before {
  -webkit-transform: rotate(135deg);
     -moz-transform: rotate(135deg);
      -ms-transform: rotate(135deg);
       -o-transform: rotate(135deg);
          transform: rotate(135deg); }
.cd-search-trigger.search-is-visible span::after {
  -webkit-transform: rotate(45deg);
     -moz-transform: rotate(45deg);
      -ms-transform: rotate(45deg);
       -o-transform: rotate(45deg);
          transform: rotate(45deg); }

.cd-nav-trigger:hover {
  color: transparent; }
.cd-nav-trigger span, .cd-nav-trigger span::before, .cd-nav-trigger span::after {
  /* hamburger icon in CSS */
  position: absolute;
  display: inline-block;
  height: 3px;
  width: 24px;
  background: #455652; }
.cd-nav-trigger span {
  /* line in the center */
  position: absolute;
  top: 50%;
  right: 10px;
  margin-top: -2px;
  -webkit-transition: background 0.3s 0.3s;
     -moz-transition: background 0.3s 0.3s;
       -o-transition: background 0.3s 0.3s;
          transition: background 0.3s 0.3s; }
.cd-nav-trigger span::before, .cd-nav-trigger span::after {
  /* other 2 lines */
  content: '';
  right: 0;
  /* Force Hardware Acceleration in WebKit */
  -webkit-transform: translateZ(0);
     -moz-transform: translateZ(0);
          transform: translateZ(0);
  -webkit-backface-visibility: hidden;
     -moz-backface-visibility: hidden;
          backface-visibility: hidden;
  -webkit-transform-origin: 0% 50%;
     -moz-transform-origin: 0% 50%;
      -ms-transform-origin: 0% 50%;
       -o-transform-origin: 0% 50%;
          transform-origin: 0% 50%;
  -webkit-transition: -webkit-transform 0.3s 0.3s;
     -moz-transition: -moz-transform 0.3s 0.3s;
       -o-transition: -o-transform 0.3s 0.3s;
          transition: transform 0.3s 0.3s; }
.cd-nav-trigger span::before {
  /* menu icon top line */
  top: -6px; }
.cd-nav-trigger span::after {
  /* menu icon bottom line */
  top: 6px; }
.cd-nav-trigger.nav-is-visible span {
  /* hide line in the center */
  background: rgba(69, 86, 82, 0); }
.cd-nav-trigger.nav-is-visible span::before, .cd-nav-trigger.nav-is-visible span::after {
  /* keep visible other 2 lines */
  background: #455652; }
.cd-nav-trigger.nav-is-visible span::before {
  -webkit-transform: translateX(4px) translateY(-3px) rotate(45deg);
     -moz-transform: translateX(4px) translateY(-3px) rotate(45deg);
      -ms-transform: translateX(4px) translateY(-3px) rotate(45deg);
       -o-transform: translateX(4px) translateY(-3px) rotate(45deg);
          transform: translateX(4px) translateY(-3px) rotate(45deg); }
.cd-nav-trigger.nav-is-visible span::after {
  -webkit-transform: translateX(4px) translateY(2px) rotate(-45deg);
     -moz-transform: translateX(4px) translateY(2px) rotate(-45deg);
      -ms-transform: translateX(4px) translateY(2px) rotate(-45deg);
       -o-transform: translateX(4px) translateY(2px) rotate(-45deg);
          transform: translateX(4px) translateY(2px) rotate(-45deg); }

.cd-primary-nav {
  right: 0; }

.cd-primary-nav ul {
  right: 20px; }

.cd-primary-nav, .cd-primary-nav ul {
  position: fixed;
  top: 0;
  height: 100%;
  width: 260px;
  background: #455652;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  z-index: 1;
  /* Force Hardware Acceleration in WebKit */
  -webkit-transform: translateZ(0);
     -moz-transform: translateZ(0);
          transform: translateZ(0);
  -webkit-transform: translateX(0);
     -moz-transform: translateX(0);
      -ms-transform: translateX(0);
       -o-transform: translateX(0);
          transform: translateX(0);
  -webkit-transition: -webkit-transform 0.3s;
     -moz-transition: -moz-transform 0.3s;
       -o-transition: -o-transform 0.3s;
          transition: transform 0.3s; }
  .cd-primary-nav a, .cd-primary-nav ul a {
    text-decoration: none;
    display: block;
    font-size: 19px;
    font-size: 1.2rem;
    height: 50px;
    line-height: 50px;
    padding: 0 20px;
    color: #fff;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    border-bottom: 1px solid #50645f;
    -webkit-transform: translateZ(0);
       -moz-transform: translateZ(0);
            transform: translateZ(0);
    will-change: transform, opacity;
    -webkit-transition: -webkit-transform 0.3s, opacity 0.3s;
       -moz-transition: -moz-transform 0.3s, opacity 0.3s;
         -o-transition: -o-transform 0.3s, opacity 0.3s;
            transition: transform 0.3s, opacity 0.3s; }
    .cd-primary-nav a:hover, .cd-primary-nav ul a:hover {
      color: #6bd2b4; }
  .cd-primary-nav.is-hidden, .cd-primary-nav ul.is-hidden {
    /* secondary navigations hidden by default */
    -webkit-transform: translateX(100%);
       -moz-transform: translateX(100%);
        -ms-transform: translateX(100%);
         -o-transform: translateX(100%);
            transform: translateX(100%); }
  .cd-primary-nav.moves-out > li > a, .cd-primary-nav ul.moves-out > li > a {
    /* push the navigation items to the left - and lower down opacity - when secondary nav slides in */
    -webkit-transform: translateX(-100%);
       -moz-transform: translateX(-100%);
        -ms-transform: translateX(-100%);
         -o-transform: translateX(-100%);
            transform: translateX(-100%);
    opacity: 0;
    filter: alpha(opacity=0); }

.cd-primary-nav .see-all a {
  /* different style for the See all button on mobile and tablet */
  color: #267e64; }
.cd-primary-nav .cd-nav-gallery .cd-nav-item, .cd-primary-nav .cd-nav-icons .cd-nav-item {
  /* items with picture (or icon) and title */
  height: 50px;
  line-height: 50px; }
  .cd-primary-nav .cd-nav-gallery .cd-nav-item h3, .cd-primary-nav .cd-nav-icons .cd-nav-item h3 {
    overflow: hidden;
    text-overflow: ellipsis;
    font-size: 19px;
    font-size: 1.2rem;
    font-weight: normal;
    padding-left: 19px;
    padding-left: 1.2rem; }
.cd-primary-nav .cd-nav-gallery .cd-nav-item img {
  position: absolute;
  display: block;
  height: 40px;
  width: auto;
  left: 20px;
  top: 50%;
  margin-top: -20px; }
.cd-primary-nav .cd-nav-icons .cd-nav-item {
  padding-left: 75px; }
  .cd-primary-nav .cd-nav-icons .cd-nav-item p {
    color: #455652;
    font-size: 20px;
    font-size: 1.3rem;
    /* hide description on small devices */
    display: none; }
  .cd-primary-nav .cd-nav-icons .cd-nav-item::before {
    /* item icon */
    content: '';
    display: block;
    position: absolute;
    left: 20px;
    top: 50%;
    margin-top: -20px;
    width: 40px;
    height: 40px;
    background-repeat: no-repeat;
    background-position: center center;
    -moz-background-size: 40px 40px;
         background-size: 40px 40px; }
  .cd-primary-nav .cd-nav-icons .cd-nav-item.item-1::before {
    background-image: url("/images/line-icon-1.svg"); }
  .cd-primary-nav .cd-nav-icons .cd-nav-item.item-2::before {
    background-image: url("/images/line-icon-2.svg"); }
  .cd-primary-nav .cd-nav-icons .cd-nav-item.item-3::before {
    background-image: url("/images/line-icon-3.svg"); }
  .cd-primary-nav .cd-nav-icons .cd-nav-item.item-4::before {
    background-image: url("/images/line-icon-4.svg"); }
  .cd-primary-nav .cd-nav-icons .cd-nav-item.item-5::before {
    background-image: url("/images/line-icon-5.svg"); }
  .cd-primary-nav .cd-nav-icons .cd-nav-item.item-6::before {
    background-image: url("/images/line-icon-6.svg"); }
  .cd-primary-nav .cd-nav-icons .cd-nav-item.item-7::before {
    background-image: url("/images/line-icon-7.svg"); }
  .cd-primary-nav .cd-nav-icons .cd-nav-item.item-8::before {
    background-image: url("/images/line-icon-8.svg"); }

.has-children > a, .go-back a {
  position: relative; }
  .has-children > a::before, .has-children > a::after, .go-back a::before, .go-back a::after {
    /* arrow icon in CSS - for element with nested unordered lists */
    content: '';
    position: absolute;
    top: 50%;
    margin-top: -1px;
    display: inline-block;
    height: 2px;
    width: 10px;
    background: #5c726d;
    -webkit-backface-visibility: hidden;
       -moz-backface-visibility: hidden;
            backface-visibility: hidden; }
  .has-children > a::before, .go-back a::before {
    -webkit-transform: rotate(45deg);
       -moz-transform: rotate(45deg);
        -ms-transform: rotate(45deg);
         -o-transform: rotate(45deg);
            transform: rotate(45deg); }
  .has-children > a::after, .go-back a::after {
    -webkit-transform: rotate(-45deg);
       -moz-transform: rotate(-45deg);
        -ms-transform: rotate(-45deg);
         -o-transform: rotate(-45deg);
            transform: rotate(-45deg); }

.has-children > a {
  padding-right: 40px; }
  .has-children > a::before, .has-children > a::after {
    /* arrow goes on the right side - children navigation */
    right: 20px;
    -webkit-transform-origin: 9px 50%;
       -moz-transform-origin: 9px 50%;
        -ms-transform-origin: 9px 50%;
         -o-transform-origin: 9px 50%;
            transform-origin: 9px 50%; }

.cd-primary-nav .go-back a {
  padding-left: 40px; }
  .cd-primary-nav .go-back a::before, .cd-primary-nav .go-back a::after {
    /* arrow goes on the left side - go back button */
    left: 20px;
    -webkit-transform-origin: 1px 50%;
       -moz-transform-origin: 1px 50%;
        -ms-transform-origin: 1px 50%;
         -o-transform-origin: 1px 50%;
            transform-origin: 1px 50%; }

.cd-search {
  float: right;
  margin: 20px;
  margin: 1.25rem; }
  .cd-search form {
    position: relative; }
  .cd-search input[type="submit"] {
    background-image: url("/images/search-icon.png");
    background-repeat: no-repeat;
    background-color: transparent;
    display: inline-block;
    text-indent: -99999px;
    height: 22px;
    width: 22px;
    -webkit-appearance: none;
    border: 0;
    position: absolute;
    top: 6px;
    right: 3px;
    -moz-background-size: 75%;
         background-size: 75%; }
  .cd-search input[type="search"] {
    text-indent: 16px;
    text-indent: 1rem;
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
    border: 1px solid #ccc; }
    .cd-search input[type="search"]::-webkit-input-placeholder, .cd-search input[type="search"]::-moz-placeholder, .cd-search input[type="search"]:-ms-input-placeholder {
      color: #cacdcf; }
    .cd-search input[type="search"]:focus {
      outline: none; }
  .cd-search.is-visible {
    opacity: 1;
    filter: alpha(opacity=100);
    visibility: visible;
    -webkit-transition: opacity .3s 0s, visibility 0s 0s;
       -moz-transition: opacity .3s 0s, visibility 0s 0s;
         -o-transition: opacity .3s 0s, visibility 0s 0s;
            transition: opacity .3s 0s, visibility 0s 0s; }
  .nav-is-fixed .cd-search {
    position: fixed; }

.cd-overlay {
  /* shadow layer visible when navigation is active */
  position: fixed;
  z-index: 2;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
  cursor: pointer;
  visibility: hidden;
  opacity: 0;
  filter: alpha(opacity=0);
  -webkit-backface-visibility: hidden;
     -moz-backface-visibility: hidden;
          backface-visibility: hidden;
  -webkit-transition: opacity 0.3s 0s, visibility 0s 0.3s, -webkit-transform 0.3s 0s;
     -moz-transition: opacity 0.3s 0s, visibility 0s 0.3s, -moz-transform 0.3s 0s;
       -o-transition: opacity 0.3s 0s, visibility 0s 0.3s, -o-transform 0.3s 0s;
          transition: opacity 0.3s 0s, visibility 0s 0.3s, transform 0.3s 0s; }
  .cd-overlay.is-visible {
    opacity: 1;
    filter: alpha(opacity=100);
    visibility: visible;
    -webkit-transition: opacity 0.3s 0s, visibility 0s 0s, -webkit-transform 0.3s 0s;
       -moz-transition: opacity 0.3s 0s, visibility 0s 0s, -moz-transform 0.3s 0s;
         -o-transition: opacity 0.3s 0s, visibility 0s 0s, -o-transform 0.3s 0s;
            transition: opacity 0.3s 0s, visibility 0s 0s, transform 0.3s 0s; }

/* --------------------------------
 *
 *support for no js
 *
 *-------------------------------- */
.no-js .cd-primary-nav {
  position: relative;
  height: auto;
  width: 100%;
  overflow: visible;
  visibility: visible;
  z-index: 2; }

.no-js .cd-search {
  position: relative;
  top: 0;
  opacity: 1;
  filter: alpha(opacity=100);
  visibility: visible; }

.nav-footer {
  padding: 30px 20px 20px;
  text-align: left; }
  .nav-footer__heading {
    font-family: News Cycle, sans-serif;
    font-size: 16px;
    font-size: 1rem;
    font-weight: 700;
    margin-bottom: 16px;
    margin-bottom: 1rem; }
    .nav-footer__heading a {
      color: #333; }
      .nav-footer__heading a:hover {
        color: #267e64; }
  .nav-footer__link {
    font-size: 14px; }
  .nav-footer__box {
    padding: 0 10px;
    vertical-align: top; }
  .nav-footer__box-narrow {
    padding: 0 10px;
    vertical-align: top; }
  .nav-footer__button {
    border-width: 1px;
    color: #267e64;
    font-size: 14px;
    font-size: .9rem;
    margin-bottom: 16px;
    margin-bottom: 1rem;
    padding: 8px 16px;
    padding: .5rem 1rem;
    width: 100%; }
  .nav-footer__sub-links {
    font-size: 14px; }
    .nav-footer__sub-links li:nth-child(1) {
      font-family: News Cycle, sans-serif;
      font-size: 16px;
      font-size: 1rem;
      font-weight: 700;
      margin-bottom: 8px;
      margin-bottom: .5rem; }
      .nav-footer__sub-links li:nth-child(1) a {
        color: #333; }
        .nav-footer__sub-links li:nth-child(1) a:hover {
          color: #267e64; }

.banner-tall {
  background-image: url(images/index_hero.jpg);
  background-position: center;
  -moz-background-size: cover;
       background-size: cover;
  height: 200px;
  position: relative; }
  .banner-tall__headline {
    bottom: 48px;
    bottom: 3rem;
    color: #fff;
    font-family: serif;
    font-size: 64px;
    font-size: 4rem;
    font-weight: 800;
    left: 32px;
    left: 2rem;
    line-height: 1;
    position: absolute;
    margin: 0 0 16px 16px;
    margin: 0 0 1rem 1rem;
    text-shadow: 2px 2px 2px #333; }
    .banner-tall__headline sup {
      font-size: 28px;
      font-size: 1.75rem; }

.banner-standard {
  background: #267e64;
  color: #fff;
  display: table;
  height: auto; }
  .banner-standard img {
    display: block; }
  .banner-standard__box {
    padding: 16px 32px;
    padding: 1rem 2rem; }
  .banner-standard__heading {
    color: #fff; }
  .banner-standard__media {
    background-color: #eceee6; }

.banner-panorama {
  background-image: url(../images/trees.jpg);
  background-position: center;
  -moz-background-size: cover;
       background-size: cover;
  height: 255px; }

.card-diptic {
  display: table;
  border-top: 1px solid #ccc;
  border-bottom: 1px solid #ccc; }
  .card-diptic__box {
    display: table-cell;
    vertical-align: middle;
    padding: 32px 16px;
    padding: 2rem 1rem; }
  .card-diptic__heading {
    text-align: center; }
  .card-diptic__media {
    margin-bottom: 32px;
    margin-bottom: 2rem; }
  .card-diptic__text {
    text-align: center;
    margin-bottom: 32px;
    margin-bottom: 2rem; }
  .card-diptic ul {
    list-style: none;
    text-align: center; }
    .card-diptic ul li {
      display: inline-block;
      padding: 8px;
      padding: .5rem;
      width: 47%; }
  .card-diptic__link {
    color: #267e64;
    display: inline-block;
    font-family: Playfair Display, serif;
    padding: 0 6px;
    padding: 0 .4rem;
    vertical-align: middle; }
    .card-diptic__link:hover {
      color: #455652; }

.card-bio {
  padding-bottom: 32px;
  padding-bottom: 2rem; }
  .card-bio__media {
    vertical-align: top; }
  .card-bio__box {
    padding-left: 32px;
    padding-left: 2rem;
    padding-top: 0;
    vertical-align: top; }
  .card-bio__heading {
    color: #267e64;
    font-family: Playfair Display, serif;
    font-size: 32px;
    font-size: 2rem;
    font-weight: 400;
    line-height: 1;
    margin-bottom: 16px;
    margin-bottom: 1rem; }
  .card-bio__subtitle {
    color: #7f7e7e;
    margin-bottom: 8px; }
    .card-bio__subtitle h3 {
      display: inline-block; }
    .card-bio__subtitle a {
      color: #267e64;
      margin-left: 10px; }
      .card-bio__subtitle a i {
        border: 1px solid #267e64;
        padding: 2px; }
  .card-bio__text * + * {
    margin-top: 16px;
    margin-top: 1rem; }

.card-article__box {
  -moz-box-shadow: 0 1px 0 #267e64;
       box-shadow: 0 1px 0 #267e64;
  display: none;
  padding-top: 24px;
  padding-bottom: 24px; }
  .card-article__box * + * {
    margin-top: 16px;
    margin-top: 1rem; }
.card-article a:hover {
  text-decoration: none; }
.card-article h2 {
  color: #267e64;
  font-family: Playfair Display, serif;
  font-size: 32px;
  font-size: 2rem;
  font-weight: 400;
  line-height: 1; }
  .card-article h2:hover {
    color: #455652; }
.card-article small {
  color: #666;
  font-size: 12px;
  font-size: .75rem; }

.loader__nav {
  display: table-cell;
  padding-top: 20px;
  padding-top: 1.25rem; }

.card-triptic {
  display: table;
  border-top: 1px solid #ccc;
  border-bottom: 1px solid #ccc; }
  .card-triptic__box {
    padding: 32px;
    padding: 2rem;
    vertical-align: top; }
  .card-triptic__media {
    height: 150px;
    overflow: hidden;
    margin-bottom: 32px;
    margin-bottom: 2rem; }
  .card-triptic__heading-link {
    color: #267e64;
    font-family: Playfair Display, serif;
    font-size: 22px;
    font-size: 1.375rem;
    font-weight: 400;
    line-height: 1;
    color: #267e64;
    display: inline-block;
    text-align: center; }
    .card-triptic__heading-link:hover {
      color: #455652; }
  .card-triptic__text {
    text-align: center; }

.cta-contact {
  background-color: #eceee6;
  display: table;
  width: 100%; }
  .cta-contact__box {
    padding: 32px;
    padding: 2rem; }
  .cta-contact__box:nth-child(2) {
    padding: 32px 0;
    padding: 2rem 0; }
  .cta-contact__text {
    margin: 0;
    padding: 0 56px 0 32px;
    padding: 0 3.5rem 0 2rem; }
  .cta-contact__button {
    display: inline-block;
    margin: 0 32px 0 0;
    margin: 0 2rem 0 0; }

.cta-teaser {
  display: table;
  padding: 16px 32px;
  padding: 1rem 2rem; }
  .cta-teaser video {
    width: 100%;
    height: 100%; }
  .cta-teaser__box {
    padding-right: 32px;
    padding-right: 2rem; }
  .cta-teaser__text {
    margin-bottom: 32px;
    margin-bottom: 2rem; }
  .cta-teaser__media {
    height: 300px;
    overflow: hidden; }

.cta-center {
  padding: 32px;
  padding: 2rem;
  text-align: center; }
  .cta-center__text {
    padding: 0 128px;
    padding: 0 8rem;
    margin-bottom: 32px;
    margin-bottom: 2rem; }

.cta-subscribe {
  background-color: #267e64;
  color: #fff;
  padding-top: 24px;
  padding-bottom: 36px; }
  .cta-subscribe__heading {
    color: #fff;
    text-align: center; }
  .cta-subscribe__box {
    display: table;
    margin: 0 auto;
    width: 75%; }
  .cta-subscribe__input {
    padding: 14px;
    padding: .9rem;
    width: 100%; }
  .cta-subscribe__button {
    border: 1px solid #fff;
    color: #fff;
    font-size: 24px;
    font-size: 1.5rem;
    margin-left: 16px;
    margin-left: 1rem;
    width: 100%;
    -webkit-transition: all .2s ease;
       -moz-transition: all .2s ease;
         -o-transition: all .2s ease;
            transition: all .2s ease; }
    .cta-subscribe__button:hover {
      /*These will transition on hover */
      background-color: #fff;
      color: #267e64; }
  .cta-subscribe__message {
    display: none;
    padding-top: 40px;
    padding-top: 2.5rem; }
  .cta-subscribe__error {
    display: none;
    padding-top: 16px;
    padding-top: 1rem; }
    .cta-subscribe__error-msg {
      text-align: center; }

.cta-sidebar {
  padding: 16px 0 0 80px;
  padding: 1rem 0 0 5rem;
  vertical-align: top; }
  .cta-sidebar__heading {
    font-size: 20px;
    font-size: 1.25rem;
    margin-top: 12px;
    margin-bottom: 12px; }
  .cta-sidebar__button {
    margin-top: 16px;
    margin-top: 1rem; }

.cta-sidebar__button + .cta-sidebar__heading, .cta-sidebar__text + .cta-sidebar__heading {
  margin-top: 32px;
  margin-top: 2rem; }

.cta-social {
  padding-left: 16px;
  padding-left: 1rem; }
  .cta-social .icon {
    fill: #267e64; }
    .cta-social .icon:hover {
      fill: #ccc; }
  .cta-social a:hover {
    text-decoration: none; }

footer {
  padding-bottom: 80px;
  padding-bottom: 5rem; }

.footer-copyright {
  border-top: 1px solid #e5e6e7;
  display: table;
  padding: 32px;
  padding: 2rem;
  width: 100%; }
  .footer-copyright__logo-box .logo {
    width: 500px; }
  .footer-copyright__box {
    text-align: right; }
    .footer-copyright__box small {
      display: block;
      font-size: 14px;
      padding-right: 8px;
      padding-right: .5rem; }
    .footer-copyright__box .nav-minor li a {
      font-size: 14px; }

.footer-disclaimer {
  text-align: center;
  width: 100%; }
  .footer-disclaimer__box {
    border: 1px solid #455652;
    display: inline-block;
    text-align: center;
    padding: 20px;
    margin: 50px auto 10px; }
  .footer-disclaimer ul {
    display: table;
    margin: 0 auto; }
    .footer-disclaimer ul li {
      display: table-cell;
      border: 1px solid #CCCCCC;
      border-right: none;
      border-left-style: dashed;
      margin: 0 10px;
      padding: 8px;
      padding: .5rem; }
      .footer-disclaimer ul li:last-child {
        border-right: 1px #CCC solid; }
      .footer-disclaimer ul li:first-child {
        border-left-style: solid; }
  .footer-disclaimer h6, .footer-disclaimer p, .footer-disclaimer ul {
    font-size: 14px;
    margin-bottom: 16px;
    margin-bottom: 1rem; }

@-webkit-keyframes fadeIn {
  from {
    opacity: 0;
    filter: alpha(opacity=0); }

  to {
    opacity: 1;
    filter: alpha(opacity=100); } }

@-moz-keyframes fadeIn {
  from {
    opacity: 0;
    filter: alpha(opacity=0); }

  to {
    opacity: 1;
    filter: alpha(opacity=100); } }

@-o-keyframes fadeIn {
  from {
    opacity: 0;
    filter: alpha(opacity=0); }

  to {
    opacity: 1;
    filter: alpha(opacity=100); } }

@keyframes fadeIn {
  from {
    opacity: 0;
    filter: alpha(opacity=0); }

  to {
    opacity: 1;
    filter: alpha(opacity=100); } }

.header__logo-box {
  background-color: #fff;
  border-left: 1px solid #ccc;
  border-right: 1px solid #ccc;
  margin: 0 auto;
  max-width: 1200px; }

.no-cssanimations .header__logo-box {
  padding-top: 0; }

.header__logo {
  background: #fff; }

.logo {
  display: block;
  padding: 0px 0 0px 32px;
  padding: 0rem 0 0rem 2rem;
  width: 600px; }

.no-cssanimations .logo {
  height: 68px;
  padding: 0 16px;
  padding: 0 1rem; }

svg path, svg polygon {
  fill: #267e64; }
svg:hover path, svg:hover polygon {
  opacity: .7;
  filter: alpha(opacity=70);
  -webkit-transition: fill 0.2s ease;
     -moz-transition: fill 0.2s ease;
       -o-transition: fill 0.2s ease;
          transition: fill 0.2s ease;
  fill-opacity: 0.7; }

.logo__stretched {
  display: block; }

.logo__stacked {
  display: none; }

.no-cssanimations .logo__globe path {
  fill: #267e64;
  opacity: 1;
  filter: alpha(opacity=100); }

.main-standard, .main-news, .main-post {
  display: table;
  padding: 16px 32px;
  padding: 1rem 2rem; }

.main-standard {
  padding-bottom: 80px;
  padding-bottom: 5rem; }
  .main-standard__content.col-7-12 {
    padding-top: 24px;
    padding-top: 1.5rem;
    vertical-align: top; }
  .main-standard__text * + * {
    margin-top: 16px;
    margin-top: 1rem; }
  .main-standard__text h2 {
    color: #267e64;
    font-family: Playfair Display, serif;
    font-size: 32px;
    font-size: 2rem;
    font-weight: 400;
    line-height: 1;
    padding-top: 24px;
    padding-bottom: 0px; }
  .main-standard__text ul {
    padding-left: 32px;
    padding-left: 2rem;
    list-style: disc; }
    .main-standard__text ul li {
      margin-top: 8px;
      margin-top: 0.5rem; }
  .main-standard__text ol {
    padding-left: 32px;
    padding-left: 2rem; }
  .main-standard__text img {
    height: auto;
    width: 100%; }
    .main-standard__text img.auto {
      width: auto; }

.main-bios {
  display: table;
  padding: 32px;
  padding: 2rem; }

.city-column {
  width: 135px; }

.address-column {
  width: 335px; }

.location-phone {
  color: #455652; }
  .location-phone:hover {
    color: #267e64; }
.main-post__text * + * {
  margin-top: 16px;
  margin-top: 1rem; }
.main-post__text h2 {
  color: #267e64;
  font-family: Playfair Display, serif;
  font-size: 32px;
  font-size: 2rem;
  font-weight: 400;
  line-height: 1; }
.main-post__text h3 {
  color: #455652;
  font-family: Playfair Display, serif;
  font-size: 20px;
  font-size: 1.25rem;
  font-weight: 700;
  line-height: 1;
  text-transform: uppercase;
  margin-top: 36px;
  margin-bottom: 0px; }
.main-post__text figcaption {
  color: #ccc;
  font-size: 12px;
  font-size: .75rem;
  margin-top: 0; }
.main-post__text blockquote {
  color: #267e64;
  font-family: Playfair Display, serif;
  font-size: 24px;
  font-size: 1.5rem;
  font-style: italic;
  font-weight: 700;
  margin-top: 36px;
  margin-bottom: 36px; }

.breadcrumb {
  padding-bottom: 24px;
  padding-bottom: 1.5rem;
  font-size: 14px; }
  .breadcrumb a {
    color: #267e64; }
    .breadcrumb a:hover {
      color: #455652; }
  .breadcrumb span {
    color: #7f7e7e; }

.form-standard {
  margin-top: 32px;
  margin-top: 2rem; }
  .form-standard input, .form-standard input[type="email"], .form-standard input[type="number"], .form-standard input[type="password"], .form-standard input[type="search"], .form-standard input[type="tel"], .form-standard input[type="text"], .form-standard input[type="url"], .form-standard input[type="color"], .form-standard input[type="date"], .form-standard input[type="name"], .form-standard input[type="datetime"], .form-standard input[type="datetime-local"], .form-standard input[type="month"], .form-standard input[type="time"], .form-standard input[type="week"], .form-standard textarea {
    color: #333;
    border: 1px solid #ccc;
    border-box-sizing: content-box;
    -moz-border-radius: 0;
         border-radius: 0;
    border-radius-font-size: 1rem;
    padding: 16px;
    padding: 1rem;
    display: block;
    width: 100%; }
  .form-standard label {
    display: block; }
  .form-standard input[type="button"], .form-standard input[type="reset"], .form-standard input[type="submit"] {
    display: block; }
  .form-standard__checkbox {
    display: inline-block;
    float: left !important;
    width: auto !important; }
  .form-standard__checkbox + label {
    display: inline-block;
    float: left !important;
    margin: 10px 10px 20px 10px !important; }
  .form-standard .selectbox {
    background: #fff;
    -moz-border-radius: 0;
         border-radius: 0;
    cursor: pointer;
    position: relative;
    height: 48px; }
    .form-standard .selectbox::after {
      color: #ccc;
      content: '▾';
      position: absolute;
      top: 16px;
      top: 1rem;
      right: 8px;
      right: .5rem;
      width: 16px;
      width: 1rem;
      height: 16px;
      height: 1rem; }
  .form-standard select {
    background: #fff;
    -moz-box-shadow: none;
         box-shadow: none;
    -moz-border-radius: 0;
         border-radius: 0;
    border: 1px solid #ccc;
    color: #7f7e7e;
    cursor: pointer;
    display: block;
    font-size: 16px;
    font-size: 1rem;
    height: 60px;
    position: relative;
    padding-left: 16px;
    padding-left: 1rem;
    width: 100%;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none; }

.contact-us__button {
  background-color: #eceee6;
  max-width: 183px;
  clear: both; }

.no-cssgradients .selectbox::after {
  z-index: -3; }


@media (max-width: 480px){
  sup{
    top: -.25em; }
  .nav-minor__container{
    text-align: center; }
  .nav-minor li:last-child a{
    margin-right: 0; }
  .nav-minor__link{
    font-size: .8rem; }
  .cd-search{
    float: none;
    margin: 1rem auto 0;
    width: 100%; }
  .banner-tall{
    background-image: url(images/index_hero-2.jpg);
    height: 265px; } }


@media (max-width: 768px){
  [class*='col-']{
    display: inline-block;
    text-align: center; }
  .col-2-12{
    width: 100%; }
  .col-3-12{
    width: 100%; }
  .col-4-12{
    width: 100%; }
  .col-5-12{
    width: 100%; }
  .col-6-12{
    width: 100%; }
  .col-7-12{
    width: 100%; }
  .col-8-12{
    width: 100%; }
  .col-9-12{
    width: 100%; }
  .col-10-12{
    width: 100%; }
  .col-11-12{
    width: 100%; }
  .cd-primary-nav ul{
    right: 0; }
  .cd-search input[type="search"]{
    width: 100%; }
  .nav-footer{
    display: none; }
  .banner-tall__headline{
    position: static;
    font-size: 2rem;
    padding: 2rem; }
  .banner-tall__headline sup{
    top: -0.25em; }
  .card-diptic{
    -webkit-flex-flow: column;
        -ms-flex-flow: column;
            flex-flow: column; }
  .card-bio{
    border-bottom: 1px solid #e5e6e7;
    margin-bottom: 2rem; }
  .card-bio__media{
    margin-bottom: 1rem;
    text-align: center; }
  .card-bio__media img{
    display: inline-block;
    width: 33%; }
  .card-bio__box{
    padding: 0; }
  .card-bio__text{
    text-align: left; }
  .cta-contact__text{
    padding: 0; }
  .cta-contact__button{
    margin: 0; }
  .cta-teaser{
    -webkit-flex-flow: column;
        -ms-flex-flow: column;
            flex-flow: column; }
  .cta-teaser__box{
    padding: 0; }
  .cta-teaser__media{
    height: auto;
    margin-top: 2rem; }
  .cta-center__text{
    padding: 0; }
  .cta-subscribe__button{
    margin: 1rem 0 0 0; }
  .cta-sidebar{
    padding: 3rem 2rem; }
  footer{
    padding: 0; }
  .footer-copyright{
    padding: 2rem 0 0 0;
    display: block; }
  .footer-copyright__logo-box .logo{
    display: inline-block;
    width: auto; }
  .footer-copyright__logo-box .logo .logo__stacked{
    display: inline-block;
    width: 250px; }
  .main-standard__content{
    text-align: left; }
  .main-post__text{
    text-align: left; } }


@media (max-width: 700px){
  tr{
    margin-top: 0 !important; }
  tr:first-child{
    border-top: 1px solid #e5e6e7; }
  td{
    margin-top: 0 !important;
    position: relative;
    padding-left: 40%; }
  td:before{
    position: absolute;
    top: 6px;
    left: 6px;
    width: 40%;
    padding-right: 10px;
    white-space: nowrap;
    font-weight: 600; }
  td:nth-of-type(1):before{
    content: "City: "; }
  td:nth-of-type(2):before{
    content: "Address: "; }
  td:nth-of-type(3):before{
    content: "Phone: "; }
  thead tr{
    position: absolute;
    top: -9999px;
    left: -9999px; }
  table, thead, tbody, th, td, tr{
    display: block; } }


@media (max-width: 1022px){
  body.nav-on-left.overflow-hidden{
    overflow: hidden; }
  .cd-main-content.nav-is-visible{
    -webkit-transform: translateX(-260px);
       -moz-transform: translateX(-260px);
        -ms-transform: translateX(-260px);
         -o-transform: translateX(-260px);
            transform: translateX(-260px); }
  .nav-on-left .cd-main-content.nav-is-visible{
    -webkit-transform: translateX(260px);
       -moz-transform: translateX(260px);
        -ms-transform: translateX(260px);
         -o-transform: translateX(260px);
            transform: translateX(260px); }
  .cd-main-header.nav-is-visible{
    -webkit-transform: translateX(0);
       -moz-transform: translateX(0);
        -ms-transform: translateX(0);
         -o-transform: translateX(0);
            transform: translateX(0); }
  .nav-on-left .cd-main-header.nav-is-visible{
    -webkit-transform: translateX(260px);
       -moz-transform: translateX(260px);
        -ms-transform: translateX(260px);
         -o-transform: translateX(260px);
            transform: translateX(260px); }
  .nav-on-left .cd-logo{
    left: auto;
    right: 5%; }
  .nav-on-left .cd-header-buttons{
    right: auto;
    left: 5%; }
  .nav-on-left .cd-header-buttons li{
    float: right; }
  .nav-on-left .cd-primary-nav, .nav-on-left .cd-primary-nav ul{
    right: auto;
    left: 0; }
  .cd-primary-nav .cd-nav-gallery .cd-nav-item img{
    display: none; }
  .cd-primary-nav{

    /* by default .cd-primary-nav is hidden - trick for iOS devices where you can see the navigation if you pull down */
    visibility: hidden;
    -webkit-transition: visibility 0s 0.3s;
       -moz-transition: visibility 0s 0.3s;
         -o-transition: visibility 0s 0.3s;
            transition: visibility 0s 0.3s; }
  .cd-primary-nav.nav-is-visible{
    visibility: visible;
    -webkit-transition: visibility 0s 0s;
       -moz-transition: visibility 0s 0s;
         -o-transition: visibility 0s 0s;
            transition: visibility 0s 0s; }
  .cd-overlay.is-visible{
    -webkit-transform: translateX(0);
       -moz-transform: translateX(0);
        -ms-transform: translateX(0);
         -o-transform: translateX(0);
            transform: translateX(0); }
  .nav-on-left .cd-overlay.is-visible{
    -webkit-transform: translateX(260px);
       -moz-transform: translateX(260px);
        -ms-transform: translateX(260px);
         -o-transform: translateX(260px);
            transform: translateX(260px); }
  .cd-overlay.is-visible.search-is-visible, .nav-on-left .cd-overlay.is-visible.search-is-visible{
    -webkit-transform: translateX(0);
       -moz-transform: translateX(0);
        -ms-transform: translateX(0);
         -o-transform: translateX(0);
            transform: translateX(0); } }


@media (min-width: 1024px){
  .cd-main-header{
    height: 80px; }
  .cd-main-header:after{
    content: "";
    display: table;
    clear: both; }
  .cd-logo{
    top: 26px;
    left: 4em; }
  .cd-header-buttons{
    top: 1rem;
    right: 1rem; }
  .cd-nav-trigger{
    display: none; }
  .cd-primary-nav{
    position: static;
    padding: 0 50px 0 0;
    margin-left: 20px;
    height: auto;
    width: 100%;
    overflow: visible;
    background: transparent; }
  .cd-primary-nav:after{
    content: "";
    display: table;
    clear: both; }
  .cd-primary-nav.moves-out > li > a{

    /* reset mobile style */
    -webkit-transform: translateX(0);
       -moz-transform: translateX(0);
        -ms-transform: translateX(0);
         -o-transform: translateX(0);
            transform: translateX(0);
    opacity: 1;
    filter: alpha(opacity=100); }
  .cd-primary-nav ul{
    position: static;
    height: auto;
    width: auto;
    background: transparent;
    overflow: visible;
    text-align: left;
    z-index: 3; }
  .cd-primary-nav ul.is-hidden{

    /* reset mobile style */
    -webkit-transform: translateX(0);
       -moz-transform: translateX(0);
        -ms-transform: translateX(0);
         -o-transform: translateX(0);
            transform: translateX(0); }
  .cd-primary-nav ul.moves-out > li > a{

    /* reset mobile style */
    -webkit-transform: translateX(0);
       -moz-transform: translateX(0);
        -ms-transform: translateX(0);
         -o-transform: translateX(0);
            transform: translateX(0);
    opacity: 1;
    filter: alpha(opacity=100); }
  .cd-primary-nav > li{
    display: inline-block;
    margin-left: .5rem; }
  .cd-primary-nav > li > a{

    /* main navigation buttons style */
    position: relative;
    display: inline-block;
    height: 80px;
    line-height: 80px;
    padding: 0;
    color: #455652;
    overflow: visible;
    border-bottom: none;
    -webkit-transition: color 0.3s, box-shadow 0.3s;
       -moz-transition: color 0.3s, -moz-box-shadow 0.3s;
         -o-transition: color 0.3s, box-shadow 0.3s;
            transition: color 0.3s, box-shadow 0.3s; }
  .cd-primary-nav > li > a:hover{
    color: #267e64;
    text-decoration: none; }
  .cd-primary-nav > li > a.selected{
    color: #267e64;
    -moz-box-shadow: inset 0 -2px 0 #267e64;
         box-shadow: inset 0 -2px 0 #267e64; }
  .cd-primary-nav .go-back, .cd-primary-nav .see-all{
    display: none; }
  .cd-primary-nav .cd-secondary-nav, .cd-primary-nav .cd-nav-gallery, .cd-primary-nav .cd-nav-icons{

    /* dropdown menu style */
    position: absolute;
    top: 80px;
    width: 100%;
    background: #fff;
    padding: 2rem;
    -moz-box-shadow: inset 0 1px 0 #e5e6e7, 0 3px 6px rgba(0, 0, 0, 0.05);
         box-shadow: inset 0 1px 0 #e5e6e7, 0 3px 6px rgba(0, 0, 0, 0.05);
    -webkit-transform: translateX(0);
       -moz-transform: translateX(0);
        -ms-transform: translateX(0);
         -o-transform: translateX(0);
            transform: translateX(0);
    -webkit-transition: opacity .3s 0s, visibility 0s 0s;
       -moz-transition: opacity .3s 0s, visibility 0s 0s;
         -o-transition: opacity .3s 0s, visibility 0s 0s;
            transition: opacity .3s 0s, visibility 0s 0s; }
  .cd-primary-nav .cd-secondary-nav:after, .cd-primary-nav .cd-nav-gallery:after, .cd-primary-nav .cd-nav-icons:after{
    content: "";
    display: table;
    clear: both; }
  .cd-primary-nav .cd-secondary-nav.is-hidden, .cd-primary-nav .cd-nav-gallery.is-hidden, .cd-primary-nav .cd-nav-icons.is-hidden{
    opacity: 0;
    filter: alpha(opacity=0);
    visibility: hidden;
    -webkit-transition: opacity .3s 0s, visibility 0s .3s;
       -moz-transition: opacity .3s 0s, visibility 0s .3s;
         -o-transition: opacity .3s 0s, visibility 0s .3s;
            transition: opacity .3s 0s, visibility 0s .3s; }
  .cd-primary-nav .cd-secondary-nav > .see-all, .cd-primary-nav .cd-nav-gallery > .see-all, .cd-primary-nav .cd-nav-icons > .see-all{

    /* this is the BIG See all button at the bottom of the dropdown menu */
    display: block;
    position: absolute;
    left: 0;
    bottom: 0;
    height: 50px;
    width: 100%;
    overflow: hidden;

    /* reset some inherited style */
    margin: 0;
    padding: 0; }
  .cd-primary-nav .cd-secondary-nav > .see-all a, .cd-primary-nav .cd-nav-gallery > .see-all a, .cd-primary-nav .cd-nav-icons > .see-all a{
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    font-size: 2.2rem;
    font-weight: bold;
    text-align: center;
    line-height: 50px;
    border-top: 1px solid #e5e6e7;

    /* reset some inherited style */
    border-bottom: none;
    margin: 0;
    padding: 0;
    -webkit-transition: color 0.2s, background 0.2s, border 0.2s;
       -moz-transition: color 0.2s, background 0.2s, border 0.2s;
         -o-transition: color 0.2s, background 0.2s, border 0.2s;
            transition: color 0.2s, background 0.2s, border 0.2s; }
  .cd-primary-nav .cd-secondary-nav > .see-all a:hover, .cd-primary-nav .cd-nav-gallery > .see-all a:hover, .cd-primary-nav .cd-nav-icons > .see-all a:hover{
    background: #455652;
    border-color: #455652;
    color: #fff; }
  .cd-primary-nav .cd-secondary-nav > li{

    /* change the height according to your needs - you can even set height: auto */
    height: 340px;

    /* here you set the number of columns - use width percentage */
    width: 23%;
    float: left;
    margin-right: 2.66%;
    border-right: 1px solid #e5e6e7;
    overflow: hidden;
    overflow-x: hidden;
    overflow-y: auto;
    -webkit-overflow-scrolling: touch; }
  .cd-primary-nav .cd-secondary-nav > li:nth-child(4n+2){

    /* +2 because we have 2 list items with display:none */
    margin-right: 0;
    border-right: none; }
  .cd-primary-nav .cd-secondary-nav > li > a{

    /* secondary nav title */
    color: #267e64;
    font-weight: bold;
    font-size: 1.6rem;
    margin-bottom: .6em; }
  .cd-primary-nav .cd-secondary-nav a{
    height: 30px;
    line-height: 30px;
    padding: 0 18% 0 0;
    color: #455652;
    border-bottom: none;
    font-size: 1.4rem; }
  .cd-primary-nav .cd-secondary-nav a:hover{
    color: #267e64; }
  .cd-primary-nav .cd-secondary-nav ul{

    /* Force Hardware Acceleration in WebKit */
    -webkit-transform: translateZ(0);
       -moz-transform: translateZ(0);
            transform: translateZ(0); }
  .cd-primary-nav .cd-secondary-nav ul ul{

    /* tertiary navigation */
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%; }
  .cd-primary-nav .cd-secondary-nav ul ul.is-hidden{
    -webkit-transform: translateX(100%);
       -moz-transform: translateX(100%);
        -ms-transform: translateX(100%);
         -o-transform: translateX(100%);
            transform: translateX(100%); }
  .cd-primary-nav .cd-secondary-nav ul ul .go-back{
    display: block; }
  .cd-primary-nav .cd-secondary-nav ul ul .go-back a{
    color: transparent; }
  .cd-primary-nav .cd-secondary-nav ul ul .see-all{
    display: block; }
  .cd-primary-nav .cd-secondary-nav .moves-out > li > a{

    /* push the navigation items to the left - and lower down opacity - when tertiary nav slides in */
    -webkit-transform: translateX(-100%);
       -moz-transform: translateX(-100%);
        -ms-transform: translateX(-100%);
         -o-transform: translateX(-100%);
            transform: translateX(-100%); }
  .cd-primary-nav .cd-nav-gallery{
    -moz-box-shadow: 0 5px 5px rgba(100, 100, 100, 0.3);
         box-shadow: 0 5px 5px rgba(100, 100, 100, 0.3); }
  .cd-primary-nav .cd-nav-gallery li{

    /* set here number of columns - use width percentage */
    float: left;
    width: 25%;
    padding: 1rem; }
  .cd-primary-nav .cd-nav-gallery li:nth-child(4n+2){

    /* +2 because we have two additional list items with display:none */ }
  .cd-primary-nav .cd-nav-gallery .cd-nav-item{
    border-bottom: none;
    padding: 0;
    height: auto;
    line-height: 1.2; }
  .cd-primary-nav .cd-nav-gallery .cd-nav-item img{
    position: static;
    margin-top: 0;
    height: auto;
    width: 100%;
    margin-bottom: .6rem; }
  .cd-primary-nav .cd-nav-gallery .cd-nav-item h3{
    color: #267e64;
    font-size: .9rem;
    padding: 0 .4rem;
    font-weight: normal; }
  .cd-primary-nav .cd-nav-icons li{

    /* set here number of columns - use width percentage */
    width: 32%;
    float: left;
    margin: 0 2% 20px 0; }
  .cd-primary-nav .cd-nav-icons li:nth-child(3n+2){

    /* +2 because we have two additional list items with display:none */
    margin-right: 0; }
  .cd-primary-nav .cd-nav-icons .cd-nav-item{
    border-bottom: none;
    height: 50px;
    line-height: 1.2;
    padding: 24px 0 0 85px; }
  .cd-primary-nav .cd-nav-icons .cd-nav-item:hover{
    background: #fafafb; }
  .cd-primary-nav .cd-nav-icons .cd-nav-item h3{
    color: #267e64;
    font-weight: bold; }
  .cd-primary-nav .cd-nav-icons .cd-nav-item p{
    display: block; }
  .cd-primary-nav .cd-nav-icons .cd-nav-item::before{
    left: 25px; }
  .has-children > a::before, .has-children > a::after, .go-back a::before, .go-back a::after{
    background: #cacdcf; }
  .has-children > a:hover::before, .has-children > a:hover::after, .go-back a:hover::before, .go-back a:hover::after{
    background: #267e64; }
  .has-children > a::before, .has-children > a::after{
    right: 15%; }
  .cd-primary-nav > .has-children > a{

    /* main navigation arrows on larger devices */
    padding-right: 30px !important; }
  .cd-primary-nav > .has-children > a::before, .cd-primary-nav > .has-children > a::after{
    width: 9px;
    -webkit-transform-origin: 50% 50%;
       -moz-transform-origin: 50% 50%;
        -ms-transform-origin: 50% 50%;
         -o-transform-origin: 50% 50%;
            transform-origin: 50% 50%;
    background: #cacdcf;
    -webkit-backface-visibility: hidden;
       -moz-backface-visibility: hidden;
            backface-visibility: hidden;
    -webkit-transition: width 0.3s, -webkit-transform 0.3s;
       -moz-transition: width 0.3s, -moz-transform 0.3s;
         -o-transition: width 0.3s, -o-transform 0.3s;
            transition: width 0.3s, transform 0.3s; }
  .cd-primary-nav > .has-children > a::before{
    right: 12px; }
  .cd-primary-nav > .has-children > a::after{
    right: 7px; }
  .cd-primary-nav > .has-children > a.selected::before, .cd-primary-nav > .has-children > a.selected::after{
    width: 14px; }
  .cd-primary-nav > .has-children > a.selected::before{
    -webkit-transform: translateX(5px) rotate(-45deg);
       -moz-transform: translateX(5px) rotate(-45deg);
        -ms-transform: translateX(5px) rotate(-45deg);
         -o-transform: translateX(5px) rotate(-45deg);
            transform: translateX(5px) rotate(-45deg); }
  .cd-primary-nav > .has-children > a.selected::after{
    -webkit-transform: rotate(45deg);
       -moz-transform: rotate(45deg);
        -ms-transform: rotate(45deg);
         -o-transform: rotate(45deg);
            transform: rotate(45deg); }
  .cd-secondary-nav > .has-children > a::before, .cd-secondary-nav > .has-children > a::after{

    /* remove arrows on secondary nav titles */
    display: none; }
  .cd-primary-nav .go-back a{
    padding-left: 20px; }
  .cd-primary-nav .go-back a::before, .cd-primary-nav .go-back a::after{
    left: 1px; }
  .no-js .cd-primary-nav{
    position: absolute;
    z-index: 3;
    display: inline-block;
    width: auto;
    top: 0;
    right: 150px;
    padding: 0; }
  .no-js .nav-is-fixed .cd-primary-nav{
    position: fixed; } }


@media (min-width: 769px){
  .banner-tall{
    height: 465px; }
  .card-diptic__box{
    padding: 2rem 1rem 2rem 2rem; }
  .card-diptic__box:nth-child(2){
    border-left: 1px solid #ccc;
    padding: 2rem 2rem 2rem 1rem; }
  .card-triptic__box:nth-child(2){
    border-left: 1px solid #ccc; }
  .card-triptic__box:nth-child(3){
    border-left: 1px solid #ccc; } }


@media (min-width: 768px) and (min-width: 1023px){
  .footer-copyright__box{
    text-align: right; }
  .footer-copyright__box small{
    font-size: 12px;
    display: inline-block; }
  .footer-copyright__box small::before{
    content: '|'; }
  .footer-copyright__box small:nth-child(1)::before{
    content: ''; }
  .footer-copyright__box .nav-minor li a{
    font-size: 12px; }
  .footer-disclaimer h6, .footer-disclaimer p, .footer-disclaimer ul{
    font-size: 12px; } }


@media (min-width: 1023px){
  .footer-disclaimer__box{
    padding: 20px 100px; } }


@media (max-width: 899px){
  .logo{
    width: 400px; }
  .logo__stretched{
    display: none; }
  .logo__stacked{
    display: block; } }


@media (max-width: 499px){
  .logo{
    padding: 1rem;
    width: 300px; } }


/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlbmRvci9fbm9ybWFsaXplLnNjc3MiLCJiYXNlL190eXBvZ3JhcGh5LnNhc3MiLCJiYXNlL19jb2xvcnMuc2FzcyIsImJhc2UvX2luY2x1ZGUtbWVkaWEuc2FzcyIsImJhc2UvX2NsZWFyLWZpeC5zYXNzIiwiYmFzZS9faW1hZ2VzLnNhc3MiLCJiYXNlL19sYXlvdXQuc2FzcyIsImJhc2UvX2dsb2JhbC5zYXNzIiwiYmFzZS9fdGFibGVzLnNhc3MiLCJtb2R1bGVzL25hdi9fbmF2LW1pbm9yLnNhc3MiLCJtb2R1bGVzL25hdi9fbmF2LW1lZ2Euc2FzcyIsIm1vZHVsZXMvbmF2L19uYXYtZm9vdGVyLnNhc3MiLCJtb2R1bGVzL2Jhbm5lci9fX2Jhbm5lci5zYXNzIiwibW9kdWxlcy9jYXJkcy9fX2NhcmRzLnNhc3MiLCJtb2R1bGVzL2N0YS9fX2N0YS5zYXNzIiwibW9kdWxlcy9mb290ZXIvX2Zvb3Rlci5zYXNzIiwibW9kdWxlcy9oZWFkZXIvX2hlYWRlci5zYXNzIiwibW9kdWxlcy9tYWluL19tYWluLnNhc3MiLCJtb2R1bGVzL2Zvcm0vX2Zvcm0uc2FzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE0Q0EsQUFBUyxBQUFPLEFBQVMsQUFBWSxBQUFRLEFBQVEsQUFBUSxBQUFRLEFBQUssQUFBUztFQVcvRSxBQUFTOztBQUtiLEFBQU8sQUFBUTtFQUdYLEFBQVM7O0FBVWIsQUFBSyxBQUFLO0VBQ04sQUFBUztFQUNULEFBQVE7O0FBUVosQUFBVTtFQUNOLEFBQVM7O0FBWWI7RUFNSSxBQUEwQjtFQUMxQixBQUFzQjs7QUFlMUI7RUFDSSxBQUFROztBQVlaO0VBR0ksQUFBWTtFQVVoQixBQUFDLEFBQVEsQUFBQztJQUVGLEFBQVM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTZDakIsQUFBSTtFQUNBLEFBQWU7O0FBS25CLEFBQUc7RUFFQyxBQUFhOztBQVdqQjtFQUNJLEFBQVk7O0FBS2hCO0VBQ0ksQUFBWTtFQUNaLEFBQU87O0FB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QWMsQUFBZSxBQUFLLEFBQWUsQUFBZSxBQUFLLEFBQWMsQUFBZSxBQUFLLEFBQWdCLEFBQWUsQUFBSyxBQUFlLEFBQWUsQUFBSyxBQUFlLEFBQWUsQUFBSyxBQUFtQixBQUFlLEFBQUssQUFBeUIsQUFBZSxBQUFLLEFBQWdCLEFBQWUsQUFBSyxBQUFlLEFBQWUsQUFBSyxBQUFlLEFBQWU7SWhCTzlqQixBZ0JVUjtJQUNBLEFBQVE7SUFBVSxBQUNMO0lBQ2IsQUFBZTtJQUFBLEFBQ0g7SUFDWixBQUFTO0lBQ1QsQUFBUztJQUNULEFBQU87RUFHVixBQUFlO0lBQ1gsQUFBUztFQUViLEFBQWUsQUFBSyxBQUFpQixBQUFlLEFBQUssQUFBZ0IsQUFBZSxBQUFLO0lBR3pGLEFBQVM7RUFHYjtJQUNJLEFBQVM7SUFDVCxBQUFPO0lBQ1AsQUFBTztFQUVYLEFBQTJCO0lBQ3ZCLEFBQVM7SUFDVCxBQUFPO0lBQ1AsQUFBUTtFQUVaLEFBQWU7SWhCN0NQLEFnQjhDSjtJQUNBLEFBQWU7SUFDZixBQUFRO0lBQ1IsQUFBVTtJQUNWLEFBQVE7SUFFWixBQUFlLEFBQVU7TUFDbkIsQUFBTztNQUNQLEFBQVM7TUFDVCxBQUFVO01BQ1YsQUFBSztNQUNMLEFBQU87TUFDUCxBQUFPO01BQ1AsQUFBUTtFQUdkLEFBQWU7SWhCOURQLEFnQitESjtJQUNBLEFBQVk7SUFDWixBQUFlO0lBQ2YsQUFBUTtJaEI5REosQWdCK0RKO0lBQ0EsQUFBUTtJQUNSLEFBQVM7SUFDVCxBQUFXO0lBQ1gsQUFBUTtJQUNSLEFBQVU7SUFFVixBQUFjO0lBQ2QsQUFBTztJQUNQLEFBQW1CO0lBQ25CLEFBQWlCO0lBQ2pCLEFBQVk7O0FBR2hCO0VoQm5GUSxBZ0JvRk47RUFDQSxBQUFVO0VBQ1YsQUFBTTs7QUFHUixBQUFpQixBQUFVO0VBQ3pCLEFBQVMiLCJmaWxlIjoic3R5bGUuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIE5vcm1hbGl6ZS5zY3NzIGJhc2VkIG9uIE5pY29sYXMgR2FsbGFnaGVyIGFuZCBKb25hdGhhbiBOZWFsJ3Ncbi8vIG5vcm1hbGl6ZS5jc3MgdjIuMS4zIHwgTUlUIExpY2Vuc2UgfCBnaXQuaW8vbm9ybWFsaXplXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gTm9ybWFsaXplLnNjc3Mgc2V0dGluZ3Ncbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cblxuLy8gU2V0IHRvIHRydWUgaWYgeW91IHdhbnQgdG8gYWRkIHN1cHBvcnQgZm9yIElFNiBhbmQgSUU3XG4vLyBOb3RpY2U6IHNldHRpbmcgdG8gdHJ1ZSBtaWdodCByZW5kZXIgc29tZSBlbGVtZW50c1xuLy8gc2xpZ2h0bHkgZGlmZmVyZW50bHkgdGhhbiB3aGVuIHNldCB0byBmYWxzZVxuJGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZTogZmFsc2UgIWRlZmF1bHQ7IC8vIFVzZWQgYWxzbyBpbiBDb21wYXNzXG5cblxuLy8gU2V0IHRoZSBkZWZhdWx0IGZvbnQgZmFtaWx5IGhlcmUgc28geW91IGRvbid0IGhhdmUgdG8gb3ZlcnJpZGUgaXQgbGF0ZXJcbiRub3JtYWxpemVkX2ZvbnRfZmFtaWx5OiBzYW5zLXNlcmlmICFkZWZhdWx0O1xuXG4kbm9ybWFsaXplX2hlYWRpbmdzOiB0cnVlICFkZWZhdWx0O1xuXG4kaDFfZm9udF9zaXplOiAyZW0gIWRlZmF1bHQ7XG4kaDJfZm9udF9zaXplOiAxLjVlbSAhZGVmYXVsdDtcbiRoM19mb250X3NpemU6IDEuMTdlbSAhZGVmYXVsdDtcbiRoNF9mb250X3NpemU6IDFlbSAhZGVmYXVsdDtcbiRoNV9mb250X3NpemU6IDAuODNlbSAhZGVmYXVsdDtcbiRoNl9mb250X3NpemU6IDAuNzVlbSAhZGVmYXVsdDtcblxuJGgxX21hcmdpbjogMC42N2VtIDAgIWRlZmF1bHQ7XG4kaDJfbWFyZ2luOiAwLjgzZW0gMCAhZGVmYXVsdDtcbiRoM19tYXJnaW46IDFlbSAwICFkZWZhdWx0O1xuJGg0X21hcmdpbjogMS4zM2VtIDAgIWRlZmF1bHQ7XG4kaDVfbWFyZ2luOiAxLjY3ZW0gMCAhZGVmYXVsdDtcbiRoNl9tYXJnaW46IDIuMzNlbSAwICFkZWZhdWx0O1xuXG4kYmFja2dyb3VuZDogI2ZmZiAhZGVmYXVsdDtcbiRjb2xvcjogIzAwMCAhZGVmYXVsdDtcblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIEhUTUw1IGRpc3BsYXkgZGVmaW5pdGlvbnNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIENvcnJlY3RzIGJsb2NrIGRpc3BsYXkgbm90IGRlZmluZWQgaW4gSUU2LzcvOC85ICYgRkYzXG5cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxuaGdyb3VwLFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vLyBDb3JyZWN0cyBpbmxpbmUtYmxvY2sgZGlzcGxheSBub3QgZGVmaW5lZCBpbiBJRTYvNy84LzkgJiBGRjNcblxuYXVkaW8sXG5jYW52YXMsXG52aWRlbyB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIEBpZiAkbGVnYWN5X3N1cHBvcnRfZm9yX2llIHtcbiAgICAgICAgKmRpc3BsYXk6IGlubGluZTtcbiAgICAgICAgKnpvb206IDE7XG4gICAgfVxufVxuXG4vLyAxLiBQcmV2ZW50cyBtb2Rlcm4gYnJvd3NlcnMgZnJvbSBkaXNwbGF5aW5nICdhdWRpbycgd2l0aG91dCBjb250cm9sc1xuLy8gMi4gUmVtb3ZlIGV4Y2VzcyBoZWlnaHQgaW4gaU9TNSBkZXZpY2VzXG5cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gICAgZGlzcGxheTogbm9uZTsgLy8gMVxuICAgIGhlaWdodDogMDsgLy8gMlxufVxuXG4vL1xuLy8gQWRkcmVzcyBgW2hpZGRlbl1gIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LlxuLy8gSGlkZSB0aGUgYHRlbXBsYXRlYCBlbGVtZW50IGluIElFLCBTYWZhcmksIGFuZCBGaXJlZm94IDwgMjIuXG4vL1xuXG5baGlkZGVuXSwgdGVtcGxhdGUge1xuICAgIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBCYXNlXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyAxLiBDb3JyZWN0cyB0ZXh0IHJlc2l6aW5nIG9kZGx5IGluIElFNi83IHdoZW4gYm9keSBmb250LXNpemUgaXMgc2V0IHVzaW5nIGVtIHVuaXRzXG4vLyAgICBodHRwOi8vY2xhZ251dC5jb20vYmxvZy8zNDgvI2M3OTBcbi8vIDIuIFByZXZlbnRzIGlPUyB0ZXh0IHNpemUgYWRqdXN0IGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZSwgd2l0aG91dCBkaXNhYmxpbmcgdXNlciB6b29tXG4vLyAgICB3d3cuNDU2YmVyZWFzdHJlZXQuY29tL2FyY2hpdmUvMjAxMDEyL2NvbnRyb2xsaW5nX3RleHRfc2l6ZV9pbl9zYWZhcmlfZm9yX2lvc193aXRob3V0X2Rpc2FibGluZ191c2VyX3pvb20vXG5cbmh0bWwge1xuICAgIEBpZiAkbGVnYWN5X3N1cHBvcnRfZm9yX2llIHtcbiAgICAgICAgZm9udC1zaXplOiAxMDAlOyAvLyAxXG4gICAgfVxuXHRcdC8vYmFja2dyb3VuZDogJGJhY2tncm91bmQ7XG5cdFx0Ly9jb2xvcjogJGNvbG9yO1xuICAgIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLy8gMlxuICAgIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvLyAyXG59XG5cbi8vIEFkZHJlc3NlcyBmb250LWZhbWlseSBpbmNvbnNpc3RlbmN5IGJldHdlZW4gJ3RleHRhcmVhJyBhbmQgb3RoZXIgZm9ybSBlbGVtZW50cy5cblxuaHRtbCxcbmJ1dHRvbixcbmlucHV0LFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICAgIC8vZm9udC1mYW1pbHk6ICRub3JtYWxpemVkX2ZvbnRfZmFtaWx5O1xufVxuXG4vLyBBZGRyZXNzZXMgbWFyZ2lucyBoYW5kbGVkIGluY29ycmVjdGx5IGluIElFNi83XG5cbmJvZHkge1xuICAgIG1hcmdpbjogMDtcbn1cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIExpbmtzXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyAxLiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBjb2xvciBmcm9tIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbi8vIDIuIEFkZHJlc3NlcyBvdXRsaW5lIGRpc3BsYXllZCBvZGRseSBpbiBDaHJvbWVcbi8vIDMuIEltcHJvdmVzIHJlYWRhYmlsaXR5IHdoZW4gZm9jdXNlZCBhbmQgYWxzbyBtb3VzZSBob3ZlcmVkIGluIGFsbCBicm93c2Vyc1xuLy8gICAgcGVvcGxlLm9wZXJhLmNvbS9wYXRyaWNrbC9leHBlcmltZW50cy9rZXlib2FyZC90ZXN0XG5cbmEge1xuICAgIC8vIDFcblxuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuXG4gICAgLy8gMlxuXG4gICAgJjpmb2N1cyB7XG4gICAgICAgIC8vb3V0bGluZTogdGhpbiBkb3R0ZWQ7XG4gICAgfVxuXG4gICAgLy8gM1xuXG4gICAgJjpob3ZlcixcbiAgICAmOmFjdGl2ZSB7XG4gICAgICAgIG91dGxpbmU6IDA7XG4gICAgfVxufVxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gVHlwb2dyYXBoeVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gQWRkcmVzc2VzIGZvbnQgc2l6ZXMgYW5kIG1hcmdpbnMgc2V0IGRpZmZlcmVudGx5IGluIElFNi83XG4vLyBBZGRyZXNzZXMgZm9udCBzaXplcyB3aXRoaW4gJ3NlY3Rpb24nIGFuZCAnYXJ0aWNsZScgaW4gRkY0KywgQ2hyb21lLCBTNVxuXG4vKiBAaWYgXFwkbm9ybWFsaXplX2hlYWRpbmdzID09IHRydWUge1xuICAgIGgxIHtcbiAgICAgICAgZm9udC1zaXplOiBcXCRoMV9mb250X3NpemU7XG4gICAgICAgIG1hcmdpbjogXFwkaDFfbWFyZ2luO1xuICAgIH1cblxuICAgIGgyIHtcbiAgICAgICAgZm9udC1zaXplOiBcXCRoMl9mb250X3NpemU7XG4gICAgICAgIG1hcmdpbjogXFwkaDJfbWFyZ2luO1xuICAgIH1cblxuICAgIGgzIHtcbiAgICAgICAgZm9udC1zaXplOiBcXCRoM19mb250X3NpemU7XG4gICAgICAgIG1hcmdpbjogXFwkaDNfbWFyZ2luO1xuICAgIH1cblxuICAgIGg0IHtcbiAgICAgICAgZm9udC1zaXplOiBcXCRoNF9mb250X3NpemU7XG4gICAgICAgIG1hcmdpbjogXFwkaDRfbWFyZ2luO1xuICAgIH1cblxuICAgIGg1IHtcbiAgICAgICAgZm9udC1zaXplOiBcXCRoNV9mb250X3NpemU7XG4gICAgICAgIG1hcmdpbjogXFwkaDVfbWFyZ2luO1xuICAgIH1cblxuICAgIGg2IHtcbiAgICAgICAgZm9udC1zaXplOiBcXCRoNl9mb250X3NpemU7XG4gICAgICAgIG1hcmdpbjogXFwkaDZfbWFyZ2luO1xuICAgIH1cbn0gKi9cblxuLy8gQWRkcmVzc2VzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LCBTNSwgQ2hyb21lXG5cbmFiYnJbdGl0bGVdIHtcbiAgICBib3JkZXItYm90dG9tOiAxcHggZG90dGVkO1xufVxuXG4vLyBBZGRyZXNzZXMgc3R5bGUgc2V0IHRvICdib2xkZXInIGluIEZGMyssIFM0LzUsIENocm9tZVxuXG5iLFxuc3Ryb25nIHtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuQGlmICRsZWdhY3lfc3VwcG9ydF9mb3JfaWUge1xuICAgIGJsb2NrcXVvdGUge1xuICAgICAgICBtYXJnaW46IDFlbSA0MHB4O1xuICAgIH1cbn1cblxuLy8gQWRkcmVzc2VzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gUzUsIENocm9tZVxuXG5kZm4ge1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLy8gQWRkcmVzc2VzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUU2LzcvOC85XG5cbm1hcmsge1xuICAgIGJhY2tncm91bmQ6ICNmZjA7XG4gICAgY29sb3I6ICMwMDA7XG59XG5cbi8vIEFkZHJlc3NlcyBtYXJnaW5zIHNldCBkaWZmZXJlbnRseSBpbiBJRTYvN1xuQGlmICRsZWdhY3lfc3VwcG9ydF9mb3JfaWUge1xuICAgIHAsXG4gICAgcHJlIHtcbiAgICAgICAgbWFyZ2luOiAxZW0gMDtcbiAgICB9XG59XG5cbi8vIENvcnJlY3RzIGZvbnQgZmFtaWx5IHNldCBvZGRseSBpbiBJRTYsIFM0LzUsIENocm9tZVxuLy8gZW4ud2lraXBlZGlhLm9yZy93aWtpL1VzZXI6RGF2aWRnb3RoYmVyZy9UZXN0NTlcblxuY29kZSxcbmtiZCxcbnByZSxcbnNhbXAge1xuICAgIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIHNlcmlmO1xuICAgIEBpZiAkbGVnYWN5X3N1cHBvcnRfZm9yX2llIHtcbiAgICAgICAgX2ZvbnQtZmFtaWx5OiAnY291cmllciBuZXcnLCBtb25vc3BhY2U7XG4gICAgfVxuICAgIGZvbnQtc2l6ZTogMWVtO1xufVxuXG4vLyBJbXByb3ZlcyByZWFkYWJpbGl0eSBvZiBwcmUtZm9ybWF0dGVkIHRleHQgaW4gYWxsIGJyb3dzZXJzXG5cbnByZSB7XG4gICAgd2hpdGUtc3BhY2U6IHByZTtcbiAgICB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7XG4gICAgd29yZC13cmFwOiBicmVhay13b3JkO1xufVxuXG4vLyBTZXQgY29uc2lzdGVudCBxdW90ZSB0eXBlcy5cblxucSB7XG4gICAgcXVvdGVzOiBcIlxcMjAxQ1wiIFwiXFwyMDFEXCIgXCJcXDIwMThcIiBcIlxcMjAxOVwiO1xufVxuXG4vLyAxLiBBZGRyZXNzZXMgQ1NTIHF1b3RlcyBub3Qgc3VwcG9ydGVkIGluIElFNi83XG4vLyAyLiBBZGRyZXNzZXMgcXVvdGUgcHJvcGVydHkgbm90IHN1cHBvcnRlZCBpbiBTNFxuXG4vLyAxXG5AaWYgJGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZSB7XG4gICAgcSB7XG4gICAgICAgIHF1b3Rlczogbm9uZTtcbiAgICB9XG59XG5cbi8vIDJcbnEge1xuICAgICY6YmVmb3JlLFxuICAgICY6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgY29udGVudDogbm9uZTtcbiAgICB9XG59XG5cbi8vIEFkZHJlc3MgaW5jb25zaXN0ZW50IGFuZCB2YXJpYWJsZSBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuXG4vKiAvc21hbGwge1xuICAgIGZvbnQtc2l6ZTogODAlO1xufSAqL1xuXG4vLyBQcmV2ZW50cyBzdWIgYW5kIHN1cCBhZmZlY3RpbmcgbGluZS1oZWlnaHQgaW4gYWxsIGJyb3dzZXJzXG4vLyBnaXN0LmdpdGh1Yi5jb20vNDEzOTMwXG5cbnN1YixcbnN1cCB7XG4gICAgZm9udC1zaXplOiA3NSU7XG4gICAgbGluZS1oZWlnaHQ6IDA7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3VwIHtcbiAgICB0b3A6IC0wLjVlbTtcbn1cblxuc3ViIHtcbiAgICBib3R0b206IC0wLjI1ZW07XG59XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBMaXN0c1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gQWRkcmVzc2VzIG1hcmdpbnMgc2V0IGRpZmZlcmVudGx5IGluIElFNi83XG5AaWYgJGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZSB7XG4gICAgZGwsXG4gICAgbWVudSxcbiAgICBvbCxcbiAgICB1bCB7XG4gICAgICAgIC8vbWFyZ2luOiAxZW0gMDtcbiAgICB9XG59XG5cbkBpZiAkbGVnYWN5X3N1cHBvcnRfZm9yX2llIHtcbiAgICBkZCB7XG4gICAgICAgIG1hcmdpbjogMCAwIDAgNDBweDtcbiAgICB9XG59XG5cbi8vIEFkZHJlc3NlcyBwYWRkaW5ncyBzZXQgZGlmZmVyZW50bHkgaW4gSUU2LzdcbkBpZiAkbGVnYWN5X3N1cHBvcnRfZm9yX2llIHtcbiAgICBtZW51LFxuICAgIG9sLFxuICAgIHVsIHtcbiAgICAgICAgLy9wYWRkaW5nOiAwIDAgMCA0MHB4O1xuICAgIH1cbn1cblxuLy8gQ29ycmVjdHMgbGlzdCBpbWFnZXMgaGFuZGxlZCBpbmNvcnJlY3RseSBpbiBJRTdcblxubmF2IHtcbiAgICB1bCxcbiAgICBvbCB7XG4gICAgICAgIEBpZiAkbGVnYWN5X3N1cHBvcnRfZm9yX2llIHtcbiAgICAgICAgICAgIC8vbGlzdC1zdHlsZS1pbWFnZTogbm9uZTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIEVtYmVkZGVkIGNvbnRlbnRcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIDEuIFJlbW92ZXMgYm9yZGVyIHdoZW4gaW5zaWRlICdhJyBlbGVtZW50IGluIElFNi83LzgvOSwgRkYzXG4vLyAyLiBJbXByb3ZlcyBpbWFnZSBxdWFsaXR5IHdoZW4gc2NhbGVkIGluIElFN1xuLy8gICAgY29kZS5mbGlja3IuY29tL2Jsb2cvMjAwOC8xMS8xMi9vbi11aS1xdWFsaXR5LXRoZS1saXR0bGUtdGhpbmdzLWNsaWVudC1zaWRlLWltYWdlLXJlc2l6aW5nL1xuXG5pbWcge1xuICAgIGJvcmRlcjogMDsgLy8gMVxuICAgIEBpZiAkbGVnYWN5X3N1cHBvcnRfZm9yX2llIHtcbiAgICAgICAgLW1zLWludGVycG9sYXRpb24tbW9kZTogYmljdWJpYzsgLy8gMlxuICAgIH1cbn1cblxuLy8gQ29ycmVjdHMgb3ZlcmZsb3cgZGlzcGxheWVkIG9kZGx5IGluIElFOVxuXG5zdmc6bm90KDpyb290KSB7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIEZpZ3VyZXNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIEFkZHJlc3NlcyBtYXJnaW4gbm90IHByZXNlbnQgaW4gSUU2LzcvOC85LCBTNSwgTzExXG5cbmZpZ3VyZSB7XG4gICAgbWFyZ2luOiAwO1xufVxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gRm9ybXNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIENvcnJlY3RzIG1hcmdpbiBkaXNwbGF5ZWQgb2RkbHkgaW4gSUU2LzdcbkBpZiAkbGVnYWN5X3N1cHBvcnRfZm9yX2llIHtcbiAgICBmb3JtIHtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgIH1cbn1cblxuLy8gRGVmaW5lIGNvbnNpc3RlbnQgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nXG5cbmZpZWxkc2V0IHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuICAgIG1hcmdpbjogMCAycHg7XG4gICAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtO1xufVxuXG4vLyAxLiBDb3JyZWN0cyBjb2xvciBub3QgYmVpbmcgaW5oZXJpdGVkIGluIElFNi83LzgvOVxuLy8gMi4gUmVtb3ZlIHBhZGRpbmcgc28gcGVvcGxlIGFyZW4ndCBjYXVnaHQgb3V0IGlmIHRoZXkgemVybyBvdXQgZmllbGRzZXRzLlxuLy8gMy4gQ29ycmVjdHMgdGV4dCBub3Qgd3JhcHBpbmcgaW4gRkYzXG4vLyA0LiBDb3JyZWN0cyBhbGlnbm1lbnQgZGlzcGxheWVkIG9kZGx5IGluIElFNi83XG5cbmxlZ2VuZCB7XG4gICAgYm9yZGVyOiAwOyAvLyAxXG4gICAgcGFkZGluZzogMDsgLy8gMlxuICAgIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8vIDNcbiAgICBAaWYgJGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZSB7XG4gICAgICAgICptYXJnaW4tbGVmdDogLTdweDsgLy8gNFxuICAgIH1cbn1cblxuLy8gMS4gQ29ycmVjdCBmb250IGZhbWlseSBub3QgYmVpbmcgaW5oZXJpdGVkIGluIGFsbCBicm93c2Vycy5cbi8vIDIuIENvcnJlY3RzIGZvbnQgc2l6ZSBub3QgYmVpbmcgaW5oZXJpdGVkIGluIGFsbCBicm93c2Vyc1xuLy8gMy4gQWRkcmVzc2VzIG1hcmdpbnMgc2V0IGRpZmZlcmVudGx5IGluIElFNi83LCBGRjMrLCBTNSwgQ2hyb21lXG4vLyA0LiBJbXByb3ZlcyBhcHBlYXJhbmNlIGFuZCBjb25zaXN0ZW5jeSBpbiBhbGwgYnJvd3NlcnNcblxuYnV0dG9uLFxuaW5wdXQsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7IC8vIDFcbiAgICBmb250LXNpemU6IDEwMCU7IC8vIDJcbiAgICBtYXJnaW46IDA7IC8vIDNcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IC8vIDRcbiAgICBAaWYgJGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZSB7XG4gICAgICAgICp2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyAvLyA0XG4gICAgfVxufVxuXG4vLyBBZGRyZXNzZXMgRkYzLzQgc2V0dGluZyBsaW5lLWhlaWdodCBvbiAnaW5wdXQnIHVzaW5nICFpbXBvcnRhbnQgaW4gdGhlIFVBIHN0eWxlc2hlZXRcblxuYnV0dG9uLCBpbnB1dCB7XG4gICAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcbn1cblxuLy8gQWRkcmVzcyBpbmNvbnNpc3RlbnQgYHRleHQtdHJhbnNmb3JtYCBpbmhlcml0YW5jZSBmb3IgYGJ1dHRvbmAgYW5kIGBzZWxlY3RgLlxuLy8gQWxsIG90aGVyIGZvcm0gY29udHJvbCBlbGVtZW50cyBkbyBub3QgaW5oZXJpdCBgdGV4dC10cmFuc2Zvcm1gIHZhbHVlcy5cbi8vIENvcnJlY3QgYGJ1dHRvbmAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gQ2hyb21lLCBTYWZhcmkgNSssIGFuZCBJRSA4Ky5cbi8vIENvcnJlY3QgYHNlbGVjdGAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveCA0KyBhbmQgT3BlcmEuXG5cbmJ1dHRvbixcbnNlbGVjdCB7XG4gICAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8vIDEuIEF2b2lkIHRoZSBXZWJLaXQgYnVnIGluIEFuZHJvaWQgNC4wLiogd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gXG4vLyAgICBhbmQgYHZpZGVvYCBjb250cm9sc1xuLy8gMi4gQ29ycmVjdHMgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSAnaW5wdXQnIHR5cGVzIGluIGlPU1xuLy8gMy4gSW1wcm92ZXMgdXNhYmlsaXR5IGFuZCBjb25zaXN0ZW5jeSBvZiBjdXJzb3Igc3R5bGUgYmV0d2VlbiBpbWFnZS10eXBlXG4vLyAgICAnaW5wdXQnIGFuZCBvdGhlcnNcbi8vIDQuIFJlbW92ZXMgaW5uZXIgc3BhY2luZyBpbiBJRTcgd2l0aG91dCBhZmZlY3Rpbmcgbm9ybWFsIHRleHQgaW5wdXRzXG4vLyAgICBLbm93biBpc3N1ZTogaW5uZXIgc3BhY2luZyByZW1haW5zIGluIElFNlxuXG5idXR0b24sXG5odG1sIGlucHV0W3R5cGU9XCJidXR0b25cIl0sIC8vIDFcbmlucHV0W3R5cGU9XCJyZXNldFwiXSxcbmlucHV0W3R5cGU9XCJzdWJtaXRcIl0ge1xuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvLyAyXG4gICAgY3Vyc29yOiBwb2ludGVyOyAvLyAzXG4gICAgQGlmICRsZWdhY3lfc3VwcG9ydF9mb3JfaWUge1xuICAgICAgICAqb3ZlcmZsb3c6IHZpc2libGU7ICAvLyA0XG4gICAgfVxufVxuXG4vLyBSZS1zZXQgZGVmYXVsdCBjdXJzb3IgZm9yIGRpc2FibGVkIGVsZW1lbnRzXG5cbmJ1dHRvbltkaXNhYmxlZF0sXG5pbnB1dFtkaXNhYmxlZF0ge1xuICAgIGN1cnNvcjogZGVmYXVsdDtcbn1cblxuLy8gUmVtb3ZlcyBpbm5lciBwYWRkaW5nIGFuZCBib3JkZXIgaW4gRkYzK1xuLy8gd3d3LnNpdGVwZW4uY29tL2Jsb2cvMjAwOC8wNS8xNC90aGUtZGV2aWxzLWluLXRoZS1kZXRhaWxzLWZpeGluZy1kb2pvcy10b29sYmFyLWJ1dHRvbnMvXG5cbmJ1dHRvbiwgaW5wdXQge1xuICAgICY6Oi1tb3otZm9jdXMtaW5uZXIge1xuICAgICAgICBib3JkZXI6IDA7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgfVxufVxuXG4vLyAxLiBSZW1vdmVzIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFNi83LzgvOVxuLy8gMi4gSW1wcm92ZXMgcmVhZGFiaWxpdHkgYW5kIGFsaWdubWVudCBpbiBhbGwgYnJvd3NlcnNcblxudGV4dGFyZWEge1xuICAgIG92ZXJmbG93OiBhdXRvOyAvLyAxXG4gICAgdmVydGljYWwtYWxpZ246IHRvcDsgLy8gMlxufVxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gVGFibGVzXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyBSZW1vdmUgbW9zdCBzcGFjaW5nIGJldHdlZW4gdGFibGUgY2VsbHNcblxudGFibGUge1xuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gICAgYm9yZGVyLXNwYWNpbmc6IDA7XG59XG5cbmlucHV0IHtcbiAgICAvLyAxLiBBZGRyZXNzZXMgYXBwZWFyYW5jZSBzZXQgdG8gc2VhcmNoZmllbGQgaW4gUzUsIENocm9tZVxuICAgIC8vIDIuIEFkZHJlc3NlcyBib3gtc2l6aW5nIHNldCB0byBib3JkZXItYm94IGluIFM1LCBDaHJvbWUgKGluY2x1ZGUgLW1veiB0byBmdXR1cmUtcHJvb2YpXG4gICAgJlt0eXBlPVwic2VhcmNoXCJdIHtcbiAgICAgICAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8vIDFcbiAgICAgICAgLW1vei1ib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgICAgICAgLXdlYmtpdC1ib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLy8gMlxuICAgICAgICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcblxuICAgIFx0Ly8gUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIHNlYXJjaCBjYW5jZWwgYnV0dG9uIGluIFNhZmFyaSA1IGFuZCBDaHJvbWVcbiAgICAgICAgLy8gb24gT1MgWC5cbiAgICAgICAgJjo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcbiAgICAgICAgJjo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gICAgICAgICAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyAxLiBBZGRyZXNzIGJveCBzaXppbmcgc2V0IHRvIGBjb250ZW50LWJveGAgaW4gSUUgOC85LzEwLlxuICAgIC8vIDIuIFJlbW92ZSBleGNlc3MgcGFkZGluZyBpbiBJRSA4LzkvMTAuXG4gICAgLy8gMy4gUmVtb3ZlcyBleGNlc3MgcGFkZGluZyBpbiBJRTdcbiAgICAvLyAgICBLbm93biBpc3N1ZTogZXhjZXNzIHBhZGRpbmcgcmVtYWlucyBpbiBJRTZcbiAgICAmW3R5cGU9XCJjaGVja2JveFwiXSxcbiAgICAmW3R5cGU9XCJyYWRpb1wiXSB7XG4gICAgXHRib3gtc2l6aW5nOiBib3JkZXItYm94OyAvLyAxXG4gICAgXHRwYWRkaW5nOiAwOyAvLyAyXG4gICAgXHRAaWYgJGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZSB7XG4gICAgICAgIFx0KmhlaWdodDogMTNweDsgLy8gM1xuICAgICAgICBcdCp3aWR0aDogMTNweDsgLy8gM1xuICAgIFx0fVxuICAgIH1cbn1cbiIsIi8vIFZhcnNcbiRiYXNlLWZvbnQtc2l6ZTogMTZweFxuJGJhc2UtbGluZS1oZWlnaHQ6IDEuNVxuXG4vLyBUeXBlZmFjZXNcbiRzYW5zOiBOZXdzIEN5Y2xlLCBzYW5zLXNlcmlmXG4kc2VyaWY6IFBsYXlmYWlyIERpc3BsYXksIHNlcmlmXG5cbi8vIEZvbnQgd2VpZ2h0c1xuJHhsaWdodDogMjAwXG4kbGlnaHQ6IDMwMFxuJG5vcm1hbDogNDAwXG4kc2VtaWJvbGQ6IDYwMFxuJGJvbGQ6IDcwMFxuXG4vLyBMaW5lIGhlaWdodCBmdW5jdGlvblxuQGZ1bmN0aW9uIGxpbmUtaGVpZ2h0KClcbiAgQHJldHVybiAkYmFzZS1mb250LXNpemUgKiAkYmFzZS1saW5lLWhlaWdodFxuXG4vLyBWYXIgbXVzdCBiZSBzcGVjaWZpZWQgYWZ0ZXIgcmV0dXJuaW5nIHRoZSBsaW5lLWhlaWdodCBmdW5jdGlvblxuJGNhbC1saW5lLWhlaWdodDogbGluZS1oZWlnaHQoKVxuXG4vLyBNaXhpbnNcbj12ZXJ0LW1hcmdpbigkdG9wOiAxLCAkYm90dG9tOiAxKVxuICBtYXJnaW4tdG9wOiAkY2FsLWxpbmUtaGVpZ2h0ICogJHRvcFxuICBtYXJnaW4tYm90dG9tOiAkY2FsLWxpbmUtaGVpZ2h0ICogJGJvdHRvbVxuXG49dmVydC1wYWRkaW5nKCR0b3A6IDEsICRib3R0b206IDEpXG4gIHBhZGRpbmctdG9wOiAkY2FsLWxpbmUtaGVpZ2h0ICogJHRvcFxuICBwYWRkaW5nLWJvdHRvbTogJGNhbC1saW5lLWhlaWdodCAqICRib3R0b21cblxuXG5odG1sXG4gIGZvbnQtc2l6ZTogJGJhc2UtZm9udC1zaXplXG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGVcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWRcblxuYm9keVxuICBjb2xvcjogJGNoYXJjb2FsXG4gIGxpbmUtaGVpZ2h0OiAxLjVcbiAgZm9udC1mYW1pbHk6ICRzYW5zXG4gIC8vYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRyYW5zcGFyZW50LCB0cmFuc3BhcmVudCBsaW5lLWhlaWdodCgpIC0gMXB4LCAkZ3JlZW4gMXB4ICwgdHJhbnNwYXJlbnQpXG4gIGJhY2tncm91bmQtc2l6ZTogYXV0byBsaW5lLWhlaWdodCgpXG4gIG1hcmdpbjogMFxuXG4vL1tjbGFzcyo9J19faGVhZGxpbmUnXVxuXG5cbi8vIFVzZWQgaW4gYXJ0aWNsZSBoZWFkZXJzIGluIHRoZSAuTWFpbiBjb2x1bW5zXG5bY2xhc3MqPSdfX2hlYWRpbmcnXVxuICBjb2xvcjogJGdyZWVuXG4gIGZvbnQtZmFtaWx5OiAkc2VyaWZcbiAgZm9udC1zaXplOiAyLjVyZW1cbiAgZm9udC13ZWlnaHQ6ICRub3JtYWxcbiAgbGluZS1oZWlnaHQ6IDFcbiAgbWFyZ2luLWJvdHRvbTogMnJlbVxuXG49c3RhbmRhcmQtaGVhZGluZygpXG4gIGNvbG9yOiAkZ3JlZW5cbiAgZm9udC1mYW1pbHk6ICRzZXJpZlxuICBmb250LXNpemU6IDJyZW1cbiAgZm9udC13ZWlnaHQ6ICRub3JtYWxcbiAgbGluZS1oZWlnaHQ6IDFcblxuXG4vLyBGb3VuZCBpbiB0aGUgTWFpbiBCbG9nIFBvc3RzXG49bWlub3ItaGVhZGluZygpXG4gIGNvbG9yOiAkbmlnaHRncmVlblxuICBmb250LWZhbWlseTogJHNlcmlmXG4gIGZvbnQtc2l6ZTogMS4yNXJlbVxuICBmb250LXdlaWdodDogJGJvbGRcbiAgbGluZS1oZWlnaHQ6IDFcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZVxuICArdmVydC1tYXJnaW4oMS41LDApXG5cblxuLy8gVXNlZCBpbiBhcnRpY2xlIGhlYWRlcnMgaW4gdGhlIC5NYWluIGNvbHVtbnNcbj1zbWFsbC1oZWFkaW5nKClcbiAgY29sb3I6ICRncmVlblxuICBmb250LWZhbWlseTogJHNlcmlmXG4gIGZvbnQtc2l6ZTogMS4zNzVyZW1cbiAgZm9udC13ZWlnaHQ6ICRub3JtYWxcbiAgbGluZS1oZWlnaHQ6IDFcblxuXG4vLyBGb3VuZCBpbiB0aGUgTWFpbiBCbG9nIFBvc3RzXG49YmxvY2txdW90ZSgpXG4gIGNvbG9yOiAkZ3JlZW5cbiAgZm9udC1mYW1pbHk6ICRzZXJpZlxuICBmb250LXNpemU6IDEuNXJlbVxuICBmb250LXN0eWxlOiBpdGFsaWNcbiAgZm9udC13ZWlnaHQ6ICRib2xkXG4gICt2ZXJ0LW1hcmdpbigxLjUsMS41KVxuXG5cbi8vaW5wdXRbdHlwZT1cInN1Ym1pdFwiXVxuXG5bY2xhc3MqPV9fYnV0dG9uXSxcbmlucHV0W3R5cGU9XCJidXR0b25cIl0sXG5pbnB1dFt0eXBlPVwicmVzZXRcIl1cbiAgYm9yZGVyOiAxcHggc29saWQgJGdyZWVuXG4gIGN1cnNvcjogcG9pbnRlclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgZm9udC1mYW1pbHk6ICRzZXJpZlxuICBmb250LXNpemU6IDEuMnJlbVxuICBmb250LXN0eWxlOiBpdGFsaWNcbiAgdGV4dC1hbGlnbjogY2VudGVyXG4gIHBhZGRpbmc6IC43NXJlbSAzcmVtXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZVxuICAvKkl0ZW1zIGZvciB0cmFuc2l0aW9uXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50XG4gIGNvbG9yOiAkZ3JlZW5cbiAgLypUcmFuc2l0aW9uIHNldHRpbmdzXG4gIHRyYW5zaXRpb246IGFsbCAuMnMgZWFzZVxuXG4gICY6aG92ZXJcbiAgICAvKlRoZXNlIHdpbGwgdHJhbnNpdGlvbiBvbiBob3ZlclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRncmVlblxuICAgIGNvbG9yOiAkd2hpdGVcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmVcblxuXG4vLyBpbiBwcm9ncmVzc1xuXG4vLyBNaXhpbnNcbj1idXR0b24oJGJhY2tncm91bmQsICRjb2xvciwgJGJvcmRlci1jb2xvcilcbiAgYm9yZGVyOiAxcHggc29saWQgJGJvcmRlci1jb2xvclxuICBmb250LWZhbWlseTogJHNlcmlmXG4gIGZvbnQtc2l6ZTogMS4ycmVtXG4gIGZvbnQtc3R5bGU6IGl0YWxpY1xuICBwYWRkaW5nOiAuNXJlbSAxcmVtXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZVxuICAvKkl0ZW1zIGZvciB0cmFuc2l0aW9uXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50XG4gIGNvbG9yOiAkY29sb3JcbiAgLypUcmFuc2l0aW9uIHNldHRpbmdzXG4gIHRyYW5zaXRpb246IGFsbCAuMnMgZWFzZVxuICAmOmhvdmVyXG4gICAgLypUaGVzZSB3aWxsIHRyYW5zaXRpb24gb24gaG92ZXJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JlZW5cbiAgICBjb2xvcjogJGNvbG9yXG5cblxuLmxvYWRlcl9fYnV0dG9uLmRpc2FibGVkXG4gIGJhY2tncm91bmQtY29sb3I6ICRjbG91ZFxuICBjb2xvcjogJGdyZWVuXG4gIGN1cnNvcjogZGVmYXVsdFxuICBvcGFjaXR5OiAuM1xuXG5cbnN1cFxuICArbWVkaWEoXCI8PXBob25lXCIpXG4gICAgdG9wOiAtLjI1ZW1cbiAgICBcbiIsIi8vIFNpdGUgY29sb3IgcGFsZXR0ZVxuJGdyZWVuOiAjMjY3ZTY0XG4kbmlnaHRncmVlbjogIzQ1NTY1MlxuJHNsYXRlOiAjZWNlZWU2XG5cbi8vIDUwIHNoYWRlcyBvZiBncmF5XG4kd2hpdGU6ICNmZmZcbiRzdGVhbTogI2Y4ZjhmOFxuJGNsb3VkOiAjZTVlNmU3XG4kZ3JhcGhpdGU6ICNjY2NcbiRzdG9uZTogIzdmN2U3ZVxuJGxlYWQ6ICM2ZTZiNmNcbiRjaGFyY29hbDogIzMzM1xuJGJsYWNrOiAjMDAwXG5cblxuJG1vYmlsZS1uYXYtYnRuOiAkc2xhdGVcblxuLy9Cb3JkZXIgQ29sb3JcbiRib3JkZXJDb2xvcjogJGdyYXBoaXRlXG5cbi8vIFNpdGUgYmFzZSB0ZXh0IGNvbG9yc1xuJHNpdGUtdGV4dC1jb2xvcjogJGNoYXJjb2FsXG4kc2l0ZS10ZXh0LWNvbG9yLWxpbms6ICRncmVlblxuJHNpdGUtdGV4dC1jb2xvci1saW5rLWhvdmVyOiAjNDU1NjUyXG5cblxuLy8gRm9vdGVyIGNvbG9yc1xuJGZvb3Rlci10ZXh0OiAkbmlnaHRncmVlblxuJGZvb3Rlci10ZXh0LWxpbms6ICRuaWdodGdyZWVuXG4kZm9vdGVyLXRleHQtbGluay1ob3ZlcjogJGdyZWVuXG4iLCIvL1xuXHQgXyAgICAgICAgICAgIF8gICAgICAgICAgIF8gICAgICAgICAgICAgICAgICAgICAgICAgICBfIF9cblx0KF8pICAgICAgICAgIHwgfCAgICAgICAgIHwgfCAgICAgICAgICAgICAgICAgICAgICAgICB8IChfKVxuXHQgXyBfIF9fICAgX19ffCB8XyAgIF8gIF9ffCB8IF9fXyAgIF8gX18gX19fICAgX19fICBfX3wgfF8gIF9fIF9cblx0fCB8ICdfIFxcIC8gX198IHwgfCB8IHwvIF9gIHwvIF8gXFwgfCAnXyBgIF8gXFwgLyBfIFxcLyBfYCB8IHwvIF9gIHxcblx0fCB8IHwgfCB8IChfX3wgfCB8X3wgfCAoX3wgfCAgX18vIHwgfCB8IHwgfCB8ICBfXy8gKF98IHwgfCAoX3wgfFxuXHR8X3xffCB8X3xcXF9fX3xffFxcX18sX3xcXF9fLF98XFxfX198IHxffCB8X3wgfF98XFxfX198XFxfXyxffF98XFxfXyxffFxuXG5cdFNpbXBsZSwgZWxlZ2FudCBhbmQgbWFpbnRhaW5hYmxlIG1lZGlhIHF1ZXJpZXMgaW4gU2Fzc1xuXG5cdGh0dHA6Ly9pbmNsdWRlLW1lZGlhLmNvbVxuXG4gIEF1dGhvcjogRWR1YXJkbyBCb3VjYXMgPG1haWxAZWR1YXJkb2JvdWNhcy5jb20+XG5cblxuICBDcmVhdGVzIGEgbGlzdCBvZiBnbG9iYWwgYnJlYWtwb2ludHNcblxuICBAYXV0aG9yIEVkdWFyZG8gQm91Y2FzXG5cbiAgQGV4YW1wbGUgc2NzcyAtIENyZWF0ZXMgYSBzaW5nbGUgYnJlYWtwb2ludCB3aXRoIHRoZSBsYWJlbCBgcGhvbmVgXG4gICRicmVha3BvaW50czogKCdwaG9uZSc6IDMyMHB4KTtcblxuJGJyZWFrcG9pbnRzOiAoXCJwaG9uZVwiOiA0ODBweCwgXCJ0YWJsZXRcIjogNzY4cHgsIFwiZGVza3RvcFwiOiAxMDIzcHgpICFkZWZhdWx0XG5cbi8vXG4gIENyZWF0ZXMgYSBsaXN0IG9mIHN0YXRpYyBleHByZXNzaW9ucyBvciBtZWRpYSB0eXBlc1xuXG4gIEBhdXRob3IgRWR1YXJkbyBCb3VjYXNcblxuICBAZXhhbXBsZSBzY3NzIC0gQ3JlYXRlcyBhIHNpbmdsZSBtZWRpYSB0eXBlIChzY3JlZW4pXG4gICAkbWVkaWEtZXhwcmVzc2lvbnM6ICgnc2NyZWVuJzogJ3NjcmVlbicpO1xuXG4gIEBleGFtcGxlIHNjc3MgLSBDcmVhdGVzIGEgc3RhdGljIGV4cHJlc3Npb24gd2l0aCBsb2dpY2FsIGRpc2p1bmN0aW9uIChPUiBvcGVyYXRvcilcbiAgICRtZWRpYS1leHByZXNzaW9uczogKFxuICBcdFx0J3JldGluYTJ4JzogKFxuICBcdFx0XHQnKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMiknLFxuICBcdFx0XHQnKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpJ1xuICBcdFx0KVxuICBcdCk7XG5cbiRtZWRpYS1leHByZXNzaW9uczogKFwic2NyZWVuXCI6IFwic2NyZWVuXCIsIFwicHJpbnRcIjogXCJwcmludFwiLCBcImhhbmRoZWxkXCI6IFwiaGFuZGhlbGRcIiwgXCJyZXRpbmEyeFwiOiAoXCIoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKVwiLCBcIihtaW4tcmVzb2x1dGlvbjogMTkyZHBpKVwiKSwgXCJyZXRpbmEzeFwiOiAoXCIoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAzKVwiLCBcIihtaW4tcmVzb2x1dGlvbjogMzUwZHBpKVwiKSkgIWRlZmF1bHRcblxuLy9cbiAgRGVmaW5lcyBhIG51bWJlciB0byBiZSBhZGRlZCBvciBzdWJ0cmFjdGVkIGZyb20gZWFjaCB1bml0IHdoZW4gZGVjbGFyaW5nIGJyZWFrcG9pbnRzIHdpdGggZXhjbHVzaXZlIGludGVydmFsc1xuXG4gIEBhdXRob3IgRWR1YXJkbyBCb3VjYXNcblxuICBAZXhhbXBsZSBzY3NzIC0gSW50ZXJ2YWwgZm9yIHBpeGVscyBpcyBkZWZpbmVkIGFzIGAxYCBieSBkZWZhdWx0XG4gICBAaW5jbHVkZSBtZWRpYShcIj4xMjhweFwiKSB7fVxuXG4gIEdlbmVyYXRlczpcbiAgQG1lZGlhIChtaW4td2lkdGg6IDEyOXB4KSB7fVxuXG4gIEBleGFtcGxlIHNjc3MgLSBJbnRlcnZhbCBmb3IgZW1zIGlzIGRlZmluZWQgYXMgYDAuMDFgIGJ5IGRlZmF1bHRcbiAgIEBpbmNsdWRlIG1lZGlhKFwiPjIwZW1cIikge31cblxuICBHZW5lcmF0ZXM6XG4gIEBtZWRpYSAobWluLXdpZHRoOiAyMC4wMWVtKSB7fVxuXG4gIEBleGFtcGxlIHNjc3MgLSBJbnRlcnZhbCBmb3IgcmVtcyBpcyBkZWZpbmVkIGFzIGAwLjFgIGJ5IGRlZmF1bHQsIHRvIGJlIHVzZWQgd2l0aCBgZm9udC1zaXplOiA2Mi41JTtgXG4gICBAaW5jbHVkZSBtZWRpYShcIj4yLjByZW1cIikge31cblxuICBHZW5lcmF0ZXM6XG4gIEBtZWRpYSAobWluLXdpZHRoOiAyLjFyZW0pIHt9XG5cbiR1bml0LWludGVydmFsczogKFwicHhcIjogMSwgXCJlbVwiOiAwLjAxLCBcInJlbVwiOiAwLjEpICFkZWZhdWx0XG5cbi8vXG4gIEdlbmVyYXRlcyBhIG1lZGlhIHF1ZXJ5IGJhc2VkIG9uIGEgbGlzdCBvZiBjb25kaXRpb25zXG5cbiAgQGF1dGhvciBFZHVhcmRvIEJvdWNhc1xuXG4gIEBwYXJhbSB7TGlzdH0gICAkY29uZGl0aW9ucyAgLSBNZWRpYSBxdWVyeSBjb25kaXRpb25zXG5cbiAgQGV4YW1wbGUgc2NzcyAtIFdpdGggYSBzaW5nbGUgc2V0IGJyZWFrcG9pbnRcbiAgIEBpbmNsdWRlIG1lZGlhKFwiPnBob25lXCIpIHsgfVxuXG4gIEBleGFtcGxlIHNjc3MgLSBXaXRoIHR3byBzZXQgYnJlYWtwb2ludHNcbiAgIEBpbmNsdWRlIG1lZGlhKFwiPnBob25lXCIsIFwiPD10YWJsZXRcIikgeyB9XG5cbiAgQGV4YW1wbGUgc2NzcyAtIFdpdGggY3VzdG9tIHZhbHVlc1xuICAgQGluY2x1ZGUgbWVkaWEoXCI+PTM1OHB4XCIsIFwiPDg1MHB4XCIpIHsgfVxuXG4gIEBleGFtcGxlIHNjc3MgLSBXaXRoIHNldCBicmVha3BvaW50cyB3aXRoIGN1c3RvbSB2YWx1ZXNcbiAgIEBpbmNsdWRlIG1lZGlhKFwiPmRlc2t0b3BcIiwgXCI8PTEzNTBweFwiKSB7IH1cblxuICBAZXhhbXBsZSBzY3NzIC0gV2l0aCBhIHN0YXRpYyBleHByZXNzaW9uXG4gICBAaW5jbHVkZSBtZWRpYShcInJldGluYTJ4XCIpIHsgfVxuXG4gIEBleGFtcGxlIHNjc3MgLSBNaXhpbmcgZXZlcnl0aGluZ1xuICAgQGluY2x1ZGUgbWVkaWEoXCI+PTM1MHB4XCIsIFwiPHRhYmxldFwiLCBcInJldGluYTN4XCIpIHsgfVxuXG5cbj1tZWRpYSgkY29uZGl0aW9ucy4uLilcbiAgQGZvciAkaSBmcm9tIDEgdGhyb3VnaCBsZW5ndGgoJGNvbmRpdGlvbnMpXG4gICAgJGNvbmRpdGlvbnM6IHNldC1udGgoJGNvbmRpdGlvbnMsICRpLCBwYXJzZS1leHByZXNzaW9uKG50aCgkY29uZGl0aW9ucywgJGkpKSlcbiAgJGJyYW5jaGVzOiBnZXQtcXVlcnktYnJhbmNoZXMoJGNvbmRpdGlvbnMpXG4gICRxdWVyeTogXCJcIlxuICBAZWFjaCAkYnJhbmNoIGluICRicmFuY2hlc1xuICAgIEBpZiBzdHItbGVuZ3RoKCRxdWVyeSkgIT0gMFxuICAgICAgJHF1ZXJ5OiAkcXVlcnkgKyBcIiwgXCJcbiAgICAkcXVlcnk6ICRxdWVyeSArICRicmFuY2hcbiAgQG1lZGlhICN7JHF1ZXJ5fVxuICAgIEBjb250ZW50XG5cbi8vXG4gIFJlYWRzIGEgbGlzdCBvZiBtZWRpYSBxdWVyeSBleHByZXNzaW9ucyBhbmQgc2VwYXJhdGVzIGxvZ2ljYWwgZGlzanVuY3Rpb25zIGludG8gZGlmZmVyZW50IGJyYW5jaGVzXG5cbiAgQGF1dGhvciBFZHVhcmRvIEJvdWNhc1xuICBAcGFyYW0ge0xpc3R9ICAgJGV4cHJlc3Npb25zICAtIGxpc3Qgb2YgZXhwcmVzc2lvbnNcbiAgQHRocm93cyBgJGV4cHJlc3Npb25gIGlzIG5vdCBhIHZhbGlkIGV4cHJlc3Npb25cblxuICBAcmV0dXJuIHtMaXN0IHwgTnVsbH1cblxuXG5AZnVuY3Rpb24gZ2V0LXF1ZXJ5LWJyYW5jaGVzKCRleHByZXNzaW9ucylcbiAgJHJlc3VsdDogXCJcIlxuICAkaGFzLWdyb3VwczogZmFsc2VcbiAgLy8gR2V0dGluZyBpbml0aWFsIHNuYXBzaG90IGFuZCBsb29raW5nIGZvciBncm91cHNcbiAgQGVhY2ggJGV4cHJlc3Npb24gaW4gJGV4cHJlc3Npb25zXG4gICAgQGlmIHN0ci1sZW5ndGgoJHJlc3VsdCkgIT0gMFxuICAgICAgJHJlc3VsdDogJHJlc3VsdCArIFwiIGFuZCBcIlxuICAgIEBpZiB0eXBlLW9mKCRleHByZXNzaW9uKSA9PSBcInN0cmluZ1wiXG4gICAgICAkcmVzdWx0OiAkcmVzdWx0ICsgJGV4cHJlc3Npb25cbiAgICBAZWxzZSBpZiB0eXBlLW9mKCRleHByZXNzaW9uKSA9PSBcImxpc3RcIlxuICAgICAgJHJlc3VsdDogJHJlc3VsdCArIG50aCgkZXhwcmVzc2lvbiwgMSlcbiAgICAgICRoYXMtZ3JvdXBzOiB0cnVlXG4gICAgQGVsc2VcbiAgICAgIEB3YXJuIFwiI3skZXhwcmVzc2lvbn0gaXMgbm90IGEgdmFsaWQgZXhwcmVzc2lvbi5cIlxuICAvLyBJZiB3ZSBoYXZlIGdyb3Vwcywgd2UgaGF2ZSB0byBjcmVhdGUgYWxsIHBvc3NpYmxlIGNvbWJpbmF0aW9uc1xuICBAaWYgJGhhcy1ncm91cHNcbiAgICBAZWFjaCAkZXhwcmVzc2lvbiBpbiAkZXhwcmVzc2lvbnNcbiAgICAgIEBpZiB0eXBlLW9mKCRleHByZXNzaW9uKSA9PSBcImxpc3RcIlxuICAgICAgICAkZmlyc3Q6IG50aCgkZXhwcmVzc2lvbiwgMSlcbiAgICAgICAgQGVhY2ggJG1lbWJlciBpbiAkZXhwcmVzc2lvblxuICAgICAgICAgIEBpZiAkbWVtYmVyICE9ICRmaXJzdFxuICAgICAgICAgICAgQGVhY2ggJHBhcnRpYWwgaW4gJHJlc3VsdFxuICAgICAgICAgICAgICAkcmVzdWx0OiBqb2luKCRyZXN1bHQsIHN0ci1yZXBsYWNlLWZpcnN0KCRmaXJzdCwgJG1lbWJlciwgJHBhcnRpYWwpKVxuICBAcmV0dXJuICRyZXN1bHRcblxuLy9cbiAgUGFyc2VzIGEgc3RyaW5nIHRvIGZvcm0gYSBtZWRpYSBxdWVyeSBleHByZXNzaW9uXG5cbiAgQGF1dGhvciBFZHVhcmRvIEJvdWNhc1xuXG4gIEBwYXJhbSB7U3RyaW5nfSAgICRleHByZXNzaW9uICAtIGV4cHJlc3Npb24gKGluIHN0cmluZylcbiAgQHRocm93cyBFeHByZXNzaW9uIHdpdGggdHlwZSBgdHlwZS1vZigkZXhwcmVzc2lvbilgIGRldGVjdGVkLCBzdHJpbmcgZXhwZWN0ZWRcbiAgQHRocm93cyBgJGV4cHJlc3Npb25gIGlzIG1pc3NpbmcgYW4gb3BlcmF0b3JcbiAgQHRocm93cyBVbmtub3duIHVuaXQ6IGAkdW5pdGBcblxuICBAcmV0dXJuIHtTdHJpbmcgfCBOdWxsfVxuXG5cbkBmdW5jdGlvbiBwYXJzZS1leHByZXNzaW9uKCRleHByZXNzaW9uKVxuICAkb3BlcmF0b3I6IFwiXCJcbiAgJHZhbHVlOiBcIlwiXG4gICRlbGVtZW50OiBcIlwiXG4gICRyZXN1bHQ6IFwiXCJcbiAgJGlzLXdpZHRoOiB0cnVlXG4gIEBpZiB0eXBlLW9mKCRleHByZXNzaW9uKSAhPSBcInN0cmluZ1wiXG4gICAgQHdhcm4gXCJFeHByZXNzaW9uIHdpdGggdHlwZSBgI3t0eXBlLW9mKCRleHByZXNzaW9uKX1gIGRldGVjdGVkLCBzdHJpbmcgZXhwZWN0ZWQuXCJcbiAgLy8gU2VwYXJhdGluZyB0aGUgb3BlcmF0b3IgZnJvbSB0aGUgcmVzdCBvZiB0aGUgZXhwcmVzc2lvblxuICBAaWYgc3RyLXNsaWNlKCRleHByZXNzaW9uLCAyLCAyKSA9PSBcIj1cIlxuICAgICRvcGVyYXRvcjogc3RyLXNsaWNlKCRleHByZXNzaW9uLCAxLCAyKVxuICAgICR2YWx1ZTogc3RyLXNsaWNlKCRleHByZXNzaW9uLCAzKVxuICBAZWxzZVxuICAgICRvcGVyYXRvcjogc3RyLXNsaWNlKCRleHByZXNzaW9uLCAxLCAxKVxuICAgICR2YWx1ZTogc3RyLXNsaWNlKCRleHByZXNzaW9uLCAyKVxuICAvLyBDaGVja2luZyB3aGF0IHR5cGUgb2YgZXhwcmVzc2lvbiB3ZXJlIGRlYWxpbmcgd2l0aFxuICBAaWYgbWFwLWhhcy1rZXkoJGJyZWFrcG9pbnRzLCAkdmFsdWUpXG4gICAgJHJlc3VsdDogbWFwLWdldCgkYnJlYWtwb2ludHMsICR2YWx1ZSlcbiAgQGVsc2UgaWYgbWFwLWhhcy1rZXkoJG1lZGlhLWV4cHJlc3Npb25zLCAkZXhwcmVzc2lvbilcbiAgICAkcmVzdWx0OiBtYXAtZ2V0KCRtZWRpYS1leHByZXNzaW9ucywgJGV4cHJlc3Npb24pXG4gICAgJGlzLXdpZHRoOiBmYWxzZVxuICBAZWxzZVxuICAgICRyZXN1bHQ6IHRvLW51bWJlcigkdmFsdWUpXG4gIEBpZiAkaXMtd2lkdGhcbiAgICAkdW5pdDogdW5pdCgkcmVzdWx0KVxuICAgICRpbnRlcnZhbDogMFxuICAgIEBpZiBtYXAtaGFzLWtleSgkdW5pdC1pbnRlcnZhbHMsICR1bml0KVxuICAgICAgJGludGVydmFsOiBtYXAtZ2V0KCR1bml0LWludGVydmFscywgJHVuaXQpXG4gICAgQGVsc2VcbiAgICAgIEB3YXJuIFwiVW5rbm93biB1bml0OiAjeyR1bml0fVwiXG4gICAgQGlmICRvcGVyYXRvciA9PSBcIj5cIlxuICAgICAgJGVsZW1lbnQ6IFwiKG1pbi13aWR0aDogI3skcmVzdWx0ICsgJGludGVydmFsfSlcIlxuICAgIEBlbHNlIGlmICRvcGVyYXRvciA9PSBcIjxcIlxuICAgICAgJGVsZW1lbnQ6IFwiKG1heC13aWR0aDogI3skcmVzdWx0IC0gJGludGVydmFsfSlcIlxuICAgIEBlbHNlIGlmICRvcGVyYXRvciA9PSBcIj49XCJcbiAgICAgICRlbGVtZW50OiBcIihtaW4td2lkdGg6ICN7JHJlc3VsdH0pXCJcbiAgICBAZWxzZSBpZiAkb3BlcmF0b3IgPT0gXCI8PVwiXG4gICAgICAkZWxlbWVudDogXCIobWF4LXdpZHRoOiAjeyRyZXN1bHR9KVwiXG4gICAgQGVsc2VcbiAgICAgIEB3YXJuIFwiI3skZXhwcmVzc2lvbn0gaXMgbWlzc2luZyBhbiBvcGVyYXRvci5cIlxuICBAZWxzZVxuICAgICRlbGVtZW50OiAkcmVzdWx0XG4gIEByZXR1cm4gJGVsZW1lbnRcblxuLy9cbiAgUmVwbGFjZXMgdGhlIGZpcnN0IG9jY3VyZW5jZSBvZiB0aGUgc3RyaW5nIHdpdGggdGhlIHJlcGxhY2VtZW50IHN0cmluZ1xuXG4gIEBhdXRob3IgRWR1YXJkbyBCb3VjYXNcblxuICBAcGFyYW0ge1N0cmluZ30gICAkc2VhcmNoICAtIFRoZSB2YWx1ZSBiZWluZyBzZWFyY2hlZCBmb3JcbiAgQHBhcmFtIHtTdHJpbmd9ICAgJHJlcGxhY2UgIC0gVGhlIHJlcGxhY2VtZW50IHN0cmluZ1xuICBAcGFyYW0ge1N0cmluZ30gICAkc3ViamVjdCAgLSBUaGUgc3RyaW5nIGJlaW5nIHJlcGxhY2VkIG9uXG5cbiAgQHJldHVybiB7U3RyaW5nIHwgTnVsbH1cblxuXG5AZnVuY3Rpb24gc3RyLXJlcGxhY2UtZmlyc3QoJHNlYXJjaCwgJHJlcGxhY2UsICRzdWJqZWN0KVxuICAkc2VhcmNoLXN0YXJ0OiBzdHItaW5kZXgoJHN1YmplY3QsICRzZWFyY2gpXG4gIEBpZiAkc2VhcmNoLXN0YXJ0ID09IG51bGxcbiAgICBAcmV0dXJuICRzdWJqZWN0XG4gICRyZXN1bHQ6IHN0ci1zbGljZSgkc3ViamVjdCwgMCwgJHNlYXJjaC1zdGFydCAtIDEpXG4gICRyZXN1bHQ6ICRyZXN1bHQgKyAkcmVwbGFjZVxuICAkcmVzdWx0OiAkcmVzdWx0ICsgc3RyLXNsaWNlKCRzdWJqZWN0LCAkc2VhcmNoLXN0YXJ0ICsgc3RyLWxlbmd0aCgkc2VhcmNoKSlcbiAgQHJldHVybiAkcmVzdWx0XG5cbi8vXG4gIENhc3RzIGEgbnVtYmVyIHRvIGEgc3RyaW5nXG5cbiAgQGF1dGhvciBIdWdvIEdpcmF1ZGVsXG5cbiAgQHBhcmFtIHtTdHJpbmd9ICAgJHN0cmluZyAgLSBOdW1iZXIgdG8gYmUgcGFyc2VkXG5cbiAgQHJldHVybiB7TGlzdCB8IE51bGx9XG5cbkBmdW5jdGlvbiB0by1udW1iZXIoJHN0cmluZylcbiAgLy8gTWF0cmljZXNcbiAgJHN0cmluZ3M6IFwiMFwiIFwiMVwiIFwiMlwiIFwiM1wiIFwiNFwiIFwiNVwiIFwiNlwiIFwiN1wiIFwiOFwiIFwiOVwiXG4gICRudW1iZXJzOiAwIDEgMiAzIDQgNSA2IDcgOCA5XG4gIC8vIFJlc3VsdFxuICAkcmVzdWx0OiAwXG4gICRkaXZpZGVyOiAwXG4gICRtaW51czogZmFsc2VcbiAgLy8gTG9vcGluZyB0aHJvdWdoIGFsbCBjaGFyYWN0ZXJzXG4gIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggc3RyLWxlbmd0aCgkc3RyaW5nKVxuICAgICRjaGFyYWN0ZXI6IHN0ci1zbGljZSgkc3RyaW5nLCAkaSwgJGkpXG4gICAgJGluZGV4OiBpbmRleCgkc3RyaW5ncywgJGNoYXJhY3RlcilcbiAgICBAaWYgJGNoYXJhY3RlciA9PSBcIi1cIlxuICAgICAgJG1pbnVzOiB0cnVlXG4gICAgQGVsc2UgaWYgJGNoYXJhY3RlciA9PSBcIi5cIlxuICAgICAgJGRpdmlkZXI6IDFcbiAgICBAZWxzZVxuICAgICAgQGlmIHR5cGUtb2YoJGluZGV4KSAhPSBcIm51bWJlclwiXG4gICAgICAgICRyZXN1bHQ6IGlmKCRtaW51cywgJHJlc3VsdCAqIC0xLCAkcmVzdWx0KVxuICAgICAgICBAcmV0dXJuIF9sZW5ndGgoJHJlc3VsdCwgc3RyLXNsaWNlKCRzdHJpbmcsICRpKSlcbiAgICAgICRudW1iZXI6IG50aCgkbnVtYmVycywgJGluZGV4KVxuICAgICAgQGlmICRkaXZpZGVyID09IDBcbiAgICAgICAgJHJlc3VsdDogJHJlc3VsdCAqIDEwXG4gICAgICBAZWxzZVxuICAgICAgICAvLyBNb3ZlIHRoZSBkZWNpbWFsIGRvdCB0byB0aGUgbGVmdFxuICAgICAgICAkZGl2aWRlcjogJGRpdmlkZXIgKiAxMFxuICAgICAgICAkbnVtYmVyOiAkbnVtYmVyIC8gJGRpdmlkZXJcbiAgICAgICRyZXN1bHQ6ICRyZXN1bHQgKyAkbnVtYmVyXG4gIEByZXR1cm4gaWYoJG1pbnVzLCAkcmVzdWx0ICogLTEsICRyZXN1bHQpXG5cbkBmdW5jdGlvbiBfbGVuZ3RoKCRudW1iZXIsICR1bml0KVxuICAkc3RyaW5nczogXCJweFwiIFwiY21cIiBcIm1tXCIgXCIlXCIgXCJjaFwiIFwicGljYVwiIFwiaW5cIiBcImVtXCIgXCJyZW1cIiBcInB0XCIgXCJwY1wiIFwiZXhcIiBcInZ3XCIgXCJ2aFwiIFwidm1pblwiIFwidm1heFwiXG4gICR1bml0czogMXB4IDFjbSAxbW0gMSUgMWNoIDFwaWNhIDFpbiAxZW0gMXJlbSAxcHQgMXBjIDFleCAxdncgMXZoIDF2bWluIDF2bWF4XG4gICRpbmRleDogaW5kZXgoJHN0cmluZ3MsICR1bml0KVxuICBAaWYgdHlwZS1vZigkaW5kZXgpICE9IFwibnVtYmVyXCJcbiAgICBAd2FybiBcIlVua25vd24gdW5pdCBgI3skdW5pdH1gLlwiXG4gICAgQHJldHVybiBmYWxzZVxuICBAcmV0dXJuICRudW1iZXIgKiBudGgoJHVuaXRzLCAkaW5kZXgpXG4iLCIvLyBodHRwOi8vY3NzbW9qby5jb20vbGF0ZXN0X25ld19jbGVhcmZpeF9zb19mYXIvXG4uY2xlYXJmaXg6YWZ0ZXJcbiAgY29udGVudDogXCJcIlxuICBkaXNwbGF5OiB0YWJsZVxuICBjbGVhcjogYm90aFxuIiwiLy8gUkVTUE9OU0lWRSBJTUFHRVNcbmltZywgaWZyYW1lLCBlbWJlZFxuICB3aWR0aDogMTAwJVxuIiwiLmNvbnRhaW5lclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmXG4gIGJvcmRlci1sZWZ0OiAxcHggc29saWQgJGJvcmRlckNvbG9yXG4gIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICRib3JkZXJDb2xvclxuICBtYXJnaW46IDAgYXV0b1xuICBtYXgtd2lkdGg6IDEyMDBweFxuXG5cbltjbGFzcyo9J2NvbC0nXVxuICBkaXNwbGF5OiB0YWJsZS1jZWxsXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGVcblxuICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgIHRleHQtYWxpZ246IGNlbnRlclxuXG4vLzIgY29sdW1ucyB3aWRlXG4vLyBUaGlzIGlzIHVzZWQgaW4gdGhlIGZvb3RlciBmb3IgbmFycm93ZXIgY29sdW1ucyBvZiBsaW5rc1xuLmNvbC0yLTEyXG4gIHdpZHRoOiAyLzEyICogMTAwJVxuXG4gICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgd2lkdGg6IDEwMCVcblxuLy8zIGNvbHVtbnMgd2lkZVxuLy8gVGhpcyBpcyB1c2VkIGluIHRoZSBmb290ZXIgZm9yIGZhdHRlciBjb2x1bW5zIG9mIGxvbmdlci10aXRsZWQgbGlua3Ncbi5jb2wtMy0xMlxuICB3aWR0aDogMy8xMiAqIDEwMCVcblxuICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgIHdpZHRoOiAxMDAlXG5cbi8vIDQgY29sdW1ucyB3aWRlLlxuLy8gVGhpcyBpcyB1c2VkIGluIHRoZSBMZWFkZXJzaGlwIHBhZ2UuXG4uY29sLTQtMTJcbiAgd2lkdGg6IDQvMTIgKiAxMDAlXG5cbiAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICB3aWR0aDogMTAwJVxuXG5cbi8vIDUgY29sdW1ucyB3aWRlLlxuLy8gVGhpcyBpcyB1c2VkIGluIG1vc3Qgb2YgdGhlIGJhbm5lcnMuXG4vLyBJdCBpcyBhbHNvIHVzZWQgaW4gdGhlIE1haW4gbW9kdWxlIGFyZWEgdGhhdCBpbmNsdWRlcyB0aGUgc2lkZWJhci5cbi5jb2wtNS0xMlxuICB3aWR0aDogNS8xMiAqIDEwMCVcblxuICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgIHdpZHRoOiAxMDAlXG5cblxuLy8gNiBjb2x1bW5zIHdpZGUuXG4vLyBUaGlzIHdpbGwgc3BhbiBoYWxmIHRoZSBhdmFpbGFibGUgd2lkdGhcbi8vIFRoZSBDYXJkIE1vZHVsZSBvbiB0aGUgaG9tZXBhZ2UgdXNlcyB0aGlzXG4uY29sLTYtMTJcbiAgd2lkdGg6IDYvMTIgKiAxMDAlXG5cbiAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICB3aWR0aDogMTAwJVxuXG5cbi8vIDcgY29sdW1ucyB3aWRlLlxuLy8gVGhpcyBpcyB1c2VkIGluIG1vc3Qgb2YgdGhlIGJhbm5lcnMuXG4vLyBJdCBpcyBhbHNvIHVzZWQgaW4gdGhlIE1haW4gbW9kdWxlIGFyZWEgdGhhdCBpbmNsdWRlcyB0aGUgc2lkZWJhci5cbi8vIFtjbGFzcyo9Jy0tY29sLTctMTInXVxuLmNvbC03LTEyXG4gIHdpZHRoOiA3LzEyICogMTAwJVxuXG4gICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgd2lkdGg6IDEwMCVcblxuXG4vLyA4IGNvbHVtbnMgd2lkZS5cbi8vIFRoaXMgaXMgdXNlZCBpbiB0aGUgTGVhZGVyc2hpcCBwYWdlLlxuLmNvbC04LTEyXG4gIHdpZHRoOiA4LzEyICogMTAwJVxuXG4gICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgd2lkdGg6IDEwMCVcblxuXG4uY29sLTktMTJcbiAgd2lkdGg6IDkvMTIgKiAxMDAlXG5cbiAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICB3aWR0aDogMTAwJVxuXG5cbi5jb2wtMTAtMTJcbiAgd2lkdGg6IDEwLzEyICogMTAwJVxuXG4gICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgd2lkdGg6IDEwMCVcblxuLmNvbC0xMS0xMlxuICB3aWR0aDogMTEvMTIgKiAxMDAlXG5cbiAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICB3aWR0aDogMTAwJVxuIiwiKlxuICBtYXJnaW46IDBcbiAgcGFkZGluZzogMFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94XG5cbiAgJjo6YWZ0ZXIsICY6OmJlZm9yZVxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3hcblxuYm9keVxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2xhdGVcbiAgcGFkZGluZzogMFxuXG5hXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZVxuICBjb2xvcjokZ3JlZW5cbiAgJjpob3ZlclxuICAgIGNvbG9yOiRuaWdodGdyZWVuXG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmVcblxuLy9SZXNldCBmbGV4Ym94IHNldHRpbmdzIHdoZW4gcmVzcG9uZGluZyBiZWxvdyBkZXNrdG9wXG49cmVzcG9uc2l2ZS1zdGFja1xuICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgIGZsZXgtZmxvdzogY29sdW1uXG4iLCIvLyBUaGUgdGFibGVzIHN0YXJ0IHRvIGxvb2sgZnVnbHkgYXQgYXJvdW5kIDcwMHB4LCBzbyBsZXQncyBzdGFydCByZXNwb25kaW5nIHRoZXJlXG4kdGFibGUtYnJlYWs6IFwiPD03MDBweFwiXG5cbnRhYmxlXG5cdG1hcmdpbjogMCAwIDEuNWVtXG5cdHdpZHRoOiAxMDAlXG5cbnRyXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkY2xvdWRcblxuICArbWVkaWEoJHRhYmxlLWJyZWFrKVxuICAgIG1hcmdpbi10b3A6IDAgIWltcG9ydGFudDtcblxuICAgICY6Zmlyc3QtY2hpbGRcbiAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAkY2xvdWRcblxuICAmOm50aC1jaGlsZChldmVuKVxuICAgIGJhY2tncm91bmQtY29sb3I6ICRzdGVhbVxuXG50ZFxuICB2ZXJ0aWNhbC1hbGlnbjogdG9wXG4gIHBhZGRpbmc6IDEwcHggNXB4XG5cbiAgK21lZGlhKCR0YWJsZS1icmVhaylcbiAgICBtYXJnaW4tdG9wOiAwICFpbXBvcnRhbnQ7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlXG4gICAgcGFkZGluZy1sZWZ0OiA0MCVcblxuICAgICY6YmVmb3JlXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgICAgIHRvcDogNnB4XG4gICAgICBsZWZ0OiA2cHhcbiAgICAgIHdpZHRoOiA0MCVcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDEwcHhcbiAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXBcbiAgICAgIGZvbnQtd2VpZ2h0OiAkc2VtaWJvbGRcblxuXG4gICAgJjpudGgtb2YtdHlwZSgxKVxuICAgICAgJjpiZWZvcmVcbiAgICAgICAgY29udGVudDogXCJDaXR5OiBcIlxuICAgICY6bnRoLW9mLXR5cGUoMilcbiAgICAgICY6YmVmb3JlXG4gICAgICAgIGNvbnRlbnQ6IFwiQWRkcmVzczogXCJcbiAgICAmOm50aC1vZi10eXBlKDMpXG4gICAgICAmOmJlZm9yZVxuICAgICAgICBjb250ZW50OiBcIlBob25lOiBcIlxuXG50aGVhZFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkY2xvdWRcblxuICB0clxuICAgIC8vSGlkZSB0aGUgdGhlYWQgaW5mb3JtYXRpb24gaW4gYW4gYWNjZXNzaWJsZSB3YXlcblxuICAgICttZWRpYSgkdGFibGUtYnJlYWspXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgICAgIHRvcDogLTk5OTlweFxuICAgICAgbGVmdDogLTk5OTlweFxuXG4gIHRoXG4gICAgZm9udC13ZWlnaHQ6ICRzZW1pYm9sZFxuICAgIHRleHQtYWxpZ246IGxlZnRcbiAgICBwYWRkaW5nOiA1cHhcblxudGFibGUsIHRoZWFkLCB0Ym9keSwgdGgsIHRkLCB0clxuICArbWVkaWEoJHRhYmxlLWJyZWFrKVxuICAgIGRpc3BsYXk6IGJsb2NrXG4iLCIubmF2LW1pbm9yXG4gIGRpc3BsYXk6IGJsb2NrXG4gIHRleHQtYWxpZ246IHJpZ2h0XG5cbiAgJl9fY29udGFpbmVyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlXG4gICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAkYm9yZGVyQ29sb3JcbiAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAkYm9yZGVyQ29sb3JcbiAgICBtYXJnaW46IDAgYXV0b1xuICAgIHBhZGRpbmc6IDFyZW0gMS41cmVtXG4gICAgbWF4LXdpZHRoOiAxMjAwcHhcblxuICAgICttZWRpYShcIjw9cGhvbmVcIilcbiAgICAgIC8vZGlzcGxheTogbm9uZVxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyXG5cbiAgbGlcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcblxuICAgICY6YWZ0ZXJcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgICAgY29udGVudDogJyB8ICdcbiAgICAgIGNvbG9yOiAkZ3JlZW5cbiAgICAgIG1hcmdpbjogMCAycHggMCAuM3JlbVxuXG4gICAgJjpudGgtY2hpbGQoMylcblxuICAgICAgJjphZnRlclxuICAgICAgICBjb250ZW50OiAnICdcblxuICAgICY6bGFzdC1jaGlsZFxuICAgICAgYVxuICAgICAgICBmb250LXdlaWdodDpib2xkXG4gICAgICAgIG1hcmdpbi1yaWdodDogMTBweFxuXG4gICAgICAgICttZWRpYShcIjw9cGhvbmVcIilcbiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDBcblxuICAmX19saW5rXG4gICAgY29sb3I6ICRjaGFyY29hbFxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgIHBhZGRpbmc6IDAgLjNyZW0gMFxuXG4gICAgK21lZGlhKFwiPD1waG9uZVwiKVxuICAgICAgZm9udC1zaXplOiAuOHJlbVxuXG5cbiAgICAmOmhvdmVyXG4gICAgICBjb2xvcjogJGdyZWVuXG5cbi5zaXRlLW1hcFxuICBhXG4gICAgY29sb3I6JGNoYXJjb2FsXG4gICAgJjpob3ZlclxuICAgICAgY29sb3I6ICRncmVlblxuIiwiLy8gaGVhZGVyIHNpemVcbiRoZWFkZXItaGVpZ2h0LVM6IDUwcHhcbiRoZWFkZXItaGVpZ2h0LUw6IDgwcHhcblxuLy8gTmF2aWdhdGlvbiBzaXplXG4kbmF2LXdpZHRoLVM6IDI2MHB4XG5cbi8vIFNlYXJjaCBzaXplXG4kc2VhcmNoLWhlaWdodC1TOiA1MHB4XG4kc2VhcmNoLWhlaWdodC1MOiAxMjBweFxuXG4vLyB6LWluZGV4XG4kYmVsb3ctY29udGVudDogMVxuJGNvbnRlbnQ6IDJcbiRhYm92ZS1jb250ZW50OiAzXG5cblxuXG49Y29sdW1uKCRwZXJjZW50YWdlLCAkZmxvYXQtZGlyZWN0aW9uOiBsZWZ0KVxuICB3aWR0aDogMTAwJSAqICRwZXJjZW50YWdlXG4gIGZsb2F0OiAkZmxvYXQtZGlyZWN0aW9uXG5cbj1jbGVhcmZpeFxuICAmOmFmdGVyXG4gICAgY29udGVudDogXCJcIlxuICAgIGRpc3BsYXk6IHRhYmxlXG4gICAgY2xlYXI6IGJvdGhcblxuYS5jZC1uYXYtaXRlbVxuICAmOmhvdmVyXG4gICAgaW1nXG4gICAgICBvcGFjaXR5OiAuNyAhaW1wb3J0YW50XG4gICAgaDNcbiAgICAgIGNvbG9yOiBsaWdodGVuKCRncmVlbiwgMzAlKVxuICAgICAgLy9jb2xvcjogJG5pZ2h0Z3JlZW4gIWltcG9ydGFudFxuXG5cbi8vUHJpbWFyeSBzdHlsZVxuYm9keVxuICArbWVkaWEoXCI8ZGVza3RvcFwiKVxuICAgIC8vIGxheW91dCBtaXhpbnMgaW5zaWRlIHBhcnRpYWxzID4gX2xheW91dC5zY3NzXG4gICAgJi5uYXYtb24tbGVmdC5vdmVyZmxvdy1oaWRkZW5cbiAgICAgIG92ZXJmbG93OiBoaWRkZW5cblxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LW1zLWNsZWFyXG4gIC8vIHJlbW92ZXMgY2xvc2UgaWNvbiAtIElFXG4gIGRpc3BsYXk6IG5vbmVcblxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbixcbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1yZXN1bHRzLWJ1dHRvbixcbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLXJlc3VsdHMtZGVjb3JhdGlvblxuICBkaXNwbGF5OiBub25lXG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKlxuICpNYWluIGNvbXBvbmVudHNcbiAqXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxuXG4uY2QtbWFpbi1jb250ZW50LFxuLmNkLW1haW4taGVhZGVyXG4gIC8qIEZvcmNlIEhhcmR3YXJlIEFjY2VsZXJhdGlvbiBpbiBXZWJLaXRcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApXG4gIHdpbGwtY2hhbmdlOiB0cmFuc2Zvcm1cblxuICB1bFxuICAgIGxpc3Qtc3R5bGU6IG5vbmVcblxuLmNkLW1haW4tY29udGVudFxuICBwb3NpdGlvbjogcmVsYXRpdmVcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3NcblxuICArbWVkaWEoXCI8ZGVza3RvcFwiKVxuICAgICYubmF2LWlzLXZpc2libGVcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtJG5hdi13aWR0aC1TKVxuXG4gICAgLm5hdi1vbi1sZWZ0ICYubmF2LWlzLXZpc2libGVcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgkbmF2LXdpZHRoLVMpXG5cbi5jZC1tYWluLWhlYWRlclxuICBmb250LWZhbWlseTogJHNlcmlmXG4gIHBvc2l0aW9uOiByZWxhdGl2ZVxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zc1xuXG4gICttZWRpYShcIjxkZXNrdG9wXCIpXG4gICAgJi5uYXYtaXMtdmlzaWJsZVxuICAgICAgLy90cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLSRuYXYtd2lkdGgtUylcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKVxuXG4gICAgLm5hdi1vbi1sZWZ0ICYubmF2LWlzLXZpc2libGVcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgkbmF2LXdpZHRoLVMpXG5cbi5jZC1tYWluLWNvbnRlbnRcbiAgLy9DSEFOR0VEXG4gIC8vYmFja2dyb3VuZDogJGNsb3VkXG4gIG1pbi1oZWlnaHQ6IDEwMHZoXG4gIHotaW5kZXg6ICRjb250ZW50XG5cbi5jZC1tYWluLWhlYWRlclxuICBoZWlnaHQ6ICRoZWFkZXItaGVpZ2h0LVNcbiAgYmFja2dyb3VuZDogJHdoaXRlXG4gIHotaW5kZXg6ICRhYm92ZS1jb250ZW50XG5cbiAgLy9DSEFOR0VEXG4gIC8vYm94LXNoYWRvdzogMCAxcHggNXB4IHJnYmEoMTAwLDEwMCwxMDAsIC41KVxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJGNsb3VkXG5cbiAgLm5hdi1pcy1maXhlZCAmXG4gICAgLyogYWRkIC5uYXYtaXMtZml4ZWQgY2xhc3MgdG8gYm9keSBpZiB5b3Ugd2FudCBhIGZpeGVkIG5hdmlnYXRpb24gb24gPiAxMDI0cHhcbiAgICBwb3NpdGlvbjogZml4ZWRcbiAgICB0b3A6IDBcbiAgICBsZWZ0OiAwXG4gICAgd2lkdGg6IDEwMCVcblxuICArbWVkaWEoXCI+ZGVza3RvcFwiKVxuICAgIGhlaWdodDogJGhlYWRlci1oZWlnaHQtTFxuICAgICtjbGVhcmZpeFxuXG4uY2QtbG9nb1xuICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgdG9wOiAxMnB4XG4gIGxlZnQ6IDUlXG5cbiAgaW1nXG4gICAgZGlzcGxheTogYmxvY2tcblxuICArbWVkaWEoXCI8ZGVza3RvcFwiKVxuICAgIC5uYXYtb24tbGVmdCAmXG4gICAgICBsZWZ0OiBhdXRvXG4gICAgICByaWdodDogNSVcblxuICArbWVkaWEoXCI+ZGVza3RvcFwiKVxuICAgIHRvcDogMjZweFxuICAgIGxlZnQ6IDRlbVxuXG4uY2QtaGVhZGVyLWJ1dHRvbnNcbiAgcG9zaXRpb246IGFic29sdXRlXG4gIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICB0b3A6IDNweFxuICByaWdodDogNSVcblxuICBsaVxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuXG4gICttZWRpYShcIjxkZXNrdG9wXCIpXG4gICAgLm5hdi1vbi1sZWZ0ICZcbiAgICAgIHJpZ2h0OiBhdXRvXG4gICAgICBsZWZ0OiA1JVxuICAgICAgbGlcbiAgICAgICAgZmxvYXQ6IHJpZ2h0XG5cbiAgK21lZGlhKFwiPmRlc2t0b3BcIilcbiAgICB0b3A6IDFyZW1cbiAgICByaWdodDogMXJlbVxuXG4uY2Qtc2VhcmNoLXRyaWdnZXIsXG4uY2QtbmF2LXRyaWdnZXJcbiAgcG9zaXRpb246IHJlbGF0aXZlXG4gIGRpc3BsYXk6IGJsb2NrXG4gIHdpZHRoOiA0NHB4XG4gIGhlaWdodDogNDRweFxuICBvdmVyZmxvdzogaGlkZGVuXG4gIHdoaXRlLXNwYWNlOiBub3dyYXBcbiAgLyogaGlkZSB0ZXh0XG4gIGNvbG9yOiB0cmFuc3BhcmVudFxuICB6LWluZGV4OiAkYWJvdmUtY29udGVudFxuXG4uY2Qtc2VhcmNoLXRyaWdnZXJcbiAgJjo6YmVmb3JlLCAmOjphZnRlclxuICAgIC8qIHNlYXJjaCBpY29uXG4gICAgY29udGVudDogJydcbiAgICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3NcbiAgICAvKiBGb3JjZSBIYXJkd2FyZSBBY2NlbGVyYXRpb24gaW4gV2ViS2l0XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApXG4gICAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuXG5cbiAgJjo6YmVmb3JlXG4gICAgLyogbGVuc1xuICAgIHRvcDogMTFweFxuICAgIGxlZnQ6IDExcHhcbiAgICB3aWR0aDogMThweFxuICAgIGhlaWdodDogMThweFxuICAgIGJvcmRlci1yYWRpdXM6IDUwJVxuICAgIGJvcmRlcjogM3B4IHNvbGlkICRuaWdodGdyZWVuXG5cbiAgJjo6YWZ0ZXJcbiAgICAvKiBoYW5kbGVcbiAgICBoZWlnaHQ6IDNweFxuICAgIHdpZHRoOiA4cHhcbiAgICBiYWNrZ3JvdW5kOiAkbmlnaHRncmVlblxuICAgIGJvdHRvbTogMTRweFxuICAgIHJpZ2h0OiAxMXB4XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpXG4gIHNwYW5cbiAgICAvKiBjb250YWluZXIgZm9yIHRoZSBYIGljb25cbiAgICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgICBoZWlnaHQ6IDEwMCVcbiAgICB3aWR0aDogMTAwJVxuICAgIHRvcDogMFxuICAgIGxlZnQ6IDBcbiAgc3Bhbjo6YmVmb3JlLCBzcGFuOjphZnRlclxuICAgIC8qIGNsb3NlIGljb25cbiAgICBjb250ZW50OiAnJ1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZVxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgIGhlaWdodDogM3B4XG4gICAgd2lkdGg6IDIycHhcbiAgICB0b3A6IDUwJVxuICAgIG1hcmdpbi10b3A6IC0ycHhcbiAgICBsZWZ0OiA1MCVcbiAgICBtYXJnaW4tbGVmdDogLTExcHhcbiAgICBiYWNrZ3JvdW5kOiAkbmlnaHRncmVlblxuICAgIG9wYWNpdHk6IDBcbiAgICAvKiBGb3JjZSBIYXJkd2FyZSBBY2NlbGVyYXRpb24gaW4gV2ViS2l0XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApXG4gICAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuXG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzLCB0cmFuc2Zvcm0gMC4zc1xuXG4gIHNwYW46OmJlZm9yZVxuICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKVxuXG4gIHNwYW46OmFmdGVyXG4gICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKVxuXG4gICYuc2VhcmNoLWlzLXZpc2libGVcbiAgICAmOjpiZWZvcmUsICY6OmFmdGVyXG4gICAgICAvKiBoaWRlIHNlYXJjaCBpY29uXG4gICAgICBvcGFjaXR5OiAwXG4gICAgc3Bhbjo6YmVmb3JlLCBzcGFuOjphZnRlclxuICAgICAgLyogc2hvdyBjbG9zZSBpY29uXG4gICAgICBvcGFjaXR5OiAxXG4gICAgc3Bhbjo6YmVmb3JlXG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgxMzVkZWcpXG4gICAgc3Bhbjo6YWZ0ZXJcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKVxuXG4uY2QtbmF2LXRyaWdnZXJcbiAgJjpob3ZlclxuICAgIC8vSGlkZSAnTWVudScgd29yZCBmb3IgYWNjZXNzaWJpbGl0eSBJIGhvcGVcbiAgICBjb2xvcjogdHJhbnNwYXJlbnRcbiAgc3Bhbiwgc3Bhbjo6YmVmb3JlLCBzcGFuOjphZnRlclxuICAgIC8qIGhhbWJ1cmdlciBpY29uIGluIENTU1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZVxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgIGhlaWdodDogM3B4XG4gICAgd2lkdGg6IDI0cHhcbiAgICBiYWNrZ3JvdW5kOiAkbmlnaHRncmVlblxuICBzcGFuXG4gICAgLyogbGluZSBpbiB0aGUgY2VudGVyXG4gICAgcG9zaXRpb246IGFic29sdXRlXG4gICAgdG9wOiA1MCVcbiAgICByaWdodDogMTBweFxuICAgIG1hcmdpbi10b3A6IC0ycHhcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDAuM3MgMC4zc1xuICBzcGFuOjpiZWZvcmUsIHNwYW46OmFmdGVyXG4gICAgLyogb3RoZXIgMiBsaW5lc1xuICAgIGNvbnRlbnQ6ICcnXG4gICAgcmlnaHQ6IDBcbiAgICAvKiBGb3JjZSBIYXJkd2FyZSBBY2NlbGVyYXRpb24gaW4gV2ViS2l0XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApXG4gICAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuXG4gICAgdHJhbnNmb3JtLW9yaWdpbjogMCUgNTAlXG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MgMC4zc1xuICBzcGFuOjpiZWZvcmVcbiAgICAvKiBtZW51IGljb24gdG9wIGxpbmVcbiAgICB0b3A6IC02cHhcbiAgc3Bhbjo6YWZ0ZXJcbiAgICAvKiBtZW51IGljb24gYm90dG9tIGxpbmVcbiAgICB0b3A6IDZweFxuICAmLm5hdi1pcy12aXNpYmxlXG4gICAgc3BhblxuICAgICAgLyogaGlkZSBsaW5lIGluIHRoZSBjZW50ZXJcbiAgICAgIGJhY2tncm91bmQ6IHJnYmEoJG5pZ2h0Z3JlZW4sIDApXG4gICAgc3Bhbjo6YmVmb3JlLCBzcGFuOjphZnRlclxuICAgICAgLyoga2VlcCB2aXNpYmxlIG90aGVyIDIgbGluZXNcbiAgICAgIGJhY2tncm91bmQ6IHJnYmEoJG5pZ2h0Z3JlZW4sIDEpXG4gICAgc3Bhbjo6YmVmb3JlXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNHB4KSB0cmFuc2xhdGVZKC0zcHgpIHJvdGF0ZSg0NWRlZylcbiAgICBzcGFuOjphZnRlclxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDRweCkgdHJhbnNsYXRlWSgycHgpIHJvdGF0ZSgtNDVkZWcpXG4gICttZWRpYShcIj5kZXNrdG9wXCIpXG4gICAgZGlzcGxheTogbm9uZVxuXG5cbi5jZC1wcmltYXJ5LW5hdlxuICByaWdodDogMFxuXG4vL1JpZ2h0IGFsaWduaW5nIHRoZSBtZW51IG1lYW5zIHdlIGhhdmUgdG8gYnVtcCB0aGUgZHJvcGRvd24gYmFjayBvdmVyIHRvIGxpbmUgdXBcbi5jZC1wcmltYXJ5LW5hdiB1bFxuICByaWdodDogMjBweFxuXG4gICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgcmlnaHQ6IDBcblxuLmNkLXByaW1hcnktbmF2LFxuLmNkLXByaW1hcnktbmF2IHVsXG4gIHBvc2l0aW9uOiBmaXhlZFxuICB0b3A6IDBcbiAgLy9yaWdodDogMFxuICBoZWlnaHQ6IDEwMCVcbiAgd2lkdGg6ICRuYXYtd2lkdGgtU1xuICBiYWNrZ3JvdW5kOiAkbmlnaHRncmVlblxuICBvdmVyZmxvdzogYXV0b1xuICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2hcbiAgei1pbmRleDogJGJlbG93LWNvbnRlbnRcblxuICAvKiBGb3JjZSBIYXJkd2FyZSBBY2NlbGVyYXRpb24gaW4gV2ViS2l0XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKVxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMClcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3NcblxuICBhXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lXG4gICAgZGlzcGxheTogYmxvY2tcbiAgICBmb250LXNpemU6IDEuMnJlbVxuICAgIGhlaWdodDogNTBweFxuICAgIGxpbmUtaGVpZ2h0OiA1MHB4XG4gICAgcGFkZGluZzogMCAyMHB4XG4gICAgY29sb3I6ICR3aGl0ZVxuICAgIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkXG4gICAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZVxuICAgIG92ZXJmbG93OiBoaWRkZW5cbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpc1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXBcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgbGlnaHRlbigkbmlnaHRncmVlbiwgNSUpXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApXG4gICAgd2lsbC1jaGFuZ2U6IHRyYW5zZm9ybSwgb3BhY2l0eVxuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzLCBvcGFjaXR5IDAuM3NcblxuICAgICY6aG92ZXJcbiAgICAgIGNvbG9yOiBsaWdodGVuKCRncmVlbiwgMzAlKVxuXG5cbiAgJi5pcy1oaWRkZW5cbiAgICAvKiBzZWNvbmRhcnkgbmF2aWdhdGlvbnMgaGlkZGVuIGJ5IGRlZmF1bHRcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTAwJSlcblxuICAmLm1vdmVzLW91dCA+IGxpID4gYVxuICAgIC8qIHB1c2ggdGhlIG5hdmlnYXRpb24gaXRlbXMgdG8gdGhlIGxlZnQgLSBhbmQgbG93ZXIgZG93biBvcGFjaXR5IC0gd2hlbiBzZWNvbmRhcnkgbmF2IHNsaWRlcyBpblxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSlcbiAgICBvcGFjaXR5OiAwXG5cbittZWRpYShcIjxkZXNrdG9wXCIpXG4gIC5uYXYtb24tbGVmdCAuY2QtcHJpbWFyeS1uYXYsXG4gIC5uYXYtb24tbGVmdCAuY2QtcHJpbWFyeS1uYXYgdWxcbiAgICByaWdodDogYXV0b1xuICAgIGxlZnQ6IDBcblxuXG4uY2QtcHJpbWFyeS1uYXZcbiAgLnNlZS1hbGwgYVxuICAgIC8qIGRpZmZlcmVudCBzdHlsZSBmb3IgdGhlIFNlZSBhbGwgYnV0dG9uIG9uIG1vYmlsZSBhbmQgdGFibGV0XG4gICAgY29sb3I6ICRncmVlblxuXG4gIC5jZC1uYXYtZ2FsbGVyeSAuY2QtbmF2LWl0ZW0sXG4gIC5jZC1uYXYtaWNvbnMgLmNkLW5hdi1pdGVtXG4gICAgLyogaXRlbXMgd2l0aCBwaWN0dXJlIChvciBpY29uKSBhbmQgdGl0bGVcbiAgICBoZWlnaHQ6IDUwcHhcbiAgICBsaW5lLWhlaWdodDogNTBweFxuXG4gICAgaDNcbiAgICAgIG92ZXJmbG93OiBoaWRkZW5cbiAgICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzXG4gICAgICBmb250LXNpemU6IDEuMnJlbVxuICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbFxuICAgICAgcGFkZGluZy1sZWZ0OiAxLjJyZW1cblxuICAuY2QtbmF2LWdhbGxlcnkgLmNkLW5hdi1pdGVtXG4gICAgLy9wYWRkaW5nLWxlZnQ6IDkwcHhcblxuICAgIGltZ1xuICAgICAgcG9zaXRpb246IGFic29sdXRlXG4gICAgICBkaXNwbGF5OiBibG9ja1xuICAgICAgaGVpZ2h0OiA0MHB4XG4gICAgICB3aWR0aDogYXV0b1xuICAgICAgbGVmdDogMjBweFxuICAgICAgdG9wOiA1MCVcbiAgICAgIG1hcmdpbi10b3A6IC0yMHB4XG5cbiAgICAgICttZWRpYShcIjxkZXNrdG9wXCIpXG4gICAgICAgIGRpc3BsYXk6IG5vbmVcblxuICAuY2QtbmF2LWljb25zIC5jZC1uYXYtaXRlbVxuICAgIHBhZGRpbmctbGVmdDogNzVweFxuXG4gICAgcFxuICAgICAgY29sb3I6ICRuaWdodGdyZWVuXG4gICAgICBmb250LXNpemU6IDEuM3JlbVxuICAgICAgLyogaGlkZSBkZXNjcmlwdGlvbiBvbiBzbWFsbCBkZXZpY2VzXG4gICAgICBkaXNwbGF5OiBub25lXG5cbiAgICAmOjpiZWZvcmVcbiAgICAgIC8qIGl0ZW0gaWNvblxuICAgICAgY29udGVudDogJydcbiAgICAgIGRpc3BsYXk6IGJsb2NrXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgICAgIGxlZnQ6IDIwcHhcbiAgICAgIHRvcDogNTAlXG4gICAgICBtYXJnaW4tdG9wOiAtMjBweFxuICAgICAgd2lkdGg6IDQwcHhcbiAgICAgIGhlaWdodDogNDBweFxuICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdFxuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlclxuICAgICAgYmFja2dyb3VuZC1zaXplOiA0MHB4IDQwcHhcblxuICAgICYuaXRlbS0xOjpiZWZvcmVcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi9pbWFnZXMvbGluZS1pY29uLTEuc3ZnXCIpXG4gICAgJi5pdGVtLTI6OmJlZm9yZVxuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiL2ltYWdlcy9saW5lLWljb24tMi5zdmdcIilcbiAgICAmLml0ZW0tMzo6YmVmb3JlXG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIvaW1hZ2VzL2xpbmUtaWNvbi0zLnN2Z1wiKVxuICAgICYuaXRlbS00OjpiZWZvcmVcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi9pbWFnZXMvbGluZS1pY29uLTQuc3ZnXCIpXG4gICAgJi5pdGVtLTU6OmJlZm9yZVxuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiL2ltYWdlcy9saW5lLWljb24tNS5zdmdcIilcbiAgICAmLml0ZW0tNjo6YmVmb3JlXG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIvaW1hZ2VzL2xpbmUtaWNvbi02LnN2Z1wiKVxuICAgICYuaXRlbS03OjpiZWZvcmVcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi9pbWFnZXMvbGluZS1pY29uLTcuc3ZnXCIpXG4gICAgJi5pdGVtLTg6OmJlZm9yZVxuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiL2ltYWdlcy9saW5lLWljb24tOC5zdmdcIilcblxuICArbWVkaWEoXCI8ZGVza3RvcFwiKVxuICAgIC8qIGJ5IGRlZmF1bHQgLmNkLXByaW1hcnktbmF2IGlzIGhpZGRlbiAtIHRyaWNrIGZvciBpT1MgZGV2aWNlcyB3aGVyZSB5b3UgY2FuIHNlZSB0aGUgbmF2aWdhdGlvbiBpZiB5b3UgcHVsbCBkb3duXG4gICAgdmlzaWJpbGl0eTogaGlkZGVuXG4gICAgdHJhbnNpdGlvbjogdmlzaWJpbGl0eSAwcyAwLjNzXG4gICAgJi5uYXYtaXMtdmlzaWJsZVxuICAgICAgdmlzaWJpbGl0eTogdmlzaWJsZVxuICAgICAgdHJhbnNpdGlvbjogdmlzaWJpbGl0eSAwcyAwc1xuXG4rbWVkaWEoXCI+ZGVza3RvcFwiKVxuXG4gIC5jZC1wcmltYXJ5LW5hdlxuICAgIHBvc2l0aW9uOiBzdGF0aWNcbiAgICBwYWRkaW5nOiAwIDUwcHggMCAwXG4gICAgbWFyZ2luLWxlZnQ6IDIwcHhcbiAgICBoZWlnaHQ6IGF1dG9cbiAgICB3aWR0aDogMTAwJVxuICAgIC8vZmxvYXQ6IHJpZ2h0XG4gICAgb3ZlcmZsb3c6IHZpc2libGVcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudFxuICAgIC8vdGV4dC1hbGlnbjogY2VudGVyXG5cbiAgICArY2xlYXJmaXhcblxuICAgICYubW92ZXMtb3V0ID4gbGkgPiBhXG4gICAgICAvKiByZXNldCBtb2JpbGUgc3R5bGVcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKVxuICAgICAgb3BhY2l0eTogMVxuXG4gICAgdWxcbiAgICAgIHBvc2l0aW9uOiBzdGF0aWNcbiAgICAgIGhlaWdodDogYXV0b1xuICAgICAgd2lkdGg6IGF1dG9cbiAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50XG4gICAgICBvdmVyZmxvdzogdmlzaWJsZVxuICAgICAgdGV4dC1hbGlnbjogbGVmdFxuICAgICAgei1pbmRleDogJGFib3ZlLWNvbnRlbnRcblxuICAgICAgJi5pcy1oaWRkZW5cbiAgICAgICAgLyogcmVzZXQgbW9iaWxlIHN0eWxlXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKVxuXG4gICAgICAmLm1vdmVzLW91dCA+IGxpID4gYVxuICAgICAgICAvKiByZXNldCBtb2JpbGUgc3R5bGVcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApXG4gICAgICAgIG9wYWNpdHk6IDFcblxuICAgIC8vVG9wIG5hdiBpdGVtc1xuICAgID4gbGlcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgICAgLy9mbG9hdDogbGVmdFxuICAgICAgbWFyZ2luLWxlZnQ6IC41cmVtXG5cbiAgICA+IGxpID4gYVxuICAgICAgLyogbWFpbiBuYXZpZ2F0aW9uIGJ1dHRvbnMgc3R5bGVcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZVxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrXG4gICAgICBoZWlnaHQ6ICRoZWFkZXItaGVpZ2h0LUxcbiAgICAgIGxpbmUtaGVpZ2h0OiAkaGVhZGVyLWhlaWdodC1MXG4gICAgICBwYWRkaW5nOiAwXG4gICAgICBjb2xvcjogJG5pZ2h0Z3JlZW5cbiAgICAgIG92ZXJmbG93OiB2aXNpYmxlXG4gICAgICBib3JkZXItYm90dG9tOiBub25lXG4gICAgICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzLCBib3gtc2hhZG93IDAuM3NcblxuICAgICAgJjpob3ZlclxuICAgICAgICBjb2xvcjogJGdyZWVuXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZVxuICAgICAgJi5zZWxlY3RlZFxuICAgICAgICBjb2xvcjogJGdyZWVuXG4gICAgICAgIGJveC1zaGFkb3c6IGluc2V0IDAgLTJweCAwICRncmVlblxuXG4gICAgLmdvLWJhY2ssIC5zZWUtYWxsXG4gICAgICBkaXNwbGF5OiBub25lXG5cbiAgICAuY2Qtc2Vjb25kYXJ5LW5hdixcbiAgICAuY2QtbmF2LWdhbGxlcnksXG4gICAgLmNkLW5hdi1pY29uc1xuICAgICAgLyogZHJvcGRvd24gbWVudSBzdHlsZVxuICAgICAgcG9zaXRpb246IGFic29sdXRlXG4gICAgICB0b3A6ICRoZWFkZXItaGVpZ2h0LUxcbiAgICAgIC8vd2lkdGg6IDEwMHZ3XG4gICAgICB3aWR0aDogMTAwJVxuICAgICAgYmFja2dyb3VuZDogJHdoaXRlXG4gICAgICAvL0NIQU5HRURcbiAgICAgIC8vcGFkZGluZzogNDhweCA2NHB4IDEzMHB4XG4gICAgICBwYWRkaW5nOiAycmVtXG4gICAgICBib3gtc2hhZG93OiBpbnNldCAwIDFweCAwICRjbG91ZCwgMCAzcHggNnB4IHJnYmEoIzAwMCwgMC4wNSlcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKVxuICAgICAgK2NsZWFyZml4XG5cbiAgICAgIHRyYW5zaXRpb246IG9wYWNpdHkgLjNzIDBzLCB2aXNpYmlsaXR5IDBzIDBzXG5cbiAgICAgICYuaXMtaGlkZGVuXG4gICAgICAgIG9wYWNpdHk6IDBcbiAgICAgICAgdmlzaWJpbGl0eTogaGlkZGVuXG4gICAgICAgIHRyYW5zaXRpb246IG9wYWNpdHkgLjNzIDBzLCB2aXNpYmlsaXR5IDBzIC4zc1xuXG4gICAgICA+IC5zZWUtYWxsXG4gICAgICAgIC8qIHRoaXMgaXMgdGhlIEJJRyBTZWUgYWxsIGJ1dHRvbiBhdCB0aGUgYm90dG9tIG9mIHRoZSBkcm9wZG93biBtZW51XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZVxuICAgICAgICBsZWZ0OiAwXG4gICAgICAgIGJvdHRvbTogMFxuICAgICAgICBoZWlnaHQ6IDUwcHhcbiAgICAgICAgd2lkdGg6IDEwMCVcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlblxuICAgICAgICAvKiByZXNldCBzb21lIGluaGVyaXRlZCBzdHlsZVxuICAgICAgICBtYXJnaW46IDBcbiAgICAgICAgcGFkZGluZzogMFxuXG4gICAgICAgIGFcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgICAgICAgICB3aWR0aDogMTAwJVxuICAgICAgICAgIGhlaWdodDogMTAwJVxuICAgICAgICAgIHRvcDogMFxuICAgICAgICAgIGxlZnQ6IDBcbiAgICAgICAgICBmb250LXNpemU6IDIuMnJlbVxuICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkXG4gICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyXG4gICAgICAgICAgbGluZS1oZWlnaHQ6IDUwcHhcbiAgICAgICAgICBib3JkZXItdG9wOiAxcHggc29saWQgJGNsb3VkXG4gICAgICAgICAgLyogcmVzZXQgc29tZSBpbmhlcml0ZWQgc3R5bGVcbiAgICAgICAgICBib3JkZXItYm90dG9tOiBub25lXG4gICAgICAgICAgbWFyZ2luOiAwXG4gICAgICAgICAgcGFkZGluZzogMFxuICAgICAgICAgIHRyYW5zaXRpb246IGNvbG9yIDAuMnMsIGJhY2tncm91bmQgMC4ycywgYm9yZGVyIDAuMnNcblxuICAgICAgICAgICY6aG92ZXJcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICRuaWdodGdyZWVuXG4gICAgICAgICAgICBib3JkZXItY29sb3I6ICRuaWdodGdyZWVuXG4gICAgICAgICAgICBjb2xvcjogJHdoaXRlXG5cbiAgICAuY2Qtc2Vjb25kYXJ5LW5hdlxuXG4gICAgICA+IGxpXG4gICAgICAgIC8qIGNoYW5nZSB0aGUgaGVpZ2h0IGFjY29yZGluZyB0byB5b3VyIG5lZWRzIC0geW91IGNhbiBldmVuIHNldCBoZWlnaHQ6IGF1dG9cbiAgICAgICAgaGVpZ2h0OiAzNDBweFxuICAgICAgICAvKiBoZXJlIHlvdSBzZXQgdGhlIG51bWJlciBvZiBjb2x1bW5zIC0gdXNlIHdpZHRoIHBlcmNlbnRhZ2VcbiAgICAgICAgK2NvbHVtbigwLjIzKVxuICAgICAgICAvLyBzZWUgcGFydGlhbHMgPiBfbGF5b3V0LnNjc3NcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAyLjY2JVxuICAgICAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAkY2xvdWRcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlblxuICAgICAgICBvdmVyZmxvdy14OiBoaWRkZW5cbiAgICAgICAgb3ZlcmZsb3cteTogYXV0b1xuICAgICAgICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2hcblxuICAgICAgICAmOm50aC1jaGlsZCg0bisyKVxuICAgICAgICAgIC8qICsyIGJlY2F1c2Ugd2UgaGF2ZSAyIGxpc3QgaXRlbXMgd2l0aCBkaXNwbGF5Om5vbmVcbiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDBcbiAgICAgICAgICBib3JkZXItcmlnaHQ6IG5vbmVcblxuICAgICAgICA+IGFcbiAgICAgICAgICAvKiBzZWNvbmRhcnkgbmF2IHRpdGxlXG4gICAgICAgICAgY29sb3I6ICRncmVlblxuICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkXG4gICAgICAgICAgZm9udC1zaXplOiAxLjZyZW1cbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAuNmVtXG5cbiAgICAgIGFcbiAgICAgICAgaGVpZ2h0OiAzMHB4XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAzMHB4XG4gICAgICAgIHBhZGRpbmc6IDAgMTglIDAgMFxuICAgICAgICBjb2xvcjogJG5pZ2h0Z3JlZW5cbiAgICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZVxuICAgICAgICBmb250LXNpemU6IDEuNHJlbVxuXG4gICAgICAgICY6aG92ZXJcbiAgICAgICAgICBjb2xvcjogJGdyZWVuXG5cbiAgICAgIHVsXG4gICAgICAgIC8qIEZvcmNlIEhhcmR3YXJlIEFjY2VsZXJhdGlvbiBpbiBXZWJLaXRcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApXG5cbiAgICAgIHVsIHVsXG4gICAgICAgIC8qIHRlcnRpYXJ5IG5hdmlnYXRpb25cbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlXG4gICAgICAgIHRvcDogMFxuICAgICAgICBsZWZ0OiAwXG4gICAgICAgIGhlaWdodDogMTAwJVxuICAgICAgICB3aWR0aDogMTAwJVxuXG4gICAgICAgICYuaXMtaGlkZGVuXG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwMCUpXG5cbiAgICAgICAgLmdvLWJhY2tcbiAgICAgICAgICBkaXNwbGF5OiBibG9ja1xuXG4gICAgICAgICAgYVxuICAgICAgICAgICAgY29sb3I6IHRyYW5zcGFyZW50XG5cbiAgICAgICAgLnNlZS1hbGxcbiAgICAgICAgICBkaXNwbGF5OiBibG9ja1xuXG4gICAgICAubW92ZXMtb3V0ID4gbGkgPiBhXG4gICAgICAgIC8qIHB1c2ggdGhlIG5hdmlnYXRpb24gaXRlbXMgdG8gdGhlIGxlZnQgLSBhbmQgbG93ZXIgZG93biBvcGFjaXR5IC0gd2hlbiB0ZXJ0aWFyeSBuYXYgc2xpZGVzIGluXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSlcblxuICAgIC5jZC1uYXYtZ2FsbGVyeVxuICAgICAgYm94LXNoYWRvdzogMCA1cHggNXB4IHJnYmEoMTAwLDEwMCwxMDAsLjMpXG5cbiAgICAgIGxpXG4gICAgICAgIC8qIHNldCBoZXJlIG51bWJlciBvZiBjb2x1bW5zIC0gdXNlIHdpZHRoIHBlcmNlbnRhZ2VcbiAgICAgICAgLy8rY29sdW1uKDAuMjIpXG4gICAgICAgIC8vbWFyZ2luOiAwIDQlIDQwcHggMFxuXG4gICAgICAgIGZsb2F0OiBsZWZ0XG4gICAgICAgIHdpZHRoOiAyNSVcbiAgICAgICAgcGFkZGluZzogMXJlbVxuXG4gICAgICAgICY6bnRoLWNoaWxkKDRuKzIpXG4gICAgICAgICAgLyogKzIgYmVjYXVzZSB3ZSBoYXZlIHR3byBhZGRpdGlvbmFsIGxpc3QgaXRlbXMgd2l0aCBkaXNwbGF5Om5vbmVcbiAgICAgICAgICAvL21hcmdpbi1yaWdodDogMFxuXG4gICAgICAuY2QtbmF2LWl0ZW1cbiAgICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZVxuICAgICAgICBwYWRkaW5nOiAwXG4gICAgICAgIGhlaWdodDogYXV0b1xuICAgICAgICBsaW5lLWhlaWdodDogMS4yXG5cbiAgICAgICAgaW1nXG4gICAgICAgICAgcG9zaXRpb246IHN0YXRpY1xuICAgICAgICAgIG1hcmdpbi10b3A6IDBcbiAgICAgICAgICBoZWlnaHQ6IGF1dG9cbiAgICAgICAgICB3aWR0aDogMTAwJVxuICAgICAgICAgIG1hcmdpbi1ib3R0b206IC42cmVtXG5cbiAgICAgICAgaDNcbiAgICAgICAgICBjb2xvcjogJGdyZWVuXG4gICAgICAgICAgZm9udC1zaXplOiAuOXJlbVxuICAgICAgICAgIHBhZGRpbmc6IDAgLjRyZW1cbiAgICAgICAgICBmb250LXdlaWdodDogbm9ybWFsXG5cbiAgICAuY2QtbmF2LWljb25zXG5cbiAgICAgIGxpXG4gICAgICAgIC8qIHNldCBoZXJlIG51bWJlciBvZiBjb2x1bW5zIC0gdXNlIHdpZHRoIHBlcmNlbnRhZ2VcbiAgICAgICAgK2NvbHVtbigwLjMyKVxuICAgICAgICBtYXJnaW46IDAgMiUgMjBweCAwXG4gICAgICAgICY6bnRoLWNoaWxkKDNuKzIpXG4gICAgICAgICAgLyogKzIgYmVjYXVzZSB3ZSBoYXZlIHR3byBhZGRpdGlvbmFsIGxpc3QgaXRlbXMgd2l0aCBkaXNwbGF5Om5vbmVcbiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDBcbiAgICAgIC5jZC1uYXYtaXRlbVxuICAgICAgICBib3JkZXItYm90dG9tOiBub25lXG4gICAgICAgIGhlaWdodDogNTBweFxuICAgICAgICBsaW5lLWhlaWdodDogMS4yXG4gICAgICAgIHBhZGRpbmc6IDI0cHggMCAwIDg1cHhcbiAgICAgICAgJjpob3ZlclxuICAgICAgICAgIGJhY2tncm91bmQ6IGxpZ2h0ZW4oJGNsb3VkLCA4JSlcbiAgICAgICAgaDNcbiAgICAgICAgICBjb2xvcjogJGdyZWVuXG4gICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGRcbiAgICAgICAgcFxuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrXG4gICAgICAgICY6OmJlZm9yZVxuICAgICAgICAgIGxlZnQ6IDI1cHhcblxuXG4uaGFzLWNoaWxkcmVuID4gYSwgLmdvLWJhY2sgYVxuICBwb3NpdGlvbjogcmVsYXRpdmVcbiAgJjo6YmVmb3JlLCAmOjphZnRlclxuICAgIC8qIGFycm93IGljb24gaW4gQ1NTIC0gZm9yIGVsZW1lbnQgd2l0aCBuZXN0ZWQgdW5vcmRlcmVkIGxpc3RzXG4gICAgY29udGVudDogJydcbiAgICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgICB0b3A6IDUwJVxuICAgIG1hcmdpbi10b3A6IC0xcHhcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgICBoZWlnaHQ6IDJweFxuICAgIHdpZHRoOiAxMHB4XG4gICAgYmFja2dyb3VuZDogbGlnaHRlbigkbmlnaHRncmVlbiwgMTAlKVxuXG4gICAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuXG4gICY6OmJlZm9yZVxuICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKVxuICAmOjphZnRlclxuICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZylcbiAgK21lZGlhKFwiPmRlc2t0b3BcIilcbiAgICAmOjpiZWZvcmUsICY6OmFmdGVyXG4gICAgICBiYWNrZ3JvdW5kOiBkYXJrZW4oJGNsb3VkLCAxMCUpXG4gICAgJjpob3Zlcjo6YmVmb3JlLCAmOmhvdmVyOjphZnRlclxuICAgICAgYmFja2dyb3VuZDogJGdyZWVuXG5cbi5oYXMtY2hpbGRyZW4gPiBhXG4gIHBhZGRpbmctcmlnaHQ6IDQwcHhcbiAgJjo6YmVmb3JlLCAmOjphZnRlclxuICAgIC8qIGFycm93IGdvZXMgb24gdGhlIHJpZ2h0IHNpZGUgLSBjaGlsZHJlbiBuYXZpZ2F0aW9uXG4gICAgcmlnaHQ6IDIwcHhcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiA5cHggNTAlXG5cbi5jZC1wcmltYXJ5LW5hdiAuZ28tYmFjayBhXG4gIHBhZGRpbmctbGVmdDogNDBweFxuICAmOjpiZWZvcmUsICY6OmFmdGVyXG4gICAgLyogYXJyb3cgZ29lcyBvbiB0aGUgbGVmdCBzaWRlIC0gZ28gYmFjayBidXR0b25cbiAgICBsZWZ0OiAyMHB4XG4gICAgdHJhbnNmb3JtLW9yaWdpbjogMXB4IDUwJVxuXG4rbWVkaWEoXCI+ZGVza3RvcFwiKVxuICAuaGFzLWNoaWxkcmVuID4gYVxuICAgICY6OmJlZm9yZSwgJjo6YWZ0ZXJcbiAgICAgIHJpZ2h0OiAxNSVcbiAgLmNkLXByaW1hcnktbmF2ID4gLmhhcy1jaGlsZHJlbiA+IGFcbiAgICAvKiBtYWluIG5hdmlnYXRpb24gYXJyb3dzIG9uIGxhcmdlciBkZXZpY2VzXG4gICAgcGFkZGluZy1yaWdodDogMzBweCAhaW1wb3J0YW50XG4gICAgJjo6YmVmb3JlLCAmOjphZnRlclxuICAgICAgd2lkdGg6IDlweFxuICAgICAgdHJhbnNmb3JtLW9yaWdpbjogNTAlIDUwJVxuICAgICAgYmFja2dyb3VuZDogZGFya2VuKCRjbG91ZCwgMTAlKVxuXG4gICAgICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW5cbiAgICAgIHRyYW5zaXRpb246IHdpZHRoIDAuM3MsIHRyYW5zZm9ybSAwLjNzXG4gICAgJjo6YmVmb3JlXG4gICAgICByaWdodDogMTJweFxuICAgICY6OmFmdGVyXG4gICAgICByaWdodDogN3B4XG4gICAgJi5zZWxlY3RlZDo6YmVmb3JlLCAmLnNlbGVjdGVkOjphZnRlclxuICAgICAgd2lkdGg6IDE0cHhcbiAgICAmLnNlbGVjdGVkOjpiZWZvcmVcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg1cHgpIHJvdGF0ZSgtNDVkZWcpXG4gICAgJi5zZWxlY3RlZDo6YWZ0ZXJcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKVxuICAuY2Qtc2Vjb25kYXJ5LW5hdiA+IC5oYXMtY2hpbGRyZW4gPiBhOjpiZWZvcmUsIC5jZC1zZWNvbmRhcnktbmF2ID4gLmhhcy1jaGlsZHJlbiA+IGE6OmFmdGVyXG4gICAgLyogcmVtb3ZlIGFycm93cyBvbiBzZWNvbmRhcnkgbmF2IHRpdGxlc1xuICAgIGRpc3BsYXk6IG5vbmVcbiAgLmNkLXByaW1hcnktbmF2IC5nby1iYWNrIGFcbiAgICBwYWRkaW5nLWxlZnQ6IDIwcHhcbiAgICAmOjpiZWZvcmUsICY6OmFmdGVyXG4gICAgICBsZWZ0OiAxcHhcblxuXG5cblxuLmNkLXNlYXJjaFxuICBmbG9hdDpyaWdodFxuICBtYXJnaW46IDEuMjVyZW1cblxuICArbWVkaWEoXCI8PXBob25lXCIpXG4gICAgZmxvYXQ6IG5vbmVcbiAgICBtYXJnaW46IDFyZW0gYXV0byAwXG4gICAgd2lkdGg6IDEwMCVcblxuICBmb3JtXG4gICAgcG9zaXRpb246cmVsYXRpdmVcblxuICBpbnB1dFt0eXBlPVwic3VibWl0XCJdXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiL2ltYWdlcy9zZWFyY2gtaWNvbi5wbmdcIilcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnRcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgICB0ZXh0LWluZGVudDogLTk5OTk5cHhcbiAgICBoZWlnaHQ6IDIycHhcbiAgICB3aWR0aDogMjJweFxuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZVxuICAgIGJvcmRlcjogMFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZVxuICAgIHRvcDogNnB4XG4gICAgcmlnaHQ6IDNweFxuICAgIGJhY2tncm91bmQtc2l6ZTogNzUlXG5cbiAgaW5wdXRbdHlwZT1cInNlYXJjaFwiXVxuICAgIHRleHQtaW5kZW50OjFyZW1cbiAgICAvL2JveC1zaGFkb3c6IGluc2V0IDAgMXB4IDAgJGNsb3VkLCAwIDNweCA2cHggcmdiYSgjMDAwLCAwLjA1KVxuICAgIGFwcGVhcmFuY2U6IG5vbmVcbiAgICBib3JkZXI6IDFweCBzb2xpZCAkZ3JhcGhpdGVcblxuICAgICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgICB3aWR0aDogMTAwJVxuXG4gICAgJjo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlcixcbiAgICAmOjotbW96LXBsYWNlaG9sZGVyLFxuICAgICY6LW1zLWlucHV0LXBsYWNlaG9sZGVyXG4gICAgICBjb2xvcjogZGFya2VuKCRjbG91ZCwgMTAlKVxuXG4gICAgJjpmb2N1c1xuICAgICAgb3V0bGluZTogbm9uZVxuXG4gICYuaXMtdmlzaWJsZVxuICAgIG9wYWNpdHk6IDFcbiAgICB2aXNpYmlsaXR5OiB2aXNpYmxlXG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAuM3MgMHMsIHZpc2liaWxpdHkgMHMgMHNcbiAgICAvL2JveC1zaGFkb3c6IDFweCAxcHggNXB4IHJnYmEoMTAwLDEwMCwxMDAsIC41KVxuXG4gIC5uYXYtaXMtZml4ZWQgJlxuICAgIHBvc2l0aW9uOiBmaXhlZFxuXG4gICttZWRpYShcIj5kZXNrdG9wXCIpXG5cblxuICAgIGlucHV0XG5cblxuXG4uY2Qtb3ZlcmxheVxuICAvKiBzaGFkb3cgbGF5ZXIgdmlzaWJsZSB3aGVuIG5hdmlnYXRpb24gaXMgYWN0aXZlXG4gIHBvc2l0aW9uOiBmaXhlZFxuICB6LWluZGV4OiAyXG4gIGhlaWdodDogMTAwJVxuICB3aWR0aDogMTAwJVxuICB0b3A6IDBcbiAgbGVmdDogMFxuICBjdXJzb3I6IHBvaW50ZXJcbiAgLy9iYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKCRncmVlbiwgMC44KVxuICB2aXNpYmlsaXR5OiBoaWRkZW5cbiAgb3BhY2l0eTogMFxuICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW5cbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzIDBzLCB2aXNpYmlsaXR5IDBzIDAuM3MsIHRyYW5zZm9ybSAwLjNzIDBzXG5cbiAgJi5pcy12aXNpYmxlXG4gICAgb3BhY2l0eTogMVxuICAgIHZpc2liaWxpdHk6IHZpc2libGVcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3MgMHMsIHZpc2liaWxpdHkgMHMgMHMsIHRyYW5zZm9ybSAwLjNzIDBzXG5cbiAgK21lZGlhKFwiPGRlc2t0b3BcIilcbiAgICAmLmlzLXZpc2libGVcbiAgICAgIC8vdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0kbmF2LXdpZHRoLVMpXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMClcblxuICAgIC5uYXYtb24tbGVmdCAmLmlzLXZpc2libGVcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgkbmF2LXdpZHRoLVMpXG5cbiAgICAmLmlzLXZpc2libGUuc2VhcmNoLWlzLXZpc2libGUsXG4gICAgLm5hdi1vbi1sZWZ0ICYuaXMtdmlzaWJsZS5zZWFyY2gtaXMtdmlzaWJsZVxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApXG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKlxuICpzdXBwb3J0IGZvciBubyBqc1xuICpcbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLm5vLWpzIC5jZC1wcmltYXJ5LW5hdlxuICBwb3NpdGlvbjogcmVsYXRpdmVcbiAgaGVpZ2h0OiBhdXRvXG4gIHdpZHRoOiAxMDAlXG4gIG92ZXJmbG93OiB2aXNpYmxlXG4gIHZpc2liaWxpdHk6IHZpc2libGVcbiAgei1pbmRleDogJGNvbnRlbnRcblxuLm5vLWpzIC5jZC1zZWFyY2hcbiAgcG9zaXRpb246IHJlbGF0aXZlXG4gIHRvcDogMFxuICBvcGFjaXR5OiAxXG4gIHZpc2liaWxpdHk6IHZpc2libGVcblxuK21lZGlhKFwiPmRlc2t0b3BcIilcbiAgLm5vLWpzIC5jZC1wcmltYXJ5LW5hdlxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZVxuICAgIHotaW5kZXg6ICRhYm92ZS1jb250ZW50XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrXG4gICAgd2lkdGg6IGF1dG9cbiAgICB0b3A6IDBcbiAgICByaWdodDogMTUwcHhcbiAgICBwYWRkaW5nOiAwXG4gIC5uby1qcyAubmF2LWlzLWZpeGVkIC5jZC1wcmltYXJ5LW5hdlxuICAgIHBvc2l0aW9uOiBmaXhlZFxuIiwiLm5hdi1mb290ZXJcblx0cGFkZGluZzogMzBweCAyMHB4IDIwcHhcblx0dGV4dC1hbGlnbjogbGVmdFxuXG5cdCttZWRpYShcIjw9dGFibGV0XCIpXG5cdFx0ZGlzcGxheTogbm9uZVxuXG5cdCZfX2hlYWRpbmdcblx0XHRmb250LWZhbWlseTogJHNhbnNcblx0XHRmb250LXNpemU6IDFyZW1cblx0XHRmb250LXdlaWdodDogJGJvbGRcblx0XHRtYXJnaW4tYm90dG9tOiAxcmVtXG5cblx0XHRhXG5cdFx0XHRjb2xvcjogJGNoYXJjb2FsXG5cdFx0XHQmOmhvdmVyXG5cdFx0XHRcdGNvbG9yOiAkZ3JlZW5cblxuXHQmX19saW5rXG5cdFx0Zm9udC1zaXplOiAxNHB4XG5cblx0Jl9fYm94XG5cdFx0cGFkZGluZzogMCAxMHB4XG5cdFx0dmVydGljYWwtYWxpZ246IHRvcFxuXG5cdCZfX2JveC1uYXJyb3dcblx0XHRwYWRkaW5nOiAwIDEwcHhcblx0XHR2ZXJ0aWNhbC1hbGlnbjogdG9wXG5cblx0Jl9fYnV0dG9uXG5cdFx0Ym9yZGVyLXdpZHRoOiAxcHhcblx0XHRjb2xvcjogJGdyZWVuXG5cdFx0Zm9udC1zaXplOiAuOXJlbVxuXHRcdG1hcmdpbi1ib3R0b206IDFyZW1cblx0XHRwYWRkaW5nOiAuNXJlbSAxcmVtXG5cdFx0d2lkdGg6IDEwMCVcblxuXG5cdC8vIFN1Yi1uYXZpZ2F0aW9uLCB3aGljaCBoaWRlcyBvbiBzbWFsbCBzaXplc1xuXHQmX19zdWItbGlua3Ncblx0XHRmb250LXNpemU6IDE0cHhcblxuXHRcdGxpOm50aC1jaGlsZCgxKVxuXHRcdFx0Zm9udC1mYW1pbHk6ICRzYW5zXG5cdFx0XHRmb250LXNpemU6IDFyZW1cblx0XHRcdGZvbnQtd2VpZ2h0OiAkYm9sZFxuXHRcdFx0bWFyZ2luLWJvdHRvbTogLjVyZW1cblxuXHRcdFx0YVxuXHRcdFx0ICBjb2xvcjogJGNoYXJjb2FsXG5cdFx0XHQgICY6aG92ZXJcblx0XHRcdCAgICBjb2xvcjogJGdyZWVuXG4iLCIvL0Jhbm5lciBUYWxsIC0gVGhpcyBpcyBmb3VuZCBvbiB0aGUgaG9tZXBhZ2Ugb25seVxuLmJhbm5lci10YWxsXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChpbWFnZXMvaW5kZXhfaGVyby5qcGcpXG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlclxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyXG4gIGhlaWdodDogMjAwcHhcbiAgcG9zaXRpb246IHJlbGF0aXZlXG5cbiAgK21lZGlhKFwiPnRhYmxldFwiKVxuXG4gICAgaGVpZ2h0OiA0NjVweFxuXG4gICttZWRpYShcIjw9cGhvbmVcIilcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoaW1hZ2VzL2luZGV4X2hlcm8tMi5qcGcpXG4gICAgLy9iYWNrZ3JvdW5kLXBvc2l0aW9uOiBsZWZ0XG4gICAgaGVpZ2h0OiAyNjVweFxuXG5cbiAgJl9faGVhZGxpbmVcbiAgICBib3R0b206IDNyZW1cbiAgICBjb2xvcjogJHdoaXRlXG4gICAgZm9udC1mYW1pbHk6IHNlcmlmXG4gICAgZm9udC1zaXplOiA0cmVtXG4gICAgZm9udC13ZWlnaHQ6IDgwMFxuICAgIGxlZnQ6IDJyZW1cbiAgICBsaW5lLWhlaWdodDogMVxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZVxuICAgIG1hcmdpbjogMCAwIDFyZW0gMXJlbVxuICAgIHRleHQtc2hhZG93OiAycHggMnB4IDJweCAkY2hhcmNvYWxcblxuICAgICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgICBwb3NpdGlvbjogc3RhdGljXG4gICAgICBmb250LXNpemU6IDJyZW1cbiAgICAgIHBhZGRpbmc6IDJyZW1cblxuICAgIHN1cFxuICAgICAgZm9udC1zaXplOjEuNzVyZW1cblxuICAgICAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICAgICAgdG9wOiAtMC4yNWVtXG5cbi8vIEJhbm5lciBTdGFuZGFyZCAtIFRoaXMgaXMgZm91bmQgb24gdGhlIG1ham9yaXR5IG9mIHRoZSBpbnRlcm5hbCBwYWdlc1xuLmJhbm5lci1zdGFuZGFyZFxuICBiYWNrZ3JvdW5kOiAkZ3JlZW5cbiAgY29sb3I6ICR3aGl0ZVxuICBkaXNwbGF5OiB0YWJsZVxuICBoZWlnaHQ6IGF1dG9cblxuICAvLyBHZXQgcmlkIG9mIHdlaXJkIHNwYWNlIGJlbG93IGltYWdlIGluIHRoZSBiYW5uZXJzXG4gIGltZ1xuICAgIGRpc3BsYXk6IGJsb2NrXG5cbiAgJl9fYm94XG4gICAgcGFkZGluZzogMXJlbSAycmVtXG5cbiAgJl9faGVhZGluZ1xuICAgIGNvbG9yOiAkd2hpdGVcblxuICAmX190ZXh0XG5cbiAgJl9fbWVkaWFcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2xhdGVcblxuICAvLyBUaGlzIGlzIGZvdW5kIG9uIHRoZSBBcHByb2FjaCBQYWdlXG4gICZfX21lZGlhLWFwcHJvYWNoXG4gICAvLyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1hZ2VzL21lZXRpbmcuanBnKVxuICAgLy8gYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyXG4gICAvLyBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyXG5cbiAgICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgICAgaGVpZ2h0OiAzMDBweFxuXG4gIC8vIFRoaXMgaXMgZm91bmQgb24gdGhlIExlYWRlcnNoaXAgcGFnZVxuICAmX19tZWRpYS1sZWFkZXJzaGlwXG4gICAvLyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1hZ2VzL3Blb3BsZS5qcGcpXG4gICAvLyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXJcbiAgIC8vIGJhY2tncm91bmQtc2l6ZTogY292ZXJcblxuICAgICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgICBoZWlnaHQ6IDMwMHB4XG5cbi8vIEJhbm5lciBQYW5vcmFtYSAtIFRoaXMgaXMgZm91bmQgb24gdGhlIE5ld3MgcGFnZVxuLmJhbm5lci1wYW5vcmFtYVxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1hZ2VzL3RyZWVzLmpwZylcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyXG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXJcbiAgaGVpZ2h0OiAyNTVweFxuIiwiLmNhcmQtZGlwdGljXG4gIGRpc3BsYXk6IHRhYmxlXG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAkYm9yZGVyQ29sb3JcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRib3JkZXJDb2xvclxuXG4gICtyZXNwb25zaXZlLXN0YWNrXG5cbiAgJl9fYm94XG4gICAgZGlzcGxheTogdGFibGUtY2VsbFxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGVcblxuICAgIHBhZGRpbmc6IDJyZW0gMXJlbVxuXG4gICAgK21lZGlhKFwiPnRhYmxldFwiKVxuICAgICAgcGFkZGluZzogMnJlbSAxcmVtIDJyZW0gMnJlbVxuXG4gICAgJjpudGgtY2hpbGQoMilcbiAgICAgICttZWRpYShcIj50YWJsZXRcIilcbiAgICAgICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAkYm9yZGVyQ29sb3JcbiAgICAgICAgcGFkZGluZzogMnJlbSAycmVtIDJyZW0gMXJlbVxuXG4gICZfX2hlYWRpbmdcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXJcblxuICAmX19tZWRpYVxuICAgIG1hcmdpbi1ib3R0b206IDJyZW1cblxuICAmX190ZXh0XG4gICAgdGV4dC1hbGlnbjogY2VudGVyXG4gICAgbWFyZ2luLWJvdHRvbTogMnJlbVxuXG4gIHVsXG4gICAgbGlzdC1zdHlsZTogbm9uZVxuICAgIHRleHQtYWxpZ246IGNlbnRlclxuXG4gICAgbGlcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgICAgcGFkZGluZzogLjVyZW1cbiAgICAgIHdpZHRoOiA0NyVcblxuXG4gICZfX2xpbmtcbiAgICBjb2xvcjogJHNpdGUtdGV4dC1jb2xvci1saW5rXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrXG4gICAgZm9udC1mYW1pbHk6ICRzZXJpZlxuICAgIHBhZGRpbmc6IDAgLjRyZW1cbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlXG4gICAgJjpob3ZlclxuICAgICAgY29sb3I6ICRzaXRlLXRleHQtY29sb3ItbGluay1ob3ZlclxuXG5cbi8vIENhcmQgQmlvIC0gVGhlc2UgYXJlIGZvdW5kIG9uIHRoZSBMZWFkZXJzaGlwIHBhZ2Vcbi5jYXJkLWJpb1xuICBwYWRkaW5nLWJvdHRvbTogMnJlbVxuXG4gICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRjbG91ZFxuICAgIG1hcmdpbi1ib3R0b206IDJyZW1cblxuICAmX19tZWRpYVxuICAgIHZlcnRpY2FsLWFsaWduOiB0b3BcblxuICAgICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgICBtYXJnaW4tYm90dG9tOiAxcmVtXG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXJcblxuICAgIGltZ1xuICAgICAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrXG4gICAgICAgIHdpZHRoOiAzMyVcblxuICAmX19ib3hcbiAgICBwYWRkaW5nLWxlZnQ6IDJyZW1cbiAgICBwYWRkaW5nLXRvcDogMFxuICAgIHZlcnRpY2FsLWFsaWduOiB0b3BcblxuICAgICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgICBwYWRkaW5nOiAwXG5cbiAgJl9faGVhZGluZ1xuICAgIC8vTWl4aW4gY2FuIGJlIGZvdW5kIGluIHR5cG9ncmFwaHlcbiAgICArc3RhbmRhcmQtaGVhZGluZygpXG4gICAgbWFyZ2luLWJvdHRvbToxcmVtO1xuXG4gICZfX3N1YnRpdGxlXG4gICAgY29sb3I6ICRzdG9uZVxuICAgIG1hcmdpbi1ib3R0b206IDhweFxuXG4gICAgaDNcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgIGFcbiAgICAgIGNvbG9yOiAkZ3JlZW5cbiAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4XG4gICAgICBpXG4gICAgICAgIGJvcmRlcjoxcHggc29saWQgJGdyZWVuXG4gICAgICAgIHBhZGRpbmc6IDJweFxuXG4gICZfX3RleHRcblxuICAgICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgICB0ZXh0LWFsaWduOiBsZWZ0XG5cbiAgICAqICsgKlxuICAgICAgbWFyZ2luLXRvcDogMXJlbVxuXG5cbi8vIENhcmQgYXJ0aWNsZSAtIFRoZXNlIGFyZSBmb3VuZCBvbiB0aGUgTmV3cyBhbmQgSW5zaWdodHMgcGFnZVxuLmNhcmQtYXJ0aWNsZVxuXG5cbiAgJl9fYm94XG4gICAgYm94LXNoYWRvdzogMCAxcHggMCAkZ3JlZW5cbiAgICBkaXNwbGF5OiBub25lXG4gICAgK3ZlcnQtcGFkZGluZygxLDEpXG5cbiAgICAqICsgKlxuICAgICAgbWFyZ2luLXRvcDogMXJlbVxuXG4gIGFcbiAgICAmOmhvdmVyXG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmVcblxuICBoMlxuICAgICtzdGFuZGFyZC1oZWFkaW5nKCkgLy9NaXhpbiBjYW4gYmUgZm91bmQgaW4gdHlwb2dyYXBoeVxuICAgICY6aG92ZXJcbiAgICAgIGNvbG9yOiRuaWdodGdyZWVuXG5cbiAgc21hbGxcbiAgICBjb2xvcjogIzY2NlxuICAgIGZvbnQtc2l6ZTogLjc1cmVtXG5cbiAgcFxuXG4ubG9hZGVyX19uYXZcbiAgZGlzcGxheTogdGFibGUtY2VsbFxuICBwYWRkaW5nLXRvcDogMS4yNXJlbVxuXG5cbi5jYXJkLXRyaXB0aWNcbiAgZGlzcGxheTogdGFibGVcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICRib3JkZXJDb2xvclxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJGJvcmRlckNvbG9yXG5cbiAgJl9fYm94XG4gICAgcGFkZGluZzogMnJlbVxuICAgIHZlcnRpY2FsLWFsaWduOiB0b3BcblxuICAgICY6bnRoLWNoaWxkKDIpXG4gICAgICArbWVkaWEoXCI+dGFibGV0XCIpXG4gICAgICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgJGJvcmRlckNvbG9yXG4gICAgICAgIC8vcGFkZGluZzogMnJlbSAxcmVtIDJyZW0gMXJlbVxuXG4gICAgJjpudGgtY2hpbGQoMylcbiAgICAgICttZWRpYShcIj50YWJsZXRcIilcbiAgICAgICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAkYm9yZGVyQ29sb3JcbiAgICAgICAgLy9wYWRkaW5nOiAycmVtIDJyZW0gMnJlbSAxcmVtXG5cbiAgJl9fbWVkaWFcbiAgICAvL2JhY2tncm91bmQtY29sb3I6ICRncmVlblxuICAgIGhlaWdodDogMTUwcHhcbiAgICBvdmVyZmxvdzogaGlkZGVuXG4gICAgbWFyZ2luLWJvdHRvbTogMnJlbVxuXG4gICAgaW1nXG5cbiAgJl9faGVhZGluZy1saW5rXG4gICAgK3NtYWxsLWhlYWRpbmcoKVxuICAgIGNvbG9yOiAkc2l0ZS10ZXh0LWNvbG9yLWxpbmtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXJcblxuICAgICY6aG92ZXJcbiAgICAgIGNvbG9yOiAkc2l0ZS10ZXh0LWNvbG9yLWxpbmstaG92ZXJcblxuICAmX190ZXh0XG4gICAgdGV4dC1hbGlnbjogY2VudGVyXG4iLCIvL1xuLy9DVEFzIC0gQ2FsbCB0byBBY3Rpb24gbW9kdWxlc1xuLy9cblxuLy9Db250YWN0IENUQVxuLy9UaGlzIGlzIGZvdW5kIG9uIHRoZSBob21lcGFnZSBvbmx5IHJpZ2h0IG5vd1xuLmN0YS1jb250YWN0XG4gIGJhY2tncm91bmQtY29sb3I6ICRzbGF0ZVxuICBkaXNwbGF5OiB0YWJsZVxuICB3aWR0aDogMTAwJTtcblxuICAmX19ib3hcbiAgICBwYWRkaW5nOiAycmVtXG5cbiAgJl9fYm94Om50aC1jaGlsZCgyKVxuICAgIHBhZGRpbmc6IDJyZW0gMFxuXG5cbiAgJl9fdGV4dFxuICAgIG1hcmdpbjogMFxuICAgIHBhZGRpbmc6IDAgMy41cmVtIDAgMnJlbVxuXG4gICAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICAgIHBhZGRpbmc6IDBcblxuICAmX19idXR0b25cbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgICBtYXJnaW46IDAgMnJlbSAwIDBcblxuICAgICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgICBtYXJnaW46IDBcblxuXG4vL1ZpZGVvIHRlYXNlciBDVEFcbi8vVGhpcyBpcyBmb3VuZCBvbiB0aGUgaG9tZXBhZ2Ugb25seSByaWdodCBub3dcbi5jdGEtdGVhc2VyXG4gIGRpc3BsYXk6IHRhYmxlXG4gIHBhZGRpbmc6IDFyZW0gMnJlbVxuXG4gIHZpZGVvXG4gICAgd2lkdGg6IDEwMCVcbiAgICBoZWlnaHQ6IDEwMCVcblxuICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgIGZsZXgtZmxvdzogY29sdW1uXG5cbiAgJl9fYm94XG4gICAgcGFkZGluZy1yaWdodDogMnJlbVxuXG4gICAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICAgIHBhZGRpbmc6IDBcblxuICAmX19oZWFkaW5nXG5cbiAgJl9fdGV4dFxuICAgIG1hcmdpbi1ib3R0b206IDJyZW1cblxuXG4gICZfX21lZGlhXG4gICAgaGVpZ2h0OiAzMDBweFxuICAgIG92ZXJmbG93OiBoaWRkZW5cblxuICAgICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgICBoZWlnaHQ6IGF1dG9cbiAgICAgIG1hcmdpbi10b3A6IDJyZW1cblxuXG4vL0NlbnRlcmVkIENUQVxuLy9UaGlzIGlzIGZvdW5kIG9uIHRoZSBob21lcGFnZSBvbmx5IHJpZ2h0IG5vd1xuLmN0YS1jZW50ZXJcbiAgcGFkZGluZzogMnJlbVxuICB0ZXh0LWFsaWduOiBjZW50ZXJcblxuICAmX19oZWFkaW5nXG5cbiAgJl9fdGV4dFxuICAgIHBhZGRpbmc6IDAgOHJlbVxuICAgIG1hcmdpbi1ib3R0b206IDJyZW1cblxuICAgICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgICBwYWRkaW5nOiAwXG5cbiAgJl9fYnV0dG9uXG5cblxuXG4vL1N1YnNjcmliZSBDVEEgLSBUaGlzIGlzIGZvdW5kIGF0IHRoZSB0b3Agb2YgdGhlIGZvb3RlclxuLmN0YS1zdWJzY3JpYmVcbiAgYmFja2dyb3VuZC1jb2xvcjogJGdyZWVuXG4gIGNvbG9yOiAkd2hpdGVcbiAgK3ZlcnQtcGFkZGluZygxLDEuNSlcblxuICAmX19oZWFkaW5nXG4gICAgY29sb3I6ICR3aGl0ZVxuICAgIHRleHQtYWxpZ246IGNlbnRlclxuXG4gICZfX2JveFxuICAgIGRpc3BsYXk6IHRhYmxlXG4gICAgbWFyZ2luOiAwIGF1dG9cbiAgICB3aWR0aDogNzUlXG5cbiAgLy8gVE9ETyB1c2UgY29sIGNsYXNzIGluc3RlYWQgZm9yIHdpZHRoXG4gICZfX2lucHV0LWFkZC1vblxuXG5cbiAgJl9faW5wdXRcbiAgICBwYWRkaW5nOiAuOXJlbVxuICAgIHdpZHRoOiAxMDAlXG5cbiAgJl9fYnV0dG9uXG4gICAgYm9yZGVyOiAxcHggc29saWQgJHdoaXRlXG4gICAgY29sb3I6ICR3aGl0ZVxuICAgIGZvbnQtc2l6ZTogMS41cmVtXG4gICAgbWFyZ2luLWxlZnQ6IDFyZW1cbiAgICB3aWR0aDogMTAwJVxuICAgIHRyYW5zaXRpb246IGFsbCAuMnMgZWFzZVxuXG4gICAgJjpob3ZlclxuICAgICAgLypUaGVzZSB3aWxsIHRyYW5zaXRpb24gb24gaG92ZXJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICR3aGl0ZVxuICAgICAgY29sb3I6ICRncmVlblxuXG4gICAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICAgIG1hcmdpbjogMXJlbSAwIDAgMFxuXG4gICZfX21lc3NhZ2VcbiAgICBkaXNwbGF5OiBub25lXG4gICAgcGFkZGluZy10b3A6IDIuNXJlbVxuXG4gICZfX2Vycm9yXG4gICAgZGlzcGxheTogbm9uZVxuICAgIHBhZGRpbmctdG9wOiAxcmVtXG5cbiAgICAmLW1zZ1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyXG5cblxuLy9TaWRlYmFyIENUQSAtIFRoaXMgaXMgZm91bmQgb24gaW50ZXJuYWwgcGFnZXMgb25seVxuLmN0YS1zaWRlYmFyXG4gIHBhZGRpbmc6IDFyZW0gMCAwIDVyZW1cbiAgdmVydGljYWwtYWxpZ246IHRvcFxuXG4gICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgcGFkZGluZzogM3JlbSAycmVtXG5cbiAgJl9fbWVkaWFcbiAgICAvL2hlaWdodDogMTgwcHhcbiAgICAvL292ZXJmbG93OiBoaWRkZW5cblxuICAgICttZWRpYShcIjw9dGFibGV0XCIpXG5cblxuICAgIGltZ1xuXG4gICZfX2hlYWRpbmdcbiAgICBmb250LXNpemU6IDEuMjVyZW1cbiAgICArdmVydC1tYXJnaW4oLjUsLjUpXG5cbiAgJl9fdGV4dFxuXG4gICZfX2J1dHRvblxuICAgIG1hcmdpbi10b3A6IDFyZW1cblxuLy9BZGQgc29tZSBzcGFjaW5nIHdoZW4gdGhlcmUncyBtdWx0aXBsZSBzaWRlYmFyIGl0ZW1zXG4uY3RhLXNpZGViYXJfX2J1dHRvbiArIC5jdGEtc2lkZWJhcl9faGVhZGluZyxcbi5jdGEtc2lkZWJhcl9fdGV4dCArIC5jdGEtc2lkZWJhcl9faGVhZGluZ1xuICBtYXJnaW4tdG9wOiAycmVtXG5cblxuXG4vL1NvY2lhbCBDVEEgLSBUaGVzZSBhcmUgY3VycmVudGx5IGZvdW5kIGF0IHRoZSBib3R0b20gb2YgdGhlIGJsb2cgcG9zdHNcbi5jdGEtc29jaWFsXG4gIHBhZGRpbmctbGVmdDogMXJlbVxuXG4gIC5pY29uXG4gICAgZmlsbDogJGdyZWVuXG5cbiAgICAmOmhvdmVyXG4gICAgICBmaWxsOiAkZ3JhcGhpdGVcblxuICBhXG4gICAgJjpob3ZlclxuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lXG4iLCIvL0Zvb3RlclxuJGZvb3Rlci1oZWFkZXItbmF2OiBUcmVidWNoZXQgTVNcblxuZm9vdGVyXG5cdHBhZGRpbmctYm90dG9tOiA1cmVtXG5cblx0K21lZGlhKFwiPD10YWJsZXRcIilcblx0XHRwYWRkaW5nOiAwXG5cblxuLmZvb3Rlci1jb3B5cmlnaHRcblx0Ym9yZGVyLXRvcDogMXB4IHNvbGlkICRjbG91ZFxuXHRkaXNwbGF5OiB0YWJsZVxuXHRwYWRkaW5nOiAycmVtXG5cdHdpZHRoOiAxMDAlXG5cblx0K21lZGlhKFwiPD10YWJsZXRcIilcblx0XHRwYWRkaW5nOiAycmVtIDAgMCAwXG5cdFx0ZGlzcGxheTogYmxvY2tcblxuXHQmX19sb2dvLWJveFxuXG5cdFx0LmxvZ29cblx0XHRcdHdpZHRoOiA1MDBweFxuXG5cdFx0XHQrbWVkaWEoXCI8PXRhYmxldFwiKVxuXHRcdFx0XHRkaXNwbGF5OiBpbmxpbmUtYmxvY2tcblx0XHRcdFx0d2lkdGg6IGF1dG9cblxuXHRcdFx0XHQubG9nb19fc3RhY2tlZFxuXHRcdFx0XHRcdGRpc3BsYXk6IGlubGluZS1ibG9ja1xuXHRcdFx0XHRcdHdpZHRoOiAyNTBweFxuXG5cblx0Jl9fYm94XG5cdFx0dGV4dC1hbGlnbjogcmlnaHRcblxuXHRcdCttZWRpYShcIj49dGFibGV0XCIsIFwiPj1kZXNrdG9wXCIpXG5cdFx0XHR0ZXh0LWFsaWduOiByaWdodFxuXG5cdFx0c21hbGxcblx0XHRcdGRpc3BsYXk6IGJsb2NrXG5cdFx0XHRmb250LXNpemU6IDE0cHhcblx0XHRcdHBhZGRpbmctcmlnaHQ6IC41cmVtXG5cblxuXHRcdFx0K21lZGlhKFwiPj10YWJsZXRcIiwgXCI+PWRlc2t0b3BcIilcblx0XHRcdFx0Zm9udC1zaXplOiAxMnB4XG5cdFx0XHRcdGRpc3BsYXk6IGlubGluZS1ibG9ja1xuXG5cdFx0XHRcdCY6OmJlZm9yZVxuXHRcdFx0XHQgIGNvbnRlbnQ6ICd8J1xuXG5cdFx0XHRcdCY6bnRoLWNoaWxkKDEpXG5cdFx0XHRcdCAgJjo6YmVmb3JlXG5cdFx0XHRcdCAgICBjb250ZW50OiAnJ1xuXG5cdFx0Lm5hdi1taW5vclxuXHRcdFx0bGlcblx0XHRcdCAgYVxuXHRcdFx0ICAgIGZvbnQtc2l6ZTogMTRweFxuXHRcdFx0ICAgICttZWRpYShcIj49dGFibGV0XCIsIFwiPj1kZXNrdG9wXCIpXG5cdFx0XHQgICAgICBmb250LXNpemU6IDEycHhcblxuLmZvb3Rlci1kaXNjbGFpbWVyXG5cdHRleHQtYWxpZ246IGNlbnRlclxuXHR3aWR0aDogMTAwJVxuXG5cdCZfX2JveFxuXHRcdGJvcmRlcjogMXB4IHNvbGlkICRmb290ZXItdGV4dFxuXHRcdGRpc3BsYXk6IGlubGluZS1ibG9ja1xuXHRcdHRleHQtYWxpZ246IGNlbnRlclxuXHRcdHBhZGRpbmc6IDIwcHhcblx0XHRtYXJnaW46IDUwcHggYXV0byAxMHB4XG5cblx0XHQrbWVkaWEoXCI+PWRlc2t0b3BcIilcblx0XHQgIHBhZGRpbmc6IDIwcHggMTAwcHhcblxuXHR1bFxuXHRcdEBleHRlbmQgJW1lbnVcblx0XHRkaXNwbGF5OiB0YWJsZVxuXHRcdG1hcmdpbjogMCBhdXRvXG5cblx0XHRsaVxuXHRcdFx0ZGlzcGxheTogdGFibGUtY2VsbFxuXHRcdFx0Ym9yZGVyOiAxcHggc29saWQgI0NDQ0NDQ1xuXHRcdFx0Ym9yZGVyLXJpZ2h0OiBub25lXG5cdFx0XHRib3JkZXItbGVmdC1zdHlsZTogZGFzaGVkXG5cdFx0XHRtYXJnaW46IDAgMTBweFxuXHRcdFx0cGFkZGluZzogLjVyZW1cblx0XHRcdCY6bGFzdC1jaGlsZFxuXHRcdFx0ICBib3JkZXItcmlnaHQ6IDFweCAjQ0NDIHNvbGlkXG5cdFx0XHQmOmZpcnN0LWNoaWxkXG5cdFx0XHQgIGJvcmRlci1sZWZ0LXN0eWxlOiBzb2xpZFxuXG5cdGg2LCBwLCB1bFxuXHRcdGZvbnQtc2l6ZTogMTRweFxuXHRcdG1hcmdpbi1ib3R0b206IDFyZW1cblxuXHRcdCttZWRpYShcIj49dGFibGV0XCIsIFwiPj1kZXNrdG9wXCIpXG5cdFx0XHRmb250LXNpemU6IDEycHhcbiIsIlxuQGtleWZyYW1lcyBmYWRlSW5cbiAgZnJvbVxuICAgIG9wYWNpdHk6IDBcbiAgdG9cbiAgICBvcGFjaXR5OiAxXG5cbi5oZWFkZXJfX2xvZ28tYm94XG4gIGJhY2tncm91bmQtY29sb3I6ICR3aGl0ZVxuICBib3JkZXItbGVmdDogMXB4IHNvbGlkICRib3JkZXJDb2xvclxuICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAkYm9yZGVyQ29sb3JcbiAgbWFyZ2luOiAwIGF1dG9cbiAgbWF4LXdpZHRoOiAxMjAwcHhcblxuLy8gRm9yIElFOVxuLm5vLWNzc2FuaW1hdGlvbnMgLmhlYWRlcl9fbG9nby1ib3hcbiAgcGFkZGluZy10b3A6IDBcblxuLmhlYWRlcl9fbG9nb1xuICBiYWNrZ3JvdW5kOiAkd2hpdGVcblxuXG4ubG9nb1xuICBkaXNwbGF5OiBibG9ja1xuICBwYWRkaW5nOiAwcmVtIDAgMHJlbSAycmVtXG4gIHdpZHRoOiA2MDBweFxuXG4gICttZWRpYShcIjw5MDBweFwiKVxuICAgIHdpZHRoOiA0MDBweFxuXG4gICttZWRpYShcIjw1MDBweFwiKVxuICAgIHBhZGRpbmc6IDFyZW1cbiAgICB3aWR0aDogMzAwcHhcblxuLy8gRm9yIElFOVxuLm5vLWNzc2FuaW1hdGlvbnMgLmxvZ29cbiAgaGVpZ2h0OiA2OHB4XG4gIHBhZGRpbmc6IDAgMXJlbVxuXG5cbnN2Z1xuXG4gIHBhdGgsIHBvbHlnb25cbiAgICBmaWxsOiAkZ3JlZW5cblxuICAmOmhvdmVyIHBhdGgsXG4gICY6aG92ZXIgcG9seWdvblxuICAgIG9wYWNpdHk6IC43XG4gICAgdHJhbnNpdGlvbjogZmlsbCAwLjJzIGVhc2VcbiAgICBmaWxsLW9wYWNpdHk6IDAuN1xuXG4ubG9nb19fc3RyZXRjaGVkXG4gIGRpc3BsYXk6IGJsb2NrXG5cbiAgK21lZGlhKFwiPDkwMHB4XCIpXG4gICAgZGlzcGxheTogbm9uZVxuXG4ubG9nb19fc3RhY2tlZFxuICBkaXNwbGF5OiBub25lXG5cbiAgK21lZGlhKFwiPDkwMHB4XCIpXG4gICAgZGlzcGxheTogYmxvY2tcblxuXG4vLyAyNSBwaWVjZXNcbi5sb2dvX19nbG9iZVxuICBwYXRoXG4gIC8vTG9nbyBMb2FkIEFuaW1hdGlvblxuICAvLyAgIG9wYWNpdHk6IDBcbiAgLy8gICBhbmltYXRpb246IGZhZGVJbiBlYXNlLWluIDFcbiAgLy8gICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkc1xuICAvLyAgIGFuaW1hdGlvbi1kdXJhdGlvbjogLjVzXG5cbiAgLy8gcGF0aDpudGgtY2hpbGQoMSlcbiAgLy8gICBhbmltYXRpb24tZGVsYXk6IDAuMXNcblxuICAvLyBwYXRoOm50aC1jaGlsZCgyKVxuICAvLyAgIGFuaW1hdGlvbi1kZWxheTogMC4xMXNcblxuICAvLyBwYXRoOm50aC1jaGlsZCgzKVxuICAvLyAgIGFuaW1hdGlvbi1kZWxheTogMC4yMnNcblxuICAvLyBwYXRoOm50aC1jaGlsZCg0KVxuICAvLyAgIGFuaW1hdGlvbi1kZWxheTogMC4xM3NcblxuICAvLyBwYXRoOm50aC1jaGlsZCg1KVxuICAvLyAgIGFuaW1hdGlvbi1kZWxheTogMC4xNHNcblxuICAvLyBwYXRoOm50aC1jaGlsZCg2KVxuICAvLyAgIGFuaW1hdGlvbi1kZWxheTogMC4xNXNcblxuICAvLyBwYXRoOm50aC1jaGlsZCg3KVxuICAvLyAgIGFuaW1hdGlvbi1kZWxheTogMC4xNnNcblxuICAvLyBwYXRoOm50aC1jaGlsZCg4KVxuICAvLyAgIGFuaW1hdGlvbi1kZWxheTogMC4zN3NcblxuICAvLyBwYXRoOm50aC1jaGlsZCg5KVxuICAvLyAgIGFuaW1hdGlvbi1kZWxheTogMC4xOHNcblxuICAvLyBwYXRoOm50aC1jaGlsZCgxMClcbiAgLy8gICBhbmltYXRpb24tZGVsYXk6IDAuMTlzXG5cbiAgLy8gcGF0aDpudGgtY2hpbGQoMTEpXG4gIC8vICAgYW5pbWF0aW9uLWRlbGF5OiAwLjIwc1xuXG4gIC8vIHBhdGg6bnRoLWNoaWxkKDEyKVxuICAvLyAgIGFuaW1hdGlvbi1kZWxheTogMC4yMXNcblxuICAvLyBwYXRoOm50aC1jaGlsZCgxMylcbiAgLy8gICBhbmltYXRpb24tZGVsYXk6IDAuMTJzXG5cbiAgLy8gcGF0aDpudGgtY2hpbGQoMTQpXG4gIC8vICAgYW5pbWF0aW9uLWRlbGF5OiAwLjIzc1xuXG4gIC8vIHBhdGg6bnRoLWNoaWxkKDE1KVxuICAvLyAgIGFuaW1hdGlvbi1kZWxheTogMC4zNHNcblxuICAvLyBwYXRoOm50aC1jaGlsZCgxNilcbiAgLy8gICBhbmltYXRpb24tZGVsYXk6IDAuMjVzXG5cblxuLm5vLWNzc2FuaW1hdGlvbnMgLmxvZ29fX2dsb2JlXG4gIHBhdGhcbiAgICBmaWxsOiAkZ3JlZW5cbiAgICBvcGFjaXR5OiAxXG5cbi8vIE90aGVyIGNsYXNzZXMgZm9yIGFuaW1haXRvbiBtYXliZVxuLy8gLmxvZ29fX3RleHRcbi8vXG4vLyAubG9nb19fY29tbWVyY2Vcbi8vICAgcGF0aCwgcG9seWdvblxuLy9cbi8vXG4vLyAubG9nb19fdHJ1c3Rcbi8vICAgcGF0aCwgcG9seWdvblxuLy9cbi8vXG4vLyAubG9nb19fdGFnbGluZVxuLy8gICBwYXRoLCBwb2x5Z29uXG4iLCIvLy0gVGhpcyBjb250YWluZXIgaG9sZCB0aGUgbWFpbiBjb250ZW50IG9uIGVhY2ggcGFnZVxuLy8tIEl0IGlzIGZvdW5kIG9uIGFsbCBpbnRlcm5hbCBwYWdlc1xuXG4vLy0gQWxsIFwiTWFpblwiIGNsYXNzZXMgaGF2ZSBzaGFyZSB0aGVzZSBydWxlc1xuJW1haW5cbiAgZGlzcGxheTogdGFibGVcbiAgcGFkZGluZzogMXJlbSAycmVtXG5cbi5tYWluLXN0YW5kYXJkXG4gIEBleHRlbmQgJW1haW5cbiAgcGFkZGluZy1ib3R0b206IDVyZW1cblxuICAmX19jb250ZW50XG5cbiAgICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgICAgdGV4dC1hbGlnbjogbGVmdFxuXG4gICAgJi5jb2wtNy0xMlxuICAgICAgcGFkZGluZy10b3A6IDEuNXJlbVxuICAgICAgdmVydGljYWwtYWxpZ246IHRvcFxuXG4gICZfX3RleHRcblxuICAgICogKyAqXG4gICAgICBtYXJnaW4tdG9wOiAxcmVtXG5cbiAgICBoMlxuICAgICAgK3N0YW5kYXJkLWhlYWRpbmcoKVxuICAgICAgK3ZlcnQtcGFkZGluZygxLDApXG5cbiAgICAvLyBEZWZhdWx0IHVub3JkZXJlZCBsaXN0cyBpbiBjb250ZW50IGFyZWFzXG4gICAgdWxcbiAgICAgIHBhZGRpbmctbGVmdDogMnJlbVxuICAgICAgbGlzdC1zdHlsZTogZGlzY1xuXG4gICAgICBsaVxuICAgICAgICBtYXJnaW4tdG9wOiAwLjVyZW1cblxuICAgIC8vIERlZmF1bHQgb3JkZXJlZCBsaXN0cyBpbiBjb250ZW50IGFyZWFzXG4gICAgb2xcbiAgICAgIHBhZGRpbmctbGVmdDogMnJlbVxuICAgICAgLy9saXN0LXN0eWxlLXR5cGU6IHVwcGVyLXJvbWFuXG5cbiAgICAvLyBLZWVwIHNtYWxsIGltYWdlcyBmcm9tIGdldHRpbmcgZ2lhbnRcbiAgICBpbWdcbiAgICAgIGhlaWdodDogYXV0b1xuICAgICAgd2lkdGg6IDEwMCVcblxuICAgICAgLy8gR2l2ZSBzbWFsbCBpbWFnZXMgYSBjbGFzcyBvZiAuYXV0byBzbyB0aGV5IGZpdCBjb3JyZWN0bHkuXG4gICAgICAmLmF1dG9cbiAgICAgICAgd2lkdGg6IGF1dG9cblxuXG4vLyBNYWluIGNvbnRlbnQgYmxvY2sgb24gTGVhZGVyc2hpcCBwYWdlXG4ubWFpbi1iaW9zXG4gIGRpc3BsYXk6IHRhYmxlXG4gIHBhZGRpbmc6IDJyZW1cblxuXG4vLyBNYWluIGNvbnRlbnQgYmxvY2sgb24gTmV3cyBwYWdlXG4ubWFpbi1uZXdzXG4gIEBleHRlbmQgJW1haW5cblxuLy9NYWluIGNvbnRlbnQgbG9jYXRpb25zIHRhYmxlXG4uY2l0eS1jb2x1bW5cbiAgd2lkdGg6MTM1cHhcbi5hZGRyZXNzLWNvbHVtblxuICB3aWR0aDozMzVweFxuLnBob25lLWNvbHVtblxuXG4ubG9jYXRpb24tcGhvbmVcbiAgY29sb3I6JG5pZ2h0Z3JlZW5cbiAgJjpob3ZlclxuICAgIGNvbG9yOiRncmVlblxuXG5cbi8vIE1haW4gY29udGVudCBibG9jayBvbiBCbG9nIFBvc3QgcGFnZVxuLm1haW4tcG9zdFxuICBAZXh0ZW5kICVtYWluXG5cbiAgJl9fdGV4dFxuXG4gICAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICAgIHRleHQtYWxpZ246IGxlZnRcblxuICAgICogKyAqXG4gICAgICBtYXJnaW4tdG9wOiAxcmVtXG5cbiAgICBoMlxuICAgICAgK3N0YW5kYXJkLWhlYWRpbmcoKVxuXG4gICAgaDNcbiAgICAgICttaW5vci1oZWFkaW5nKClcblxuICAgIGZpZ2NhcHRpb25cbiAgICAgIGNvbG9yOiAkZ3JhcGhpdGVcbiAgICAgIGZvbnQtc2l6ZTogLjc1cmVtXG4gICAgICBtYXJnaW4tdG9wOiAwXG5cbiAgICBibG9ja3F1b3RlXG4gICAgICArYmxvY2txdW90ZSgpXG5cblxuLmJyZWFkY3J1bWJcbiAgcGFkZGluZy1ib3R0b206IDEuNXJlbVxuICBmb250LXNpemU6MTRweFxuXG4gIGFcbiAgICBjb2xvcjokZ3JlZW5cbiAgICAmOmhvdmVyXG4gICAgICBjb2xvcjokbmlnaHRncmVlblxuICBzcGFuXG4gICAgY29sb3I6JHN0b25lXG4iLCIuZm9ybS1zdGFuZGFyZFxuICBtYXJnaW4tdG9wOiAycmVtXG5cbiAgaW5wdXQsXG4gIGlucHV0W3R5cGU9XCJlbWFpbFwiXSxcbiAgaW5wdXRbdHlwZT1cIm51bWJlclwiXSxcbiAgaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdLFxuICBpbnB1dFt0eXBlPVwic2VhcmNoXCJdLFxuICBpbnB1dFt0eXBlPVwidGVsXCJdLFxuICBpbnB1dFt0eXBlPVwidGV4dFwiXSxcbiAgaW5wdXRbdHlwZT1cInVybFwiXSxcbiAgaW5wdXRbdHlwZT1cImNvbG9yXCJdLFxuICBpbnB1dFt0eXBlPVwiZGF0ZVwiXSxcbiAgaW5wdXRbdHlwZT1cIm5hbWVcIl0sXG4gIGlucHV0W3R5cGU9XCJkYXRldGltZVwiXSxcbiAgaW5wdXRbdHlwZT1cImRhdGV0aW1lLWxvY2FsXCJdLFxuICBpbnB1dFt0eXBlPVwibW9udGhcIl0sXG4gIGlucHV0W3R5cGU9XCJ0aW1lXCJdLFxuICBpbnB1dFt0eXBlPVwid2Vla1wiXSxcbiAgdGV4dGFyZWFcbiAgXHRjb2xvcjogJHNpdGUtdGV4dC1jb2xvclxuICBcdGJvcmRlcjogMXB4IHNvbGlkICRib3JkZXJDb2xvclxuICAgIGJveC1zaXppbmc6IGNvbnRlbnQtYm94XG4gIFx0Ym9yZGVyLXJhZGl1czogMFxuICAgIGZvbnQtc2l6ZTogMXJlbVxuICBcdHBhZGRpbmc6IDFyZW1cbiAgXHRkaXNwbGF5OiBibG9ja1xuICBcdHdpZHRoOiAxMDAlXG5cblxuICBsYWJlbFxuICAgIGRpc3BsYXk6IGJsb2NrXG5cbiAgaW5wdXRbdHlwZT1cImJ1dHRvblwiXSxcbiAgaW5wdXRbdHlwZT1cInJlc2V0XCJdLFxuICBpbnB1dFt0eXBlPVwic3VibWl0XCJdXG4gICAgLy8gYW55IGRlZmF1bHQgYnV0dG9uIHN0eWxlcyB0aGF0IG5lZWQgdG8gYmUgZGlmZmVyZW50IG9uIGZvcm1zIGdvIGhlcmVcbiAgICBkaXNwbGF5OiBibG9ja1xuXG5cbiAgJl9fY2hlY2tib3hcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgICBmbG9hdDogbGVmdCAhaW1wb3J0YW50XG4gICAgd2lkdGg6IGF1dG8gIWltcG9ydGFudFxuXG4gICZfX2NoZWNrYm94ICsgbGFiZWxcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgICBmbG9hdDogbGVmdCAhaW1wb3J0YW50XG4gICAgbWFyZ2luOiAxMHB4IDEwcHggMjBweCAxMHB4ICFpbXBvcnRhbnRcblxuICAuc2VsZWN0Ym94XG4gICAgYmFja2dyb3VuZDogJHdoaXRlXG4gICAgYm9yZGVyLXJhZGl1czogMFxuICAgIGN1cnNvcjogcG9pbnRlclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZVxuICAgIGhlaWdodDogNDhweFxuXG4gICAgJjo6YWZ0ZXJcbiAgICAgIGNvbG9yOiAjY2NjXG4gICAgICBjb250ZW50OiAn4pa+J1xuICAgICAgcG9zaXRpb246IGFic29sdXRlXG4gICAgICB0b3A6IDFyZW1cbiAgICAgIHJpZ2h0OiAuNXJlbVxuICAgICAgd2lkdGg6IDFyZW1cbiAgICAgIGhlaWdodDogMXJlbVxuXG5cbiAgc2VsZWN0XG4gICAgYmFja2dyb3VuZDogJHdoaXRlXG4gICAgYm94LXNoYWRvdzogbm9uZVxuICAgIGJvcmRlci1yYWRpdXM6IDBcbiAgICBib3JkZXI6IDFweCBzb2xpZCAkYm9yZGVyQ29sb3JcbiAgICBjb2xvcjogJHN0b25lXG4gICAgY3Vyc29yOiBwb2ludGVyXG4gICAgZGlzcGxheTogYmxvY2tcbiAgICBmb250LXNpemU6IDFyZW1cbiAgICBoZWlnaHQ6IDYwcHhcbiAgICBwb3NpdGlvbjogcmVsYXRpdmVcblxuICAgIHBhZGRpbmctbGVmdDogMXJlbVxuICAgIHdpZHRoOiAxMDAlXG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmVcbiAgICAtbW96LWFwcGVhcmFuY2U6IG5vbmVcbiAgICBhcHBlYXJhbmNlOiBub25lXG5cblxuLmNvbnRhY3QtdXNfX2J1dHRvblxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2xhdGVcbiAgbWF4LXdpZHRoOjE4M3B4XG4gIGNsZWFyOmJvdGhcblxuXG4vLyBJRTkgb3ZlcnJpZGVcbi8vIFVzaW5nIG1vZGVybml6ciBmb3IgZmVhdHVyZSBkZXRlY3Rpb25cbi5uby1jc3NncmFkaWVudHMgLnNlbGVjdGJveDo6YWZ0ZXJcbiAgei1pbmRleDogLTNcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ== */
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9zb3VyY2UvdmVuZG9yL19ub3JtYWxpemUuc2NzcyIsInN0eWxlLmNzcyIsIi9zb3VyY2UvYmFzZS9fdHlwb2dyYXBoeS5zYXNzIiwiL3NvdXJjZS9iYXNlL19jbGVhci1maXguc2FzcyIsIi9zb3VyY2UvYmFzZS9fbGF5b3V0LnNhc3MiLCIvc291cmNlL2Jhc2UvX2luY2x1ZGUtbWVkaWEuc2FzcyIsIi9zb3VyY2UvYmFzZS9fZ2xvYmFsLnNhc3MiLCIvc291cmNlL2Jhc2UvX2NvbG9ycy5zYXNzIiwiL3NvdXJjZS9iYXNlL190YWJsZXMuc2FzcyIsIi9zb3VyY2UvbW9kdWxlcy9uYXYvX25hdi1taW5vci5zYXNzIiwiL3NvdXJjZS9tb2R1bGVzL25hdi9fbmF2LW1lZ2Euc2FzcyIsIi9zb3VyY2UvbW9kdWxlcy9uYXYvX25hdi1mb290ZXIuc2FzcyIsIi9zb3VyY2UvbW9kdWxlcy9iYW5uZXIvX19iYW5uZXIuc2FzcyIsIi9zb3VyY2UvbW9kdWxlcy9jYXJkcy9fX2NhcmRzLnNhc3MiLCIvc291cmNlL21vZHVsZXMvY3RhL19fY3RhLnNhc3MiLCIvc291cmNlL21vZHVsZXMvZm9vdGVyL19mb290ZXIuc2FzcyIsIi9zb3VyY2UvbW9kdWxlcy9oZWFkZXIvX2hlYWRlci5zYXNzIiwiL3NvdXJjZS9tb2R1bGVzL21haW4vX21haW4uc2FzcyIsIi9zb3VyY2UvbW9kdWxlcy9mb3JtL19mb3JtLnNhc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNENBLGlCQUFBO0FDM0NBO0VBQ0UsZUFBZSxFQUFFOztBQUVuQjtFQUNFLHNCQUFzQixFQUFFOztBQUUxQjtFRG9FSSxjQUFBO0VDbEVGLFVBQVUsRUFBRTs7QUFFZDtFQUNFLGNBQWMsRUFBRTs7QUFFbEI7RUR5RkksK0JBQUE7RUN2RkYsMkJBQTJCLEVBQUU7O0FBRS9CO0VBQ0UsVUFBVSxFQUFFOztBQUVkO0VEMkhBLHdCQUFBLEVBQUE7RUN6SEU7SUFDRSxXQUFXLEVBQUU7O0FBRWpCOzs7Ozs7Ozs7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LDJDQUFBO0lBQ0osY0FBQSxFQUFBO0VUNlNFO0lTM1NGLG1CQUFBLEVBQUE7RVQ2U0k7SUFDRSxVQUFVLEVBQUU7RUF5RmhCO0lTOWtDYyxtQkFBQTtJQTZ6QlosV0FBQTtJQUNBLHNCQUFBO0lBQ0EsWUFBQTtJQUNBLE9BQUE7SUFDQSxhQUFBO0lBQ0osV0FBQSxFQUFBO0VUb1JFO0lBQ0UsZ0JBQWdCLEVBQUUsRUFwb0JFOzs7QUFzckJ0QjtFQUNFO0lJdm1DRixjQUFBLEVBQUE7RUptcUNJO0lJbnFDSiw2QkFBQSxFQUFBO0VKc3FDSTtJWWhzQ0UsNEJBQUE7SUFFUiw2QkFBQSxFQUFBO0Vad3lDTTtJSWh4Q0osNEJBQUEsRUFBQTtFSm14Q0k7SVl4cUNOLDRCQUFBLEVBQUEsRVIzR0U7OztBSnU3Q0U7RUFDRTtJYzk3Q04sa0JBQUEsRUFBQTtFZHE4Q1E7SWM3N0NKLGdCQUFBO0lBRUosc0JBQUEsRUFBQTtFZDg3Q1U7SWMxN0NWLGFBQUEsRUFBQTtFZDQ3Q1U7SWN2N0NWLFlBQUEsRUFBQTtFZDQ3Q1E7SUFDRSxnQkFBZ0IsRUFBRTtFQWdDdEI7SUFDRSxnQkFBZ0IsRUFBRSxFY2ovQzFCOzs7QWQyOUNJO0VBQ0U7SWN0N0NOLG9CQUFBLEVBQUEsRUFBQTs7O0FkcStDRTtFQUNFO0lJdGdERixhQUFBLEVBQUE7RUoyaERFO0lBQ0UsY0FBYyxFQUFFO0VBS2xCO0lBQ0UsZUFBZSxFQUFFLEVJbGlEckI7OztBSndnREE7RUFDRTtJZXZoREEsY0FBQTtJZnloREUsYUFBYSxFQUFFLEVBQUU7OztBQXlMdkIsNjE4R0FBNjE4RyIsImZpbGUiOiI8bm8tb3V0cHV0PiIsInNvdXJjZXNDb250ZW50IjpbIi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBOb3JtYWxpemUuc2NzcyBiYXNlZCBvbiBOaWNvbGFzIEdhbGxhZ2hlciBhbmQgSm9uYXRoYW4gTmVhbCdzXG4vLyBub3JtYWxpemUuY3NzIHYyLjEuMyB8IE1JVCBMaWNlbnNlIHwgZ2l0LmlvL25vcm1hbGl6ZVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIE5vcm1hbGl6ZS5zY3NzIHNldHRpbmdzXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG5cbi8vIFNldCB0byB0cnVlIGlmIHlvdSB3YW50IHRvIGFkZCBzdXBwb3J0IGZvciBJRTYgYW5kIElFN1xuLy8gTm90aWNlOiBzZXR0aW5nIHRvIHRydWUgbWlnaHQgcmVuZGVyIHNvbWUgZWxlbWVudHNcbi8vIHNsaWdodGx5IGRpZmZlcmVudGx5IHRoYW4gd2hlbiBzZXQgdG8gZmFsc2VcbiRsZWdhY3lfc3VwcG9ydF9mb3JfaWU6IGZhbHNlICFkZWZhdWx0OyAvLyBVc2VkIGFsc28gaW4gQ29tcGFzc1xuXG5cbi8vIFNldCB0aGUgZGVmYXVsdCBmb250IGZhbWlseSBoZXJlIHNvIHlvdSBkb24ndCBoYXZlIHRvIG92ZXJyaWRlIGl0IGxhdGVyXG4kbm9ybWFsaXplZF9mb250X2ZhbWlseTogc2Fucy1zZXJpZiAhZGVmYXVsdDtcblxuJG5vcm1hbGl6ZV9oZWFkaW5nczogdHJ1ZSAhZGVmYXVsdDtcblxuJGgxX2ZvbnRfc2l6ZTogMmVtICFkZWZhdWx0O1xuJGgyX2ZvbnRfc2l6ZTogMS41ZW0gIWRlZmF1bHQ7XG4kaDNfZm9udF9zaXplOiAxLjE3ZW0gIWRlZmF1bHQ7XG4kaDRfZm9udF9zaXplOiAxZW0gIWRlZmF1bHQ7XG4kaDVfZm9udF9zaXplOiAwLjgzZW0gIWRlZmF1bHQ7XG4kaDZfZm9udF9zaXplOiAwLjc1ZW0gIWRlZmF1bHQ7XG5cbiRoMV9tYXJnaW46IDAuNjdlbSAwICFkZWZhdWx0O1xuJGgyX21hcmdpbjogMC44M2VtIDAgIWRlZmF1bHQ7XG4kaDNfbWFyZ2luOiAxZW0gMCAhZGVmYXVsdDtcbiRoNF9tYXJnaW46IDEuMzNlbSAwICFkZWZhdWx0O1xuJGg1X21hcmdpbjogMS42N2VtIDAgIWRlZmF1bHQ7XG4kaDZfbWFyZ2luOiAyLjMzZW0gMCAhZGVmYXVsdDtcblxuJGJhY2tncm91bmQ6ICNmZmYgIWRlZmF1bHQ7XG4kY29sb3I6ICMwMDAgIWRlZmF1bHQ7XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBIVE1MNSBkaXNwbGF5IGRlZmluaXRpb25zXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyBDb3JyZWN0cyBibG9jayBkaXNwbGF5IG5vdCBkZWZpbmVkIGluIElFNi83LzgvOSAmIEZGM1xuXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm5hdixcbnNlY3Rpb24sXG5zdW1tYXJ5IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbn1cblxuLy8gQ29ycmVjdHMgaW5saW5lLWJsb2NrIGRpc3BsYXkgbm90IGRlZmluZWQgaW4gSUU2LzcvOC85ICYgRkYzXG5cbmF1ZGlvLFxuY2FudmFzLFxudmlkZW8ge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBAaWYgJGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZSB7XG4gICAgICAgICpkaXNwbGF5OiBpbmxpbmU7XG4gICAgICAgICp6b29tOiAxO1xuICAgIH1cbn1cblxuLy8gMS4gUHJldmVudHMgbW9kZXJuIGJyb3dzZXJzIGZyb20gZGlzcGxheWluZyAnYXVkaW8nIHdpdGhvdXQgY29udHJvbHNcbi8vIDIuIFJlbW92ZSBleGNlc3MgaGVpZ2h0IGluIGlPUzUgZGV2aWNlc1xuXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICAgIGRpc3BsYXk6IG5vbmU7IC8vIDFcbiAgICBoZWlnaHQ6IDA7IC8vIDJcbn1cblxuLy9cbi8vIEFkZHJlc3MgYFtoaWRkZW5dYCBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS5cbi8vIEhpZGUgdGhlIGB0ZW1wbGF0ZWAgZWxlbWVudCBpbiBJRSwgU2FmYXJpLCBhbmQgRmlyZWZveCA8IDIyLlxuLy9cblxuW2hpZGRlbl0sIHRlbXBsYXRlIHtcbiAgICBkaXNwbGF5OiBub25lO1xufVxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gQmFzZVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gMS4gQ29ycmVjdHMgdGV4dCByZXNpemluZyBvZGRseSBpbiBJRTYvNyB3aGVuIGJvZHkgZm9udC1zaXplIGlzIHNldCB1c2luZyBlbSB1bml0c1xuLy8gICAgaHR0cDovL2NsYWdudXQuY29tL2Jsb2cvMzQ4LyNjNzkwXG4vLyAyLiBQcmV2ZW50cyBpT1MgdGV4dCBzaXplIGFkanVzdCBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2UsIHdpdGhvdXQgZGlzYWJsaW5nIHVzZXIgem9vbVxuLy8gICAgd3d3LjQ1NmJlcmVhc3RyZWV0LmNvbS9hcmNoaXZlLzIwMTAxMi9jb250cm9sbGluZ190ZXh0X3NpemVfaW5fc2FmYXJpX2Zvcl9pb3Nfd2l0aG91dF9kaXNhYmxpbmdfdXNlcl96b29tL1xuXG5odG1sIHtcbiAgICBAaWYgJGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTAwJTsgLy8gMVxuICAgIH1cblx0XHQvL2JhY2tncm91bmQ6ICRiYWNrZ3JvdW5kO1xuXHRcdC8vY29sb3I6ICRjb2xvcjtcbiAgICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8vIDJcbiAgICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLy8gMlxufVxuXG4vLyBBZGRyZXNzZXMgZm9udC1mYW1pbHkgaW5jb25zaXN0ZW5jeSBiZXR3ZWVuICd0ZXh0YXJlYScgYW5kIG90aGVyIGZvcm0gZWxlbWVudHMuXG5cbmh0bWwsXG5idXR0b24sXG5pbnB1dCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgICAvL2ZvbnQtZmFtaWx5OiAkbm9ybWFsaXplZF9mb250X2ZhbWlseTtcbn1cblxuLy8gQWRkcmVzc2VzIG1hcmdpbnMgaGFuZGxlZCBpbmNvcnJlY3RseSBpbiBJRTYvN1xuXG5ib2R5IHtcbiAgICBtYXJnaW46IDA7XG59XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBMaW5rc1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gMS4gUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgY29sb3IgZnJvbSBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4vLyAyLiBBZGRyZXNzZXMgb3V0bGluZSBkaXNwbGF5ZWQgb2RkbHkgaW4gQ2hyb21lXG4vLyAzLiBJbXByb3ZlcyByZWFkYWJpbGl0eSB3aGVuIGZvY3VzZWQgYW5kIGFsc28gbW91c2UgaG92ZXJlZCBpbiBhbGwgYnJvd3NlcnNcbi8vICAgIHBlb3BsZS5vcGVyYS5jb20vcGF0cmlja2wvZXhwZXJpbWVudHMva2V5Ym9hcmQvdGVzdFxuXG5hIHtcbiAgICAvLyAxXG5cbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcblxuICAgIC8vIDJcblxuICAgICY6Zm9jdXMge1xuICAgICAgICAvL291dGxpbmU6IHRoaW4gZG90dGVkO1xuICAgIH1cblxuICAgIC8vIDNcblxuICAgICY6aG92ZXIsXG4gICAgJjphY3RpdmUge1xuICAgICAgICBvdXRsaW5lOiAwO1xuICAgIH1cbn1cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIFR5cG9ncmFwaHlcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIEFkZHJlc3NlcyBmb250IHNpemVzIGFuZCBtYXJnaW5zIHNldCBkaWZmZXJlbnRseSBpbiBJRTYvN1xuLy8gQWRkcmVzc2VzIGZvbnQgc2l6ZXMgd2l0aGluICdzZWN0aW9uJyBhbmQgJ2FydGljbGUnIGluIEZGNCssIENocm9tZSwgUzVcblxuLyogQGlmIFxcJG5vcm1hbGl6ZV9oZWFkaW5ncyA9PSB0cnVlIHtcbiAgICBoMSB7XG4gICAgICAgIGZvbnQtc2l6ZTogXFwkaDFfZm9udF9zaXplO1xuICAgICAgICBtYXJnaW46IFxcJGgxX21hcmdpbjtcbiAgICB9XG5cbiAgICBoMiB7XG4gICAgICAgIGZvbnQtc2l6ZTogXFwkaDJfZm9udF9zaXplO1xuICAgICAgICBtYXJnaW46IFxcJGgyX21hcmdpbjtcbiAgICB9XG5cbiAgICBoMyB7XG4gICAgICAgIGZvbnQtc2l6ZTogXFwkaDNfZm9udF9zaXplO1xuICAgICAgICBtYXJnaW46IFxcJGgzX21hcmdpbjtcbiAgICB9XG5cbiAgICBoNCB7XG4gICAgICAgIGZvbnQtc2l6ZTogXFwkaDRfZm9udF9zaXplO1xuICAgICAgICBtYXJnaW46IFxcJGg0X21hcmdpbjtcbiAgICB9XG5cbiAgICBoNSB7XG4gICAgICAgIGZvbnQtc2l6ZTogXFwkaDVfZm9udF9zaXplO1xuICAgICAgICBtYXJnaW46IFxcJGg1X21hcmdpbjtcbiAgICB9XG5cbiAgICBoNiB7XG4gICAgICAgIGZvbnQtc2l6ZTogXFwkaDZfZm9udF9zaXplO1xuICAgICAgICBtYXJnaW46IFxcJGg2X21hcmdpbjtcbiAgICB9XG59ICovXG5cbi8vIEFkZHJlc3NlcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOSwgUzUsIENocm9tZVxuXG5hYmJyW3RpdGxlXSB7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZDtcbn1cblxuLy8gQWRkcmVzc2VzIHN0eWxlIHNldCB0byAnYm9sZGVyJyBpbiBGRjMrLCBTNC81LCBDaHJvbWVcblxuYixcbnN0cm9uZyB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbkBpZiAkbGVnYWN5X3N1cHBvcnRfZm9yX2llIHtcbiAgICBibG9ja3F1b3RlIHtcbiAgICAgICAgbWFyZ2luOiAxZW0gNDBweDtcbiAgICB9XG59XG5cbi8vIEFkZHJlc3NlcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIFM1LCBDaHJvbWVcblxuZGZuIHtcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi8vIEFkZHJlc3NlcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFNi83LzgvOVxuXG5tYXJrIHtcbiAgICBiYWNrZ3JvdW5kOiAjZmYwO1xuICAgIGNvbG9yOiAjMDAwO1xufVxuXG4vLyBBZGRyZXNzZXMgbWFyZ2lucyBzZXQgZGlmZmVyZW50bHkgaW4gSUU2LzdcbkBpZiAkbGVnYWN5X3N1cHBvcnRfZm9yX2llIHtcbiAgICBwLFxuICAgIHByZSB7XG4gICAgICAgIG1hcmdpbjogMWVtIDA7XG4gICAgfVxufVxuXG4vLyBDb3JyZWN0cyBmb250IGZhbWlseSBzZXQgb2RkbHkgaW4gSUU2LCBTNC81LCBDaHJvbWVcbi8vIGVuLndpa2lwZWRpYS5vcmcvd2lraS9Vc2VyOkRhdmlkZ290aGJlcmcvVGVzdDU5XG5cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcbiAgICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBzZXJpZjtcbiAgICBAaWYgJGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZSB7XG4gICAgICAgIF9mb250LWZhbWlseTogJ2NvdXJpZXIgbmV3JywgbW9ub3NwYWNlO1xuICAgIH1cbiAgICBmb250LXNpemU6IDFlbTtcbn1cblxuLy8gSW1wcm92ZXMgcmVhZGFiaWxpdHkgb2YgcHJlLWZvcm1hdHRlZCB0ZXh0IGluIGFsbCBicm93c2Vyc1xuXG5wcmUge1xuICAgIHdoaXRlLXNwYWNlOiBwcmU7XG4gICAgd2hpdGUtc3BhY2U6IHByZS13cmFwO1xuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbn1cblxuLy8gU2V0IGNvbnNpc3RlbnQgcXVvdGUgdHlwZXMuXG5cbnEge1xuICAgIHF1b3RlczogXCJcXDIwMUNcIiBcIlxcMjAxRFwiIFwiXFwyMDE4XCIgXCJcXDIwMTlcIjtcbn1cblxuLy8gMS4gQWRkcmVzc2VzIENTUyBxdW90ZXMgbm90IHN1cHBvcnRlZCBpbiBJRTYvN1xuLy8gMi4gQWRkcmVzc2VzIHF1b3RlIHByb3BlcnR5IG5vdCBzdXBwb3J0ZWQgaW4gUzRcblxuLy8gMVxuQGlmICRsZWdhY3lfc3VwcG9ydF9mb3JfaWUge1xuICAgIHEge1xuICAgICAgICBxdW90ZXM6IG5vbmU7XG4gICAgfVxufVxuXG4vLyAyXG5xIHtcbiAgICAmOmJlZm9yZSxcbiAgICAmOmFmdGVyIHtcbiAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgIGNvbnRlbnQ6IG5vbmU7XG4gICAgfVxufVxuXG4vLyBBZGRyZXNzIGluY29uc2lzdGVudCBhbmQgdmFyaWFibGUgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cblxuLyogL3NtYWxsIHtcbiAgICBmb250LXNpemU6IDgwJTtcbn0gKi9cblxuLy8gUHJldmVudHMgc3ViIGFuZCBzdXAgYWZmZWN0aW5nIGxpbmUtaGVpZ2h0IGluIGFsbCBicm93c2Vyc1xuLy8gZ2lzdC5naXRodWIuY29tLzQxMzkzMFxuXG5zdWIsXG5zdXAge1xuICAgIGZvbnQtc2l6ZTogNzUlO1xuICAgIGxpbmUtaGVpZ2h0OiAwO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1cCB7XG4gICAgdG9wOiAtMC41ZW07XG59XG5cbnN1YiB7XG4gICAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gTGlzdHNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIEFkZHJlc3NlcyBtYXJnaW5zIHNldCBkaWZmZXJlbnRseSBpbiBJRTYvN1xuQGlmICRsZWdhY3lfc3VwcG9ydF9mb3JfaWUge1xuICAgIGRsLFxuICAgIG1lbnUsXG4gICAgb2wsXG4gICAgdWwge1xuICAgICAgICAvL21hcmdpbjogMWVtIDA7XG4gICAgfVxufVxuXG5AaWYgJGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZSB7XG4gICAgZGQge1xuICAgICAgICBtYXJnaW46IDAgMCAwIDQwcHg7XG4gICAgfVxufVxuXG4vLyBBZGRyZXNzZXMgcGFkZGluZ3Mgc2V0IGRpZmZlcmVudGx5IGluIElFNi83XG5AaWYgJGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZSB7XG4gICAgbWVudSxcbiAgICBvbCxcbiAgICB1bCB7XG4gICAgICAgIC8vcGFkZGluZzogMCAwIDAgNDBweDtcbiAgICB9XG59XG5cbi8vIENvcnJlY3RzIGxpc3QgaW1hZ2VzIGhhbmRsZWQgaW5jb3JyZWN0bHkgaW4gSUU3XG5cbm5hdiB7XG4gICAgdWwsXG4gICAgb2wge1xuICAgICAgICBAaWYgJGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZSB7XG4gICAgICAgICAgICAvL2xpc3Qtc3R5bGUtaW1hZ2U6IG5vbmU7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBFbWJlZGRlZCBjb250ZW50XG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyAxLiBSZW1vdmVzIGJvcmRlciB3aGVuIGluc2lkZSAnYScgZWxlbWVudCBpbiBJRTYvNy84LzksIEZGM1xuLy8gMi4gSW1wcm92ZXMgaW1hZ2UgcXVhbGl0eSB3aGVuIHNjYWxlZCBpbiBJRTdcbi8vICAgIGNvZGUuZmxpY2tyLmNvbS9ibG9nLzIwMDgvMTEvMTIvb24tdWktcXVhbGl0eS10aGUtbGl0dGxlLXRoaW5ncy1jbGllbnQtc2lkZS1pbWFnZS1yZXNpemluZy9cblxuaW1nIHtcbiAgICBib3JkZXI6IDA7IC8vIDFcbiAgICBAaWYgJGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZSB7XG4gICAgICAgIC1tcy1pbnRlcnBvbGF0aW9uLW1vZGU6IGJpY3ViaWM7IC8vIDJcbiAgICB9XG59XG5cbi8vIENvcnJlY3RzIG92ZXJmbG93IGRpc3BsYXllZCBvZGRseSBpbiBJRTlcblxuc3ZnOm5vdCg6cm9vdCkge1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBGaWd1cmVzXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyBBZGRyZXNzZXMgbWFyZ2luIG5vdCBwcmVzZW50IGluIElFNi83LzgvOSwgUzUsIE8xMVxuXG5maWd1cmUge1xuICAgIG1hcmdpbjogMDtcbn1cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIEZvcm1zXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyBDb3JyZWN0cyBtYXJnaW4gZGlzcGxheWVkIG9kZGx5IGluIElFNi83XG5AaWYgJGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZSB7XG4gICAgZm9ybSB7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICB9XG59XG5cbi8vIERlZmluZSBjb25zaXN0ZW50IGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZ1xuXG5maWVsZHNldCB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgICBtYXJnaW46IDAgMnB4O1xuICAgIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTtcbn1cblxuLy8gMS4gQ29ycmVjdHMgY29sb3Igbm90IGJlaW5nIGluaGVyaXRlZCBpbiBJRTYvNy84Lzlcbi8vIDIuIFJlbW92ZSBwYWRkaW5nIHNvIHBlb3BsZSBhcmVuJ3QgY2F1Z2h0IG91dCBpZiB0aGV5IHplcm8gb3V0IGZpZWxkc2V0cy5cbi8vIDMuIENvcnJlY3RzIHRleHQgbm90IHdyYXBwaW5nIGluIEZGM1xuLy8gNC4gQ29ycmVjdHMgYWxpZ25tZW50IGRpc3BsYXllZCBvZGRseSBpbiBJRTYvN1xuXG5sZWdlbmQge1xuICAgIGJvcmRlcjogMDsgLy8gMVxuICAgIHBhZGRpbmc6IDA7IC8vIDJcbiAgICB3aGl0ZS1zcGFjZTogbm9ybWFsOyAvLyAzXG4gICAgQGlmICRsZWdhY3lfc3VwcG9ydF9mb3JfaWUge1xuICAgICAgICAqbWFyZ2luLWxlZnQ6IC03cHg7IC8vIDRcbiAgICB9XG59XG5cbi8vIDEuIENvcnJlY3QgZm9udCBmYW1pbHkgbm90IGJlaW5nIGluaGVyaXRlZCBpbiBhbGwgYnJvd3NlcnMuXG4vLyAyLiBDb3JyZWN0cyBmb250IHNpemUgbm90IGJlaW5nIGluaGVyaXRlZCBpbiBhbGwgYnJvd3NlcnNcbi8vIDMuIEFkZHJlc3NlcyBtYXJnaW5zIHNldCBkaWZmZXJlbnRseSBpbiBJRTYvNywgRkYzKywgUzUsIENocm9tZVxuLy8gNC4gSW1wcm92ZXMgYXBwZWFyYW5jZSBhbmQgY29uc2lzdGVuY3kgaW4gYWxsIGJyb3dzZXJzXG5cbmJ1dHRvbixcbmlucHV0LFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0OyAvLyAxXG4gICAgZm9udC1zaXplOiAxMDAlOyAvLyAyXG4gICAgbWFyZ2luOiAwOyAvLyAzXG4gICAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyAvLyA0XG4gICAgQGlmICRsZWdhY3lfc3VwcG9ydF9mb3JfaWUge1xuICAgICAgICAqdmVydGljYWwtYWxpZ246IG1pZGRsZTsgLy8gNFxuICAgIH1cbn1cblxuLy8gQWRkcmVzc2VzIEZGMy80IHNldHRpbmcgbGluZS1oZWlnaHQgb24gJ2lucHV0JyB1c2luZyAhaW1wb3J0YW50IGluIHRoZSBVQSBzdHlsZXNoZWV0XG5cbmJ1dHRvbiwgaW5wdXQge1xuICAgIGxpbmUtaGVpZ2h0OiBub3JtYWw7XG59XG5cbi8vIEFkZHJlc3MgaW5jb25zaXN0ZW50IGB0ZXh0LXRyYW5zZm9ybWAgaW5oZXJpdGFuY2UgZm9yIGBidXR0b25gIGFuZCBgc2VsZWN0YC5cbi8vIEFsbCBvdGhlciBmb3JtIGNvbnRyb2wgZWxlbWVudHMgZG8gbm90IGluaGVyaXQgYHRleHQtdHJhbnNmb3JtYCB2YWx1ZXMuXG4vLyBDb3JyZWN0IGBidXR0b25gIHN0eWxlIGluaGVyaXRhbmNlIGluIENocm9tZSwgU2FmYXJpIDUrLCBhbmQgSUUgOCsuXG4vLyBDb3JyZWN0IGBzZWxlY3RgIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3ggNCsgYW5kIE9wZXJhLlxuXG5idXR0b24sXG5zZWxlY3Qge1xuICAgIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vLyAxLiBBdm9pZCB0aGUgV2ViS2l0IGJ1ZyBpbiBBbmRyb2lkIDQuMC4qIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYFxuLy8gICAgYW5kIGB2aWRlb2AgY29udHJvbHNcbi8vIDIuIENvcnJlY3RzIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgJ2lucHV0JyB0eXBlcyBpbiBpT1Ncbi8vIDMuIEltcHJvdmVzIHVzYWJpbGl0eSBhbmQgY29uc2lzdGVuY3kgb2YgY3Vyc29yIHN0eWxlIGJldHdlZW4gaW1hZ2UtdHlwZVxuLy8gICAgJ2lucHV0JyBhbmQgb3RoZXJzXG4vLyA0LiBSZW1vdmVzIGlubmVyIHNwYWNpbmcgaW4gSUU3IHdpdGhvdXQgYWZmZWN0aW5nIG5vcm1hbCB0ZXh0IGlucHV0c1xuLy8gICAgS25vd24gaXNzdWU6IGlubmVyIHNwYWNpbmcgcmVtYWlucyBpbiBJRTZcblxuYnV0dG9uLFxuaHRtbCBpbnB1dFt0eXBlPVwiYnV0dG9uXCJdLCAvLyAxXG5pbnB1dFt0eXBlPVwicmVzZXRcIl0sXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLy8gMlxuICAgIGN1cnNvcjogcG9pbnRlcjsgLy8gM1xuICAgIEBpZiAkbGVnYWN5X3N1cHBvcnRfZm9yX2llIHtcbiAgICAgICAgKm92ZXJmbG93OiB2aXNpYmxlOyAgLy8gNFxuICAgIH1cbn1cblxuLy8gUmUtc2V0IGRlZmF1bHQgY3Vyc29yIGZvciBkaXNhYmxlZCBlbGVtZW50c1xuXG5idXR0b25bZGlzYWJsZWRdLFxuaW5wdXRbZGlzYWJsZWRdIHtcbiAgICBjdXJzb3I6IGRlZmF1bHQ7XG59XG5cbi8vIFJlbW92ZXMgaW5uZXIgcGFkZGluZyBhbmQgYm9yZGVyIGluIEZGMytcbi8vIHd3dy5zaXRlcGVuLmNvbS9ibG9nLzIwMDgvMDUvMTQvdGhlLWRldmlscy1pbi10aGUtZGV0YWlscy1maXhpbmctZG9qb3MtdG9vbGJhci1idXR0b25zL1xuXG5idXR0b24sIGlucHV0IHtcbiAgICAmOjotbW96LWZvY3VzLWlubmVyIHtcbiAgICAgICAgYm9yZGVyOiAwO1xuICAgICAgICBwYWRkaW5nOiAwO1xuICAgIH1cbn1cblxuLy8gMS4gUmVtb3ZlcyBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRTYvNy84Lzlcbi8vIDIuIEltcHJvdmVzIHJlYWRhYmlsaXR5IGFuZCBhbGlnbm1lbnQgaW4gYWxsIGJyb3dzZXJzXG5cbnRleHRhcmVhIHtcbiAgICBvdmVyZmxvdzogYXV0bzsgLy8gMVxuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7IC8vIDJcbn1cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIFRhYmxlc1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gUmVtb3ZlIG1vc3Qgc3BhY2luZyBiZXR3ZWVuIHRhYmxlIGNlbGxzXG5cbnRhYmxlIHtcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICAgIGJvcmRlci1zcGFjaW5nOiAwO1xufVxuXG5pbnB1dCB7XG4gICAgLy8gMS4gQWRkcmVzc2VzIGFwcGVhcmFuY2Ugc2V0IHRvIHNlYXJjaGZpZWxkIGluIFM1LCBDaHJvbWVcbiAgICAvLyAyLiBBZGRyZXNzZXMgYm94LXNpemluZyBzZXQgdG8gYm9yZGVyLWJveCBpbiBTNSwgQ2hyb21lIChpbmNsdWRlIC1tb3ogdG8gZnV0dXJlLXByb29mKVxuICAgICZbdHlwZT1cInNlYXJjaFwiXSB7XG4gICAgICAgIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvLyAxXG4gICAgICAgIC1tb3otYm94LXNpemluZzogY29udGVudC1ib3g7XG4gICAgICAgIC13ZWJraXQtYm94LXNpemluZzogY29udGVudC1ib3g7IC8vIDJcbiAgICAgICAgYm94LXNpemluZzogY29udGVudC1ib3g7XG5cbiAgICBcdC8vIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBzZWFyY2ggY2FuY2VsIGJ1dHRvbiBpbiBTYWZhcmkgNSBhbmQgQ2hyb21lXG4gICAgICAgIC8vIG9uIE9TIFguXG4gICAgICAgICY6Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG4gICAgICAgICY6Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAgICAgICAgICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gMS4gQWRkcmVzcyBib3ggc2l6aW5nIHNldCB0byBgY29udGVudC1ib3hgIGluIElFIDgvOS8xMC5cbiAgICAvLyAyLiBSZW1vdmUgZXhjZXNzIHBhZGRpbmcgaW4gSUUgOC85LzEwLlxuICAgIC8vIDMuIFJlbW92ZXMgZXhjZXNzIHBhZGRpbmcgaW4gSUU3XG4gICAgLy8gICAgS25vd24gaXNzdWU6IGV4Y2VzcyBwYWRkaW5nIHJlbWFpbnMgaW4gSUU2XG4gICAgJlt0eXBlPVwiY2hlY2tib3hcIl0sXG4gICAgJlt0eXBlPVwicmFkaW9cIl0ge1xuICAgIFx0Ym94LXNpemluZzogYm9yZGVyLWJveDsgLy8gMVxuICAgIFx0cGFkZGluZzogMDsgLy8gMlxuICAgIFx0QGlmICRsZWdhY3lfc3VwcG9ydF9mb3JfaWUge1xuICAgICAgICBcdCpoZWlnaHQ6IDEzcHg7IC8vIDNcbiAgICAgICAgXHQqd2lkdGg6IDEzcHg7IC8vIDNcbiAgICBcdH1cbiAgICB9XG59XG4iLCJAY2hhcnNldCBcIlVURi04XCI7XG5hcnRpY2xlLCBhc2lkZSwgZGV0YWlscywgZmlnY2FwdGlvbiwgZmlndXJlLCBmb290ZXIsIGhlYWRlciwgaGdyb3VwLCBuYXYsIHNlY3Rpb24sIHN1bW1hcnkge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG5hdWRpbywgY2FudmFzLCB2aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7IH1cblxuW2hpZGRlbl0sIHRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG5odG1sIHtcbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgfVxuXG5ib2R5IHtcbiAgbWFyZ2luOiAwOyB9XG5cbmEge1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDsgfVxuICBhOmhvdmVyLCBhOmFjdGl2ZSB7XG4gICAgb3V0bGluZTogMDsgfVxuXG4vKiBAaWYgXFwkbm9ybWFsaXplX2hlYWRpbmdzID09IHRydWUge1xuICAgIGgxIHtcbiAgICAgICAgZm9udC1zaXplOiBcXCRoMV9mb250X3NpemU7XG4gICAgICAgIG1hcmdpbjogXFwkaDFfbWFyZ2luO1xuICAgIH1cblxuICAgIGgyIHtcbiAgICAgICAgZm9udC1zaXplOiBcXCRoMl9mb250X3NpemU7XG4gICAgICAgIG1hcmdpbjogXFwkaDJfbWFyZ2luO1xuICAgIH1cblxuICAgIGgzIHtcbiAgICAgICAgZm9udC1zaXplOiBcXCRoM19mb250X3NpemU7XG4gICAgICAgIG1hcmdpbjogXFwkaDNfbWFyZ2luO1xuICAgIH1cblxuICAgIGg0IHtcbiAgICAgICAgZm9udC1zaXplOiBcXCRoNF9mb250X3NpemU7XG4gICAgICAgIG1hcmdpbjogXFwkaDRfbWFyZ2luO1xuICAgIH1cblxuICAgIGg1IHtcbiAgICAgICAgZm9udC1zaXplOiBcXCRoNV9mb250X3NpemU7XG4gICAgICAgIG1hcmdpbjogXFwkaDVfbWFyZ2luO1xuICAgIH1cblxuICAgIGg2IHtcbiAgICAgICAgZm9udC1zaXplOiBcXCRoNl9mb250X3NpemU7XG4gICAgICAgIG1hcmdpbjogXFwkaDZfbWFyZ2luO1xuICAgIH1cbn0gKi9cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZDsgfVxuXG5iLCBzdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZDsgfVxuXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7IH1cblxubWFyayB7XG4gIGJhY2tncm91bmQ6ICNmZjA7XG4gIGNvbG9yOiAjMDAwOyB9XG5cbmNvZGUsIGtiZCwgcHJlLCBzYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgc2VyaWY7XG4gIGZvbnQtc2l6ZTogMWVtOyB9XG5cbnByZSB7XG4gIHdoaXRlLXNwYWNlOiBwcmU7XG4gIHdoaXRlLXNwYWNlOiBwcmUtd3JhcDtcbiAgd29yZC13cmFwOiBicmVhay13b3JkOyB9XG5cbnEge1xuICBxdW90ZXM6IFwiXFwyMDFDXCIgXCJcXDIwMURcIiBcIlxcMjAxOFwiIFwiXFwyMDE5XCI7IH1cblxucTpiZWZvcmUsIHE6YWZ0ZXIge1xuICBjb250ZW50OiAnJztcbiAgY29udGVudDogbm9uZTsgfVxuXG4vKiAvc21hbGwge1xuICAgIGZvbnQtc2l6ZTogODAlO1xufSAqL1xuc3ViLCBzdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtOyB9XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTsgfVxuXG5pbWcge1xuICBib3JkZXI6IDA7IH1cblxuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuOyB9XG5cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMDsgfVxuXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gIG1hcmdpbjogMCAycHg7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTsgfVxuXG5sZWdlbmQge1xuICBib3JkZXI6IDA7XG4gIHBhZGRpbmc6IDA7XG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7IH1cblxuYnV0dG9uLCBpbnB1dCwgc2VsZWN0LCB0ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICBmb250LXNpemU6IDEwMCU7XG4gIG1hcmdpbjogMDtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbmJ1dHRvbiwgaW5wdXQge1xuICBsaW5lLWhlaWdodDogbm9ybWFsOyB9XG5cbmJ1dHRvbiwgc2VsZWN0IHtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuYnV0dG9uLCBodG1sIGlucHV0W3R5cGU9XCJidXR0b25cIl0sIGlucHV0W3R5cGU9XCJyZXNldFwiXSwgaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICBjdXJzb3I6IHBvaW50ZXI7IH1cblxuYnV0dG9uW2Rpc2FibGVkXSwgaW5wdXRbZGlzYWJsZWRdIHtcbiAgY3Vyc29yOiBkZWZhdWx0OyB9XG5cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lciwgaW5wdXQ6Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXI6IDA7XG4gIHBhZGRpbmc6IDA7IH1cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbiAgdmVydGljYWwtYWxpZ246IHRvcDsgfVxuXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwOyB9XG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLW1vei1ib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7IH1cbiAgaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbiwgaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG5pbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0sIGlucHV0W3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIHBhZGRpbmc6IDA7IH1cblxuaHRtbCB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7IH1cblxuYm9keSB7XG4gIGNvbG9yOiAjMzMzO1xuICBsaW5lLWhlaWdodDogMS41O1xuICBmb250LWZhbWlseTogTmV3cyBDeWNsZSwgc2Fucy1zZXJpZjtcbiAgYmFja2dyb3VuZC1zaXplOiBhdXRvIDI0cHg7XG4gIG1hcmdpbjogMDsgfVxuXG5bY2xhc3MqPSdfX2hlYWRpbmcnXSB7XG4gIGNvbG9yOiAjMjY3ZTY0O1xuICBmb250LWZhbWlseTogUGxheWZhaXIgRGlzcGxheSwgc2VyaWY7XG4gIGZvbnQtc2l6ZTogMi41cmVtO1xuICBmb250LXdlaWdodDogNDAwO1xuICBsaW5lLWhlaWdodDogMTtcbiAgbWFyZ2luLWJvdHRvbTogMnJlbTsgfVxuXG5bY2xhc3MqPV9fYnV0dG9uXSwgaW5wdXRbdHlwZT1cImJ1dHRvblwiXSwgaW5wdXRbdHlwZT1cInJlc2V0XCJdIHtcbiAgYm9yZGVyOiAxcHggc29saWQgIzI2N2U2NDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGZvbnQtZmFtaWx5OiBQbGF5ZmFpciBEaXNwbGF5LCBzZXJpZjtcbiAgZm9udC1zaXplOiAxLjJyZW07XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwYWRkaW5nOiAuNzVyZW0gM3JlbTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAvKkl0ZW1zIGZvciB0cmFuc2l0aW9uICovXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBjb2xvcjogIzI2N2U2NDtcbiAgLypUcmFuc2l0aW9uIHNldHRpbmdzICovXG4gIHRyYW5zaXRpb246IGFsbCAuMnMgZWFzZTsgfVxuICBbY2xhc3MqPV9fYnV0dG9uXTpob3ZlciwgaW5wdXRbdHlwZT1cImJ1dHRvblwiXTpob3ZlciwgaW5wdXRbdHlwZT1cInJlc2V0XCJdOmhvdmVyIHtcbiAgICAvKlRoZXNlIHdpbGwgdHJhbnNpdGlvbiBvbiBob3ZlciAqL1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyNjdlNjQ7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG5cbi5sb2FkZXJfX2J1dHRvbi5kaXNhYmxlZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlNWU2ZTc7XG4gIGNvbG9yOiAjMjY3ZTY0O1xuICBjdXJzb3I6IGRlZmF1bHQ7XG4gIG9wYWNpdHk6IC4zOyB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0ODBweCkge1xuICBzdXAge1xuICAgIHRvcDogLS4yNWVtOyB9IH1cblxuLmNsZWFyZml4OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgZGlzcGxheTogdGFibGU7XG4gIGNsZWFyOiBib3RoOyB9XG5cbmltZywgaWZyYW1lLCBlbWJlZCB7XG4gIHdpZHRoOiAxMDAlOyB9XG5cbi5jb250YWluZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBib3JkZXItbGVmdDogMXB4IHNvbGlkICNjY2M7XG4gIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICNjY2M7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBtYXgtd2lkdGg6IDEyMDBweDsgfVxuXG5bY2xhc3MqPSdjb2wtJ10ge1xuICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIFtjbGFzcyo9J2NvbC0nXSB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH0gfVxuXG4uY29sLTItMTIge1xuICB3aWR0aDogMTYuNjY2NjclOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5jb2wtMi0xMiB7XG4gICAgICB3aWR0aDogMTAwJTsgfSB9XG5cbi5jb2wtMy0xMiB7XG4gIHdpZHRoOiAyNSU7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmNvbC0zLTEyIHtcbiAgICAgIHdpZHRoOiAxMDAlOyB9IH1cblxuLmNvbC00LTEyIHtcbiAgd2lkdGg6IDMzLjMzMzMzJTsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAuY29sLTQtMTIge1xuICAgICAgd2lkdGg6IDEwMCU7IH0gfVxuXG4uY29sLTUtMTIge1xuICB3aWR0aDogNDEuNjY2NjclOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5jb2wtNS0xMiB7XG4gICAgICB3aWR0aDogMTAwJTsgfSB9XG5cbi5jb2wtNi0xMiB7XG4gIHdpZHRoOiA1MCU7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmNvbC02LTEyIHtcbiAgICAgIHdpZHRoOiAxMDAlOyB9IH1cblxuLmNvbC03LTEyIHtcbiAgd2lkdGg6IDU4LjMzMzMzJTsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAuY29sLTctMTIge1xuICAgICAgd2lkdGg6IDEwMCU7IH0gfVxuXG4uY29sLTgtMTIge1xuICB3aWR0aDogNjYuNjY2NjclOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5jb2wtOC0xMiB7XG4gICAgICB3aWR0aDogMTAwJTsgfSB9XG5cbi5jb2wtOS0xMiB7XG4gIHdpZHRoOiA3NSU7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmNvbC05LTEyIHtcbiAgICAgIHdpZHRoOiAxMDAlOyB9IH1cblxuLmNvbC0xMC0xMiB7XG4gIHdpZHRoOiA4My4zMzMzMyU7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmNvbC0xMC0xMiB7XG4gICAgICB3aWR0aDogMTAwJTsgfSB9XG5cbi5jb2wtMTEtMTIge1xuICB3aWR0aDogOTEuNjY2NjclOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5jb2wtMTEtMTIge1xuICAgICAgd2lkdGg6IDEwMCU7IH0gfVxuXG4qIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG4gICo6OmFmdGVyLCAqOjpiZWZvcmUge1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cblxuYm9keSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlY2VlZTY7XG4gIHBhZGRpbmc6IDA7IH1cblxuYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgY29sb3I6ICMyNjdlNjQ7IH1cbiAgYTpob3ZlciB7XG4gICAgY29sb3I6ICM0NTU2NTI7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IH1cblxudGFibGUge1xuICBtYXJnaW46IDAgMCAxLjVlbTtcbiAgd2lkdGg6IDEwMCU7IH1cblxudHIge1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2U1ZTZlNzsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzAwcHgpIHtcbiAgICB0ciB7XG4gICAgICBtYXJnaW4tdG9wOiAwICFpbXBvcnRhbnQ7IH1cbiAgICAgIHRyOmZpcnN0LWNoaWxkIHtcbiAgICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlNWU2ZTc7IH0gfVxuICB0cjpudGgtY2hpbGQoZXZlbikge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmOGY4Zjg7IH1cblxudGQge1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICBwYWRkaW5nOiAxMHB4IDVweDsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzAwcHgpIHtcbiAgICB0ZCB7XG4gICAgICBtYXJnaW4tdG9wOiAwICFpbXBvcnRhbnQ7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDQwJTsgfVxuICAgICAgdGQ6YmVmb3JlIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDZweDtcbiAgICAgICAgbGVmdDogNnB4O1xuICAgICAgICB3aWR0aDogNDAlO1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAxMHB4O1xuICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgICAgICBmb250LXdlaWdodDogNjAwOyB9XG4gICAgICB0ZDpudGgtb2YtdHlwZSgxKTpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiBcIkNpdHk6IFwiOyB9XG4gICAgICB0ZDpudGgtb2YtdHlwZSgyKTpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiBcIkFkZHJlc3M6IFwiOyB9XG4gICAgICB0ZDpudGgtb2YtdHlwZSgzKTpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiBcIlBob25lOiBcIjsgfSB9XG5cbnRoZWFkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U1ZTZlNzsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzAwcHgpIHtcbiAgICB0aGVhZCB0ciB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IC05OTk5cHg7XG4gICAgICBsZWZ0OiAtOTk5OXB4OyB9IH1cbiAgdGhlYWQgdGgge1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICBwYWRkaW5nOiA1cHg7IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDcwMHB4KSB7XG4gIHRhYmxlLCB0aGVhZCwgdGJvZHksIHRoLCB0ZCwgdHIge1xuICAgIGRpc3BsYXk6IGJsb2NrOyB9IH1cblxuLm5hdi1taW5vciB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB0ZXh0LWFsaWduOiByaWdodDsgfVxuICAubmF2LW1pbm9yX19jb250YWluZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjY2NjO1xuICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICNjY2M7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgcGFkZGluZzogMXJlbSAxLjVyZW07XG4gICAgbWF4LXdpZHRoOiAxMjAwcHg7IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAgIC5uYXYtbWlub3JfX2NvbnRhaW5lciB7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfSB9XG4gIC5uYXYtbWlub3IgbGkge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuICAgIC5uYXYtbWlub3IgbGk6YWZ0ZXIge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgY29udGVudDogJyB8ICc7XG4gICAgICBjb2xvcjogIzI2N2U2NDtcbiAgICAgIG1hcmdpbjogMCAycHggMCAuM3JlbTsgfVxuICAgIC5uYXYtbWlub3IgbGk6bnRoLWNoaWxkKDMpOmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6ICcgJzsgfVxuICAgIC5uYXYtbWlub3IgbGk6bGFzdC1jaGlsZCBhIHtcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgbWFyZ2luLXJpZ2h0OiAxMHB4OyB9XG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAgICAgLm5hdi1taW5vciBsaTpsYXN0LWNoaWxkIGEge1xuICAgICAgICAgIG1hcmdpbi1yaWdodDogMDsgfSB9XG4gIC5uYXYtbWlub3JfX2xpbmsge1xuICAgIGNvbG9yOiAjMzMzO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBwYWRkaW5nOiAwIC4zcmVtIDA7IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAgIC5uYXYtbWlub3JfX2xpbmsge1xuICAgICAgICBmb250LXNpemU6IC44cmVtOyB9IH1cbiAgICAubmF2LW1pbm9yX19saW5rOmhvdmVyIHtcbiAgICAgIGNvbG9yOiAjMjY3ZTY0OyB9XG5cbi5zaXRlLW1hcCBhIHtcbiAgY29sb3I6ICMzMzM7IH1cbiAgLnNpdGUtbWFwIGE6aG92ZXIge1xuICAgIGNvbG9yOiAjMjY3ZTY0OyB9XG5cbmEuY2QtbmF2LWl0ZW06aG92ZXIgaW1nIHtcbiAgb3BhY2l0eTogLjcgIWltcG9ydGFudDsgfVxuYS5jZC1uYXYtaXRlbTpob3ZlciBoMyB7XG4gIGNvbG9yOiAjNmJkMmI0OyB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDIycHgpIHtcbiAgYm9keS5uYXYtb24tbGVmdC5vdmVyZmxvdy1oaWRkZW4ge1xuICAgIG92ZXJmbG93OiBoaWRkZW47IH0gfVxuXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotbXMtY2xlYXIge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24sIGlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sIGlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLXJlc3VsdHMtYnV0dG9uLCBpbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1yZXN1bHRzLWRlY29yYXRpb24ge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKlxuICpNYWluIGNvbXBvbmVudHNcbiAqXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKiAqL1xuLmNkLW1haW4tY29udGVudCwgLmNkLW1haW4taGVhZGVyIHtcbiAgLyogRm9yY2UgSGFyZHdhcmUgQWNjZWxlcmF0aW9uIGluIFdlYktpdCAqL1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVooMCk7XG4gIHdpbGwtY2hhbmdlOiB0cmFuc2Zvcm07IH1cbiAgLmNkLW1haW4tY29udGVudCB1bCwgLmNkLW1haW4taGVhZGVyIHVsIHtcbiAgICBsaXN0LXN0eWxlOiBub25lOyB9XG5cbi5jZC1tYWluLWNvbnRlbnQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAxMDIycHgpIHtcbiAgICAuY2QtbWFpbi1jb250ZW50Lm5hdi1pcy12aXNpYmxlIHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjYwcHgpOyB9XG4gICAgLm5hdi1vbi1sZWZ0IC5jZC1tYWluLWNvbnRlbnQubmF2LWlzLXZpc2libGUge1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDI2MHB4KTsgfSB9XG5cbi5jZC1tYWluLWhlYWRlciB7XG4gIGZvbnQtZmFtaWx5OiBQbGF5ZmFpciBEaXNwbGF5LCBzZXJpZjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zczsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogMTAyMnB4KSB7XG4gICAgLmNkLW1haW4taGVhZGVyLm5hdi1pcy12aXNpYmxlIHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTsgfVxuICAgIC5uYXYtb24tbGVmdCAuY2QtbWFpbi1oZWFkZXIubmF2LWlzLXZpc2libGUge1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDI2MHB4KTsgfSB9XG5cbi5jZC1tYWluLWNvbnRlbnQge1xuICBtaW4taGVpZ2h0OiAxMDB2aDtcbiAgei1pbmRleDogMjsgfVxuXG4uY2QtbWFpbi1oZWFkZXIge1xuICBoZWlnaHQ6IDUwcHg7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIHotaW5kZXg6IDM7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZTVlNmU3OyB9XG4gIC5uYXYtaXMtZml4ZWQgLmNkLW1haW4taGVhZGVyIHtcbiAgICAvKiBhZGQgLm5hdi1pcy1maXhlZCBjbGFzcyB0byBib2R5IGlmIHlvdSB3YW50IGEgZml4ZWQgbmF2aWdhdGlvbiBvbiA+IDEwMjRweCAqL1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICB3aWR0aDogMTAwJTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgLmNkLW1haW4taGVhZGVyIHtcbiAgICAgIGhlaWdodDogODBweDsgfVxuICAgICAgLmNkLW1haW4taGVhZGVyOmFmdGVyIHtcbiAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgZGlzcGxheTogdGFibGU7XG4gICAgICAgIGNsZWFyOiBib3RoOyB9IH1cblxuLmNkLWxvZ28ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMTJweDtcbiAgbGVmdDogNSU7IH1cbiAgLmNkLWxvZ28gaW1nIHtcbiAgICBkaXNwbGF5OiBibG9jazsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogMTAyMnB4KSB7XG4gICAgLm5hdi1vbi1sZWZ0IC5jZC1sb2dvIHtcbiAgICAgIGxlZnQ6IGF1dG87XG4gICAgICByaWdodDogNSU7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgLmNkLWxvZ28ge1xuICAgICAgdG9wOiAyNnB4O1xuICAgICAgbGVmdDogNGVtOyB9IH1cblxuLmNkLWhlYWRlci1idXR0b25zIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHRvcDogM3B4O1xuICByaWdodDogNSU7IH1cbiAgLmNkLWhlYWRlci1idXR0b25zIGxpIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMjJweCkge1xuICAgIC5uYXYtb24tbGVmdCAuY2QtaGVhZGVyLWJ1dHRvbnMge1xuICAgICAgcmlnaHQ6IGF1dG87XG4gICAgICBsZWZ0OiA1JTsgfVxuICAgICAgLm5hdi1vbi1sZWZ0IC5jZC1oZWFkZXItYnV0dG9ucyBsaSB7XG4gICAgICAgIGZsb2F0OiByaWdodDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAuY2QtaGVhZGVyLWJ1dHRvbnMge1xuICAgICAgdG9wOiAxcmVtO1xuICAgICAgcmlnaHQ6IDFyZW07IH0gfVxuXG4uY2Qtc2VhcmNoLXRyaWdnZXIsIC5jZC1uYXYtdHJpZ2dlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiA0NHB4O1xuICBoZWlnaHQ6IDQ0cHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIC8qIGhpZGUgdGV4dCAqL1xuICBjb2xvcjogdHJhbnNwYXJlbnQ7XG4gIHotaW5kZXg6IDM7IH1cblxuLmNkLXNlYXJjaC10cmlnZ2VyOjpiZWZvcmUsIC5jZC1zZWFyY2gtdHJpZ2dlcjo6YWZ0ZXIge1xuICAvKiBzZWFyY2ggaWNvbiAqL1xuICBjb250ZW50OiAnJztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3M7XG4gIC8qIEZvcmNlIEhhcmR3YXJlIEFjY2VsZXJhdGlvbiBpbiBXZWJLaXQgKi9cbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApO1xuICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47IH1cbi5jZC1zZWFyY2gtdHJpZ2dlcjo6YmVmb3JlIHtcbiAgLyogbGVucyAqL1xuICB0b3A6IDExcHg7XG4gIGxlZnQ6IDExcHg7XG4gIHdpZHRoOiAxOHB4O1xuICBoZWlnaHQ6IDE4cHg7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYm9yZGVyOiAzcHggc29saWQgIzQ1NTY1MjsgfVxuLmNkLXNlYXJjaC10cmlnZ2VyOjphZnRlciB7XG4gIC8qIGhhbmRsZSAqL1xuICBoZWlnaHQ6IDNweDtcbiAgd2lkdGg6IDhweDtcbiAgYmFja2dyb3VuZDogIzQ1NTY1MjtcbiAgYm90dG9tOiAxNHB4O1xuICByaWdodDogMTFweDtcbiAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpOyB9XG4uY2Qtc2VhcmNoLXRyaWdnZXIgc3BhbiB7XG4gIC8qIGNvbnRhaW5lciBmb3IgdGhlIFggaWNvbiAqL1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDsgfVxuLmNkLXNlYXJjaC10cmlnZ2VyIHNwYW46OmJlZm9yZSwgLmNkLXNlYXJjaC10cmlnZ2VyIHNwYW46OmFmdGVyIHtcbiAgLyogY2xvc2UgaWNvbiAqL1xuICBjb250ZW50OiAnJztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGhlaWdodDogM3B4O1xuICB3aWR0aDogMjJweDtcbiAgdG9wOiA1MCU7XG4gIG1hcmdpbi10b3A6IC0ycHg7XG4gIGxlZnQ6IDUwJTtcbiAgbWFyZ2luLWxlZnQ6IC0xMXB4O1xuICBiYWNrZ3JvdW5kOiAjNDU1NjUyO1xuICBvcGFjaXR5OiAwO1xuICAvKiBGb3JjZSBIYXJkd2FyZSBBY2NlbGVyYXRpb24gaW4gV2ViS2l0ICovXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKTtcbiAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3MsIHRyYW5zZm9ybSAwLjNzOyB9XG4uY2Qtc2VhcmNoLXRyaWdnZXIgc3Bhbjo6YmVmb3JlIHtcbiAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpOyB9XG4uY2Qtc2VhcmNoLXRyaWdnZXIgc3Bhbjo6YWZ0ZXIge1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpOyB9XG4uY2Qtc2VhcmNoLXRyaWdnZXIuc2VhcmNoLWlzLXZpc2libGU6OmJlZm9yZSwgLmNkLXNlYXJjaC10cmlnZ2VyLnNlYXJjaC1pcy12aXNpYmxlOjphZnRlciB7XG4gIC8qIGhpZGUgc2VhcmNoIGljb24gKi9cbiAgb3BhY2l0eTogMDsgfVxuLmNkLXNlYXJjaC10cmlnZ2VyLnNlYXJjaC1pcy12aXNpYmxlIHNwYW46OmJlZm9yZSwgLmNkLXNlYXJjaC10cmlnZ2VyLnNlYXJjaC1pcy12aXNpYmxlIHNwYW46OmFmdGVyIHtcbiAgLyogc2hvdyBjbG9zZSBpY29uICovXG4gIG9wYWNpdHk6IDE7IH1cbi5jZC1zZWFyY2gtdHJpZ2dlci5zZWFyY2gtaXMtdmlzaWJsZSBzcGFuOjpiZWZvcmUge1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgxMzVkZWcpOyB9XG4uY2Qtc2VhcmNoLXRyaWdnZXIuc2VhcmNoLWlzLXZpc2libGUgc3Bhbjo6YWZ0ZXIge1xuICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7IH1cblxuLmNkLW5hdi10cmlnZ2VyOmhvdmVyIHtcbiAgY29sb3I6IHRyYW5zcGFyZW50OyB9XG4uY2QtbmF2LXRyaWdnZXIgc3BhbiwgLmNkLW5hdi10cmlnZ2VyIHNwYW46OmJlZm9yZSwgLmNkLW5hdi10cmlnZ2VyIHNwYW46OmFmdGVyIHtcbiAgLyogaGFtYnVyZ2VyIGljb24gaW4gQ1NTICovXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBoZWlnaHQ6IDNweDtcbiAgd2lkdGg6IDI0cHg7XG4gIGJhY2tncm91bmQ6ICM0NTU2NTI7IH1cbi5jZC1uYXYtdHJpZ2dlciBzcGFuIHtcbiAgLyogbGluZSBpbiB0aGUgY2VudGVyICovXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIHJpZ2h0OiAxMHB4O1xuICBtYXJnaW4tdG9wOiAtMnB4O1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDAuM3MgMC4zczsgfVxuLmNkLW5hdi10cmlnZ2VyIHNwYW46OmJlZm9yZSwgLmNkLW5hdi10cmlnZ2VyIHNwYW46OmFmdGVyIHtcbiAgLyogb3RoZXIgMiBsaW5lcyAqL1xuICBjb250ZW50OiAnJztcbiAgcmlnaHQ6IDA7XG4gIC8qIEZvcmNlIEhhcmR3YXJlIEFjY2VsZXJhdGlvbiBpbiBXZWJLaXQgKi9cbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApO1xuICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gIHRyYW5zZm9ybS1vcmlnaW46IDAlIDUwJTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MgMC4zczsgfVxuLmNkLW5hdi10cmlnZ2VyIHNwYW46OmJlZm9yZSB7XG4gIC8qIG1lbnUgaWNvbiB0b3AgbGluZSAqL1xuICB0b3A6IC02cHg7IH1cbi5jZC1uYXYtdHJpZ2dlciBzcGFuOjphZnRlciB7XG4gIC8qIG1lbnUgaWNvbiBib3R0b20gbGluZSAqL1xuICB0b3A6IDZweDsgfVxuLmNkLW5hdi10cmlnZ2VyLm5hdi1pcy12aXNpYmxlIHNwYW4ge1xuICAvKiBoaWRlIGxpbmUgaW4gdGhlIGNlbnRlciAqL1xuICBiYWNrZ3JvdW5kOiByZ2JhKDY5LCA4NiwgODIsIDApOyB9XG4uY2QtbmF2LXRyaWdnZXIubmF2LWlzLXZpc2libGUgc3Bhbjo6YmVmb3JlLCAuY2QtbmF2LXRyaWdnZXIubmF2LWlzLXZpc2libGUgc3Bhbjo6YWZ0ZXIge1xuICAvKiBrZWVwIHZpc2libGUgb3RoZXIgMiBsaW5lcyAqL1xuICBiYWNrZ3JvdW5kOiAjNDU1NjUyOyB9XG4uY2QtbmF2LXRyaWdnZXIubmF2LWlzLXZpc2libGUgc3Bhbjo6YmVmb3JlIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDRweCkgdHJhbnNsYXRlWSgtM3B4KSByb3RhdGUoNDVkZWcpOyB9XG4uY2QtbmF2LXRyaWdnZXIubmF2LWlzLXZpc2libGUgc3Bhbjo6YWZ0ZXIge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNHB4KSB0cmFuc2xhdGVZKDJweCkgcm90YXRlKC00NWRlZyk7IH1cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLmNkLW5hdi10cmlnZ2VyIHtcbiAgICBkaXNwbGF5OiBub25lOyB9IH1cblxuLmNkLXByaW1hcnktbmF2IHtcbiAgcmlnaHQ6IDA7IH1cblxuLmNkLXByaW1hcnktbmF2IHVsIHtcbiAgcmlnaHQ6IDIwcHg7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmNkLXByaW1hcnktbmF2IHVsIHtcbiAgICAgIHJpZ2h0OiAwOyB9IH1cblxuLmNkLXByaW1hcnktbmF2LCAuY2QtcHJpbWFyeS1uYXYgdWwge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMjYwcHg7XG4gIGJhY2tncm91bmQ6ICM0NTU2NTI7XG4gIG92ZXJmbG93OiBhdXRvO1xuICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7XG4gIHotaW5kZXg6IDE7XG4gIC8qIEZvcmNlIEhhcmR3YXJlIEFjY2VsZXJhdGlvbiBpbiBXZWJLaXQgKi9cbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzOyB9XG4gIC5jZC1wcmltYXJ5LW5hdiBhLCAuY2QtcHJpbWFyeS1uYXYgdWwgYSB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xuICAgIGhlaWdodDogNTBweDtcbiAgICBsaW5lLWhlaWdodDogNTBweDtcbiAgICBwYWRkaW5nOiAwIDIwcHg7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gICAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICM1MDY0NWY7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApO1xuICAgIHdpbGwtY2hhbmdlOiB0cmFuc2Zvcm0sIG9wYWNpdHk7XG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MsIG9wYWNpdHkgMC4zczsgfVxuICAgIC5jZC1wcmltYXJ5LW5hdiBhOmhvdmVyLCAuY2QtcHJpbWFyeS1uYXYgdWwgYTpob3ZlciB7XG4gICAgICBjb2xvcjogIzZiZDJiNDsgfVxuICAuY2QtcHJpbWFyeS1uYXYuaXMtaGlkZGVuLCAuY2QtcHJpbWFyeS1uYXYgdWwuaXMtaGlkZGVuIHtcbiAgICAvKiBzZWNvbmRhcnkgbmF2aWdhdGlvbnMgaGlkZGVuIGJ5IGRlZmF1bHQgKi9cbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTAwJSk7IH1cbiAgLmNkLXByaW1hcnktbmF2Lm1vdmVzLW91dCA+IGxpID4gYSwgLmNkLXByaW1hcnktbmF2IHVsLm1vdmVzLW91dCA+IGxpID4gYSB7XG4gICAgLyogcHVzaCB0aGUgbmF2aWdhdGlvbiBpdGVtcyB0byB0aGUgbGVmdCAtIGFuZCBsb3dlciBkb3duIG9wYWNpdHkgLSB3aGVuIHNlY29uZGFyeSBuYXYgc2xpZGVzIGluICovXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKTtcbiAgICBvcGFjaXR5OiAwOyB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDIycHgpIHtcbiAgLm5hdi1vbi1sZWZ0IC5jZC1wcmltYXJ5LW5hdiwgLm5hdi1vbi1sZWZ0IC5jZC1wcmltYXJ5LW5hdiB1bCB7XG4gICAgcmlnaHQ6IGF1dG87XG4gICAgbGVmdDogMDsgfSB9XG5cbi5jZC1wcmltYXJ5LW5hdiAuc2VlLWFsbCBhIHtcbiAgLyogZGlmZmVyZW50IHN0eWxlIGZvciB0aGUgU2VlIGFsbCBidXR0b24gb24gbW9iaWxlIGFuZCB0YWJsZXQgKi9cbiAgY29sb3I6ICMyNjdlNjQ7IH1cbi5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWdhbGxlcnkgLmNkLW5hdi1pdGVtLCAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyAuY2QtbmF2LWl0ZW0ge1xuICAvKiBpdGVtcyB3aXRoIHBpY3R1cmUgKG9yIGljb24pIGFuZCB0aXRsZSAqL1xuICBoZWlnaHQ6IDUwcHg7XG4gIGxpbmUtaGVpZ2h0OiA1MHB4OyB9XG4gIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWdhbGxlcnkgLmNkLW5hdi1pdGVtIGgzLCAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyAuY2QtbmF2LWl0ZW0gaDMge1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgZm9udC1zaXplOiAxLjJyZW07XG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICBwYWRkaW5nLWxlZnQ6IDEuMnJlbTsgfVxuLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtZ2FsbGVyeSAuY2QtbmF2LWl0ZW0gaW1nIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBkaXNwbGF5OiBibG9jaztcbiAgaGVpZ2h0OiA0MHB4O1xuICB3aWR0aDogYXV0bztcbiAgbGVmdDogMjBweDtcbiAgdG9wOiA1MCU7XG4gIG1hcmdpbi10b3A6IC0yMHB4OyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAxMDIycHgpIHtcbiAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1nYWxsZXJ5IC5jZC1uYXYtaXRlbSBpbWcge1xuICAgICAgZGlzcGxheTogbm9uZTsgfSB9XG4uY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyAuY2QtbmF2LWl0ZW0ge1xuICBwYWRkaW5nLWxlZnQ6IDc1cHg7IH1cbiAgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtaWNvbnMgLmNkLW5hdi1pdGVtIHAge1xuICAgIGNvbG9yOiAjNDU1NjUyO1xuICAgIGZvbnQtc2l6ZTogMS4zcmVtO1xuICAgIC8qIGhpZGUgZGVzY3JpcHRpb24gb24gc21hbGwgZGV2aWNlcyAqL1xuICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtaWNvbnMgLmNkLW5hdi1pdGVtOjpiZWZvcmUge1xuICAgIC8qIGl0ZW0gaWNvbiAqL1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAyMHB4O1xuICAgIHRvcDogNTAlO1xuICAgIG1hcmdpbi10b3A6IC0yMHB4O1xuICAgIHdpZHRoOiA0MHB4O1xuICAgIGhlaWdodDogNDBweDtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1zaXplOiA0MHB4IDQwcHg7IH1cbiAgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtaWNvbnMgLmNkLW5hdi1pdGVtLml0ZW0tMTo6YmVmb3JlIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIvaW1hZ2VzL2xpbmUtaWNvbi0xLnN2Z1wiKTsgfVxuICAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyAuY2QtbmF2LWl0ZW0uaXRlbS0yOjpiZWZvcmUge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi9pbWFnZXMvbGluZS1pY29uLTIuc3ZnXCIpOyB9XG4gIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWljb25zIC5jZC1uYXYtaXRlbS5pdGVtLTM6OmJlZm9yZSB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiL2ltYWdlcy9saW5lLWljb24tMy5zdmdcIik7IH1cbiAgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtaWNvbnMgLmNkLW5hdi1pdGVtLml0ZW0tNDo6YmVmb3JlIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIvaW1hZ2VzL2xpbmUtaWNvbi00LnN2Z1wiKTsgfVxuICAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyAuY2QtbmF2LWl0ZW0uaXRlbS01OjpiZWZvcmUge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi9pbWFnZXMvbGluZS1pY29uLTUuc3ZnXCIpOyB9XG4gIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWljb25zIC5jZC1uYXYtaXRlbS5pdGVtLTY6OmJlZm9yZSB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiL2ltYWdlcy9saW5lLWljb24tNi5zdmdcIik7IH1cbiAgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtaWNvbnMgLmNkLW5hdi1pdGVtLml0ZW0tNzo6YmVmb3JlIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIvaW1hZ2VzL2xpbmUtaWNvbi03LnN2Z1wiKTsgfVxuICAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyAuY2QtbmF2LWl0ZW0uaXRlbS04OjpiZWZvcmUge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi9pbWFnZXMvbGluZS1pY29uLTguc3ZnXCIpOyB9XG5AbWVkaWEgKG1heC13aWR0aDogMTAyMnB4KSB7XG4gIC5jZC1wcmltYXJ5LW5hdiB7XG4gICAgLyogYnkgZGVmYXVsdCAuY2QtcHJpbWFyeS1uYXYgaXMgaGlkZGVuIC0gdHJpY2sgZm9yIGlPUyBkZXZpY2VzIHdoZXJlIHlvdSBjYW4gc2VlIHRoZSBuYXZpZ2F0aW9uIGlmIHlvdSBwdWxsIGRvd24gKi9cbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gICAgdHJhbnNpdGlvbjogdmlzaWJpbGl0eSAwcyAwLjNzOyB9XG4gICAgLmNkLXByaW1hcnktbmF2Lm5hdi1pcy12aXNpYmxlIHtcbiAgICAgIHZpc2liaWxpdHk6IHZpc2libGU7XG4gICAgICB0cmFuc2l0aW9uOiB2aXNpYmlsaXR5IDBzIDBzOyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAuY2QtcHJpbWFyeS1uYXYge1xuICAgIHBvc2l0aW9uOiBzdGF0aWM7XG4gICAgcGFkZGluZzogMCA1MHB4IDAgMDtcbiAgICBtYXJnaW4tbGVmdDogMjBweDtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgb3ZlcmZsb3c6IHZpc2libGU7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7IH1cbiAgICAuY2QtcHJpbWFyeS1uYXY6YWZ0ZXIge1xuICAgICAgY29udGVudDogXCJcIjtcbiAgICAgIGRpc3BsYXk6IHRhYmxlO1xuICAgICAgY2xlYXI6IGJvdGg7IH1cbiAgICAuY2QtcHJpbWFyeS1uYXYubW92ZXMtb3V0ID4gbGkgPiBhIHtcbiAgICAgIC8qIHJlc2V0IG1vYmlsZSBzdHlsZSAqL1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgICAgb3BhY2l0eTogMTsgfVxuICAgIC5jZC1wcmltYXJ5LW5hdiB1bCB7XG4gICAgICBwb3NpdGlvbjogc3RhdGljO1xuICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgICAgd2lkdGg6IGF1dG87XG4gICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgIHotaW5kZXg6IDM7IH1cbiAgICAgIC5jZC1wcmltYXJ5LW5hdiB1bC5pcy1oaWRkZW4ge1xuICAgICAgICAvKiByZXNldCBtb2JpbGUgc3R5bGUgKi9cbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApOyB9XG4gICAgICAuY2QtcHJpbWFyeS1uYXYgdWwubW92ZXMtb3V0ID4gbGkgPiBhIHtcbiAgICAgICAgLyogcmVzZXQgbW9iaWxlIHN0eWxlICovXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAgICAgb3BhY2l0eTogMTsgfVxuICAgIC5jZC1wcmltYXJ5LW5hdiA+IGxpIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIG1hcmdpbi1sZWZ0OiAuNXJlbTsgfVxuICAgIC5jZC1wcmltYXJ5LW5hdiA+IGxpID4gYSB7XG4gICAgICAvKiBtYWluIG5hdmlnYXRpb24gYnV0dG9ucyBzdHlsZSAqL1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgaGVpZ2h0OiA4MHB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDgwcHg7XG4gICAgICBwYWRkaW5nOiAwO1xuICAgICAgY29sb3I6ICM0NTU2NTI7XG4gICAgICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgICAgIGJvcmRlci1ib3R0b206IG5vbmU7XG4gICAgICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzLCBib3gtc2hhZG93IDAuM3M7IH1cbiAgICAgIC5jZC1wcmltYXJ5LW5hdiA+IGxpID4gYTpob3ZlciB7XG4gICAgICAgIGNvbG9yOiAjMjY3ZTY0O1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cbiAgICAgIC5jZC1wcmltYXJ5LW5hdiA+IGxpID4gYS5zZWxlY3RlZCB7XG4gICAgICAgIGNvbG9yOiAjMjY3ZTY0O1xuICAgICAgICBib3gtc2hhZG93OiBpbnNldCAwIC0ycHggMCAjMjY3ZTY0OyB9XG4gICAgLmNkLXByaW1hcnktbmF2IC5nby1iYWNrLCAuY2QtcHJpbWFyeS1uYXYgLnNlZS1hbGwge1xuICAgICAgZGlzcGxheTogbm9uZTsgfVxuICAgIC5jZC1wcmltYXJ5LW5hdiAuY2Qtc2Vjb25kYXJ5LW5hdiwgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtZ2FsbGVyeSwgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtaWNvbnMge1xuICAgICAgLyogZHJvcGRvd24gbWVudSBzdHlsZSAqL1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiA4MHB4O1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgICAgcGFkZGluZzogMnJlbTtcbiAgICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDAgI2U1ZTZlNywgMCAzcHggNnB4IHJnYmEoMCwgMCwgMCwgMC4wNSk7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IC4zcyAwcywgdmlzaWJpbGl0eSAwcyAwczsgfVxuICAgICAgLmNkLXByaW1hcnktbmF2IC5jZC1zZWNvbmRhcnktbmF2OmFmdGVyLCAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1nYWxsZXJ5OmFmdGVyLCAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29uczphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIGRpc3BsYXk6IHRhYmxlO1xuICAgICAgICBjbGVhcjogYm90aDsgfVxuICAgICAgLmNkLXByaW1hcnktbmF2IC5jZC1zZWNvbmRhcnktbmF2LmlzLWhpZGRlbiwgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtZ2FsbGVyeS5pcy1oaWRkZW4sIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWljb25zLmlzLWhpZGRlbiB7XG4gICAgICAgIG9wYWNpdHk6IDA7XG4gICAgICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAuM3MgMHMsIHZpc2liaWxpdHkgMHMgLjNzOyB9XG4gICAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLXNlY29uZGFyeS1uYXYgPiAuc2VlLWFsbCwgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtZ2FsbGVyeSA+IC5zZWUtYWxsLCAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyA+IC5zZWUtYWxsIHtcbiAgICAgICAgLyogdGhpcyBpcyB0aGUgQklHIFNlZSBhbGwgYnV0dG9uIGF0IHRoZSBib3R0b20gb2YgdGhlIGRyb3Bkb3duIG1lbnUgKi9cbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICBoZWlnaHQ6IDUwcHg7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICAvKiByZXNldCBzb21lIGluaGVyaXRlZCBzdHlsZSAqL1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIHBhZGRpbmc6IDA7IH1cbiAgICAgICAgLmNkLXByaW1hcnktbmF2IC5jZC1zZWNvbmRhcnktbmF2ID4gLnNlZS1hbGwgYSwgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtZ2FsbGVyeSA+IC5zZWUtYWxsIGEsIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWljb25zID4gLnNlZS1hbGwgYSB7XG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICB0b3A6IDA7XG4gICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICBmb250LXNpemU6IDIuMnJlbTtcbiAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgbGluZS1oZWlnaHQ6IDUwcHg7XG4gICAgICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlNWU2ZTc7XG4gICAgICAgICAgLyogcmVzZXQgc29tZSBpbmhlcml0ZWQgc3R5bGUgKi9cbiAgICAgICAgICBib3JkZXItYm90dG9tOiBub25lO1xuICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICAgIHRyYW5zaXRpb246IGNvbG9yIDAuMnMsIGJhY2tncm91bmQgMC4ycywgYm9yZGVyIDAuMnM7IH1cbiAgICAgICAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLXNlY29uZGFyeS1uYXYgPiAuc2VlLWFsbCBhOmhvdmVyLCAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1nYWxsZXJ5ID4gLnNlZS1hbGwgYTpob3ZlciwgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtaWNvbnMgPiAuc2VlLWFsbCBhOmhvdmVyIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICM0NTU2NTI7XG4gICAgICAgICAgICBib3JkZXItY29sb3I6ICM0NTU2NTI7XG4gICAgICAgICAgICBjb2xvcjogI2ZmZjsgfVxuICAgIC5jZC1wcmltYXJ5LW5hdiAuY2Qtc2Vjb25kYXJ5LW5hdiA+IGxpIHtcbiAgICAgIC8qIGNoYW5nZSB0aGUgaGVpZ2h0IGFjY29yZGluZyB0byB5b3VyIG5lZWRzIC0geW91IGNhbiBldmVuIHNldCBoZWlnaHQ6IGF1dG8gKi9cbiAgICAgIGhlaWdodDogMzQwcHg7XG4gICAgICAvKiBoZXJlIHlvdSBzZXQgdGhlIG51bWJlciBvZiBjb2x1bW5zIC0gdXNlIHdpZHRoIHBlcmNlbnRhZ2UgKi9cbiAgICAgIHdpZHRoOiAyMyU7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIG1hcmdpbi1yaWdodDogMi42NiU7XG4gICAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjZTVlNmU3O1xuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgIG92ZXJmbG93LXg6IGhpZGRlbjtcbiAgICAgIG92ZXJmbG93LXk6IGF1dG87XG4gICAgICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7IH1cbiAgICAgIC5jZC1wcmltYXJ5LW5hdiAuY2Qtc2Vjb25kYXJ5LW5hdiA+IGxpOm50aC1jaGlsZCg0bisyKSB7XG4gICAgICAgIC8qICsyIGJlY2F1c2Ugd2UgaGF2ZSAyIGxpc3QgaXRlbXMgd2l0aCBkaXNwbGF5Om5vbmUgKi9cbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgICAgICBib3JkZXItcmlnaHQ6IG5vbmU7IH1cbiAgICAgIC5jZC1wcmltYXJ5LW5hdiAuY2Qtc2Vjb25kYXJ5LW5hdiA+IGxpID4gYSB7XG4gICAgICAgIC8qIHNlY29uZGFyeSBuYXYgdGl0bGUgKi9cbiAgICAgICAgY29sb3I6ICMyNjdlNjQ7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgICBmb250LXNpemU6IDEuNnJlbTtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogLjZlbTsgfVxuICAgIC5jZC1wcmltYXJ5LW5hdiAuY2Qtc2Vjb25kYXJ5LW5hdiBhIHtcbiAgICAgIGhlaWdodDogMzBweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAzMHB4O1xuICAgICAgcGFkZGluZzogMCAxOCUgMCAwO1xuICAgICAgY29sb3I6ICM0NTU2NTI7XG4gICAgICBib3JkZXItYm90dG9tOiBub25lO1xuICAgICAgZm9udC1zaXplOiAxLjRyZW07IH1cbiAgICAgIC5jZC1wcmltYXJ5LW5hdiAuY2Qtc2Vjb25kYXJ5LW5hdiBhOmhvdmVyIHtcbiAgICAgICAgY29sb3I6ICMyNjdlNjQ7IH1cbiAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLXNlY29uZGFyeS1uYXYgdWwge1xuICAgICAgLyogRm9yY2UgSGFyZHdhcmUgQWNjZWxlcmF0aW9uIGluIFdlYktpdCAqL1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApOyB9XG4gICAgLmNkLXByaW1hcnktbmF2IC5jZC1zZWNvbmRhcnktbmF2IHVsIHVsIHtcbiAgICAgIC8qIHRlcnRpYXJ5IG5hdmlnYXRpb24gKi9cbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogMDtcbiAgICAgIGxlZnQ6IDA7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICB3aWR0aDogMTAwJTsgfVxuICAgICAgLmNkLXByaW1hcnktbmF2IC5jZC1zZWNvbmRhcnktbmF2IHVsIHVsLmlzLWhpZGRlbiB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMDAlKTsgfVxuICAgICAgLmNkLXByaW1hcnktbmF2IC5jZC1zZWNvbmRhcnktbmF2IHVsIHVsIC5nby1iYWNrIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7IH1cbiAgICAgICAgLmNkLXByaW1hcnktbmF2IC5jZC1zZWNvbmRhcnktbmF2IHVsIHVsIC5nby1iYWNrIGEge1xuICAgICAgICAgIGNvbG9yOiB0cmFuc3BhcmVudDsgfVxuICAgICAgLmNkLXByaW1hcnktbmF2IC5jZC1zZWNvbmRhcnktbmF2IHVsIHVsIC5zZWUtYWxsIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7IH1cbiAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLXNlY29uZGFyeS1uYXYgLm1vdmVzLW91dCA+IGxpID4gYSB7XG4gICAgICAvKiBwdXNoIHRoZSBuYXZpZ2F0aW9uIGl0ZW1zIHRvIHRoZSBsZWZ0IC0gYW5kIGxvd2VyIGRvd24gb3BhY2l0eSAtIHdoZW4gdGVydGlhcnkgbmF2IHNsaWRlcyBpbiAqL1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKTsgfVxuICAgIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWdhbGxlcnkge1xuICAgICAgYm94LXNoYWRvdzogMCA1cHggNXB4IHJnYmEoMTAwLCAxMDAsIDEwMCwgMC4zKTsgfVxuICAgICAgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtZ2FsbGVyeSBsaSB7XG4gICAgICAgIC8qIHNldCBoZXJlIG51bWJlciBvZiBjb2x1bW5zIC0gdXNlIHdpZHRoIHBlcmNlbnRhZ2UgKi9cbiAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgIHdpZHRoOiAyNSU7XG4gICAgICAgIHBhZGRpbmc6IDFyZW07IH1cbiAgICAgICAgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtZ2FsbGVyeSBsaTpudGgtY2hpbGQoNG4rMikge1xuICAgICAgICAgIC8qICsyIGJlY2F1c2Ugd2UgaGF2ZSB0d28gYWRkaXRpb25hbCBsaXN0IGl0ZW1zIHdpdGggZGlzcGxheTpub25lICovIH1cbiAgICAgIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWdhbGxlcnkgLmNkLW5hdi1pdGVtIHtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgICAgICBsaW5lLWhlaWdodDogMS4yOyB9XG4gICAgICAgIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWdhbGxlcnkgLmNkLW5hdi1pdGVtIGltZyB7XG4gICAgICAgICAgcG9zaXRpb246IHN0YXRpYztcbiAgICAgICAgICBtYXJnaW4tdG9wOiAwO1xuICAgICAgICAgIGhlaWdodDogYXV0bztcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAuNnJlbTsgfVxuICAgICAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1nYWxsZXJ5IC5jZC1uYXYtaXRlbSBoMyB7XG4gICAgICAgICAgY29sb3I6ICMyNjdlNjQ7XG4gICAgICAgICAgZm9udC1zaXplOiAuOXJlbTtcbiAgICAgICAgICBwYWRkaW5nOiAwIC40cmVtO1xuICAgICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7IH1cbiAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyBsaSB7XG4gICAgICAvKiBzZXQgaGVyZSBudW1iZXIgb2YgY29sdW1ucyAtIHVzZSB3aWR0aCBwZXJjZW50YWdlICovXG4gICAgICB3aWR0aDogMzIlO1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBtYXJnaW46IDAgMiUgMjBweCAwOyB9XG4gICAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyBsaTpudGgtY2hpbGQoM24rMikge1xuICAgICAgICAvKiArMiBiZWNhdXNlIHdlIGhhdmUgdHdvIGFkZGl0aW9uYWwgbGlzdCBpdGVtcyB3aXRoIGRpc3BsYXk6bm9uZSAqL1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7IH1cbiAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyAuY2QtbmF2LWl0ZW0ge1xuICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgICAgIGhlaWdodDogNTBweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjI7XG4gICAgICBwYWRkaW5nOiAyNHB4IDAgMCA4NXB4OyB9XG4gICAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyAuY2QtbmF2LWl0ZW06aG92ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kOiAjZmFmYWZiOyB9XG4gICAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyAuY2QtbmF2LWl0ZW0gaDMge1xuICAgICAgICBjb2xvcjogIzI2N2U2NDtcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cbiAgICAgIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWljb25zIC5jZC1uYXYtaXRlbSBwIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7IH1cbiAgICAgIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWljb25zIC5jZC1uYXYtaXRlbTo6YmVmb3JlIHtcbiAgICAgICAgbGVmdDogMjVweDsgfSB9XG5cbi5oYXMtY2hpbGRyZW4gPiBhLCAuZ28tYmFjayBhIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC5oYXMtY2hpbGRyZW4gPiBhOjpiZWZvcmUsIC5oYXMtY2hpbGRyZW4gPiBhOjphZnRlciwgLmdvLWJhY2sgYTo6YmVmb3JlLCAuZ28tYmFjayBhOjphZnRlciB7XG4gICAgLyogYXJyb3cgaWNvbiBpbiBDU1MgLSBmb3IgZWxlbWVudCB3aXRoIG5lc3RlZCB1bm9yZGVyZWQgbGlzdHMgKi9cbiAgICBjb250ZW50OiAnJztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1MCU7XG4gICAgbWFyZ2luLXRvcDogLTFweDtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgaGVpZ2h0OiAycHg7XG4gICAgd2lkdGg6IDEwcHg7XG4gICAgYmFja2dyb3VuZDogIzVjNzI2ZDtcbiAgICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47IH1cbiAgLmhhcy1jaGlsZHJlbiA+IGE6OmJlZm9yZSwgLmdvLWJhY2sgYTo6YmVmb3JlIHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7IH1cbiAgLmhhcy1jaGlsZHJlbiA+IGE6OmFmdGVyLCAuZ28tYmFjayBhOjphZnRlciB7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgLmhhcy1jaGlsZHJlbiA+IGE6OmJlZm9yZSwgLmhhcy1jaGlsZHJlbiA+IGE6OmFmdGVyLCAuZ28tYmFjayBhOjpiZWZvcmUsIC5nby1iYWNrIGE6OmFmdGVyIHtcbiAgICAgIGJhY2tncm91bmQ6ICNjYWNkY2Y7IH1cbiAgICAuaGFzLWNoaWxkcmVuID4gYTpob3Zlcjo6YmVmb3JlLCAuaGFzLWNoaWxkcmVuID4gYTpob3Zlcjo6YWZ0ZXIsIC5nby1iYWNrIGE6aG92ZXI6OmJlZm9yZSwgLmdvLWJhY2sgYTpob3Zlcjo6YWZ0ZXIge1xuICAgICAgYmFja2dyb3VuZDogIzI2N2U2NDsgfSB9XG5cbi5oYXMtY2hpbGRyZW4gPiBhIHtcbiAgcGFkZGluZy1yaWdodDogNDBweDsgfVxuICAuaGFzLWNoaWxkcmVuID4gYTo6YmVmb3JlLCAuaGFzLWNoaWxkcmVuID4gYTo6YWZ0ZXIge1xuICAgIC8qIGFycm93IGdvZXMgb24gdGhlIHJpZ2h0IHNpZGUgLSBjaGlsZHJlbiBuYXZpZ2F0aW9uICovXG4gICAgcmlnaHQ6IDIwcHg7XG4gICAgdHJhbnNmb3JtLW9yaWdpbjogOXB4IDUwJTsgfVxuXG4uY2QtcHJpbWFyeS1uYXYgLmdvLWJhY2sgYSB7XG4gIHBhZGRpbmctbGVmdDogNDBweDsgfVxuICAuY2QtcHJpbWFyeS1uYXYgLmdvLWJhY2sgYTo6YmVmb3JlLCAuY2QtcHJpbWFyeS1uYXYgLmdvLWJhY2sgYTo6YWZ0ZXIge1xuICAgIC8qIGFycm93IGdvZXMgb24gdGhlIGxlZnQgc2lkZSAtIGdvIGJhY2sgYnV0dG9uICovXG4gICAgbGVmdDogMjBweDtcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiAxcHggNTAlOyB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLmhhcy1jaGlsZHJlbiA+IGE6OmJlZm9yZSwgLmhhcy1jaGlsZHJlbiA+IGE6OmFmdGVyIHtcbiAgICByaWdodDogMTUlOyB9XG4gIC5jZC1wcmltYXJ5LW5hdiA+IC5oYXMtY2hpbGRyZW4gPiBhIHtcbiAgICAvKiBtYWluIG5hdmlnYXRpb24gYXJyb3dzIG9uIGxhcmdlciBkZXZpY2VzICovXG4gICAgcGFkZGluZy1yaWdodDogMzBweCAhaW1wb3J0YW50OyB9XG4gICAgLmNkLXByaW1hcnktbmF2ID4gLmhhcy1jaGlsZHJlbiA+IGE6OmJlZm9yZSwgLmNkLXByaW1hcnktbmF2ID4gLmhhcy1jaGlsZHJlbiA+IGE6OmFmdGVyIHtcbiAgICAgIHdpZHRoOiA5cHg7XG4gICAgICB0cmFuc2Zvcm0tb3JpZ2luOiA1MCUgNTAlO1xuICAgICAgYmFja2dyb3VuZDogI2NhY2RjZjtcbiAgICAgIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICAgIHRyYW5zaXRpb246IHdpZHRoIDAuM3MsIHRyYW5zZm9ybSAwLjNzOyB9XG4gICAgLmNkLXByaW1hcnktbmF2ID4gLmhhcy1jaGlsZHJlbiA+IGE6OmJlZm9yZSB7XG4gICAgICByaWdodDogMTJweDsgfVxuICAgIC5jZC1wcmltYXJ5LW5hdiA+IC5oYXMtY2hpbGRyZW4gPiBhOjphZnRlciB7XG4gICAgICByaWdodDogN3B4OyB9XG4gICAgLmNkLXByaW1hcnktbmF2ID4gLmhhcy1jaGlsZHJlbiA+IGEuc2VsZWN0ZWQ6OmJlZm9yZSwgLmNkLXByaW1hcnktbmF2ID4gLmhhcy1jaGlsZHJlbiA+IGEuc2VsZWN0ZWQ6OmFmdGVyIHtcbiAgICAgIHdpZHRoOiAxNHB4OyB9XG4gICAgLmNkLXByaW1hcnktbmF2ID4gLmhhcy1jaGlsZHJlbiA+IGEuc2VsZWN0ZWQ6OmJlZm9yZSB7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNXB4KSByb3RhdGUoLTQ1ZGVnKTsgfVxuICAgIC5jZC1wcmltYXJ5LW5hdiA+IC5oYXMtY2hpbGRyZW4gPiBhLnNlbGVjdGVkOjphZnRlciB7XG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7IH1cbiAgLmNkLXNlY29uZGFyeS1uYXYgPiAuaGFzLWNoaWxkcmVuID4gYTo6YmVmb3JlLCAuY2Qtc2Vjb25kYXJ5LW5hdiA+IC5oYXMtY2hpbGRyZW4gPiBhOjphZnRlciB7XG4gICAgLyogcmVtb3ZlIGFycm93cyBvbiBzZWNvbmRhcnkgbmF2IHRpdGxlcyAqL1xuICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgLmNkLXByaW1hcnktbmF2IC5nby1iYWNrIGEge1xuICAgIHBhZGRpbmctbGVmdDogMjBweDsgfVxuICAgIC5jZC1wcmltYXJ5LW5hdiAuZ28tYmFjayBhOjpiZWZvcmUsIC5jZC1wcmltYXJ5LW5hdiAuZ28tYmFjayBhOjphZnRlciB7XG4gICAgICBsZWZ0OiAxcHg7IH0gfVxuXG4uY2Qtc2VhcmNoIHtcbiAgZmxvYXQ6IHJpZ2h0O1xuICBtYXJnaW46IDEuMjVyZW07IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgLmNkLXNlYXJjaCB7XG4gICAgICBmbG9hdDogbm9uZTtcbiAgICAgIG1hcmdpbjogMXJlbSBhdXRvIDA7XG4gICAgICB3aWR0aDogMTAwJTsgfSB9XG4gIC5jZC1zZWFyY2ggZm9ybSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC5jZC1zZWFyY2ggaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiL2ltYWdlcy9zZWFyY2gtaWNvbi5wbmdcIik7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgdGV4dC1pbmRlbnQ6IC05OTk5OXB4O1xuICAgIGhlaWdodDogMjJweDtcbiAgICB3aWR0aDogMjJweDtcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gICAgYm9yZGVyOiAwO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDZweDtcbiAgICByaWdodDogM3B4O1xuICAgIGJhY2tncm91bmQtc2l6ZTogNzUlOyB9XG4gIC5jZC1zZWFyY2ggaW5wdXRbdHlwZT1cInNlYXJjaFwiXSB7XG4gICAgdGV4dC1pbmRlbnQ6IDFyZW07XG4gICAgYXBwZWFyYW5jZTogbm9uZTtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjOyB9XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAuY2Qtc2VhcmNoIGlucHV0W3R5cGU9XCJzZWFyY2hcIl0ge1xuICAgICAgICB3aWR0aDogMTAwJTsgfSB9XG4gICAgLmNkLXNlYXJjaCBpbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyLCAuY2Qtc2VhcmNoIGlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi1tb3otcGxhY2Vob2xkZXIsIC5jZC1zZWFyY2ggaW5wdXRbdHlwZT1cInNlYXJjaFwiXTotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgICAgY29sb3I6ICNjYWNkY2Y7IH1cbiAgICAuY2Qtc2VhcmNoIGlucHV0W3R5cGU9XCJzZWFyY2hcIl06Zm9jdXMge1xuICAgICAgb3V0bGluZTogbm9uZTsgfVxuICAuY2Qtc2VhcmNoLmlzLXZpc2libGUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IC4zcyAwcywgdmlzaWJpbGl0eSAwcyAwczsgfVxuICAubmF2LWlzLWZpeGVkIC5jZC1zZWFyY2gge1xuICAgIHBvc2l0aW9uOiBmaXhlZDsgfVxuXG4uY2Qtb3ZlcmxheSB7XG4gIC8qIHNoYWRvdyBsYXllciB2aXNpYmxlIHdoZW4gbmF2aWdhdGlvbiBpcyBhY3RpdmUgKi9cbiAgcG9zaXRpb246IGZpeGVkO1xuICB6LWluZGV4OiAyO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICBvcGFjaXR5OiAwO1xuICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyAwcywgdmlzaWJpbGl0eSAwcyAwLjNzLCB0cmFuc2Zvcm0gMC4zcyAwczsgfVxuICAuY2Qtb3ZlcmxheS5pcy12aXNpYmxlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHZpc2liaWxpdHk6IHZpc2libGU7XG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzIDBzLCB2aXNpYmlsaXR5IDBzIDBzLCB0cmFuc2Zvcm0gMC4zcyAwczsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogMTAyMnB4KSB7XG4gICAgLmNkLW92ZXJsYXkuaXMtdmlzaWJsZSB7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7IH1cbiAgICAubmF2LW9uLWxlZnQgLmNkLW92ZXJsYXkuaXMtdmlzaWJsZSB7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjYwcHgpOyB9XG4gICAgLmNkLW92ZXJsYXkuaXMtdmlzaWJsZS5zZWFyY2gtaXMtdmlzaWJsZSwgLm5hdi1vbi1sZWZ0IC5jZC1vdmVybGF5LmlzLXZpc2libGUuc2VhcmNoLWlzLXZpc2libGUge1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApOyB9IH1cblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqXG4gKnN1cHBvcnQgZm9yIG5vIGpzXG4gKlxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLm5vLWpzIC5jZC1wcmltYXJ5LW5hdiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaGVpZ2h0OiBhdXRvO1xuICB3aWR0aDogMTAwJTtcbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIHZpc2liaWxpdHk6IHZpc2libGU7XG4gIHotaW5kZXg6IDI7IH1cblxuLm5vLWpzIC5jZC1zZWFyY2gge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogMDtcbiAgb3BhY2l0eTogMTtcbiAgdmlzaWJpbGl0eTogdmlzaWJsZTsgfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5uby1qcyAuY2QtcHJpbWFyeS1uYXYge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB6LWluZGV4OiAzO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB3aWR0aDogYXV0bztcbiAgICB0b3A6IDA7XG4gICAgcmlnaHQ6IDE1MHB4O1xuICAgIHBhZGRpbmc6IDA7IH1cbiAgLm5vLWpzIC5uYXYtaXMtZml4ZWQgLmNkLXByaW1hcnktbmF2IHtcbiAgICBwb3NpdGlvbjogZml4ZWQ7IH0gfVxuXG4ubmF2LWZvb3RlciB7XG4gIHBhZGRpbmc6IDMwcHggMjBweCAyMHB4O1xuICB0ZXh0LWFsaWduOiBsZWZ0OyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5uYXYtZm9vdGVyIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuICAubmF2LWZvb3Rlcl9faGVhZGluZyB7XG4gICAgZm9udC1mYW1pbHk6IE5ld3MgQ3ljbGUsIHNhbnMtc2VyaWY7XG4gICAgZm9udC1zaXplOiAxcmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgbWFyZ2luLWJvdHRvbTogMXJlbTsgfVxuICAgIC5uYXYtZm9vdGVyX19oZWFkaW5nIGEge1xuICAgICAgY29sb3I6ICMzMzM7IH1cbiAgICAgIC5uYXYtZm9vdGVyX19oZWFkaW5nIGE6aG92ZXIge1xuICAgICAgICBjb2xvcjogIzI2N2U2NDsgfVxuICAubmF2LWZvb3Rlcl9fbGluayB7XG4gICAgZm9udC1zaXplOiAxNHB4OyB9XG4gIC5uYXYtZm9vdGVyX19ib3gge1xuICAgIHBhZGRpbmc6IDAgMTBweDtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wOyB9XG4gIC5uYXYtZm9vdGVyX19ib3gtbmFycm93IHtcbiAgICBwYWRkaW5nOiAwIDEwcHg7XG4gICAgdmVydGljYWwtYWxpZ246IHRvcDsgfVxuICAubmF2LWZvb3Rlcl9fYnV0dG9uIHtcbiAgICBib3JkZXItd2lkdGg6IDFweDtcbiAgICBjb2xvcjogIzI2N2U2NDtcbiAgICBmb250LXNpemU6IC45cmVtO1xuICAgIG1hcmdpbi1ib3R0b206IDFyZW07XG4gICAgcGFkZGluZzogLjVyZW0gMXJlbTtcbiAgICB3aWR0aDogMTAwJTsgfVxuICAubmF2LWZvb3Rlcl9fc3ViLWxpbmtzIHtcbiAgICBmb250LXNpemU6IDE0cHg7IH1cbiAgICAubmF2LWZvb3Rlcl9fc3ViLWxpbmtzIGxpOm50aC1jaGlsZCgxKSB7XG4gICAgICBmb250LWZhbWlseTogTmV3cyBDeWNsZSwgc2Fucy1zZXJpZjtcbiAgICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgICBtYXJnaW4tYm90dG9tOiAuNXJlbTsgfVxuICAgICAgLm5hdi1mb290ZXJfX3N1Yi1saW5rcyBsaTpudGgtY2hpbGQoMSkgYSB7XG4gICAgICAgIGNvbG9yOiAjMzMzOyB9XG4gICAgICAgIC5uYXYtZm9vdGVyX19zdWItbGlua3MgbGk6bnRoLWNoaWxkKDEpIGE6aG92ZXIge1xuICAgICAgICAgIGNvbG9yOiAjMjY3ZTY0OyB9XG5cbi5iYW5uZXItdGFsbCB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChpbWFnZXMvaW5kZXhfaGVyby5qcGcpO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGhlaWdodDogMjAwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzY5cHgpIHtcbiAgICAuYmFubmVyLXRhbGwge1xuICAgICAgaGVpZ2h0OiA0NjVweDsgfSB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgIC5iYW5uZXItdGFsbCB7XG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoaW1hZ2VzL2luZGV4X2hlcm8tMi5qcGcpO1xuICAgICAgaGVpZ2h0OiAyNjVweDsgfSB9XG4gIC5iYW5uZXItdGFsbF9faGVhZGxpbmUge1xuICAgIGJvdHRvbTogM3JlbTtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBmb250LWZhbWlseTogc2VyaWY7XG4gICAgZm9udC1zaXplOiA0cmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA4MDA7XG4gICAgbGVmdDogMnJlbTtcbiAgICBsaW5lLWhlaWdodDogMTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbWFyZ2luOiAwIDAgMXJlbSAxcmVtO1xuICAgIHRleHQtc2hhZG93OiAycHggMnB4IDJweCAjMzMzOyB9XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAuYmFubmVyLXRhbGxfX2hlYWRsaW5lIHtcbiAgICAgICAgcG9zaXRpb246IHN0YXRpYztcbiAgICAgICAgZm9udC1zaXplOiAycmVtO1xuICAgICAgICBwYWRkaW5nOiAycmVtOyB9IH1cbiAgICAuYmFubmVyLXRhbGxfX2hlYWRsaW5lIHN1cCB7XG4gICAgICBmb250LXNpemU6IDEuNzVyZW07IH1cbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgICAuYmFubmVyLXRhbGxfX2hlYWRsaW5lIHN1cCB7XG4gICAgICAgICAgdG9wOiAtMC4yNWVtOyB9IH1cblxuLmJhbm5lci1zdGFuZGFyZCB7XG4gIGJhY2tncm91bmQ6ICMyNjdlNjQ7XG4gIGNvbG9yOiAjZmZmO1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgaGVpZ2h0OiBhdXRvOyB9XG4gIC5iYW5uZXItc3RhbmRhcmQgaW1nIHtcbiAgICBkaXNwbGF5OiBibG9jazsgfVxuICAuYmFubmVyLXN0YW5kYXJkX19ib3gge1xuICAgIHBhZGRpbmc6IDFyZW0gMnJlbTsgfVxuICAuYmFubmVyLXN0YW5kYXJkX19oZWFkaW5nIHtcbiAgICBjb2xvcjogI2ZmZjsgfVxuICAuYmFubmVyLXN0YW5kYXJkX19tZWRpYSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2VjZWVlNjsgfVxuXG4uYmFubmVyLXBhbm9yYW1hIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltYWdlcy90cmVlcy5qcGcpO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGhlaWdodDogMjU1cHg7IH1cblxuLmNhcmQtZGlwdGljIHtcbiAgZGlzcGxheTogdGFibGU7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjY2NjO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2NjYzsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAuY2FyZC1kaXB0aWMge1xuICAgICAgZmxleC1mbG93OiBjb2x1bW47IH0gfVxuICAuY2FyZC1kaXB0aWNfX2JveCB7XG4gICAgZGlzcGxheTogdGFibGUtY2VsbDtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgIHBhZGRpbmc6IDJyZW0gMXJlbTsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjlweCkge1xuICAgICAgLmNhcmQtZGlwdGljX19ib3gge1xuICAgICAgICBwYWRkaW5nOiAycmVtIDFyZW0gMnJlbSAycmVtOyB9IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY5cHgpIHtcbiAgICAgIC5jYXJkLWRpcHRpY19fYm94Om50aC1jaGlsZCgyKSB7XG4gICAgICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2NjYztcbiAgICAgICAgcGFkZGluZzogMnJlbSAycmVtIDJyZW0gMXJlbTsgfSB9XG4gIC5jYXJkLWRpcHRpY19faGVhZGluZyB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gIC5jYXJkLWRpcHRpY19fbWVkaWEge1xuICAgIG1hcmdpbi1ib3R0b206IDJyZW07IH1cbiAgLmNhcmQtZGlwdGljX190ZXh0IHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luLWJvdHRvbTogMnJlbTsgfVxuICAuY2FyZC1kaXB0aWMgdWwge1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gICAgLmNhcmQtZGlwdGljIHVsIGxpIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIHBhZGRpbmc6IC41cmVtO1xuICAgICAgd2lkdGg6IDQ3JTsgfVxuICAuY2FyZC1kaXB0aWNfX2xpbmsge1xuICAgIGNvbG9yOiAjMjY3ZTY0O1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBmb250LWZhbWlseTogUGxheWZhaXIgRGlzcGxheSwgc2VyaWY7XG4gICAgcGFkZGluZzogMCAuNHJlbTtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG4gICAgLmNhcmQtZGlwdGljX19saW5rOmhvdmVyIHtcbiAgICAgIGNvbG9yOiAjNDU1NjUyOyB9XG5cbi5jYXJkLWJpbyB7XG4gIHBhZGRpbmctYm90dG9tOiAycmVtOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5jYXJkLWJpbyB7XG4gICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2U1ZTZlNztcbiAgICAgIG1hcmdpbi1ib3R0b206IDJyZW07IH0gfVxuICAuY2FyZC1iaW9fX21lZGlhIHtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wOyB9XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAuY2FyZC1iaW9fX21lZGlhIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOyB9IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgIC5jYXJkLWJpb19fbWVkaWEgaW1nIHtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICB3aWR0aDogMzMlOyB9IH1cbiAgLmNhcmQtYmlvX19ib3gge1xuICAgIHBhZGRpbmctbGVmdDogMnJlbTtcbiAgICBwYWRkaW5nLXRvcDogMDtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wOyB9XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAuY2FyZC1iaW9fX2JveCB7XG4gICAgICAgIHBhZGRpbmc6IDA7IH0gfVxuICAuY2FyZC1iaW9fX2hlYWRpbmcge1xuICAgIGNvbG9yOiAjMjY3ZTY0O1xuICAgIGZvbnQtZmFtaWx5OiBQbGF5ZmFpciBEaXNwbGF5LCBzZXJpZjtcbiAgICBmb250LXNpemU6IDJyZW07XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBsaW5lLWhlaWdodDogMTtcbiAgICBtYXJnaW4tYm90dG9tOiAxcmVtOyB9XG4gIC5jYXJkLWJpb19fc3VidGl0bGUge1xuICAgIGNvbG9yOiAjN2Y3ZTdlO1xuICAgIG1hcmdpbi1ib3R0b206IDhweDsgfVxuICAgIC5jYXJkLWJpb19fc3VidGl0bGUgaDMge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG4gICAgLmNhcmQtYmlvX19zdWJ0aXRsZSBhIHtcbiAgICAgIGNvbG9yOiAjMjY3ZTY0O1xuICAgICAgbWFyZ2luLWxlZnQ6IDEwcHg7IH1cbiAgICAgIC5jYXJkLWJpb19fc3VidGl0bGUgYSBpIHtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgIzI2N2U2NDtcbiAgICAgICAgcGFkZGluZzogMnB4OyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5jYXJkLWJpb19fdGV4dCB7XG4gICAgICB0ZXh0LWFsaWduOiBsZWZ0OyB9IH1cbiAgLmNhcmQtYmlvX190ZXh0ICogKyAqIHtcbiAgICBtYXJnaW4tdG9wOiAxcmVtOyB9XG5cbi5jYXJkLWFydGljbGVfX2JveCB7XG4gIGJveC1zaGFkb3c6IDAgMXB4IDAgIzI2N2U2NDtcbiAgZGlzcGxheTogbm9uZTtcbiAgcGFkZGluZy10b3A6IDI0cHg7XG4gIHBhZGRpbmctYm90dG9tOiAyNHB4OyB9XG4gIC5jYXJkLWFydGljbGVfX2JveCAqICsgKiB7XG4gICAgbWFyZ2luLXRvcDogMXJlbTsgfVxuLmNhcmQtYXJ0aWNsZSBhOmhvdmVyIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG4uY2FyZC1hcnRpY2xlIGgyIHtcbiAgY29sb3I6ICMyNjdlNjQ7XG4gIGZvbnQtZmFtaWx5OiBQbGF5ZmFpciBEaXNwbGF5LCBzZXJpZjtcbiAgZm9udC1zaXplOiAycmVtO1xuICBmb250LXdlaWdodDogNDAwO1xuICBsaW5lLWhlaWdodDogMTsgfVxuICAuY2FyZC1hcnRpY2xlIGgyOmhvdmVyIHtcbiAgICBjb2xvcjogIzQ1NTY1MjsgfVxuLmNhcmQtYXJ0aWNsZSBzbWFsbCB7XG4gIGNvbG9yOiAjNjY2O1xuICBmb250LXNpemU6IC43NXJlbTsgfVxuXG4ubG9hZGVyX19uYXYge1xuICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICBwYWRkaW5nLXRvcDogMS4yNXJlbTsgfVxuXG4uY2FyZC10cmlwdGljIHtcbiAgZGlzcGxheTogdGFibGU7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjY2NjO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2NjYzsgfVxuICAuY2FyZC10cmlwdGljX19ib3gge1xuICAgIHBhZGRpbmc6IDJyZW07XG4gICAgdmVydGljYWwtYWxpZ246IHRvcDsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjlweCkge1xuICAgICAgLmNhcmQtdHJpcHRpY19fYm94Om50aC1jaGlsZCgyKSB7XG4gICAgICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2NjYzsgfSB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDc2OXB4KSB7XG4gICAgICAuY2FyZC10cmlwdGljX19ib3g6bnRoLWNoaWxkKDMpIHtcbiAgICAgICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjY2NjOyB9IH1cbiAgLmNhcmQtdHJpcHRpY19fbWVkaWEge1xuICAgIGhlaWdodDogMTUwcHg7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBtYXJnaW4tYm90dG9tOiAycmVtOyB9XG4gIC5jYXJkLXRyaXB0aWNfX2hlYWRpbmctbGluayB7XG4gICAgY29sb3I6ICMyNjdlNjQ7XG4gICAgZm9udC1mYW1pbHk6IFBsYXlmYWlyIERpc3BsYXksIHNlcmlmO1xuICAgIGZvbnQtc2l6ZTogMS4zNzVyZW07XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBsaW5lLWhlaWdodDogMTtcbiAgICBjb2xvcjogIzI2N2U2NDtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gICAgLmNhcmQtdHJpcHRpY19faGVhZGluZy1saW5rOmhvdmVyIHtcbiAgICAgIGNvbG9yOiAjNDU1NjUyOyB9XG4gIC5jYXJkLXRyaXB0aWNfX3RleHQge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuXG4uY3RhLWNvbnRhY3Qge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWNlZWU2O1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgd2lkdGg6IDEwMCU7IH1cbiAgLmN0YS1jb250YWN0X19ib3gge1xuICAgIHBhZGRpbmc6IDJyZW07IH1cbiAgLmN0YS1jb250YWN0X19ib3g6bnRoLWNoaWxkKDIpIHtcbiAgICBwYWRkaW5nOiAycmVtIDA7IH1cbiAgLmN0YS1jb250YWN0X190ZXh0IHtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMCAzLjVyZW0gMCAycmVtOyB9XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAuY3RhLWNvbnRhY3RfX3RleHQge1xuICAgICAgICBwYWRkaW5nOiAwOyB9IH1cbiAgLmN0YS1jb250YWN0X19idXR0b24ge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBtYXJnaW46IDAgMnJlbSAwIDA7IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgIC5jdGEtY29udGFjdF9fYnV0dG9uIHtcbiAgICAgICAgbWFyZ2luOiAwOyB9IH1cblxuLmN0YS10ZWFzZXIge1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgcGFkZGluZzogMXJlbSAycmVtOyB9XG4gIC5jdGEtdGVhc2VyIHZpZGVvIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmN0YS10ZWFzZXIge1xuICAgICAgZmxleC1mbG93OiBjb2x1bW47IH0gfVxuICAuY3RhLXRlYXNlcl9fYm94IHtcbiAgICBwYWRkaW5nLXJpZ2h0OiAycmVtOyB9XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAuY3RhLXRlYXNlcl9fYm94IHtcbiAgICAgICAgcGFkZGluZzogMDsgfSB9XG4gIC5jdGEtdGVhc2VyX190ZXh0IHtcbiAgICBtYXJnaW4tYm90dG9tOiAycmVtOyB9XG4gIC5jdGEtdGVhc2VyX19tZWRpYSB7XG4gICAgaGVpZ2h0OiAzMDBweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuOyB9XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAuY3RhLXRlYXNlcl9fbWVkaWEge1xuICAgICAgICBoZWlnaHQ6IGF1dG87XG4gICAgICAgIG1hcmdpbi10b3A6IDJyZW07IH0gfVxuXG4uY3RhLWNlbnRlciB7XG4gIHBhZGRpbmc6IDJyZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAuY3RhLWNlbnRlcl9fdGV4dCB7XG4gICAgcGFkZGluZzogMCA4cmVtO1xuICAgIG1hcmdpbi1ib3R0b206IDJyZW07IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgIC5jdGEtY2VudGVyX190ZXh0IHtcbiAgICAgICAgcGFkZGluZzogMDsgfSB9XG5cbi5jdGEtc3Vic2NyaWJlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzI2N2U2NDtcbiAgY29sb3I6ICNmZmY7XG4gIHBhZGRpbmctdG9wOiAyNHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMzZweDsgfVxuICAuY3RhLXN1YnNjcmliZV9faGVhZGluZyB7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gIC5jdGEtc3Vic2NyaWJlX19ib3gge1xuICAgIGRpc3BsYXk6IHRhYmxlO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIHdpZHRoOiA3NSU7IH1cbiAgLmN0YS1zdWJzY3JpYmVfX2lucHV0IHtcbiAgICBwYWRkaW5nOiAuOXJlbTtcbiAgICB3aWR0aDogMTAwJTsgfVxuICAuY3RhLXN1YnNjcmliZV9fYnV0dG9uIHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZmZmO1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGZvbnQtc2l6ZTogMS41cmVtO1xuICAgIG1hcmdpbi1sZWZ0OiAxcmVtO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHRyYW5zaXRpb246IGFsbCAuMnMgZWFzZTsgfVxuICAgIC5jdGEtc3Vic2NyaWJlX19idXR0b246aG92ZXIge1xuICAgICAgLypUaGVzZSB3aWxsIHRyYW5zaXRpb24gb24gaG92ZXIgKi9cbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgICBjb2xvcjogIzI2N2U2NDsgfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgLmN0YS1zdWJzY3JpYmVfX2J1dHRvbiB7XG4gICAgICAgIG1hcmdpbjogMXJlbSAwIDAgMDsgfSB9XG4gIC5jdGEtc3Vic2NyaWJlX19tZXNzYWdlIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIHBhZGRpbmctdG9wOiAyLjVyZW07IH1cbiAgLmN0YS1zdWJzY3JpYmVfX2Vycm9yIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIHBhZGRpbmctdG9wOiAxcmVtOyB9XG4gICAgLmN0YS1zdWJzY3JpYmVfX2Vycm9yLW1zZyB7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cblxuLmN0YS1zaWRlYmFyIHtcbiAgcGFkZGluZzogMXJlbSAwIDAgNXJlbTtcbiAgdmVydGljYWwtYWxpZ246IHRvcDsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAuY3RhLXNpZGViYXIge1xuICAgICAgcGFkZGluZzogM3JlbSAycmVtOyB9IH1cbiAgLmN0YS1zaWRlYmFyX19oZWFkaW5nIHtcbiAgICBmb250LXNpemU6IDEuMjVyZW07XG4gICAgbWFyZ2luLXRvcDogMTJweDtcbiAgICBtYXJnaW4tYm90dG9tOiAxMnB4OyB9XG4gIC5jdGEtc2lkZWJhcl9fYnV0dG9uIHtcbiAgICBtYXJnaW4tdG9wOiAxcmVtOyB9XG5cbi5jdGEtc2lkZWJhcl9fYnV0dG9uICsgLmN0YS1zaWRlYmFyX19oZWFkaW5nLCAuY3RhLXNpZGViYXJfX3RleHQgKyAuY3RhLXNpZGViYXJfX2hlYWRpbmcge1xuICBtYXJnaW4tdG9wOiAycmVtOyB9XG5cbi5jdGEtc29jaWFsIHtcbiAgcGFkZGluZy1sZWZ0OiAxcmVtOyB9XG4gIC5jdGEtc29jaWFsIC5pY29uIHtcbiAgICBmaWxsOiAjMjY3ZTY0OyB9XG4gICAgLmN0YS1zb2NpYWwgLmljb246aG92ZXIge1xuICAgICAgZmlsbDogI2NjYzsgfVxuICAuY3RhLXNvY2lhbCBhOmhvdmVyIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cblxuZm9vdGVyIHtcbiAgcGFkZGluZy1ib3R0b206IDVyZW07IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgZm9vdGVyIHtcbiAgICAgIHBhZGRpbmc6IDA7IH0gfVxuXG4uZm9vdGVyLWNvcHlyaWdodCB7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTVlNmU3O1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgcGFkZGluZzogMnJlbTtcbiAgd2lkdGg6IDEwMCU7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmZvb3Rlci1jb3B5cmlnaHQge1xuICAgICAgcGFkZGluZzogMnJlbSAwIDAgMDtcbiAgICAgIGRpc3BsYXk6IGJsb2NrOyB9IH1cbiAgLmZvb3Rlci1jb3B5cmlnaHRfX2xvZ28tYm94IC5sb2dvIHtcbiAgICB3aWR0aDogNTAwcHg7IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgIC5mb290ZXItY29weXJpZ2h0X19sb2dvLWJveCAubG9nbyB7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgd2lkdGg6IGF1dG87IH1cbiAgICAgICAgLmZvb3Rlci1jb3B5cmlnaHRfX2xvZ28tYm94IC5sb2dvIC5sb2dvX19zdGFja2VkIHtcbiAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgd2lkdGg6IDI1MHB4OyB9IH1cbiAgLmZvb3Rlci1jb3B5cmlnaHRfX2JveCB7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWluLXdpZHRoOiAxMDIzcHgpIHtcbiAgICAgIC5mb290ZXItY29weXJpZ2h0X19ib3gge1xuICAgICAgICB0ZXh0LWFsaWduOiByaWdodDsgfSB9XG4gICAgLmZvb3Rlci1jb3B5cmlnaHRfX2JveCBzbWFsbCB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IC41cmVtOyB9XG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWluLXdpZHRoOiAxMDIzcHgpIHtcbiAgICAgICAgLmZvb3Rlci1jb3B5cmlnaHRfX2JveCBzbWFsbCB7XG4gICAgICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuICAgICAgICAgIC5mb290ZXItY29weXJpZ2h0X19ib3ggc21hbGw6OmJlZm9yZSB7XG4gICAgICAgICAgICBjb250ZW50OiAnfCc7IH1cbiAgICAgICAgICAuZm9vdGVyLWNvcHlyaWdodF9fYm94IHNtYWxsOm50aC1jaGlsZCgxKTo6YmVmb3JlIHtcbiAgICAgICAgICAgIGNvbnRlbnQ6ICcnOyB9IH1cbiAgICAuZm9vdGVyLWNvcHlyaWdodF9fYm94IC5uYXYtbWlub3IgbGkgYSB7XG4gICAgICBmb250LXNpemU6IDE0cHg7IH1cbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtaW4td2lkdGg6IDEwMjNweCkge1xuICAgICAgICAuZm9vdGVyLWNvcHlyaWdodF9fYm94IC5uYXYtbWlub3IgbGkgYSB7XG4gICAgICAgICAgZm9udC1zaXplOiAxMnB4OyB9IH1cblxuLmZvb3Rlci1kaXNjbGFpbWVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3aWR0aDogMTAwJTsgfVxuICAuZm9vdGVyLWRpc2NsYWltZXJfX2JveCB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzQ1NTY1MjtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgbWFyZ2luOiA1MHB4IGF1dG8gMTBweDsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDIzcHgpIHtcbiAgICAgIC5mb290ZXItZGlzY2xhaW1lcl9fYm94IHtcbiAgICAgICAgcGFkZGluZzogMjBweCAxMDBweDsgfSB9XG4gIC5mb290ZXItZGlzY2xhaW1lciB1bCB7XG4gICAgZGlzcGxheTogdGFibGU7XG4gICAgbWFyZ2luOiAwIGF1dG87IH1cbiAgICAuZm9vdGVyLWRpc2NsYWltZXIgdWwgbGkge1xuICAgICAgZGlzcGxheTogdGFibGUtY2VsbDtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNDQ0NDQ0M7XG4gICAgICBib3JkZXItcmlnaHQ6IG5vbmU7XG4gICAgICBib3JkZXItbGVmdC1zdHlsZTogZGFzaGVkO1xuICAgICAgbWFyZ2luOiAwIDEwcHg7XG4gICAgICBwYWRkaW5nOiAuNXJlbTsgfVxuICAgICAgLmZvb3Rlci1kaXNjbGFpbWVyIHVsIGxpOmxhc3QtY2hpbGQge1xuICAgICAgICBib3JkZXItcmlnaHQ6IDFweCAjQ0NDIHNvbGlkOyB9XG4gICAgICAuZm9vdGVyLWRpc2NsYWltZXIgdWwgbGk6Zmlyc3QtY2hpbGQge1xuICAgICAgICBib3JkZXItbGVmdC1zdHlsZTogc29saWQ7IH1cbiAgLmZvb3Rlci1kaXNjbGFpbWVyIGg2LCAuZm9vdGVyLWRpc2NsYWltZXIgcCwgLmZvb3Rlci1kaXNjbGFpbWVyIHVsIHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMXJlbTsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtaW4td2lkdGg6IDEwMjNweCkge1xuICAgICAgLmZvb3Rlci1kaXNjbGFpbWVyIGg2LCAuZm9vdGVyLWRpc2NsYWltZXIgcCwgLmZvb3Rlci1kaXNjbGFpbWVyIHVsIHtcbiAgICAgICAgZm9udC1zaXplOiAxMnB4OyB9IH1cblxuQGtleWZyYW1lcyBmYWRlSW4ge1xuICBmcm9tIHtcbiAgICBvcGFjaXR5OiAwOyB9XG5cbiAgdG8ge1xuICAgIG9wYWNpdHk6IDE7IH0gfVxuXG4uaGVhZGVyX19sb2dvLWJveCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2NjYztcbiAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgI2NjYztcbiAgbWFyZ2luOiAwIGF1dG87XG4gIG1heC13aWR0aDogMTIwMHB4OyB9XG5cbi5uby1jc3NhbmltYXRpb25zIC5oZWFkZXJfX2xvZ28tYm94IHtcbiAgcGFkZGluZy10b3A6IDA7IH1cblxuLmhlYWRlcl9fbG9nbyB7XG4gIGJhY2tncm91bmQ6ICNmZmY7IH1cblxuLmxvZ28ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgcGFkZGluZzogMHJlbSAwIDByZW0gMnJlbTtcbiAgd2lkdGg6IDYwMHB4OyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA4OTlweCkge1xuICAgIC5sb2dvIHtcbiAgICAgIHdpZHRoOiA0MDBweDsgfSB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA0OTlweCkge1xuICAgIC5sb2dvIHtcbiAgICAgIHBhZGRpbmc6IDFyZW07XG4gICAgICB3aWR0aDogMzAwcHg7IH0gfVxuXG4ubm8tY3NzYW5pbWF0aW9ucyAubG9nbyB7XG4gIGhlaWdodDogNjhweDtcbiAgcGFkZGluZzogMCAxcmVtOyB9XG5cbnN2ZyBwYXRoLCBzdmcgcG9seWdvbiB7XG4gIGZpbGw6ICMyNjdlNjQ7IH1cbnN2Zzpob3ZlciBwYXRoLCBzdmc6aG92ZXIgcG9seWdvbiB7XG4gIG9wYWNpdHk6IC43O1xuICB0cmFuc2l0aW9uOiBmaWxsIDAuMnMgZWFzZTtcbiAgZmlsbC1vcGFjaXR5OiAwLjc7IH1cblxuLmxvZ29fX3N0cmV0Y2hlZCB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA4OTlweCkge1xuICAgIC5sb2dvX19zdHJldGNoZWQge1xuICAgICAgZGlzcGxheTogbm9uZTsgfSB9XG5cbi5sb2dvX19zdGFja2VkIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogODk5cHgpIHtcbiAgICAubG9nb19fc3RhY2tlZCB7XG4gICAgICBkaXNwbGF5OiBibG9jazsgfSB9XG5cbi5uby1jc3NhbmltYXRpb25zIC5sb2dvX19nbG9iZSBwYXRoIHtcbiAgZmlsbDogIzI2N2U2NDtcbiAgb3BhY2l0eTogMTsgfVxuXG4ubWFpbi1zdGFuZGFyZCwgLm1haW4tbmV3cywgLm1haW4tcG9zdCB7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBwYWRkaW5nOiAxcmVtIDJyZW07IH1cblxuLm1haW4tc3RhbmRhcmQge1xuICBwYWRkaW5nLWJvdHRvbTogNXJlbTsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAubWFpbi1zdGFuZGFyZF9fY29udGVudCB7XG4gICAgICB0ZXh0LWFsaWduOiBsZWZ0OyB9IH1cbiAgLm1haW4tc3RhbmRhcmRfX2NvbnRlbnQuY29sLTctMTIge1xuICAgIHBhZGRpbmctdG9wOiAxLjVyZW07XG4gICAgdmVydGljYWwtYWxpZ246IHRvcDsgfVxuICAubWFpbi1zdGFuZGFyZF9fdGV4dCAqICsgKiB7XG4gICAgbWFyZ2luLXRvcDogMXJlbTsgfVxuICAubWFpbi1zdGFuZGFyZF9fdGV4dCBoMiB7XG4gICAgY29sb3I6ICMyNjdlNjQ7XG4gICAgZm9udC1mYW1pbHk6IFBsYXlmYWlyIERpc3BsYXksIHNlcmlmO1xuICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgIHBhZGRpbmctdG9wOiAyNHB4O1xuICAgIHBhZGRpbmctYm90dG9tOiAwcHg7IH1cbiAgLm1haW4tc3RhbmRhcmRfX3RleHQgdWwge1xuICAgIHBhZGRpbmctbGVmdDogMnJlbTtcbiAgICBsaXN0LXN0eWxlOiBkaXNjOyB9XG4gICAgLm1haW4tc3RhbmRhcmRfX3RleHQgdWwgbGkge1xuICAgICAgbWFyZ2luLXRvcDogMC41cmVtOyB9XG4gIC5tYWluLXN0YW5kYXJkX190ZXh0IG9sIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDJyZW07IH1cbiAgLm1haW4tc3RhbmRhcmRfX3RleHQgaW1nIHtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgd2lkdGg6IDEwMCU7IH1cbiAgICAubWFpbi1zdGFuZGFyZF9fdGV4dCBpbWcuYXV0byB7XG4gICAgICB3aWR0aDogYXV0bzsgfVxuXG4ubWFpbi1iaW9zIHtcbiAgZGlzcGxheTogdGFibGU7XG4gIHBhZGRpbmc6IDJyZW07IH1cblxuLmNpdHktY29sdW1uIHtcbiAgd2lkdGg6IDEzNXB4OyB9XG5cbi5hZGRyZXNzLWNvbHVtbiB7XG4gIHdpZHRoOiAzMzVweDsgfVxuXG4ubG9jYXRpb24tcGhvbmUge1xuICBjb2xvcjogIzQ1NTY1MjsgfVxuICAubG9jYXRpb24tcGhvbmU6aG92ZXIge1xuICAgIGNvbG9yOiAjMjY3ZTY0OyB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAubWFpbi1wb3N0X190ZXh0IHtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0OyB9IH1cbi5tYWluLXBvc3RfX3RleHQgKiArICoge1xuICBtYXJnaW4tdG9wOiAxcmVtOyB9XG4ubWFpbi1wb3N0X190ZXh0IGgyIHtcbiAgY29sb3I6ICMyNjdlNjQ7XG4gIGZvbnQtZmFtaWx5OiBQbGF5ZmFpciBEaXNwbGF5LCBzZXJpZjtcbiAgZm9udC1zaXplOiAycmVtO1xuICBmb250LXdlaWdodDogNDAwO1xuICBsaW5lLWhlaWdodDogMTsgfVxuLm1haW4tcG9zdF9fdGV4dCBoMyB7XG4gIGNvbG9yOiAjNDU1NjUyO1xuICBmb250LWZhbWlseTogUGxheWZhaXIgRGlzcGxheSwgc2VyaWY7XG4gIGZvbnQtc2l6ZTogMS4yNXJlbTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIG1hcmdpbi10b3A6IDM2cHg7XG4gIG1hcmdpbi1ib3R0b206IDBweDsgfVxuLm1haW4tcG9zdF9fdGV4dCBmaWdjYXB0aW9uIHtcbiAgY29sb3I6ICNjY2M7XG4gIGZvbnQtc2l6ZTogLjc1cmVtO1xuICBtYXJnaW4tdG9wOiAwOyB9XG4ubWFpbi1wb3N0X190ZXh0IGJsb2NrcXVvdGUge1xuICBjb2xvcjogIzI2N2U2NDtcbiAgZm9udC1mYW1pbHk6IFBsYXlmYWlyIERpc3BsYXksIHNlcmlmO1xuICBmb250LXNpemU6IDEuNXJlbTtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICBmb250LXdlaWdodDogNzAwO1xuICBtYXJnaW4tdG9wOiAzNnB4O1xuICBtYXJnaW4tYm90dG9tOiAzNnB4OyB9XG5cbi5icmVhZGNydW1iIHtcbiAgcGFkZGluZy1ib3R0b206IDEuNXJlbTtcbiAgZm9udC1zaXplOiAxNHB4OyB9XG4gIC5icmVhZGNydW1iIGEge1xuICAgIGNvbG9yOiAjMjY3ZTY0OyB9XG4gICAgLmJyZWFkY3J1bWIgYTpob3ZlciB7XG4gICAgICBjb2xvcjogIzQ1NTY1MjsgfVxuICAuYnJlYWRjcnVtYiBzcGFuIHtcbiAgICBjb2xvcjogIzdmN2U3ZTsgfVxuXG4uZm9ybS1zdGFuZGFyZCB7XG4gIG1hcmdpbi10b3A6IDJyZW07IH1cbiAgLmZvcm0tc3RhbmRhcmQgaW5wdXQsIC5mb3JtLXN0YW5kYXJkIGlucHV0W3R5cGU9XCJlbWFpbFwiXSwgLmZvcm0tc3RhbmRhcmQgaW5wdXRbdHlwZT1cIm51bWJlclwiXSwgLmZvcm0tc3RhbmRhcmQgaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdLCAuZm9ybS1zdGFuZGFyZCBpbnB1dFt0eXBlPVwic2VhcmNoXCJdLCAuZm9ybS1zdGFuZGFyZCBpbnB1dFt0eXBlPVwidGVsXCJdLCAuZm9ybS1zdGFuZGFyZCBpbnB1dFt0eXBlPVwidGV4dFwiXSwgLmZvcm0tc3RhbmRhcmQgaW5wdXRbdHlwZT1cInVybFwiXSwgLmZvcm0tc3RhbmRhcmQgaW5wdXRbdHlwZT1cImNvbG9yXCJdLCAuZm9ybS1zdGFuZGFyZCBpbnB1dFt0eXBlPVwiZGF0ZVwiXSwgLmZvcm0tc3RhbmRhcmQgaW5wdXRbdHlwZT1cIm5hbWVcIl0sIC5mb3JtLXN0YW5kYXJkIGlucHV0W3R5cGU9XCJkYXRldGltZVwiXSwgLmZvcm0tc3RhbmRhcmQgaW5wdXRbdHlwZT1cImRhdGV0aW1lLWxvY2FsXCJdLCAuZm9ybS1zdGFuZGFyZCBpbnB1dFt0eXBlPVwibW9udGhcIl0sIC5mb3JtLXN0YW5kYXJkIGlucHV0W3R5cGU9XCJ0aW1lXCJdLCAuZm9ybS1zdGFuZGFyZCBpbnB1dFt0eXBlPVwid2Vla1wiXSwgLmZvcm0tc3RhbmRhcmQgdGV4dGFyZWEge1xuICAgIGNvbG9yOiAjMzMzO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XG4gICAgYm9yZGVyLWJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAgIGJvcmRlci1yYWRpdXM6IDA7XG4gICAgYm9yZGVyLXJhZGl1cy1mb250LXNpemU6IDFyZW07XG4gICAgcGFkZGluZzogMXJlbTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogMTAwJTsgfVxuICAuZm9ybS1zdGFuZGFyZCBsYWJlbCB7XG4gICAgZGlzcGxheTogYmxvY2s7IH1cbiAgLmZvcm0tc3RhbmRhcmQgaW5wdXRbdHlwZT1cImJ1dHRvblwiXSwgLmZvcm0tc3RhbmRhcmQgaW5wdXRbdHlwZT1cInJlc2V0XCJdLCAuZm9ybS1zdGFuZGFyZCBpbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcbiAgICBkaXNwbGF5OiBibG9jazsgfVxuICAuZm9ybS1zdGFuZGFyZF9fY2hlY2tib3gge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBmbG9hdDogbGVmdCAhaW1wb3J0YW50O1xuICAgIHdpZHRoOiBhdXRvICFpbXBvcnRhbnQ7IH1cbiAgLmZvcm0tc3RhbmRhcmRfX2NoZWNrYm94ICsgbGFiZWwge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBmbG9hdDogbGVmdCAhaW1wb3J0YW50O1xuICAgIG1hcmdpbjogMTBweCAxMHB4IDIwcHggMTBweCAhaW1wb3J0YW50OyB9XG4gIC5mb3JtLXN0YW5kYXJkIC5zZWxlY3Rib3gge1xuICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgYm9yZGVyLXJhZGl1czogMDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGhlaWdodDogNDhweDsgfVxuICAgIC5mb3JtLXN0YW5kYXJkIC5zZWxlY3Rib3g6OmFmdGVyIHtcbiAgICAgIGNvbG9yOiAjY2NjO1xuICAgICAgY29udGVudDogJ+KWvic7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDFyZW07XG4gICAgICByaWdodDogLjVyZW07XG4gICAgICB3aWR0aDogMXJlbTtcbiAgICAgIGhlaWdodDogMXJlbTsgfVxuICAuZm9ybS1zdGFuZGFyZCBzZWxlY3Qge1xuICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgYm94LXNoYWRvdzogbm9uZTtcbiAgICBib3JkZXItcmFkaXVzOiAwO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XG4gICAgY29sb3I6ICM3ZjdlN2U7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICBoZWlnaHQ6IDYwcHg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHBhZGRpbmctbGVmdDogMXJlbTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gICAgLW1vei1hcHBlYXJhbmNlOiBub25lO1xuICAgIGFwcGVhcmFuY2U6IG5vbmU7IH1cblxuLmNvbnRhY3QtdXNfX2J1dHRvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlY2VlZTY7XG4gIG1heC13aWR0aDogMTgzcHg7XG4gIGNsZWFyOiBib3RoOyB9XG5cbi5uby1jc3NncmFkaWVudHMgLnNlbGVjdGJveDo6YWZ0ZXIge1xuICB6LWluZGV4OiAtMzsgfVxuXG5cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJblpsYm1SdmNpOWZibTl5YldGc2FYcGxMbk5qYzNNaUxDSmlZWE5sTDE5MGVYQnZaM0poY0doNUxuTmhjM01pTENKaVlYTmxMMTlqYjJ4dmNuTXVjMkZ6Y3lJc0ltSmhjMlV2WDJsdVkyeDFaR1V0YldWa2FXRXVjMkZ6Y3lJc0ltSmhjMlV2WDJOc1pXRnlMV1pwZUM1ellYTnpJaXdpWW1GelpTOWZhVzFoWjJWekxuTmhjM01pTENKaVlYTmxMMTlzWVhsdmRYUXVjMkZ6Y3lJc0ltSmhjMlV2WDJkc2IySmhiQzV6WVhOeklpd2lZbUZ6WlM5ZmRHRmliR1Z6TG5OaGMzTWlMQ0p0YjJSMWJHVnpMMjVoZGk5ZmJtRjJMVzFwYm05eUxuTmhjM01pTENKdGIyUjFiR1Z6TDI1aGRpOWZibUYyTFcxbFoyRXVjMkZ6Y3lJc0ltMXZaSFZzWlhNdmJtRjJMMTl1WVhZdFptOXZkR1Z5TG5OaGMzTWlMQ0p0YjJSMWJHVnpMMkpoYm01bGNpOWZYMkpoYm01bGNpNXpZWE56SWl3aWJXOWtkV3hsY3k5allYSmtjeTlmWDJOaGNtUnpMbk5oYzNNaUxDSnRiMlIxYkdWekwyTjBZUzlmWDJOMFlTNXpZWE56SWl3aWJXOWtkV3hsY3k5bWIyOTBaWEl2WDJadmIzUmxjaTV6WVhOeklpd2liVzlrZFd4bGN5OW9aV0ZrWlhJdlgyaGxZV1JsY2k1ellYTnpJaXdpYlc5a2RXeGxjeTl0WVdsdUwxOXRZV2x1TG5OaGMzTWlMQ0p0YjJSMWJHVnpMMlp2Y20wdlgyWnZjbTB1YzJGemN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRTBRMEVzUVVGQlV5eEJRVUZQTEVGQlFWTXNRVUZCV1N4QlFVRlJMRUZCUVZFc1FVRkJVU3hCUVVGUkxFRkJRVXNzUVVGQlV6dEZRVmN2UlN4QlFVRlRPenRCUVV0aUxFRkJRVThzUVVGQlVUdEZRVWRZTEVGQlFWTTdPMEZCVldJc1FVRkJTeXhCUVVGTE8wVkJRMDRzUVVGQlV6dEZRVU5VTEVGQlFWRTdPMEZCVVZvc1FVRkJWVHRGUVVOT0xFRkJRVk03TzBGQldXSTdSVUZOU1N4QlFVRXdRanRGUVVNeFFpeEJRVUZ6UWpzN1FVRmxNVUk3UlVGRFNTeEJRVUZST3p0QlFWbGFPMFZCUjBrc1FVRkJXVHRGUVZWb1FpeEJRVUZETEVGQlFWRXNRVUZCUXp0SlFVVkdMRUZCUVZNN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenRCUVRaRGFrSXNRVUZCU1R0RlFVTkJMRUZCUVdVN08wRkJTMjVDTEVGQlFVYzdSVUZGUXl4QlFVRmhPenRCUVZkcVFqdEZRVU5KTEVGQlFWazdPMEZCUzJoQ08wVkJRMGtzUVVGQldUdEZRVU5hTEVGQlFVODdPMEZCWTFnc1FVRkJUU3hCUVVGTExFRkJRVXM3UlVGSldpeEJRVUZoTzBWQlNXSXNRVUZCVnpzN1FVRkxaanRGUVVOSkxFRkJRV0U3UlVGRFlpeEJRVUZoTzBWQlEySXNRVUZCVnpzN1FVRkxaanRGUVVOSkxFRkJRVkU3TzBGQlpWb3NRVUZCUXl4QlFVRlRMRUZCUVVNN1JVRkZTQ3hCUVVGVE8wVkJRMVFzUVVGQlV6czdPenM3UVVGaGFrSXNRVUZCU3p0RlFVVkVMRUZCUVZjN1JVRkRXQ3hCUVVGaE8wVkJRMklzUVVGQlZUdEZRVU5XTEVGQlFXZENPenRCUVVkd1FqdEZRVU5KTEVGQlFVczdPMEZCUjFRN1JVRkRTU3hCUVVGUk96dEJRVzFFV2p0RlFVTkpMRUZCUVZFN08wRkJVVm9zUVVGQlJ5eEJRVUZMTzBWQlEwb3NRVUZCVlRzN1FVRlRaRHRGUVVOSkxFRkJRVkU3TzBGQlowSmFPMFZCUTBrc1FVRkJVVHRGUVVOU0xFRkJRVkU3UlVGRFVpeEJRVUZUT3p0QlFWRmlPMFZCUTBrc1FVRkJVVHRGUVVOU0xFRkJRVk03UlVGRFZDeEJRVUZoT3p0QlFWZHFRaXhCUVVGUkxFRkJRVThzUVVGQlVUdEZRVWx1UWl4QlFVRmhPMFZCUTJJc1FVRkJWenRGUVVOWUxFRkJRVkU3UlVGRFVpeEJRVUZuUWpzN1FVRlJjRUlzUVVGQlVUdEZRVU5LTEVGQlFXRTdPMEZCVVdwQ0xFRkJRVkU3UlVGRlNpeEJRVUZuUWpzN1FVRlhjRUlzUVVGQlVTeEJRVUZMTEVGQlFVc3NRVUZCYVVJc1FVRkJTeXhCUVVGblFpeEJRVUZMTzBWQlNYcEVMRUZCUVc5Q08wVkJRM0JDTEVGQlFWRTdPMEZCVVZvc1FVRkJUU3hCUVVGWkxFRkJRVXM3UlVGRmJrSXNRVUZCVVRzN1FVRlBXaXhCUVVGTkxFRkJRVzlDTEVGQlFVczdSVUZEZGtJc1FVRkJVVHRGUVVOU0xFRkJRVk03TzBGQlQycENPMFZCUTBrc1FVRkJWVHRGUVVOV0xFRkJRV2RDT3p0QlFWTndRanRGUVVOSkxFRkJRV2xDTzBWQlEycENMRUZCUVdkQ096dEJRVTF3UWl4QlFVRkxPMFZCUTBjc1FVRkJiMEk3UlVGRGNFSXNRVUZCYVVJN1JVRkRha0lzUVVGQmIwSTdSVUZEY0VJc1FVRkJXVHRGUVVsd1FpeEJRVUZMTEVGQlFXVXNRVUZCWjBNc1FVRkJTeXhCUVVGbE8wbEJSVFZFTEVGQlFXOUNPMEZCVVdoRExFRkJRVXNzUVVGQmJVSXNRVUZCU3p0RlFVVjRRaXhCUVVGWk8wVkJRMW9zUVVGQlV6czdRVU0xWldRN1JVRXhRbWxDTEVGQk1rSm1PMFZCUTBFc1FVRkJlVUk3UlVGRGVrSXNRVUZCZDBJN08wRkJSVEZDTzBWRGNrSlhMRUZFYzBKVU8wVkJRMEVzUVVGQllUdEZRVGxDU0N4QlFTdENWanRGUVVOQkxFRkJRV2xDTzBWQlEycENMRUZCUVZFN08wRkJTVlk3UlVONFExRXNRVVI1UTA0N1JVRnlRMlVzUVVGelEyWTdSVUZEUVN4QlFVRlhPMFZCYmtOS0xFRkJiME5RTzBWQlEwRXNRVUZCWVR0RlFVTmlMRUZCUVdVN08wRkJjME5xUWl4QlFVRnRRaXhCUVVGTExFRkJRV2xDTEVGQlFVczdSVUZITlVNc1FVRkJVVHRGUVVOU0xFRkJRVkU3UlVGRFVpeEJRVUZUTzBWQmNrWk5MRUZCYzBabU8wVkJRMEVzUVVGQlZ6dEZRVU5ZTEVGQlFWazdSVUZEV2l4QlFVRlpPMFZCUTFvc1FVRkJVenRGUVVOVUxFRkJRV2xDT3p0RlFVVnFRaXhCUVVGclFqdEZRMnBIV2l4QlJHdEhUanM3UlVGRlFTeEJRVUZaTzBWQlJXUXNRVUZCYVVJc1FVRkJVU3hCUVVGTExFRkJRV1VzUVVGQlVTeEJRVUZMTEVGQlFXTTdPMGxEZEVkb1JTeEJSSGRIU2p0SlEzQkhTU3hCUkhGSFNqdEpRVU5CTEVGQlFXbENPenRCUVhOQ2NrSXNRVUZCWlR0RlF6RklVQ3hCUkRKSVRqdEZRMnBKVFN4QlJHdEpUanRGUVVOQkxFRkJRVkU3UlVGRFVpeEJRVUZUT3p0QlJYWkdWRHRGUmpCR1JqdEpRVVZKTEVGQlFVczdPMEZIZWtsVUxFRkJRVk03UlVGRFVDeEJRVUZUTzBWQlExUXNRVUZCVXp0RlFVTlVMRUZCUVU4N08wRkRTRlFzUVVGQlN5eEJRVUZSTzBWQlExZ3NRVUZCVHpzN1FVTkVWRHRGUVVORkxFRkJRV3RDTzBWQlEyeENMRUZCUVdFN1JVRkRZaXhCUVVGak8wVkJRMlFzUVVGQlVUdEZRVU5TTEVGQlFWYzdPMEZCUjJJN1JVRkRSU3hCUVVGVE8wVkJRMVFzUVVGQlowSTdSVWh0UTJoQ08wbEhja05HTzAxQlMwa3NRVUZCVXp0TlFVTlVMRUZCUVZrN08wRkJSV2hDTzBWQlEwVXNRVUZCVHp0RlNEUkNVRHRKUnpkQ1JqdE5RVWxKTEVGQlFVODdPMEZCUlZnN1JVRkRSU3hCUVVGUE8wVkljMEpRTzBsSGRrSkdPMDFCU1Vrc1FVRkJUenM3UVVGRldEdEZRVU5GTEVGQlFVODdSVWhuUWxBN1NVZHFRa1k3VFVGSlNTeEJRVUZQT3p0QlFVZFlPMFZCUTBVc1FVRkJUenRGU0ZOUU8wbEhWa1k3VFVGSlNTeEJRVUZQT3p0QlFVZFlPMFZCUTBVc1FVRkJUenRGU0VWUU8wbEhTRVk3VFVGSlNTeEJRVUZQT3p0QlFVZFlPMFZCUTBVc1FVRkJUenRGU0V4UU8wbEhTVVk3VFVGSlNTeEJRVUZQT3p0QlFVZFlPMFZCUTBVc1FVRkJUenRGU0ZwUU8wbEhWMFk3VFVGSlNTeEJRVUZQT3p0QlFVZFlPMFZCUTBVc1FVRkJUenRGU0c1Q1VEdEpSMnRDUmp0TlFVbEpMRUZCUVU4N08wRkJSMWc3UlVGRFJTeEJRVUZQTzBWSU1VSlFPMGxIZVVKR08wMUJTVWtzUVVGQlR6czdRVUZGV0R0RlFVTkZMRUZCUVU4N1JVaG9RMUE3U1VjclFrWTdUVUZKU1N4QlFVRlBPenRCUTJoR1dEdEZRVU5GTEVGQlFWRTdSVUZEVWl4QlFVRlRPMFZCUTFRc1FVRkJXVHRGUVVWa0xFRkJRVU1zUVVGQlV5eEJRVUZETzBsQlExQXNRVUZCV1RzN1FVRkZhRUk3UlV4T1VTeEJTMDlPTzBWQlEwRXNRVUZCVXpzN1FVRkZXRHRGUVVORkxFRkJRV2xDTzBWTVlsZ3NRVXRqVGp0RlFVTkdMRUZCUVVNN1NVeGtXU3hCUzJWVU8wbEJRMEVzUVVGQmFVSTdPMEZEWm5KQ08wVkJRME1zUVVGQlVUdEZRVU5TTEVGQlFVODdPMEZCUlZJN1JVRkRSU3hCUVVGbE8wVk1jME5tTzBsTGRrTkdPMDFCU1Vrc1FVRkJXVHROUVVWb1FpeEJRVUZGTzFGQlEwa3NRVUZCV1R0RlFVVnNRaXhCUVVGRk8wbE9WazBzUVUxWFNqczdRVUZGU2p0RlFVTkZMRUZCUVdkQ08wVkJRMmhDTEVGQlFWTTdSVXg1UWxRN1NVc3pRa1k3VFVGTFNTeEJRVUZaTzAxQlExb3NRVUZCVlR0TlFVTldMRUZCUVdNN1RVRkZiRUlzUVVGQlJUdFJRVU5KTEVGQlFWVTdVVUZEVml4QlFVRkxPMUZCUTB3c1FVRkJUVHRSUVVOT0xFRkJRVTg3VVVGRFVDeEJRVUZsTzFGQlEyWXNRVUZCWVR0UlFVTmlMRUZRZWtKTE8wMVBOa0pZTEVGQlFVVXNRVUZCWlR0UlFVTlVMRUZCUVZNN1RVRkZha0lzUVVGQlJTeEJRVUZsTzFGQlExUXNRVUZCVXp0TlFVVnFRaXhCUVVGRkxFRkJRV1U3VVVGRFZDeEJRVUZUT3p0QlFVVnFRanRGVG5wRFVTeEJUVEJEVGp0RlRFaEJPMGxMUzBZc1FVRkJUVHROUVVkQkxFRkJRVlU3VFVGRFZpeEJRVUZMTzAxQlEwd3NRVUZCVFR0RlFVVmFMRUZCUVUwN1NVRkRSaXhCVUdwRVR6dEpUMnRFVUN4QlFVRlpPMGxCUTFvc1FVRkJVenM3UVV4bVdEdEZTMmxDUml4QlFVRlBMRUZCUVU4c1FVRkJUeXhCUVVGSkxFRkJRVWs3U1VGRmVrSXNRVUZCVXpzN1FVTm9SV0k3UlVGRFJTeEJRVUZUTzBWQlExUXNRVUZCV1R0RlFVVmtPMGxRUVZFc1FVOURTanRKUVVOQkxFRkJRV0U3U1VGRFlpeEJRVUZqTzBsQlEyUXNRVUZCVVR0SlFVTlNMRUZCUVZNN1NVRkRWQ3hCUVVGWE8wbE9iVU5pTzAxTmVrTkdPMUZCVTAwc1FVRkJXVHRGUVVWc1FpeEJRVUZYTzBsQlExQXNRVUZCVXp0SlFVVmlMRUZCUVZjc1FVRkJSVHROUVVOUUxFRkJRVk03VFVGRFZDeEJRVUZUTzAxUWNFSlFMRUZQY1VKR08wMUJRMEVzUVVGQlVUdEpRVWxrTEVGQlFWY3NRVUZCUlN4QlFVRmhPMDFCUTJ4Q0xFRkJRVk03U1VGSGFrSXNRVUZCVnl4QlFVRkZMRUZCUVZrN1RVRkRha0lzUVVGQldUdE5RVU5hTEVGQlFXTTdUVTVoY0VJN1VVMW1SaXhCUVVGWExFRkJRVVVzUVVGQldUdFZRVXRtTEVGQlFXTTdSVUZGZUVJN1NWQXpRbGNzUVU4MFFsQTdTVUZEUVN4QlFVRlRPMGxCUTFRc1FVRkJVenRKVGt0WU8wMU5Va1k3VVVGTlRTeEJRVUZYTzBsQlIycENMRUZCUVdkQ08wMVFPVU5TTEVGUEswTkdPenRCUVVkT0xFRkJRVlU3UlZCNFEwTXNRVTk1UTFBN1JVRkRTaXhCUVVGVkxFRkJRVU03U1ZCd1JFZ3NRVTl4UkVZN08wRkRNMEpPTEVGQlFVTXNRVUZCV1N4QlFVRlBPMFZCUTJRc1FVRkJVenRCUVVObUxFRkJRVU1zUVVGQldTeEJRVUZQTzBWQlEyUXNRVUZCVHpzN1FWQm5RbGc3UlU5WVJpeEJRVUZKTEVGQlFWazdTVUZEVml4QlFVRlZPenRCUVVWb1FpeEJRVUZMTEVGQlFXVTdSVUZEYkVJc1FVRkJVenM3UVVGRldDeEJRVUZMTEVGQlFXVXNRVUZCTmtJc1FVRkJTeXhCUVVGbExFRkJRV2RETEVGQlFVc3NRVUZCWlN4QlFVRnBReXhCUVVGTExFRkJRV1U3UlVGSk5Vc3NRVUZCVXpzN096czdPenRCUVZGWUxFRkJRV3RDT3p0RlFVZG9RaXhCUVVGWE8wVkJRMWdzUVVGQllUdEZRVVZtTEVGQlFXbENMRUZCUVVrc1FVRkJaMEk3U1VGRGFrTXNRVUZCV1RzN1FVRkZhRUk3UlVGRFJTeEJRVUZWTzBWQlExWXNRVUZCV1R0RlVHeENXanRKVDNGQ1JpeEJRVUZuUWp0TlFVTldMRUZCUVZjN1NVRkZha0lzUVVGQllTeEJRVUZuUWp0TlFVTjJRaXhCUVVGWE96dEJRVVZxUWp0RlZIQkZhVUlzUVZOeFJXWTdSVUZEUVN4QlFVRlZPMFZCUTFZc1FVRkJXVHRGVURsQ1dqdEpUMmxEUml4QlFVRmxPMDFCUTFRc1FVRkJWenRKUVVWcVFpeEJRVUZoTEVGQlFXVTdUVUZEZEVJc1FVRkJWenM3UVVGRmFrSTdSVUZEUlN4QlFVRlpPMFZCTlVWS0xFRkJOa1ZTT3p0QlFVVkdPMFZCZUVaclFpeEJRWGxHYUVJN1JWSnlSazBzUVZGelJrNDdSVUZvUm1Nc1FVRnBSbVE3UlVGRlFTeEJRVUZsTzBWQlJXcENMRUZCUVdNN08wbEJSVllzUVVGQlZUdEpRVU5XTEVGQlFVczdTVUZEVEN4QlFVRk5PMGxCUTA0c1FVRkJUenRGVUhaRVZEdEpUekpEUmp0TlFYWkdhMElzUVVGelIyUTdUVUZ3Umtvc1FVRkJaVHRSUVVOWUxFRkJRVk03VVVGRFZDeEJRVUZUTzFGQlExUXNRVUZCVHpzN1FVRnZSbGc3UlVGRFJTeEJRVUZWTzBWQlExWXNRVUZCU3p0RlFVTk1MRUZCUVUwN1JVRkZVaXhCUVVGVE8wbEJRMHdzUVVGQlV6dEZVRzVGV0R0SlQzTkZSaXhCUVVGaE8wMUJRMUFzUVVGQlRUdE5RVU5PTEVGQlFVODdSVkI0UlZnN1NVODJSRVk3VFVGalNTeEJRVUZMTzAxQlEwd3NRVUZCVFRzN1FVRkZWanRGUVVORkxFRkJRVlU3UlVGRFZpeEJRVUZUTzBWQlExUXNRVUZCU3p0RlFVTk1MRUZCUVU4N1JVRkZWQ3hCUVVGdFFqdEpRVU5tTEVGQlFWTTdSVkJ5UmxnN1NVOTNSa1lzUVVGQllUdE5RVU5RTEVGQlFVODdUVUZEVUN4QlFVRk5PMDFCUTFvc1FVRkJZU3hCUVVGdFFqdFJRVU40UWl4QlFVRlBPMFZRTlVaaU8wbFBPRVZHTzAxQmFVSkpMRUZCUVVzN1RVRkRUQ3hCUVVGUE96dEJRVVZZTEVGQlFXOUNPMFZCUld4Q0xFRkJRVlU3UlVGRFZpeEJRVUZUTzBWQlExUXNRVUZCVHp0RlFVTlFMRUZCUVZFN1JVRkRVaXhCUVVGVk8wVkJRMVlzUVVGQllUczdSVUZGWWl4QlFVRlBPMFZCT1VsUExFRkJLMGxrT3p0QlFVZEdMRUZCUVd0Q0xFRkJRVlVzUVVGQmEwSTdPMFZCUlRGRExFRkJRVk03UlVGRFZDeEJRVUZWTzBWQlExWXNRVUZCV1RzN1JVRkZXaXhCUVVGWE8wVkJRMWdzUVVGQmNVSTdRVUZGZWtJc1FVRkJhMEk3TzBWQlJXUXNRVUZCU3p0RlFVTk1MRUZCUVUwN1JVRkRUaXhCUVVGUE8wVkJRMUFzUVVGQlVUdEZRVU5TTEVGQlFXVTdSVUZEWml4QlFVRlJPMEZCUlZvc1FVRkJhMEk3TzBWQlJXUXNRVUZCVVR0RlFVTlNMRUZCUVU4N1JWSm9URVVzUVZGcFRGUTdSVUZEUVN4QlFVRlJPMFZCUTFJc1FVRkJUenRGUVVOUUxFRkJRVmM3UVVGRFppeEJRVUZ0UWpzN1JVRkZaaXhCUVVGVk8wVkJRMVlzUVVGQlVUdEZRVU5TTEVGQlFVODdSVUZEVUN4QlFVRkxPMFZCUTB3c1FVRkJUVHRCUVVOV0xFRkJRVzFDTEVGQlFVa3NRVUZCVlN4QlFVRnRRaXhCUVVGSk96dEZRVVZ3UkN4QlFVRlRPMFZCUTFRc1FVRkJWVHRGUVVOV0xFRkJRVk03UlVGRFZDeEJRVUZSTzBWQlExSXNRVUZCVHp0RlFVTlFMRUZCUVVzN1JVRkRUQ3hCUVVGWk8wVkJRMW9zUVVGQlRUdEZRVU5PTEVGQlFXRTdSVkowVFVvc1FWRjFUVlE3UlVGRFFTeEJRVUZUT3p0RlFVVlVMRUZCUVZjN1JVRkRXQ3hCUVVGeFFqdEZRVU55UWl4QlFVRnZRanRCUVVWNFFpeEJRVUZ0UWl4QlFVRkpPMFZCUTI1Q0xFRkJRVmM3UVVGRlppeEJRVUZ0UWl4QlFVRkpPMFZCUTI1Q0xFRkJRVmM3UVVGSFppeEJRVUZyUWl4QlFVRnJRaXhCUVVGVkxFRkJRV3RDTEVGQlFXdENPenRGUVVVMVJTeEJRVUZUTzBGQlEyWXNRVUZCYTBJc1FVRkJiVUlzUVVGQlNTeEJRVUZWTEVGQlFXdENMRUZCUVcxQ0xFRkJRVWs3TzBWQlJYUkdMRUZCUVZNN1FVRkRaaXhCUVVGclFpeEJRVUZ0UWl4QlFVRkpPMFZCUTI1RExFRkJRVmM3UVVGRGFrSXNRVUZCYTBJc1FVRkJiVUlzUVVGQlNUdEZRVU51UXl4QlFVRlhPenRCUVVkcVFpeEJRVUZsTzBWQlExZ3NRVUZCVHp0QlFVTllMRUZCUVdkQ0xFRkJRVTBzUVVGQlowSXNRVUZCU1N4QlFVRlZMRUZCUVdkQ0xFRkJRVWs3TzBWQlJYQkZMRUZCUVZVN1JVRkRWaXhCUVVGVE8wVkJRMVFzUVVGQlVUdEZRVU5TTEVGQlFVODdSVko0VDBVc1FWRjVUMVE3UVVGRFNpeEJRVUZuUWpzN1JVRkZXaXhCUVVGVk8wVkJRMVlzUVVGQlN6dEZRVU5NTEVGQlFVODdSVUZEVUN4QlFVRlpPMFZCUTFvc1FVRkJXVHRCUVVOb1FpeEJRVUZuUWl4QlFVRkpMRUZCUVZVc1FVRkJaMElzUVVGQlNUczdSVUZGT1VNc1FVRkJVenRGUVVOVUxFRkJRVTg3TzBWQlJWQXNRVUZCVnp0RlFVTllMRUZCUVhGQ08wVkJRM0pDTEVGQlFXdENPMFZCUTJ4Q0xFRkJRVms3UVVGRGFFSXNRVUZCWjBJc1FVRkJTVHM3UlVGRmFFSXNRVUZCU3p0QlFVTlVMRUZCUVdkQ0xFRkJRVWs3TzBWQlJXaENMRUZCUVVzN1FVRkZWQ3hCUVVGbExFRkJRV2RDT3p0RlFVVjZRaXhCUVVGWk8wRkJRMnhDTEVGQlFXVXNRVUZCWjBJc1FVRkJTU3hCUVVGVkxFRkJRV1VzUVVGQlowSXNRVUZCU1RzN1JVRkZNVVVzUVVGQldUdEJRVU5zUWl4QlFVRmxMRUZCUVdkQ0xFRkJRVWs3UlVGRE4wSXNRVUZCZVVJN1FVRkRMMElzUVVGQlpTeEJRVUZuUWl4QlFVRkpPMFZCUXpkQ0xFRkJRWGxDTzBGUU9VNDNRanRGVDI5TVJqdEpRVFJEU1N4QlFVRlRPenRCUVVkaU8wVkJRMFVzUVVGQlR6czdRVUZGVkN4QlFVRm5RanRGUVVOa0xFRkJRVTg3UlZCMlQxQTdTVTl6VDBZc1FVRkJaMEk3VFVGSldpeEJRVUZQT3p0QlFVVllMRUZCUVdsQ0xFRkJRV2RDTzBWQlJTOUNMRUZCUVZVN1JVRkRWaXhCUVVGTE8wVkJRMHdzUVVGQlVUdEZRVEZTU1N4QlFUSlNXanRGVWpkU1Z5eEJVVGhTV0R0RlFVTkJMRUZCUVZVN1JVRkRWaXhCUVVFMFFqdEZRWHBTWkN4QlFUQlNaRHM3UlVGSFFTeEJRVUZYTzBWQlExZ3NRVUZCVnp0RlFVTllMRUZCUVZrN1JVRkZaQ3hCUVVGblFpeEJRVUZITEVGQlFXZENMRUZCUVVjN1NVRkRiRU1zUVVGQmFVSTdTVUZEYWtJc1FVRkJVenRKUVVOVUxFRkJRVmM3U1VGRFdDeEJRVUZSTzBsQlExSXNRVUZCWVR0SlFVTmlMRUZCUVZNN1NWSXpVMHdzUVZFMFUwbzdTVUZEUVN4QlFVRjNRanRKUVVONFFpeEJRVUY1UWp0SlFVTjZRaXhCUVVGVk8wbEJRMVlzUVVGQlpUdEpRVU5tTEVGQlFXRTdTVUZEWWl4QlFVRmxPMGxCUTJZc1FVRkJWenRKUVVOWUxFRkJRV0U3U1VGRFlpeEJRVUZ6UWp0SlFVVXhRaXhCUVVGblFpeEJRVUZETEVGQlFWRXNRVUZCWjBJc1FVRkJSeXhCUVVGRE8wMUJRM1pETEVGQlFVODdSVUZIWWl4QlFVRmxMRUZCUVZrc1FVRkJaMElzUVVGQlJUczdTVUZGZWtNc1FVRkJWenRGUVVWbUxFRkJRV1VzUVVGQllTeEJRVUZMTEVGQlFVY3NRVUZCWjBJc1FVRkJSU3hCUVVGaExFRkJRVXM3TzBsQlJYQkZMRUZCUVZjN1NVRkRXQ3hCUVVGVE96dEJVSHBTV0R0RlR6UlNSaXhCUVVGaExFRkJRV2xDTEVGQlFXRXNRVUZCWjBJN1NVRkZka1FzUVVGQlR6dEpRVU5RTEVGQlFVMDdPMEZCU1ZZc1FVRkJaMElzUVVGQlV6czdSVkpvVm1wQ0xFRlJhMVpLTzBGQlJVb3NRVUZCWjBJc1FVRkJaMElzUVVGQll5eEJRVUZuUWl4QlFVRmpPenRGUVVkNFJTeEJRVUZSTzBWQlExSXNRVUZCWVR0RlFVVnFRaXhCUVVGblFpeEJRVUZuUWl4QlFVRmhMRUZCUVVrc1FVRkJaMElzUVVGQll5eEJRVUZoTzBsQlEzUkdMRUZCUVZVN1NVRkRWaXhCUVVGbE8wbEJRMllzUVVGQlZ6dEpRVU5ZTEVGQlFXRTdTVUZEWWl4QlFVRmpPMEZCU1hCQ0xFRkJRV2RDTEVGQlFXZENMRUZCUVdFN1JVRkRka01zUVVGQlZUdEZRVU5XTEVGQlFWTTdSVUZEVkN4QlFVRlJPMFZCUTFJc1FVRkJUenRGUVVOUUxFRkJRVTA3UlVGRFRpeEJRVUZMTzBWQlEwd3NRVUZCV1R0RlVEZFVhRUk3U1U5elZFWXNRVUZCWjBJc1FVRkJaMElzUVVGQllUdE5RVlZ5UXl4QlFVRlRPMEZCUldwQ0xFRkJRV2RDTEVGQlFXTTdSVUZETVVJc1FVRkJZenRGUVVWc1FpeEJRVUZuUWl4QlFVRmpMRUZCUVdFN1NWSnFXRGxDTEVGUmExaFFPMGxCUTBFc1FVRkJWenM3U1VGRldDeEJRVUZUTzBWQlJXWXNRVUZCWjBJc1FVRkJZeXhCUVVGWk96dEpRVVZ3UXl4QlFVRlRPMGxCUTFRc1FVRkJVenRKUVVOVUxFRkJRVlU3U1VGRFZpeEJRVUZOTzBsQlEwNHNRVUZCU3p0SlFVTk1MRUZCUVZrN1NVRkRXaXhCUVVGUE8wbEJRMUFzUVVGQlVUdEpRVU5TTEVGQlFXMUNPMGxCUTI1Q0xFRkJRWEZDTzBsQlEzSkNMRUZCUVdsQ08wVkJSWFpDTEVGQlFXZENMRUZCUVdNc1FVRkJXU3hCUVVGUE8wbEJRek5ETEVGQlFXdENPMFZCUTNoQ0xFRkJRV2RDTEVGQlFXTXNRVUZCV1N4QlFVRlBPMGxCUXpORExFRkJRV3RDTzBWQlEzaENMRUZCUVdkQ0xFRkJRV01zUVVGQldTeEJRVUZQTzBsQlF6TkRMRUZCUVd0Q08wVkJRM2hDTEVGQlFXZENMRUZCUVdNc1FVRkJXU3hCUVVGUE8wbEJRek5ETEVGQlFXdENPMFZCUTNoQ0xFRkJRV2RDTEVGQlFXTXNRVUZCV1N4QlFVRlBPMGxCUXpORExFRkJRV3RDTzBWQlEzaENMRUZCUVdkQ0xFRkJRV01zUVVGQldTeEJRVUZQTzBsQlF6TkRMRUZCUVd0Q08wVkJRM2hDTEVGQlFXZENMRUZCUVdNc1FVRkJXU3hCUVVGUE8wbEJRek5ETEVGQlFXdENPMFZCUTNoQ0xFRkJRV2RDTEVGQlFXTXNRVUZCV1N4QlFVRlBPMGxCUXpORExFRkJRV3RDTzBGUWVGZDBRanRGVDJ0VFJqczdTVUV3UlVrc1FVRkJXVHRKUVVOYUxFRkJRVms3U1VGRGFFSXNRVUZCWlR0TlFVTlVMRUZCUVZrN1RVRkRXaXhCUVVGWk96dEJVR2hZYUVJN1JVOXZXRVk3U1VGRFNTeEJRVUZWTzBsQlExWXNRVUZCVXp0SlFVTlVMRUZCUVdFN1NVRkRZaXhCUVVGUk8wbEJRMUlzUVVGQlR6dEpRVU5RTEVGQlFWVTdTVUZEVml4QlFVRlpPMGxCY2xwb1FpeEJRVUZsTzAxQlExZ3NRVUZCVXp0TlFVTlVMRUZCUVZNN1RVRkRWQ3hCUVVGUE8wbEJjMXBZTEVGQlFXVXNRVUZCWVN4QlFVRkxPenROUVVVelFpeEJRVUZYTzAxQlExZ3NRVUZCVXp0SlFVVm1MRUZCUVdkQ08wMUJRMVlzUVVGQlZUdE5RVU5XTEVGQlFWRTdUVUZEVWl4QlFVRlBPMDFCUTFBc1FVRkJXVHROUVVOYUxFRkJRVlU3VFVGRFZpeEJRVUZaTzAxQk4yRkdMRUZCT0dGV08wMUJSVTRzUVVGQlowSXNRVUZCUlRzN1VVRkZWaXhCUVVGWE8wMUJSVzVDTEVGQlFXZENMRUZCUVVVc1FVRkJZU3hCUVVGTE96dFJRVVUxUWl4QlFVRlhPMUZCUTFnc1FVRkJVenRKUVVWcVFpeEJRVUZyUWp0TlFVTmFMRUZCUVZNN1RVRkRWQ3hCUVVGaE8wbEJSVzVDTEVGQlFXdENMRUZCUVVzN08wMUJSV3BDTEVGQlFWVTdUVUZEVml4QlFVRlRPMDFCZW1OSExFRkJNR05hTzAxQk1XTlpMRUZCTW1OYU8wMUJRMEVzUVVGQlV6dE5ValZqUml4QlVUWmpVRHROUVVOQkxFRkJRVlU3VFVGRFZpeEJRVUZsTzAxQlEyWXNRVUZCYTBJN1RVRkZlRUlzUVVGQmEwSXNRVUZCU3l4QlFVRkRPMUZTYm1Sb1FpeEJVVzlrUVR0UlFVTkJMRUZCUVdsQ08wMUJRM3BDTEVGQlFXdENMRUZCUVVzc1FVRkJRenRSVW5Sa2FFSXNRVkYxWkVFN1VVRkRRU3hCUVVGWk8wbEJSWEJDTEVGQlFXZENMRUZCUVZVc1FVRkJaMEk3VFVGRGNFTXNRVUZCVXp0SlFVVm1MRUZCUVdkQ0xFRkJRVzFDTEVGQlFXZENMRUZCUVdsQ0xFRkJRV2RDT3p0TlFVazVSU3hCUVVGVk8wMUJhR1ZGTEVGQmFXVmFPMDFCUTBFc1FVRkJUenROVWk5a1RDeEJVV2RsUmp0TlFVTkJMRUZCUVZNN1RVRkRWQ3hCUVVFd1FqdE5RVU14UWl4QlFVRlhPMDFCUjFnc1FVRkJkMEk3VFVGMlpEbENMRUZCUVdkQ0xFRkJRV2xDTEVGQlFWRXNRVUZCWjBJc1FVRkJaU3hCUVVGUkxFRkJRV2RDTEVGQlFXRTdVVUZEZWtjc1FVRkJVenRSUVVOVUxFRkJRVk03VVVGRFZDeEJRVUZQTzAxQmMyUllMRUZCUVdkQ0xFRkJRV2xDTEVGQlFWa3NRVUZCWjBJc1FVRkJaU3hCUVVGWkxFRkJRV2RDTEVGQlFXRTdVVUZETjBjc1FVRkJVenRSUVVOVUxFRkJRVms3VVVGRFdpeEJRVUYzUWp0TlFVVm9ReXhCUVVGblFpeEJRVUZ2UWl4QlFVRlZMRUZCUVdkQ0xFRkJRV3RDTEVGQlFWVXNRVUZCWjBJc1FVRkJaMEk3TzFGQlJXeElMRUZCUVZNN1VVRkRWQ3hCUVVGVk8xRkJRMVlzUVVGQlRUdFJRVU5PTEVGQlFWRTdVVUZEVWl4QlFVRlJPMUZCUTFJc1FVRkJUenRSUVVOUUxFRkJRVlU3TzFGQlJWWXNRVUZCVVR0UlFVTlNMRUZCUVZNN1VVRkZha0lzUVVGQlowSXNRVUZCYjBJc1FVRkJVeXhCUVVGSExFRkJRV2RDTEVGQlFXdENMRUZCUVZNc1FVRkJSeXhCUVVGblFpeEJRVUZuUWl4QlFVRlRPMVZCUXpkSUxFRkJRVlU3VlVGRFZpeEJRVUZQTzFWQlExQXNRVUZCVVR0VlFVTlNMRUZCUVVzN1ZVRkRUQ3hCUVVGTk8xVkJRMDRzUVVGQlZ6dFZRVU5ZTEVGQlFXRTdWVUZEWWl4QlFVRlpPMVZCUTFvc1FVRkJZVHRWUVVOaUxFRkJRVms3TzFWQlJWb3NRVUZCWlR0VlFVTm1MRUZCUVZFN1ZVRkRVaXhCUVVGVE8xVkJRMVFzUVVGQmEwSTdWVUZGTlVJc1FVRkJaMElzUVVGQmIwSXNRVUZCVXl4QlFVRkRMRUZCUVZFc1FVRkJaMElzUVVGQmEwSXNRVUZCVXl4QlFVRkRMRUZCUVZFc1FVRkJaMElzUVVGQlowSXNRVUZCVXl4QlFVRkRPMWxTT1dkQ2Rra3NRVkVyWjBKRU8xbFNMMmRDUXl4QlVXZG9Ra1E3V1ZJM1owSktMRUZST0dkQ1NUdEpRVWxhTEVGQlFXZENMRUZCUVc5Q096dE5RVVUxUWl4QlFVRlJPenROUVhwblFtUXNRVUZCVHp0TlFVUnZReXhCUVVVelF6dE5RVEpuUWswc1FVRkJZenROUVVOa0xFRkJRV003VFVGRFpDeEJRVUZWTzAxQlExWXNRVUZCV1R0TlFVTmFMRUZCUVZrN1RVRkRXaXhCUVVFMFFqdE5RVVZ3UXl4QlFVRm5RaXhCUVVGdlFpeEJRVUZGT3p0UlFVVTFRaXhCUVVGak8xRkJRMlFzUVVGQll6dE5RVVY0UWl4QlFVRm5RaXhCUVVGdlFpeEJRVUZMT3p0UlVuWnBRbXBETEVGUmVXbENSVHRSUVVOQkxFRkJRV0U3VVVGRFlpeEJRVUZYTzFGQlExZ3NRVUZCWlR0SlFVVjZRaXhCUVVGblFpeEJRVUZyUWp0TlFVTXhRaXhCUVVGUk8wMUJRMUlzUVVGQllUdE5RVU5pTEVGQlFWTTdUVkpvYWtKS0xFRlJhV3BDVER0TlFVTkJMRUZCUVdVN1RVRkRaaXhCUVVGWE8wMUJSVzVDTEVGQlFXZENMRUZCUVd0Q0xFRkJRVU03VVZKMGFrSXpRaXhCVVhWcVFrVTdTVUZGVml4QlFVRm5RaXhCUVVGclFqczdUVUZGTVVJc1FVRkJWenRKUVVWdVFpeEJRVUZuUWl4QlFVRnJRaXhCUVVGSE96dE5RVVUzUWl4QlFVRlZPMDFCUTFZc1FVRkJTenROUVVOTUxFRkJRVTA3VFVGRFRpeEJRVUZSTzAxQlExSXNRVUZCVHp0TlFVVm1MRUZCUVdkQ0xFRkJRV3RDTEVGQlFVY3NRVUZCUlR0UlFVTTNRaXhCUVVGWE8wMUJSWEpDTEVGQlFXZENMRUZCUVd0Q0xFRkJRVWNzUVVGQlJ6dFJRVU01UWl4QlFVRlRPMUZCUlc1Q0xFRkJRV2RDTEVGQlFXdENMRUZCUVVjc1FVRkJSeXhCUVVGVE8xVkJRM0pETEVGQlFVODdUVUZGYmtJc1FVRkJaMElzUVVGQmEwSXNRVUZCUnl4QlFVRkhPMUZCUXpsQ0xFRkJRVk03U1VGRmJrSXNRVUZCWjBJc1FVRkJhMElzUVVGQllTeEJRVUZMT3p0TlFVVTFReXhCUVVGWE8wbEJSVzVDTEVGQlFXZENPMDFCUTFZc1FVRkJXVHROUVVWc1FpeEJRVUZuUWl4QlFVRm5RanM3VVVGSGVFSXNRVUZCVHp0UlFVTlFMRUZCUVU4N1VVRkRVQ3hCUVVGVE8xRkJSV3BDTEVGQlFXZENMRUZCUVdkQ0xFRkJRVVU3TzAxQlIyeERMRUZCUVdkQ0xFRkJRV2RDTzFGQlEzaENMRUZCUVdVN1VVRkRaaXhCUVVGVE8xRkJRMVFzUVVGQlVUdFJRVU5TTEVGQlFXRTdVVUZGY2tJc1FVRkJaMElzUVVGQlowSXNRVUZCWVR0VlFVTnVReXhCUVVGVk8xVkJRMVlzUVVGQldUdFZRVU5hTEVGQlFWRTdWVUZEVWl4QlFVRlBPMVZCUTFBc1FVRkJaVHRSUVVWNlFpeEJRVUZuUWl4QlFVRm5RaXhCUVVGaE8xVlNMMjFDY2tNc1FWRm5ia0pGTzFWQlEwRXNRVUZCVnp0VlFVTllMRUZCUVZNN1ZVRkRWQ3hCUVVGaE8wbEJTWFpDTEVGQlFXZENMRUZCUVdNN08wMUJlRzFDTlVJc1FVRkJUenROUVVSdlF5eEJRVVV6UXp0TlFUQnRRazBzUVVGQlVUdE5RVU5vUWl4QlFVRm5RaXhCUVVGakxFRkJRVVU3TzFGQlJYUkNMRUZCUVdNN1NVRkRlRUlzUVVGQlowSXNRVUZCWXp0TlFVTjBRaXhCUVVGbE8wMUJRMllzUVVGQlVUdE5RVU5TTEVGQlFXRTdUVUZEWWl4QlFVRlRPMDFCUTJwQ0xFRkJRV2RDTEVGQlFXTXNRVUZCV1R0UlFVTm9ReXhCUVVGWk8wMUJRM1JDTEVGQlFXZENMRUZCUVdNc1FVRkJZVHRSVW5KdlFtNURMRUZSYzI5Q1JUdFJRVU5CTEVGQlFXRTdUVUZEZGtJc1FVRkJaMElzUVVGQll5eEJRVUZoTzFGQlEycERMRUZCUVZNN1RVRkRia0lzUVVGQlowSXNRVUZCWXl4QlFVRlpPMUZCUTJoRExFRkJRVTA3TzBGQlIyaENMRUZCUVdkQ0xFRkJRVWNzUVVGQlV6dEZRVU14UWl4QlFVRlZPMFZCUTFvc1FVRkJaMElzUVVGQlF5eEJRVUZWTEVGQlFXZENMRUZCUVVNc1FVRkJVeXhCUVVGVExFRkJRVU1zUVVGQlZTeEJRVUZUTEVGQlFVTTdPMGxCUlM5RkxFRkJRVk03U1VGRFZDeEJRVUZWTzBsQlExWXNRVUZCU3p0SlFVTk1MRUZCUVZrN1NVRkRXaXhCUVVGVE8wbEJRMVFzUVVGQlVUdEpRVU5TTEVGQlFVODdTVUZEVUN4QlFVRlpPMGxCUlZvc1FVRkJjVUk3UlVGRGVrSXNRVUZCWjBJc1FVRkJReXhCUVVGVkxFRkJRVk1zUVVGQlF6dEpRVU5xUXl4QlFVRlhPMFZCUTJZc1FVRkJaMElzUVVGQlF5eEJRVUZUTEVGQlFWTXNRVUZCUXp0SlFVTm9ReXhCUVVGWE8wVlFiRzVDWWp0SlQyOXVRa1lzUVVGQlowSXNRVUZCUXl4QlFVRlZMRUZCUVdkQ0xFRkJRVU1zUVVGQlV5eEJRVUZUTEVGQlFVTXNRVUZCVlN4QlFVRlRMRUZCUVVNN1RVRkROMFVzUVVGQldUdEpRVU5zUWl4QlFVRm5RaXhCUVVGRExFRkJRVTBzUVVGQlZTeEJRVUZuUWl4QlFVRkRMRUZCUVUwc1FVRkJVeXhCUVVGVExFRkJRVU1zUVVGQlRTeEJRVUZWTEVGQlFWTXNRVUZCUXl4QlFVRk5PMDFTYm5GQ2JrY3NRVkZ2Y1VKR096dEJRVVZPTEVGQlFXZENPMFZCUTJRc1FVRkJaVHRGUVVOcVFpeEJRVUZuUWl4QlFVRkRMRUZCUVZVc1FVRkJaMElzUVVGQlF6czdTVUZGZUVNc1FVRkJUenRKUVVOUUxFRkJRV3RDT3p0QlFVVjBRaXhCUVVGblFpeEJRVUZUTzBWQlEzWkNMRUZCUVdNN1JVRkRhRUlzUVVGQlowSXNRVUZCVXl4QlFVRkRMRUZCUVZVc1FVRkJaMElzUVVGQlV5eEJRVUZET3p0SlFVVXhSQ3hCUVVGTk8wbEJRMDRzUVVGQmEwSTdPMEZRY205Q2NFSTdSVTk1YjBKR0xFRkJRV2RDTEVGQlFVTXNRVUZCVlN4QlFVRm5RaXhCUVVGRE8wbEJRM1JETEVGQlFVODdSVUZEWWl4QlFVRnJRaXhCUVVGblFqczdTVUZGT1VJc1FVRkJaVHRKUVVOdVFpeEJRVUZyUWl4QlFVRm5RaXhCUVVGRExFRkJRVlVzUVVGQmEwSXNRVUZCWjBJc1FVRkJRenROUVVNeFJTeEJRVUZQTzAxQlExQXNRVUZCYTBJN1RVRkRiRUlzUVVGQldUdE5RVVZhTEVGQlFYRkNPMDFCUTNKQ0xFRkJRV3RDTzBsQlEzaENMRUZCUVd0Q0xFRkJRV2RDTEVGQlFVTTdUVUZETjBJc1FVRkJUenRKUVVOaUxFRkJRV3RDTEVGQlFXZENMRUZCUVVNN1RVRkROMElzUVVGQlR6dEpRVU5pTEVGQlFXdENMRUZCUVdkQ0xFRkJRVU1zUVVGQlV5eEJRVUZWTEVGQlFXdENMRUZCUVdkQ0xFRkJRVU1zUVVGQlV6dE5RVU0xUml4QlFVRlBPMGxCUTJJc1FVRkJhMElzUVVGQlowSXNRVUZCUXl4QlFVRlRPMDFCUTNSRExFRkJRWGxDTzBsQlF5OUNMRUZCUVd0Q0xFRkJRV2RDTEVGQlFVTXNRVUZCVXp0TlFVTjBReXhCUVVGWE8wVkJRMnBDTEVGQlFXOUNMRUZCUVdkQ0xFRkJRVU1zUVVGQlZTeEJRVUZ2UWl4QlFVRm5RaXhCUVVGRE96dEpRVVZvUml4QlFVRlRPMFZCUTJJc1FVRkJaMElzUVVGQlV6dEpRVU55UWl4QlFVRmpPMGxCUTJ4Q0xFRkJRV2RDTEVGQlFWTXNRVUZCUXl4QlFVRlZMRUZCUVdkQ0xFRkJRVk1zUVVGQlF6dE5RVU40UkN4QlFVRk5PenRCUVV0YU8wVkJRMFVzUVVGQlRUdEZRVU5PTEVGQlFWRTdSVkExY1VKU08wbFBNSEZDUmp0TlFVdEpMRUZCUVU4N1RVRkRVQ3hCUVVGUk8wMUJRMUlzUVVGQlR6dEZRVVZZTEVGQlFWYzdTVUZEVUN4QlFVRlRPMFZCUldJc1FVRkJWeXhCUVVGTE8wbEJRMW9zUVVGQmEwSTdTVUZEYkVJc1FVRkJiVUk3U1VGRGJrSXNRVUZCYTBJN1NVRkRiRUlzUVVGQlV6dEpRVU5VTEVGQlFXRTdTVUZEWWl4QlFVRlJPMGxCUTFJc1FVRkJUenRKUVVOUUxFRkJRVzlDTzBsQlEzQkNMRUZCUVZFN1NVRkRVaXhCUVVGVk8wbEJRMVlzUVVGQlN6dEpRVU5NTEVGQlFVODdTVUZEVUN4QlFVRnBRanRGUVVWeVFpeEJRVUZYTEVGQlFVczdTVUZEV2l4QlFVRlpPMGxCUTFvc1FVRkJXVHRKUVVOYUxFRkJRVkU3U1ZCNGMwSldPMDFQY1hOQ1JpeEJRVUZYTEVGQlFVczdVVUZOVml4QlFVRlBPMGxCUldJc1FVRkJWeXhCUVVGTExFRkJRV1VzUVVGQk5rSXNRVUZCVnl4QlFVRkxMRUZCUVdVc1FVRkJiMElzUVVGQlZ5eEJRVUZMTEVGQlFXVTdUVUZIZUVrc1FVRkJUenRKUVVWaUxFRkJRVmNzUVVGQlN5eEJRVUZsTzAxQlEzcENMRUZCUVZNN1JVRkZaaXhCUVVGVk8wbEJRMDRzUVVGQlV6dEpRVU5VTEVGQlFWazdTVUZEV2l4QlFVRjNRanRGUVVVMVFpeEJRVUZqTzBsQlExWXNRVUZCVlRzN1FVRlRaRHM3UlVGRlJTeEJRVUZWTzBWQlExWXNRVUZCVXp0RlFVTlVMRUZCUVZFN1JVRkRVaXhCUVVGUE8wVkJRMUFzUVVGQlN6dEZRVU5NTEVGQlFVMDdSVUZEVGl4QlFVRlJPMFZCUTFJc1FVRkJXVHRGUVVOYUxFRkJRVk03UlVGRFZDeEJRVUZ4UWp0RlFVTnlRaXhCUVVGNVFqdEZRVVV6UWl4QlFVRlhPMGxCUTFBc1FVRkJVenRKUVVOVUxFRkJRVms3U1VGRFdpeEJRVUY1UWp0RlVISjJRak5DTzBsUGQzWkNSaXhCUVVGWE8wMUJRMHdzUVVGQlZ6dEpRVVZxUWl4QlFVRmhMRUZCUVZjN1RVRkRiRUlzUVVGQlZ6dEpRVVZxUWl4QlFVRlhMRUZCUVZjc1FVRkJiMElzUVVGQllTeEJRVUZYTEVGQlFWYzdUVUZGZGtVc1FVRkJWenM3T3pzN096dEJRVkZxUWl4QlFVRlBPMFZCUTB3c1FVRkJWVHRGUVVOV0xFRkJRVkU3UlVGRFVpeEJRVUZQTzBWQlExQXNRVUZCVlR0RlFVTldMRUZCUVZrN1JVRnFla0pLTEVGQmEzcENVanM3UVVGRlJpeEJRVUZQTzBWQlEwd3NRVUZCVlR0RlFVTldMRUZCUVVzN1JVRkRUQ3hCUVVGVE8wVkJRMVFzUVVGQldUczdRVkJ3ZUVKYU8wVlBkWGhDUml4QlFVRlBPMGxCUTBnc1FVRkJWVHRKUVRONlFrVXNRVUUwZWtKYU8wbEJRMEVzUVVGQlV6dEpRVU5VTEVGQlFVODdTVUZEVUN4QlFVRkxPMGxCUTB3c1FVRkJUenRKUVVOUUxFRkJRVk03UlVGRFlpeEJRVUZQTEVGQlFXTTdTVUZEYWtJc1FVRkJWVHM3UVVNM01FSmtPMFZCUTBNc1FVRkJVenRGUVVOVUxFRkJRVms3UlZJeVExZzdTVkUzUTBZN1RVRkxSU3hCUVVGVE8wVkJSVmc3U1ZaS1dTeEJWVXRXTzBsQlEwRXNRVUZCVnp0SlZrTk9MRUZWUVV3N1NVRkRRU3hCUVVGbE8wbEJSV3BDTEVGQlFYRkNPMDFVU0ZZc1FWTkpVanROUVVOSUxFRkJRWEZDTEVGQlFVTTdVVlJtWkN4QlUyZENTanRGUVVWS08wbEJRMFVzUVVGQlZ6dEZRVVZpTzBsQlEwVXNRVUZCVXp0SlFVTlVMRUZCUVdkQ08wVkJSV3hDTzBsQlEwVXNRVUZCVXp0SlFVTlVMRUZCUVdkQ08wVkJSV3hDTzBsQlEwVXNRVUZCWXp0SlZEbENVaXhCVXl0Q1RqdEpRVU5CTEVGQlFWYzdTVUZEV0N4QlFVRmxPMGxCUTJZc1FVRkJVenRKUVVOVUxFRkJRVTg3UlVGSFZEdEpRVU5GTEVGQlFWYzdTVUZGWWl4QlFVRjFRaXhCUVVGRk8wMVdkRU5pTEVGVmRVTlVPMDFCUTBFc1FVRkJWenROVm1wRFVDeEJWV3REU2p0TlFVTkJMRUZCUVdVN1RVRkZiRUlzUVVGQmRVSXNRVUZCUlN4QlFVRmpPMUZVY2tNMVFpeEJVM05EVGp0UlFVTk1MRUZCUVhWQ0xFRkJRVVVzUVVGQll5eEJRVUZETzFWVWFrUm9ReXhCVTJ0RVJEczdRVU5zUkZBN1JVRkRSU3hCUVVGclFqdEZRVU5zUWl4QlFVRnhRanRGUVVOeVFpeEJRVUZwUWp0RlFVTnFRaXhCUVVGUk8wVkJRMUlzUVVGQlZUdEZWSGREVmp0SlV6ZERSanROUVZOSkxFRkJRVkU3UlZSdlExWTdTVk0zUTBZN1RVRlpTU3hCUVVGclFqdE5RVU5zUWl4QlFVRlJPMFZCUjFvN1NVRkRTU3hCUVVGUk8wbFdZa29zUVZWalNqdEpRVU5CTEVGQlFXRTdTVUZEWWl4QlFVRlhPMGxCUTFnc1FVRkJZVHRKUVVOaUxFRkJRVTA3U1VGRFRpeEJRVUZoTzBsQlEySXNRVUZCVlR0SlFVTldMRUZCUVZFN1NVRkRVaXhCUVVGaE8wbFViVUptTzAxVE4wSkdPMUZCWVUwc1FVRkJWVHRSUVVOV0xFRkJRVmM3VVVGRFdDeEJRVUZUTzBsQlJXWXNRVUZCZFVJN1RVRkRha0lzUVVGQlZUdE5WRmRrTzFGVFdrWXNRVUZCZFVJN1ZVRkpaaXhCUVVGTE96dEJRVVZpTzBWV2RrTlJMRUZWZDBOT08wVldjRU5OTEVGVmNVTk9PMFZCUTBFc1FVRkJVenRGUVVOVUxFRkJRVkU3UlVGRlZpeEJRVUZwUWp0SlFVTmlMRUZCUVZNN1JVRkZZanRKUVVOSkxFRkJRVk03UlVGRllqdEpWaTlEVVN4QlZXZEVTanRGUVVsS08wbFdkRVJSTEVGVmRVUktPenRCUVZGS08wVkJRMFVzUVVGQmEwSTdSVUZEYkVJc1FVRkJjVUk3UlVGRGNrSXNRVUZCYVVJN1JVRkRha0lzUVVGQlVUczdRVU55UlZZN1JVRkRSU3hCUVVGVE8wVkJRMVFzUVVGQldUdEZRVU5hTEVGQlFXVTdSVll3UTJZN1NWVTNRMFk3VFU1eFFra3NRVUZCVnp0RlRXUm1PMGxCUTBrc1FVRkJVenRKUVVOVUxFRkJRV2RDTzBsQlJXaENMRUZCUVZNN1NWWnJRMWc3VFZWMFEwWTdVVUZQVFN4QlFVRlRPMGxXSzBKaU8wMVZOMEpHTEVGQlFXbENPMUZCUlZRc1FVRkJZVHRSUVVOaUxFRkJRVk03UlVGRmFrSTdTVUZEU1N4QlFVRlpPMFZCUldoQ08wbEJRMGtzUVVGQlpUdEZRVVZ1UWp0SlFVTkpMRUZCUVZrN1NVRkRXaXhCUVVGbE8wVkJSVzVDTEVGQlFXRTdTVUZEVkN4QlFVRlpPMGxCUTFvc1FVRkJXVHRKUVVWb1FpeEJRVUZoTEVGQlFVYzdUVUZEVml4QlFVRlRPMDFCUTFRc1FVRkJVenROUVVOVUxFRkJRVTg3UlVGSFlqdEpXSHBEVVN4QlZ6QkRTanRKUVVOQkxFRkJRVk03U1ZwMlEwa3NRVmwzUTJJN1NVRkRRU3hCUVVGVE8wbEJRMVFzUVVGQlowSTdTVUZEY0VJc1FVRkJhMEk3VFZnelFsY3NRVmMwUW5aQ096dEJRVWRPTzBWQlEwVXNRVUZCWjBJN1JWWlFhRUk3U1ZWTlJqdE5RVWxKTEVGQlFXVTdUVUZEWml4QlFVRmxPMFZCUlc1Q08wbEJRMGtzUVVGQlowSTdTVlprYkVJN1RWVmhSanRSUVVsTkxFRkJRV1U3VVVGRFppeEJRVUZaTzBsV2JFSm9RanROVlc5Q1JpeEJRVUZwUWp0UlFVVlVMRUZCUVZNN1VVRkRWQ3hCUVVGUE8wVkJSV1k3U1VGRFNTeEJRVUZqTzBsQlEyUXNRVUZCWVR0SlFVTmlMRUZCUVdkQ08wbFdOVUpzUWp0TlZYbENSanRSUVUxTkxFRkJRVk03UlVGRlpqdEpXRGxGVVN4QlJHbEVUanRKUVRkRFpTeEJRVGhEWmp0SlFVTkJMRUZCUVZjN1NVRXpRMG9zUVVFMFExQTdTVUZEUVN4QlFVRmhPMGxaTWtKWUxFRkJRV003UlVGRmJFSTdTVmd4UlZFc1FWY3lSVW83U1VGRFFTeEJRVUZsTzBsQlJXNUNMRUZCUVc5Q08wMUJRMlFzUVVGQlV6dEpRVU5tTEVGQlFXOUNPMDFZZUVaYUxFRlhlVVpHTzAxQlEwRXNRVUZCWVR0TlFVTnVRaXhCUVVGdlFpeEJRVUZGTzFGQlEyUXNRVUZCVHp0UlFVTlFMRUZCUVZNN1JWWm9SR1k3U1ZWclJFWTdUVUZIVFN4QlFVRlpPMFZCUld4Q0xFRkJRV2RDTEVGQlFVazdTVUZEWkN4QlFVRlpPenRCUVUxc1FqdEZRVU5KTEVGQlFWazdSVUZEV2l4QlFVRlRPMFZhZGtaWUxFRkJRV0U3UlVGRFlpeEJRVUZuUWp0RldYbEdiRUlzUVVGQmJVSXNRVUZCU1R0SlFVTnFRaXhCUVVGWk8wRkJSMnhDTEVGQlFXTXNRVUZCUXp0RlFVTlVMRUZCUVdsQ08wRkJSWFpDTEVGQlFXTTdSVmgyU0U0c1FVUnBSRTQ3UlVFM1EyVXNRVUU0UTJZN1JVRkRRU3hCUVVGWE8wVkJNME5LTEVGQk5FTlFPMFZCUTBFc1FVRkJZVHRGV1c5RlppeEJRVUZqTEVGQlFVVTdTVmg0U0Vnc1FWZDVTRkE3UVVGRlRpeEJRVUZqTzBWQlExWXNRVUZCVHp0RlFVTlFMRUZCUVZjN08wRkJTV1k3UlVGRFJTeEJRVUZUTzBWQlExUXNRVUZCWVRzN1FVRkhaanRGUVVORkxFRkJRVk03UlVGRFZDeEJRVUZaTzBWQlExb3NRVUZCWlR0RlFVVnFRanRKUVVOSkxFRkJRVk03U1VGRFZDeEJRVUZuUWp0SlZtcEhiRUk3VFZWdFIwWXNRVUZCYTBJN1VVRkZWaXhCUVVGaE8wbFdja2R1UWp0TlZYVkhSaXhCUVVGclFqdFJRVVZXTEVGQlFXRTdSVUZGY2tJN1NVRkRTU3hCUVVGUk8wbEJRMUlzUVVGQlZUdEpRVU5XTEVGQlFXVTdSVUZKYmtJN1NWZ3ZTbEVzUVVSdFJVNDdTVUV2UkdVc1FVRm5SV1k3U1VGRFFTeEJRVUZYTzBsQk4wUktMRUZCT0VSUU8wbEJRMEVzUVVGQllUdEpRM1pGVUN4QlYybExTanRKUVVOQkxFRkJRVk03U1VGRFZDeEJRVUZaTzBsQlJXaENMRUZCUVRKQ08wMVlha3BGTEVGWGEwcDJRanRGUVVWT08wbEJRMGtzUVVGQldUczdRVU40UzJoQ08wVmFRMUVzUVZsQlRqdEZRVU5CTEVGQlFWTTdSVUZEVkN4QlFVRlBPMFZCUlZRN1NVRkRTU3hCUVVGVE8wVkJSV0lzUVVGQmFVSTdTVUZEWWl4QlFVRlRPMFZCUjJJN1NVRkRTU3hCUVVGUk8wbEJRMUlzUVVGQlV6dEpXRGhDV0R0TlYyaERSanRSUVV0TkxFRkJRVk03UlVGRlpqdEpRVU5KTEVGQlFWTTdTVUZEVkN4QlFVRlJPMGxZZFVKV08wMVhla0pHTzFGQlMwMHNRVUZCVVRzN1FVRkhaRHRGUVVORkxFRkJRVk03UlVGRFZDeEJRVUZUTzBWQlJWZ3NRVUZCV1R0SlFVTlNMRUZCUVU4N1NVRkRVQ3hCUVVGUk8wVllWMVk3U1ZkcVFrWTdUVUZUU1N4QlFVRlhPMFZCUldZN1NVRkRTU3hCUVVGbE8wbFlTMnBDTzAxWFRrWTdVVUZKVFN4QlFVRlRPMFZCU1dZN1NVRkRTU3hCUVVGbE8wVkJSMjVDTzBsQlEwa3NRVUZCVVR0SlFVTlNMRUZCUVZVN1NWaFNXanROVjAxR08xRkJTMDBzUVVGQlVUdFJRVU5TTEVGQlFWazdPMEZCUjJ4Q08wVkJRMFVzUVVGQlV6dEZRVU5VTEVGQlFWazdSVUZKWkR0SlFVTkpMRUZCUVZNN1NVRkRWQ3hCUVVGbE8wbFlka0pxUWp0TlYzRkNSanRSUVV0TkxFRkJRVk03TzBGQlRXWTdSVm8zUlZFc1FWazRSVTQ3UlZveFJVMHNRVmt5UlU0N1JXSjZSRUVzUVVGQllUdEZRVU5pTEVGQlFXZENPMFZoTWtSc1FqdEpXamxGVVN4QldTdEZTanRKUVVOQkxFRkJRVms3UlVGRmFFSTdTVUZEU1N4QlFVRlRPMGxCUTFRc1FVRkJVVHRKUVVOU0xFRkJRVTg3UlVGTFdEdEpRVU5KTEVGQlFWTTdTVUZEVkN4QlFVRlBPMFZCUlZnN1NVRkRTU3hCUVVGUk8wbGFMMFpLTEVGWlowZEtPMGxCUTBFc1FVRkJWenRKUVVOWUxFRkJRV0U3U1VGRFlpeEJRVUZQTzBsQlExQXNRVUZCV1R0SlFVVm9RaXhCUVVGelFqczdUVnAwUjJRc1FWbDNSMFk3VFZvMVIwVXNRVmsyUjBZN1NWaG9SVW83VFZkeFJFWTdVVUZqVFN4QlFVRlJPMFZCUldRN1NVRkRTU3hCUVVGVE8wbEJRMVFzUVVGQllUdEZRVVZxUWp0SlFVTkpMRUZCUVZNN1NVRkRWQ3hCUVVGaE8wbEJSV3BDTzAxQlEwMHNRVUZCV1RzN1FVRkhiRUk3UlVGRFJTeEJRVUZUTzBWQlExUXNRVUZCWjBJN1JWaHVSbWhDTzBsWGFVWkdPMDFCUzBrc1FVRkJVenRGUVZOaU8wbEJRMGtzUVVGQlZ6dEpZak5JWWl4QlFVRlpPMGxCUTFvc1FVRkJaVHRGWVN0SWFrSTdTVUZEU1N4QlFVRlpPenRCUVVWb1FpeEJRVUYxUWl4QlFVRjFRaXhCUVVGeFFqdEZRVVZxUlN4QlFVRlpPenRCUVVsa08wVkJRMFVzUVVGQll6dEZRVVZvUWl4QlFVRlpPMGxhT1VwS0xFRlpLMHBLTzBsQlJVb3NRVUZCV1N4QlFVRkxPMDFhTVVwT0xFRlpNa3BNTzBWQlIwNHNRVUZCV1N4QlFVRkRPMGxCUTFBc1FVRkJhVUk3TzBGRGNFdDJRanRGUVVORExFRkJRV2RDTzBWYU1FTm1PMGxaTTBOR08wMUJTVVVzUVVGQlV6czdRVUZIV0R0RlFVTkRMRUZCUVZrN1JVRkRXaXhCUVVGVE8wVkJRMVFzUVVGQlV6dEZRVU5VTEVGQlFVODdSVnBuUTA0N1NWbHdRMFk3VFVGUFJTeEJRVUZUTzAxQlExUXNRVUZCVXp0RlFVbFlMRUZCUVRSQ08wbEJRM3BDTEVGQlFVODdTVnAxUWxJN1RWbDRRa1lzUVVGQk5FSTdVVUZKZUVJc1FVRkJVenRSUVVOVUxFRkJRVTg3VVVGRldDeEJRVUUwUWl4QlFVRk5PMVZCUXpkQ0xFRkJRVk03VlVGRFZDeEJRVUZQTzBWQlIxbzdTVUZEUlN4QlFVRlpPMGxhVjFvN1RWbGFSanRSUVVsSExFRkJRVms3U1VGRlppeEJRVUYxUWp0TlFVTndRaXhCUVVGVE8wMUJRMVFzUVVGQlZ6dE5RVU5ZTEVGQlFXVTdUVnBIYUVJN1VWbE9SaXhCUVVGMVFqdFZRVTl1UWl4QlFVRlhPMVZCUTFnc1FVRkJVenRWUVVWaUxFRkJRWFZDTEVGQlFVczdXVUZEZEVJc1FVRkJVenRWUVVkbUxFRkJRWFZDTEVGQlFVc3NRVUZCWVR0WlFVTnFReXhCUVVGVE8wbEJTV3BDTEVGQlFYVkNMRUZCUVZjc1FVRkJSenROUVVNNVFpeEJRVUZYTzAxYVpHaENPMUZaWVVZc1FVRkJkVUlzUVVGQlZ5eEJRVUZITzFWQlJ6VkNMRUZCUVZjN08wRkJSWEJDTzBWQlEwTXNRVUZCV1R0RlFVTmFMRUZCUVU4N1JVRkZVanRKUVVORkxFRkJRVkU3U1VGRFVpeEJRVUZUTzBsQlExUXNRVUZCV1R0SlFVTmFMRUZCUVZNN1NVRkRWQ3hCUVVGUk8wbGFNMEpTTzAxWmMwSkdPMUZCVVVrc1FVRkJVenRGUVVWaUxFRkJRVzFDTzBsQlJXcENMRUZCUVZNN1NVRkRWQ3hCUVVGUk8wbEJSVllzUVVGQmJVSXNRVUZCUnp0TlFVTnVRaXhCUVVGVE8wMUJRMVFzUVVGQlVUdE5RVU5TTEVGQlFXTTdUVUZEWkN4QlFVRnRRanROUVVOdVFpeEJRVUZSTzAxQlExSXNRVUZCVXp0TlFVTmFMRUZCUVcxQ0xFRkJRVWNzUVVGQlJUdFJRVU51UWl4QlFVRmpPMDFCUTI1Q0xFRkJRVzFDTEVGQlFVY3NRVUZCUlR0UlFVTnVRaXhCUVVGdFFqdEZRVVY0UWl4QlFVRnRRaXhCUVVGSkxFRkJRVzFDTEVGQlFVY3NRVUZCYlVJN1NVRkRPVVFzUVVGQlZ6dEpRVU5ZTEVGQlFXVTdTVnB1UkdZN1RWbHBSRVlzUVVGQmJVSXNRVUZCU1N4QlFVRnRRaXhCUVVGSExFRkJRVzFDTzFGQlN6ZEVMRUZCUVZjN08xZERiRWRJTzBWQlExZzdTVUZEU1N4QlFVRlRPenRGUVVOaU8wbEJRMGtzUVVGQlV6czdRVUZGWWp0RlpFaFJMRUZqU1U0N1JVRkRRU3hCUVVGaE8wVkJRMklzUVVGQll6dEZRVU5rTEVGQlFWRTdSVUZEVWl4QlFVRlhPenRCUVVWaUxFRkJRV3RDTzBWQlEyaENMRUZCUVdFN08wRkJSV1k3UldSaVVTeEJZMk5PT3p0QlFVZEdPMFZCUTBVc1FVRkJVenRGUVVOVUxFRkJRVk03UlVGRFZDeEJRVUZQTzBWaWNVSlFPMGxoZUVKR08wMUJUVWtzUVVGQlR6dEZZbXRDVkR0SllYaENSanROUVZOSkxFRkJRVk03VFVGRFZDeEJRVUZQT3p0QlFVVllMRUZCUVd0Q08wVkJRMmhDTEVGQlFWRTdSVUZEVWl4QlFVRlRPenRCUVV0WUxFRkJRVWtzUVVGQlRTeEJRVUZKTzBWa2VFTk9MRUZqZVVOS08wRkJSVW9zUVVGQlJ5eEJRVUZQTEVGQlFVMHNRVUZCUnl4QlFVRlBPMFZCUlhSQ0xFRkJRVk03UlVGRFZDeEJRVUZaTzBWQlExb3NRVUZCWXpzN1FVRkZiRUk3UlVGRFJTeEJRVUZUTzBWaVRGUTdTV0ZKUmp0TlFVbEpMRUZCUVZNN08wRkJSV0k3UlVGRFJTeEJRVUZUTzBWaVdGUTdTV0ZWUmp0TlFVbEpMRUZCUVZNN08wRkJkMEppTEVGQlFXdENMRUZCUVdFN1JXUnVSblpDTEVGamIwWktPMFZCUTBFc1FVRkJVenM3UVVOd1JrNHNRVUZCWjBJc1FVRkJXVHRGUVVOcVF5eEJRVUZUTzBWQlExUXNRVUZCVXpzN1FVRkZXRHRGUVVWRkxFRkJRV2RDTzBWa2MwTm9RanRKWTNCRFJqdE5RVWROTEVGQlFWazdSVUZGYkVJc1FVRkJkVUk3U1VGRGFrSXNRVUZCWVR0SlFVTmlMRUZCUVdkQ08wVkJTWFJDTEVGQlFYRkNMRUZCUVVrN1NVRkRia0lzUVVGQldUdEZRVVZzUWl4QlFVRnhRanRKWm5aQ1lpeEJSR2xFVGp0SlFUZERaU3hCUVRoRFpqdEpRVU5CTEVGQlFWYzdTVUV6UTBvc1FVRTBRMUE3U1VGRFFTeEJRVUZoTzBsQkwwSmlMRUZCUVdFN1NVRkRZaXhCUVVGblFqdEZaMEpKYkVJc1FVRkJjVUk3U1VGRFppeEJRVUZqTzBsQlEyUXNRVUZCV1R0SlFVVnNRaXhCUVVGeFFpeEJRVUZITzAxQlEyaENMRUZCUVZrN1JVRkZjRUlzUVVGQmNVSTdTVUZEWml4QlFVRmpPMFZCUlhCQ0xFRkJRWEZDTzBsQlEyWXNRVUZCVVR0SlFVTlNMRUZCUVU4N1NVRkZZaXhCUVVGeFFpeEJRVUZITzAxQlEyaENMRUZCUVU4N08wRkJSMlk3UlVGRFJTeEJRVUZUTzBWQlExUXNRVUZCVXpzN1FVRk5XRHRGUVVORkxFRkJRVTA3TzBGQlExSTdSVUZEUlN4QlFVRk5PenRCUVVkU08wVm1NVVJoTEVGbE1rUllPMFZCUTBZc1FVRkJaVHRKWmpkRVVDeEJaVGhFU2pzN1FXUnFRa1k3UldOMVFrWTdTVUZIVFN4QlFVRlpPMEZCUld4Q0xFRkJRV2xDTEVGQlFVazdSVUZEWml4QlFVRlpPMEZCUld4Q0xFRkJRV2xDTzBWbU5VVlVMRUZFYVVST08wVkJOME5sTEVGQk9FTm1PMFZCUTBFc1FVRkJWenRGUVRORFNpeEJRVFJEVUR0RlFVTkJMRUZCUVdFN1FXZENNRUptTEVGQlFXbENPMFZtT1VWS0xFRkVkMFJZTzBWQmNrUmxMRUZCYzBSbU8wVkJRMEVzUVVGQlZ6dEZRV3BFVGl4QlFXdEVURHRGUVVOQkxFRkJRV0U3UlVGRFlpeEJRVUZuUWp0RlFUVkRhRUlzUVVGQldUdEZRVU5hTEVGQlFXVTdRV2RDSzBScVFpeEJRVUZwUWp0RlpqTkZUaXhCWlRSRlREdEZRVU5CTEVGQlFWYzdSVUZEV0N4QlFVRlpPMEZCUld4Q0xFRkJRV2xDTzBWbWRrWlVMRUZFTWtWT08wVkJka1ZsTEVGQmQwVm1PMFZCUTBFc1FVRkJWenRGUVVOWUxFRkJRVms3UlVGd1JWQXNRVUZ4UlV3N1JVRTNSRUVzUVVGQldUdEZRVU5hTEVGQlFXVTdPMEZuUW5kRmFrSTdSVUZEUlN4QlFVRm5RanRGUVVOb1FpeEJRVUZWTzBWQlJWb3NRVUZCV1R0SlppOUdTaXhCWldkSFNqdEpRVU5LTEVGQlFWa3NRVUZCUXp0TlptaEhRU3hCWldsSFVEdEZRVU5PTEVGQlFWazdTV1l6Umtvc1FXVTBSa283TzBGRGNFZEtPMFZCUTBVc1FVRkJXVHRGUVVWa0xFRkJRV1VzUVVGQlR5eEJRVUZsTEVGQlFVc3NRVUZCWjBJc1FVRkJaU3hCUVVGTExFRkJRV2xDTEVGQlFXVXNRVUZCU3l4QlFVRnRRaXhCUVVGbExFRkJRVXNzUVVGQmFVSXNRVUZCWlN4QlFVRkxMRUZCUVdNc1FVRkJaU3hCUVVGTExFRkJRV1VzUVVGQlpTeEJRVUZMTEVGQlFXTXNRVUZCWlN4QlFVRkxMRUZCUVdkQ0xFRkJRV1VzUVVGQlN5eEJRVUZsTEVGQlFXVXNRVUZCU3l4QlFVRmxMRUZCUVdVc1FVRkJTeXhCUVVGdFFpeEJRVUZsTEVGQlFVc3NRVUZCZVVJc1FVRkJaU3hCUVVGTExFRkJRV2RDTEVGQlFXVXNRVUZCU3l4QlFVRmxMRUZCUVdVc1FVRkJTeXhCUVVGbExFRkJRV1U3U1doQ1R6bHFRaXhCWjBKVlVqdEpRVU5CTEVGQlFWRTdTVUZCVlN4QlFVTk1PMGxCUTJJc1FVRkJaVHRKUVVGQkxFRkJRMGc3U1VGRFdpeEJRVUZUTzBsQlExUXNRVUZCVXp0SlFVTlVMRUZCUVU4N1JVRkhWaXhCUVVGbE8wbEJRMWdzUVVGQlV6dEZRVVZpTEVGQlFXVXNRVUZCU3l4QlFVRnBRaXhCUVVGbExFRkJRVXNzUVVGQlowSXNRVUZCWlN4QlFVRkxPMGxCUjNwR0xFRkJRVk03UlVGSFlqdEpRVU5KTEVGQlFWTTdTVUZEVkN4QlFVRlBPMGxCUTFBc1FVRkJUenRGUVVWWUxFRkJRVEpDTzBsQlEzWkNMRUZCUVZNN1NVRkRWQ3hCUVVGUE8wbEJRMUFzUVVGQlVUdEZRVVZhTEVGQlFXVTdTV2hDTjBOUUxFRm5RamhEU2p0SlFVTkJMRUZCUVdVN1NVRkRaaXhCUVVGUk8wbEJRMUlzUVVGQlZUdEpRVU5XTEVGQlFWRTdTVUZGV2l4QlFVRmxMRUZCUVZVN1RVRkRia0lzUVVGQlR6dE5RVU5RTEVGQlFWTTdUVUZEVkN4QlFVRlZPMDFCUTFZc1FVRkJTenROUVVOTUxFRkJRVTg3VFVGRFVDeEJRVUZQTzAxQlExQXNRVUZCVVR0RlFVZGtMRUZCUVdVN1NXaENPVVJRTEVGblFpdEVTanRKUVVOQkxFRkJRVms3U1VGRFdpeEJRVUZsTzBsQlEyWXNRVUZCVVR0SmFFSTVSRW9zUVdkQ0swUktPMGxCUTBFc1FVRkJVVHRKUVVOU0xFRkJRVk03U1VGRFZDeEJRVUZYTzBsQlExZ3NRVUZCVVR0SlFVTlNMRUZCUVZVN1NVRkZWaXhCUVVGak8wbEJRMlFzUVVGQlR6dEpRVU5RTEVGQlFXMUNPMGxCUTI1Q0xFRkJRV2xDTzBsQlEycENMRUZCUVZrN08wRkJSMmhDTzBWb1FtNUdVU3hCWjBKdlJrNDdSVUZEUVN4QlFVRlZPMFZCUTFZc1FVRkJUVHM3UVVGSFVpeEJRVUZwUWl4QlFVRlZPMFZCUTNwQ0xFRkJRVk1pTENKbWFXeGxJam9pYzNSNWJHVXVZM056SWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaUx5OGdQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQxY2JpOHZJRTV2Y20xaGJHbDZaUzV6WTNOeklHSmhjMlZrSUc5dUlFNXBZMjlzWVhNZ1IyRnNiR0ZuYUdWeUlHRnVaQ0JLYjI1aGRHaGhiaUJPWldGc0ozTmNiaTh2SUc1dmNtMWhiR2w2WlM1amMzTWdkakl1TVM0eklId2dUVWxVSUV4cFkyVnVjMlVnZkNCbmFYUXVhVzh2Ym05eWJXRnNhWHBsWEc0dkx5QTlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFZ4dVhHNHZMeUE5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBWeHVMeThnVG05eWJXRnNhWHBsTG5OamMzTWdjMlYwZEdsdVozTmNiaTh2SUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlYRzVjYmx4dUx5OGdVMlYwSUhSdklIUnlkV1VnYVdZZ2VXOTFJSGRoYm5RZ2RHOGdZV1JrSUhOMWNIQnZjblFnWm05eUlFbEZOaUJoYm1RZ1NVVTNYRzR2THlCT2IzUnBZMlU2SUhObGRIUnBibWNnZEc4Z2RISjFaU0J0YVdkb2RDQnlaVzVrWlhJZ2MyOXRaU0JsYkdWdFpXNTBjMXh1THk4Z2MyeHBaMmgwYkhrZ1pHbG1abVZ5Wlc1MGJIa2dkR2hoYmlCM2FHVnVJSE5sZENCMGJ5Qm1ZV3h6WlZ4dUpHeGxaMkZqZVY5emRYQndiM0owWDJadmNsOXBaVG9nWm1Gc2MyVWdJV1JsWm1GMWJIUTdJQzh2SUZWelpXUWdZV3h6YnlCcGJpQkRiMjF3WVhOelhHNWNibHh1THk4Z1UyVjBJSFJvWlNCa1pXWmhkV3gwSUdadmJuUWdabUZ0YVd4NUlHaGxjbVVnYzI4Z2VXOTFJR1J2YmlkMElHaGhkbVVnZEc4Z2IzWmxjbkpwWkdVZ2FYUWdiR0YwWlhKY2JpUnViM0p0WVd4cGVtVmtYMlp2Ym5SZlptRnRhV3g1T2lCellXNXpMWE5sY21sbUlDRmtaV1poZFd4ME8xeHVYRzRrYm05eWJXRnNhWHBsWDJobFlXUnBibWR6T2lCMGNuVmxJQ0ZrWldaaGRXeDBPMXh1WEc0a2FERmZabTl1ZEY5emFYcGxPaUF5WlcwZ0lXUmxabUYxYkhRN1hHNGthREpmWm05dWRGOXphWHBsT2lBeExqVmxiU0FoWkdWbVlYVnNkRHRjYmlSb00xOW1iMjUwWDNOcGVtVTZJREV1TVRkbGJTQWhaR1ZtWVhWc2REdGNiaVJvTkY5bWIyNTBYM05wZW1VNklERmxiU0FoWkdWbVlYVnNkRHRjYmlSb05WOW1iMjUwWDNOcGVtVTZJREF1T0RObGJTQWhaR1ZtWVhWc2REdGNiaVJvTmw5bWIyNTBYM05wZW1VNklEQXVOelZsYlNBaFpHVm1ZWFZzZER0Y2JseHVKR2d4WDIxaGNtZHBiam9nTUM0Mk4yVnRJREFnSVdSbFptRjFiSFE3WEc0a2FESmZiV0Z5WjJsdU9pQXdMamd6WlcwZ01DQWhaR1ZtWVhWc2REdGNiaVJvTTE5dFlYSm5hVzQ2SURGbGJTQXdJQ0ZrWldaaGRXeDBPMXh1SkdnMFgyMWhjbWRwYmpvZ01TNHpNMlZ0SURBZ0lXUmxabUYxYkhRN1hHNGthRFZmYldGeVoybHVPaUF4TGpZM1pXMGdNQ0FoWkdWbVlYVnNkRHRjYmlSb05sOXRZWEpuYVc0NklESXVNek5sYlNBd0lDRmtaV1poZFd4ME8xeHVYRzRrWW1GamEyZHliM1Z1WkRvZ0kyWm1aaUFoWkdWbVlYVnNkRHRjYmlSamIyeHZjam9nSXpBd01DQWhaR1ZtWVhWc2REdGNibHh1THk4Z1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDFjYmk4dklFaFVUVXcxSUdScGMzQnNZWGtnWkdWbWFXNXBkR2x2Ym5OY2JpOHZJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVhHNWNiaTh2SUVOdmNuSmxZM1J6SUdKc2IyTnJJR1JwYzNCc1lYa2dibTkwSUdSbFptbHVaV1FnYVc0Z1NVVTJMemN2T0M4NUlDWWdSa1l6WEc1Y2JtRnlkR2xqYkdVc1hHNWhjMmxrWlN4Y2JtUmxkR0ZwYkhNc1hHNW1hV2RqWVhCMGFXOXVMRnh1Wm1sbmRYSmxMRnh1Wm05dmRHVnlMRnh1YUdWaFpHVnlMRnh1YUdkeWIzVndMRnh1Ym1GMkxGeHVjMlZqZEdsdmJpeGNibk4xYlcxaGNua2dlMXh1SUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4dWZWeHVYRzR2THlCRGIzSnlaV04wY3lCcGJteHBibVV0WW14dlkyc2daR2x6Y0d4aGVTQnViM1FnWkdWbWFXNWxaQ0JwYmlCSlJUWXZOeTg0THprZ0ppQkdSak5jYmx4dVlYVmthVzhzWEc1allXNTJZWE1zWEc1MmFXUmxieUI3WEc0Z0lDQWdaR2x6Y0d4aGVUb2dhVzVzYVc1bExXSnNiMk5yTzF4dUlDQWdJRUJwWmlBa2JHVm5ZV041WDNOMWNIQnZjblJmWm05eVgybGxJSHRjYmlBZ0lDQWdJQ0FnS21ScGMzQnNZWGs2SUdsdWJHbHVaVHRjYmlBZ0lDQWdJQ0FnS25wdmIyMDZJREU3WEc0Z0lDQWdmVnh1ZlZ4dVhHNHZMeUF4TGlCUWNtVjJaVzUwY3lCdGIyUmxjbTRnWW5KdmQzTmxjbk1nWm5KdmJTQmthWE53YkdGNWFXNW5JQ2RoZFdScGJ5Y2dkMmwwYUc5MWRDQmpiMjUwY205c2MxeHVMeThnTWk0Z1VtVnRiM1psSUdWNFkyVnpjeUJvWldsbmFIUWdhVzRnYVU5VE5TQmtaWFpwWTJWelhHNWNibUYxWkdsdk9tNXZkQ2hiWTI5dWRISnZiSE5kS1NCN1hHNGdJQ0FnWkdsemNHeGhlVG9nYm05dVpUc2dMeThnTVZ4dUlDQWdJR2hsYVdkb2REb2dNRHNnTHk4Z01seHVmVnh1WEc0dkwxeHVMeThnUVdSa2NtVnpjeUJnVzJocFpHUmxibDFnSUhOMGVXeHBibWNnYm05MElIQnlaWE5sYm5RZ2FXNGdTVVVnT0M4NUxseHVMeThnU0dsa1pTQjBhR1VnWUhSbGJYQnNZWFJsWUNCbGJHVnRaVzUwSUdsdUlFbEZMQ0JUWVdaaGNta3NJR0Z1WkNCR2FYSmxabTk0SUR3Z01qSXVYRzR2TDF4dVhHNWJhR2xrWkdWdVhTd2dkR1Z0Y0d4aGRHVWdlMXh1SUNBZ0lHUnBjM0JzWVhrNklHNXZibVU3WEc1OVhHNWNiaTh2SUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlYRzR2THlCQ1lYTmxYRzR2THlBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVnh1WEc0dkx5QXhMaUJEYjNKeVpXTjBjeUIwWlhoMElISmxjMmw2YVc1bklHOWtaR3g1SUdsdUlFbEZOaTgzSUhkb1pXNGdZbTlrZVNCbWIyNTBMWE5wZW1VZ2FYTWdjMlYwSUhWemFXNW5JR1Z0SUhWdWFYUnpYRzR2THlBZ0lDQm9kSFJ3T2k4dlkyeGhaMjUxZEM1amIyMHZZbXh2Wnk4ek5EZ3ZJMk0zT1RCY2JpOHZJREl1SUZCeVpYWmxiblJ6SUdsUFV5QjBaWGgwSUhOcGVtVWdZV1JxZFhOMElHRm1kR1Z5SUc5eWFXVnVkR0YwYVc5dUlHTm9ZVzVuWlN3Z2QybDBhRzkxZENCa2FYTmhZbXhwYm1jZ2RYTmxjaUI2YjI5dFhHNHZMeUFnSUNCM2QzY3VORFUyWW1WeVpXRnpkSEpsWlhRdVkyOXRMMkZ5WTJocGRtVXZNakF4TURFeUwyTnZiblJ5YjJ4c2FXNW5YM1JsZUhSZmMybDZaVjlwYmw5ellXWmhjbWxmWm05eVgybHZjMTkzYVhSb2IzVjBYMlJwYzJGaWJHbHVaMTkxYzJWeVgzcHZiMjB2WEc1Y2JtaDBiV3dnZTF4dUlDQWdJRUJwWmlBa2JHVm5ZV041WDNOMWNIQnZjblJmWm05eVgybGxJSHRjYmlBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lBeE1EQWxPeUF2THlBeFhHNGdJQ0FnZlZ4dVhIUmNkQzh2WW1GamEyZHliM1Z1WkRvZ0pHSmhZMnRuY205MWJtUTdYRzVjZEZ4MEx5OWpiMnh2Y2pvZ0pHTnZiRzl5TzF4dUlDQWdJQzEzWldKcmFYUXRkR1Y0ZEMxemFYcGxMV0ZrYW5WemREb2dNVEF3SlRzZ0x5OGdNbHh1SUNBZ0lDMXRjeTEwWlhoMExYTnBlbVV0WVdScWRYTjBPaUF4TURBbE95QXZMeUF5WEc1OVhHNWNiaTh2SUVGa1pISmxjM05sY3lCbWIyNTBMV1poYldsc2VTQnBibU52Ym5OcGMzUmxibU41SUdKbGRIZGxaVzRnSjNSbGVIUmhjbVZoSnlCaGJtUWdiM1JvWlhJZ1ptOXliU0JsYkdWdFpXNTBjeTVjYmx4dWFIUnRiQ3hjYm1KMWRIUnZiaXhjYm1sdWNIVjBMRnh1YzJWc1pXTjBMRnh1ZEdWNGRHRnlaV0VnZTF4dUlDQWdJQzh2Wm05dWRDMW1ZVzFwYkhrNklDUnViM0p0WVd4cGVtVmtYMlp2Ym5SZlptRnRhV3g1TzF4dWZWeHVYRzR2THlCQlpHUnlaWE56WlhNZ2JXRnlaMmx1Y3lCb1lXNWtiR1ZrSUdsdVkyOXljbVZqZEd4NUlHbHVJRWxGTmk4M1hHNWNibUp2WkhrZ2UxeHVJQ0FnSUcxaGNtZHBiam9nTUR0Y2JuMWNibHh1THk4Z1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDFjYmk4dklFeHBibXR6WEc0dkx5QTlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFZ4dVhHNHZMeUF4TGlCU1pXMXZkbVVnZEdobElHZHlZWGtnWW1GamEyZHliM1Z1WkNCamIyeHZjaUJtY205dElHRmpkR2wyWlNCc2FXNXJjeUJwYmlCSlJTQXhNQzVjYmk4dklESXVJRUZrWkhKbGMzTmxjeUJ2ZFhSc2FXNWxJR1JwYzNCc1lYbGxaQ0J2WkdSc2VTQnBiaUJEYUhKdmJXVmNiaTh2SURNdUlFbHRjSEp2ZG1WeklISmxZV1JoWW1sc2FYUjVJSGRvWlc0Z1ptOWpkWE5sWkNCaGJtUWdZV3h6YnlCdGIzVnpaU0JvYjNabGNtVmtJR2x1SUdGc2JDQmljbTkzYzJWeWMxeHVMeThnSUNBZ2NHVnZjR3hsTG05d1pYSmhMbU52YlM5d1lYUnlhV05yYkM5bGVIQmxjbWx0Wlc1MGN5OXJaWGxpYjJGeVpDOTBaWE4wWEc1Y2JtRWdlMXh1SUNBZ0lDOHZJREZjYmx4dUlDQWdJR0poWTJ0bmNtOTFibVE2SUhSeVlXNXpjR0Z5Wlc1ME8xeHVYRzRnSUNBZ0x5OGdNbHh1WEc0Z0lDQWdKanBtYjJOMWN5QjdYRzRnSUNBZ0lDQWdJQzh2YjNWMGJHbHVaVG9nZEdocGJpQmtiM1IwWldRN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnTHk4Z00xeHVYRzRnSUNBZ0pqcG9iM1psY2l4Y2JpQWdJQ0FtT21GamRHbDJaU0I3WEc0Z0lDQWdJQ0FnSUc5MWRHeHBibVU2SURBN1hHNGdJQ0FnZlZ4dWZWeHVYRzR2THlBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVnh1THk4Z1ZIbHdiMmR5WVhCb2VWeHVMeThnUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMWNibHh1THk4Z1FXUmtjbVZ6YzJWeklHWnZiblFnYzJsNlpYTWdZVzVrSUcxaGNtZHBibk1nYzJWMElHUnBabVpsY21WdWRHeDVJR2x1SUVsRk5pODNYRzR2THlCQlpHUnlaWE56WlhNZ1ptOXVkQ0J6YVhwbGN5QjNhWFJvYVc0Z0ozTmxZM1JwYjI0bklHRnVaQ0FuWVhKMGFXTnNaU2NnYVc0Z1JrWTBLeXdnUTJoeWIyMWxMQ0JUTlZ4dVhHNHZLaUJBYVdZZ1hGd2tibTl5YldGc2FYcGxYMmhsWVdScGJtZHpJRDA5SUhSeWRXVWdlMXh1SUNBZ0lHZ3hJSHRjYmlBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lCY1hDUm9NVjltYjI1MFgzTnBlbVU3WEc0Z0lDQWdJQ0FnSUcxaGNtZHBiam9nWEZ3a2FERmZiV0Z5WjJsdU8xeHVJQ0FnSUgxY2JseHVJQ0FnSUdneUlIdGNiaUFnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUJjWENSb01sOW1iMjUwWDNOcGVtVTdYRzRnSUNBZ0lDQWdJRzFoY21kcGJqb2dYRndrYURKZmJXRnlaMmx1TzF4dUlDQWdJSDFjYmx4dUlDQWdJR2d6SUh0Y2JpQWdJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQmNYQ1JvTTE5bWIyNTBYM05wZW1VN1hHNGdJQ0FnSUNBZ0lHMWhjbWRwYmpvZ1hGd2thRE5mYldGeVoybHVPMXh1SUNBZ0lIMWNibHh1SUNBZ0lHZzBJSHRjYmlBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lCY1hDUm9ORjltYjI1MFgzTnBlbVU3WEc0Z0lDQWdJQ0FnSUcxaGNtZHBiam9nWEZ3a2FEUmZiV0Z5WjJsdU8xeHVJQ0FnSUgxY2JseHVJQ0FnSUdnMUlIdGNiaUFnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUJjWENSb05WOW1iMjUwWDNOcGVtVTdYRzRnSUNBZ0lDQWdJRzFoY21kcGJqb2dYRndrYURWZmJXRnlaMmx1TzF4dUlDQWdJSDFjYmx4dUlDQWdJR2cySUh0Y2JpQWdJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQmNYQ1JvTmw5bWIyNTBYM05wZW1VN1hHNGdJQ0FnSUNBZ0lHMWhjbWRwYmpvZ1hGd2thRFpmYldGeVoybHVPMXh1SUNBZ0lIMWNibjBnS2k5Y2JseHVMeThnUVdSa2NtVnpjMlZ6SUhOMGVXeHBibWNnYm05MElIQnlaWE5sYm5RZ2FXNGdTVVVnT0M4NUxDQlROU3dnUTJoeWIyMWxYRzVjYm1GaVluSmJkR2wwYkdWZElIdGNiaUFnSUNCaWIzSmtaWEl0WW05MGRHOXRPaUF4Y0hnZ1pHOTBkR1ZrTzF4dWZWeHVYRzR2THlCQlpHUnlaWE56WlhNZ2MzUjViR1VnYzJWMElIUnZJQ2RpYjJ4a1pYSW5JR2x1SUVaR015c3NJRk0wTHpVc0lFTm9jbTl0WlZ4dVhHNWlMRnh1YzNSeWIyNW5JSHRjYmlBZ0lDQm1iMjUwTFhkbGFXZG9kRG9nWW05c1pEdGNibjFjYmx4dVFHbG1JQ1JzWldkaFkzbGZjM1Z3Y0c5eWRGOW1iM0pmYVdVZ2UxeHVJQ0FnSUdKc2IyTnJjWFZ2ZEdVZ2UxeHVJQ0FnSUNBZ0lDQnRZWEpuYVc0NklERmxiU0EwTUhCNE8xeHVJQ0FnSUgxY2JuMWNibHh1THk4Z1FXUmtjbVZ6YzJWeklITjBlV3hwYm1jZ2JtOTBJSEJ5WlhObGJuUWdhVzRnVXpVc0lFTm9jbTl0WlZ4dVhHNWtabTRnZTF4dUlDQWdJR1p2Ym5RdGMzUjViR1U2SUdsMFlXeHBZenRjYm4xY2JseHVMeThnUVdSa2NtVnpjMlZ6SUhOMGVXeHBibWNnYm05MElIQnlaWE5sYm5RZ2FXNGdTVVUyTHpjdk9DODVYRzVjYm0xaGNtc2dlMXh1SUNBZ0lHSmhZMnRuY205MWJtUTZJQ05tWmpBN1hHNGdJQ0FnWTI5c2IzSTZJQ013TURBN1hHNTlYRzVjYmk4dklFRmtaSEpsYzNObGN5QnRZWEpuYVc1eklITmxkQ0JrYVdabVpYSmxiblJzZVNCcGJpQkpSVFl2TjF4dVFHbG1JQ1JzWldkaFkzbGZjM1Z3Y0c5eWRGOW1iM0pmYVdVZ2UxeHVJQ0FnSUhBc1hHNGdJQ0FnY0hKbElIdGNiaUFnSUNBZ0lDQWdiV0Z5WjJsdU9pQXhaVzBnTUR0Y2JpQWdJQ0I5WEc1OVhHNWNiaTh2SUVOdmNuSmxZM1J6SUdadmJuUWdabUZ0YVd4NUlITmxkQ0J2WkdSc2VTQnBiaUJKUlRZc0lGTTBMelVzSUVOb2NtOXRaVnh1THk4Z1pXNHVkMmxyYVhCbFpHbGhMbTl5Wnk5M2FXdHBMMVZ6WlhJNlJHRjJhV1JuYjNSb1ltVnlaeTlVWlhOME5UbGNibHh1WTI5a1pTeGNibXRpWkN4Y2JuQnlaU3hjYm5OaGJYQWdlMXh1SUNBZ0lHWnZiblF0Wm1GdGFXeDVPaUJ0YjI1dmMzQmhZMlVzSUhObGNtbG1PMXh1SUNBZ0lFQnBaaUFrYkdWbllXTjVYM04xY0hCdmNuUmZabTl5WDJsbElIdGNiaUFnSUNBZ0lDQWdYMlp2Ym5RdFptRnRhV3g1T2lBblkyOTFjbWxsY2lCdVpYY25MQ0J0YjI1dmMzQmhZMlU3WEc0Z0lDQWdmVnh1SUNBZ0lHWnZiblF0YzJsNlpUb2dNV1Z0TzF4dWZWeHVYRzR2THlCSmJYQnliM1psY3lCeVpXRmtZV0pwYkdsMGVTQnZaaUJ3Y21VdFptOXliV0YwZEdWa0lIUmxlSFFnYVc0Z1lXeHNJR0p5YjNkelpYSnpYRzVjYm5CeVpTQjdYRzRnSUNBZ2QyaHBkR1V0YzNCaFkyVTZJSEJ5WlR0Y2JpQWdJQ0IzYUdsMFpTMXpjR0ZqWlRvZ2NISmxMWGR5WVhBN1hHNGdJQ0FnZDI5eVpDMTNjbUZ3T2lCaWNtVmhheTEzYjNKa08xeHVmVnh1WEc0dkx5QlRaWFFnWTI5dWMybHpkR1Z1ZENCeGRXOTBaU0IwZVhCbGN5NWNibHh1Y1NCN1hHNGdJQ0FnY1hWdmRHVnpPaUJjSWx4Y01qQXhRMXdpSUZ3aVhGd3lNREZFWENJZ1hDSmNYREl3TVRoY0lpQmNJbHhjTWpBeE9Wd2lPMXh1ZlZ4dVhHNHZMeUF4TGlCQlpHUnlaWE56WlhNZ1ExTlRJSEYxYjNSbGN5QnViM1FnYzNWd2NHOXlkR1ZrSUdsdUlFbEZOaTgzWEc0dkx5QXlMaUJCWkdSeVpYTnpaWE1nY1hWdmRHVWdjSEp2Y0dWeWRIa2dibTkwSUhOMWNIQnZjblJsWkNCcGJpQlRORnh1WEc0dkx5QXhYRzVBYVdZZ0pHeGxaMkZqZVY5emRYQndiM0owWDJadmNsOXBaU0I3WEc0Z0lDQWdjU0I3WEc0Z0lDQWdJQ0FnSUhGMWIzUmxjem9nYm05dVpUdGNiaUFnSUNCOVhHNTlYRzVjYmk4dklESmNibkVnZTF4dUlDQWdJQ1k2WW1WbWIzSmxMRnh1SUNBZ0lDWTZZV1owWlhJZ2UxeHVJQ0FnSUNBZ0lDQmpiMjUwWlc1ME9pQW5KenRjYmlBZ0lDQWdJQ0FnWTI5dWRHVnVkRG9nYm05dVpUdGNiaUFnSUNCOVhHNTlYRzVjYmk4dklFRmtaSEpsYzNNZ2FXNWpiMjV6YVhOMFpXNTBJR0Z1WkNCMllYSnBZV0pzWlNCbWIyNTBJSE5wZW1VZ2FXNGdZV3hzSUdKeWIzZHpaWEp6TGx4dVhHNHZLaUF2YzIxaGJHd2dlMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dPREFsTzF4dWZTQXFMMXh1WEc0dkx5QlFjbVYyWlc1MGN5QnpkV0lnWVc1a0lITjFjQ0JoWm1abFkzUnBibWNnYkdsdVpTMW9aV2xuYUhRZ2FXNGdZV3hzSUdKeWIzZHpaWEp6WEc0dkx5Qm5hWE4wTG1kcGRHaDFZaTVqYjIwdk5ERXpPVE13WEc1Y2JuTjFZaXhjYm5OMWNDQjdYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQTNOU1U3WEc0Z0lDQWdiR2x1WlMxb1pXbG5hSFE2SURBN1hHNGdJQ0FnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4dUlDQWdJSFpsY25ScFkyRnNMV0ZzYVdkdU9pQmlZWE5sYkdsdVpUdGNibjFjYmx4dWMzVndJSHRjYmlBZ0lDQjBiM0E2SUMwd0xqVmxiVHRjYm4xY2JseHVjM1ZpSUh0Y2JpQWdJQ0JpYjNSMGIyMDZJQzB3TGpJMVpXMDdYRzU5WEc1Y2JpOHZJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVhHNHZMeUJNYVhOMGMxeHVMeThnUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMWNibHh1THk4Z1FXUmtjbVZ6YzJWeklHMWhjbWRwYm5NZ2MyVjBJR1JwWm1abGNtVnVkR3g1SUdsdUlFbEZOaTgzWEc1QWFXWWdKR3hsWjJGamVWOXpkWEJ3YjNKMFgyWnZjbDlwWlNCN1hHNGdJQ0FnWkd3c1hHNGdJQ0FnYldWdWRTeGNiaUFnSUNCdmJDeGNiaUFnSUNCMWJDQjdYRzRnSUNBZ0lDQWdJQzh2YldGeVoybHVPaUF4WlcwZ01EdGNiaUFnSUNCOVhHNTlYRzVjYmtCcFppQWtiR1ZuWVdONVgzTjFjSEJ2Y25SZlptOXlYMmxsSUh0Y2JpQWdJQ0JrWkNCN1hHNGdJQ0FnSUNBZ0lHMWhjbWRwYmpvZ01DQXdJREFnTkRCd2VEdGNiaUFnSUNCOVhHNTlYRzVjYmk4dklFRmtaSEpsYzNObGN5QndZV1JrYVc1bmN5QnpaWFFnWkdsbVptVnlaVzUwYkhrZ2FXNGdTVVUyTHpkY2JrQnBaaUFrYkdWbllXTjVYM04xY0hCdmNuUmZabTl5WDJsbElIdGNiaUFnSUNCdFpXNTFMRnh1SUNBZ0lHOXNMRnh1SUNBZ0lIVnNJSHRjYmlBZ0lDQWdJQ0FnTHk5d1lXUmthVzVuT2lBd0lEQWdNQ0EwTUhCNE8xeHVJQ0FnSUgxY2JuMWNibHh1THk4Z1EyOXljbVZqZEhNZ2JHbHpkQ0JwYldGblpYTWdhR0Z1Wkd4bFpDQnBibU52Y25KbFkzUnNlU0JwYmlCSlJUZGNibHh1Ym1GMklIdGNiaUFnSUNCMWJDeGNiaUFnSUNCdmJDQjdYRzRnSUNBZ0lDQWdJRUJwWmlBa2JHVm5ZV041WDNOMWNIQnZjblJmWm05eVgybGxJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDOHZiR2x6ZEMxemRIbHNaUzFwYldGblpUb2dibTl1WlR0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JuMWNibHh1THk4Z1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDFjYmk4dklFVnRZbVZrWkdWa0lHTnZiblJsYm5SY2JpOHZJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVhHNWNiaTh2SURFdUlGSmxiVzkyWlhNZ1ltOXlaR1Z5SUhkb1pXNGdhVzV6YVdSbElDZGhKeUJsYkdWdFpXNTBJR2x1SUVsRk5pODNMemd2T1N3Z1JrWXpYRzR2THlBeUxpQkpiWEJ5YjNabGN5QnBiV0ZuWlNCeGRXRnNhWFI1SUhkb1pXNGdjMk5oYkdWa0lHbHVJRWxGTjF4dUx5OGdJQ0FnWTI5a1pTNW1iR2xqYTNJdVkyOXRMMkpzYjJjdk1qQXdPQzh4TVM4eE1pOXZiaTExYVMxeGRXRnNhWFI1TFhSb1pTMXNhWFIwYkdVdGRHaHBibWR6TFdOc2FXVnVkQzF6YVdSbExXbHRZV2RsTFhKbGMybDZhVzVuTDF4dVhHNXBiV2NnZTF4dUlDQWdJR0p2Y21SbGNqb2dNRHNnTHk4Z01WeHVJQ0FnSUVCcFppQWtiR1ZuWVdONVgzTjFjSEJ2Y25SZlptOXlYMmxsSUh0Y2JpQWdJQ0FnSUNBZ0xXMXpMV2x1ZEdWeWNHOXNZWFJwYjI0dGJXOWtaVG9nWW1samRXSnBZenNnTHk4Z01seHVJQ0FnSUgxY2JuMWNibHh1THk4Z1EyOXljbVZqZEhNZ2IzWmxjbVpzYjNjZ1pHbHpjR3hoZVdWa0lHOWtaR3g1SUdsdUlFbEZPVnh1WEc1emRtYzZibTkwS0RweWIyOTBLU0I3WEc0Z0lDQWdiM1psY21ac2IzYzZJR2hwWkdSbGJqdGNibjFjYmx4dUx5OGdQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQxY2JpOHZJRVpwWjNWeVpYTmNiaTh2SUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlYRzVjYmk4dklFRmtaSEpsYzNObGN5QnRZWEpuYVc0Z2JtOTBJSEJ5WlhObGJuUWdhVzRnU1VVMkx6Y3ZPQzg1TENCVE5Td2dUekV4WEc1Y2JtWnBaM1Z5WlNCN1hHNGdJQ0FnYldGeVoybHVPaUF3TzF4dWZWeHVYRzR2THlBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVnh1THk4Z1JtOXliWE5jYmk4dklEMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5WEc1Y2JpOHZJRU52Y25KbFkzUnpJRzFoY21kcGJpQmthWE53YkdGNVpXUWdiMlJrYkhrZ2FXNGdTVVUyTHpkY2JrQnBaaUFrYkdWbllXTjVYM04xY0hCdmNuUmZabTl5WDJsbElIdGNiaUFnSUNCbWIzSnRJSHRjYmlBZ0lDQWdJQ0FnYldGeVoybHVPaUF3TzF4dUlDQWdJSDFjYm4xY2JseHVMeThnUkdWbWFXNWxJR052Ym5OcGMzUmxiblFnWW05eVpHVnlMQ0J0WVhKbmFXNHNJR0Z1WkNCd1lXUmthVzVuWEc1Y2JtWnBaV3hrYzJWMElIdGNiaUFnSUNCaWIzSmtaWEk2SURGd2VDQnpiMnhwWkNBall6QmpNR013TzF4dUlDQWdJRzFoY21kcGJqb2dNQ0F5Y0hnN1hHNGdJQ0FnY0dGa1pHbHVaem9nTUM0ek5XVnRJREF1TmpJMVpXMGdNQzQzTldWdE8xeHVmVnh1WEc0dkx5QXhMaUJEYjNKeVpXTjBjeUJqYjJ4dmNpQnViM1FnWW1WcGJtY2dhVzVvWlhKcGRHVmtJR2x1SUVsRk5pODNMemd2T1Z4dUx5OGdNaTRnVW1WdGIzWmxJSEJoWkdScGJtY2djMjhnY0dWdmNHeGxJR0Z5Wlc0bmRDQmpZWFZuYUhRZ2IzVjBJR2xtSUhSb1pYa2dlbVZ5YnlCdmRYUWdabWxsYkdSelpYUnpMbHh1THk4Z015NGdRMjl5Y21WamRITWdkR1Y0ZENCdWIzUWdkM0poY0hCcGJtY2dhVzRnUmtZelhHNHZMeUEwTGlCRGIzSnlaV04wY3lCaGJHbG5ibTFsYm5RZ1pHbHpjR3hoZVdWa0lHOWtaR3g1SUdsdUlFbEZOaTgzWEc1Y2JteGxaMlZ1WkNCN1hHNGdJQ0FnWW05eVpHVnlPaUF3T3lBdkx5QXhYRzRnSUNBZ2NHRmtaR2x1WnpvZ01Ec2dMeThnTWx4dUlDQWdJSGRvYVhSbExYTndZV05sT2lCdWIzSnRZV3c3SUM4dklETmNiaUFnSUNCQWFXWWdKR3hsWjJGamVWOXpkWEJ3YjNKMFgyWnZjbDlwWlNCN1hHNGdJQ0FnSUNBZ0lDcHRZWEpuYVc0dGJHVm1kRG9nTFRkd2VEc2dMeThnTkZ4dUlDQWdJSDFjYm4xY2JseHVMeThnTVM0Z1EyOXljbVZqZENCbWIyNTBJR1poYldsc2VTQnViM1FnWW1WcGJtY2dhVzVvWlhKcGRHVmtJR2x1SUdGc2JDQmljbTkzYzJWeWN5NWNiaTh2SURJdUlFTnZjbkpsWTNSeklHWnZiblFnYzJsNlpTQnViM1FnWW1WcGJtY2dhVzVvWlhKcGRHVmtJR2x1SUdGc2JDQmljbTkzYzJWeWMxeHVMeThnTXk0Z1FXUmtjbVZ6YzJWeklHMWhjbWRwYm5NZ2MyVjBJR1JwWm1abGNtVnVkR3g1SUdsdUlFbEZOaTgzTENCR1JqTXJMQ0JUTlN3Z1EyaHliMjFsWEc0dkx5QTBMaUJKYlhCeWIzWmxjeUJoY0hCbFlYSmhibU5sSUdGdVpDQmpiMjV6YVhOMFpXNWplU0JwYmlCaGJHd2dZbkp2ZDNObGNuTmNibHh1WW5WMGRHOXVMRnh1YVc1d2RYUXNYRzV6Wld4bFkzUXNYRzUwWlhoMFlYSmxZU0I3WEc0Z0lDQWdabTl1ZEMxbVlXMXBiSGs2SUdsdWFHVnlhWFE3SUM4dklERmNiaUFnSUNCbWIyNTBMWE5wZW1VNklERXdNQ1U3SUM4dklESmNiaUFnSUNCdFlYSm5hVzQ2SURBN0lDOHZJRE5jYmlBZ0lDQjJaWEowYVdOaGJDMWhiR2xuYmpvZ1ltRnpaV3hwYm1VN0lDOHZJRFJjYmlBZ0lDQkFhV1lnSkd4bFoyRmplVjl6ZFhCd2IzSjBYMlp2Y2w5cFpTQjdYRzRnSUNBZ0lDQWdJQ3AyWlhKMGFXTmhiQzFoYkdsbmJqb2diV2xrWkd4bE95QXZMeUEwWEc0Z0lDQWdmVnh1ZlZ4dVhHNHZMeUJCWkdSeVpYTnpaWE1nUmtZekx6UWdjMlYwZEdsdVp5QnNhVzVsTFdobGFXZG9kQ0J2YmlBbmFXNXdkWFFuSUhWemFXNW5JQ0ZwYlhCdmNuUmhiblFnYVc0Z2RHaGxJRlZCSUhOMGVXeGxjMmhsWlhSY2JseHVZblYwZEc5dUxDQnBibkIxZENCN1hHNGdJQ0FnYkdsdVpTMW9aV2xuYUhRNklHNXZjbTFoYkR0Y2JuMWNibHh1THk4Z1FXUmtjbVZ6Y3lCcGJtTnZibk5wYzNSbGJuUWdZSFJsZUhRdGRISmhibk5tYjNKdFlDQnBibWhsY21sMFlXNWpaU0JtYjNJZ1lHSjFkSFJ2Ym1BZ1lXNWtJR0J6Wld4bFkzUmdMbHh1THk4Z1FXeHNJRzkwYUdWeUlHWnZjbTBnWTI5dWRISnZiQ0JsYkdWdFpXNTBjeUJrYnlCdWIzUWdhVzVvWlhKcGRDQmdkR1Y0ZEMxMGNtRnVjMlp2Y20xZ0lIWmhiSFZsY3k1Y2JpOHZJRU52Y25KbFkzUWdZR0oxZEhSdmJtQWdjM1I1YkdVZ2FXNW9aWEpwZEdGdVkyVWdhVzRnUTJoeWIyMWxMQ0JUWVdaaGNta2dOU3NzSUdGdVpDQkpSU0E0S3k1Y2JpOHZJRU52Y25KbFkzUWdZSE5sYkdWamRHQWdjM1I1YkdVZ2FXNW9aWEpwZEdGdVkyVWdhVzRnUm1seVpXWnZlQ0EwS3lCaGJtUWdUM0JsY21FdVhHNWNibUoxZEhSdmJpeGNibk5sYkdWamRDQjdYRzRnSUNBZ2RHVjRkQzEwY21GdWMyWnZjbTA2SUc1dmJtVTdYRzU5WEc1Y2JpOHZJREV1SUVGMmIybGtJSFJvWlNCWFpXSkxhWFFnWW5WbklHbHVJRUZ1WkhKdmFXUWdOQzR3TGlvZ2QyaGxjbVVnS0RJcElHUmxjM1J5YjNseklHNWhkR2wyWlNCZ1lYVmthVzlnWEc0dkx5QWdJQ0JoYm1RZ1lIWnBaR1Z2WUNCamIyNTBjbTlzYzF4dUx5OGdNaTRnUTI5eWNtVmpkSE1nYVc1aFltbHNhWFI1SUhSdklITjBlV3hsSUdOc2FXTnJZV0pzWlNBbmFXNXdkWFFuSUhSNWNHVnpJR2x1SUdsUFUxeHVMeThnTXk0Z1NXMXdjbTkyWlhNZ2RYTmhZbWxzYVhSNUlHRnVaQ0JqYjI1emFYTjBaVzVqZVNCdlppQmpkWEp6YjNJZ2MzUjViR1VnWW1WMGQyVmxiaUJwYldGblpTMTBlWEJsWEc0dkx5QWdJQ0FuYVc1d2RYUW5JR0Z1WkNCdmRHaGxjbk5jYmk4dklEUXVJRkpsYlc5MlpYTWdhVzV1WlhJZ2MzQmhZMmx1WnlCcGJpQkpSVGNnZDJsMGFHOTFkQ0JoWm1abFkzUnBibWNnYm05eWJXRnNJSFJsZUhRZ2FXNXdkWFJ6WEc0dkx5QWdJQ0JMYm05M2JpQnBjM04xWlRvZ2FXNXVaWElnYzNCaFkybHVaeUJ5WlcxaGFXNXpJR2x1SUVsRk5seHVYRzVpZFhSMGIyNHNYRzVvZEcxc0lHbHVjSFYwVzNSNWNHVTlYQ0ppZFhSMGIyNWNJbDBzSUM4dklERmNibWx1Y0hWMFczUjVjR1U5WENKeVpYTmxkRndpWFN4Y2JtbHVjSFYwVzNSNWNHVTlYQ0p6ZFdKdGFYUmNJbDBnZTF4dUlDQWdJQzEzWldKcmFYUXRZWEJ3WldGeVlXNWpaVG9nWW5WMGRHOXVPeUF2THlBeVhHNGdJQ0FnWTNWeWMyOXlPaUJ3YjJsdWRHVnlPeUF2THlBelhHNGdJQ0FnUUdsbUlDUnNaV2RoWTNsZmMzVndjRzl5ZEY5bWIzSmZhV1VnZTF4dUlDQWdJQ0FnSUNBcWIzWmxjbVpzYjNjNklIWnBjMmxpYkdVN0lDQXZMeUEwWEc0Z0lDQWdmVnh1ZlZ4dVhHNHZMeUJTWlMxelpYUWdaR1ZtWVhWc2RDQmpkWEp6YjNJZ1ptOXlJR1JwYzJGaWJHVmtJR1ZzWlcxbGJuUnpYRzVjYm1KMWRIUnZibHRrYVhOaFlteGxaRjBzWEc1cGJuQjFkRnRrYVhOaFlteGxaRjBnZTF4dUlDQWdJR04xY25OdmNqb2daR1ZtWVhWc2REdGNibjFjYmx4dUx5OGdVbVZ0YjNabGN5QnBibTVsY2lCd1lXUmthVzVuSUdGdVpDQmliM0prWlhJZ2FXNGdSa1l6SzF4dUx5OGdkM2QzTG5OcGRHVndaVzR1WTI5dEwySnNiMmN2TWpBd09DOHdOUzh4TkM5MGFHVXRaR1YyYVd4ekxXbHVMWFJvWlMxa1pYUmhhV3h6TFdacGVHbHVaeTFrYjJwdmN5MTBiMjlzWW1GeUxXSjFkSFJ2Ym5NdlhHNWNibUoxZEhSdmJpd2dhVzV3ZFhRZ2UxeHVJQ0FnSUNZNk9pMXRiM290Wm05amRYTXRhVzV1WlhJZ2UxeHVJQ0FnSUNBZ0lDQmliM0prWlhJNklEQTdYRzRnSUNBZ0lDQWdJSEJoWkdScGJtYzZJREE3WEc0Z0lDQWdmVnh1ZlZ4dVhHNHZMeUF4TGlCU1pXMXZkbVZ6SUdSbFptRjFiSFFnZG1WeWRHbGpZV3dnYzJOeWIyeHNZbUZ5SUdsdUlFbEZOaTgzTHpndk9WeHVMeThnTWk0Z1NXMXdjbTkyWlhNZ2NtVmhaR0ZpYVd4cGRIa2dZVzVrSUdGc2FXZHViV1Z1ZENCcGJpQmhiR3dnWW5KdmQzTmxjbk5jYmx4dWRHVjRkR0Z5WldFZ2UxeHVJQ0FnSUc5MlpYSm1iRzkzT2lCaGRYUnZPeUF2THlBeFhHNGdJQ0FnZG1WeWRHbGpZV3d0WVd4cFoyNDZJSFJ2Y0RzZ0x5OGdNbHh1ZlZ4dVhHNHZMeUE5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBWeHVMeThnVkdGaWJHVnpYRzR2THlBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVnh1WEc0dkx5QlNaVzF2ZG1VZ2JXOXpkQ0J6Y0dGamFXNW5JR0psZEhkbFpXNGdkR0ZpYkdVZ1kyVnNiSE5jYmx4dWRHRmliR1VnZTF4dUlDQWdJR0p2Y21SbGNpMWpiMnhzWVhCelpUb2dZMjlzYkdGd2MyVTdYRzRnSUNBZ1ltOXlaR1Z5TFhOd1lXTnBibWM2SURBN1hHNTlYRzVjYm1sdWNIVjBJSHRjYmlBZ0lDQXZMeUF4TGlCQlpHUnlaWE56WlhNZ1lYQndaV0Z5WVc1alpTQnpaWFFnZEc4Z2MyVmhjbU5vWm1sbGJHUWdhVzRnVXpVc0lFTm9jbTl0WlZ4dUlDQWdJQzh2SURJdUlFRmtaSEpsYzNObGN5QmliM2d0YzJsNmFXNW5JSE5sZENCMGJ5QmliM0prWlhJdFltOTRJR2x1SUZNMUxDQkRhSEp2YldVZ0tHbHVZMngxWkdVZ0xXMXZlaUIwYnlCbWRYUjFjbVV0Y0hKdmIyWXBYRzRnSUNBZ0psdDBlWEJsUFZ3aWMyVmhjbU5vWENKZElIdGNiaUFnSUNBZ0lDQWdMWGRsWW10cGRDMWhjSEJsWVhKaGJtTmxPaUIwWlhoMFptbGxiR1E3SUM4dklERmNiaUFnSUNBZ0lDQWdMVzF2ZWkxaWIzZ3RjMmw2YVc1bk9pQmpiMjUwWlc1MExXSnZlRHRjYmlBZ0lDQWdJQ0FnTFhkbFltdHBkQzFpYjNndGMybDZhVzVuT2lCamIyNTBaVzUwTFdKdmVEc2dMeThnTWx4dUlDQWdJQ0FnSUNCaWIzZ3RjMmw2YVc1bk9pQmpiMjUwWlc1MExXSnZlRHRjYmx4dUlDQWdJRngwTHk4Z1VtVnRiM1psSUdsdWJtVnlJSEJoWkdScGJtY2dZVzVrSUhObFlYSmphQ0JqWVc1alpXd2dZblYwZEc5dUlHbHVJRk5oWm1GeWFTQTFJR0Z1WkNCRGFISnZiV1ZjYmlBZ0lDQWdJQ0FnTHk4Z2IyNGdUMU1nV0M1Y2JpQWdJQ0FnSUNBZ0pqbzZMWGRsWW10cGRDMXpaV0Z5WTJndFkyRnVZMlZzTFdKMWRIUnZiaXhjYmlBZ0lDQWdJQ0FnSmpvNkxYZGxZbXRwZEMxelpXRnlZMmd0WkdWamIzSmhkR2x2YmlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0F0ZDJWaWEybDBMV0Z3Y0dWaGNtRnVZMlU2SUc1dmJtVTdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQjlYRzVjYmlBZ0lDQXZMeUF4TGlCQlpHUnlaWE56SUdKdmVDQnphWHBwYm1jZ2MyVjBJSFJ2SUdCamIyNTBaVzUwTFdKdmVHQWdhVzRnU1VVZ09DODVMekV3TGx4dUlDQWdJQzh2SURJdUlGSmxiVzkyWlNCbGVHTmxjM01nY0dGa1pHbHVaeUJwYmlCSlJTQTRMemt2TVRBdVhHNGdJQ0FnTHk4Z015NGdVbVZ0YjNabGN5QmxlR05sYzNNZ2NHRmtaR2x1WnlCcGJpQkpSVGRjYmlBZ0lDQXZMeUFnSUNCTGJtOTNiaUJwYzNOMVpUb2daWGhqWlhOeklIQmhaR1JwYm1jZ2NtVnRZV2x1Y3lCcGJpQkpSVFpjYmlBZ0lDQW1XM1I1Y0dVOVhDSmphR1ZqYTJKdmVGd2lYU3hjYmlBZ0lDQW1XM1I1Y0dVOVhDSnlZV1JwYjF3aVhTQjdYRzRnSUNBZ1hIUmliM2d0YzJsNmFXNW5PaUJpYjNKa1pYSXRZbTk0T3lBdkx5QXhYRzRnSUNBZ1hIUndZV1JrYVc1bk9pQXdPeUF2THlBeVhHNGdJQ0FnWEhSQWFXWWdKR3hsWjJGamVWOXpkWEJ3YjNKMFgyWnZjbDlwWlNCN1hHNGdJQ0FnSUNBZ0lGeDBLbWhsYVdkb2REb2dNVE53ZURzZ0x5OGdNMXh1SUNBZ0lDQWdJQ0JjZENwM2FXUjBhRG9nTVROd2VEc2dMeThnTTF4dUlDQWdJRngwZlZ4dUlDQWdJSDFjYm4xY2JpSXNJaTh2SUZaaGNuTmNiaVJpWVhObExXWnZiblF0YzJsNlpUb2dNVFp3ZUZ4dUpHSmhjMlV0YkdsdVpTMW9aV2xuYUhRNklERXVOVnh1WEc0dkx5QlVlWEJsWm1GalpYTmNiaVJ6WVc1ek9pQk9aWGR6SUVONVkyeGxMQ0J6WVc1ekxYTmxjbWxtWEc0a2MyVnlhV1k2SUZCc1lYbG1ZV2x5SUVScGMzQnNZWGtzSUhObGNtbG1YRzVjYmk4dklFWnZiblFnZDJWcFoyaDBjMXh1Skhoc2FXZG9kRG9nTWpBd1hHNGtiR2xuYUhRNklETXdNRnh1Skc1dmNtMWhiRG9nTkRBd1hHNGtjMlZ0YVdKdmJHUTZJRFl3TUZ4dUpHSnZiR1E2SURjd01GeHVYRzR2THlCTWFXNWxJR2hsYVdkb2RDQm1kVzVqZEdsdmJseHVRR1oxYm1OMGFXOXVJR3hwYm1VdGFHVnBaMmgwS0NsY2JpQWdRSEpsZEhWeWJpQWtZbUZ6WlMxbWIyNTBMWE5wZW1VZ0tpQWtZbUZ6WlMxc2FXNWxMV2hsYVdkb2RGeHVYRzR2THlCV1lYSWdiWFZ6ZENCaVpTQnpjR1ZqYVdacFpXUWdZV1owWlhJZ2NtVjBkWEp1YVc1bklIUm9aU0JzYVc1bExXaGxhV2RvZENCbWRXNWpkR2x2Ymx4dUpHTmhiQzFzYVc1bExXaGxhV2RvZERvZ2JHbHVaUzFvWldsbmFIUW9LVnh1WEc0dkx5Qk5hWGhwYm5OY2JqMTJaWEowTFcxaGNtZHBiaWdrZEc5d09pQXhMQ0FrWW05MGRHOXRPaUF4S1Z4dUlDQnRZWEpuYVc0dGRHOXdPaUFrWTJGc0xXeHBibVV0YUdWcFoyaDBJQ29nSkhSdmNGeHVJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQWtZMkZzTFd4cGJtVXRhR1ZwWjJoMElDb2dKR0p2ZEhSdmJWeHVYRzQ5ZG1WeWRDMXdZV1JrYVc1bktDUjBiM0E2SURFc0lDUmliM1IwYjIwNklERXBYRzRnSUhCaFpHUnBibWN0ZEc5d09pQWtZMkZzTFd4cGJtVXRhR1ZwWjJoMElDb2dKSFJ2Y0Z4dUlDQndZV1JrYVc1bkxXSnZkSFJ2YlRvZ0pHTmhiQzFzYVc1bExXaGxhV2RvZENBcUlDUmliM1IwYjIxY2JseHVYRzVvZEcxc1hHNGdJR1p2Ym5RdGMybDZaVG9nSkdKaGMyVXRabTl1ZEMxemFYcGxYRzRnSUMxdGIzb3RiM040TFdadmJuUXRjMjF2YjNSb2FXNW5PaUJuY21GNWMyTmhiR1ZjYmlBZ0xYZGxZbXRwZEMxbWIyNTBMWE50YjI5MGFHbHVaem9nWVc1MGFXRnNhV0Z6WldSY2JseHVZbTlrZVZ4dUlDQmpiMnh2Y2pvZ0pHTm9ZWEpqYjJGc1hHNGdJR3hwYm1VdGFHVnBaMmgwT2lBeExqVmNiaUFnWm05dWRDMW1ZVzFwYkhrNklDUnpZVzV6WEc0Z0lDOHZZbUZqYTJkeWIzVnVaQzFwYldGblpUb2diR2x1WldGeUxXZHlZV1JwWlc1MEtIUnlZVzV6Y0dGeVpXNTBMQ0IwY21GdWMzQmhjbVZ1ZENCc2FXNWxMV2hsYVdkb2RDZ3BJQzBnTVhCNExDQWtaM0psWlc0Z01YQjRJQ3dnZEhKaGJuTndZWEpsYm5RcFhHNGdJR0poWTJ0bmNtOTFibVF0YzJsNlpUb2dZWFYwYnlCc2FXNWxMV2hsYVdkb2RDZ3BYRzRnSUcxaGNtZHBiam9nTUZ4dVhHNHZMMXRqYkdGemN5bzlKMTlmYUdWaFpHeHBibVVuWFZ4dVhHNWNiaTh2SUZWelpXUWdhVzRnWVhKMGFXTnNaU0JvWldGa1pYSnpJR2x1SUhSb1pTQXVUV0ZwYmlCamIyeDFiVzV6WEc1YlkyeGhjM01xUFNkZlgyaGxZV1JwYm1jblhWeHVJQ0JqYjJ4dmNqb2dKR2R5WldWdVhHNGdJR1p2Ym5RdFptRnRhV3g1T2lBa2MyVnlhV1pjYmlBZ1ptOXVkQzF6YVhwbE9pQXlMalZ5WlcxY2JpQWdabTl1ZEMxM1pXbG5hSFE2SUNSdWIzSnRZV3hjYmlBZ2JHbHVaUzFvWldsbmFIUTZJREZjYmlBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTW5KbGJWeHVYRzQ5YzNSaGJtUmhjbVF0YUdWaFpHbHVaeWdwWEc0Z0lHTnZiRzl5T2lBa1ozSmxaVzVjYmlBZ1ptOXVkQzFtWVcxcGJIazZJQ1J6WlhKcFpseHVJQ0JtYjI1MExYTnBlbVU2SURKeVpXMWNiaUFnWm05dWRDMTNaV2xuYUhRNklDUnViM0p0WVd4Y2JpQWdiR2x1WlMxb1pXbG5hSFE2SURGY2JseHVYRzR2THlCR2IzVnVaQ0JwYmlCMGFHVWdUV0ZwYmlCQ2JHOW5JRkJ2YzNSelhHNDliV2x1YjNJdGFHVmhaR2x1WnlncFhHNGdJR052Ykc5eU9pQWtibWxuYUhSbmNtVmxibHh1SUNCbWIyNTBMV1poYldsc2VUb2dKSE5sY21sbVhHNGdJR1p2Ym5RdGMybDZaVG9nTVM0eU5YSmxiVnh1SUNCbWIyNTBMWGRsYVdkb2REb2dKR0p2YkdSY2JpQWdiR2x1WlMxb1pXbG5hSFE2SURGY2JpQWdkR1Y0ZEMxMGNtRnVjMlp2Y20wNklIVndjR1Z5WTJGelpWeHVJQ0FyZG1WeWRDMXRZWEpuYVc0b01TNDFMREFwWEc1Y2JseHVMeThnVlhObFpDQnBiaUJoY25ScFkyeGxJR2hsWVdSbGNuTWdhVzRnZEdobElDNU5ZV2x1SUdOdmJIVnRibk5jYmoxemJXRnNiQzFvWldGa2FXNW5LQ2xjYmlBZ1kyOXNiM0k2SUNSbmNtVmxibHh1SUNCbWIyNTBMV1poYldsc2VUb2dKSE5sY21sbVhHNGdJR1p2Ym5RdGMybDZaVG9nTVM0ek56VnlaVzFjYmlBZ1ptOXVkQzEzWldsbmFIUTZJQ1J1YjNKdFlXeGNiaUFnYkdsdVpTMW9aV2xuYUhRNklERmNibHh1WEc0dkx5QkdiM1Z1WkNCcGJpQjBhR1VnVFdGcGJpQkNiRzluSUZCdmMzUnpYRzQ5WW14dlkydHhkVzkwWlNncFhHNGdJR052Ykc5eU9pQWtaM0psWlc1Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUNSelpYSnBabHh1SUNCbWIyNTBMWE5wZW1VNklERXVOWEpsYlZ4dUlDQm1iMjUwTFhOMGVXeGxPaUJwZEdGc2FXTmNiaUFnWm05dWRDMTNaV2xuYUhRNklDUmliMnhrWEc0Z0lDdDJaWEowTFcxaGNtZHBiaWd4TGpVc01TNDFLVnh1WEc1Y2JpOHZhVzV3ZFhSYmRIbHdaVDFjSW5OMVltMXBkRndpWFZ4dVhHNWJZMnhoYzNNcVBWOWZZblYwZEc5dVhTeGNibWx1Y0hWMFczUjVjR1U5WENKaWRYUjBiMjVjSWwwc1hHNXBibkIxZEZ0MGVYQmxQVndpY21WelpYUmNJbDFjYmlBZ1ltOXlaR1Z5T2lBeGNIZ2djMjlzYVdRZ0pHZHlaV1Z1WEc0Z0lHTjFjbk52Y2pvZ2NHOXBiblJsY2x4dUlDQmthWE53YkdGNU9pQnBibXhwYm1VdFlteHZZMnRjYmlBZ1ptOXVkQzFtWVcxcGJIazZJQ1J6WlhKcFpseHVJQ0JtYjI1MExYTnBlbVU2SURFdU1uSmxiVnh1SUNCbWIyNTBMWE4wZVd4bE9pQnBkR0ZzYVdOY2JpQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlYRzRnSUhCaFpHUnBibWM2SUM0M05YSmxiU0F6Y21WdFhHNGdJSFJsZUhRdFpHVmpiM0poZEdsdmJqb2dibTl1WlZ4dUlDQXZLa2wwWlcxeklHWnZjaUIwY21GdWMybDBhVzl1WEc0Z0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklIUnlZVzV6Y0dGeVpXNTBYRzRnSUdOdmJHOXlPaUFrWjNKbFpXNWNiaUFnTHlwVWNtRnVjMmwwYVc5dUlITmxkSFJwYm1kelhHNGdJSFJ5WVc1emFYUnBiMjQ2SUdGc2JDQXVNbk1nWldGelpWeHVYRzRnSUNZNmFHOTJaWEpjYmlBZ0lDQXZLbFJvWlhObElIZHBiR3dnZEhKaGJuTnBkR2x2YmlCdmJpQm9iM1psY2x4dUlDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ1JuY21WbGJseHVJQ0FnSUdOdmJHOXlPaUFrZDJocGRHVmNiaUFnSUNCMFpYaDBMV1JsWTI5eVlYUnBiMjQ2SUc1dmJtVmNibHh1WEc0dkx5QnBiaUJ3Y205bmNtVnpjMXh1WEc0dkx5Qk5hWGhwYm5OY2JqMWlkWFIwYjI0b0pHSmhZMnRuY205MWJtUXNJQ1JqYjJ4dmNpd2dKR0p2Y21SbGNpMWpiMnh2Y2lsY2JpQWdZbTl5WkdWeU9pQXhjSGdnYzI5c2FXUWdKR0p2Y21SbGNpMWpiMnh2Y2x4dUlDQm1iMjUwTFdaaGJXbHNlVG9nSkhObGNtbG1YRzRnSUdadmJuUXRjMmw2WlRvZ01TNHljbVZ0WEc0Z0lHWnZiblF0YzNSNWJHVTZJR2wwWVd4cFkxeHVJQ0J3WVdSa2FXNW5PaUF1TlhKbGJTQXhjbVZ0WEc0Z0lIUmxlSFF0WkdWamIzSmhkR2x2YmpvZ2JtOXVaVnh1SUNBdktrbDBaVzF6SUdadmNpQjBjbUZ1YzJsMGFXOXVYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUhSeVlXNXpjR0Z5Wlc1MFhHNGdJR052Ykc5eU9pQWtZMjlzYjNKY2JpQWdMeXBVY21GdWMybDBhVzl1SUhObGRIUnBibWR6WEc0Z0lIUnlZVzV6YVhScGIyNDZJR0ZzYkNBdU1uTWdaV0Z6WlZ4dUlDQW1PbWh2ZG1WeVhHNGdJQ0FnTHlwVWFHVnpaU0IzYVd4c0lIUnlZVzV6YVhScGIyNGdiMjRnYUc5MlpYSmNiaUFnSUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBa1ozSmxaVzVjYmlBZ0lDQmpiMnh2Y2pvZ0pHTnZiRzl5WEc1Y2JseHVMbXh2WVdSbGNsOWZZblYwZEc5dUxtUnBjMkZpYkdWa1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ1JqYkc5MVpGeHVJQ0JqYjJ4dmNqb2dKR2R5WldWdVhHNGdJR04xY25OdmNqb2daR1ZtWVhWc2RGeHVJQ0J2Y0dGamFYUjVPaUF1TTF4dVhHNWNibk4xY0Z4dUlDQXJiV1ZrYVdFb1hDSThQWEJvYjI1bFhDSXBYRzRnSUNBZ2RHOXdPaUF0TGpJMVpXMWNiaUFnSUNCY2JpSXNJaTh2SUZOcGRHVWdZMjlzYjNJZ2NHRnNaWFIwWlZ4dUpHZHlaV1Z1T2lBak1qWTNaVFkwWEc0a2JtbG5hSFJuY21WbGJqb2dJelExTlRZMU1seHVKSE5zWVhSbE9pQWpaV05sWldVMlhHNWNiaTh2SURVd0lITm9ZV1JsY3lCdlppQm5jbUY1WEc0a2QyaHBkR1U2SUNObVptWmNiaVJ6ZEdWaGJUb2dJMlk0WmpobU9GeHVKR05zYjNWa09pQWpaVFZsTm1VM1hHNGtaM0poY0docGRHVTZJQ05qWTJOY2JpUnpkRzl1WlRvZ0l6ZG1OMlUzWlZ4dUpHeGxZV1E2SUNNMlpUWmlObU5jYmlSamFHRnlZMjloYkRvZ0l6TXpNMXh1SkdKc1lXTnJPaUFqTURBd1hHNWNibHh1SkcxdlltbHNaUzF1WVhZdFluUnVPaUFrYzJ4aGRHVmNibHh1THk5Q2IzSmtaWElnUTI5c2IzSmNiaVJpYjNKa1pYSkRiMnh2Y2pvZ0pHZHlZWEJvYVhSbFhHNWNiaTh2SUZOcGRHVWdZbUZ6WlNCMFpYaDBJR052Ykc5eWMxeHVKSE5wZEdVdGRHVjRkQzFqYjJ4dmNqb2dKR05vWVhKamIyRnNYRzRrYzJsMFpTMTBaWGgwTFdOdmJHOXlMV3hwYm1zNklDUm5jbVZsYmx4dUpITnBkR1V0ZEdWNGRDMWpiMnh2Y2kxc2FXNXJMV2h2ZG1WeU9pQWpORFUxTmpVeVhHNWNibHh1THk4Z1JtOXZkR1Z5SUdOdmJHOXljMXh1SkdadmIzUmxjaTEwWlhoME9pQWtibWxuYUhSbmNtVmxibHh1SkdadmIzUmxjaTEwWlhoMExXeHBibXM2SUNSdWFXZG9kR2R5WldWdVhHNGtabTl2ZEdWeUxYUmxlSFF0YkdsdWF5MW9iM1psY2pvZ0pHZHlaV1Z1WEc0aUxDSXZMMXh1WEhRZ1h5QWdJQ0FnSUNBZ0lDQWdJRjhnSUNBZ0lDQWdJQ0FnSUY4Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCZklGOWNibHgwS0Y4cElDQWdJQ0FnSUNBZ0lId2dmQ0FnSUNBZ0lDQWdJSHdnZkNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I4SUNoZktWeHVYSFFnWHlCZklGOWZJQ0FnWDE5ZmZDQjhYeUFnSUY4Z0lGOWZmQ0I4SUY5Zlh5QWdJRjhnWDE4Z1gxOWZJQ0FnWDE5ZklDQmZYM3dnZkY4Z0lGOWZJRjljYmx4MGZDQjhJQ2RmSUZ4Y0lDOGdYMTk4SUh3Z2ZDQjhJSHd2SUY5Z0lId3ZJRjhnWEZ3Z2ZDQW5YeUJnSUY4Z1hGd2dMeUJmSUZ4Y0x5QmZZQ0I4SUh3dklGOWdJSHhjYmx4MGZDQjhJSHdnZkNCOElDaGZYM3dnZkNCOFgzd2dmQ0FvWDN3Z2ZDQWdYMTh2SUh3Z2ZDQjhJSHdnZkNCOElDQmZYeThnS0Y5OElId2dmQ0FvWDN3Z2ZGeHVYSFI4WDN4ZmZDQjhYM3hjWEY5ZlgzeGZmRnhjWDE4c1gzeGNYRjlmTEY5OFhGeGZYMTk4SUh4ZmZDQjhYM3dnZkY5OFhGeGZYMTk4WEZ4Zlh5eGZmRjk4WEZ4Zlh5eGZmRnh1WEc1Y2RGTnBiWEJzWlN3Z1pXeGxaMkZ1ZENCaGJtUWdiV0ZwYm5SaGFXNWhZbXhsSUcxbFpHbGhJSEYxWlhKcFpYTWdhVzRnVTJGemMxeHVYRzVjZEdoMGRIQTZMeTlwYm1Oc2RXUmxMVzFsWkdsaExtTnZiVnh1WEc0Z0lFRjFkR2h2Y2pvZ1JXUjFZWEprYnlCQ2IzVmpZWE1nUEcxaGFXeEFaV1IxWVhKa2IySnZkV05oY3k1amIyMCtYRzVjYmx4dUlDQkRjbVZoZEdWeklHRWdiR2x6ZENCdlppQm5iRzlpWVd3Z1luSmxZV3R3YjJsdWRITmNibHh1SUNCQVlYVjBhRzl5SUVWa2RXRnlaRzhnUW05MVkyRnpYRzVjYmlBZ1FHVjRZVzF3YkdVZ2MyTnpjeUF0SUVOeVpXRjBaWE1nWVNCemFXNW5iR1VnWW5KbFlXdHdiMmx1ZENCM2FYUm9JSFJvWlNCc1lXSmxiQ0JnY0dodmJtVmdYRzRnSUNSaWNtVmhhM0J2YVc1MGN6b2dLQ2R3YUc5dVpTYzZJRE15TUhCNEtUdGNibHh1SkdKeVpXRnJjRzlwYm5Sek9pQW9YQ0p3YUc5dVpWd2lPaUEwT0RCd2VDd2dYQ0owWVdKc1pYUmNJam9nTnpZNGNIZ3NJRndpWkdWemEzUnZjRndpT2lBeE1ESXpjSGdwSUNGa1pXWmhkV3gwWEc1Y2JpOHZYRzRnSUVOeVpXRjBaWE1nWVNCc2FYTjBJRzltSUhOMFlYUnBZeUJsZUhCeVpYTnphVzl1Y3lCdmNpQnRaV1JwWVNCMGVYQmxjMXh1WEc0Z0lFQmhkWFJvYjNJZ1JXUjFZWEprYnlCQ2IzVmpZWE5jYmx4dUlDQkFaWGhoYlhCc1pTQnpZM056SUMwZ1EzSmxZWFJsY3lCaElITnBibWRzWlNCdFpXUnBZU0IwZVhCbElDaHpZM0psWlc0cFhHNGdJQ0FrYldWa2FXRXRaWGh3Y21WemMybHZibk02SUNnbmMyTnlaV1Z1SnpvZ0ozTmpjbVZsYmljcE8xeHVYRzRnSUVCbGVHRnRjR3hsSUhOamMzTWdMU0JEY21WaGRHVnpJR0VnYzNSaGRHbGpJR1Y0Y0hKbGMzTnBiMjRnZDJsMGFDQnNiMmRwWTJGc0lHUnBjMnAxYm1OMGFXOXVJQ2hQVWlCdmNHVnlZWFJ2Y2lsY2JpQWdJQ1J0WldScFlTMWxlSEJ5WlhOemFXOXVjem9nS0Z4dUlDQmNkRngwSjNKbGRHbHVZVEo0SnpvZ0tGeHVJQ0JjZEZ4MFhIUW5LQzEzWldKcmFYUXRiV2x1TFdSbGRtbGpaUzF3YVhobGJDMXlZWFJwYnpvZ01pa25MRnh1SUNCY2RGeDBYSFFuS0cxcGJpMXlaWE52YkhWMGFXOXVPaUF4T1RKa2NHa3BKMXh1SUNCY2RGeDBLVnh1SUNCY2RDazdYRzVjYmlSdFpXUnBZUzFsZUhCeVpYTnphVzl1Y3pvZ0tGd2ljMk55WldWdVhDSTZJRndpYzJOeVpXVnVYQ0lzSUZ3aWNISnBiblJjSWpvZ1hDSndjbWx1ZEZ3aUxDQmNJbWhoYm1Sb1pXeGtYQ0k2SUZ3aWFHRnVaR2hsYkdSY0lpd2dYQ0p5WlhScGJtRXllRndpT2lBb1hDSW9MWGRsWW10cGRDMXRhVzR0WkdWMmFXTmxMWEJwZUdWc0xYSmhkR2x2T2lBeUtWd2lMQ0JjSWlodGFXNHRjbVZ6YjJ4MWRHbHZiam9nTVRreVpIQnBLVndpS1N3Z1hDSnlaWFJwYm1FemVGd2lPaUFvWENJb0xYZGxZbXRwZEMxdGFXNHRaR1YyYVdObExYQnBlR1ZzTFhKaGRHbHZPaUF6S1Z3aUxDQmNJaWh0YVc0dGNtVnpiMngxZEdsdmJqb2dNelV3WkhCcEtWd2lLU2tnSVdSbFptRjFiSFJjYmx4dUx5OWNiaUFnUkdWbWFXNWxjeUJoSUc1MWJXSmxjaUIwYnlCaVpTQmhaR1JsWkNCdmNpQnpkV0owY21GamRHVmtJR1p5YjIwZ1pXRmphQ0IxYm1sMElIZG9aVzRnWkdWamJHRnlhVzVuSUdKeVpXRnJjRzlwYm5SeklIZHBkR2dnWlhoamJIVnphWFpsSUdsdWRHVnlkbUZzYzF4dVhHNGdJRUJoZFhSb2IzSWdSV1IxWVhKa2J5QkNiM1ZqWVhOY2JseHVJQ0JBWlhoaGJYQnNaU0J6WTNOeklDMGdTVzUwWlhKMllXd2dabTl5SUhCcGVHVnNjeUJwY3lCa1pXWnBibVZrSUdGeklHQXhZQ0JpZVNCa1pXWmhkV3gwWEc0Z0lDQkFhVzVqYkhWa1pTQnRaV1JwWVNoY0lqNHhNamh3ZUZ3aUtTQjdmVnh1WEc0Z0lFZGxibVZ5WVhSbGN6cGNiaUFnUUcxbFpHbGhJQ2h0YVc0dGQybGtkR2c2SURFeU9YQjRLU0I3ZlZ4dVhHNGdJRUJsZUdGdGNHeGxJSE5qYzNNZ0xTQkpiblJsY25aaGJDQm1iM0lnWlcxeklHbHpJR1JsWm1sdVpXUWdZWE1nWURBdU1ERmdJR0o1SUdSbFptRjFiSFJjYmlBZ0lFQnBibU5zZFdSbElHMWxaR2xoS0Z3aVBqSXdaVzFjSWlrZ2UzMWNibHh1SUNCSFpXNWxjbUYwWlhNNlhHNGdJRUJ0WldScFlTQW9iV2x1TFhkcFpIUm9PaUF5TUM0d01XVnRLU0I3ZlZ4dVhHNGdJRUJsZUdGdGNHeGxJSE5qYzNNZ0xTQkpiblJsY25aaGJDQm1iM0lnY21WdGN5QnBjeUJrWldacGJtVmtJR0Z6SUdBd0xqRmdJR0o1SUdSbFptRjFiSFFzSUhSdklHSmxJSFZ6WldRZ2QybDBhQ0JnWm05dWRDMXphWHBsT2lBMk1pNDFKVHRnWEc0Z0lDQkFhVzVqYkhWa1pTQnRaV1JwWVNoY0lqNHlMakJ5WlcxY0lpa2dlMzFjYmx4dUlDQkhaVzVsY21GMFpYTTZYRzRnSUVCdFpXUnBZU0FvYldsdUxYZHBaSFJvT2lBeUxqRnlaVzBwSUh0OVhHNWNiaVIxYm1sMExXbHVkR1Z5ZG1Gc2N6b2dLRndpY0hoY0lqb2dNU3dnWENKbGJWd2lPaUF3TGpBeExDQmNJbkpsYlZ3aU9pQXdMakVwSUNGa1pXWmhkV3gwWEc1Y2JpOHZYRzRnSUVkbGJtVnlZWFJsY3lCaElHMWxaR2xoSUhGMVpYSjVJR0poYzJWa0lHOXVJR0VnYkdsemRDQnZaaUJqYjI1a2FYUnBiMjV6WEc1Y2JpQWdRR0YxZEdodmNpQkZaSFZoY21SdklFSnZkV05oYzF4dVhHNGdJRUJ3WVhKaGJTQjdUR2x6ZEgwZ0lDQWtZMjl1WkdsMGFXOXVjeUFnTFNCTlpXUnBZU0J4ZFdWeWVTQmpiMjVrYVhScGIyNXpYRzVjYmlBZ1FHVjRZVzF3YkdVZ2MyTnpjeUF0SUZkcGRHZ2dZU0J6YVc1bmJHVWdjMlYwSUdKeVpXRnJjRzlwYm5SY2JpQWdJRUJwYm1Oc2RXUmxJRzFsWkdsaEtGd2lQbkJvYjI1bFhDSXBJSHNnZlZ4dVhHNGdJRUJsZUdGdGNHeGxJSE5qYzNNZ0xTQlhhWFJvSUhSM2J5QnpaWFFnWW5KbFlXdHdiMmx1ZEhOY2JpQWdJRUJwYm1Oc2RXUmxJRzFsWkdsaEtGd2lQbkJvYjI1bFhDSXNJRndpUEQxMFlXSnNaWFJjSWlrZ2V5QjlYRzVjYmlBZ1FHVjRZVzF3YkdVZ2MyTnpjeUF0SUZkcGRHZ2dZM1Z6ZEc5dElIWmhiSFZsYzF4dUlDQWdRR2x1WTJ4MVpHVWdiV1ZrYVdFb1hDSStQVE0xT0hCNFhDSXNJRndpUERnMU1IQjRYQ0lwSUhzZ2ZWeHVYRzRnSUVCbGVHRnRjR3hsSUhOamMzTWdMU0JYYVhSb0lITmxkQ0JpY21WaGEzQnZhVzUwY3lCM2FYUm9JR04xYzNSdmJTQjJZV3gxWlhOY2JpQWdJRUJwYm1Oc2RXUmxJRzFsWkdsaEtGd2lQbVJsYzJ0MGIzQmNJaXdnWENJOFBURXpOVEJ3ZUZ3aUtTQjdJSDFjYmx4dUlDQkFaWGhoYlhCc1pTQnpZM056SUMwZ1YybDBhQ0JoSUhOMFlYUnBZeUJsZUhCeVpYTnphVzl1WEc0Z0lDQkFhVzVqYkhWa1pTQnRaV1JwWVNoY0luSmxkR2x1WVRKNFhDSXBJSHNnZlZ4dVhHNGdJRUJsZUdGdGNHeGxJSE5qYzNNZ0xTQk5hWGhwYm1jZ1pYWmxjbmwwYUdsdVoxeHVJQ0FnUUdsdVkyeDFaR1VnYldWa2FXRW9YQ0krUFRNMU1IQjRYQ0lzSUZ3aVBIUmhZbXhsZEZ3aUxDQmNJbkpsZEdsdVlUTjRYQ0lwSUhzZ2ZWeHVYRzVjYmoxdFpXUnBZU2drWTI5dVpHbDBhVzl1Y3k0dUxpbGNiaUFnUUdadmNpQWthU0JtY205dElERWdkR2h5YjNWbmFDQnNaVzVuZEdnb0pHTnZibVJwZEdsdmJuTXBYRzRnSUNBZ0pHTnZibVJwZEdsdmJuTTZJSE5sZEMxdWRHZ29KR052Ym1ScGRHbHZibk1zSUNScExDQndZWEp6WlMxbGVIQnlaWE56YVc5dUtHNTBhQ2drWTI5dVpHbDBhVzl1Y3l3Z0pHa3BLU2xjYmlBZ0pHSnlZVzVqYUdWek9pQm5aWFF0Y1hWbGNua3RZbkpoYm1Ob1pYTW9KR052Ym1ScGRHbHZibk1wWEc0Z0lDUnhkV1Z5ZVRvZ1hDSmNJbHh1SUNCQVpXRmphQ0FrWW5KaGJtTm9JR2x1SUNSaWNtRnVZMmhsYzF4dUlDQWdJRUJwWmlCemRISXRiR1Z1WjNSb0tDUnhkV1Z5ZVNrZ0lUMGdNRnh1SUNBZ0lDQWdKSEYxWlhKNU9pQWtjWFZsY25rZ0t5QmNJaXdnWENKY2JpQWdJQ0FrY1hWbGNuazZJQ1J4ZFdWeWVTQXJJQ1JpY21GdVkyaGNiaUFnUUcxbFpHbGhJQ043SkhGMVpYSjVmVnh1SUNBZ0lFQmpiMjUwWlc1MFhHNWNiaTh2WEc0Z0lGSmxZV1J6SUdFZ2JHbHpkQ0J2WmlCdFpXUnBZU0J4ZFdWeWVTQmxlSEJ5WlhOemFXOXVjeUJoYm1RZ2MyVndZWEpoZEdWeklHeHZaMmxqWVd3Z1pHbHphblZ1WTNScGIyNXpJR2x1ZEc4Z1pHbG1abVZ5Wlc1MElHSnlZVzVqYUdWelhHNWNiaUFnUUdGMWRHaHZjaUJGWkhWaGNtUnZJRUp2ZFdOaGMxeHVJQ0JBY0dGeVlXMGdlMHhwYzNSOUlDQWdKR1Y0Y0hKbGMzTnBiMjV6SUNBdElHeHBjM1FnYjJZZ1pYaHdjbVZ6YzJsdmJuTmNiaUFnUUhSb2NtOTNjeUJnSkdWNGNISmxjM05wYjI1Z0lHbHpJRzV2ZENCaElIWmhiR2xrSUdWNGNISmxjM05wYjI1Y2JseHVJQ0JBY21WMGRYSnVJSHRNYVhOMElId2dUblZzYkgxY2JseHVYRzVBWm5WdVkzUnBiMjRnWjJWMExYRjFaWEo1TFdKeVlXNWphR1Z6S0NSbGVIQnlaWE56YVc5dWN5bGNiaUFnSkhKbGMzVnNkRG9nWENKY0lseHVJQ0FrYUdGekxXZHliM1Z3Y3pvZ1ptRnNjMlZjYmlBZ0x5OGdSMlYwZEdsdVp5QnBibWwwYVdGc0lITnVZWEJ6YUc5MElHRnVaQ0JzYjI5cmFXNW5JR1p2Y2lCbmNtOTFjSE5jYmlBZ1FHVmhZMmdnSkdWNGNISmxjM05wYjI0Z2FXNGdKR1Y0Y0hKbGMzTnBiMjV6WEc0Z0lDQWdRR2xtSUhOMGNpMXNaVzVuZEdnb0pISmxjM1ZzZENrZ0lUMGdNRnh1SUNBZ0lDQWdKSEpsYzNWc2REb2dKSEpsYzNWc2RDQXJJRndpSUdGdVpDQmNJbHh1SUNBZ0lFQnBaaUIwZVhCbExXOW1LQ1JsZUhCeVpYTnphVzl1S1NBOVBTQmNJbk4wY21sdVoxd2lYRzRnSUNBZ0lDQWtjbVZ6ZFd4ME9pQWtjbVZ6ZFd4MElDc2dKR1Y0Y0hKbGMzTnBiMjVjYmlBZ0lDQkFaV3h6WlNCcFppQjBlWEJsTFc5bUtDUmxlSEJ5WlhOemFXOXVLU0E5UFNCY0lteHBjM1JjSWx4dUlDQWdJQ0FnSkhKbGMzVnNkRG9nSkhKbGMzVnNkQ0FySUc1MGFDZ2taWGh3Y21WemMybHZiaXdnTVNsY2JpQWdJQ0FnSUNSb1lYTXRaM0p2ZFhCek9pQjBjblZsWEc0Z0lDQWdRR1ZzYzJWY2JpQWdJQ0FnSUVCM1lYSnVJRndpSTNza1pYaHdjbVZ6YzJsdmJuMGdhWE1nYm05MElHRWdkbUZzYVdRZ1pYaHdjbVZ6YzJsdmJpNWNJbHh1SUNBdkx5QkpaaUIzWlNCb1lYWmxJR2R5YjNWd2N5d2dkMlVnYUdGMlpTQjBieUJqY21WaGRHVWdZV3hzSUhCdmMzTnBZbXhsSUdOdmJXSnBibUYwYVc5dWMxeHVJQ0JBYVdZZ0pHaGhjeTFuY205MWNITmNiaUFnSUNCQVpXRmphQ0FrWlhod2NtVnpjMmx2YmlCcGJpQWtaWGh3Y21WemMybHZibk5jYmlBZ0lDQWdJRUJwWmlCMGVYQmxMVzltS0NSbGVIQnlaWE56YVc5dUtTQTlQU0JjSW14cGMzUmNJbHh1SUNBZ0lDQWdJQ0FrWm1seWMzUTZJRzUwYUNna1pYaHdjbVZ6YzJsdmJpd2dNU2xjYmlBZ0lDQWdJQ0FnUUdWaFkyZ2dKRzFsYldKbGNpQnBiaUFrWlhod2NtVnpjMmx2Ymx4dUlDQWdJQ0FnSUNBZ0lFQnBaaUFrYldWdFltVnlJQ0U5SUNSbWFYSnpkRnh1SUNBZ0lDQWdJQ0FnSUNBZ1FHVmhZMmdnSkhCaGNuUnBZV3dnYVc0Z0pISmxjM1ZzZEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FrY21WemRXeDBPaUJxYjJsdUtDUnlaWE4xYkhRc0lITjBjaTF5WlhCc1lXTmxMV1pwY25OMEtDUm1hWEp6ZEN3Z0pHMWxiV0psY2l3Z0pIQmhjblJwWVd3cEtWeHVJQ0JBY21WMGRYSnVJQ1J5WlhOMWJIUmNibHh1THk5Y2JpQWdVR0Z5YzJWeklHRWdjM1J5YVc1bklIUnZJR1p2Y20wZ1lTQnRaV1JwWVNCeGRXVnllU0JsZUhCeVpYTnphVzl1WEc1Y2JpQWdRR0YxZEdodmNpQkZaSFZoY21SdklFSnZkV05oYzF4dVhHNGdJRUJ3WVhKaGJTQjdVM1J5YVc1bmZTQWdJQ1JsZUhCeVpYTnphVzl1SUNBdElHVjRjSEpsYzNOcGIyNGdLR2x1SUhOMGNtbHVaeWxjYmlBZ1FIUm9jbTkzY3lCRmVIQnlaWE56YVc5dUlIZHBkR2dnZEhsd1pTQmdkSGx3WlMxdlppZ2taWGh3Y21WemMybHZiaWxnSUdSbGRHVmpkR1ZrTENCemRISnBibWNnWlhod1pXTjBaV1JjYmlBZ1FIUm9jbTkzY3lCZ0pHVjRjSEpsYzNOcGIyNWdJR2x6SUcxcGMzTnBibWNnWVc0Z2IzQmxjbUYwYjNKY2JpQWdRSFJvY205M2N5QlZibXR1YjNkdUlIVnVhWFE2SUdBa2RXNXBkR0JjYmx4dUlDQkFjbVYwZFhKdUlIdFRkSEpwYm1jZ2ZDQk9kV3hzZlZ4dVhHNWNia0JtZFc1amRHbHZiaUJ3WVhKelpTMWxlSEJ5WlhOemFXOXVLQ1JsZUhCeVpYTnphVzl1S1Z4dUlDQWtiM0JsY21GMGIzSTZJRndpWENKY2JpQWdKSFpoYkhWbE9pQmNJbHdpWEc0Z0lDUmxiR1Z0Wlc1ME9pQmNJbHdpWEc0Z0lDUnlaWE4xYkhRNklGd2lYQ0pjYmlBZ0pHbHpMWGRwWkhSb09pQjBjblZsWEc0Z0lFQnBaaUIwZVhCbExXOW1LQ1JsZUhCeVpYTnphVzl1S1NBaFBTQmNJbk4wY21sdVoxd2lYRzRnSUNBZ1FIZGhjbTRnWENKRmVIQnlaWE56YVc5dUlIZHBkR2dnZEhsd1pTQmdJM3QwZVhCbExXOW1LQ1JsZUhCeVpYTnphVzl1S1gxZ0lHUmxkR1ZqZEdWa0xDQnpkSEpwYm1jZ1pYaHdaV04wWldRdVhDSmNiaUFnTHk4Z1UyVndZWEpoZEdsdVp5QjBhR1VnYjNCbGNtRjBiM0lnWm5KdmJTQjBhR1VnY21WemRDQnZaaUIwYUdVZ1pYaHdjbVZ6YzJsdmJseHVJQ0JBYVdZZ2MzUnlMWE5zYVdObEtDUmxlSEJ5WlhOemFXOXVMQ0F5TENBeUtTQTlQU0JjSWoxY0lseHVJQ0FnSUNSdmNHVnlZWFJ2Y2pvZ2MzUnlMWE5zYVdObEtDUmxlSEJ5WlhOemFXOXVMQ0F4TENBeUtWeHVJQ0FnSUNSMllXeDFaVG9nYzNSeUxYTnNhV05sS0NSbGVIQnlaWE56YVc5dUxDQXpLVnh1SUNCQVpXeHpaVnh1SUNBZ0lDUnZjR1Z5WVhSdmNqb2djM1J5TFhOc2FXTmxLQ1JsZUhCeVpYTnphVzl1TENBeExDQXhLVnh1SUNBZ0lDUjJZV3gxWlRvZ2MzUnlMWE5zYVdObEtDUmxlSEJ5WlhOemFXOXVMQ0F5S1Z4dUlDQXZMeUJEYUdWamEybHVaeUIzYUdGMElIUjVjR1VnYjJZZ1pYaHdjbVZ6YzJsdmJpQjNaWEpsSUdSbFlXeHBibWNnZDJsMGFGeHVJQ0JBYVdZZ2JXRndMV2hoY3kxclpYa29KR0p5WldGcmNHOXBiblJ6TENBa2RtRnNkV1VwWEc0Z0lDQWdKSEpsYzNWc2REb2diV0Z3TFdkbGRDZ2tZbkpsWVd0d2IybHVkSE1zSUNSMllXeDFaU2xjYmlBZ1FHVnNjMlVnYVdZZ2JXRndMV2hoY3kxclpYa29KRzFsWkdsaExXVjRjSEpsYzNOcGIyNXpMQ0FrWlhod2NtVnpjMmx2YmlsY2JpQWdJQ0FrY21WemRXeDBPaUJ0WVhBdFoyVjBLQ1J0WldScFlTMWxlSEJ5WlhOemFXOXVjeXdnSkdWNGNISmxjM05wYjI0cFhHNGdJQ0FnSkdsekxYZHBaSFJvT2lCbVlXeHpaVnh1SUNCQVpXeHpaVnh1SUNBZ0lDUnlaWE4xYkhRNklIUnZMVzUxYldKbGNpZ2tkbUZzZFdVcFhHNGdJRUJwWmlBa2FYTXRkMmxrZEdoY2JpQWdJQ0FrZFc1cGREb2dkVzVwZENna2NtVnpkV3gwS1Z4dUlDQWdJQ1JwYm5SbGNuWmhiRG9nTUZ4dUlDQWdJRUJwWmlCdFlYQXRhR0Z6TFd0bGVTZ2tkVzVwZEMxcGJuUmxjblpoYkhNc0lDUjFibWwwS1Z4dUlDQWdJQ0FnSkdsdWRHVnlkbUZzT2lCdFlYQXRaMlYwS0NSMWJtbDBMV2x1ZEdWeWRtRnNjeXdnSkhWdWFYUXBYRzRnSUNBZ1FHVnNjMlZjYmlBZ0lDQWdJRUIzWVhKdUlGd2lWVzVyYm05M2JpQjFibWwwT2lBamV5UjFibWwwZlZ3aVhHNGdJQ0FnUUdsbUlDUnZjR1Z5WVhSdmNpQTlQU0JjSWo1Y0lseHVJQ0FnSUNBZ0pHVnNaVzFsYm5RNklGd2lLRzFwYmkxM2FXUjBhRG9nSTNza2NtVnpkV3gwSUNzZ0pHbHVkR1Z5ZG1Gc2ZTbGNJbHh1SUNBZ0lFQmxiSE5sSUdsbUlDUnZjR1Z5WVhSdmNpQTlQU0JjSWp4Y0lseHVJQ0FnSUNBZ0pHVnNaVzFsYm5RNklGd2lLRzFoZUMxM2FXUjBhRG9nSTNza2NtVnpkV3gwSUMwZ0pHbHVkR1Z5ZG1Gc2ZTbGNJbHh1SUNBZ0lFQmxiSE5sSUdsbUlDUnZjR1Z5WVhSdmNpQTlQU0JjSWo0OVhDSmNiaUFnSUNBZ0lDUmxiR1Z0Wlc1ME9pQmNJaWh0YVc0dGQybGtkR2c2SUNON0pISmxjM1ZzZEgwcFhDSmNiaUFnSUNCQVpXeHpaU0JwWmlBa2IzQmxjbUYwYjNJZ1BUMGdYQ0k4UFZ3aVhHNGdJQ0FnSUNBa1pXeGxiV1Z1ZERvZ1hDSW9iV0Y0TFhkcFpIUm9PaUFqZXlSeVpYTjFiSFI5S1Z3aVhHNGdJQ0FnUUdWc2MyVmNiaUFnSUNBZ0lFQjNZWEp1SUZ3aUkzc2taWGh3Y21WemMybHZibjBnYVhNZ2JXbHpjMmx1WnlCaGJpQnZjR1Z5WVhSdmNpNWNJbHh1SUNCQVpXeHpaVnh1SUNBZ0lDUmxiR1Z0Wlc1ME9pQWtjbVZ6ZFd4MFhHNGdJRUJ5WlhSMWNtNGdKR1ZzWlcxbGJuUmNibHh1THk5Y2JpQWdVbVZ3YkdGalpYTWdkR2hsSUdacGNuTjBJRzlqWTNWeVpXNWpaU0J2WmlCMGFHVWdjM1J5YVc1bklIZHBkR2dnZEdobElISmxjR3hoWTJWdFpXNTBJSE4wY21sdVoxeHVYRzRnSUVCaGRYUm9iM0lnUldSMVlYSmtieUJDYjNWallYTmNibHh1SUNCQWNHRnlZVzBnZTFOMGNtbHVaMzBnSUNBa2MyVmhjbU5vSUNBdElGUm9aU0IyWVd4MVpTQmlaV2x1WnlCelpXRnlZMmhsWkNCbWIzSmNiaUFnUUhCaGNtRnRJSHRUZEhKcGJtZDlJQ0FnSkhKbGNHeGhZMlVnSUMwZ1ZHaGxJSEpsY0d4aFkyVnRaVzUwSUhOMGNtbHVaMXh1SUNCQWNHRnlZVzBnZTFOMGNtbHVaMzBnSUNBa2MzVmlhbVZqZENBZ0xTQlVhR1VnYzNSeWFXNW5JR0psYVc1bklISmxjR3hoWTJWa0lHOXVYRzVjYmlBZ1FISmxkSFZ5YmlCN1UzUnlhVzVuSUh3Z1RuVnNiSDFjYmx4dVhHNUFablZ1WTNScGIyNGdjM1J5TFhKbGNHeGhZMlV0Wm1seWMzUW9KSE5sWVhKamFDd2dKSEpsY0d4aFkyVXNJQ1J6ZFdKcVpXTjBLVnh1SUNBa2MyVmhjbU5vTFhOMFlYSjBPaUJ6ZEhJdGFXNWtaWGdvSkhOMVltcGxZM1FzSUNSelpXRnlZMmdwWEc0Z0lFQnBaaUFrYzJWaGNtTm9MWE4wWVhKMElEMDlJRzUxYkd4Y2JpQWdJQ0JBY21WMGRYSnVJQ1J6ZFdKcVpXTjBYRzRnSUNSeVpYTjFiSFE2SUhOMGNpMXpiR2xqWlNna2MzVmlhbVZqZEN3Z01Dd2dKSE5sWVhKamFDMXpkR0Z5ZENBdElERXBYRzRnSUNSeVpYTjFiSFE2SUNSeVpYTjFiSFFnS3lBa2NtVndiR0ZqWlZ4dUlDQWtjbVZ6ZFd4ME9pQWtjbVZ6ZFd4MElDc2djM1J5TFhOc2FXTmxLQ1J6ZFdKcVpXTjBMQ0FrYzJWaGNtTm9MWE4wWVhKMElDc2djM1J5TFd4bGJtZDBhQ2drYzJWaGNtTm9LU2xjYmlBZ1FISmxkSFZ5YmlBa2NtVnpkV3gwWEc1Y2JpOHZYRzRnSUVOaGMzUnpJR0VnYm5WdFltVnlJSFJ2SUdFZ2MzUnlhVzVuWEc1Y2JpQWdRR0YxZEdodmNpQklkV2R2SUVkcGNtRjFaR1ZzWEc1Y2JpQWdRSEJoY21GdElIdFRkSEpwYm1kOUlDQWdKSE4wY21sdVp5QWdMU0JPZFcxaVpYSWdkRzhnWW1VZ2NHRnljMlZrWEc1Y2JpQWdRSEpsZEhWeWJpQjdUR2x6ZENCOElFNTFiR3g5WEc1Y2JrQm1kVzVqZEdsdmJpQjBieTF1ZFcxaVpYSW9KSE4wY21sdVp5bGNiaUFnTHk4Z1RXRjBjbWxqWlhOY2JpQWdKSE4wY21sdVozTTZJRndpTUZ3aUlGd2lNVndpSUZ3aU1sd2lJRndpTTF3aUlGd2lORndpSUZ3aU5Wd2lJRndpTmx3aUlGd2lOMXdpSUZ3aU9Gd2lJRndpT1Z3aVhHNGdJQ1J1ZFcxaVpYSnpPaUF3SURFZ01pQXpJRFFnTlNBMklEY2dPQ0E1WEc0Z0lDOHZJRkpsYzNWc2RGeHVJQ0FrY21WemRXeDBPaUF3WEc0Z0lDUmthWFpwWkdWeU9pQXdYRzRnSUNSdGFXNTFjem9nWm1Gc2MyVmNiaUFnTHk4Z1RHOXZjR2x1WnlCMGFISnZkV2RvSUdGc2JDQmphR0Z5WVdOMFpYSnpYRzRnSUVCbWIzSWdKR2tnWm5KdmJTQXhJSFJvY205MVoyZ2djM1J5TFd4bGJtZDBhQ2drYzNSeWFXNW5LVnh1SUNBZ0lDUmphR0Z5WVdOMFpYSTZJSE4wY2kxemJHbGpaU2drYzNSeWFXNW5MQ0FrYVN3Z0pHa3BYRzRnSUNBZ0pHbHVaR1Y0T2lCcGJtUmxlQ2drYzNSeWFXNW5jeXdnSkdOb1lYSmhZM1JsY2lsY2JpQWdJQ0JBYVdZZ0pHTm9ZWEpoWTNSbGNpQTlQU0JjSWkxY0lseHVJQ0FnSUNBZ0pHMXBiblZ6T2lCMGNuVmxYRzRnSUNBZ1FHVnNjMlVnYVdZZ0pHTm9ZWEpoWTNSbGNpQTlQU0JjSWk1Y0lseHVJQ0FnSUNBZ0pHUnBkbWxrWlhJNklERmNiaUFnSUNCQVpXeHpaVnh1SUNBZ0lDQWdRR2xtSUhSNWNHVXRiMllvSkdsdVpHVjRLU0FoUFNCY0ltNTFiV0psY2x3aVhHNGdJQ0FnSUNBZ0lDUnlaWE4xYkhRNklHbG1LQ1J0YVc1MWN5d2dKSEpsYzNWc2RDQXFJQzB4TENBa2NtVnpkV3gwS1Z4dUlDQWdJQ0FnSUNCQWNtVjBkWEp1SUY5c1pXNW5kR2dvSkhKbGMzVnNkQ3dnYzNSeUxYTnNhV05sS0NSemRISnBibWNzSUNScEtTbGNiaUFnSUNBZ0lDUnVkVzFpWlhJNklHNTBhQ2drYm5WdFltVnljeXdnSkdsdVpHVjRLVnh1SUNBZ0lDQWdRR2xtSUNSa2FYWnBaR1Z5SUQwOUlEQmNiaUFnSUNBZ0lDQWdKSEpsYzNWc2REb2dKSEpsYzNWc2RDQXFJREV3WEc0Z0lDQWdJQ0JBWld4elpWeHVJQ0FnSUNBZ0lDQXZMeUJOYjNabElIUm9aU0JrWldOcGJXRnNJR1J2ZENCMGJ5QjBhR1VnYkdWbWRGeHVJQ0FnSUNBZ0lDQWtaR2wyYVdSbGNqb2dKR1JwZG1sa1pYSWdLaUF4TUZ4dUlDQWdJQ0FnSUNBa2JuVnRZbVZ5T2lBa2JuVnRZbVZ5SUM4Z0pHUnBkbWxrWlhKY2JpQWdJQ0FnSUNSeVpYTjFiSFE2SUNSeVpYTjFiSFFnS3lBa2JuVnRZbVZ5WEc0Z0lFQnlaWFIxY200Z2FXWW9KRzFwYm5WekxDQWtjbVZ6ZFd4MElDb2dMVEVzSUNSeVpYTjFiSFFwWEc1Y2JrQm1kVzVqZEdsdmJpQmZiR1Z1WjNSb0tDUnVkVzFpWlhJc0lDUjFibWwwS1Z4dUlDQWtjM1J5YVc1bmN6b2dYQ0p3ZUZ3aUlGd2lZMjFjSWlCY0ltMXRYQ0lnWENJbFhDSWdYQ0pqYUZ3aUlGd2ljR2xqWVZ3aUlGd2lhVzVjSWlCY0ltVnRYQ0lnWENKeVpXMWNJaUJjSW5CMFhDSWdYQ0p3WTF3aUlGd2laWGhjSWlCY0luWjNYQ0lnWENKMmFGd2lJRndpZG0xcGJsd2lJRndpZG0xaGVGd2lYRzRnSUNSMWJtbDBjem9nTVhCNElERmpiU0F4YlcwZ01TVWdNV05vSURGd2FXTmhJREZwYmlBeFpXMGdNWEpsYlNBeGNIUWdNWEJqSURGbGVDQXhkbmNnTVhab0lERjJiV2x1SURGMmJXRjRYRzRnSUNScGJtUmxlRG9nYVc1a1pYZ29KSE4wY21sdVozTXNJQ1IxYm1sMEtWeHVJQ0JBYVdZZ2RIbHdaUzF2Wmlna2FXNWtaWGdwSUNFOUlGd2liblZ0WW1WeVhDSmNiaUFnSUNCQWQyRnliaUJjSWxWdWEyNXZkMjRnZFc1cGRDQmdJM3NrZFc1cGRIMWdMbHdpWEc0Z0lDQWdRSEpsZEhWeWJpQm1ZV3h6WlZ4dUlDQkFjbVYwZFhKdUlDUnVkVzFpWlhJZ0tpQnVkR2dvSkhWdWFYUnpMQ0FrYVc1a1pYZ3BYRzRpTENJdkx5Qm9kSFJ3T2k4dlkzTnpiVzlxYnk1amIyMHZiR0YwWlhOMFgyNWxkMTlqYkdWaGNtWnBlRjl6YjE5bVlYSXZYRzR1WTJ4bFlYSm1hWGc2WVdaMFpYSmNiaUFnWTI5dWRHVnVkRG9nWENKY0lseHVJQ0JrYVhOd2JHRjVPaUIwWVdKc1pWeHVJQ0JqYkdWaGNqb2dZbTkwYUZ4dUlpd2lMeThnVWtWVFVFOU9VMGxXUlNCSlRVRkhSVk5jYm1sdFp5d2dhV1p5WVcxbExDQmxiV0psWkZ4dUlDQjNhV1IwYURvZ01UQXdKVnh1SWl3aUxtTnZiblJoYVc1bGNseHVJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFqWm1abVhHNGdJR0p2Y21SbGNpMXNaV1owT2lBeGNIZ2djMjlzYVdRZ0pHSnZjbVJsY2tOdmJHOXlYRzRnSUdKdmNtUmxjaTF5YVdkb2REb2dNWEI0SUhOdmJHbGtJQ1JpYjNKa1pYSkRiMnh2Y2x4dUlDQnRZWEpuYVc0NklEQWdZWFYwYjF4dUlDQnRZWGd0ZDJsa2RHZzZJREV5TURCd2VGeHVYRzVjYmx0amJHRnpjeW85SjJOdmJDMG5YVnh1SUNCa2FYTndiR0Y1T2lCMFlXSnNaUzFqWld4c1hHNGdJSFpsY25ScFkyRnNMV0ZzYVdkdU9pQnRhV1JrYkdWY2JseHVJQ0FyYldWa2FXRW9YQ0k4UFhSaFlteGxkRndpS1Z4dUlDQWdJR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYTF4dUlDQWdJSFJsZUhRdFlXeHBaMjQ2SUdObGJuUmxjbHh1WEc0dkx6SWdZMjlzZFcxdWN5QjNhV1JsWEc0dkx5QlVhR2x6SUdseklIVnpaV1FnYVc0Z2RHaGxJR1p2YjNSbGNpQm1iM0lnYm1GeWNtOTNaWElnWTI5c2RXMXVjeUJ2WmlCc2FXNXJjMXh1TG1OdmJDMHlMVEV5WEc0Z0lIZHBaSFJvT2lBeUx6RXlJQ29nTVRBd0pWeHVYRzRnSUN0dFpXUnBZU2hjSWp3OWRHRmliR1YwWENJcFhHNGdJQ0FnZDJsa2RHZzZJREV3TUNWY2JseHVMeTh6SUdOdmJIVnRibk1nZDJsa1pWeHVMeThnVkdocGN5QnBjeUIxYzJWa0lHbHVJSFJvWlNCbWIyOTBaWElnWm05eUlHWmhkSFJsY2lCamIyeDFiVzV6SUc5bUlHeHZibWRsY2kxMGFYUnNaV1FnYkdsdWEzTmNiaTVqYjJ3dE15MHhNbHh1SUNCM2FXUjBhRG9nTXk4eE1pQXFJREV3TUNWY2JseHVJQ0FyYldWa2FXRW9YQ0k4UFhSaFlteGxkRndpS1Z4dUlDQWdJSGRwWkhSb09pQXhNREFsWEc1Y2JpOHZJRFFnWTI5c2RXMXVjeUIzYVdSbExseHVMeThnVkdocGN5QnBjeUIxYzJWa0lHbHVJSFJvWlNCTVpXRmtaWEp6YUdsd0lIQmhaMlV1WEc0dVkyOXNMVFF0TVRKY2JpQWdkMmxrZEdnNklEUXZNVElnS2lBeE1EQWxYRzVjYmlBZ0syMWxaR2xoS0Z3aVBEMTBZV0pzWlhSY0lpbGNiaUFnSUNCM2FXUjBhRG9nTVRBd0pWeHVYRzVjYmk4dklEVWdZMjlzZFcxdWN5QjNhV1JsTGx4dUx5OGdWR2hwY3lCcGN5QjFjMlZrSUdsdUlHMXZjM1FnYjJZZ2RHaGxJR0poYm01bGNuTXVYRzR2THlCSmRDQnBjeUJoYkhOdklIVnpaV1FnYVc0Z2RHaGxJRTFoYVc0Z2JXOWtkV3hsSUdGeVpXRWdkR2hoZENCcGJtTnNkV1JsY3lCMGFHVWdjMmxrWldKaGNpNWNiaTVqYjJ3dE5TMHhNbHh1SUNCM2FXUjBhRG9nTlM4eE1pQXFJREV3TUNWY2JseHVJQ0FyYldWa2FXRW9YQ0k4UFhSaFlteGxkRndpS1Z4dUlDQWdJSGRwWkhSb09pQXhNREFsWEc1Y2JseHVMeThnTmlCamIyeDFiVzV6SUhkcFpHVXVYRzR2THlCVWFHbHpJSGRwYkd3Z2MzQmhiaUJvWVd4bUlIUm9aU0JoZG1GcGJHRmliR1VnZDJsa2RHaGNiaTh2SUZSb1pTQkRZWEprSUUxdlpIVnNaU0J2YmlCMGFHVWdhRzl0WlhCaFoyVWdkWE5sY3lCMGFHbHpYRzR1WTI5c0xUWXRNVEpjYmlBZ2QybGtkR2c2SURZdk1USWdLaUF4TURBbFhHNWNiaUFnSzIxbFpHbGhLRndpUEQxMFlXSnNaWFJjSWlsY2JpQWdJQ0IzYVdSMGFEb2dNVEF3SlZ4dVhHNWNiaTh2SURjZ1kyOXNkVzF1Y3lCM2FXUmxMbHh1THk4Z1ZHaHBjeUJwY3lCMWMyVmtJR2x1SUcxdmMzUWdiMllnZEdobElHSmhibTVsY25NdVhHNHZMeUJKZENCcGN5QmhiSE52SUhWelpXUWdhVzRnZEdobElFMWhhVzRnYlc5a2RXeGxJR0Z5WldFZ2RHaGhkQ0JwYm1Oc2RXUmxjeUIwYUdVZ2MybGtaV0poY2k1Y2JpOHZJRnRqYkdGemN5bzlKeTB0WTI5c0xUY3RNVEluWFZ4dUxtTnZiQzAzTFRFeVhHNGdJSGRwWkhSb09pQTNMekV5SUNvZ01UQXdKVnh1WEc0Z0lDdHRaV1JwWVNoY0lqdzlkR0ZpYkdWMFhDSXBYRzRnSUNBZ2QybGtkR2c2SURFd01DVmNibHh1WEc0dkx5QTRJR052YkhWdGJuTWdkMmxrWlM1Y2JpOHZJRlJvYVhNZ2FYTWdkWE5sWkNCcGJpQjBhR1VnVEdWaFpHVnljMmhwY0NCd1lXZGxMbHh1TG1OdmJDMDRMVEV5WEc0Z0lIZHBaSFJvT2lBNEx6RXlJQ29nTVRBd0pWeHVYRzRnSUN0dFpXUnBZU2hjSWp3OWRHRmliR1YwWENJcFhHNGdJQ0FnZDJsa2RHZzZJREV3TUNWY2JseHVYRzR1WTI5c0xUa3RNVEpjYmlBZ2QybGtkR2c2SURrdk1USWdLaUF4TURBbFhHNWNiaUFnSzIxbFpHbGhLRndpUEQxMFlXSnNaWFJjSWlsY2JpQWdJQ0IzYVdSMGFEb2dNVEF3SlZ4dVhHNWNiaTVqYjJ3dE1UQXRNVEpjYmlBZ2QybGtkR2c2SURFd0x6RXlJQ29nTVRBd0pWeHVYRzRnSUN0dFpXUnBZU2hjSWp3OWRHRmliR1YwWENJcFhHNGdJQ0FnZDJsa2RHZzZJREV3TUNWY2JseHVMbU52YkMweE1TMHhNbHh1SUNCM2FXUjBhRG9nTVRFdk1USWdLaUF4TURBbFhHNWNiaUFnSzIxbFpHbGhLRndpUEQxMFlXSnNaWFJjSWlsY2JpQWdJQ0IzYVdSMGFEb2dNVEF3SlZ4dUlpd2lLbHh1SUNCdFlYSm5hVzQ2SURCY2JpQWdjR0ZrWkdsdVp6b2dNRnh1SUNCaWIzZ3RjMmw2YVc1bk9pQmliM0prWlhJdFltOTRYRzVjYmlBZ0pqbzZZV1owWlhJc0lDWTZPbUpsWm05eVpWeHVJQ0FnSUdKdmVDMXphWHBwYm1jNklHSnZjbVJsY2kxaWIzaGNibHh1WW05a2VWeHVJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFrYzJ4aGRHVmNiaUFnY0dGa1pHbHVaem9nTUZ4dVhHNWhYRzRnSUhSbGVIUXRaR1ZqYjNKaGRHbHZiam9nYm05dVpWeHVJQ0JqYjJ4dmNqb2taM0psWlc1Y2JpQWdKanBvYjNabGNseHVJQ0FnSUdOdmJHOXlPaVJ1YVdkb2RHZHlaV1Z1WEc0Z0lDQWdkR1Y0ZEMxa1pXTnZjbUYwYVc5dU9pQjFibVJsY214cGJtVmNibHh1THk5U1pYTmxkQ0JtYkdWNFltOTRJSE5sZEhScGJtZHpJSGRvWlc0Z2NtVnpjRzl1WkdsdVp5QmlaV3h2ZHlCa1pYTnJkRzl3WEc0OWNtVnpjRzl1YzJsMlpTMXpkR0ZqYTF4dUlDQXJiV1ZrYVdFb1hDSThQWFJoWW14bGRGd2lLVnh1SUNBZ0lHWnNaWGd0Wm14dmR6b2dZMjlzZFcxdVhHNGlMQ0l2THlCVWFHVWdkR0ZpYkdWeklITjBZWEowSUhSdklHeHZiMnNnWm5WbmJIa2dZWFFnWVhKdmRXNWtJRGN3TUhCNExDQnpieUJzWlhRbmN5QnpkR0Z5ZENCeVpYTndiMjVrYVc1bklIUm9aWEpsWEc0a2RHRmliR1V0WW5KbFlXczZJRndpUEQwM01EQndlRndpWEc1Y2JuUmhZbXhsWEc1Y2RHMWhjbWRwYmpvZ01DQXdJREV1TldWdFhHNWNkSGRwWkhSb09pQXhNREFsWEc1Y2JuUnlYRzRnSUdKdmNtUmxjaTFpYjNSMGIyMDZJREZ3ZUNCemIyeHBaQ0FrWTJ4dmRXUmNibHh1SUNBcmJXVmthV0VvSkhSaFlteGxMV0p5WldGcktWeHVJQ0FnSUcxaGNtZHBiaTEwYjNBNklEQWdJV2x0Y0c5eWRHRnVkRHRjYmx4dUlDQWdJQ1k2Wm1seWMzUXRZMmhwYkdSY2JpQWdJQ0FnSUdKdmNtUmxjaTEwYjNBNklERndlQ0J6YjJ4cFpDQWtZMnh2ZFdSY2JseHVJQ0FtT201MGFDMWphR2xzWkNobGRtVnVLVnh1SUNBZ0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDUnpkR1ZoYlZ4dVhHNTBaRnh1SUNCMlpYSjBhV05oYkMxaGJHbG5iam9nZEc5d1hHNGdJSEJoWkdScGJtYzZJREV3Y0hnZ05YQjRYRzVjYmlBZ0syMWxaR2xoS0NSMFlXSnNaUzFpY21WaGF5bGNiaUFnSUNCdFlYSm5hVzR0ZEc5d09pQXdJQ0ZwYlhCdmNuUmhiblE3WEc0Z0lDQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxYRzRnSUNBZ2NHRmtaR2x1Wnkxc1pXWjBPaUEwTUNWY2JseHVJQ0FnSUNZNlltVm1iM0psWEc0Z0lDQWdJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1ZjYmlBZ0lDQWdJSFJ2Y0RvZ05uQjRYRzRnSUNBZ0lDQnNaV1owT2lBMmNIaGNiaUFnSUNBZ0lIZHBaSFJvT2lBME1DVmNiaUFnSUNBZ0lIQmhaR1JwYm1jdGNtbG5hSFE2SURFd2NIaGNiaUFnSUNBZ0lIZG9hWFJsTFhOd1lXTmxPaUJ1YjNkeVlYQmNiaUFnSUNBZ0lHWnZiblF0ZDJWcFoyaDBPaUFrYzJWdGFXSnZiR1JjYmx4dVhHNGdJQ0FnSmpwdWRHZ3RiMll0ZEhsd1pTZ3hLVnh1SUNBZ0lDQWdKanBpWldadmNtVmNiaUFnSUNBZ0lDQWdZMjl1ZEdWdWREb2dYQ0pEYVhSNU9pQmNJbHh1SUNBZ0lDWTZiblJvTFc5bUxYUjVjR1VvTWlsY2JpQWdJQ0FnSUNZNlltVm1iM0psWEc0Z0lDQWdJQ0FnSUdOdmJuUmxiblE2SUZ3aVFXUmtjbVZ6Y3pvZ1hDSmNiaUFnSUNBbU9tNTBhQzF2WmkxMGVYQmxLRE1wWEc0Z0lDQWdJQ0FtT21KbFptOXlaVnh1SUNBZ0lDQWdJQ0JqYjI1MFpXNTBPaUJjSWxCb2IyNWxPaUJjSWx4dVhHNTBhR1ZoWkZ4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWtZMnh2ZFdSY2JseHVJQ0IwY2x4dUlDQWdJQzh2U0dsa1pTQjBhR1VnZEdobFlXUWdhVzVtYjNKdFlYUnBiMjRnYVc0Z1lXNGdZV05qWlhOemFXSnNaU0IzWVhsY2JseHVJQ0FnSUN0dFpXUnBZU2drZEdGaWJHVXRZbkpsWVdzcFhHNGdJQ0FnSUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdWY2JpQWdJQ0FnSUhSdmNEb2dMVGs1T1Rsd2VGeHVJQ0FnSUNBZ2JHVm1kRG9nTFRrNU9UbHdlRnh1WEc0Z0lIUm9YRzRnSUNBZ1ptOXVkQzEzWldsbmFIUTZJQ1J6WlcxcFltOXNaRnh1SUNBZ0lIUmxlSFF0WVd4cFoyNDZJR3hsWm5SY2JpQWdJQ0J3WVdSa2FXNW5PaUExY0hoY2JseHVkR0ZpYkdVc0lIUm9aV0ZrTENCMFltOWtlU3dnZEdnc0lIUmtMQ0IwY2x4dUlDQXJiV1ZrYVdFb0pIUmhZbXhsTFdKeVpXRnJLVnh1SUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yWEc0aUxDSXVibUYyTFcxcGJtOXlYRzRnSUdScGMzQnNZWGs2SUdKc2IyTnJYRzRnSUhSbGVIUXRZV3hwWjI0NklISnBaMmgwWEc1Y2JpQWdKbDlmWTI5dWRHRnBibVZ5WEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dKSGRvYVhSbFhHNGdJQ0FnWW05eVpHVnlMV3hsWm5RNklERndlQ0J6YjJ4cFpDQWtZbTl5WkdWeVEyOXNiM0pjYmlBZ0lDQmliM0prWlhJdGNtbG5hSFE2SURGd2VDQnpiMnhwWkNBa1ltOXlaR1Z5UTI5c2IzSmNiaUFnSUNCdFlYSm5hVzQ2SURBZ1lYVjBiMXh1SUNBZ0lIQmhaR1JwYm1jNklERnlaVzBnTVM0MWNtVnRYRzRnSUNBZ2JXRjRMWGRwWkhSb09pQXhNakF3Y0hoY2JseHVJQ0FnSUN0dFpXUnBZU2hjSWp3OWNHaHZibVZjSWlsY2JpQWdJQ0FnSUM4dlpHbHpjR3hoZVRvZ2JtOXVaVnh1SUNBZ0lDQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlYRzVjYmlBZ2JHbGNiaUFnSUNCa2FYTndiR0Y1T2lCcGJteHBibVV0WW14dlkydGNibHh1SUNBZ0lDWTZZV1owWlhKY2JpQWdJQ0FnSUdScGMzQnNZWGs2SUdsdWJHbHVaUzFpYkc5amExeHVJQ0FnSUNBZ1kyOXVkR1Z1ZERvZ0p5QjhJQ2RjYmlBZ0lDQWdJR052Ykc5eU9pQWtaM0psWlc1Y2JpQWdJQ0FnSUcxaGNtZHBiam9nTUNBeWNIZ2dNQ0F1TTNKbGJWeHVYRzRnSUNBZ0pqcHVkR2d0WTJocGJHUW9NeWxjYmx4dUlDQWdJQ0FnSmpwaFpuUmxjbHh1SUNBZ0lDQWdJQ0JqYjI1MFpXNTBPaUFuSUNkY2JseHVJQ0FnSUNZNmJHRnpkQzFqYUdsc1pGeHVJQ0FnSUNBZ1lWeHVJQ0FnSUNBZ0lDQm1iMjUwTFhkbGFXZG9kRHBpYjJ4a1hHNGdJQ0FnSUNBZ0lHMWhjbWRwYmkxeWFXZG9kRG9nTVRCd2VGeHVYRzRnSUNBZ0lDQWdJQ3R0WldScFlTaGNJanc5Y0dodmJtVmNJaWxjYmlBZ0lDQWdJQ0FnSUNCdFlYSm5hVzR0Y21sbmFIUTZJREJjYmx4dUlDQW1YMTlzYVc1clhHNGdJQ0FnWTI5c2IzSTZJQ1JqYUdGeVkyOWhiRnh1SUNBZ0lHUnBjM0JzWVhrNklHbHViR2x1WlMxaWJHOWphMXh1SUNBZ0lIQmhaR1JwYm1jNklEQWdMak55WlcwZ01GeHVYRzRnSUNBZ0syMWxaR2xoS0Z3aVBEMXdhRzl1WlZ3aUtWeHVJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQXVPSEpsYlZ4dVhHNWNiaUFnSUNBbU9taHZkbVZ5WEc0Z0lDQWdJQ0JqYjJ4dmNqb2dKR2R5WldWdVhHNWNiaTV6YVhSbExXMWhjRnh1SUNCaFhHNGdJQ0FnWTI5c2IzSTZKR05vWVhKamIyRnNYRzRnSUNBZ0pqcG9iM1psY2x4dUlDQWdJQ0FnWTI5c2IzSTZJQ1JuY21WbGJseHVJaXdpTHk4Z2FHVmhaR1Z5SUhOcGVtVmNiaVJvWldGa1pYSXRhR1ZwWjJoMExWTTZJRFV3Y0hoY2JpUm9aV0ZrWlhJdGFHVnBaMmgwTFV3NklEZ3djSGhjYmx4dUx5OGdUbUYyYVdkaGRHbHZiaUJ6YVhwbFhHNGtibUYyTFhkcFpIUm9MVk02SURJMk1IQjRYRzVjYmk4dklGTmxZWEpqYUNCemFYcGxYRzRrYzJWaGNtTm9MV2hsYVdkb2RDMVRPaUExTUhCNFhHNGtjMlZoY21Ob0xXaGxhV2RvZEMxTU9pQXhNakJ3ZUZ4dVhHNHZMeUI2TFdsdVpHVjRYRzRrWW1Wc2IzY3RZMjl1ZEdWdWREb2dNVnh1SkdOdmJuUmxiblE2SURKY2JpUmhZbTkyWlMxamIyNTBaVzUwT2lBelhHNWNibHh1WEc0OVkyOXNkVzF1S0NSd1pYSmpaVzUwWVdkbExDQWtabXh2WVhRdFpHbHlaV04wYVc5dU9pQnNaV1owS1Z4dUlDQjNhV1IwYURvZ01UQXdKU0FxSUNSd1pYSmpaVzUwWVdkbFhHNGdJR1pzYjJGME9pQWtabXh2WVhRdFpHbHlaV04wYVc5dVhHNWNiajFqYkdWaGNtWnBlRnh1SUNBbU9tRm1kR1Z5WEc0Z0lDQWdZMjl1ZEdWdWREb2dYQ0pjSWx4dUlDQWdJR1JwYzNCc1lYazZJSFJoWW14bFhHNGdJQ0FnWTJ4bFlYSTZJR0p2ZEdoY2JseHVZUzVqWkMxdVlYWXRhWFJsYlZ4dUlDQW1PbWh2ZG1WeVhHNGdJQ0FnYVcxblhHNGdJQ0FnSUNCdmNHRmphWFI1T2lBdU55QWhhVzF3YjNKMFlXNTBYRzRnSUNBZ2FETmNiaUFnSUNBZ0lHTnZiRzl5T2lCc2FXZG9kR1Z1S0NSbmNtVmxiaXdnTXpBbEtWeHVJQ0FnSUNBZ0x5OWpiMnh2Y2pvZ0pHNXBaMmgwWjNKbFpXNGdJV2x0Y0c5eWRHRnVkRnh1WEc1Y2JpOHZVSEpwYldGeWVTQnpkSGxzWlZ4dVltOWtlVnh1SUNBcmJXVmthV0VvWENJOFpHVnphM1J2Y0Z3aUtWeHVJQ0FnSUM4dklHeGhlVzkxZENCdGFYaHBibk1nYVc1emFXUmxJSEJoY25ScFlXeHpJRDRnWDJ4aGVXOTFkQzV6WTNOelhHNGdJQ0FnSmk1dVlYWXRiMjR0YkdWbWRDNXZkbVZ5Wm14dmR5MW9hV1JrWlc1Y2JpQWdJQ0FnSUc5MlpYSm1iRzkzT2lCb2FXUmtaVzVjYmx4dWFXNXdkWFJiZEhsd1pUMWNJbk5sWVhKamFGd2lYVG82TFcxekxXTnNaV0Z5WEc0Z0lDOHZJSEpsYlc5MlpYTWdZMnh2YzJVZ2FXTnZiaUF0SUVsRlhHNGdJR1JwYzNCc1lYazZJRzV2Ym1WY2JseHVhVzV3ZFhSYmRIbHdaVDFjSW5ObFlYSmphRndpWFRvNkxYZGxZbXRwZEMxelpXRnlZMmd0WkdWamIzSmhkR2x2Yml4Y2JtbHVjSFYwVzNSNWNHVTlYQ0p6WldGeVkyaGNJbDA2T2kxM1pXSnJhWFF0YzJWaGNtTm9MV05oYm1ObGJDMWlkWFIwYjI0c1hHNXBibkIxZEZ0MGVYQmxQVndpYzJWaGNtTm9YQ0pkT2pvdGQyVmlhMmwwTFhObFlYSmphQzF5WlhOMWJIUnpMV0oxZEhSdmJpeGNibWx1Y0hWMFczUjVjR1U5WENKelpXRnlZMmhjSWwwNk9pMTNaV0pyYVhRdGMyVmhjbU5vTFhKbGMzVnNkSE10WkdWamIzSmhkR2x2Ymx4dUlDQmthWE53YkdGNU9pQnViMjVsWEc1Y2JpOHFJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdFhHNGdLbHh1SUNwTllXbHVJR052YlhCdmJtVnVkSE5jYmlBcVhHNGdLaTB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdEtseHVYRzR1WTJRdGJXRnBiaTFqYjI1MFpXNTBMRnh1TG1Oa0xXMWhhVzR0YUdWaFpHVnlYRzRnSUM4cUlFWnZjbU5sSUVoaGNtUjNZWEpsSUVGalkyVnNaWEpoZEdsdmJpQnBiaUJYWldKTGFYUmNiaUFnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWYUtEQXBYRzRnSUhkcGJHd3RZMmhoYm1kbE9pQjBjbUZ1YzJadmNtMWNibHh1SUNCMWJGeHVJQ0FnSUd4cGMzUXRjM1I1YkdVNklHNXZibVZjYmx4dUxtTmtMVzFoYVc0dFkyOXVkR1Z1ZEZ4dUlDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVmNiaUFnZEhKaGJuTnBkR2x2YmpvZ2RISmhibk5tYjNKdElEQXVNM05jYmx4dUlDQXJiV1ZrYVdFb1hDSThaR1Z6YTNSdmNGd2lLVnh1SUNBZ0lDWXVibUYyTFdsekxYWnBjMmxpYkdWY2JpQWdJQ0FnSUhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbFdDZ3RKRzVoZGkxM2FXUjBhQzFUS1Z4dVhHNGdJQ0FnTG01aGRpMXZiaTFzWldaMElDWXVibUYyTFdsekxYWnBjMmxpYkdWY2JpQWdJQ0FnSUhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbFdDZ2tibUYyTFhkcFpIUm9MVk1wWEc1Y2JpNWpaQzF0WVdsdUxXaGxZV1JsY2x4dUlDQm1iMjUwTFdaaGJXbHNlVG9nSkhObGNtbG1YRzRnSUhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlZ4dUlDQjBjbUZ1YzJsMGFXOXVPaUIwY21GdWMyWnZjbTBnTUM0emMxeHVYRzRnSUN0dFpXUnBZU2hjSWp4a1pYTnJkRzl3WENJcFhHNGdJQ0FnSmk1dVlYWXRhWE10ZG1semFXSnNaVnh1SUNBZ0lDQWdMeTkwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlZnb0xTUnVZWFl0ZDJsa2RHZ3RVeWxjYmlBZ0lDQWdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsV0Nnd0tWeHVYRzRnSUNBZ0xtNWhkaTF2Ymkxc1pXWjBJQ1l1Ym1GMkxXbHpMWFpwYzJsaWJHVmNiaUFnSUNBZ0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxXQ2drYm1GMkxYZHBaSFJvTFZNcFhHNWNiaTVqWkMxdFlXbHVMV052Ym5SbGJuUmNiaUFnTHk5RFNFRk9SMFZFWEc0Z0lDOHZZbUZqYTJkeWIzVnVaRG9nSkdOc2IzVmtYRzRnSUcxcGJpMW9aV2xuYUhRNklERXdNSFpvWEc0Z0lIb3RhVzVrWlhnNklDUmpiMjUwWlc1MFhHNWNiaTVqWkMxdFlXbHVMV2hsWVdSbGNseHVJQ0JvWldsbmFIUTZJQ1JvWldGa1pYSXRhR1ZwWjJoMExWTmNiaUFnWW1GamEyZHliM1Z1WkRvZ0pIZG9hWFJsWEc0Z0lIb3RhVzVrWlhnNklDUmhZbTkyWlMxamIyNTBaVzUwWEc1Y2JpQWdMeTlEU0VGT1IwVkVYRzRnSUM4dlltOTRMWE5vWVdSdmR6b2dNQ0F4Y0hnZ05YQjRJSEpuWW1Fb01UQXdMREV3TUN3eE1EQXNJQzQxS1Z4dUlDQmliM0prWlhJdFltOTBkRzl0T2lBeGNIZ2djMjlzYVdRZ0pHTnNiM1ZrWEc1Y2JpQWdMbTVoZGkxcGN5MW1hWGhsWkNBbVhHNGdJQ0FnTHlvZ1lXUmtJQzV1WVhZdGFYTXRabWw0WldRZ1kyeGhjM01nZEc4Z1ltOWtlU0JwWmlCNWIzVWdkMkZ1ZENCaElHWnBlR1ZrSUc1aGRtbG5ZWFJwYjI0Z2IyNGdQaUF4TURJMGNIaGNiaUFnSUNCd2IzTnBkR2x2YmpvZ1ptbDRaV1JjYmlBZ0lDQjBiM0E2SURCY2JpQWdJQ0JzWldaME9pQXdYRzRnSUNBZ2QybGtkR2c2SURFd01DVmNibHh1SUNBcmJXVmthV0VvWENJK1pHVnphM1J2Y0Z3aUtWeHVJQ0FnSUdobGFXZG9kRG9nSkdobFlXUmxjaTFvWldsbmFIUXRURnh1SUNBZ0lDdGpiR1ZoY21acGVGeHVYRzR1WTJRdGJHOW5iMXh1SUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdWY2JpQWdkRzl3T2lBeE1uQjRYRzRnSUd4bFpuUTZJRFVsWEc1Y2JpQWdhVzFuWEc0Z0lDQWdaR2x6Y0d4aGVUb2dZbXh2WTJ0Y2JseHVJQ0FyYldWa2FXRW9YQ0k4WkdWemEzUnZjRndpS1Z4dUlDQWdJQzV1WVhZdGIyNHRiR1ZtZENBbVhHNGdJQ0FnSUNCc1pXWjBPaUJoZFhSdlhHNGdJQ0FnSUNCeWFXZG9kRG9nTlNWY2JseHVJQ0FyYldWa2FXRW9YQ0krWkdWemEzUnZjRndpS1Z4dUlDQWdJSFJ2Y0RvZ01qWndlRnh1SUNBZ0lHeGxablE2SURSbGJWeHVYRzR1WTJRdGFHVmhaR1Z5TFdKMWRIUnZibk5jYmlBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbFhHNGdJR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYTF4dUlDQjBiM0E2SUROd2VGeHVJQ0J5YVdkb2REb2dOU1ZjYmx4dUlDQnNhVnh1SUNBZ0lHUnBjM0JzWVhrNklHbHViR2x1WlMxaWJHOWphMXh1WEc0Z0lDdHRaV1JwWVNoY0lqeGtaWE5yZEc5d1hDSXBYRzRnSUNBZ0xtNWhkaTF2Ymkxc1pXWjBJQ1pjYmlBZ0lDQWdJSEpwWjJoME9pQmhkWFJ2WEc0Z0lDQWdJQ0JzWldaME9pQTFKVnh1SUNBZ0lDQWdiR2xjYmlBZ0lDQWdJQ0FnWm14dllYUTZJSEpwWjJoMFhHNWNiaUFnSzIxbFpHbGhLRndpUG1SbGMydDBiM0JjSWlsY2JpQWdJQ0IwYjNBNklERnlaVzFjYmlBZ0lDQnlhV2RvZERvZ01YSmxiVnh1WEc0dVkyUXRjMlZoY21Ob0xYUnlhV2RuWlhJc1hHNHVZMlF0Ym1GMkxYUnlhV2RuWlhKY2JpQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxYRzRnSUdScGMzQnNZWGs2SUdKc2IyTnJYRzRnSUhkcFpIUm9PaUEwTkhCNFhHNGdJR2hsYVdkb2REb2dORFJ3ZUZ4dUlDQnZkbVZ5Wm14dmR6b2dhR2xrWkdWdVhHNGdJSGRvYVhSbExYTndZV05sT2lCdWIzZHlZWEJjYmlBZ0x5b2dhR2xrWlNCMFpYaDBYRzRnSUdOdmJHOXlPaUIwY21GdWMzQmhjbVZ1ZEZ4dUlDQjZMV2x1WkdWNE9pQWtZV0p2ZG1VdFkyOXVkR1Z1ZEZ4dVhHNHVZMlF0YzJWaGNtTm9MWFJ5YVdkblpYSmNiaUFnSmpvNlltVm1iM0psTENBbU9qcGhablJsY2x4dUlDQWdJQzhxSUhObFlYSmphQ0JwWTI5dVhHNGdJQ0FnWTI5dWRHVnVkRG9nSnlkY2JpQWdJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1ZjYmlBZ0lDQjBjbUZ1YzJsMGFXOXVPaUJ2Y0dGamFYUjVJREF1TTNOY2JpQWdJQ0F2S2lCR2IzSmpaU0JJWVhKa2QyRnlaU0JCWTJObGJHVnlZWFJwYjI0Z2FXNGdWMlZpUzJsMFhHNGdJQ0FnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWYUtEQXBYRzRnSUNBZ1ltRmphMlpoWTJVdGRtbHphV0pwYkdsMGVUb2dhR2xrWkdWdVhHNWNiaUFnSmpvNlltVm1iM0psWEc0Z0lDQWdMeW9nYkdWdWMxeHVJQ0FnSUhSdmNEb2dNVEZ3ZUZ4dUlDQWdJR3hsWm5RNklERXhjSGhjYmlBZ0lDQjNhV1IwYURvZ01UaHdlRnh1SUNBZ0lHaGxhV2RvZERvZ01UaHdlRnh1SUNBZ0lHSnZjbVJsY2kxeVlXUnBkWE02SURVd0pWeHVJQ0FnSUdKdmNtUmxjam9nTTNCNElITnZiR2xrSUNSdWFXZG9kR2R5WldWdVhHNWNiaUFnSmpvNllXWjBaWEpjYmlBZ0lDQXZLaUJvWVc1a2JHVmNiaUFnSUNCb1pXbG5hSFE2SUROd2VGeHVJQ0FnSUhkcFpIUm9PaUE0Y0hoY2JpQWdJQ0JpWVdOclozSnZkVzVrT2lBa2JtbG5hSFJuY21WbGJseHVJQ0FnSUdKdmRIUnZiVG9nTVRSd2VGeHVJQ0FnSUhKcFoyaDBPaUF4TVhCNFhHNGdJQ0FnZEhKaGJuTm1iM0p0T2lCeWIzUmhkR1VvTkRWa1pXY3BYRzRnSUhOd1lXNWNiaUFnSUNBdktpQmpiMjUwWVdsdVpYSWdabTl5SUhSb1pTQllJR2xqYjI1Y2JpQWdJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1ZjYmlBZ0lDQm9aV2xuYUhRNklERXdNQ1ZjYmlBZ0lDQjNhV1IwYURvZ01UQXdKVnh1SUNBZ0lIUnZjRG9nTUZ4dUlDQWdJR3hsWm5RNklEQmNiaUFnYzNCaGJqbzZZbVZtYjNKbExDQnpjR0Z1T2pwaFpuUmxjbHh1SUNBZ0lDOHFJR05zYjNObElHbGpiMjVjYmlBZ0lDQmpiMjUwWlc1ME9pQW5KMXh1SUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpWeHVJQ0FnSUdScGMzQnNZWGs2SUdsdWJHbHVaUzFpYkc5amExeHVJQ0FnSUdobGFXZG9kRG9nTTNCNFhHNGdJQ0FnZDJsa2RHZzZJREl5Y0hoY2JpQWdJQ0IwYjNBNklEVXdKVnh1SUNBZ0lHMWhjbWRwYmkxMGIzQTZJQzB5Y0hoY2JpQWdJQ0JzWldaME9pQTFNQ1ZjYmlBZ0lDQnRZWEpuYVc0dGJHVm1kRG9nTFRFeGNIaGNiaUFnSUNCaVlXTnJaM0p2ZFc1a09pQWtibWxuYUhSbmNtVmxibHh1SUNBZ0lHOXdZV05wZEhrNklEQmNiaUFnSUNBdktpQkdiM0pqWlNCSVlYSmtkMkZ5WlNCQlkyTmxiR1Z5WVhScGIyNGdhVzRnVjJWaVMybDBYRzRnSUNBZ2RISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVmFLREFwWEc0Z0lDQWdZbUZqYTJaaFkyVXRkbWx6YVdKcGJHbDBlVG9nYUdsa1pHVnVYRzRnSUNBZ2RISmhibk5wZEdsdmJqb2diM0JoWTJsMGVTQXdMak56TENCMGNtRnVjMlp2Y20wZ01DNHpjMXh1WEc0Z0lITndZVzQ2T21KbFptOXlaVnh1SUNBZ0lIUnlZVzV6Wm05eWJUb2djbTkwWVhSbEtEUTFaR1ZuS1Z4dVhHNGdJSE53WVc0Nk9tRm1kR1Z5WEc0Z0lDQWdkSEpoYm5ObWIzSnRPaUJ5YjNSaGRHVW9MVFExWkdWbktWeHVYRzRnSUNZdWMyVmhjbU5vTFdsekxYWnBjMmxpYkdWY2JpQWdJQ0FtT2pwaVpXWnZjbVVzSUNZNk9tRm1kR1Z5WEc0Z0lDQWdJQ0F2S2lCb2FXUmxJSE5sWVhKamFDQnBZMjl1WEc0Z0lDQWdJQ0J2Y0dGamFYUjVPaUF3WEc0Z0lDQWdjM0JoYmpvNlltVm1iM0psTENCemNHRnVPanBoWm5SbGNseHVJQ0FnSUNBZ0x5b2djMmh2ZHlCamJHOXpaU0JwWTI5dVhHNGdJQ0FnSUNCdmNHRmphWFI1T2lBeFhHNGdJQ0FnYzNCaGJqbzZZbVZtYjNKbFhHNGdJQ0FnSUNCMGNtRnVjMlp2Y20wNklISnZkR0YwWlNneE16VmtaV2NwWEc0Z0lDQWdjM0JoYmpvNllXWjBaWEpjYmlBZ0lDQWdJSFJ5WVc1elptOXliVG9nY205MFlYUmxLRFExWkdWbktWeHVYRzR1WTJRdGJtRjJMWFJ5YVdkblpYSmNiaUFnSmpwb2IzWmxjbHh1SUNBZ0lDOHZTR2xrWlNBblRXVnVkU2NnZDI5eVpDQm1iM0lnWVdOalpYTnphV0pwYkdsMGVTQkpJR2h2Y0dWY2JpQWdJQ0JqYjJ4dmNqb2dkSEpoYm5Od1lYSmxiblJjYmlBZ2MzQmhiaXdnYzNCaGJqbzZZbVZtYjNKbExDQnpjR0Z1T2pwaFpuUmxjbHh1SUNBZ0lDOHFJR2hoYldKMWNtZGxjaUJwWTI5dUlHbHVJRU5UVTF4dUlDQWdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVnh1SUNBZ0lHUnBjM0JzWVhrNklHbHViR2x1WlMxaWJHOWphMXh1SUNBZ0lHaGxhV2RvZERvZ00zQjRYRzRnSUNBZ2QybGtkR2c2SURJMGNIaGNiaUFnSUNCaVlXTnJaM0p2ZFc1a09pQWtibWxuYUhSbmNtVmxibHh1SUNCemNHRnVYRzRnSUNBZ0x5b2diR2x1WlNCcGJpQjBhR1VnWTJWdWRHVnlYRzRnSUNBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbFhHNGdJQ0FnZEc5d09pQTFNQ1ZjYmlBZ0lDQnlhV2RvZERvZ01UQndlRnh1SUNBZ0lHMWhjbWRwYmkxMGIzQTZJQzB5Y0hoY2JpQWdJQ0IwY21GdWMybDBhVzl1T2lCaVlXTnJaM0p2ZFc1a0lEQXVNM01nTUM0emMxeHVJQ0J6Y0dGdU9qcGlaV1p2Y21Vc0lITndZVzQ2T21GbWRHVnlYRzRnSUNBZ0x5b2diM1JvWlhJZ01pQnNhVzVsYzF4dUlDQWdJR052Ym5SbGJuUTZJQ2NuWEc0Z0lDQWdjbWxuYUhRNklEQmNiaUFnSUNBdktpQkdiM0pqWlNCSVlYSmtkMkZ5WlNCQlkyTmxiR1Z5WVhScGIyNGdhVzRnVjJWaVMybDBYRzRnSUNBZ2RISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVmFLREFwWEc0Z0lDQWdZbUZqYTJaaFkyVXRkbWx6YVdKcGJHbDBlVG9nYUdsa1pHVnVYRzRnSUNBZ2RISmhibk5tYjNKdExXOXlhV2RwYmpvZ01DVWdOVEFsWEc0Z0lDQWdkSEpoYm5OcGRHbHZiam9nZEhKaGJuTm1iM0p0SURBdU0zTWdNQzR6YzF4dUlDQnpjR0Z1T2pwaVpXWnZjbVZjYmlBZ0lDQXZLaUJ0Wlc1MUlHbGpiMjRnZEc5d0lHeHBibVZjYmlBZ0lDQjBiM0E2SUMwMmNIaGNiaUFnYzNCaGJqbzZZV1owWlhKY2JpQWdJQ0F2S2lCdFpXNTFJR2xqYjI0Z1ltOTBkRzl0SUd4cGJtVmNiaUFnSUNCMGIzQTZJRFp3ZUZ4dUlDQW1MbTVoZGkxcGN5MTJhWE5wWW14bFhHNGdJQ0FnYzNCaGJseHVJQ0FnSUNBZ0x5b2dhR2xrWlNCc2FXNWxJR2x1SUhSb1pTQmpaVzUwWlhKY2JpQWdJQ0FnSUdKaFkydG5jbTkxYm1RNklISm5ZbUVvSkc1cFoyaDBaM0psWlc0c0lEQXBYRzRnSUNBZ2MzQmhiam82WW1WbWIzSmxMQ0J6Y0dGdU9qcGhablJsY2x4dUlDQWdJQ0FnTHlvZ2EyVmxjQ0IyYVhOcFlteGxJRzkwYUdWeUlESWdiR2x1WlhOY2JpQWdJQ0FnSUdKaFkydG5jbTkxYm1RNklISm5ZbUVvSkc1cFoyaDBaM0psWlc0c0lERXBYRzRnSUNBZ2MzQmhiam82WW1WbWIzSmxYRzRnSUNBZ0lDQjBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaVmdvTkhCNEtTQjBjbUZ1YzJ4aGRHVlpLQzB6Y0hncElISnZkR0YwWlNnME5XUmxaeWxjYmlBZ0lDQnpjR0Z1T2pwaFpuUmxjbHh1SUNBZ0lDQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1ZZS0RSd2VDa2dkSEpoYm5Oc1lYUmxXU2d5Y0hncElISnZkR0YwWlNndE5EVmtaV2NwWEc0Z0lDdHRaV1JwWVNoY0lqNWtaWE5yZEc5d1hDSXBYRzRnSUNBZ1pHbHpjR3hoZVRvZ2JtOXVaVnh1WEc1Y2JpNWpaQzF3Y21sdFlYSjVMVzVoZGx4dUlDQnlhV2RvZERvZ01GeHVYRzR2TDFKcFoyaDBJR0ZzYVdkdWFXNW5JSFJvWlNCdFpXNTFJRzFsWVc1eklIZGxJR2hoZG1VZ2RHOGdZblZ0Y0NCMGFHVWdaSEp2Y0dSdmQyNGdZbUZqYXlCdmRtVnlJSFJ2SUd4cGJtVWdkWEJjYmk1alpDMXdjbWx0WVhKNUxXNWhkaUIxYkZ4dUlDQnlhV2RvZERvZ01qQndlRnh1WEc0Z0lDdHRaV1JwWVNoY0lqdzlkR0ZpYkdWMFhDSXBYRzRnSUNBZ2NtbG5hSFE2SURCY2JseHVMbU5rTFhCeWFXMWhjbmt0Ym1GMkxGeHVMbU5rTFhCeWFXMWhjbmt0Ym1GMklIVnNYRzRnSUhCdmMybDBhVzl1T2lCbWFYaGxaRnh1SUNCMGIzQTZJREJjYmlBZ0x5OXlhV2RvZERvZ01GeHVJQ0JvWldsbmFIUTZJREV3TUNWY2JpQWdkMmxrZEdnNklDUnVZWFl0ZDJsa2RHZ3RVMXh1SUNCaVlXTnJaM0p2ZFc1a09pQWtibWxuYUhSbmNtVmxibHh1SUNCdmRtVnlabXh2ZHpvZ1lYVjBiMXh1SUNBdGQyVmlhMmwwTFc5MlpYSm1iRzkzTFhOamNtOXNiR2x1WnpvZ2RHOTFZMmhjYmlBZ2VpMXBibVJsZURvZ0pHSmxiRzkzTFdOdmJuUmxiblJjYmx4dUlDQXZLaUJHYjNKalpTQklZWEprZDJGeVpTQkJZMk5sYkdWeVlYUnBiMjRnYVc0Z1YyVmlTMmwwWEc0Z0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxXaWd3S1Z4dUlDQjBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaVmdvTUNsY2JpQWdkSEpoYm5OcGRHbHZiam9nZEhKaGJuTm1iM0p0SURBdU0zTmNibHh1SUNCaFhHNGdJQ0FnZEdWNGRDMWtaV052Y21GMGFXOXVPaUJ1YjI1bFhHNGdJQ0FnWkdsemNHeGhlVG9nWW14dlkydGNiaUFnSUNCbWIyNTBMWE5wZW1VNklERXVNbkpsYlZ4dUlDQWdJR2hsYVdkb2REb2dOVEJ3ZUZ4dUlDQWdJR3hwYm1VdGFHVnBaMmgwT2lBMU1IQjRYRzRnSUNBZ2NHRmtaR2x1WnpvZ01DQXlNSEI0WEc0Z0lDQWdZMjlzYjNJNklDUjNhR2wwWlZ4dUlDQWdJQzEzWldKcmFYUXRabTl1ZEMxemJXOXZkR2hwYm1jNklHRnVkR2xoYkdsaGMyVmtYRzRnSUNBZ0xXMXZlaTF2YzNndFptOXVkQzF6Ylc5dmRHaHBibWM2SUdkeVlYbHpZMkZzWlZ4dUlDQWdJRzkyWlhKbWJHOTNPaUJvYVdSa1pXNWNiaUFnSUNCMFpYaDBMVzkyWlhKbWJHOTNPaUJsYkd4cGNITnBjMXh1SUNBZ0lIZG9hWFJsTFhOd1lXTmxPaUJ1YjNkeVlYQmNiaUFnSUNCaWIzSmtaWEl0WW05MGRHOXRPaUF4Y0hnZ2MyOXNhV1FnYkdsbmFIUmxiaWdrYm1sbmFIUm5jbVZsYml3Z05TVXBYRzRnSUNBZ2RISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVmFLREFwWEc0Z0lDQWdkMmxzYkMxamFHRnVaMlU2SUhSeVlXNXpabTl5YlN3Z2IzQmhZMmwwZVZ4dUlDQWdJSFJ5WVc1emFYUnBiMjQ2SUhSeVlXNXpabTl5YlNBd0xqTnpMQ0J2Y0dGamFYUjVJREF1TTNOY2JseHVJQ0FnSUNZNmFHOTJaWEpjYmlBZ0lDQWdJR052Ykc5eU9pQnNhV2RvZEdWdUtDUm5jbVZsYml3Z016QWxLVnh1WEc1Y2JpQWdKaTVwY3kxb2FXUmtaVzVjYmlBZ0lDQXZLaUJ6WldOdmJtUmhjbmtnYm1GMmFXZGhkR2x2Ym5NZ2FHbGtaR1Z1SUdKNUlHUmxabUYxYkhSY2JpQWdJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlZnb01UQXdKU2xjYmx4dUlDQW1MbTF2ZG1WekxXOTFkQ0ErSUd4cElENGdZVnh1SUNBZ0lDOHFJSEIxYzJnZ2RHaGxJRzVoZG1sbllYUnBiMjRnYVhSbGJYTWdkRzhnZEdobElHeGxablFnTFNCaGJtUWdiRzkzWlhJZ1pHOTNiaUJ2Y0dGamFYUjVJQzBnZDJobGJpQnpaV052Ym1SaGNua2dibUYySUhOc2FXUmxjeUJwYmx4dUlDQWdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsV0NndE1UQXdKU2xjYmlBZ0lDQnZjR0ZqYVhSNU9pQXdYRzVjYml0dFpXUnBZU2hjSWp4a1pYTnJkRzl3WENJcFhHNGdJQzV1WVhZdGIyNHRiR1ZtZENBdVkyUXRjSEpwYldGeWVTMXVZWFlzWEc0Z0lDNXVZWFl0YjI0dGJHVm1kQ0F1WTJRdGNISnBiV0Z5ZVMxdVlYWWdkV3hjYmlBZ0lDQnlhV2RvZERvZ1lYVjBiMXh1SUNBZ0lHeGxablE2SURCY2JseHVYRzR1WTJRdGNISnBiV0Z5ZVMxdVlYWmNiaUFnTG5ObFpTMWhiR3dnWVZ4dUlDQWdJQzhxSUdScFptWmxjbVZ1ZENCemRIbHNaU0JtYjNJZ2RHaGxJRk5sWlNCaGJHd2dZblYwZEc5dUlHOXVJRzF2WW1sc1pTQmhibVFnZEdGaWJHVjBYRzRnSUNBZ1kyOXNiM0k2SUNSbmNtVmxibHh1WEc0Z0lDNWpaQzF1WVhZdFoyRnNiR1Z5ZVNBdVkyUXRibUYyTFdsMFpXMHNYRzRnSUM1alpDMXVZWFl0YVdOdmJuTWdMbU5rTFc1aGRpMXBkR1Z0WEc0Z0lDQWdMeW9nYVhSbGJYTWdkMmwwYUNCd2FXTjBkWEpsSUNodmNpQnBZMjl1S1NCaGJtUWdkR2wwYkdWY2JpQWdJQ0JvWldsbmFIUTZJRFV3Y0hoY2JpQWdJQ0JzYVc1bExXaGxhV2RvZERvZ05UQndlRnh1WEc0Z0lDQWdhRE5jYmlBZ0lDQWdJRzkyWlhKbWJHOTNPaUJvYVdSa1pXNWNiaUFnSUNBZ0lIUmxlSFF0YjNabGNtWnNiM2M2SUdWc2JHbHdjMmx6WEc0Z0lDQWdJQ0JtYjI1MExYTnBlbVU2SURFdU1uSmxiVnh1SUNBZ0lDQWdabTl1ZEMxM1pXbG5hSFE2SUc1dmNtMWhiRnh1SUNBZ0lDQWdjR0ZrWkdsdVp5MXNaV1owT2lBeExqSnlaVzFjYmx4dUlDQXVZMlF0Ym1GMkxXZGhiR3hsY25rZ0xtTmtMVzVoZGkxcGRHVnRYRzRnSUNBZ0x5OXdZV1JrYVc1bkxXeGxablE2SURrd2NIaGNibHh1SUNBZ0lHbHRaMXh1SUNBZ0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxYRzRnSUNBZ0lDQmthWE53YkdGNU9pQmliRzlqYTF4dUlDQWdJQ0FnYUdWcFoyaDBPaUEwTUhCNFhHNGdJQ0FnSUNCM2FXUjBhRG9nWVhWMGIxeHVJQ0FnSUNBZ2JHVm1kRG9nTWpCd2VGeHVJQ0FnSUNBZ2RHOXdPaUExTUNWY2JpQWdJQ0FnSUcxaGNtZHBiaTEwYjNBNklDMHlNSEI0WEc1Y2JpQWdJQ0FnSUN0dFpXUnBZU2hjSWp4a1pYTnJkRzl3WENJcFhHNGdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHNXZibVZjYmx4dUlDQXVZMlF0Ym1GMkxXbGpiMjV6SUM1alpDMXVZWFl0YVhSbGJWeHVJQ0FnSUhCaFpHUnBibWN0YkdWbWREb2dOelZ3ZUZ4dVhHNGdJQ0FnY0Z4dUlDQWdJQ0FnWTI5c2IzSTZJQ1J1YVdkb2RHZHlaV1Z1WEc0Z0lDQWdJQ0JtYjI1MExYTnBlbVU2SURFdU0zSmxiVnh1SUNBZ0lDQWdMeW9nYUdsa1pTQmtaWE5qY21sd2RHbHZiaUJ2YmlCemJXRnNiQ0JrWlhacFkyVnpYRzRnSUNBZ0lDQmthWE53YkdGNU9pQnViMjVsWEc1Y2JpQWdJQ0FtT2pwaVpXWnZjbVZjYmlBZ0lDQWdJQzhxSUdsMFpXMGdhV052Ymx4dUlDQWdJQ0FnWTI5dWRHVnVkRG9nSnlkY2JpQWdJQ0FnSUdScGMzQnNZWGs2SUdKc2IyTnJYRzRnSUNBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVmNiaUFnSUNBZ0lHeGxablE2SURJd2NIaGNiaUFnSUNBZ0lIUnZjRG9nTlRBbFhHNGdJQ0FnSUNCdFlYSm5hVzR0ZEc5d09pQXRNakJ3ZUZ4dUlDQWdJQ0FnZDJsa2RHZzZJRFF3Y0hoY2JpQWdJQ0FnSUdobGFXZG9kRG9nTkRCd2VGeHVJQ0FnSUNBZ1ltRmphMmR5YjNWdVpDMXlaWEJsWVhRNklHNXZMWEpsY0dWaGRGeHVJQ0FnSUNBZ1ltRmphMmR5YjNWdVpDMXdiM05wZEdsdmJqb2dZMlZ1ZEdWeUlHTmxiblJsY2x4dUlDQWdJQ0FnWW1GamEyZHliM1Z1WkMxemFYcGxPaUEwTUhCNElEUXdjSGhjYmx4dUlDQWdJQ1l1YVhSbGJTMHhPanBpWldadmNtVmNiaUFnSUNBZ0lHSmhZMnRuY205MWJtUXRhVzFoWjJVNklIVnliQ2hjSWk5cGJXRm5aWE12YkdsdVpTMXBZMjl1TFRFdWMzWm5YQ0lwWEc0Z0lDQWdKaTVwZEdWdExUSTZPbUpsWm05eVpWeHVJQ0FnSUNBZ1ltRmphMmR5YjNWdVpDMXBiV0ZuWlRvZ2RYSnNLRndpTDJsdFlXZGxjeTlzYVc1bExXbGpiMjR0TWk1emRtZGNJaWxjYmlBZ0lDQW1MbWwwWlcwdE16bzZZbVZtYjNKbFhHNGdJQ0FnSUNCaVlXTnJaM0p2ZFc1a0xXbHRZV2RsT2lCMWNtd29YQ0l2YVcxaFoyVnpMMnhwYm1VdGFXTnZiaTB6TG5OMloxd2lLVnh1SUNBZ0lDWXVhWFJsYlMwME9qcGlaV1p2Y21WY2JpQWdJQ0FnSUdKaFkydG5jbTkxYm1RdGFXMWhaMlU2SUhWeWJDaGNJaTlwYldGblpYTXZiR2x1WlMxcFkyOXVMVFF1YzNablhDSXBYRzRnSUNBZ0ppNXBkR1Z0TFRVNk9tSmxabTl5WlZ4dUlDQWdJQ0FnWW1GamEyZHliM1Z1WkMxcGJXRm5aVG9nZFhKc0tGd2lMMmx0WVdkbGN5OXNhVzVsTFdsamIyNHROUzV6ZG1kY0lpbGNiaUFnSUNBbUxtbDBaVzB0TmpvNlltVm1iM0psWEc0Z0lDQWdJQ0JpWVdOclozSnZkVzVrTFdsdFlXZGxPaUIxY213b1hDSXZhVzFoWjJWekwyeHBibVV0YVdOdmJpMDJMbk4yWjF3aUtWeHVJQ0FnSUNZdWFYUmxiUzAzT2pwaVpXWnZjbVZjYmlBZ0lDQWdJR0poWTJ0bmNtOTFibVF0YVcxaFoyVTZJSFZ5YkNoY0lpOXBiV0ZuWlhNdmJHbHVaUzFwWTI5dUxUY3VjM1puWENJcFhHNGdJQ0FnSmk1cGRHVnRMVGc2T21KbFptOXlaVnh1SUNBZ0lDQWdZbUZqYTJkeWIzVnVaQzFwYldGblpUb2dkWEpzS0Z3aUwybHRZV2RsY3k5c2FXNWxMV2xqYjI0dE9DNXpkbWRjSWlsY2JseHVJQ0FyYldWa2FXRW9YQ0k4WkdWemEzUnZjRndpS1Z4dUlDQWdJQzhxSUdKNUlHUmxabUYxYkhRZ0xtTmtMWEJ5YVcxaGNua3RibUYySUdseklHaHBaR1JsYmlBdElIUnlhV05ySUdadmNpQnBUMU1nWkdWMmFXTmxjeUIzYUdWeVpTQjViM1VnWTJGdUlITmxaU0IwYUdVZ2JtRjJhV2RoZEdsdmJpQnBaaUI1YjNVZ2NIVnNiQ0JrYjNkdVhHNGdJQ0FnZG1semFXSnBiR2wwZVRvZ2FHbGtaR1Z1WEc0Z0lDQWdkSEpoYm5OcGRHbHZiam9nZG1semFXSnBiR2wwZVNBd2N5QXdMak56WEc0Z0lDQWdKaTV1WVhZdGFYTXRkbWx6YVdKc1pWeHVJQ0FnSUNBZ2RtbHphV0pwYkdsMGVUb2dkbWx6YVdKc1pWeHVJQ0FnSUNBZ2RISmhibk5wZEdsdmJqb2dkbWx6YVdKcGJHbDBlU0F3Y3lBd2MxeHVYRzRyYldWa2FXRW9YQ0krWkdWemEzUnZjRndpS1Z4dVhHNGdJQzVqWkMxd2NtbHRZWEo1TFc1aGRseHVJQ0FnSUhCdmMybDBhVzl1T2lCemRHRjBhV05jYmlBZ0lDQndZV1JrYVc1bk9pQXdJRFV3Y0hnZ01DQXdYRzRnSUNBZ2JXRnlaMmx1TFd4bFpuUTZJREl3Y0hoY2JpQWdJQ0JvWldsbmFIUTZJR0YxZEc5Y2JpQWdJQ0IzYVdSMGFEb2dNVEF3SlZ4dUlDQWdJQzh2Wm14dllYUTZJSEpwWjJoMFhHNGdJQ0FnYjNabGNtWnNiM2M2SUhacGMybGliR1ZjYmlBZ0lDQmlZV05yWjNKdmRXNWtPaUIwY21GdWMzQmhjbVZ1ZEZ4dUlDQWdJQzh2ZEdWNGRDMWhiR2xuYmpvZ1kyVnVkR1Z5WEc1Y2JpQWdJQ0FyWTJ4bFlYSm1hWGhjYmx4dUlDQWdJQ1l1Ylc5MlpYTXRiM1YwSUQ0Z2JHa2dQaUJoWEc0Z0lDQWdJQ0F2S2lCeVpYTmxkQ0J0YjJKcGJHVWdjM1I1YkdWY2JpQWdJQ0FnSUhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbFdDZ3dLVnh1SUNBZ0lDQWdiM0JoWTJsMGVUb2dNVnh1WEc0Z0lDQWdkV3hjYmlBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJ6ZEdGMGFXTmNiaUFnSUNBZ0lHaGxhV2RvZERvZ1lYVjBiMXh1SUNBZ0lDQWdkMmxrZEdnNklHRjFkRzljYmlBZ0lDQWdJR0poWTJ0bmNtOTFibVE2SUhSeVlXNXpjR0Z5Wlc1MFhHNGdJQ0FnSUNCdmRtVnlabXh2ZHpvZ2RtbHphV0pzWlZ4dUlDQWdJQ0FnZEdWNGRDMWhiR2xuYmpvZ2JHVm1kRnh1SUNBZ0lDQWdlaTFwYm1SbGVEb2dKR0ZpYjNabExXTnZiblJsYm5SY2JseHVJQ0FnSUNBZ0ppNXBjeTFvYVdSa1pXNWNiaUFnSUNBZ0lDQWdMeW9nY21WelpYUWdiVzlpYVd4bElITjBlV3hsWEc0Z0lDQWdJQ0FnSUhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbFdDZ3dLVnh1WEc0Z0lDQWdJQ0FtTG0xdmRtVnpMVzkxZENBK0lHeHBJRDRnWVZ4dUlDQWdJQ0FnSUNBdktpQnlaWE5sZENCdGIySnBiR1VnYzNSNWJHVmNiaUFnSUNBZ0lDQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1ZZS0RBcFhHNGdJQ0FnSUNBZ0lHOXdZV05wZEhrNklERmNibHh1SUNBZ0lDOHZWRzl3SUc1aGRpQnBkR1Z0YzF4dUlDQWdJRDRnYkdsY2JpQWdJQ0FnSUdScGMzQnNZWGs2SUdsdWJHbHVaUzFpYkc5amExeHVJQ0FnSUNBZ0x5OW1iRzloZERvZ2JHVm1kRnh1SUNBZ0lDQWdiV0Z5WjJsdUxXeGxablE2SUM0MWNtVnRYRzVjYmlBZ0lDQStJR3hwSUQ0Z1lWeHVJQ0FnSUNBZ0x5b2diV0ZwYmlCdVlYWnBaMkYwYVc5dUlHSjFkSFJ2Ym5NZ2MzUjViR1ZjYmlBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVnh1SUNBZ0lDQWdaR2x6Y0d4aGVUb2dhVzVzYVc1bExXSnNiMk5yWEc0Z0lDQWdJQ0JvWldsbmFIUTZJQ1JvWldGa1pYSXRhR1ZwWjJoMExVeGNiaUFnSUNBZ0lHeHBibVV0YUdWcFoyaDBPaUFrYUdWaFpHVnlMV2hsYVdkb2RDMU1YRzRnSUNBZ0lDQndZV1JrYVc1bk9pQXdYRzRnSUNBZ0lDQmpiMnh2Y2pvZ0pHNXBaMmgwWjNKbFpXNWNiaUFnSUNBZ0lHOTJaWEptYkc5M09pQjJhWE5wWW14bFhHNGdJQ0FnSUNCaWIzSmtaWEl0WW05MGRHOXRPaUJ1YjI1bFhHNGdJQ0FnSUNCMGNtRnVjMmwwYVc5dU9pQmpiMnh2Y2lBd0xqTnpMQ0JpYjNndGMyaGhaRzkzSURBdU0zTmNibHh1SUNBZ0lDQWdKanBvYjNabGNseHVJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ0pHZHlaV1Z1WEc0Z0lDQWdJQ0FnSUhSbGVIUXRaR1ZqYjNKaGRHbHZiam9nYm05dVpWeHVJQ0FnSUNBZ0ppNXpaV3hsWTNSbFpGeHVJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ0pHZHlaV1Z1WEc0Z0lDQWdJQ0FnSUdKdmVDMXphR0ZrYjNjNklHbHVjMlYwSURBZ0xUSndlQ0F3SUNSbmNtVmxibHh1WEc0Z0lDQWdMbWR2TFdKaFkyc3NJQzV6WldVdFlXeHNYRzRnSUNBZ0lDQmthWE53YkdGNU9pQnViMjVsWEc1Y2JpQWdJQ0F1WTJRdGMyVmpiMjVrWVhKNUxXNWhkaXhjYmlBZ0lDQXVZMlF0Ym1GMkxXZGhiR3hsY25rc1hHNGdJQ0FnTG1Oa0xXNWhkaTFwWTI5dWMxeHVJQ0FnSUNBZ0x5b2daSEp2Y0dSdmQyNGdiV1Z1ZFNCemRIbHNaVnh1SUNBZ0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxYRzRnSUNBZ0lDQjBiM0E2SUNSb1pXRmtaWEl0YUdWcFoyaDBMVXhjYmlBZ0lDQWdJQzh2ZDJsa2RHZzZJREV3TUhaM1hHNGdJQ0FnSUNCM2FXUjBhRG9nTVRBd0pWeHVJQ0FnSUNBZ1ltRmphMmR5YjNWdVpEb2dKSGRvYVhSbFhHNGdJQ0FnSUNBdkwwTklRVTVIUlVSY2JpQWdJQ0FnSUM4dmNHRmtaR2x1WnpvZ05EaHdlQ0EyTkhCNElERXpNSEI0WEc0Z0lDQWdJQ0J3WVdSa2FXNW5PaUF5Y21WdFhHNGdJQ0FnSUNCaWIzZ3RjMmhoWkc5M09pQnBibk5sZENBd0lERndlQ0F3SUNSamJHOTFaQ3dnTUNBemNIZ2dObkI0SUhKblltRW9JekF3TUN3Z01DNHdOU2xjYmlBZ0lDQWdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsV0Nnd0tWeHVJQ0FnSUNBZ0syTnNaV0Z5Wm1sNFhHNWNiaUFnSUNBZ0lIUnlZVzV6YVhScGIyNDZJRzl3WVdOcGRIa2dMak56SURCekxDQjJhWE5wWW1sc2FYUjVJREJ6SURCelhHNWNiaUFnSUNBZ0lDWXVhWE10YUdsa1pHVnVYRzRnSUNBZ0lDQWdJRzl3WVdOcGRIazZJREJjYmlBZ0lDQWdJQ0FnZG1semFXSnBiR2wwZVRvZ2FHbGtaR1Z1WEc0Z0lDQWdJQ0FnSUhSeVlXNXphWFJwYjI0NklHOXdZV05wZEhrZ0xqTnpJREJ6TENCMmFYTnBZbWxzYVhSNUlEQnpJQzR6YzF4dVhHNGdJQ0FnSUNBK0lDNXpaV1V0WVd4c1hHNGdJQ0FnSUNBZ0lDOHFJSFJvYVhNZ2FYTWdkR2hsSUVKSlJ5QlRaV1VnWVd4c0lHSjFkSFJ2YmlCaGRDQjBhR1VnWW05MGRHOXRJRzltSUhSb1pTQmtjbTl3Wkc5M2JpQnRaVzUxWEc0Z0lDQWdJQ0FnSUdScGMzQnNZWGs2SUdKc2IyTnJYRzRnSUNBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVnh1SUNBZ0lDQWdJQ0JzWldaME9pQXdYRzRnSUNBZ0lDQWdJR0p2ZEhSdmJUb2dNRnh1SUNBZ0lDQWdJQ0JvWldsbmFIUTZJRFV3Y0hoY2JpQWdJQ0FnSUNBZ2QybGtkR2c2SURFd01DVmNiaUFnSUNBZ0lDQWdiM1psY21ac2IzYzZJR2hwWkdSbGJseHVJQ0FnSUNBZ0lDQXZLaUJ5WlhObGRDQnpiMjFsSUdsdWFHVnlhWFJsWkNCemRIbHNaVnh1SUNBZ0lDQWdJQ0J0WVhKbmFXNDZJREJjYmlBZ0lDQWdJQ0FnY0dGa1pHbHVaem9nTUZ4dVhHNGdJQ0FnSUNBZ0lHRmNiaUFnSUNBZ0lDQWdJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1ZjYmlBZ0lDQWdJQ0FnSUNCM2FXUjBhRG9nTVRBd0pWeHVJQ0FnSUNBZ0lDQWdJR2hsYVdkb2REb2dNVEF3SlZ4dUlDQWdJQ0FnSUNBZ0lIUnZjRG9nTUZ4dUlDQWdJQ0FnSUNBZ0lHeGxablE2SURCY2JpQWdJQ0FnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJREl1TW5KbGJWeHVJQ0FnSUNBZ0lDQWdJR1p2Ym5RdGQyVnBaMmgwT2lCaWIyeGtYRzRnSUNBZ0lDQWdJQ0FnZEdWNGRDMWhiR2xuYmpvZ1kyVnVkR1Z5WEc0Z0lDQWdJQ0FnSUNBZ2JHbHVaUzFvWldsbmFIUTZJRFV3Y0hoY2JpQWdJQ0FnSUNBZ0lDQmliM0prWlhJdGRHOXdPaUF4Y0hnZ2MyOXNhV1FnSkdOc2IzVmtYRzRnSUNBZ0lDQWdJQ0FnTHlvZ2NtVnpaWFFnYzI5dFpTQnBibWhsY21sMFpXUWdjM1I1YkdWY2JpQWdJQ0FnSUNBZ0lDQmliM0prWlhJdFltOTBkRzl0T2lCdWIyNWxYRzRnSUNBZ0lDQWdJQ0FnYldGeVoybHVPaUF3WEc0Z0lDQWdJQ0FnSUNBZ2NHRmtaR2x1WnpvZ01GeHVJQ0FnSUNBZ0lDQWdJSFJ5WVc1emFYUnBiMjQ2SUdOdmJHOXlJREF1TW5Nc0lHSmhZMnRuY205MWJtUWdNQzR5Y3l3Z1ltOXlaR1Z5SURBdU1uTmNibHh1SUNBZ0lDQWdJQ0FnSUNZNmFHOTJaWEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHSmhZMnRuY205MWJtUTZJQ1J1YVdkb2RHZHlaV1Z1WEc0Z0lDQWdJQ0FnSUNBZ0lDQmliM0prWlhJdFkyOXNiM0k2SUNSdWFXZG9kR2R5WldWdVhHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjJ4dmNqb2dKSGRvYVhSbFhHNWNiaUFnSUNBdVkyUXRjMlZqYjI1a1lYSjVMVzVoZGx4dVhHNGdJQ0FnSUNBK0lHeHBYRzRnSUNBZ0lDQWdJQzhxSUdOb1lXNW5aU0IwYUdVZ2FHVnBaMmgwSUdGalkyOXlaR2x1WnlCMGJ5QjViM1Z5SUc1bFpXUnpJQzBnZVc5MUlHTmhiaUJsZG1WdUlITmxkQ0JvWldsbmFIUTZJR0YxZEc5Y2JpQWdJQ0FnSUNBZ2FHVnBaMmgwT2lBek5EQndlRnh1SUNBZ0lDQWdJQ0F2S2lCb1pYSmxJSGx2ZFNCelpYUWdkR2hsSUc1MWJXSmxjaUJ2WmlCamIyeDFiVzV6SUMwZ2RYTmxJSGRwWkhSb0lIQmxjbU5sYm5SaFoyVmNiaUFnSUNBZ0lDQWdLMk52YkhWdGJpZ3dMakl6S1Z4dUlDQWdJQ0FnSUNBdkx5QnpaV1VnY0dGeWRHbGhiSE1nUGlCZmJHRjViM1YwTG5OamMzTmNiaUFnSUNBZ0lDQWdiV0Z5WjJsdUxYSnBaMmgwT2lBeUxqWTJKVnh1SUNBZ0lDQWdJQ0JpYjNKa1pYSXRjbWxuYUhRNklERndlQ0J6YjJ4cFpDQWtZMnh2ZFdSY2JpQWdJQ0FnSUNBZ2IzWmxjbVpzYjNjNklHaHBaR1JsYmx4dUlDQWdJQ0FnSUNCdmRtVnlabXh2ZHkxNE9pQm9hV1JrWlc1Y2JpQWdJQ0FnSUNBZ2IzWmxjbVpzYjNjdGVUb2dZWFYwYjF4dUlDQWdJQ0FnSUNBdGQyVmlhMmwwTFc5MlpYSm1iRzkzTFhOamNtOXNiR2x1WnpvZ2RHOTFZMmhjYmx4dUlDQWdJQ0FnSUNBbU9tNTBhQzFqYUdsc1pDZzBiaXN5S1Z4dUlDQWdJQ0FnSUNBZ0lDOHFJQ3N5SUdKbFkyRjFjMlVnZDJVZ2FHRjJaU0F5SUd4cGMzUWdhWFJsYlhNZ2QybDBhQ0JrYVhOd2JHRjVPbTV2Ym1WY2JpQWdJQ0FnSUNBZ0lDQnRZWEpuYVc0dGNtbG5hSFE2SURCY2JpQWdJQ0FnSUNBZ0lDQmliM0prWlhJdGNtbG5hSFE2SUc1dmJtVmNibHh1SUNBZ0lDQWdJQ0ErSUdGY2JpQWdJQ0FnSUNBZ0lDQXZLaUJ6WldOdmJtUmhjbmtnYm1GMklIUnBkR3hsWEc0Z0lDQWdJQ0FnSUNBZ1kyOXNiM0k2SUNSbmNtVmxibHh1SUNBZ0lDQWdJQ0FnSUdadmJuUXRkMlZwWjJoME9pQmliMnhrWEc0Z0lDQWdJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQXhMalp5WlcxY2JpQWdJQ0FnSUNBZ0lDQnRZWEpuYVc0dFltOTBkRzl0T2lBdU5tVnRYRzVjYmlBZ0lDQWdJR0ZjYmlBZ0lDQWdJQ0FnYUdWcFoyaDBPaUF6TUhCNFhHNGdJQ0FnSUNBZ0lHeHBibVV0YUdWcFoyaDBPaUF6TUhCNFhHNGdJQ0FnSUNBZ0lIQmhaR1JwYm1jNklEQWdNVGdsSURBZ01GeHVJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ0pHNXBaMmgwWjNKbFpXNWNiaUFnSUNBZ0lDQWdZbTl5WkdWeUxXSnZkSFJ2YlRvZ2JtOXVaVnh1SUNBZ0lDQWdJQ0JtYjI1MExYTnBlbVU2SURFdU5ISmxiVnh1WEc0Z0lDQWdJQ0FnSUNZNmFHOTJaWEpjYmlBZ0lDQWdJQ0FnSUNCamIyeHZjam9nSkdkeVpXVnVYRzVjYmlBZ0lDQWdJSFZzWEc0Z0lDQWdJQ0FnSUM4cUlFWnZjbU5sSUVoaGNtUjNZWEpsSUVGalkyVnNaWEpoZEdsdmJpQnBiaUJYWldKTGFYUmNiaUFnSUNBZ0lDQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1ZhS0RBcFhHNWNiaUFnSUNBZ0lIVnNJSFZzWEc0Z0lDQWdJQ0FnSUM4cUlIUmxjblJwWVhKNUlHNWhkbWxuWVhScGIyNWNiaUFnSUNBZ0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxYRzRnSUNBZ0lDQWdJSFJ2Y0RvZ01GeHVJQ0FnSUNBZ0lDQnNaV1owT2lBd1hHNGdJQ0FnSUNBZ0lHaGxhV2RvZERvZ01UQXdKVnh1SUNBZ0lDQWdJQ0IzYVdSMGFEb2dNVEF3SlZ4dVhHNGdJQ0FnSUNBZ0lDWXVhWE10YUdsa1pHVnVYRzRnSUNBZ0lDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWWUtERXdNQ1VwWEc1Y2JpQWdJQ0FnSUNBZ0xtZHZMV0poWTJ0Y2JpQWdJQ0FnSUNBZ0lDQmthWE53YkdGNU9pQmliRzlqYTF4dVhHNGdJQ0FnSUNBZ0lDQWdZVnh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXNiM0k2SUhSeVlXNXpjR0Z5Wlc1MFhHNWNiaUFnSUNBZ0lDQWdMbk5sWlMxaGJHeGNiaUFnSUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amExeHVYRzRnSUNBZ0lDQXViVzkyWlhNdGIzVjBJRDRnYkdrZ1BpQmhYRzRnSUNBZ0lDQWdJQzhxSUhCMWMyZ2dkR2hsSUc1aGRtbG5ZWFJwYjI0Z2FYUmxiWE1nZEc4Z2RHaGxJR3hsWm5RZ0xTQmhibVFnYkc5M1pYSWdaRzkzYmlCdmNHRmphWFI1SUMwZ2QyaGxiaUIwWlhKMGFXRnllU0J1WVhZZ2MyeHBaR1Z6SUdsdVhHNGdJQ0FnSUNBZ0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxXQ2d0TVRBd0pTbGNibHh1SUNBZ0lDNWpaQzF1WVhZdFoyRnNiR1Z5ZVZ4dUlDQWdJQ0FnWW05NExYTm9ZV1J2ZHpvZ01DQTFjSGdnTlhCNElISm5ZbUVvTVRBd0xERXdNQ3d4TURBc0xqTXBYRzVjYmlBZ0lDQWdJR3hwWEc0Z0lDQWdJQ0FnSUM4cUlITmxkQ0JvWlhKbElHNTFiV0psY2lCdlppQmpiMngxYlc1eklDMGdkWE5sSUhkcFpIUm9JSEJsY21ObGJuUmhaMlZjYmlBZ0lDQWdJQ0FnTHk4clkyOXNkVzF1S0RBdU1qSXBYRzRnSUNBZ0lDQWdJQzh2YldGeVoybHVPaUF3SURRbElEUXdjSGdnTUZ4dVhHNGdJQ0FnSUNBZ0lHWnNiMkYwT2lCc1pXWjBYRzRnSUNBZ0lDQWdJSGRwWkhSb09pQXlOU1ZjYmlBZ0lDQWdJQ0FnY0dGa1pHbHVaem9nTVhKbGJWeHVYRzRnSUNBZ0lDQWdJQ1k2Ym5Sb0xXTm9hV3hrS0RSdUt6SXBYRzRnSUNBZ0lDQWdJQ0FnTHlvZ0t6SWdZbVZqWVhWelpTQjNaU0JvWVhabElIUjNieUJoWkdScGRHbHZibUZzSUd4cGMzUWdhWFJsYlhNZ2QybDBhQ0JrYVhOd2JHRjVPbTV2Ym1WY2JpQWdJQ0FnSUNBZ0lDQXZMMjFoY21kcGJpMXlhV2RvZERvZ01GeHVYRzRnSUNBZ0lDQXVZMlF0Ym1GMkxXbDBaVzFjYmlBZ0lDQWdJQ0FnWW05eVpHVnlMV0p2ZEhSdmJUb2dibTl1WlZ4dUlDQWdJQ0FnSUNCd1lXUmthVzVuT2lBd1hHNGdJQ0FnSUNBZ0lHaGxhV2RvZERvZ1lYVjBiMXh1SUNBZ0lDQWdJQ0JzYVc1bExXaGxhV2RvZERvZ01TNHlYRzVjYmlBZ0lDQWdJQ0FnYVcxblhHNGdJQ0FnSUNBZ0lDQWdjRzl6YVhScGIyNDZJSE4wWVhScFkxeHVJQ0FnSUNBZ0lDQWdJRzFoY21kcGJpMTBiM0E2SURCY2JpQWdJQ0FnSUNBZ0lDQm9aV2xuYUhRNklHRjFkRzljYmlBZ0lDQWdJQ0FnSUNCM2FXUjBhRG9nTVRBd0pWeHVJQ0FnSUNBZ0lDQWdJRzFoY21kcGJpMWliM1IwYjIwNklDNDJjbVZ0WEc1Y2JpQWdJQ0FnSUNBZ2FETmNiaUFnSUNBZ0lDQWdJQ0JqYjJ4dmNqb2dKR2R5WldWdVhHNGdJQ0FnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF1T1hKbGJWeHVJQ0FnSUNBZ0lDQWdJSEJoWkdScGJtYzZJREFnTGpSeVpXMWNiaUFnSUNBZ0lDQWdJQ0JtYjI1MExYZGxhV2RvZERvZ2JtOXliV0ZzWEc1Y2JpQWdJQ0F1WTJRdGJtRjJMV2xqYjI1elhHNWNiaUFnSUNBZ0lHeHBYRzRnSUNBZ0lDQWdJQzhxSUhObGRDQm9aWEpsSUc1MWJXSmxjaUJ2WmlCamIyeDFiVzV6SUMwZ2RYTmxJSGRwWkhSb0lIQmxjbU5sYm5SaFoyVmNiaUFnSUNBZ0lDQWdLMk52YkhWdGJpZ3dMak15S1Z4dUlDQWdJQ0FnSUNCdFlYSm5hVzQ2SURBZ01pVWdNakJ3ZUNBd1hHNGdJQ0FnSUNBZ0lDWTZiblJvTFdOb2FXeGtLRE51S3pJcFhHNGdJQ0FnSUNBZ0lDQWdMeW9nS3pJZ1ltVmpZWFZ6WlNCM1pTQm9ZWFpsSUhSM2J5QmhaR1JwZEdsdmJtRnNJR3hwYzNRZ2FYUmxiWE1nZDJsMGFDQmthWE53YkdGNU9tNXZibVZjYmlBZ0lDQWdJQ0FnSUNCdFlYSm5hVzR0Y21sbmFIUTZJREJjYmlBZ0lDQWdJQzVqWkMxdVlYWXRhWFJsYlZ4dUlDQWdJQ0FnSUNCaWIzSmtaWEl0WW05MGRHOXRPaUJ1YjI1bFhHNGdJQ0FnSUNBZ0lHaGxhV2RvZERvZ05UQndlRnh1SUNBZ0lDQWdJQ0JzYVc1bExXaGxhV2RvZERvZ01TNHlYRzRnSUNBZ0lDQWdJSEJoWkdScGJtYzZJREkwY0hnZ01DQXdJRGcxY0hoY2JpQWdJQ0FnSUNBZ0pqcG9iM1psY2x4dUlDQWdJQ0FnSUNBZ0lHSmhZMnRuY205MWJtUTZJR3hwWjJoMFpXNG9KR05zYjNWa0xDQTRKU2xjYmlBZ0lDQWdJQ0FnYUROY2JpQWdJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ0pHZHlaV1Z1WEc0Z0lDQWdJQ0FnSUNBZ1ptOXVkQzEzWldsbmFIUTZJR0p2YkdSY2JpQWdJQ0FnSUNBZ2NGeHVJQ0FnSUNBZ0lDQWdJR1JwYzNCc1lYazZJR0pzYjJOclhHNGdJQ0FnSUNBZ0lDWTZPbUpsWm05eVpWeHVJQ0FnSUNBZ0lDQWdJR3hsWm5RNklESTFjSGhjYmx4dVhHNHVhR0Z6TFdOb2FXeGtjbVZ1SUQ0Z1lTd2dMbWR2TFdKaFkyc2dZVnh1SUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1WY2JpQWdKam82WW1WbWIzSmxMQ0FtT2pwaFpuUmxjbHh1SUNBZ0lDOHFJR0Z5Y205M0lHbGpiMjRnYVc0Z1ExTlRJQzBnWm05eUlHVnNaVzFsYm5RZ2QybDBhQ0J1WlhOMFpXUWdkVzV2Y21SbGNtVmtJR3hwYzNSelhHNGdJQ0FnWTI5dWRHVnVkRG9nSnlkY2JpQWdJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1ZjYmlBZ0lDQjBiM0E2SURVd0pWeHVJQ0FnSUcxaGNtZHBiaTEwYjNBNklDMHhjSGhjYmlBZ0lDQmthWE53YkdGNU9pQnBibXhwYm1VdFlteHZZMnRjYmlBZ0lDQm9aV2xuYUhRNklESndlRnh1SUNBZ0lIZHBaSFJvT2lBeE1IQjRYRzRnSUNBZ1ltRmphMmR5YjNWdVpEb2diR2xuYUhSbGJpZ2tibWxuYUhSbmNtVmxiaXdnTVRBbEtWeHVYRzRnSUNBZ1ltRmphMlpoWTJVdGRtbHphV0pwYkdsMGVUb2dhR2xrWkdWdVhHNGdJQ1k2T21KbFptOXlaVnh1SUNBZ0lIUnlZVzV6Wm05eWJUb2djbTkwWVhSbEtEUTFaR1ZuS1Z4dUlDQW1PanBoWm5SbGNseHVJQ0FnSUhSeVlXNXpabTl5YlRvZ2NtOTBZWFJsS0MwME5XUmxaeWxjYmlBZ0syMWxaR2xoS0Z3aVBtUmxjMnQwYjNCY0lpbGNiaUFnSUNBbU9qcGlaV1p2Y21Vc0lDWTZPbUZtZEdWeVhHNGdJQ0FnSUNCaVlXTnJaM0p2ZFc1a09pQmtZWEpyWlc0b0pHTnNiM1ZrTENBeE1DVXBYRzRnSUNBZ0pqcG9iM1psY2pvNlltVm1iM0psTENBbU9taHZkbVZ5T2pwaFpuUmxjbHh1SUNBZ0lDQWdZbUZqYTJkeWIzVnVaRG9nSkdkeVpXVnVYRzVjYmk1b1lYTXRZMmhwYkdSeVpXNGdQaUJoWEc0Z0lIQmhaR1JwYm1jdGNtbG5hSFE2SURRd2NIaGNiaUFnSmpvNlltVm1iM0psTENBbU9qcGhablJsY2x4dUlDQWdJQzhxSUdGeWNtOTNJR2R2WlhNZ2IyNGdkR2hsSUhKcFoyaDBJSE5wWkdVZ0xTQmphR2xzWkhKbGJpQnVZWFpwWjJGMGFXOXVYRzRnSUNBZ2NtbG5hSFE2SURJd2NIaGNiaUFnSUNCMGNtRnVjMlp2Y20wdGIzSnBaMmx1T2lBNWNIZ2dOVEFsWEc1Y2JpNWpaQzF3Y21sdFlYSjVMVzVoZGlBdVoyOHRZbUZqYXlCaFhHNGdJSEJoWkdScGJtY3RiR1ZtZERvZ05EQndlRnh1SUNBbU9qcGlaV1p2Y21Vc0lDWTZPbUZtZEdWeVhHNGdJQ0FnTHlvZ1lYSnliM2NnWjI5bGN5QnZiaUIwYUdVZ2JHVm1kQ0J6YVdSbElDMGdaMjhnWW1GamF5QmlkWFIwYjI1Y2JpQWdJQ0JzWldaME9pQXlNSEI0WEc0Z0lDQWdkSEpoYm5ObWIzSnRMVzl5YVdkcGJqb2dNWEI0SURVd0pWeHVYRzRyYldWa2FXRW9YQ0krWkdWemEzUnZjRndpS1Z4dUlDQXVhR0Z6TFdOb2FXeGtjbVZ1SUQ0Z1lWeHVJQ0FnSUNZNk9tSmxabTl5WlN3Z0pqbzZZV1owWlhKY2JpQWdJQ0FnSUhKcFoyaDBPaUF4TlNWY2JpQWdMbU5rTFhCeWFXMWhjbmt0Ym1GMklENGdMbWhoY3kxamFHbHNaSEpsYmlBK0lHRmNiaUFnSUNBdktpQnRZV2x1SUc1aGRtbG5ZWFJwYjI0Z1lYSnliM2R6SUc5dUlHeGhjbWRsY2lCa1pYWnBZMlZ6WEc0Z0lDQWdjR0ZrWkdsdVp5MXlhV2RvZERvZ016QndlQ0FoYVcxd2IzSjBZVzUwWEc0Z0lDQWdKam82WW1WbWIzSmxMQ0FtT2pwaFpuUmxjbHh1SUNBZ0lDQWdkMmxrZEdnNklEbHdlRnh1SUNBZ0lDQWdkSEpoYm5ObWIzSnRMVzl5YVdkcGJqb2dOVEFsSURVd0pWeHVJQ0FnSUNBZ1ltRmphMmR5YjNWdVpEb2daR0Z5YTJWdUtDUmpiRzkxWkN3Z01UQWxLVnh1WEc0Z0lDQWdJQ0JpWVdOclptRmpaUzEyYVhOcFltbHNhWFI1T2lCb2FXUmtaVzVjYmlBZ0lDQWdJSFJ5WVc1emFYUnBiMjQ2SUhkcFpIUm9JREF1TTNNc0lIUnlZVzV6Wm05eWJTQXdMak56WEc0Z0lDQWdKam82WW1WbWIzSmxYRzRnSUNBZ0lDQnlhV2RvZERvZ01USndlRnh1SUNBZ0lDWTZPbUZtZEdWeVhHNGdJQ0FnSUNCeWFXZG9kRG9nTjNCNFhHNGdJQ0FnSmk1elpXeGxZM1JsWkRvNlltVm1iM0psTENBbUxuTmxiR1ZqZEdWa09qcGhablJsY2x4dUlDQWdJQ0FnZDJsa2RHZzZJREUwY0hoY2JpQWdJQ0FtTG5ObGJHVmpkR1ZrT2pwaVpXWnZjbVZjYmlBZ0lDQWdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsV0NnMWNIZ3BJSEp2ZEdGMFpTZ3RORFZrWldjcFhHNGdJQ0FnSmk1elpXeGxZM1JsWkRvNllXWjBaWEpjYmlBZ0lDQWdJSFJ5WVc1elptOXliVG9nY205MFlYUmxLRFExWkdWbktWeHVJQ0F1WTJRdGMyVmpiMjVrWVhKNUxXNWhkaUErSUM1b1lYTXRZMmhwYkdSeVpXNGdQaUJoT2pwaVpXWnZjbVVzSUM1alpDMXpaV052Ym1SaGNua3RibUYySUQ0Z0xtaGhjeTFqYUdsc1pISmxiaUErSUdFNk9tRm1kR1Z5WEc0Z0lDQWdMeW9nY21WdGIzWmxJR0Z5Y205M2N5QnZiaUJ6WldOdmJtUmhjbmtnYm1GMklIUnBkR3hsYzF4dUlDQWdJR1JwYzNCc1lYazZJRzV2Ym1WY2JpQWdMbU5rTFhCeWFXMWhjbmt0Ym1GMklDNW5ieTFpWVdOcklHRmNiaUFnSUNCd1lXUmthVzVuTFd4bFpuUTZJREl3Y0hoY2JpQWdJQ0FtT2pwaVpXWnZjbVVzSUNZNk9tRm1kR1Z5WEc0Z0lDQWdJQ0JzWldaME9pQXhjSGhjYmx4dVhHNWNibHh1TG1Oa0xYTmxZWEpqYUZ4dUlDQm1iRzloZERweWFXZG9kRnh1SUNCdFlYSm5hVzQ2SURFdU1qVnlaVzFjYmx4dUlDQXJiV1ZrYVdFb1hDSThQWEJvYjI1bFhDSXBYRzRnSUNBZ1pteHZZWFE2SUc1dmJtVmNiaUFnSUNCdFlYSm5hVzQ2SURGeVpXMGdZWFYwYnlBd1hHNGdJQ0FnZDJsa2RHZzZJREV3TUNWY2JseHVJQ0JtYjNKdFhHNGdJQ0FnY0c5emFYUnBiMjQ2Y21Wc1lYUnBkbVZjYmx4dUlDQnBibkIxZEZ0MGVYQmxQVndpYzNWaWJXbDBYQ0pkWEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzFwYldGblpUb2dkWEpzS0Z3aUwybHRZV2RsY3k5elpXRnlZMmd0YVdOdmJpNXdibWRjSWlsY2JpQWdJQ0JpWVdOclozSnZkVzVrTFhKbGNHVmhkRG9nYm04dGNtVndaV0YwWEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dkSEpoYm5Od1lYSmxiblJjYmlBZ0lDQmthWE53YkdGNU9pQnBibXhwYm1VdFlteHZZMnRjYmlBZ0lDQjBaWGgwTFdsdVpHVnVkRG9nTFRrNU9UazVjSGhjYmlBZ0lDQm9aV2xuYUhRNklESXljSGhjYmlBZ0lDQjNhV1IwYURvZ01qSndlRnh1SUNBZ0lDMTNaV0pyYVhRdFlYQndaV0Z5WVc1alpUb2dibTl1WlZ4dUlDQWdJR0p2Y21SbGNqb2dNRnh1SUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpWeHVJQ0FnSUhSdmNEb2dObkI0WEc0Z0lDQWdjbWxuYUhRNklETndlRnh1SUNBZ0lHSmhZMnRuY205MWJtUXRjMmw2WlRvZ056VWxYRzVjYmlBZ2FXNXdkWFJiZEhsd1pUMWNJbk5sWVhKamFGd2lYVnh1SUNBZ0lIUmxlSFF0YVc1a1pXNTBPakZ5WlcxY2JpQWdJQ0F2TDJKdmVDMXphR0ZrYjNjNklHbHVjMlYwSURBZ01YQjRJREFnSkdOc2IzVmtMQ0F3SUROd2VDQTJjSGdnY21kaVlTZ2pNREF3TENBd0xqQTFLVnh1SUNBZ0lHRndjR1ZoY21GdVkyVTZJRzV2Ym1WY2JpQWdJQ0JpYjNKa1pYSTZJREZ3ZUNCemIyeHBaQ0FrWjNKaGNHaHBkR1ZjYmx4dUlDQWdJQ3R0WldScFlTaGNJanc5ZEdGaWJHVjBYQ0lwWEc0Z0lDQWdJQ0IzYVdSMGFEb2dNVEF3SlZ4dVhHNGdJQ0FnSmpvNkxYZGxZbXRwZEMxcGJuQjFkQzF3YkdGalpXaHZiR1JsY2l4Y2JpQWdJQ0FtT2pvdGJXOTZMWEJzWVdObGFHOXNaR1Z5TEZ4dUlDQWdJQ1k2TFcxekxXbHVjSFYwTFhCc1lXTmxhRzlzWkdWeVhHNGdJQ0FnSUNCamIyeHZjam9nWkdGeWEyVnVLQ1JqYkc5MVpDd2dNVEFsS1Z4dVhHNGdJQ0FnSmpwbWIyTjFjMXh1SUNBZ0lDQWdiM1YwYkdsdVpUb2dibTl1WlZ4dVhHNGdJQ1l1YVhNdGRtbHphV0pzWlZ4dUlDQWdJRzl3WVdOcGRIazZJREZjYmlBZ0lDQjJhWE5wWW1sc2FYUjVPaUIyYVhOcFlteGxYRzRnSUNBZ2RISmhibk5wZEdsdmJqb2diM0JoWTJsMGVTQXVNM01nTUhNc0lIWnBjMmxpYVd4cGRIa2dNSE1nTUhOY2JpQWdJQ0F2TDJKdmVDMXphR0ZrYjNjNklERndlQ0F4Y0hnZ05YQjRJSEpuWW1Fb01UQXdMREV3TUN3eE1EQXNJQzQxS1Z4dVhHNGdJQzV1WVhZdGFYTXRabWw0WldRZ0pseHVJQ0FnSUhCdmMybDBhVzl1T2lCbWFYaGxaRnh1WEc0Z0lDdHRaV1JwWVNoY0lqNWtaWE5yZEc5d1hDSXBYRzVjYmx4dUlDQWdJR2x1Y0hWMFhHNWNibHh1WEc0dVkyUXRiM1psY214aGVWeHVJQ0F2S2lCemFHRmtiM2NnYkdGNVpYSWdkbWx6YVdKc1pTQjNhR1Z1SUc1aGRtbG5ZWFJwYjI0Z2FYTWdZV04wYVhabFhHNGdJSEJ2YzJsMGFXOXVPaUJtYVhobFpGeHVJQ0I2TFdsdVpHVjRPaUF5WEc0Z0lHaGxhV2RvZERvZ01UQXdKVnh1SUNCM2FXUjBhRG9nTVRBd0pWeHVJQ0IwYjNBNklEQmNiaUFnYkdWbWREb2dNRnh1SUNCamRYSnpiM0k2SUhCdmFXNTBaWEpjYmlBZ0x5OWlZV05yWjNKdmRXNWtMV052Ykc5eU9pQnlaMkpoS0NSbmNtVmxiaXdnTUM0NEtWeHVJQ0IyYVhOcFltbHNhWFI1T2lCb2FXUmtaVzVjYmlBZ2IzQmhZMmwwZVRvZ01GeHVJQ0JpWVdOclptRmpaUzEyYVhOcFltbHNhWFI1T2lCb2FXUmtaVzVjYmlBZ2RISmhibk5wZEdsdmJqb2diM0JoWTJsMGVTQXdMak56SURCekxDQjJhWE5wWW1sc2FYUjVJREJ6SURBdU0zTXNJSFJ5WVc1elptOXliU0F3TGpOeklEQnpYRzVjYmlBZ0ppNXBjeTEyYVhOcFlteGxYRzRnSUNBZ2IzQmhZMmwwZVRvZ01WeHVJQ0FnSUhacGMybGlhV3hwZEhrNklIWnBjMmxpYkdWY2JpQWdJQ0IwY21GdWMybDBhVzl1T2lCdmNHRmphWFI1SURBdU0zTWdNSE1zSUhacGMybGlhV3hwZEhrZ01ITWdNSE1zSUhSeVlXNXpabTl5YlNBd0xqTnpJREJ6WEc1Y2JpQWdLMjFsWkdsaEtGd2lQR1JsYzJ0MGIzQmNJaWxjYmlBZ0lDQW1MbWx6TFhacGMybGliR1ZjYmlBZ0lDQWdJQzh2ZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWWUtDMGtibUYyTFhkcFpIUm9MVk1wWEc0Z0lDQWdJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlZnb01DbGNibHh1SUNBZ0lDNXVZWFl0YjI0dGJHVm1kQ0FtTG1sekxYWnBjMmxpYkdWY2JpQWdJQ0FnSUhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbFdDZ2tibUYyTFhkcFpIUm9MVk1wWEc1Y2JpQWdJQ0FtTG1sekxYWnBjMmxpYkdVdWMyVmhjbU5vTFdsekxYWnBjMmxpYkdVc1hHNGdJQ0FnTG01aGRpMXZiaTFzWldaMElDWXVhWE10ZG1semFXSnNaUzV6WldGeVkyZ3RhWE10ZG1semFXSnNaVnh1SUNBZ0lDQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1ZZS0RBcFhHNWNiaThxSUMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRYRzRnS2x4dUlDcHpkWEJ3YjNKMElHWnZjaUJ1YnlCcWMxeHVJQ3BjYmlBcUxTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmx4dUxtNXZMV3B6SUM1alpDMXdjbWx0WVhKNUxXNWhkbHh1SUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1WY2JpQWdhR1ZwWjJoME9pQmhkWFJ2WEc0Z0lIZHBaSFJvT2lBeE1EQWxYRzRnSUc5MlpYSm1iRzkzT2lCMmFYTnBZbXhsWEc0Z0lIWnBjMmxpYVd4cGRIazZJSFpwYzJsaWJHVmNiaUFnZWkxcGJtUmxlRG9nSkdOdmJuUmxiblJjYmx4dUxtNXZMV3B6SUM1alpDMXpaV0Z5WTJoY2JpQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxYRzRnSUhSdmNEb2dNRnh1SUNCdmNHRmphWFI1T2lBeFhHNGdJSFpwYzJsaWFXeHBkSGs2SUhacGMybGliR1ZjYmx4dUsyMWxaR2xoS0Z3aVBtUmxjMnQwYjNCY0lpbGNiaUFnTG01dkxXcHpJQzVqWkMxd2NtbHRZWEo1TFc1aGRseHVJQ0FnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlZ4dUlDQWdJSG90YVc1a1pYZzZJQ1JoWW05MlpTMWpiMjUwWlc1MFhHNGdJQ0FnWkdsemNHeGhlVG9nYVc1c2FXNWxMV0pzYjJOclhHNGdJQ0FnZDJsa2RHZzZJR0YxZEc5Y2JpQWdJQ0IwYjNBNklEQmNiaUFnSUNCeWFXZG9kRG9nTVRVd2NIaGNiaUFnSUNCd1lXUmthVzVuT2lBd1hHNGdJQzV1YnkxcWN5QXVibUYyTFdsekxXWnBlR1ZrSUM1alpDMXdjbWx0WVhKNUxXNWhkbHh1SUNBZ0lIQnZjMmwwYVc5dU9pQm1hWGhsWkZ4dUlpd2lMbTVoZGkxbWIyOTBaWEpjYmx4MGNHRmtaR2x1WnpvZ016QndlQ0F5TUhCNElESXdjSGhjYmx4MGRHVjRkQzFoYkdsbmJqb2diR1ZtZEZ4dVhHNWNkQ3R0WldScFlTaGNJanc5ZEdGaWJHVjBYQ0lwWEc1Y2RGeDBaR2x6Y0d4aGVUb2dibTl1WlZ4dVhHNWNkQ1pmWDJobFlXUnBibWRjYmx4MFhIUm1iMjUwTFdaaGJXbHNlVG9nSkhOaGJuTmNibHgwWEhSbWIyNTBMWE5wZW1VNklERnlaVzFjYmx4MFhIUm1iMjUwTFhkbGFXZG9kRG9nSkdKdmJHUmNibHgwWEhSdFlYSm5hVzR0WW05MGRHOXRPaUF4Y21WdFhHNWNibHgwWEhSaFhHNWNkRngwWEhSamIyeHZjam9nSkdOb1lYSmpiMkZzWEc1Y2RGeDBYSFFtT21odmRtVnlYRzVjZEZ4MFhIUmNkR052Ykc5eU9pQWtaM0psWlc1Y2JseHVYSFFtWDE5c2FXNXJYRzVjZEZ4MFptOXVkQzF6YVhwbE9pQXhOSEI0WEc1Y2JseDBKbDlmWW05NFhHNWNkRngwY0dGa1pHbHVaem9nTUNBeE1IQjRYRzVjZEZ4MGRtVnlkR2xqWVd3dFlXeHBaMjQ2SUhSdmNGeHVYRzVjZENaZlgySnZlQzF1WVhKeWIzZGNibHgwWEhSd1lXUmthVzVuT2lBd0lERXdjSGhjYmx4MFhIUjJaWEowYVdOaGJDMWhiR2xuYmpvZ2RHOXdYRzVjYmx4MEpsOWZZblYwZEc5dVhHNWNkRngwWW05eVpHVnlMWGRwWkhSb09pQXhjSGhjYmx4MFhIUmpiMnh2Y2pvZ0pHZHlaV1Z1WEc1Y2RGeDBabTl1ZEMxemFYcGxPaUF1T1hKbGJWeHVYSFJjZEcxaGNtZHBiaTFpYjNSMGIyMDZJREZ5WlcxY2JseDBYSFJ3WVdSa2FXNW5PaUF1TlhKbGJTQXhjbVZ0WEc1Y2RGeDBkMmxrZEdnNklERXdNQ1ZjYmx4dVhHNWNkQzh2SUZOMVlpMXVZWFpwWjJGMGFXOXVMQ0IzYUdsamFDQm9hV1JsY3lCdmJpQnpiV0ZzYkNCemFYcGxjMXh1WEhRbVgxOXpkV0l0YkdsdWEzTmNibHgwWEhSbWIyNTBMWE5wZW1VNklERTBjSGhjYmx4dVhIUmNkR3hwT201MGFDMWphR2xzWkNneEtWeHVYSFJjZEZ4MFptOXVkQzFtWVcxcGJIazZJQ1J6WVc1elhHNWNkRngwWEhSbWIyNTBMWE5wZW1VNklERnlaVzFjYmx4MFhIUmNkR1p2Ym5RdGQyVnBaMmgwT2lBa1ltOXNaRnh1WEhSY2RGeDBiV0Z5WjJsdUxXSnZkSFJ2YlRvZ0xqVnlaVzFjYmx4dVhIUmNkRngwWVZ4dVhIUmNkRngwSUNCamIyeHZjam9nSkdOb1lYSmpiMkZzWEc1Y2RGeDBYSFFnSUNZNmFHOTJaWEpjYmx4MFhIUmNkQ0FnSUNCamIyeHZjam9nSkdkeVpXVnVYRzRpTENJdkwwSmhibTVsY2lCVVlXeHNJQzBnVkdocGN5QnBjeUJtYjNWdVpDQnZiaUIwYUdVZ2FHOXRaWEJoWjJVZ2IyNXNlVnh1TG1KaGJtNWxjaTEwWVd4c1hHNGdJR0poWTJ0bmNtOTFibVF0YVcxaFoyVTZJSFZ5YkNocGJXRm5aWE12YVc1a1pYaGZhR1Z5Ynk1cWNHY3BYRzRnSUdKaFkydG5jbTkxYm1RdGNHOXphWFJwYjI0NklHTmxiblJsY2x4dUlDQmlZV05yWjNKdmRXNWtMWE5wZW1VNklHTnZkbVZ5WEc0Z0lHaGxhV2RvZERvZ01qQXdjSGhjYmlBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabFhHNWNiaUFnSzIxbFpHbGhLRndpUG5SaFlteGxkRndpS1Z4dVhHNGdJQ0FnYUdWcFoyaDBPaUEwTmpWd2VGeHVYRzRnSUN0dFpXUnBZU2hjSWp3OWNHaHZibVZjSWlsY2JpQWdJQ0JpWVdOclozSnZkVzVrTFdsdFlXZGxPaUIxY213b2FXMWhaMlZ6TDJsdVpHVjRYMmhsY204dE1pNXFjR2NwWEc0Z0lDQWdMeTlpWVdOclozSnZkVzVrTFhCdmMybDBhVzl1T2lCc1pXWjBYRzRnSUNBZ2FHVnBaMmgwT2lBeU5qVndlRnh1WEc1Y2JpQWdKbDlmYUdWaFpHeHBibVZjYmlBZ0lDQmliM1IwYjIwNklETnlaVzFjYmlBZ0lDQmpiMnh2Y2pvZ0pIZG9hWFJsWEc0Z0lDQWdabTl1ZEMxbVlXMXBiSGs2SUhObGNtbG1YRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQTBjbVZ0WEc0Z0lDQWdabTl1ZEMxM1pXbG5hSFE2SURnd01GeHVJQ0FnSUd4bFpuUTZJREp5WlcxY2JpQWdJQ0JzYVc1bExXaGxhV2RvZERvZ01WeHVJQ0FnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlZ4dUlDQWdJRzFoY21kcGJqb2dNQ0F3SURGeVpXMGdNWEpsYlZ4dUlDQWdJSFJsZUhRdGMyaGhaRzkzT2lBeWNIZ2dNbkI0SURKd2VDQWtZMmhoY21OdllXeGNibHh1SUNBZ0lDdHRaV1JwWVNoY0lqdzlkR0ZpYkdWMFhDSXBYRzRnSUNBZ0lDQndiM05wZEdsdmJqb2djM1JoZEdsalhHNGdJQ0FnSUNCbWIyNTBMWE5wZW1VNklESnlaVzFjYmlBZ0lDQWdJSEJoWkdScGJtYzZJREp5WlcxY2JseHVJQ0FnSUhOMWNGeHVJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9qRXVOelZ5WlcxY2JseHVJQ0FnSUNBZ0syMWxaR2xoS0Z3aVBEMTBZV0pzWlhSY0lpbGNiaUFnSUNBZ0lDQWdkRzl3T2lBdE1DNHlOV1Z0WEc1Y2JpOHZJRUpoYm01bGNpQlRkR0Z1WkdGeVpDQXRJRlJvYVhNZ2FYTWdabTkxYm1RZ2IyNGdkR2hsSUcxaGFtOXlhWFI1SUc5bUlIUm9aU0JwYm5SbGNtNWhiQ0J3WVdkbGMxeHVMbUpoYm01bGNpMXpkR0Z1WkdGeVpGeHVJQ0JpWVdOclozSnZkVzVrT2lBa1ozSmxaVzVjYmlBZ1kyOXNiM0k2SUNSM2FHbDBaVnh1SUNCa2FYTndiR0Y1T2lCMFlXSnNaVnh1SUNCb1pXbG5hSFE2SUdGMWRHOWNibHh1SUNBdkx5QkhaWFFnY21sa0lHOW1JSGRsYVhKa0lITndZV05sSUdKbGJHOTNJR2x0WVdkbElHbHVJSFJvWlNCaVlXNXVaWEp6WEc0Z0lHbHRaMXh1SUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yWEc1Y2JpQWdKbDlmWW05NFhHNGdJQ0FnY0dGa1pHbHVaem9nTVhKbGJTQXljbVZ0WEc1Y2JpQWdKbDlmYUdWaFpHbHVaMXh1SUNBZ0lHTnZiRzl5T2lBa2QyaHBkR1ZjYmx4dUlDQW1YMTkwWlhoMFhHNWNiaUFnSmw5ZmJXVmthV0ZjYmlBZ0lDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWtjMnhoZEdWY2JseHVJQ0F2THlCVWFHbHpJR2x6SUdadmRXNWtJRzl1SUhSb1pTQkJjSEJ5YjJGamFDQlFZV2RsWEc0Z0lDWmZYMjFsWkdsaExXRndjSEp2WVdOb1hHNGdJQ0F2THlCaVlXTnJaM0p2ZFc1a0xXbHRZV2RsT2lCMWNtd29MaTR2YVcxaFoyVnpMMjFsWlhScGJtY3VhbkJuS1Z4dUlDQWdMeThnWW1GamEyZHliM1Z1WkMxd2IzTnBkR2x2YmpvZ1kyVnVkR1Z5WEc0Z0lDQXZMeUJpWVdOclozSnZkVzVrTFhOcGVtVTZJR052ZG1WeVhHNWNiaUFnSUNBcmJXVmthV0VvWENJOFBYUmhZbXhsZEZ3aUtWeHVJQ0FnSUNBZ2FHVnBaMmgwT2lBek1EQndlRnh1WEc0Z0lDOHZJRlJvYVhNZ2FYTWdabTkxYm1RZ2IyNGdkR2hsSUV4bFlXUmxjbk5vYVhBZ2NHRm5aVnh1SUNBbVgxOXRaV1JwWVMxc1pXRmtaWEp6YUdsd1hHNGdJQ0F2THlCaVlXTnJaM0p2ZFc1a0xXbHRZV2RsT2lCMWNtd29MaTR2YVcxaFoyVnpMM0JsYjNCc1pTNXFjR2NwWEc0Z0lDQXZMeUJpWVdOclozSnZkVzVrTFhCdmMybDBhVzl1T2lCalpXNTBaWEpjYmlBZ0lDOHZJR0poWTJ0bmNtOTFibVF0YzJsNlpUb2dZMjkyWlhKY2JseHVJQ0FnSUN0dFpXUnBZU2hjSWp3OWRHRmliR1YwWENJcFhHNGdJQ0FnSUNCb1pXbG5hSFE2SURNd01IQjRYRzVjYmk4dklFSmhibTVsY2lCUVlXNXZjbUZ0WVNBdElGUm9hWE1nYVhNZ1ptOTFibVFnYjI0Z2RHaGxJRTVsZDNNZ2NHRm5aVnh1TG1KaGJtNWxjaTF3WVc1dmNtRnRZVnh1SUNCaVlXTnJaM0p2ZFc1a0xXbHRZV2RsT2lCMWNtd29MaTR2YVcxaFoyVnpMM1J5WldWekxtcHdaeWxjYmlBZ1ltRmphMmR5YjNWdVpDMXdiM05wZEdsdmJqb2dZMlZ1ZEdWeVhHNGdJR0poWTJ0bmNtOTFibVF0YzJsNlpUb2dZMjkyWlhKY2JpQWdhR1ZwWjJoME9pQXlOVFZ3ZUZ4dUlpd2lMbU5oY21RdFpHbHdkR2xqWEc0Z0lHUnBjM0JzWVhrNklIUmhZbXhsWEc0Z0lHSnZjbVJsY2kxMGIzQTZJREZ3ZUNCemIyeHBaQ0FrWW05eVpHVnlRMjlzYjNKY2JpQWdZbTl5WkdWeUxXSnZkSFJ2YlRvZ01YQjRJSE52Ykdsa0lDUmliM0prWlhKRGIyeHZjbHh1WEc0Z0lDdHlaWE53YjI1emFYWmxMWE4wWVdOclhHNWNiaUFnSmw5ZlltOTRYRzRnSUNBZ1pHbHpjR3hoZVRvZ2RHRmliR1V0WTJWc2JGeHVJQ0FnSUhabGNuUnBZMkZzTFdGc2FXZHVPaUJ0YVdSa2JHVmNibHh1SUNBZ0lIQmhaR1JwYm1jNklESnlaVzBnTVhKbGJWeHVYRzRnSUNBZ0syMWxaR2xoS0Z3aVBuUmhZbXhsZEZ3aUtWeHVJQ0FnSUNBZ2NHRmtaR2x1WnpvZ01uSmxiU0F4Y21WdElESnlaVzBnTW5KbGJWeHVYRzRnSUNBZ0pqcHVkR2d0WTJocGJHUW9NaWxjYmlBZ0lDQWdJQ3R0WldScFlTaGNJajUwWVdKc1pYUmNJaWxjYmlBZ0lDQWdJQ0FnWW05eVpHVnlMV3hsWm5RNklERndlQ0J6YjJ4cFpDQWtZbTl5WkdWeVEyOXNiM0pjYmlBZ0lDQWdJQ0FnY0dGa1pHbHVaem9nTW5KbGJTQXljbVZ0SURKeVpXMGdNWEpsYlZ4dVhHNGdJQ1pmWDJobFlXUnBibWRjYmlBZ0lDQjBaWGgwTFdGc2FXZHVPaUJqWlc1MFpYSmNibHh1SUNBbVgxOXRaV1JwWVZ4dUlDQWdJRzFoY21kcGJpMWliM1IwYjIwNklESnlaVzFjYmx4dUlDQW1YMTkwWlhoMFhHNGdJQ0FnZEdWNGRDMWhiR2xuYmpvZ1kyVnVkR1Z5WEc0Z0lDQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ01uSmxiVnh1WEc0Z0lIVnNYRzRnSUNBZ2JHbHpkQzF6ZEhsc1pUb2dibTl1WlZ4dUlDQWdJSFJsZUhRdFlXeHBaMjQ2SUdObGJuUmxjbHh1WEc0Z0lDQWdiR2xjYmlBZ0lDQWdJR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYTF4dUlDQWdJQ0FnY0dGa1pHbHVaem9nTGpWeVpXMWNiaUFnSUNBZ0lIZHBaSFJvT2lBME55VmNibHh1WEc0Z0lDWmZYMnhwYm10Y2JpQWdJQ0JqYjJ4dmNqb2dKSE5wZEdVdGRHVjRkQzFqYjJ4dmNpMXNhVzVyWEc0Z0lDQWdaR2x6Y0d4aGVUb2dhVzVzYVc1bExXSnNiMk5yWEc0Z0lDQWdabTl1ZEMxbVlXMXBiSGs2SUNSelpYSnBabHh1SUNBZ0lIQmhaR1JwYm1jNklEQWdMalJ5WlcxY2JpQWdJQ0IyWlhKMGFXTmhiQzFoYkdsbmJqb2diV2xrWkd4bFhHNGdJQ0FnSmpwb2IzWmxjbHh1SUNBZ0lDQWdZMjlzYjNJNklDUnphWFJsTFhSbGVIUXRZMjlzYjNJdGJHbHVheTFvYjNabGNseHVYRzVjYmk4dklFTmhjbVFnUW1sdklDMGdWR2hsYzJVZ1lYSmxJR1p2ZFc1a0lHOXVJSFJvWlNCTVpXRmtaWEp6YUdsd0lIQmhaMlZjYmk1allYSmtMV0pwYjF4dUlDQndZV1JrYVc1bkxXSnZkSFJ2YlRvZ01uSmxiVnh1WEc0Z0lDdHRaV1JwWVNoY0lqdzlkR0ZpYkdWMFhDSXBYRzRnSUNBZ1ltOXlaR1Z5TFdKdmRIUnZiVG9nTVhCNElITnZiR2xrSUNSamJHOTFaRnh1SUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2SURKeVpXMWNibHh1SUNBbVgxOXRaV1JwWVZ4dUlDQWdJSFpsY25ScFkyRnNMV0ZzYVdkdU9pQjBiM0JjYmx4dUlDQWdJQ3R0WldScFlTaGNJanc5ZEdGaWJHVjBYQ0lwWEc0Z0lDQWdJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXhjbVZ0WEc0Z0lDQWdJQ0IwWlhoMExXRnNhV2R1T2lCalpXNTBaWEpjYmx4dUlDQWdJR2x0WjF4dUlDQWdJQ0FnSzIxbFpHbGhLRndpUEQxMFlXSnNaWFJjSWlsY2JpQWdJQ0FnSUNBZ1pHbHpjR3hoZVRvZ2FXNXNhVzVsTFdKc2IyTnJYRzRnSUNBZ0lDQWdJSGRwWkhSb09pQXpNeVZjYmx4dUlDQW1YMTlpYjNoY2JpQWdJQ0J3WVdSa2FXNW5MV3hsWm5RNklESnlaVzFjYmlBZ0lDQndZV1JrYVc1bkxYUnZjRG9nTUZ4dUlDQWdJSFpsY25ScFkyRnNMV0ZzYVdkdU9pQjBiM0JjYmx4dUlDQWdJQ3R0WldScFlTaGNJanc5ZEdGaWJHVjBYQ0lwWEc0Z0lDQWdJQ0J3WVdSa2FXNW5PaUF3WEc1Y2JpQWdKbDlmYUdWaFpHbHVaMXh1SUNBZ0lDOHZUV2w0YVc0Z1kyRnVJR0psSUdadmRXNWtJR2x1SUhSNWNHOW5jbUZ3YUhsY2JpQWdJQ0FyYzNSaGJtUmhjbVF0YUdWaFpHbHVaeWdwWEc0Z0lDQWdiV0Z5WjJsdUxXSnZkSFJ2YlRveGNtVnRPMXh1WEc0Z0lDWmZYM04xWW5ScGRHeGxYRzRnSUNBZ1kyOXNiM0k2SUNSemRHOXVaVnh1SUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2SURod2VGeHVYRzRnSUNBZ2FETmNiaUFnSUNBZ0lHUnBjM0JzWVhrNklHbHViR2x1WlMxaWJHOWphMXh1SUNBZ0lHRmNiaUFnSUNBZ0lHTnZiRzl5T2lBa1ozSmxaVzVjYmlBZ0lDQWdJRzFoY21kcGJpMXNaV1owT2lBeE1IQjRYRzRnSUNBZ0lDQnBYRzRnSUNBZ0lDQWdJR0p2Y21SbGNqb3hjSGdnYzI5c2FXUWdKR2R5WldWdVhHNGdJQ0FnSUNBZ0lIQmhaR1JwYm1jNklESndlRnh1WEc0Z0lDWmZYM1JsZUhSY2JseHVJQ0FnSUN0dFpXUnBZU2hjSWp3OWRHRmliR1YwWENJcFhHNGdJQ0FnSUNCMFpYaDBMV0ZzYVdkdU9pQnNaV1owWEc1Y2JpQWdJQ0FxSUNzZ0tseHVJQ0FnSUNBZ2JXRnlaMmx1TFhSdmNEb2dNWEpsYlZ4dVhHNWNiaTh2SUVOaGNtUWdZWEowYVdOc1pTQXRJRlJvWlhObElHRnlaU0JtYjNWdVpDQnZiaUIwYUdVZ1RtVjNjeUJoYm1RZ1NXNXphV2RvZEhNZ2NHRm5aVnh1TG1OaGNtUXRZWEowYVdOc1pWeHVYRzVjYmlBZ0psOWZZbTk0WEc0Z0lDQWdZbTk0TFhOb1lXUnZkem9nTUNBeGNIZ2dNQ0FrWjNKbFpXNWNiaUFnSUNCa2FYTndiR0Y1T2lCdWIyNWxYRzRnSUNBZ0szWmxjblF0Y0dGa1pHbHVaeWd4TERFcFhHNWNiaUFnSUNBcUlDc2dLbHh1SUNBZ0lDQWdiV0Z5WjJsdUxYUnZjRG9nTVhKbGJWeHVYRzRnSUdGY2JpQWdJQ0FtT21odmRtVnlYRzRnSUNBZ0lDQjBaWGgwTFdSbFkyOXlZWFJwYjI0NklHNXZibVZjYmx4dUlDQm9NbHh1SUNBZ0lDdHpkR0Z1WkdGeVpDMW9aV0ZrYVc1bktDa2dMeTlOYVhocGJpQmpZVzRnWW1VZ1ptOTFibVFnYVc0Z2RIbHdiMmR5WVhCb2VWeHVJQ0FnSUNZNmFHOTJaWEpjYmlBZ0lDQWdJR052Ykc5eU9pUnVhV2RvZEdkeVpXVnVYRzVjYmlBZ2MyMWhiR3hjYmlBZ0lDQmpiMnh2Y2pvZ0l6WTJObHh1SUNBZ0lHWnZiblF0YzJsNlpUb2dMamMxY21WdFhHNWNiaUFnY0Z4dVhHNHViRzloWkdWeVgxOXVZWFpjYmlBZ1pHbHpjR3hoZVRvZ2RHRmliR1V0WTJWc2JGeHVJQ0J3WVdSa2FXNW5MWFJ2Y0RvZ01TNHlOWEpsYlZ4dVhHNWNiaTVqWVhKa0xYUnlhWEIwYVdOY2JpQWdaR2x6Y0d4aGVUb2dkR0ZpYkdWY2JpQWdZbTl5WkdWeUxYUnZjRG9nTVhCNElITnZiR2xrSUNSaWIzSmtaWEpEYjJ4dmNseHVJQ0JpYjNKa1pYSXRZbTkwZEc5dE9pQXhjSGdnYzI5c2FXUWdKR0p2Y21SbGNrTnZiRzl5WEc1Y2JpQWdKbDlmWW05NFhHNGdJQ0FnY0dGa1pHbHVaem9nTW5KbGJWeHVJQ0FnSUhabGNuUnBZMkZzTFdGc2FXZHVPaUIwYjNCY2JseHVJQ0FnSUNZNmJuUm9MV05vYVd4a0tESXBYRzRnSUNBZ0lDQXJiV1ZrYVdFb1hDSStkR0ZpYkdWMFhDSXBYRzRnSUNBZ0lDQWdJR0p2Y21SbGNpMXNaV1owT2lBeGNIZ2djMjlzYVdRZ0pHSnZjbVJsY2tOdmJHOXlYRzRnSUNBZ0lDQWdJQzh2Y0dGa1pHbHVaem9nTW5KbGJTQXhjbVZ0SURKeVpXMGdNWEpsYlZ4dVhHNGdJQ0FnSmpwdWRHZ3RZMmhwYkdRb015bGNiaUFnSUNBZ0lDdHRaV1JwWVNoY0lqNTBZV0pzWlhSY0lpbGNiaUFnSUNBZ0lDQWdZbTl5WkdWeUxXeGxablE2SURGd2VDQnpiMnhwWkNBa1ltOXlaR1Z5UTI5c2IzSmNiaUFnSUNBZ0lDQWdMeTl3WVdSa2FXNW5PaUF5Y21WdElESnlaVzBnTW5KbGJTQXhjbVZ0WEc1Y2JpQWdKbDlmYldWa2FXRmNiaUFnSUNBdkwySmhZMnRuY205MWJtUXRZMjlzYjNJNklDUm5jbVZsYmx4dUlDQWdJR2hsYVdkb2REb2dNVFV3Y0hoY2JpQWdJQ0J2ZG1WeVpteHZkem9nYUdsa1pHVnVYRzRnSUNBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTW5KbGJWeHVYRzRnSUNBZ2FXMW5YRzVjYmlBZ0psOWZhR1ZoWkdsdVp5MXNhVzVyWEc0Z0lDQWdLM050WVd4c0xXaGxZV1JwYm1jb0tWeHVJQ0FnSUdOdmJHOXlPaUFrYzJsMFpTMTBaWGgwTFdOdmJHOXlMV3hwYm10Y2JpQWdJQ0JrYVhOd2JHRjVPaUJwYm14cGJtVXRZbXh2WTJ0Y2JpQWdJQ0IwWlhoMExXRnNhV2R1T2lCalpXNTBaWEpjYmx4dUlDQWdJQ1k2YUc5MlpYSmNiaUFnSUNBZ0lHTnZiRzl5T2lBa2MybDBaUzEwWlhoMExXTnZiRzl5TFd4cGJtc3RhRzkyWlhKY2JseHVJQ0FtWDE5MFpYaDBYRzRnSUNBZ2RHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeVhHNGlMQ0l2TDF4dUx5OURWRUZ6SUMwZ1EyRnNiQ0IwYnlCQlkzUnBiMjRnYlc5a2RXeGxjMXh1THk5Y2JseHVMeTlEYjI1MFlXTjBJRU5VUVZ4dUx5OVVhR2x6SUdseklHWnZkVzVrSUc5dUlIUm9aU0JvYjIxbGNHRm5aU0J2Ym14NUlISnBaMmgwSUc1dmQxeHVMbU4wWVMxamIyNTBZV04wWEc0Z0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDUnpiR0YwWlZ4dUlDQmthWE53YkdGNU9pQjBZV0pzWlZ4dUlDQjNhV1IwYURvZ01UQXdKVHRjYmx4dUlDQW1YMTlpYjNoY2JpQWdJQ0J3WVdSa2FXNW5PaUF5Y21WdFhHNWNiaUFnSmw5ZlltOTRPbTUwYUMxamFHbHNaQ2d5S1Z4dUlDQWdJSEJoWkdScGJtYzZJREp5WlcwZ01GeHVYRzVjYmlBZ0psOWZkR1Y0ZEZ4dUlDQWdJRzFoY21kcGJqb2dNRnh1SUNBZ0lIQmhaR1JwYm1jNklEQWdNeTQxY21WdElEQWdNbkpsYlZ4dVhHNGdJQ0FnSzIxbFpHbGhLRndpUEQxMFlXSnNaWFJjSWlsY2JpQWdJQ0FnSUhCaFpHUnBibWM2SURCY2JseHVJQ0FtWDE5aWRYUjBiMjVjYmlBZ0lDQmthWE53YkdGNU9pQnBibXhwYm1VdFlteHZZMnRjYmlBZ0lDQnRZWEpuYVc0NklEQWdNbkpsYlNBd0lEQmNibHh1SUNBZ0lDdHRaV1JwWVNoY0lqdzlkR0ZpYkdWMFhDSXBYRzRnSUNBZ0lDQnRZWEpuYVc0NklEQmNibHh1WEc0dkwxWnBaR1Z2SUhSbFlYTmxjaUJEVkVGY2JpOHZWR2hwY3lCcGN5Qm1iM1Z1WkNCdmJpQjBhR1VnYUc5dFpYQmhaMlVnYjI1c2VTQnlhV2RvZENCdWIzZGNiaTVqZEdFdGRHVmhjMlZ5WEc0Z0lHUnBjM0JzWVhrNklIUmhZbXhsWEc0Z0lIQmhaR1JwYm1jNklERnlaVzBnTW5KbGJWeHVYRzRnSUhacFpHVnZYRzRnSUNBZ2QybGtkR2c2SURFd01DVmNiaUFnSUNCb1pXbG5hSFE2SURFd01DVmNibHh1SUNBcmJXVmthV0VvWENJOFBYUmhZbXhsZEZ3aUtWeHVJQ0FnSUdac1pYZ3RabXh2ZHpvZ1kyOXNkVzF1WEc1Y2JpQWdKbDlmWW05NFhHNGdJQ0FnY0dGa1pHbHVaeTF5YVdkb2REb2dNbkpsYlZ4dVhHNGdJQ0FnSzIxbFpHbGhLRndpUEQxMFlXSnNaWFJjSWlsY2JpQWdJQ0FnSUhCaFpHUnBibWM2SURCY2JseHVJQ0FtWDE5b1pXRmthVzVuWEc1Y2JpQWdKbDlmZEdWNGRGeHVJQ0FnSUcxaGNtZHBiaTFpYjNSMGIyMDZJREp5WlcxY2JseHVYRzRnSUNaZlgyMWxaR2xoWEc0Z0lDQWdhR1ZwWjJoME9pQXpNREJ3ZUZ4dUlDQWdJRzkyWlhKbWJHOTNPaUJvYVdSa1pXNWNibHh1SUNBZ0lDdHRaV1JwWVNoY0lqdzlkR0ZpYkdWMFhDSXBYRzRnSUNBZ0lDQm9aV2xuYUhRNklHRjFkRzljYmlBZ0lDQWdJRzFoY21kcGJpMTBiM0E2SURKeVpXMWNibHh1WEc0dkwwTmxiblJsY21Wa0lFTlVRVnh1THk5VWFHbHpJR2x6SUdadmRXNWtJRzl1SUhSb1pTQm9iMjFsY0dGblpTQnZibXg1SUhKcFoyaDBJRzV2ZDF4dUxtTjBZUzFqWlc1MFpYSmNiaUFnY0dGa1pHbHVaem9nTW5KbGJWeHVJQ0IwWlhoMExXRnNhV2R1T2lCalpXNTBaWEpjYmx4dUlDQW1YMTlvWldGa2FXNW5YRzVjYmlBZ0psOWZkR1Y0ZEZ4dUlDQWdJSEJoWkdScGJtYzZJREFnT0hKbGJWeHVJQ0FnSUcxaGNtZHBiaTFpYjNSMGIyMDZJREp5WlcxY2JseHVJQ0FnSUN0dFpXUnBZU2hjSWp3OWRHRmliR1YwWENJcFhHNGdJQ0FnSUNCd1lXUmthVzVuT2lBd1hHNWNiaUFnSmw5ZlluVjBkRzl1WEc1Y2JseHVYRzR2TDFOMVluTmpjbWxpWlNCRFZFRWdMU0JVYUdseklHbHpJR1p2ZFc1a0lHRjBJSFJvWlNCMGIzQWdiMllnZEdobElHWnZiM1JsY2x4dUxtTjBZUzF6ZFdKelkzSnBZbVZjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0pHZHlaV1Z1WEc0Z0lHTnZiRzl5T2lBa2QyaHBkR1ZjYmlBZ0szWmxjblF0Y0dGa1pHbHVaeWd4TERFdU5TbGNibHh1SUNBbVgxOW9aV0ZrYVc1blhHNGdJQ0FnWTI5c2IzSTZJQ1IzYUdsMFpWeHVJQ0FnSUhSbGVIUXRZV3hwWjI0NklHTmxiblJsY2x4dVhHNGdJQ1pmWDJKdmVGeHVJQ0FnSUdScGMzQnNZWGs2SUhSaFlteGxYRzRnSUNBZ2JXRnlaMmx1T2lBd0lHRjFkRzljYmlBZ0lDQjNhV1IwYURvZ056VWxYRzVjYmlBZ0x5OGdWRTlFVHlCMWMyVWdZMjlzSUdOc1lYTnpJR2x1YzNSbFlXUWdabTl5SUhkcFpIUm9YRzRnSUNaZlgybHVjSFYwTFdGa1pDMXZibHh1WEc1Y2JpQWdKbDlmYVc1d2RYUmNiaUFnSUNCd1lXUmthVzVuT2lBdU9YSmxiVnh1SUNBZ0lIZHBaSFJvT2lBeE1EQWxYRzVjYmlBZ0psOWZZblYwZEc5dVhHNGdJQ0FnWW05eVpHVnlPaUF4Y0hnZ2MyOXNhV1FnSkhkb2FYUmxYRzRnSUNBZ1kyOXNiM0k2SUNSM2FHbDBaVnh1SUNBZ0lHWnZiblF0YzJsNlpUb2dNUzQxY21WdFhHNGdJQ0FnYldGeVoybHVMV3hsWm5RNklERnlaVzFjYmlBZ0lDQjNhV1IwYURvZ01UQXdKVnh1SUNBZ0lIUnlZVzV6YVhScGIyNDZJR0ZzYkNBdU1uTWdaV0Z6WlZ4dVhHNGdJQ0FnSmpwb2IzWmxjbHh1SUNBZ0lDQWdMeXBVYUdWelpTQjNhV3hzSUhSeVlXNXphWFJwYjI0Z2IyNGdhRzkyWlhKY2JpQWdJQ0FnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNSM2FHbDBaVnh1SUNBZ0lDQWdZMjlzYjNJNklDUm5jbVZsYmx4dVhHNGdJQ0FnSzIxbFpHbGhLRndpUEQxMFlXSnNaWFJjSWlsY2JpQWdJQ0FnSUcxaGNtZHBiam9nTVhKbGJTQXdJREFnTUZ4dVhHNGdJQ1pmWDIxbGMzTmhaMlZjYmlBZ0lDQmthWE53YkdGNU9pQnViMjVsWEc0Z0lDQWdjR0ZrWkdsdVp5MTBiM0E2SURJdU5YSmxiVnh1WEc0Z0lDWmZYMlZ5Y205eVhHNGdJQ0FnWkdsemNHeGhlVG9nYm05dVpWeHVJQ0FnSUhCaFpHUnBibWN0ZEc5d09pQXhjbVZ0WEc1Y2JpQWdJQ0FtTFcxeloxeHVJQ0FnSUNBZ2RHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeVhHNWNibHh1THk5VGFXUmxZbUZ5SUVOVVFTQXRJRlJvYVhNZ2FYTWdabTkxYm1RZ2IyNGdhVzUwWlhKdVlXd2djR0ZuWlhNZ2IyNXNlVnh1TG1OMFlTMXphV1JsWW1GeVhHNGdJSEJoWkdScGJtYzZJREZ5WlcwZ01DQXdJRFZ5WlcxY2JpQWdkbVZ5ZEdsallXd3RZV3hwWjI0NklIUnZjRnh1WEc0Z0lDdHRaV1JwWVNoY0lqdzlkR0ZpYkdWMFhDSXBYRzRnSUNBZ2NHRmtaR2x1WnpvZ00zSmxiU0F5Y21WdFhHNWNiaUFnSmw5ZmJXVmthV0ZjYmlBZ0lDQXZMMmhsYVdkb2REb2dNVGd3Y0hoY2JpQWdJQ0F2TDI5MlpYSm1iRzkzT2lCb2FXUmtaVzVjYmx4dUlDQWdJQ3R0WldScFlTaGNJanc5ZEdGaWJHVjBYQ0lwWEc1Y2JseHVJQ0FnSUdsdFoxeHVYRzRnSUNaZlgyaGxZV1JwYm1kY2JpQWdJQ0JtYjI1MExYTnBlbVU2SURFdU1qVnlaVzFjYmlBZ0lDQXJkbVZ5ZEMxdFlYSm5hVzRvTGpVc0xqVXBYRzVjYmlBZ0psOWZkR1Y0ZEZ4dVhHNGdJQ1pmWDJKMWRIUnZibHh1SUNBZ0lHMWhjbWRwYmkxMGIzQTZJREZ5WlcxY2JseHVMeTlCWkdRZ2MyOXRaU0J6Y0dGamFXNW5JSGRvWlc0Z2RHaGxjbVVuY3lCdGRXeDBhWEJzWlNCemFXUmxZbUZ5SUdsMFpXMXpYRzR1WTNSaExYTnBaR1ZpWVhKZlgySjFkSFJ2YmlBcklDNWpkR0V0YzJsa1pXSmhjbDlmYUdWaFpHbHVaeXhjYmk1amRHRXRjMmxrWldKaGNsOWZkR1Y0ZENBcklDNWpkR0V0YzJsa1pXSmhjbDlmYUdWaFpHbHVaMXh1SUNCdFlYSm5hVzR0ZEc5d09pQXljbVZ0WEc1Y2JseHVYRzR2TDFOdlkybGhiQ0JEVkVFZ0xTQlVhR1Z6WlNCaGNtVWdZM1Z5Y21WdWRHeDVJR1p2ZFc1a0lHRjBJSFJvWlNCaWIzUjBiMjBnYjJZZ2RHaGxJR0pzYjJjZ2NHOXpkSE5jYmk1amRHRXRjMjlqYVdGc1hHNGdJSEJoWkdScGJtY3RiR1ZtZERvZ01YSmxiVnh1WEc0Z0lDNXBZMjl1WEc0Z0lDQWdabWxzYkRvZ0pHZHlaV1Z1WEc1Y2JpQWdJQ0FtT21odmRtVnlYRzRnSUNBZ0lDQm1hV3hzT2lBa1ozSmhjR2hwZEdWY2JseHVJQ0JoWEc0Z0lDQWdKanBvYjNabGNseHVJQ0FnSUNBZ2RHVjRkQzFrWldOdmNtRjBhVzl1T2lCdWIyNWxYRzRpTENJdkwwWnZiM1JsY2x4dUpHWnZiM1JsY2kxb1pXRmtaWEl0Ym1GMk9pQlVjbVZpZFdOb1pYUWdUVk5jYmx4dVptOXZkR1Z5WEc1Y2RIQmhaR1JwYm1jdFltOTBkRzl0T2lBMWNtVnRYRzVjYmx4MEsyMWxaR2xoS0Z3aVBEMTBZV0pzWlhSY0lpbGNibHgwWEhSd1lXUmthVzVuT2lBd1hHNWNibHh1TG1admIzUmxjaTFqYjNCNWNtbG5hSFJjYmx4MFltOXlaR1Z5TFhSdmNEb2dNWEI0SUhOdmJHbGtJQ1JqYkc5MVpGeHVYSFJrYVhOd2JHRjVPaUIwWVdKc1pWeHVYSFJ3WVdSa2FXNW5PaUF5Y21WdFhHNWNkSGRwWkhSb09pQXhNREFsWEc1Y2JseDBLMjFsWkdsaEtGd2lQRDEwWVdKc1pYUmNJaWxjYmx4MFhIUndZV1JrYVc1bk9pQXljbVZ0SURBZ01DQXdYRzVjZEZ4MFpHbHpjR3hoZVRvZ1lteHZZMnRjYmx4dVhIUW1YMTlzYjJkdkxXSnZlRnh1WEc1Y2RGeDBMbXh2WjI5Y2JseDBYSFJjZEhkcFpIUm9PaUExTURCd2VGeHVYRzVjZEZ4MFhIUXJiV1ZrYVdFb1hDSThQWFJoWW14bGRGd2lLVnh1WEhSY2RGeDBYSFJrYVhOd2JHRjVPaUJwYm14cGJtVXRZbXh2WTJ0Y2JseDBYSFJjZEZ4MGQybGtkR2c2SUdGMWRHOWNibHh1WEhSY2RGeDBYSFF1Ykc5bmIxOWZjM1JoWTJ0bFpGeHVYSFJjZEZ4MFhIUmNkR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYTF4dVhIUmNkRngwWEhSY2RIZHBaSFJvT2lBeU5UQndlRnh1WEc1Y2JseDBKbDlmWW05NFhHNWNkRngwZEdWNGRDMWhiR2xuYmpvZ2NtbG5hSFJjYmx4dVhIUmNkQ3R0WldScFlTaGNJajQ5ZEdGaWJHVjBYQ0lzSUZ3aVBqMWtaWE5yZEc5d1hDSXBYRzVjZEZ4MFhIUjBaWGgwTFdGc2FXZHVPaUJ5YVdkb2RGeHVYRzVjZEZ4MGMyMWhiR3hjYmx4MFhIUmNkR1JwYzNCc1lYazZJR0pzYjJOclhHNWNkRngwWEhSbWIyNTBMWE5wZW1VNklERTBjSGhjYmx4MFhIUmNkSEJoWkdScGJtY3RjbWxuYUhRNklDNDFjbVZ0WEc1Y2JseHVYSFJjZEZ4MEsyMWxaR2xoS0Z3aVBqMTBZV0pzWlhSY0lpd2dYQ0krUFdSbGMydDBiM0JjSWlsY2JseDBYSFJjZEZ4MFptOXVkQzF6YVhwbE9pQXhNbkI0WEc1Y2RGeDBYSFJjZEdScGMzQnNZWGs2SUdsdWJHbHVaUzFpYkc5amExeHVYRzVjZEZ4MFhIUmNkQ1k2T21KbFptOXlaVnh1WEhSY2RGeDBYSFFnSUdOdmJuUmxiblE2SUNkOEoxeHVYRzVjZEZ4MFhIUmNkQ1k2Ym5Sb0xXTm9hV3hrS0RFcFhHNWNkRngwWEhSY2RDQWdKam82WW1WbWIzSmxYRzVjZEZ4MFhIUmNkQ0FnSUNCamIyNTBaVzUwT2lBbkoxeHVYRzVjZEZ4MExtNWhkaTF0YVc1dmNseHVYSFJjZEZ4MGJHbGNibHgwWEhSY2RDQWdZVnh1WEhSY2RGeDBJQ0FnSUdadmJuUXRjMmw2WlRvZ01UUndlRnh1WEhSY2RGeDBJQ0FnSUN0dFpXUnBZU2hjSWo0OWRHRmliR1YwWENJc0lGd2lQajFrWlhOcmRHOXdYQ0lwWEc1Y2RGeDBYSFFnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJREV5Y0hoY2JseHVMbVp2YjNSbGNpMWthWE5qYkdGcGJXVnlYRzVjZEhSbGVIUXRZV3hwWjI0NklHTmxiblJsY2x4dVhIUjNhV1IwYURvZ01UQXdKVnh1WEc1Y2RDWmZYMkp2ZUZ4dVhIUmNkR0p2Y21SbGNqb2dNWEI0SUhOdmJHbGtJQ1JtYjI5MFpYSXRkR1Y0ZEZ4dVhIUmNkR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYTF4dVhIUmNkSFJsZUhRdFlXeHBaMjQ2SUdObGJuUmxjbHh1WEhSY2RIQmhaR1JwYm1jNklESXdjSGhjYmx4MFhIUnRZWEpuYVc0NklEVXdjSGdnWVhWMGJ5QXhNSEI0WEc1Y2JseDBYSFFyYldWa2FXRW9YQ0krUFdSbGMydDBiM0JjSWlsY2JseDBYSFFnSUhCaFpHUnBibWM2SURJd2NIZ2dNVEF3Y0hoY2JseHVYSFIxYkZ4dVhIUmNkRUJsZUhSbGJtUWdKVzFsYm5WY2JseDBYSFJrYVhOd2JHRjVPaUIwWVdKc1pWeHVYSFJjZEcxaGNtZHBiam9nTUNCaGRYUnZYRzVjYmx4MFhIUnNhVnh1WEhSY2RGeDBaR2x6Y0d4aGVUb2dkR0ZpYkdVdFkyVnNiRnh1WEhSY2RGeDBZbTl5WkdWeU9pQXhjSGdnYzI5c2FXUWdJME5EUTBORFExeHVYSFJjZEZ4MFltOXlaR1Z5TFhKcFoyaDBPaUJ1YjI1bFhHNWNkRngwWEhSaWIzSmtaWEl0YkdWbWRDMXpkSGxzWlRvZ1pHRnphR1ZrWEc1Y2RGeDBYSFJ0WVhKbmFXNDZJREFnTVRCd2VGeHVYSFJjZEZ4MGNHRmtaR2x1WnpvZ0xqVnlaVzFjYmx4MFhIUmNkQ1k2YkdGemRDMWphR2xzWkZ4dVhIUmNkRngwSUNCaWIzSmtaWEl0Y21sbmFIUTZJREZ3ZUNBalEwTkRJSE52Ykdsa1hHNWNkRngwWEhRbU9tWnBjbk4wTFdOb2FXeGtYRzVjZEZ4MFhIUWdJR0p2Y21SbGNpMXNaV1owTFhOMGVXeGxPaUJ6YjJ4cFpGeHVYRzVjZEdnMkxDQndMQ0IxYkZ4dVhIUmNkR1p2Ym5RdGMybDZaVG9nTVRSd2VGeHVYSFJjZEcxaGNtZHBiaTFpYjNSMGIyMDZJREZ5WlcxY2JseHVYSFJjZEN0dFpXUnBZU2hjSWo0OWRHRmliR1YwWENJc0lGd2lQajFrWlhOcmRHOXdYQ0lwWEc1Y2RGeDBYSFJtYjI1MExYTnBlbVU2SURFeWNIaGNiaUlzSWx4dVFHdGxlV1p5WVcxbGN5Qm1ZV1JsU1c1Y2JpQWdabkp2YlZ4dUlDQWdJRzl3WVdOcGRIazZJREJjYmlBZ2RHOWNiaUFnSUNCdmNHRmphWFI1T2lBeFhHNWNiaTVvWldGa1pYSmZYMnh2WjI4dFltOTRYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNSM2FHbDBaVnh1SUNCaWIzSmtaWEl0YkdWbWREb2dNWEI0SUhOdmJHbGtJQ1JpYjNKa1pYSkRiMnh2Y2x4dUlDQmliM0prWlhJdGNtbG5hSFE2SURGd2VDQnpiMnhwWkNBa1ltOXlaR1Z5UTI5c2IzSmNiaUFnYldGeVoybHVPaUF3SUdGMWRHOWNiaUFnYldGNExYZHBaSFJvT2lBeE1qQXdjSGhjYmx4dUx5OGdSbTl5SUVsRk9WeHVMbTV2TFdOemMyRnVhVzFoZEdsdmJuTWdMbWhsWVdSbGNsOWZiRzluYnkxaWIzaGNiaUFnY0dGa1pHbHVaeTEwYjNBNklEQmNibHh1TG1obFlXUmxjbDlmYkc5bmIxeHVJQ0JpWVdOclozSnZkVzVrT2lBa2QyaHBkR1ZjYmx4dVhHNHViRzluYjF4dUlDQmthWE53YkdGNU9pQmliRzlqYTF4dUlDQndZV1JrYVc1bk9pQXdjbVZ0SURBZ01ISmxiU0F5Y21WdFhHNGdJSGRwWkhSb09pQTJNREJ3ZUZ4dVhHNGdJQ3R0WldScFlTaGNJanc1TURCd2VGd2lLVnh1SUNBZ0lIZHBaSFJvT2lBME1EQndlRnh1WEc0Z0lDdHRaV1JwWVNoY0lqdzFNREJ3ZUZ3aUtWeHVJQ0FnSUhCaFpHUnBibWM2SURGeVpXMWNiaUFnSUNCM2FXUjBhRG9nTXpBd2NIaGNibHh1THk4Z1JtOXlJRWxGT1Z4dUxtNXZMV056YzJGdWFXMWhkR2x2Ym5NZ0xteHZaMjljYmlBZ2FHVnBaMmgwT2lBMk9IQjRYRzRnSUhCaFpHUnBibWM2SURBZ01YSmxiVnh1WEc1Y2JuTjJaMXh1WEc0Z0lIQmhkR2dzSUhCdmJIbG5iMjVjYmlBZ0lDQm1hV3hzT2lBa1ozSmxaVzVjYmx4dUlDQW1PbWh2ZG1WeUlIQmhkR2dzWEc0Z0lDWTZhRzkyWlhJZ2NHOXNlV2R2Ymx4dUlDQWdJRzl3WVdOcGRIazZJQzQzWEc0Z0lDQWdkSEpoYm5OcGRHbHZiam9nWm1sc2JDQXdMakp6SUdWaGMyVmNiaUFnSUNCbWFXeHNMVzl3WVdOcGRIazZJREF1TjF4dVhHNHViRzluYjE5ZmMzUnlaWFJqYUdWa1hHNGdJR1JwYzNCc1lYazZJR0pzYjJOclhHNWNiaUFnSzIxbFpHbGhLRndpUERrd01IQjRYQ0lwWEc0Z0lDQWdaR2x6Y0d4aGVUb2dibTl1WlZ4dVhHNHViRzluYjE5ZmMzUmhZMnRsWkZ4dUlDQmthWE53YkdGNU9pQnViMjVsWEc1Y2JpQWdLMjFsWkdsaEtGd2lQRGt3TUhCNFhDSXBYRzRnSUNBZ1pHbHpjR3hoZVRvZ1lteHZZMnRjYmx4dVhHNHZMeUF5TlNCd2FXVmpaWE5jYmk1c2IyZHZYMTluYkc5aVpWeHVJQ0J3WVhSb1hHNGdJQzh2VEc5bmJ5Qk1iMkZrSUVGdWFXMWhkR2x2Ymx4dUlDQXZMeUFnSUc5d1lXTnBkSGs2SURCY2JpQWdMeThnSUNCaGJtbHRZWFJwYjI0NklHWmhaR1ZKYmlCbFlYTmxMV2x1SURGY2JpQWdMeThnSUNCaGJtbHRZWFJwYjI0dFptbHNiQzF0YjJSbE9pQm1iM0ozWVhKa2MxeHVJQ0F2THlBZ0lHRnVhVzFoZEdsdmJpMWtkWEpoZEdsdmJqb2dMalZ6WEc1Y2JpQWdMeThnY0dGMGFEcHVkR2d0WTJocGJHUW9NU2xjYmlBZ0x5OGdJQ0JoYm1sdFlYUnBiMjR0WkdWc1lYazZJREF1TVhOY2JseHVJQ0F2THlCd1lYUm9PbTUwYUMxamFHbHNaQ2d5S1Z4dUlDQXZMeUFnSUdGdWFXMWhkR2x2Ymkxa1pXeGhlVG9nTUM0eE1YTmNibHh1SUNBdkx5QndZWFJvT201MGFDMWphR2xzWkNnektWeHVJQ0F2THlBZ0lHRnVhVzFoZEdsdmJpMWtaV3hoZVRvZ01DNHlNbk5jYmx4dUlDQXZMeUJ3WVhSb09tNTBhQzFqYUdsc1pDZzBLVnh1SUNBdkx5QWdJR0Z1YVcxaGRHbHZiaTFrWld4aGVUb2dNQzR4TTNOY2JseHVJQ0F2THlCd1lYUm9PbTUwYUMxamFHbHNaQ2cxS1Z4dUlDQXZMeUFnSUdGdWFXMWhkR2x2Ymkxa1pXeGhlVG9nTUM0eE5ITmNibHh1SUNBdkx5QndZWFJvT201MGFDMWphR2xzWkNnMktWeHVJQ0F2THlBZ0lHRnVhVzFoZEdsdmJpMWtaV3hoZVRvZ01DNHhOWE5jYmx4dUlDQXZMeUJ3WVhSb09tNTBhQzFqYUdsc1pDZzNLVnh1SUNBdkx5QWdJR0Z1YVcxaGRHbHZiaTFrWld4aGVUb2dNQzR4Tm5OY2JseHVJQ0F2THlCd1lYUm9PbTUwYUMxamFHbHNaQ2c0S1Z4dUlDQXZMeUFnSUdGdWFXMWhkR2x2Ymkxa1pXeGhlVG9nTUM0ek4zTmNibHh1SUNBdkx5QndZWFJvT201MGFDMWphR2xzWkNnNUtWeHVJQ0F2THlBZ0lHRnVhVzFoZEdsdmJpMWtaV3hoZVRvZ01DNHhPSE5jYmx4dUlDQXZMeUJ3WVhSb09tNTBhQzFqYUdsc1pDZ3hNQ2xjYmlBZ0x5OGdJQ0JoYm1sdFlYUnBiMjR0WkdWc1lYazZJREF1TVRselhHNWNiaUFnTHk4Z2NHRjBhRHB1ZEdndFkyaHBiR1FvTVRFcFhHNGdJQzh2SUNBZ1lXNXBiV0YwYVc5dUxXUmxiR0Y1T2lBd0xqSXdjMXh1WEc0Z0lDOHZJSEJoZEdnNmJuUm9MV05vYVd4a0tERXlLVnh1SUNBdkx5QWdJR0Z1YVcxaGRHbHZiaTFrWld4aGVUb2dNQzR5TVhOY2JseHVJQ0F2THlCd1lYUm9PbTUwYUMxamFHbHNaQ2d4TXlsY2JpQWdMeThnSUNCaGJtbHRZWFJwYjI0dFpHVnNZWGs2SURBdU1USnpYRzVjYmlBZ0x5OGdjR0YwYURwdWRHZ3RZMmhwYkdRb01UUXBYRzRnSUM4dklDQWdZVzVwYldGMGFXOXVMV1JsYkdGNU9pQXdMakl6YzF4dVhHNGdJQzh2SUhCaGRHZzZiblJvTFdOb2FXeGtLREUxS1Z4dUlDQXZMeUFnSUdGdWFXMWhkR2x2Ymkxa1pXeGhlVG9nTUM0ek5ITmNibHh1SUNBdkx5QndZWFJvT201MGFDMWphR2xzWkNneE5pbGNiaUFnTHk4Z0lDQmhibWx0WVhScGIyNHRaR1ZzWVhrNklEQXVNalZ6WEc1Y2JseHVMbTV2TFdOemMyRnVhVzFoZEdsdmJuTWdMbXh2WjI5ZlgyZHNiMkpsWEc0Z0lIQmhkR2hjYmlBZ0lDQm1hV3hzT2lBa1ozSmxaVzVjYmlBZ0lDQnZjR0ZqYVhSNU9pQXhYRzVjYmk4dklFOTBhR1Z5SUdOc1lYTnpaWE1nWm05eUlHRnVhVzFoYVhSdmJpQnRZWGxpWlZ4dUx5OGdMbXh2WjI5ZlgzUmxlSFJjYmk4dlhHNHZMeUF1Ykc5bmIxOWZZMjl0YldWeVkyVmNiaTh2SUNBZ2NHRjBhQ3dnY0c5c2VXZHZibHh1THk5Y2JpOHZYRzR2THlBdWJHOW5iMTlmZEhKMWMzUmNiaTh2SUNBZ2NHRjBhQ3dnY0c5c2VXZHZibHh1THk5Y2JpOHZYRzR2THlBdWJHOW5iMTlmZEdGbmJHbHVaVnh1THk4Z0lDQndZWFJvTENCd2IyeDVaMjl1WEc0aUxDSXZMeTBnVkdocGN5QmpiMjUwWVdsdVpYSWdhRzlzWkNCMGFHVWdiV0ZwYmlCamIyNTBaVzUwSUc5dUlHVmhZMmdnY0dGblpWeHVMeTh0SUVsMElHbHpJR1p2ZFc1a0lHOXVJR0ZzYkNCcGJuUmxjbTVoYkNCd1lXZGxjMXh1WEc0dkx5MGdRV3hzSUZ3aVRXRnBibHdpSUdOc1lYTnpaWE1nYUdGMlpTQnphR0Z5WlNCMGFHVnpaU0J5ZFd4bGMxeHVKVzFoYVc1Y2JpQWdaR2x6Y0d4aGVUb2dkR0ZpYkdWY2JpQWdjR0ZrWkdsdVp6b2dNWEpsYlNBeWNtVnRYRzVjYmk1dFlXbHVMWE4wWVc1a1lYSmtYRzRnSUVCbGVIUmxibVFnSlcxaGFXNWNiaUFnY0dGa1pHbHVaeTFpYjNSMGIyMDZJRFZ5WlcxY2JseHVJQ0FtWDE5amIyNTBaVzUwWEc1Y2JpQWdJQ0FyYldWa2FXRW9YQ0k4UFhSaFlteGxkRndpS1Z4dUlDQWdJQ0FnZEdWNGRDMWhiR2xuYmpvZ2JHVm1kRnh1WEc0Z0lDQWdKaTVqYjJ3dE55MHhNbHh1SUNBZ0lDQWdjR0ZrWkdsdVp5MTBiM0E2SURFdU5YSmxiVnh1SUNBZ0lDQWdkbVZ5ZEdsallXd3RZV3hwWjI0NklIUnZjRnh1WEc0Z0lDWmZYM1JsZUhSY2JseHVJQ0FnSUNvZ0t5QXFYRzRnSUNBZ0lDQnRZWEpuYVc0dGRHOXdPaUF4Y21WdFhHNWNiaUFnSUNCb01seHVJQ0FnSUNBZ0szTjBZVzVrWVhKa0xXaGxZV1JwYm1jb0tWeHVJQ0FnSUNBZ0szWmxjblF0Y0dGa1pHbHVaeWd4TERBcFhHNWNiaUFnSUNBdkx5QkVaV1poZFd4MElIVnViM0prWlhKbFpDQnNhWE4wY3lCcGJpQmpiMjUwWlc1MElHRnlaV0Z6WEc0Z0lDQWdkV3hjYmlBZ0lDQWdJSEJoWkdScGJtY3RiR1ZtZERvZ01uSmxiVnh1SUNBZ0lDQWdiR2x6ZEMxemRIbHNaVG9nWkdselkxeHVYRzRnSUNBZ0lDQnNhVnh1SUNBZ0lDQWdJQ0J0WVhKbmFXNHRkRzl3T2lBd0xqVnlaVzFjYmx4dUlDQWdJQzh2SUVSbFptRjFiSFFnYjNKa1pYSmxaQ0JzYVhOMGN5QnBiaUJqYjI1MFpXNTBJR0Z5WldGelhHNGdJQ0FnYjJ4Y2JpQWdJQ0FnSUhCaFpHUnBibWN0YkdWbWREb2dNbkpsYlZ4dUlDQWdJQ0FnTHk5c2FYTjBMWE4wZVd4bExYUjVjR1U2SUhWd2NHVnlMWEp2YldGdVhHNWNiaUFnSUNBdkx5QkxaV1Z3SUhOdFlXeHNJR2x0WVdkbGN5Qm1jbTl0SUdkbGRIUnBibWNnWjJsaGJuUmNiaUFnSUNCcGJXZGNiaUFnSUNBZ0lHaGxhV2RvZERvZ1lYVjBiMXh1SUNBZ0lDQWdkMmxrZEdnNklERXdNQ1ZjYmx4dUlDQWdJQ0FnTHk4Z1IybDJaU0J6YldGc2JDQnBiV0ZuWlhNZ1lTQmpiR0Z6Y3lCdlppQXVZWFYwYnlCemJ5QjBhR1Y1SUdacGRDQmpiM0p5WldOMGJIa3VYRzRnSUNBZ0lDQW1MbUYxZEc5Y2JpQWdJQ0FnSUNBZ2QybGtkR2c2SUdGMWRHOWNibHh1WEc0dkx5Qk5ZV2x1SUdOdmJuUmxiblFnWW14dlkyc2diMjRnVEdWaFpHVnljMmhwY0NCd1lXZGxYRzR1YldGcGJpMWlhVzl6WEc0Z0lHUnBjM0JzWVhrNklIUmhZbXhsWEc0Z0lIQmhaR1JwYm1jNklESnlaVzFjYmx4dVhHNHZMeUJOWVdsdUlHTnZiblJsYm5RZ1lteHZZMnNnYjI0Z1RtVjNjeUJ3WVdkbFhHNHViV0ZwYmkxdVpYZHpYRzRnSUVCbGVIUmxibVFnSlcxaGFXNWNibHh1THk5TllXbHVJR052Ym5SbGJuUWdiRzlqWVhScGIyNXpJSFJoWW14bFhHNHVZMmwwZVMxamIyeDFiVzVjYmlBZ2QybGtkR2c2TVRNMWNIaGNiaTVoWkdSeVpYTnpMV052YkhWdGJseHVJQ0IzYVdSMGFEb3pNelZ3ZUZ4dUxuQm9iMjVsTFdOdmJIVnRibHh1WEc0dWJHOWpZWFJwYjI0dGNHaHZibVZjYmlBZ1kyOXNiM0k2Skc1cFoyaDBaM0psWlc1Y2JpQWdKanBvYjNabGNseHVJQ0FnSUdOdmJHOXlPaVJuY21WbGJseHVYRzVjYmk4dklFMWhhVzRnWTI5dWRHVnVkQ0JpYkc5amF5QnZiaUJDYkc5bklGQnZjM1FnY0dGblpWeHVMbTFoYVc0dGNHOXpkRnh1SUNCQVpYaDBaVzVrSUNWdFlXbHVYRzVjYmlBZ0psOWZkR1Y0ZEZ4dVhHNGdJQ0FnSzIxbFpHbGhLRndpUEQxMFlXSnNaWFJjSWlsY2JpQWdJQ0FnSUhSbGVIUXRZV3hwWjI0NklHeGxablJjYmx4dUlDQWdJQ29nS3lBcVhHNGdJQ0FnSUNCdFlYSm5hVzR0ZEc5d09pQXhjbVZ0WEc1Y2JpQWdJQ0JvTWx4dUlDQWdJQ0FnSzNOMFlXNWtZWEprTFdobFlXUnBibWNvS1Z4dVhHNGdJQ0FnYUROY2JpQWdJQ0FnSUN0dGFXNXZjaTFvWldGa2FXNW5LQ2xjYmx4dUlDQWdJR1pwWjJOaGNIUnBiMjVjYmlBZ0lDQWdJR052Ykc5eU9pQWtaM0poY0docGRHVmNiaUFnSUNBZ0lHWnZiblF0YzJsNlpUb2dMamMxY21WdFhHNGdJQ0FnSUNCdFlYSm5hVzR0ZEc5d09pQXdYRzVjYmlBZ0lDQmliRzlqYTNGMWIzUmxYRzRnSUNBZ0lDQXJZbXh2WTJ0eGRXOTBaU2dwWEc1Y2JseHVMbUp5WldGa1kzSjFiV0pjYmlBZ2NHRmtaR2x1WnkxaWIzUjBiMjA2SURFdU5YSmxiVnh1SUNCbWIyNTBMWE5wZW1VNk1UUndlRnh1WEc0Z0lHRmNiaUFnSUNCamIyeHZjam9rWjNKbFpXNWNiaUFnSUNBbU9taHZkbVZ5WEc0Z0lDQWdJQ0JqYjJ4dmNqb2tibWxuYUhSbmNtVmxibHh1SUNCemNHRnVYRzRnSUNBZ1kyOXNiM0k2SkhOMGIyNWxYRzRpTENJdVptOXliUzF6ZEdGdVpHRnlaRnh1SUNCdFlYSm5hVzR0ZEc5d09pQXljbVZ0WEc1Y2JpQWdhVzV3ZFhRc1hHNGdJR2x1Y0hWMFczUjVjR1U5WENKbGJXRnBiRndpWFN4Y2JpQWdhVzV3ZFhSYmRIbHdaVDFjSW01MWJXSmxjbHdpWFN4Y2JpQWdhVzV3ZFhSYmRIbHdaVDFjSW5CaGMzTjNiM0prWENKZExGeHVJQ0JwYm5CMWRGdDBlWEJsUFZ3aWMyVmhjbU5vWENKZExGeHVJQ0JwYm5CMWRGdDBlWEJsUFZ3aWRHVnNYQ0pkTEZ4dUlDQnBibkIxZEZ0MGVYQmxQVndpZEdWNGRGd2lYU3hjYmlBZ2FXNXdkWFJiZEhsd1pUMWNJblZ5YkZ3aVhTeGNiaUFnYVc1d2RYUmJkSGx3WlQxY0ltTnZiRzl5WENKZExGeHVJQ0JwYm5CMWRGdDBlWEJsUFZ3aVpHRjBaVndpWFN4Y2JpQWdhVzV3ZFhSYmRIbHdaVDFjSW01aGJXVmNJbDBzWEc0Z0lHbHVjSFYwVzNSNWNHVTlYQ0prWVhSbGRHbHRaVndpWFN4Y2JpQWdhVzV3ZFhSYmRIbHdaVDFjSW1SaGRHVjBhVzFsTFd4dlkyRnNYQ0pkTEZ4dUlDQnBibkIxZEZ0MGVYQmxQVndpYlc5dWRHaGNJbDBzWEc0Z0lHbHVjSFYwVzNSNWNHVTlYQ0owYVcxbFhDSmRMRnh1SUNCcGJuQjFkRnQwZVhCbFBWd2lkMlZsYTF3aVhTeGNiaUFnZEdWNGRHRnlaV0ZjYmlBZ1hIUmpiMnh2Y2pvZ0pITnBkR1V0ZEdWNGRDMWpiMnh2Y2x4dUlDQmNkR0p2Y21SbGNqb2dNWEI0SUhOdmJHbGtJQ1JpYjNKa1pYSkRiMnh2Y2x4dUlDQWdJR0p2ZUMxemFYcHBibWM2SUdOdmJuUmxiblF0WW05NFhHNGdJRngwWW05eVpHVnlMWEpoWkdsMWN6b2dNRnh1SUNBZ0lHWnZiblF0YzJsNlpUb2dNWEpsYlZ4dUlDQmNkSEJoWkdScGJtYzZJREZ5WlcxY2JpQWdYSFJrYVhOd2JHRjVPaUJpYkc5amExeHVJQ0JjZEhkcFpIUm9PaUF4TURBbFhHNWNibHh1SUNCc1lXSmxiRnh1SUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yWEc1Y2JpQWdhVzV3ZFhSYmRIbHdaVDFjSW1KMWRIUnZibHdpWFN4Y2JpQWdhVzV3ZFhSYmRIbHdaVDFjSW5KbGMyVjBYQ0pkTEZ4dUlDQnBibkIxZEZ0MGVYQmxQVndpYzNWaWJXbDBYQ0pkWEc0Z0lDQWdMeThnWVc1NUlHUmxabUYxYkhRZ1luVjBkRzl1SUhOMGVXeGxjeUIwYUdGMElHNWxaV1FnZEc4Z1ltVWdaR2xtWm1WeVpXNTBJRzl1SUdadmNtMXpJR2R2SUdobGNtVmNiaUFnSUNCa2FYTndiR0Y1T2lCaWJHOWphMXh1WEc1Y2JpQWdKbDlmWTJobFkydGliM2hjYmlBZ0lDQmthWE53YkdGNU9pQnBibXhwYm1VdFlteHZZMnRjYmlBZ0lDQm1iRzloZERvZ2JHVm1kQ0FoYVcxd2IzSjBZVzUwWEc0Z0lDQWdkMmxrZEdnNklHRjFkRzhnSVdsdGNHOXlkR0Z1ZEZ4dVhHNGdJQ1pmWDJOb1pXTnJZbTk0SUNzZ2JHRmlaV3hjYmlBZ0lDQmthWE53YkdGNU9pQnBibXhwYm1VdFlteHZZMnRjYmlBZ0lDQm1iRzloZERvZ2JHVm1kQ0FoYVcxd2IzSjBZVzUwWEc0Z0lDQWdiV0Z5WjJsdU9pQXhNSEI0SURFd2NIZ2dNakJ3ZUNBeE1IQjRJQ0ZwYlhCdmNuUmhiblJjYmx4dUlDQXVjMlZzWldOMFltOTRYRzRnSUNBZ1ltRmphMmR5YjNWdVpEb2dKSGRvYVhSbFhHNGdJQ0FnWW05eVpHVnlMWEpoWkdsMWN6b2dNRnh1SUNBZ0lHTjFjbk52Y2pvZ2NHOXBiblJsY2x4dUlDQWdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVnh1SUNBZ0lHaGxhV2RvZERvZ05EaHdlRnh1WEc0Z0lDQWdKam82WVdaMFpYSmNiaUFnSUNBZ0lHTnZiRzl5T2lBalkyTmpYRzRnSUNBZ0lDQmpiMjUwWlc1ME9pQW40cGErSjF4dUlDQWdJQ0FnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsWEc0Z0lDQWdJQ0IwYjNBNklERnlaVzFjYmlBZ0lDQWdJSEpwWjJoME9pQXVOWEpsYlZ4dUlDQWdJQ0FnZDJsa2RHZzZJREZ5WlcxY2JpQWdJQ0FnSUdobGFXZG9kRG9nTVhKbGJWeHVYRzVjYmlBZ2MyVnNaV04wWEc0Z0lDQWdZbUZqYTJkeWIzVnVaRG9nSkhkb2FYUmxYRzRnSUNBZ1ltOTRMWE5vWVdSdmR6b2dibTl1WlZ4dUlDQWdJR0p2Y21SbGNpMXlZV1JwZFhNNklEQmNiaUFnSUNCaWIzSmtaWEk2SURGd2VDQnpiMnhwWkNBa1ltOXlaR1Z5UTI5c2IzSmNiaUFnSUNCamIyeHZjam9nSkhOMGIyNWxYRzRnSUNBZ1kzVnljMjl5T2lCd2IybHVkR1Z5WEc0Z0lDQWdaR2x6Y0d4aGVUb2dZbXh2WTJ0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SURGeVpXMWNiaUFnSUNCb1pXbG5hSFE2SURZd2NIaGNiaUFnSUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1WY2JseHVJQ0FnSUhCaFpHUnBibWN0YkdWbWREb2dNWEpsYlZ4dUlDQWdJSGRwWkhSb09pQXhNREFsWEc0Z0lDQWdMWGRsWW10cGRDMWhjSEJsWVhKaGJtTmxPbTV2Ym1WY2JpQWdJQ0F0Ylc5NkxXRndjR1ZoY21GdVkyVTZJRzV2Ym1WY2JpQWdJQ0JoY0hCbFlYSmhibU5sT2lCdWIyNWxYRzVjYmx4dUxtTnZiblJoWTNRdGRYTmZYMkoxZEhSdmJseHVJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFrYzJ4aGRHVmNiaUFnYldGNExYZHBaSFJvT2pFNE0zQjRYRzRnSUdOc1pXRnlPbUp2ZEdoY2JseHVYRzR2THlCSlJUa2diM1psY25KcFpHVmNiaTh2SUZWemFXNW5JRzF2WkdWeWJtbDZjaUJtYjNJZ1ptVmhkSFZ5WlNCa1pYUmxZM1JwYjI1Y2JpNXVieTFqYzNObmNtRmthV1Z1ZEhNZ0xuTmxiR1ZqZEdKdmVEbzZZV1owWlhKY2JpQWdlaTFwYm1SbGVEb2dMVE5jYmlKZExDSnpiM1Z5WTJWU2IyOTBJam9pTDNOdmRYSmpaUzhpZlE9PSAqLyIsIi8vIFZhcnNcbiRiYXNlLWZvbnQtc2l6ZTogMTZweFxuJGJhc2UtbGluZS1oZWlnaHQ6IDEuNVxuXG4vLyBUeXBlZmFjZXNcbiRzYW5zOiBOZXdzIEN5Y2xlLCBzYW5zLXNlcmlmXG4kc2VyaWY6IFBsYXlmYWlyIERpc3BsYXksIHNlcmlmXG5cbi8vIEZvbnQgd2VpZ2h0c1xuJHhsaWdodDogMjAwXG4kbGlnaHQ6IDMwMFxuJG5vcm1hbDogNDAwXG4kc2VtaWJvbGQ6IDYwMFxuJGJvbGQ6IDcwMFxuXG4vLyBMaW5lIGhlaWdodCBmdW5jdGlvblxuQGZ1bmN0aW9uIGxpbmUtaGVpZ2h0KClcbiAgQHJldHVybiAkYmFzZS1mb250LXNpemUgKiAkYmFzZS1saW5lLWhlaWdodFxuXG4vLyBWYXIgbXVzdCBiZSBzcGVjaWZpZWQgYWZ0ZXIgcmV0dXJuaW5nIHRoZSBsaW5lLWhlaWdodCBmdW5jdGlvblxuJGNhbC1saW5lLWhlaWdodDogbGluZS1oZWlnaHQoKVxuXG4vLyBNaXhpbnNcbj12ZXJ0LW1hcmdpbigkdG9wOiAxLCAkYm90dG9tOiAxKVxuICBtYXJnaW4tdG9wOiAkY2FsLWxpbmUtaGVpZ2h0ICogJHRvcFxuICBtYXJnaW4tYm90dG9tOiAkY2FsLWxpbmUtaGVpZ2h0ICogJGJvdHRvbVxuXG49dmVydC1wYWRkaW5nKCR0b3A6IDEsICRib3R0b206IDEpXG4gIHBhZGRpbmctdG9wOiAkY2FsLWxpbmUtaGVpZ2h0ICogJHRvcFxuICBwYWRkaW5nLWJvdHRvbTogJGNhbC1saW5lLWhlaWdodCAqICRib3R0b21cblxuXG5odG1sXG4gIGZvbnQtc2l6ZTogJGJhc2UtZm9udC1zaXplXG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGVcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWRcblxuYm9keVxuICBjb2xvcjogJGNoYXJjb2FsXG4gIGxpbmUtaGVpZ2h0OiAxLjVcbiAgZm9udC1mYW1pbHk6ICRzYW5zXG4gIC8vYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRyYW5zcGFyZW50LCB0cmFuc3BhcmVudCBsaW5lLWhlaWdodCgpIC0gMXB4LCAkZ3JlZW4gMXB4ICwgdHJhbnNwYXJlbnQpXG4gIGJhY2tncm91bmQtc2l6ZTogYXV0byBsaW5lLWhlaWdodCgpXG4gIG1hcmdpbjogMFxuXG4vL1tjbGFzcyo9J19faGVhZGxpbmUnXVxuXG5cbi8vIFVzZWQgaW4gYXJ0aWNsZSBoZWFkZXJzIGluIHRoZSAuTWFpbiBjb2x1bW5zXG5bY2xhc3MqPSdfX2hlYWRpbmcnXVxuICBjb2xvcjogJGdyZWVuXG4gIGZvbnQtZmFtaWx5OiAkc2VyaWZcbiAgZm9udC1zaXplOiAyLjVyZW1cbiAgZm9udC13ZWlnaHQ6ICRub3JtYWxcbiAgbGluZS1oZWlnaHQ6IDFcbiAgbWFyZ2luLWJvdHRvbTogMnJlbVxuXG49c3RhbmRhcmQtaGVhZGluZygpXG4gIGNvbG9yOiAkZ3JlZW5cbiAgZm9udC1mYW1pbHk6ICRzZXJpZlxuICBmb250LXNpemU6IDJyZW1cbiAgZm9udC13ZWlnaHQ6ICRub3JtYWxcbiAgbGluZS1oZWlnaHQ6IDFcblxuXG4vLyBGb3VuZCBpbiB0aGUgTWFpbiBCbG9nIFBvc3RzXG49bWlub3ItaGVhZGluZygpXG4gIGNvbG9yOiAkbmlnaHRncmVlblxuICBmb250LWZhbWlseTogJHNlcmlmXG4gIGZvbnQtc2l6ZTogMS4yNXJlbVxuICBmb250LXdlaWdodDogJGJvbGRcbiAgbGluZS1oZWlnaHQ6IDFcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZVxuICArdmVydC1tYXJnaW4oMS41LDApXG5cblxuLy8gVXNlZCBpbiBhcnRpY2xlIGhlYWRlcnMgaW4gdGhlIC5NYWluIGNvbHVtbnNcbj1zbWFsbC1oZWFkaW5nKClcbiAgY29sb3I6ICRncmVlblxuICBmb250LWZhbWlseTogJHNlcmlmXG4gIGZvbnQtc2l6ZTogMS4zNzVyZW1cbiAgZm9udC13ZWlnaHQ6ICRub3JtYWxcbiAgbGluZS1oZWlnaHQ6IDFcblxuXG4vLyBGb3VuZCBpbiB0aGUgTWFpbiBCbG9nIFBvc3RzXG49YmxvY2txdW90ZSgpXG4gIGNvbG9yOiAkZ3JlZW5cbiAgZm9udC1mYW1pbHk6ICRzZXJpZlxuICBmb250LXNpemU6IDEuNXJlbVxuICBmb250LXN0eWxlOiBpdGFsaWNcbiAgZm9udC13ZWlnaHQ6ICRib2xkXG4gICt2ZXJ0LW1hcmdpbigxLjUsMS41KVxuXG5cbi8vaW5wdXRbdHlwZT1cInN1Ym1pdFwiXVxuXG5bY2xhc3MqPV9fYnV0dG9uXSxcbmlucHV0W3R5cGU9XCJidXR0b25cIl0sXG5pbnB1dFt0eXBlPVwicmVzZXRcIl1cbiAgYm9yZGVyOiAxcHggc29saWQgJGdyZWVuXG4gIGN1cnNvcjogcG9pbnRlclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgZm9udC1mYW1pbHk6ICRzZXJpZlxuICBmb250LXNpemU6IDEuMnJlbVxuICBmb250LXN0eWxlOiBpdGFsaWNcbiAgdGV4dC1hbGlnbjogY2VudGVyXG4gIHBhZGRpbmc6IC43NXJlbSAzcmVtXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZVxuICAvKkl0ZW1zIGZvciB0cmFuc2l0aW9uXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50XG4gIGNvbG9yOiAkZ3JlZW5cbiAgLypUcmFuc2l0aW9uIHNldHRpbmdzXG4gIHRyYW5zaXRpb246IGFsbCAuMnMgZWFzZVxuXG4gICY6aG92ZXJcbiAgICAvKlRoZXNlIHdpbGwgdHJhbnNpdGlvbiBvbiBob3ZlclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRncmVlblxuICAgIGNvbG9yOiAkd2hpdGVcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmVcblxuXG4vLyBpbiBwcm9ncmVzc1xuXG4vLyBNaXhpbnNcbj1idXR0b24oJGJhY2tncm91bmQsICRjb2xvciwgJGJvcmRlci1jb2xvcilcbiAgYm9yZGVyOiAxcHggc29saWQgJGJvcmRlci1jb2xvclxuICBmb250LWZhbWlseTogJHNlcmlmXG4gIGZvbnQtc2l6ZTogMS4ycmVtXG4gIGZvbnQtc3R5bGU6IGl0YWxpY1xuICBwYWRkaW5nOiAuNXJlbSAxcmVtXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZVxuICAvKkl0ZW1zIGZvciB0cmFuc2l0aW9uXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50XG4gIGNvbG9yOiAkY29sb3JcbiAgLypUcmFuc2l0aW9uIHNldHRpbmdzXG4gIHRyYW5zaXRpb246IGFsbCAuMnMgZWFzZVxuICAmOmhvdmVyXG4gICAgLypUaGVzZSB3aWxsIHRyYW5zaXRpb24gb24gaG92ZXJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JlZW5cbiAgICBjb2xvcjogJGNvbG9yXG5cblxuLmxvYWRlcl9fYnV0dG9uLmRpc2FibGVkXG4gIGJhY2tncm91bmQtY29sb3I6ICRjbG91ZFxuICBjb2xvcjogJGdyZWVuXG4gIGN1cnNvcjogZGVmYXVsdFxuICBvcGFjaXR5OiAuM1xuXG5cbnN1cFxuICArbWVkaWEoXCI8PXBob25lXCIpXG4gICAgdG9wOiAtLjI1ZW1cbiAgICBcbiIsIi8vIGh0dHA6Ly9jc3Ntb2pvLmNvbS9sYXRlc3RfbmV3X2NsZWFyZml4X3NvX2Zhci9cbi5jbGVhcmZpeDphZnRlclxuICBjb250ZW50OiBcIlwiXG4gIGRpc3BsYXk6IHRhYmxlXG4gIGNsZWFyOiBib3RoXG4iLCIuY29udGFpbmVyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZcbiAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAkYm9yZGVyQ29sb3JcbiAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgJGJvcmRlckNvbG9yXG4gIG1hcmdpbjogMCBhdXRvXG4gIG1heC13aWR0aDogMTIwMHB4XG5cblxuW2NsYXNzKj0nY29sLSddXG4gIGRpc3BsYXk6IHRhYmxlLWNlbGxcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZVxuXG4gICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrXG4gICAgdGV4dC1hbGlnbjogY2VudGVyXG5cbi8vMiBjb2x1bW5zIHdpZGVcbi8vIFRoaXMgaXMgdXNlZCBpbiB0aGUgZm9vdGVyIGZvciBuYXJyb3dlciBjb2x1bW5zIG9mIGxpbmtzXG4uY29sLTItMTJcbiAgd2lkdGg6IDIvMTIgKiAxMDAlXG5cbiAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICB3aWR0aDogMTAwJVxuXG4vLzMgY29sdW1ucyB3aWRlXG4vLyBUaGlzIGlzIHVzZWQgaW4gdGhlIGZvb3RlciBmb3IgZmF0dGVyIGNvbHVtbnMgb2YgbG9uZ2VyLXRpdGxlZCBsaW5rc1xuLmNvbC0zLTEyXG4gIHdpZHRoOiAzLzEyICogMTAwJVxuXG4gICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgd2lkdGg6IDEwMCVcblxuLy8gNCBjb2x1bW5zIHdpZGUuXG4vLyBUaGlzIGlzIHVzZWQgaW4gdGhlIExlYWRlcnNoaXAgcGFnZS5cbi5jb2wtNC0xMlxuICB3aWR0aDogNC8xMiAqIDEwMCVcblxuICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgIHdpZHRoOiAxMDAlXG5cblxuLy8gNSBjb2x1bW5zIHdpZGUuXG4vLyBUaGlzIGlzIHVzZWQgaW4gbW9zdCBvZiB0aGUgYmFubmVycy5cbi8vIEl0IGlzIGFsc28gdXNlZCBpbiB0aGUgTWFpbiBtb2R1bGUgYXJlYSB0aGF0IGluY2x1ZGVzIHRoZSBzaWRlYmFyLlxuLmNvbC01LTEyXG4gIHdpZHRoOiA1LzEyICogMTAwJVxuXG4gICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgd2lkdGg6IDEwMCVcblxuXG4vLyA2IGNvbHVtbnMgd2lkZS5cbi8vIFRoaXMgd2lsbCBzcGFuIGhhbGYgdGhlIGF2YWlsYWJsZSB3aWR0aFxuLy8gVGhlIENhcmQgTW9kdWxlIG9uIHRoZSBob21lcGFnZSB1c2VzIHRoaXNcbi5jb2wtNi0xMlxuICB3aWR0aDogNi8xMiAqIDEwMCVcblxuICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgIHdpZHRoOiAxMDAlXG5cblxuLy8gNyBjb2x1bW5zIHdpZGUuXG4vLyBUaGlzIGlzIHVzZWQgaW4gbW9zdCBvZiB0aGUgYmFubmVycy5cbi8vIEl0IGlzIGFsc28gdXNlZCBpbiB0aGUgTWFpbiBtb2R1bGUgYXJlYSB0aGF0IGluY2x1ZGVzIHRoZSBzaWRlYmFyLlxuLy8gW2NsYXNzKj0nLS1jb2wtNy0xMiddXG4uY29sLTctMTJcbiAgd2lkdGg6IDcvMTIgKiAxMDAlXG5cbiAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICB3aWR0aDogMTAwJVxuXG5cbi8vIDggY29sdW1ucyB3aWRlLlxuLy8gVGhpcyBpcyB1c2VkIGluIHRoZSBMZWFkZXJzaGlwIHBhZ2UuXG4uY29sLTgtMTJcbiAgd2lkdGg6IDgvMTIgKiAxMDAlXG5cbiAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICB3aWR0aDogMTAwJVxuXG5cbi5jb2wtOS0xMlxuICB3aWR0aDogOS8xMiAqIDEwMCVcblxuICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgIHdpZHRoOiAxMDAlXG5cblxuLmNvbC0xMC0xMlxuICB3aWR0aDogMTAvMTIgKiAxMDAlXG5cbiAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICB3aWR0aDogMTAwJVxuXG4uY29sLTExLTEyXG4gIHdpZHRoOiAxMS8xMiAqIDEwMCVcblxuICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgIHdpZHRoOiAxMDAlXG4iLCIvL1xuXHQgXyAgICAgICAgICAgIF8gICAgICAgICAgIF8gICAgICAgICAgICAgICAgICAgICAgICAgICBfIF9cblx0KF8pICAgICAgICAgIHwgfCAgICAgICAgIHwgfCAgICAgICAgICAgICAgICAgICAgICAgICB8IChfKVxuXHQgXyBfIF9fICAgX19ffCB8XyAgIF8gIF9ffCB8IF9fXyAgIF8gX18gX19fICAgX19fICBfX3wgfF8gIF9fIF9cblx0fCB8ICdfIFxcIC8gX198IHwgfCB8IHwvIF9gIHwvIF8gXFwgfCAnXyBgIF8gXFwgLyBfIFxcLyBfYCB8IHwvIF9gIHxcblx0fCB8IHwgfCB8IChfX3wgfCB8X3wgfCAoX3wgfCAgX18vIHwgfCB8IHwgfCB8ICBfXy8gKF98IHwgfCAoX3wgfFxuXHR8X3xffCB8X3xcXF9fX3xffFxcX18sX3xcXF9fLF98XFxfX198IHxffCB8X3wgfF98XFxfX198XFxfXyxffF98XFxfXyxffFxuXG5cdFNpbXBsZSwgZWxlZ2FudCBhbmQgbWFpbnRhaW5hYmxlIG1lZGlhIHF1ZXJpZXMgaW4gU2Fzc1xuXG5cdGh0dHA6Ly9pbmNsdWRlLW1lZGlhLmNvbVxuXG4gIEF1dGhvcjogRWR1YXJkbyBCb3VjYXMgPG1haWxAZWR1YXJkb2JvdWNhcy5jb20+XG5cblxuICBDcmVhdGVzIGEgbGlzdCBvZiBnbG9iYWwgYnJlYWtwb2ludHNcblxuICBAYXV0aG9yIEVkdWFyZG8gQm91Y2FzXG5cbiAgQGV4YW1wbGUgc2NzcyAtIENyZWF0ZXMgYSBzaW5nbGUgYnJlYWtwb2ludCB3aXRoIHRoZSBsYWJlbCBgcGhvbmVgXG4gICRicmVha3BvaW50czogKCdwaG9uZSc6IDMyMHB4KTtcblxuJGJyZWFrcG9pbnRzOiAoXCJwaG9uZVwiOiA0ODBweCwgXCJ0YWJsZXRcIjogNzY4cHgsIFwiZGVza3RvcFwiOiAxMDIzcHgpICFkZWZhdWx0XG5cbi8vXG4gIENyZWF0ZXMgYSBsaXN0IG9mIHN0YXRpYyBleHByZXNzaW9ucyBvciBtZWRpYSB0eXBlc1xuXG4gIEBhdXRob3IgRWR1YXJkbyBCb3VjYXNcblxuICBAZXhhbXBsZSBzY3NzIC0gQ3JlYXRlcyBhIHNpbmdsZSBtZWRpYSB0eXBlIChzY3JlZW4pXG4gICAkbWVkaWEtZXhwcmVzc2lvbnM6ICgnc2NyZWVuJzogJ3NjcmVlbicpO1xuXG4gIEBleGFtcGxlIHNjc3MgLSBDcmVhdGVzIGEgc3RhdGljIGV4cHJlc3Npb24gd2l0aCBsb2dpY2FsIGRpc2p1bmN0aW9uIChPUiBvcGVyYXRvcilcbiAgICRtZWRpYS1leHByZXNzaW9uczogKFxuICBcdFx0J3JldGluYTJ4JzogKFxuICBcdFx0XHQnKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMiknLFxuICBcdFx0XHQnKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpJ1xuICBcdFx0KVxuICBcdCk7XG5cbiRtZWRpYS1leHByZXNzaW9uczogKFwic2NyZWVuXCI6IFwic2NyZWVuXCIsIFwicHJpbnRcIjogXCJwcmludFwiLCBcImhhbmRoZWxkXCI6IFwiaGFuZGhlbGRcIiwgXCJyZXRpbmEyeFwiOiAoXCIoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKVwiLCBcIihtaW4tcmVzb2x1dGlvbjogMTkyZHBpKVwiKSwgXCJyZXRpbmEzeFwiOiAoXCIoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAzKVwiLCBcIihtaW4tcmVzb2x1dGlvbjogMzUwZHBpKVwiKSkgIWRlZmF1bHRcblxuLy9cbiAgRGVmaW5lcyBhIG51bWJlciB0byBiZSBhZGRlZCBvciBzdWJ0cmFjdGVkIGZyb20gZWFjaCB1bml0IHdoZW4gZGVjbGFyaW5nIGJyZWFrcG9pbnRzIHdpdGggZXhjbHVzaXZlIGludGVydmFsc1xuXG4gIEBhdXRob3IgRWR1YXJkbyBCb3VjYXNcblxuICBAZXhhbXBsZSBzY3NzIC0gSW50ZXJ2YWwgZm9yIHBpeGVscyBpcyBkZWZpbmVkIGFzIGAxYCBieSBkZWZhdWx0XG4gICBAaW5jbHVkZSBtZWRpYShcIj4xMjhweFwiKSB7fVxuXG4gIEdlbmVyYXRlczpcbiAgQG1lZGlhIChtaW4td2lkdGg6IDEyOXB4KSB7fVxuXG4gIEBleGFtcGxlIHNjc3MgLSBJbnRlcnZhbCBmb3IgZW1zIGlzIGRlZmluZWQgYXMgYDAuMDFgIGJ5IGRlZmF1bHRcbiAgIEBpbmNsdWRlIG1lZGlhKFwiPjIwZW1cIikge31cblxuICBHZW5lcmF0ZXM6XG4gIEBtZWRpYSAobWluLXdpZHRoOiAyMC4wMWVtKSB7fVxuXG4gIEBleGFtcGxlIHNjc3MgLSBJbnRlcnZhbCBmb3IgcmVtcyBpcyBkZWZpbmVkIGFzIGAwLjFgIGJ5IGRlZmF1bHQsIHRvIGJlIHVzZWQgd2l0aCBgZm9udC1zaXplOiA2Mi41JTtgXG4gICBAaW5jbHVkZSBtZWRpYShcIj4yLjByZW1cIikge31cblxuICBHZW5lcmF0ZXM6XG4gIEBtZWRpYSAobWluLXdpZHRoOiAyLjFyZW0pIHt9XG5cbiR1bml0LWludGVydmFsczogKFwicHhcIjogMSwgXCJlbVwiOiAwLjAxLCBcInJlbVwiOiAwLjEpICFkZWZhdWx0XG5cbi8vXG4gIEdlbmVyYXRlcyBhIG1lZGlhIHF1ZXJ5IGJhc2VkIG9uIGEgbGlzdCBvZiBjb25kaXRpb25zXG5cbiAgQGF1dGhvciBFZHVhcmRvIEJvdWNhc1xuXG4gIEBwYXJhbSB7TGlzdH0gICAkY29uZGl0aW9ucyAgLSBNZWRpYSBxdWVyeSBjb25kaXRpb25zXG5cbiAgQGV4YW1wbGUgc2NzcyAtIFdpdGggYSBzaW5nbGUgc2V0IGJyZWFrcG9pbnRcbiAgIEBpbmNsdWRlIG1lZGlhKFwiPnBob25lXCIpIHsgfVxuXG4gIEBleGFtcGxlIHNjc3MgLSBXaXRoIHR3byBzZXQgYnJlYWtwb2ludHNcbiAgIEBpbmNsdWRlIG1lZGlhKFwiPnBob25lXCIsIFwiPD10YWJsZXRcIikgeyB9XG5cbiAgQGV4YW1wbGUgc2NzcyAtIFdpdGggY3VzdG9tIHZhbHVlc1xuICAgQGluY2x1ZGUgbWVkaWEoXCI+PTM1OHB4XCIsIFwiPDg1MHB4XCIpIHsgfVxuXG4gIEBleGFtcGxlIHNjc3MgLSBXaXRoIHNldCBicmVha3BvaW50cyB3aXRoIGN1c3RvbSB2YWx1ZXNcbiAgIEBpbmNsdWRlIG1lZGlhKFwiPmRlc2t0b3BcIiwgXCI8PTEzNTBweFwiKSB7IH1cblxuICBAZXhhbXBsZSBzY3NzIC0gV2l0aCBhIHN0YXRpYyBleHByZXNzaW9uXG4gICBAaW5jbHVkZSBtZWRpYShcInJldGluYTJ4XCIpIHsgfVxuXG4gIEBleGFtcGxlIHNjc3MgLSBNaXhpbmcgZXZlcnl0aGluZ1xuICAgQGluY2x1ZGUgbWVkaWEoXCI+PTM1MHB4XCIsIFwiPHRhYmxldFwiLCBcInJldGluYTN4XCIpIHsgfVxuXG5cbj1tZWRpYSgkY29uZGl0aW9ucy4uLilcbiAgQGZvciAkaSBmcm9tIDEgdGhyb3VnaCBsZW5ndGgoJGNvbmRpdGlvbnMpXG4gICAgJGNvbmRpdGlvbnM6IHNldC1udGgoJGNvbmRpdGlvbnMsICRpLCBwYXJzZS1leHByZXNzaW9uKG50aCgkY29uZGl0aW9ucywgJGkpKSlcbiAgJGJyYW5jaGVzOiBnZXQtcXVlcnktYnJhbmNoZXMoJGNvbmRpdGlvbnMpXG4gICRxdWVyeTogXCJcIlxuICBAZWFjaCAkYnJhbmNoIGluICRicmFuY2hlc1xuICAgIEBpZiBzdHItbGVuZ3RoKCRxdWVyeSkgIT0gMFxuICAgICAgJHF1ZXJ5OiAkcXVlcnkgKyBcIiwgXCJcbiAgICAkcXVlcnk6ICRxdWVyeSArICRicmFuY2hcbiAgQG1lZGlhICN7JHF1ZXJ5fVxuICAgIEBjb250ZW50XG5cbi8vXG4gIFJlYWRzIGEgbGlzdCBvZiBtZWRpYSBxdWVyeSBleHByZXNzaW9ucyBhbmQgc2VwYXJhdGVzIGxvZ2ljYWwgZGlzanVuY3Rpb25zIGludG8gZGlmZmVyZW50IGJyYW5jaGVzXG5cbiAgQGF1dGhvciBFZHVhcmRvIEJvdWNhc1xuICBAcGFyYW0ge0xpc3R9ICAgJGV4cHJlc3Npb25zICAtIGxpc3Qgb2YgZXhwcmVzc2lvbnNcbiAgQHRocm93cyBgJGV4cHJlc3Npb25gIGlzIG5vdCBhIHZhbGlkIGV4cHJlc3Npb25cblxuICBAcmV0dXJuIHtMaXN0IHwgTnVsbH1cblxuXG5AZnVuY3Rpb24gZ2V0LXF1ZXJ5LWJyYW5jaGVzKCRleHByZXNzaW9ucylcbiAgJHJlc3VsdDogXCJcIlxuICAkaGFzLWdyb3VwczogZmFsc2VcbiAgLy8gR2V0dGluZyBpbml0aWFsIHNuYXBzaG90IGFuZCBsb29raW5nIGZvciBncm91cHNcbiAgQGVhY2ggJGV4cHJlc3Npb24gaW4gJGV4cHJlc3Npb25zXG4gICAgQGlmIHN0ci1sZW5ndGgoJHJlc3VsdCkgIT0gMFxuICAgICAgJHJlc3VsdDogJHJlc3VsdCArIFwiIGFuZCBcIlxuICAgIEBpZiB0eXBlLW9mKCRleHByZXNzaW9uKSA9PSBcInN0cmluZ1wiXG4gICAgICAkcmVzdWx0OiAkcmVzdWx0ICsgJGV4cHJlc3Npb25cbiAgICBAZWxzZSBpZiB0eXBlLW9mKCRleHByZXNzaW9uKSA9PSBcImxpc3RcIlxuICAgICAgJHJlc3VsdDogJHJlc3VsdCArIG50aCgkZXhwcmVzc2lvbiwgMSlcbiAgICAgICRoYXMtZ3JvdXBzOiB0cnVlXG4gICAgQGVsc2VcbiAgICAgIEB3YXJuIFwiI3skZXhwcmVzc2lvbn0gaXMgbm90IGEgdmFsaWQgZXhwcmVzc2lvbi5cIlxuICAvLyBJZiB3ZSBoYXZlIGdyb3Vwcywgd2UgaGF2ZSB0byBjcmVhdGUgYWxsIHBvc3NpYmxlIGNvbWJpbmF0aW9uc1xuICBAaWYgJGhhcy1ncm91cHNcbiAgICBAZWFjaCAkZXhwcmVzc2lvbiBpbiAkZXhwcmVzc2lvbnNcbiAgICAgIEBpZiB0eXBlLW9mKCRleHByZXNzaW9uKSA9PSBcImxpc3RcIlxuICAgICAgICAkZmlyc3Q6IG50aCgkZXhwcmVzc2lvbiwgMSlcbiAgICAgICAgQGVhY2ggJG1lbWJlciBpbiAkZXhwcmVzc2lvblxuICAgICAgICAgIEBpZiAkbWVtYmVyICE9ICRmaXJzdFxuICAgICAgICAgICAgQGVhY2ggJHBhcnRpYWwgaW4gJHJlc3VsdFxuICAgICAgICAgICAgICAkcmVzdWx0OiBqb2luKCRyZXN1bHQsIHN0ci1yZXBsYWNlLWZpcnN0KCRmaXJzdCwgJG1lbWJlciwgJHBhcnRpYWwpKVxuICBAcmV0dXJuICRyZXN1bHRcblxuLy9cbiAgUGFyc2VzIGEgc3RyaW5nIHRvIGZvcm0gYSBtZWRpYSBxdWVyeSBleHByZXNzaW9uXG5cbiAgQGF1dGhvciBFZHVhcmRvIEJvdWNhc1xuXG4gIEBwYXJhbSB7U3RyaW5nfSAgICRleHByZXNzaW9uICAtIGV4cHJlc3Npb24gKGluIHN0cmluZylcbiAgQHRocm93cyBFeHByZXNzaW9uIHdpdGggdHlwZSBgdHlwZS1vZigkZXhwcmVzc2lvbilgIGRldGVjdGVkLCBzdHJpbmcgZXhwZWN0ZWRcbiAgQHRocm93cyBgJGV4cHJlc3Npb25gIGlzIG1pc3NpbmcgYW4gb3BlcmF0b3JcbiAgQHRocm93cyBVbmtub3duIHVuaXQ6IGAkdW5pdGBcblxuICBAcmV0dXJuIHtTdHJpbmcgfCBOdWxsfVxuXG5cbkBmdW5jdGlvbiBwYXJzZS1leHByZXNzaW9uKCRleHByZXNzaW9uKVxuICAkb3BlcmF0b3I6IFwiXCJcbiAgJHZhbHVlOiBcIlwiXG4gICRlbGVtZW50OiBcIlwiXG4gICRyZXN1bHQ6IFwiXCJcbiAgJGlzLXdpZHRoOiB0cnVlXG4gIEBpZiB0eXBlLW9mKCRleHByZXNzaW9uKSAhPSBcInN0cmluZ1wiXG4gICAgQHdhcm4gXCJFeHByZXNzaW9uIHdpdGggdHlwZSBgI3t0eXBlLW9mKCRleHByZXNzaW9uKX1gIGRldGVjdGVkLCBzdHJpbmcgZXhwZWN0ZWQuXCJcbiAgLy8gU2VwYXJhdGluZyB0aGUgb3BlcmF0b3IgZnJvbSB0aGUgcmVzdCBvZiB0aGUgZXhwcmVzc2lvblxuICBAaWYgc3RyLXNsaWNlKCRleHByZXNzaW9uLCAyLCAyKSA9PSBcIj1cIlxuICAgICRvcGVyYXRvcjogc3RyLXNsaWNlKCRleHByZXNzaW9uLCAxLCAyKVxuICAgICR2YWx1ZTogc3RyLXNsaWNlKCRleHByZXNzaW9uLCAzKVxuICBAZWxzZVxuICAgICRvcGVyYXRvcjogc3RyLXNsaWNlKCRleHByZXNzaW9uLCAxLCAxKVxuICAgICR2YWx1ZTogc3RyLXNsaWNlKCRleHByZXNzaW9uLCAyKVxuICAvLyBDaGVja2luZyB3aGF0IHR5cGUgb2YgZXhwcmVzc2lvbiB3ZXJlIGRlYWxpbmcgd2l0aFxuICBAaWYgbWFwLWhhcy1rZXkoJGJyZWFrcG9pbnRzLCAkdmFsdWUpXG4gICAgJHJlc3VsdDogbWFwLWdldCgkYnJlYWtwb2ludHMsICR2YWx1ZSlcbiAgQGVsc2UgaWYgbWFwLWhhcy1rZXkoJG1lZGlhLWV4cHJlc3Npb25zLCAkZXhwcmVzc2lvbilcbiAgICAkcmVzdWx0OiBtYXAtZ2V0KCRtZWRpYS1leHByZXNzaW9ucywgJGV4cHJlc3Npb24pXG4gICAgJGlzLXdpZHRoOiBmYWxzZVxuICBAZWxzZVxuICAgICRyZXN1bHQ6IHRvLW51bWJlcigkdmFsdWUpXG4gIEBpZiAkaXMtd2lkdGhcbiAgICAkdW5pdDogdW5pdCgkcmVzdWx0KVxuICAgICRpbnRlcnZhbDogMFxuICAgIEBpZiBtYXAtaGFzLWtleSgkdW5pdC1pbnRlcnZhbHMsICR1bml0KVxuICAgICAgJGludGVydmFsOiBtYXAtZ2V0KCR1bml0LWludGVydmFscywgJHVuaXQpXG4gICAgQGVsc2VcbiAgICAgIEB3YXJuIFwiVW5rbm93biB1bml0OiAjeyR1bml0fVwiXG4gICAgQGlmICRvcGVyYXRvciA9PSBcIj5cIlxuICAgICAgJGVsZW1lbnQ6IFwiKG1pbi13aWR0aDogI3skcmVzdWx0ICsgJGludGVydmFsfSlcIlxuICAgIEBlbHNlIGlmICRvcGVyYXRvciA9PSBcIjxcIlxuICAgICAgJGVsZW1lbnQ6IFwiKG1heC13aWR0aDogI3skcmVzdWx0IC0gJGludGVydmFsfSlcIlxuICAgIEBlbHNlIGlmICRvcGVyYXRvciA9PSBcIj49XCJcbiAgICAgICRlbGVtZW50OiBcIihtaW4td2lkdGg6ICN7JHJlc3VsdH0pXCJcbiAgICBAZWxzZSBpZiAkb3BlcmF0b3IgPT0gXCI8PVwiXG4gICAgICAkZWxlbWVudDogXCIobWF4LXdpZHRoOiAjeyRyZXN1bHR9KVwiXG4gICAgQGVsc2VcbiAgICAgIEB3YXJuIFwiI3skZXhwcmVzc2lvbn0gaXMgbWlzc2luZyBhbiBvcGVyYXRvci5cIlxuICBAZWxzZVxuICAgICRlbGVtZW50OiAkcmVzdWx0XG4gIEByZXR1cm4gJGVsZW1lbnRcblxuLy9cbiAgUmVwbGFjZXMgdGhlIGZpcnN0IG9jY3VyZW5jZSBvZiB0aGUgc3RyaW5nIHdpdGggdGhlIHJlcGxhY2VtZW50IHN0cmluZ1xuXG4gIEBhdXRob3IgRWR1YXJkbyBCb3VjYXNcblxuICBAcGFyYW0ge1N0cmluZ30gICAkc2VhcmNoICAtIFRoZSB2YWx1ZSBiZWluZyBzZWFyY2hlZCBmb3JcbiAgQHBhcmFtIHtTdHJpbmd9ICAgJHJlcGxhY2UgIC0gVGhlIHJlcGxhY2VtZW50IHN0cmluZ1xuICBAcGFyYW0ge1N0cmluZ30gICAkc3ViamVjdCAgLSBUaGUgc3RyaW5nIGJlaW5nIHJlcGxhY2VkIG9uXG5cbiAgQHJldHVybiB7U3RyaW5nIHwgTnVsbH1cblxuXG5AZnVuY3Rpb24gc3RyLXJlcGxhY2UtZmlyc3QoJHNlYXJjaCwgJHJlcGxhY2UsICRzdWJqZWN0KVxuICAkc2VhcmNoLXN0YXJ0OiBzdHItaW5kZXgoJHN1YmplY3QsICRzZWFyY2gpXG4gIEBpZiAkc2VhcmNoLXN0YXJ0ID09IG51bGxcbiAgICBAcmV0dXJuICRzdWJqZWN0XG4gICRyZXN1bHQ6IHN0ci1zbGljZSgkc3ViamVjdCwgMCwgJHNlYXJjaC1zdGFydCAtIDEpXG4gICRyZXN1bHQ6ICRyZXN1bHQgKyAkcmVwbGFjZVxuICAkcmVzdWx0OiAkcmVzdWx0ICsgc3RyLXNsaWNlKCRzdWJqZWN0LCAkc2VhcmNoLXN0YXJ0ICsgc3RyLWxlbmd0aCgkc2VhcmNoKSlcbiAgQHJldHVybiAkcmVzdWx0XG5cbi8vXG4gIENhc3RzIGEgbnVtYmVyIHRvIGEgc3RyaW5nXG5cbiAgQGF1dGhvciBIdWdvIEdpcmF1ZGVsXG5cbiAgQHBhcmFtIHtTdHJpbmd9ICAgJHN0cmluZyAgLSBOdW1iZXIgdG8gYmUgcGFyc2VkXG5cbiAgQHJldHVybiB7TGlzdCB8IE51bGx9XG5cbkBmdW5jdGlvbiB0by1udW1iZXIoJHN0cmluZylcbiAgLy8gTWF0cmljZXNcbiAgJHN0cmluZ3M6IFwiMFwiIFwiMVwiIFwiMlwiIFwiM1wiIFwiNFwiIFwiNVwiIFwiNlwiIFwiN1wiIFwiOFwiIFwiOVwiXG4gICRudW1iZXJzOiAwIDEgMiAzIDQgNSA2IDcgOCA5XG4gIC8vIFJlc3VsdFxuICAkcmVzdWx0OiAwXG4gICRkaXZpZGVyOiAwXG4gICRtaW51czogZmFsc2VcbiAgLy8gTG9vcGluZyB0aHJvdWdoIGFsbCBjaGFyYWN0ZXJzXG4gIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggc3RyLWxlbmd0aCgkc3RyaW5nKVxuICAgICRjaGFyYWN0ZXI6IHN0ci1zbGljZSgkc3RyaW5nLCAkaSwgJGkpXG4gICAgJGluZGV4OiBpbmRleCgkc3RyaW5ncywgJGNoYXJhY3RlcilcbiAgICBAaWYgJGNoYXJhY3RlciA9PSBcIi1cIlxuICAgICAgJG1pbnVzOiB0cnVlXG4gICAgQGVsc2UgaWYgJGNoYXJhY3RlciA9PSBcIi5cIlxuICAgICAgJGRpdmlkZXI6IDFcbiAgICBAZWxzZVxuICAgICAgQGlmIHR5cGUtb2YoJGluZGV4KSAhPSBcIm51bWJlclwiXG4gICAgICAgICRyZXN1bHQ6IGlmKCRtaW51cywgJHJlc3VsdCAqIC0xLCAkcmVzdWx0KVxuICAgICAgICBAcmV0dXJuIF9sZW5ndGgoJHJlc3VsdCwgc3RyLXNsaWNlKCRzdHJpbmcsICRpKSlcbiAgICAgICRudW1iZXI6IG50aCgkbnVtYmVycywgJGluZGV4KVxuICAgICAgQGlmICRkaXZpZGVyID09IDBcbiAgICAgICAgJHJlc3VsdDogJHJlc3VsdCAqIDEwXG4gICAgICBAZWxzZVxuICAgICAgICAvLyBNb3ZlIHRoZSBkZWNpbWFsIGRvdCB0byB0aGUgbGVmdFxuICAgICAgICAkZGl2aWRlcjogJGRpdmlkZXIgKiAxMFxuICAgICAgICAkbnVtYmVyOiAkbnVtYmVyIC8gJGRpdmlkZXJcbiAgICAgICRyZXN1bHQ6ICRyZXN1bHQgKyAkbnVtYmVyXG4gIEByZXR1cm4gaWYoJG1pbnVzLCAkcmVzdWx0ICogLTEsICRyZXN1bHQpXG5cbkBmdW5jdGlvbiBfbGVuZ3RoKCRudW1iZXIsICR1bml0KVxuICAkc3RyaW5nczogXCJweFwiIFwiY21cIiBcIm1tXCIgXCIlXCIgXCJjaFwiIFwicGljYVwiIFwiaW5cIiBcImVtXCIgXCJyZW1cIiBcInB0XCIgXCJwY1wiIFwiZXhcIiBcInZ3XCIgXCJ2aFwiIFwidm1pblwiIFwidm1heFwiXG4gICR1bml0czogMXB4IDFjbSAxbW0gMSUgMWNoIDFwaWNhIDFpbiAxZW0gMXJlbSAxcHQgMXBjIDFleCAxdncgMXZoIDF2bWluIDF2bWF4XG4gICRpbmRleDogaW5kZXgoJHN0cmluZ3MsICR1bml0KVxuICBAaWYgdHlwZS1vZigkaW5kZXgpICE9IFwibnVtYmVyXCJcbiAgICBAd2FybiBcIlVua25vd24gdW5pdCBgI3skdW5pdH1gLlwiXG4gICAgQHJldHVybiBmYWxzZVxuICBAcmV0dXJuICRudW1iZXIgKiBudGgoJHVuaXRzLCAkaW5kZXgpXG4iLCIqXG4gIG1hcmdpbjogMFxuICBwYWRkaW5nOiAwXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3hcblxuICAmOjphZnRlciwgJjo6YmVmb3JlXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveFxuXG5ib2R5XG4gIGJhY2tncm91bmQtY29sb3I6ICRzbGF0ZVxuICBwYWRkaW5nOiAwXG5cbmFcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lXG4gIGNvbG9yOiRncmVlblxuICAmOmhvdmVyXG4gICAgY29sb3I6JG5pZ2h0Z3JlZW5cbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZVxuXG4vL1Jlc2V0IGZsZXhib3ggc2V0dGluZ3Mgd2hlbiByZXNwb25kaW5nIGJlbG93IGRlc2t0b3Bcbj1yZXNwb25zaXZlLXN0YWNrXG4gICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgZmxleC1mbG93OiBjb2x1bW5cbiIsIi8vIFNpdGUgY29sb3IgcGFsZXR0ZVxuJGdyZWVuOiAjMjY3ZTY0XG4kbmlnaHRncmVlbjogIzQ1NTY1MlxuJHNsYXRlOiAjZWNlZWU2XG5cbi8vIDUwIHNoYWRlcyBvZiBncmF5XG4kd2hpdGU6ICNmZmZcbiRzdGVhbTogI2Y4ZjhmOFxuJGNsb3VkOiAjZTVlNmU3XG4kZ3JhcGhpdGU6ICNjY2NcbiRzdG9uZTogIzdmN2U3ZVxuJGxlYWQ6ICM2ZTZiNmNcbiRjaGFyY29hbDogIzMzM1xuJGJsYWNrOiAjMDAwXG5cblxuJG1vYmlsZS1uYXYtYnRuOiAkc2xhdGVcblxuLy9Cb3JkZXIgQ29sb3JcbiRib3JkZXJDb2xvcjogJGdyYXBoaXRlXG5cbi8vIFNpdGUgYmFzZSB0ZXh0IGNvbG9yc1xuJHNpdGUtdGV4dC1jb2xvcjogJGNoYXJjb2FsXG4kc2l0ZS10ZXh0LWNvbG9yLWxpbms6ICRncmVlblxuJHNpdGUtdGV4dC1jb2xvci1saW5rLWhvdmVyOiAjNDU1NjUyXG5cblxuLy8gRm9vdGVyIGNvbG9yc1xuJGZvb3Rlci10ZXh0OiAkbmlnaHRncmVlblxuJGZvb3Rlci10ZXh0LWxpbms6ICRuaWdodGdyZWVuXG4kZm9vdGVyLXRleHQtbGluay1ob3ZlcjogJGdyZWVuXG4iLCIvLyBUaGUgdGFibGVzIHN0YXJ0IHRvIGxvb2sgZnVnbHkgYXQgYXJvdW5kIDcwMHB4LCBzbyBsZXQncyBzdGFydCByZXNwb25kaW5nIHRoZXJlXG4kdGFibGUtYnJlYWs6IFwiPD03MDBweFwiXG5cbnRhYmxlXG5cdG1hcmdpbjogMCAwIDEuNWVtXG5cdHdpZHRoOiAxMDAlXG5cbnRyXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkY2xvdWRcblxuICArbWVkaWEoJHRhYmxlLWJyZWFrKVxuICAgIG1hcmdpbi10b3A6IDAgIWltcG9ydGFudDtcblxuICAgICY6Zmlyc3QtY2hpbGRcbiAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAkY2xvdWRcblxuICAmOm50aC1jaGlsZChldmVuKVxuICAgIGJhY2tncm91bmQtY29sb3I6ICRzdGVhbVxuXG50ZFxuICB2ZXJ0aWNhbC1hbGlnbjogdG9wXG4gIHBhZGRpbmc6IDEwcHggNXB4XG5cbiAgK21lZGlhKCR0YWJsZS1icmVhaylcbiAgICBtYXJnaW4tdG9wOiAwICFpbXBvcnRhbnQ7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlXG4gICAgcGFkZGluZy1sZWZ0OiA0MCVcblxuICAgICY6YmVmb3JlXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgICAgIHRvcDogNnB4XG4gICAgICBsZWZ0OiA2cHhcbiAgICAgIHdpZHRoOiA0MCVcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDEwcHhcbiAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXBcbiAgICAgIGZvbnQtd2VpZ2h0OiAkc2VtaWJvbGRcblxuXG4gICAgJjpudGgtb2YtdHlwZSgxKVxuICAgICAgJjpiZWZvcmVcbiAgICAgICAgY29udGVudDogXCJDaXR5OiBcIlxuICAgICY6bnRoLW9mLXR5cGUoMilcbiAgICAgICY6YmVmb3JlXG4gICAgICAgIGNvbnRlbnQ6IFwiQWRkcmVzczogXCJcbiAgICAmOm50aC1vZi10eXBlKDMpXG4gICAgICAmOmJlZm9yZVxuICAgICAgICBjb250ZW50OiBcIlBob25lOiBcIlxuXG50aGVhZFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkY2xvdWRcblxuICB0clxuICAgIC8vSGlkZSB0aGUgdGhlYWQgaW5mb3JtYXRpb24gaW4gYW4gYWNjZXNzaWJsZSB3YXlcblxuICAgICttZWRpYSgkdGFibGUtYnJlYWspXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgICAgIHRvcDogLTk5OTlweFxuICAgICAgbGVmdDogLTk5OTlweFxuXG4gIHRoXG4gICAgZm9udC13ZWlnaHQ6ICRzZW1pYm9sZFxuICAgIHRleHQtYWxpZ246IGxlZnRcbiAgICBwYWRkaW5nOiA1cHhcblxudGFibGUsIHRoZWFkLCB0Ym9keSwgdGgsIHRkLCB0clxuICArbWVkaWEoJHRhYmxlLWJyZWFrKVxuICAgIGRpc3BsYXk6IGJsb2NrXG4iLCIubmF2LW1pbm9yXG4gIGRpc3BsYXk6IGJsb2NrXG4gIHRleHQtYWxpZ246IHJpZ2h0XG5cbiAgJl9fY29udGFpbmVyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlXG4gICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAkYm9yZGVyQ29sb3JcbiAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAkYm9yZGVyQ29sb3JcbiAgICBtYXJnaW46IDAgYXV0b1xuICAgIHBhZGRpbmc6IDFyZW0gMS41cmVtXG4gICAgbWF4LXdpZHRoOiAxMjAwcHhcblxuICAgICttZWRpYShcIjw9cGhvbmVcIilcbiAgICAgIC8vZGlzcGxheTogbm9uZVxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyXG5cbiAgbGlcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcblxuICAgICY6YWZ0ZXJcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgICAgY29udGVudDogJyB8ICdcbiAgICAgIGNvbG9yOiAkZ3JlZW5cbiAgICAgIG1hcmdpbjogMCAycHggMCAuM3JlbVxuXG4gICAgJjpudGgtY2hpbGQoMylcblxuICAgICAgJjphZnRlclxuICAgICAgICBjb250ZW50OiAnICdcblxuICAgICY6bGFzdC1jaGlsZFxuICAgICAgYVxuICAgICAgICBmb250LXdlaWdodDpib2xkXG4gICAgICAgIG1hcmdpbi1yaWdodDogMTBweFxuXG4gICAgICAgICttZWRpYShcIjw9cGhvbmVcIilcbiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDBcblxuICAmX19saW5rXG4gICAgY29sb3I6ICRjaGFyY29hbFxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgIHBhZGRpbmc6IDAgLjNyZW0gMFxuXG4gICAgK21lZGlhKFwiPD1waG9uZVwiKVxuICAgICAgZm9udC1zaXplOiAuOHJlbVxuXG5cbiAgICAmOmhvdmVyXG4gICAgICBjb2xvcjogJGdyZWVuXG5cbi5zaXRlLW1hcFxuICBhXG4gICAgY29sb3I6JGNoYXJjb2FsXG4gICAgJjpob3ZlclxuICAgICAgY29sb3I6ICRncmVlblxuIiwiLy8gaGVhZGVyIHNpemVcbiRoZWFkZXItaGVpZ2h0LVM6IDUwcHhcbiRoZWFkZXItaGVpZ2h0LUw6IDgwcHhcblxuLy8gTmF2aWdhdGlvbiBzaXplXG4kbmF2LXdpZHRoLVM6IDI2MHB4XG5cbi8vIFNlYXJjaCBzaXplXG4kc2VhcmNoLWhlaWdodC1TOiA1MHB4XG4kc2VhcmNoLWhlaWdodC1MOiAxMjBweFxuXG4vLyB6LWluZGV4XG4kYmVsb3ctY29udGVudDogMVxuJGNvbnRlbnQ6IDJcbiRhYm92ZS1jb250ZW50OiAzXG5cblxuXG49Y29sdW1uKCRwZXJjZW50YWdlLCAkZmxvYXQtZGlyZWN0aW9uOiBsZWZ0KVxuICB3aWR0aDogMTAwJSAqICRwZXJjZW50YWdlXG4gIGZsb2F0OiAkZmxvYXQtZGlyZWN0aW9uXG5cbj1jbGVhcmZpeFxuICAmOmFmdGVyXG4gICAgY29udGVudDogXCJcIlxuICAgIGRpc3BsYXk6IHRhYmxlXG4gICAgY2xlYXI6IGJvdGhcblxuYS5jZC1uYXYtaXRlbVxuICAmOmhvdmVyXG4gICAgaW1nXG4gICAgICBvcGFjaXR5OiAuNyAhaW1wb3J0YW50XG4gICAgaDNcbiAgICAgIGNvbG9yOiBsaWdodGVuKCRncmVlbiwgMzAlKVxuICAgICAgLy9jb2xvcjogJG5pZ2h0Z3JlZW4gIWltcG9ydGFudFxuXG5cbi8vUHJpbWFyeSBzdHlsZVxuYm9keVxuICArbWVkaWEoXCI8ZGVza3RvcFwiKVxuICAgIC8vIGxheW91dCBtaXhpbnMgaW5zaWRlIHBhcnRpYWxzID4gX2xheW91dC5zY3NzXG4gICAgJi5uYXYtb24tbGVmdC5vdmVyZmxvdy1oaWRkZW5cbiAgICAgIG92ZXJmbG93OiBoaWRkZW5cblxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LW1zLWNsZWFyXG4gIC8vIHJlbW92ZXMgY2xvc2UgaWNvbiAtIElFXG4gIGRpc3BsYXk6IG5vbmVcblxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbixcbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1yZXN1bHRzLWJ1dHRvbixcbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLXJlc3VsdHMtZGVjb3JhdGlvblxuICBkaXNwbGF5OiBub25lXG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKlxuICpNYWluIGNvbXBvbmVudHNcbiAqXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxuXG4uY2QtbWFpbi1jb250ZW50LFxuLmNkLW1haW4taGVhZGVyXG4gIC8qIEZvcmNlIEhhcmR3YXJlIEFjY2VsZXJhdGlvbiBpbiBXZWJLaXRcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApXG4gIHdpbGwtY2hhbmdlOiB0cmFuc2Zvcm1cblxuICB1bFxuICAgIGxpc3Qtc3R5bGU6IG5vbmVcblxuLmNkLW1haW4tY29udGVudFxuICBwb3NpdGlvbjogcmVsYXRpdmVcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3NcblxuICArbWVkaWEoXCI8ZGVza3RvcFwiKVxuICAgICYubmF2LWlzLXZpc2libGVcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtJG5hdi13aWR0aC1TKVxuXG4gICAgLm5hdi1vbi1sZWZ0ICYubmF2LWlzLXZpc2libGVcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgkbmF2LXdpZHRoLVMpXG5cbi5jZC1tYWluLWhlYWRlclxuICBmb250LWZhbWlseTogJHNlcmlmXG4gIHBvc2l0aW9uOiByZWxhdGl2ZVxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zc1xuXG4gICttZWRpYShcIjxkZXNrdG9wXCIpXG4gICAgJi5uYXYtaXMtdmlzaWJsZVxuICAgICAgLy90cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLSRuYXYtd2lkdGgtUylcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKVxuXG4gICAgLm5hdi1vbi1sZWZ0ICYubmF2LWlzLXZpc2libGVcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgkbmF2LXdpZHRoLVMpXG5cbi5jZC1tYWluLWNvbnRlbnRcbiAgLy9DSEFOR0VEXG4gIC8vYmFja2dyb3VuZDogJGNsb3VkXG4gIG1pbi1oZWlnaHQ6IDEwMHZoXG4gIHotaW5kZXg6ICRjb250ZW50XG5cbi5jZC1tYWluLWhlYWRlclxuICBoZWlnaHQ6ICRoZWFkZXItaGVpZ2h0LVNcbiAgYmFja2dyb3VuZDogJHdoaXRlXG4gIHotaW5kZXg6ICRhYm92ZS1jb250ZW50XG5cbiAgLy9DSEFOR0VEXG4gIC8vYm94LXNoYWRvdzogMCAxcHggNXB4IHJnYmEoMTAwLDEwMCwxMDAsIC41KVxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJGNsb3VkXG5cbiAgLm5hdi1pcy1maXhlZCAmXG4gICAgLyogYWRkIC5uYXYtaXMtZml4ZWQgY2xhc3MgdG8gYm9keSBpZiB5b3Ugd2FudCBhIGZpeGVkIG5hdmlnYXRpb24gb24gPiAxMDI0cHhcbiAgICBwb3NpdGlvbjogZml4ZWRcbiAgICB0b3A6IDBcbiAgICBsZWZ0OiAwXG4gICAgd2lkdGg6IDEwMCVcblxuICArbWVkaWEoXCI+ZGVza3RvcFwiKVxuICAgIGhlaWdodDogJGhlYWRlci1oZWlnaHQtTFxuICAgICtjbGVhcmZpeFxuXG4uY2QtbG9nb1xuICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgdG9wOiAxMnB4XG4gIGxlZnQ6IDUlXG5cbiAgaW1nXG4gICAgZGlzcGxheTogYmxvY2tcblxuICArbWVkaWEoXCI8ZGVza3RvcFwiKVxuICAgIC5uYXYtb24tbGVmdCAmXG4gICAgICBsZWZ0OiBhdXRvXG4gICAgICByaWdodDogNSVcblxuICArbWVkaWEoXCI+ZGVza3RvcFwiKVxuICAgIHRvcDogMjZweFxuICAgIGxlZnQ6IDRlbVxuXG4uY2QtaGVhZGVyLWJ1dHRvbnNcbiAgcG9zaXRpb246IGFic29sdXRlXG4gIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICB0b3A6IDNweFxuICByaWdodDogNSVcblxuICBsaVxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuXG4gICttZWRpYShcIjxkZXNrdG9wXCIpXG4gICAgLm5hdi1vbi1sZWZ0ICZcbiAgICAgIHJpZ2h0OiBhdXRvXG4gICAgICBsZWZ0OiA1JVxuICAgICAgbGlcbiAgICAgICAgZmxvYXQ6IHJpZ2h0XG5cbiAgK21lZGlhKFwiPmRlc2t0b3BcIilcbiAgICB0b3A6IDFyZW1cbiAgICByaWdodDogMXJlbVxuXG4uY2Qtc2VhcmNoLXRyaWdnZXIsXG4uY2QtbmF2LXRyaWdnZXJcbiAgcG9zaXRpb246IHJlbGF0aXZlXG4gIGRpc3BsYXk6IGJsb2NrXG4gIHdpZHRoOiA0NHB4XG4gIGhlaWdodDogNDRweFxuICBvdmVyZmxvdzogaGlkZGVuXG4gIHdoaXRlLXNwYWNlOiBub3dyYXBcbiAgLyogaGlkZSB0ZXh0XG4gIGNvbG9yOiB0cmFuc3BhcmVudFxuICB6LWluZGV4OiAkYWJvdmUtY29udGVudFxuXG4uY2Qtc2VhcmNoLXRyaWdnZXJcbiAgJjo6YmVmb3JlLCAmOjphZnRlclxuICAgIC8qIHNlYXJjaCBpY29uXG4gICAgY29udGVudDogJydcbiAgICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3NcbiAgICAvKiBGb3JjZSBIYXJkd2FyZSBBY2NlbGVyYXRpb24gaW4gV2ViS2l0XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApXG4gICAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuXG5cbiAgJjo6YmVmb3JlXG4gICAgLyogbGVuc1xuICAgIHRvcDogMTFweFxuICAgIGxlZnQ6IDExcHhcbiAgICB3aWR0aDogMThweFxuICAgIGhlaWdodDogMThweFxuICAgIGJvcmRlci1yYWRpdXM6IDUwJVxuICAgIGJvcmRlcjogM3B4IHNvbGlkICRuaWdodGdyZWVuXG5cbiAgJjo6YWZ0ZXJcbiAgICAvKiBoYW5kbGVcbiAgICBoZWlnaHQ6IDNweFxuICAgIHdpZHRoOiA4cHhcbiAgICBiYWNrZ3JvdW5kOiAkbmlnaHRncmVlblxuICAgIGJvdHRvbTogMTRweFxuICAgIHJpZ2h0OiAxMXB4XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpXG4gIHNwYW5cbiAgICAvKiBjb250YWluZXIgZm9yIHRoZSBYIGljb25cbiAgICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgICBoZWlnaHQ6IDEwMCVcbiAgICB3aWR0aDogMTAwJVxuICAgIHRvcDogMFxuICAgIGxlZnQ6IDBcbiAgc3Bhbjo6YmVmb3JlLCBzcGFuOjphZnRlclxuICAgIC8qIGNsb3NlIGljb25cbiAgICBjb250ZW50OiAnJ1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZVxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgIGhlaWdodDogM3B4XG4gICAgd2lkdGg6IDIycHhcbiAgICB0b3A6IDUwJVxuICAgIG1hcmdpbi10b3A6IC0ycHhcbiAgICBsZWZ0OiA1MCVcbiAgICBtYXJnaW4tbGVmdDogLTExcHhcbiAgICBiYWNrZ3JvdW5kOiAkbmlnaHRncmVlblxuICAgIG9wYWNpdHk6IDBcbiAgICAvKiBGb3JjZSBIYXJkd2FyZSBBY2NlbGVyYXRpb24gaW4gV2ViS2l0XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApXG4gICAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuXG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzLCB0cmFuc2Zvcm0gMC4zc1xuXG4gIHNwYW46OmJlZm9yZVxuICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKVxuXG4gIHNwYW46OmFmdGVyXG4gICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKVxuXG4gICYuc2VhcmNoLWlzLXZpc2libGVcbiAgICAmOjpiZWZvcmUsICY6OmFmdGVyXG4gICAgICAvKiBoaWRlIHNlYXJjaCBpY29uXG4gICAgICBvcGFjaXR5OiAwXG4gICAgc3Bhbjo6YmVmb3JlLCBzcGFuOjphZnRlclxuICAgICAgLyogc2hvdyBjbG9zZSBpY29uXG4gICAgICBvcGFjaXR5OiAxXG4gICAgc3Bhbjo6YmVmb3JlXG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgxMzVkZWcpXG4gICAgc3Bhbjo6YWZ0ZXJcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKVxuXG4uY2QtbmF2LXRyaWdnZXJcbiAgJjpob3ZlclxuICAgIC8vSGlkZSAnTWVudScgd29yZCBmb3IgYWNjZXNzaWJpbGl0eSBJIGhvcGVcbiAgICBjb2xvcjogdHJhbnNwYXJlbnRcbiAgc3Bhbiwgc3Bhbjo6YmVmb3JlLCBzcGFuOjphZnRlclxuICAgIC8qIGhhbWJ1cmdlciBpY29uIGluIENTU1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZVxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgIGhlaWdodDogM3B4XG4gICAgd2lkdGg6IDI0cHhcbiAgICBiYWNrZ3JvdW5kOiAkbmlnaHRncmVlblxuICBzcGFuXG4gICAgLyogbGluZSBpbiB0aGUgY2VudGVyXG4gICAgcG9zaXRpb246IGFic29sdXRlXG4gICAgdG9wOiA1MCVcbiAgICByaWdodDogMTBweFxuICAgIG1hcmdpbi10b3A6IC0ycHhcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDAuM3MgMC4zc1xuICBzcGFuOjpiZWZvcmUsIHNwYW46OmFmdGVyXG4gICAgLyogb3RoZXIgMiBsaW5lc1xuICAgIGNvbnRlbnQ6ICcnXG4gICAgcmlnaHQ6IDBcbiAgICAvKiBGb3JjZSBIYXJkd2FyZSBBY2NlbGVyYXRpb24gaW4gV2ViS2l0XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApXG4gICAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuXG4gICAgdHJhbnNmb3JtLW9yaWdpbjogMCUgNTAlXG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MgMC4zc1xuICBzcGFuOjpiZWZvcmVcbiAgICAvKiBtZW51IGljb24gdG9wIGxpbmVcbiAgICB0b3A6IC02cHhcbiAgc3Bhbjo6YWZ0ZXJcbiAgICAvKiBtZW51IGljb24gYm90dG9tIGxpbmVcbiAgICB0b3A6IDZweFxuICAmLm5hdi1pcy12aXNpYmxlXG4gICAgc3BhblxuICAgICAgLyogaGlkZSBsaW5lIGluIHRoZSBjZW50ZXJcbiAgICAgIGJhY2tncm91bmQ6IHJnYmEoJG5pZ2h0Z3JlZW4sIDApXG4gICAgc3Bhbjo6YmVmb3JlLCBzcGFuOjphZnRlclxuICAgICAgLyoga2VlcCB2aXNpYmxlIG90aGVyIDIgbGluZXNcbiAgICAgIGJhY2tncm91bmQ6IHJnYmEoJG5pZ2h0Z3JlZW4sIDEpXG4gICAgc3Bhbjo6YmVmb3JlXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNHB4KSB0cmFuc2xhdGVZKC0zcHgpIHJvdGF0ZSg0NWRlZylcbiAgICBzcGFuOjphZnRlclxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDRweCkgdHJhbnNsYXRlWSgycHgpIHJvdGF0ZSgtNDVkZWcpXG4gICttZWRpYShcIj5kZXNrdG9wXCIpXG4gICAgZGlzcGxheTogbm9uZVxuXG5cbi5jZC1wcmltYXJ5LW5hdlxuICByaWdodDogMFxuXG4vL1JpZ2h0IGFsaWduaW5nIHRoZSBtZW51IG1lYW5zIHdlIGhhdmUgdG8gYnVtcCB0aGUgZHJvcGRvd24gYmFjayBvdmVyIHRvIGxpbmUgdXBcbi5jZC1wcmltYXJ5LW5hdiB1bFxuICByaWdodDogMjBweFxuXG4gICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgcmlnaHQ6IDBcblxuLmNkLXByaW1hcnktbmF2LFxuLmNkLXByaW1hcnktbmF2IHVsXG4gIHBvc2l0aW9uOiBmaXhlZFxuICB0b3A6IDBcbiAgLy9yaWdodDogMFxuICBoZWlnaHQ6IDEwMCVcbiAgd2lkdGg6ICRuYXYtd2lkdGgtU1xuICBiYWNrZ3JvdW5kOiAkbmlnaHRncmVlblxuICBvdmVyZmxvdzogYXV0b1xuICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2hcbiAgei1pbmRleDogJGJlbG93LWNvbnRlbnRcblxuICAvKiBGb3JjZSBIYXJkd2FyZSBBY2NlbGVyYXRpb24gaW4gV2ViS2l0XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKVxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMClcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3NcblxuICBhXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lXG4gICAgZGlzcGxheTogYmxvY2tcbiAgICBmb250LXNpemU6IDEuMnJlbVxuICAgIGhlaWdodDogNTBweFxuICAgIGxpbmUtaGVpZ2h0OiA1MHB4XG4gICAgcGFkZGluZzogMCAyMHB4XG4gICAgY29sb3I6ICR3aGl0ZVxuICAgIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkXG4gICAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZVxuICAgIG92ZXJmbG93OiBoaWRkZW5cbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpc1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXBcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgbGlnaHRlbigkbmlnaHRncmVlbiwgNSUpXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApXG4gICAgd2lsbC1jaGFuZ2U6IHRyYW5zZm9ybSwgb3BhY2l0eVxuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzLCBvcGFjaXR5IDAuM3NcblxuICAgICY6aG92ZXJcbiAgICAgIGNvbG9yOiBsaWdodGVuKCRncmVlbiwgMzAlKVxuXG5cbiAgJi5pcy1oaWRkZW5cbiAgICAvKiBzZWNvbmRhcnkgbmF2aWdhdGlvbnMgaGlkZGVuIGJ5IGRlZmF1bHRcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTAwJSlcblxuICAmLm1vdmVzLW91dCA+IGxpID4gYVxuICAgIC8qIHB1c2ggdGhlIG5hdmlnYXRpb24gaXRlbXMgdG8gdGhlIGxlZnQgLSBhbmQgbG93ZXIgZG93biBvcGFjaXR5IC0gd2hlbiBzZWNvbmRhcnkgbmF2IHNsaWRlcyBpblxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSlcbiAgICBvcGFjaXR5OiAwXG5cbittZWRpYShcIjxkZXNrdG9wXCIpXG4gIC5uYXYtb24tbGVmdCAuY2QtcHJpbWFyeS1uYXYsXG4gIC5uYXYtb24tbGVmdCAuY2QtcHJpbWFyeS1uYXYgdWxcbiAgICByaWdodDogYXV0b1xuICAgIGxlZnQ6IDBcblxuXG4uY2QtcHJpbWFyeS1uYXZcbiAgLnNlZS1hbGwgYVxuICAgIC8qIGRpZmZlcmVudCBzdHlsZSBmb3IgdGhlIFNlZSBhbGwgYnV0dG9uIG9uIG1vYmlsZSBhbmQgdGFibGV0XG4gICAgY29sb3I6ICRncmVlblxuXG4gIC5jZC1uYXYtZ2FsbGVyeSAuY2QtbmF2LWl0ZW0sXG4gIC5jZC1uYXYtaWNvbnMgLmNkLW5hdi1pdGVtXG4gICAgLyogaXRlbXMgd2l0aCBwaWN0dXJlIChvciBpY29uKSBhbmQgdGl0bGVcbiAgICBoZWlnaHQ6IDUwcHhcbiAgICBsaW5lLWhlaWdodDogNTBweFxuXG4gICAgaDNcbiAgICAgIG92ZXJmbG93OiBoaWRkZW5cbiAgICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzXG4gICAgICBmb250LXNpemU6IDEuMnJlbVxuICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbFxuICAgICAgcGFkZGluZy1sZWZ0OiAxLjJyZW1cblxuICAuY2QtbmF2LWdhbGxlcnkgLmNkLW5hdi1pdGVtXG4gICAgLy9wYWRkaW5nLWxlZnQ6IDkwcHhcblxuICAgIGltZ1xuICAgICAgcG9zaXRpb246IGFic29sdXRlXG4gICAgICBkaXNwbGF5OiBibG9ja1xuICAgICAgaGVpZ2h0OiA0MHB4XG4gICAgICB3aWR0aDogYXV0b1xuICAgICAgbGVmdDogMjBweFxuICAgICAgdG9wOiA1MCVcbiAgICAgIG1hcmdpbi10b3A6IC0yMHB4XG5cbiAgICAgICttZWRpYShcIjxkZXNrdG9wXCIpXG4gICAgICAgIGRpc3BsYXk6IG5vbmVcblxuICAuY2QtbmF2LWljb25zIC5jZC1uYXYtaXRlbVxuICAgIHBhZGRpbmctbGVmdDogNzVweFxuXG4gICAgcFxuICAgICAgY29sb3I6ICRuaWdodGdyZWVuXG4gICAgICBmb250LXNpemU6IDEuM3JlbVxuICAgICAgLyogaGlkZSBkZXNjcmlwdGlvbiBvbiBzbWFsbCBkZXZpY2VzXG4gICAgICBkaXNwbGF5OiBub25lXG5cbiAgICAmOjpiZWZvcmVcbiAgICAgIC8qIGl0ZW0gaWNvblxuICAgICAgY29udGVudDogJydcbiAgICAgIGRpc3BsYXk6IGJsb2NrXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgICAgIGxlZnQ6IDIwcHhcbiAgICAgIHRvcDogNTAlXG4gICAgICBtYXJnaW4tdG9wOiAtMjBweFxuICAgICAgd2lkdGg6IDQwcHhcbiAgICAgIGhlaWdodDogNDBweFxuICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdFxuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlclxuICAgICAgYmFja2dyb3VuZC1zaXplOiA0MHB4IDQwcHhcblxuICAgICYuaXRlbS0xOjpiZWZvcmVcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi9pbWFnZXMvbGluZS1pY29uLTEuc3ZnXCIpXG4gICAgJi5pdGVtLTI6OmJlZm9yZVxuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiL2ltYWdlcy9saW5lLWljb24tMi5zdmdcIilcbiAgICAmLml0ZW0tMzo6YmVmb3JlXG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIvaW1hZ2VzL2xpbmUtaWNvbi0zLnN2Z1wiKVxuICAgICYuaXRlbS00OjpiZWZvcmVcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi9pbWFnZXMvbGluZS1pY29uLTQuc3ZnXCIpXG4gICAgJi5pdGVtLTU6OmJlZm9yZVxuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiL2ltYWdlcy9saW5lLWljb24tNS5zdmdcIilcbiAgICAmLml0ZW0tNjo6YmVmb3JlXG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIvaW1hZ2VzL2xpbmUtaWNvbi02LnN2Z1wiKVxuICAgICYuaXRlbS03OjpiZWZvcmVcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi9pbWFnZXMvbGluZS1pY29uLTcuc3ZnXCIpXG4gICAgJi5pdGVtLTg6OmJlZm9yZVxuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiL2ltYWdlcy9saW5lLWljb24tOC5zdmdcIilcblxuICArbWVkaWEoXCI8ZGVza3RvcFwiKVxuICAgIC8qIGJ5IGRlZmF1bHQgLmNkLXByaW1hcnktbmF2IGlzIGhpZGRlbiAtIHRyaWNrIGZvciBpT1MgZGV2aWNlcyB3aGVyZSB5b3UgY2FuIHNlZSB0aGUgbmF2aWdhdGlvbiBpZiB5b3UgcHVsbCBkb3duXG4gICAgdmlzaWJpbGl0eTogaGlkZGVuXG4gICAgdHJhbnNpdGlvbjogdmlzaWJpbGl0eSAwcyAwLjNzXG4gICAgJi5uYXYtaXMtdmlzaWJsZVxuICAgICAgdmlzaWJpbGl0eTogdmlzaWJsZVxuICAgICAgdHJhbnNpdGlvbjogdmlzaWJpbGl0eSAwcyAwc1xuXG4rbWVkaWEoXCI+ZGVza3RvcFwiKVxuXG4gIC5jZC1wcmltYXJ5LW5hdlxuICAgIHBvc2l0aW9uOiBzdGF0aWNcbiAgICBwYWRkaW5nOiAwIDUwcHggMCAwXG4gICAgbWFyZ2luLWxlZnQ6IDIwcHhcbiAgICBoZWlnaHQ6IGF1dG9cbiAgICB3aWR0aDogMTAwJVxuICAgIC8vZmxvYXQ6IHJpZ2h0XG4gICAgb3ZlcmZsb3c6IHZpc2libGVcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudFxuICAgIC8vdGV4dC1hbGlnbjogY2VudGVyXG5cbiAgICArY2xlYXJmaXhcblxuICAgICYubW92ZXMtb3V0ID4gbGkgPiBhXG4gICAgICAvKiByZXNldCBtb2JpbGUgc3R5bGVcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKVxuICAgICAgb3BhY2l0eTogMVxuXG4gICAgdWxcbiAgICAgIHBvc2l0aW9uOiBzdGF0aWNcbiAgICAgIGhlaWdodDogYXV0b1xuICAgICAgd2lkdGg6IGF1dG9cbiAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50XG4gICAgICBvdmVyZmxvdzogdmlzaWJsZVxuICAgICAgdGV4dC1hbGlnbjogbGVmdFxuICAgICAgei1pbmRleDogJGFib3ZlLWNvbnRlbnRcblxuICAgICAgJi5pcy1oaWRkZW5cbiAgICAgICAgLyogcmVzZXQgbW9iaWxlIHN0eWxlXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKVxuXG4gICAgICAmLm1vdmVzLW91dCA+IGxpID4gYVxuICAgICAgICAvKiByZXNldCBtb2JpbGUgc3R5bGVcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApXG4gICAgICAgIG9wYWNpdHk6IDFcblxuICAgIC8vVG9wIG5hdiBpdGVtc1xuICAgID4gbGlcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgICAgLy9mbG9hdDogbGVmdFxuICAgICAgbWFyZ2luLWxlZnQ6IC41cmVtXG5cbiAgICA+IGxpID4gYVxuICAgICAgLyogbWFpbiBuYXZpZ2F0aW9uIGJ1dHRvbnMgc3R5bGVcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZVxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrXG4gICAgICBoZWlnaHQ6ICRoZWFkZXItaGVpZ2h0LUxcbiAgICAgIGxpbmUtaGVpZ2h0OiAkaGVhZGVyLWhlaWdodC1MXG4gICAgICBwYWRkaW5nOiAwXG4gICAgICBjb2xvcjogJG5pZ2h0Z3JlZW5cbiAgICAgIG92ZXJmbG93OiB2aXNpYmxlXG4gICAgICBib3JkZXItYm90dG9tOiBub25lXG4gICAgICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzLCBib3gtc2hhZG93IDAuM3NcblxuICAgICAgJjpob3ZlclxuICAgICAgICBjb2xvcjogJGdyZWVuXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZVxuICAgICAgJi5zZWxlY3RlZFxuICAgICAgICBjb2xvcjogJGdyZWVuXG4gICAgICAgIGJveC1zaGFkb3c6IGluc2V0IDAgLTJweCAwICRncmVlblxuXG4gICAgLmdvLWJhY2ssIC5zZWUtYWxsXG4gICAgICBkaXNwbGF5OiBub25lXG5cbiAgICAuY2Qtc2Vjb25kYXJ5LW5hdixcbiAgICAuY2QtbmF2LWdhbGxlcnksXG4gICAgLmNkLW5hdi1pY29uc1xuICAgICAgLyogZHJvcGRvd24gbWVudSBzdHlsZVxuICAgICAgcG9zaXRpb246IGFic29sdXRlXG4gICAgICB0b3A6ICRoZWFkZXItaGVpZ2h0LUxcbiAgICAgIC8vd2lkdGg6IDEwMHZ3XG4gICAgICB3aWR0aDogMTAwJVxuICAgICAgYmFja2dyb3VuZDogJHdoaXRlXG4gICAgICAvL0NIQU5HRURcbiAgICAgIC8vcGFkZGluZzogNDhweCA2NHB4IDEzMHB4XG4gICAgICBwYWRkaW5nOiAycmVtXG4gICAgICBib3gtc2hhZG93OiBpbnNldCAwIDFweCAwICRjbG91ZCwgMCAzcHggNnB4IHJnYmEoIzAwMCwgMC4wNSlcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKVxuICAgICAgK2NsZWFyZml4XG5cbiAgICAgIHRyYW5zaXRpb246IG9wYWNpdHkgLjNzIDBzLCB2aXNpYmlsaXR5IDBzIDBzXG5cbiAgICAgICYuaXMtaGlkZGVuXG4gICAgICAgIG9wYWNpdHk6IDBcbiAgICAgICAgdmlzaWJpbGl0eTogaGlkZGVuXG4gICAgICAgIHRyYW5zaXRpb246IG9wYWNpdHkgLjNzIDBzLCB2aXNpYmlsaXR5IDBzIC4zc1xuXG4gICAgICA+IC5zZWUtYWxsXG4gICAgICAgIC8qIHRoaXMgaXMgdGhlIEJJRyBTZWUgYWxsIGJ1dHRvbiBhdCB0aGUgYm90dG9tIG9mIHRoZSBkcm9wZG93biBtZW51XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZVxuICAgICAgICBsZWZ0OiAwXG4gICAgICAgIGJvdHRvbTogMFxuICAgICAgICBoZWlnaHQ6IDUwcHhcbiAgICAgICAgd2lkdGg6IDEwMCVcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlblxuICAgICAgICAvKiByZXNldCBzb21lIGluaGVyaXRlZCBzdHlsZVxuICAgICAgICBtYXJnaW46IDBcbiAgICAgICAgcGFkZGluZzogMFxuXG4gICAgICAgIGFcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgICAgICAgICB3aWR0aDogMTAwJVxuICAgICAgICAgIGhlaWdodDogMTAwJVxuICAgICAgICAgIHRvcDogMFxuICAgICAgICAgIGxlZnQ6IDBcbiAgICAgICAgICBmb250LXNpemU6IDIuMnJlbVxuICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkXG4gICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyXG4gICAgICAgICAgbGluZS1oZWlnaHQ6IDUwcHhcbiAgICAgICAgICBib3JkZXItdG9wOiAxcHggc29saWQgJGNsb3VkXG4gICAgICAgICAgLyogcmVzZXQgc29tZSBpbmhlcml0ZWQgc3R5bGVcbiAgICAgICAgICBib3JkZXItYm90dG9tOiBub25lXG4gICAgICAgICAgbWFyZ2luOiAwXG4gICAgICAgICAgcGFkZGluZzogMFxuICAgICAgICAgIHRyYW5zaXRpb246IGNvbG9yIDAuMnMsIGJhY2tncm91bmQgMC4ycywgYm9yZGVyIDAuMnNcblxuICAgICAgICAgICY6aG92ZXJcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICRuaWdodGdyZWVuXG4gICAgICAgICAgICBib3JkZXItY29sb3I6ICRuaWdodGdyZWVuXG4gICAgICAgICAgICBjb2xvcjogJHdoaXRlXG5cbiAgICAuY2Qtc2Vjb25kYXJ5LW5hdlxuXG4gICAgICA+IGxpXG4gICAgICAgIC8qIGNoYW5nZSB0aGUgaGVpZ2h0IGFjY29yZGluZyB0byB5b3VyIG5lZWRzIC0geW91IGNhbiBldmVuIHNldCBoZWlnaHQ6IGF1dG9cbiAgICAgICAgaGVpZ2h0OiAzNDBweFxuICAgICAgICAvKiBoZXJlIHlvdSBzZXQgdGhlIG51bWJlciBvZiBjb2x1bW5zIC0gdXNlIHdpZHRoIHBlcmNlbnRhZ2VcbiAgICAgICAgK2NvbHVtbigwLjIzKVxuICAgICAgICAvLyBzZWUgcGFydGlhbHMgPiBfbGF5b3V0LnNjc3NcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAyLjY2JVxuICAgICAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAkY2xvdWRcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlblxuICAgICAgICBvdmVyZmxvdy14OiBoaWRkZW5cbiAgICAgICAgb3ZlcmZsb3cteTogYXV0b1xuICAgICAgICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2hcblxuICAgICAgICAmOm50aC1jaGlsZCg0bisyKVxuICAgICAgICAgIC8qICsyIGJlY2F1c2Ugd2UgaGF2ZSAyIGxpc3QgaXRlbXMgd2l0aCBkaXNwbGF5Om5vbmVcbiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDBcbiAgICAgICAgICBib3JkZXItcmlnaHQ6IG5vbmVcblxuICAgICAgICA+IGFcbiAgICAgICAgICAvKiBzZWNvbmRhcnkgbmF2IHRpdGxlXG4gICAgICAgICAgY29sb3I6ICRncmVlblxuICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkXG4gICAgICAgICAgZm9udC1zaXplOiAxLjZyZW1cbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAuNmVtXG5cbiAgICAgIGFcbiAgICAgICAgaGVpZ2h0OiAzMHB4XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAzMHB4XG4gICAgICAgIHBhZGRpbmc6IDAgMTglIDAgMFxuICAgICAgICBjb2xvcjogJG5pZ2h0Z3JlZW5cbiAgICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZVxuICAgICAgICBmb250LXNpemU6IDEuNHJlbVxuXG4gICAgICAgICY6aG92ZXJcbiAgICAgICAgICBjb2xvcjogJGdyZWVuXG5cbiAgICAgIHVsXG4gICAgICAgIC8qIEZvcmNlIEhhcmR3YXJlIEFjY2VsZXJhdGlvbiBpbiBXZWJLaXRcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApXG5cbiAgICAgIHVsIHVsXG4gICAgICAgIC8qIHRlcnRpYXJ5IG5hdmlnYXRpb25cbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlXG4gICAgICAgIHRvcDogMFxuICAgICAgICBsZWZ0OiAwXG4gICAgICAgIGhlaWdodDogMTAwJVxuICAgICAgICB3aWR0aDogMTAwJVxuXG4gICAgICAgICYuaXMtaGlkZGVuXG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwMCUpXG5cbiAgICAgICAgLmdvLWJhY2tcbiAgICAgICAgICBkaXNwbGF5OiBibG9ja1xuXG4gICAgICAgICAgYVxuICAgICAgICAgICAgY29sb3I6IHRyYW5zcGFyZW50XG5cbiAgICAgICAgLnNlZS1hbGxcbiAgICAgICAgICBkaXNwbGF5OiBibG9ja1xuXG4gICAgICAubW92ZXMtb3V0ID4gbGkgPiBhXG4gICAgICAgIC8qIHB1c2ggdGhlIG5hdmlnYXRpb24gaXRlbXMgdG8gdGhlIGxlZnQgLSBhbmQgbG93ZXIgZG93biBvcGFjaXR5IC0gd2hlbiB0ZXJ0aWFyeSBuYXYgc2xpZGVzIGluXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSlcblxuICAgIC5jZC1uYXYtZ2FsbGVyeVxuICAgICAgYm94LXNoYWRvdzogMCA1cHggNXB4IHJnYmEoMTAwLDEwMCwxMDAsLjMpXG5cbiAgICAgIGxpXG4gICAgICAgIC8qIHNldCBoZXJlIG51bWJlciBvZiBjb2x1bW5zIC0gdXNlIHdpZHRoIHBlcmNlbnRhZ2VcbiAgICAgICAgLy8rY29sdW1uKDAuMjIpXG4gICAgICAgIC8vbWFyZ2luOiAwIDQlIDQwcHggMFxuXG4gICAgICAgIGZsb2F0OiBsZWZ0XG4gICAgICAgIHdpZHRoOiAyNSVcbiAgICAgICAgcGFkZGluZzogMXJlbVxuXG4gICAgICAgICY6bnRoLWNoaWxkKDRuKzIpXG4gICAgICAgICAgLyogKzIgYmVjYXVzZSB3ZSBoYXZlIHR3byBhZGRpdGlvbmFsIGxpc3QgaXRlbXMgd2l0aCBkaXNwbGF5Om5vbmVcbiAgICAgICAgICAvL21hcmdpbi1yaWdodDogMFxuXG4gICAgICAuY2QtbmF2LWl0ZW1cbiAgICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZVxuICAgICAgICBwYWRkaW5nOiAwXG4gICAgICAgIGhlaWdodDogYXV0b1xuICAgICAgICBsaW5lLWhlaWdodDogMS4yXG5cbiAgICAgICAgaW1nXG4gICAgICAgICAgcG9zaXRpb246IHN0YXRpY1xuICAgICAgICAgIG1hcmdpbi10b3A6IDBcbiAgICAgICAgICBoZWlnaHQ6IGF1dG9cbiAgICAgICAgICB3aWR0aDogMTAwJVxuICAgICAgICAgIG1hcmdpbi1ib3R0b206IC42cmVtXG5cbiAgICAgICAgaDNcbiAgICAgICAgICBjb2xvcjogJGdyZWVuXG4gICAgICAgICAgZm9udC1zaXplOiAuOXJlbVxuICAgICAgICAgIHBhZGRpbmc6IDAgLjRyZW1cbiAgICAgICAgICBmb250LXdlaWdodDogbm9ybWFsXG5cbiAgICAuY2QtbmF2LWljb25zXG5cbiAgICAgIGxpXG4gICAgICAgIC8qIHNldCBoZXJlIG51bWJlciBvZiBjb2x1bW5zIC0gdXNlIHdpZHRoIHBlcmNlbnRhZ2VcbiAgICAgICAgK2NvbHVtbigwLjMyKVxuICAgICAgICBtYXJnaW46IDAgMiUgMjBweCAwXG4gICAgICAgICY6bnRoLWNoaWxkKDNuKzIpXG4gICAgICAgICAgLyogKzIgYmVjYXVzZSB3ZSBoYXZlIHR3byBhZGRpdGlvbmFsIGxpc3QgaXRlbXMgd2l0aCBkaXNwbGF5Om5vbmVcbiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDBcbiAgICAgIC5jZC1uYXYtaXRlbVxuICAgICAgICBib3JkZXItYm90dG9tOiBub25lXG4gICAgICAgIGhlaWdodDogNTBweFxuICAgICAgICBsaW5lLWhlaWdodDogMS4yXG4gICAgICAgIHBhZGRpbmc6IDI0cHggMCAwIDg1cHhcbiAgICAgICAgJjpob3ZlclxuICAgICAgICAgIGJhY2tncm91bmQ6IGxpZ2h0ZW4oJGNsb3VkLCA4JSlcbiAgICAgICAgaDNcbiAgICAgICAgICBjb2xvcjogJGdyZWVuXG4gICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGRcbiAgICAgICAgcFxuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrXG4gICAgICAgICY6OmJlZm9yZVxuICAgICAgICAgIGxlZnQ6IDI1cHhcblxuXG4uaGFzLWNoaWxkcmVuID4gYSwgLmdvLWJhY2sgYVxuICBwb3NpdGlvbjogcmVsYXRpdmVcbiAgJjo6YmVmb3JlLCAmOjphZnRlclxuICAgIC8qIGFycm93IGljb24gaW4gQ1NTIC0gZm9yIGVsZW1lbnQgd2l0aCBuZXN0ZWQgdW5vcmRlcmVkIGxpc3RzXG4gICAgY29udGVudDogJydcbiAgICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgICB0b3A6IDUwJVxuICAgIG1hcmdpbi10b3A6IC0xcHhcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgICBoZWlnaHQ6IDJweFxuICAgIHdpZHRoOiAxMHB4XG4gICAgYmFja2dyb3VuZDogbGlnaHRlbigkbmlnaHRncmVlbiwgMTAlKVxuXG4gICAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuXG4gICY6OmJlZm9yZVxuICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKVxuICAmOjphZnRlclxuICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZylcbiAgK21lZGlhKFwiPmRlc2t0b3BcIilcbiAgICAmOjpiZWZvcmUsICY6OmFmdGVyXG4gICAgICBiYWNrZ3JvdW5kOiBkYXJrZW4oJGNsb3VkLCAxMCUpXG4gICAgJjpob3Zlcjo6YmVmb3JlLCAmOmhvdmVyOjphZnRlclxuICAgICAgYmFja2dyb3VuZDogJGdyZWVuXG5cbi5oYXMtY2hpbGRyZW4gPiBhXG4gIHBhZGRpbmctcmlnaHQ6IDQwcHhcbiAgJjo6YmVmb3JlLCAmOjphZnRlclxuICAgIC8qIGFycm93IGdvZXMgb24gdGhlIHJpZ2h0IHNpZGUgLSBjaGlsZHJlbiBuYXZpZ2F0aW9uXG4gICAgcmlnaHQ6IDIwcHhcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiA5cHggNTAlXG5cbi5jZC1wcmltYXJ5LW5hdiAuZ28tYmFjayBhXG4gIHBhZGRpbmctbGVmdDogNDBweFxuICAmOjpiZWZvcmUsICY6OmFmdGVyXG4gICAgLyogYXJyb3cgZ29lcyBvbiB0aGUgbGVmdCBzaWRlIC0gZ28gYmFjayBidXR0b25cbiAgICBsZWZ0OiAyMHB4XG4gICAgdHJhbnNmb3JtLW9yaWdpbjogMXB4IDUwJVxuXG4rbWVkaWEoXCI+ZGVza3RvcFwiKVxuICAuaGFzLWNoaWxkcmVuID4gYVxuICAgICY6OmJlZm9yZSwgJjo6YWZ0ZXJcbiAgICAgIHJpZ2h0OiAxNSVcbiAgLmNkLXByaW1hcnktbmF2ID4gLmhhcy1jaGlsZHJlbiA+IGFcbiAgICAvKiBtYWluIG5hdmlnYXRpb24gYXJyb3dzIG9uIGxhcmdlciBkZXZpY2VzXG4gICAgcGFkZGluZy1yaWdodDogMzBweCAhaW1wb3J0YW50XG4gICAgJjo6YmVmb3JlLCAmOjphZnRlclxuICAgICAgd2lkdGg6IDlweFxuICAgICAgdHJhbnNmb3JtLW9yaWdpbjogNTAlIDUwJVxuICAgICAgYmFja2dyb3VuZDogZGFya2VuKCRjbG91ZCwgMTAlKVxuXG4gICAgICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW5cbiAgICAgIHRyYW5zaXRpb246IHdpZHRoIDAuM3MsIHRyYW5zZm9ybSAwLjNzXG4gICAgJjo6YmVmb3JlXG4gICAgICByaWdodDogMTJweFxuICAgICY6OmFmdGVyXG4gICAgICByaWdodDogN3B4XG4gICAgJi5zZWxlY3RlZDo6YmVmb3JlLCAmLnNlbGVjdGVkOjphZnRlclxuICAgICAgd2lkdGg6IDE0cHhcbiAgICAmLnNlbGVjdGVkOjpiZWZvcmVcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg1cHgpIHJvdGF0ZSgtNDVkZWcpXG4gICAgJi5zZWxlY3RlZDo6YWZ0ZXJcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKVxuICAuY2Qtc2Vjb25kYXJ5LW5hdiA+IC5oYXMtY2hpbGRyZW4gPiBhOjpiZWZvcmUsIC5jZC1zZWNvbmRhcnktbmF2ID4gLmhhcy1jaGlsZHJlbiA+IGE6OmFmdGVyXG4gICAgLyogcmVtb3ZlIGFycm93cyBvbiBzZWNvbmRhcnkgbmF2IHRpdGxlc1xuICAgIGRpc3BsYXk6IG5vbmVcbiAgLmNkLXByaW1hcnktbmF2IC5nby1iYWNrIGFcbiAgICBwYWRkaW5nLWxlZnQ6IDIwcHhcbiAgICAmOjpiZWZvcmUsICY6OmFmdGVyXG4gICAgICBsZWZ0OiAxcHhcblxuXG5cblxuLmNkLXNlYXJjaFxuICBmbG9hdDpyaWdodFxuICBtYXJnaW46IDEuMjVyZW1cblxuICArbWVkaWEoXCI8PXBob25lXCIpXG4gICAgZmxvYXQ6IG5vbmVcbiAgICBtYXJnaW46IDFyZW0gYXV0byAwXG4gICAgd2lkdGg6IDEwMCVcblxuICBmb3JtXG4gICAgcG9zaXRpb246cmVsYXRpdmVcblxuICBpbnB1dFt0eXBlPVwic3VibWl0XCJdXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiL2ltYWdlcy9zZWFyY2gtaWNvbi5wbmdcIilcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnRcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgICB0ZXh0LWluZGVudDogLTk5OTk5cHhcbiAgICBoZWlnaHQ6IDIycHhcbiAgICB3aWR0aDogMjJweFxuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZVxuICAgIGJvcmRlcjogMFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZVxuICAgIHRvcDogNnB4XG4gICAgcmlnaHQ6IDNweFxuICAgIGJhY2tncm91bmQtc2l6ZTogNzUlXG5cbiAgaW5wdXRbdHlwZT1cInNlYXJjaFwiXVxuICAgIHRleHQtaW5kZW50OjFyZW1cbiAgICAvL2JveC1zaGFkb3c6IGluc2V0IDAgMXB4IDAgJGNsb3VkLCAwIDNweCA2cHggcmdiYSgjMDAwLCAwLjA1KVxuICAgIGFwcGVhcmFuY2U6IG5vbmVcbiAgICBib3JkZXI6IDFweCBzb2xpZCAkZ3JhcGhpdGVcblxuICAgICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgICB3aWR0aDogMTAwJVxuXG4gICAgJjo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlcixcbiAgICAmOjotbW96LXBsYWNlaG9sZGVyLFxuICAgICY6LW1zLWlucHV0LXBsYWNlaG9sZGVyXG4gICAgICBjb2xvcjogZGFya2VuKCRjbG91ZCwgMTAlKVxuXG4gICAgJjpmb2N1c1xuICAgICAgb3V0bGluZTogbm9uZVxuXG4gICYuaXMtdmlzaWJsZVxuICAgIG9wYWNpdHk6IDFcbiAgICB2aXNpYmlsaXR5OiB2aXNpYmxlXG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAuM3MgMHMsIHZpc2liaWxpdHkgMHMgMHNcbiAgICAvL2JveC1zaGFkb3c6IDFweCAxcHggNXB4IHJnYmEoMTAwLDEwMCwxMDAsIC41KVxuXG4gIC5uYXYtaXMtZml4ZWQgJlxuICAgIHBvc2l0aW9uOiBmaXhlZFxuXG4gICttZWRpYShcIj5kZXNrdG9wXCIpXG5cblxuICAgIGlucHV0XG5cblxuXG4uY2Qtb3ZlcmxheVxuICAvKiBzaGFkb3cgbGF5ZXIgdmlzaWJsZSB3aGVuIG5hdmlnYXRpb24gaXMgYWN0aXZlXG4gIHBvc2l0aW9uOiBmaXhlZFxuICB6LWluZGV4OiAyXG4gIGhlaWdodDogMTAwJVxuICB3aWR0aDogMTAwJVxuICB0b3A6IDBcbiAgbGVmdDogMFxuICBjdXJzb3I6IHBvaW50ZXJcbiAgLy9iYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKCRncmVlbiwgMC44KVxuICB2aXNpYmlsaXR5OiBoaWRkZW5cbiAgb3BhY2l0eTogMFxuICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW5cbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzIDBzLCB2aXNpYmlsaXR5IDBzIDAuM3MsIHRyYW5zZm9ybSAwLjNzIDBzXG5cbiAgJi5pcy12aXNpYmxlXG4gICAgb3BhY2l0eTogMVxuICAgIHZpc2liaWxpdHk6IHZpc2libGVcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3MgMHMsIHZpc2liaWxpdHkgMHMgMHMsIHRyYW5zZm9ybSAwLjNzIDBzXG5cbiAgK21lZGlhKFwiPGRlc2t0b3BcIilcbiAgICAmLmlzLXZpc2libGVcbiAgICAgIC8vdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0kbmF2LXdpZHRoLVMpXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMClcblxuICAgIC5uYXYtb24tbGVmdCAmLmlzLXZpc2libGVcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgkbmF2LXdpZHRoLVMpXG5cbiAgICAmLmlzLXZpc2libGUuc2VhcmNoLWlzLXZpc2libGUsXG4gICAgLm5hdi1vbi1sZWZ0ICYuaXMtdmlzaWJsZS5zZWFyY2gtaXMtdmlzaWJsZVxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApXG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKlxuICpzdXBwb3J0IGZvciBubyBqc1xuICpcbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLm5vLWpzIC5jZC1wcmltYXJ5LW5hdlxuICBwb3NpdGlvbjogcmVsYXRpdmVcbiAgaGVpZ2h0OiBhdXRvXG4gIHdpZHRoOiAxMDAlXG4gIG92ZXJmbG93OiB2aXNpYmxlXG4gIHZpc2liaWxpdHk6IHZpc2libGVcbiAgei1pbmRleDogJGNvbnRlbnRcblxuLm5vLWpzIC5jZC1zZWFyY2hcbiAgcG9zaXRpb246IHJlbGF0aXZlXG4gIHRvcDogMFxuICBvcGFjaXR5OiAxXG4gIHZpc2liaWxpdHk6IHZpc2libGVcblxuK21lZGlhKFwiPmRlc2t0b3BcIilcbiAgLm5vLWpzIC5jZC1wcmltYXJ5LW5hdlxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZVxuICAgIHotaW5kZXg6ICRhYm92ZS1jb250ZW50XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrXG4gICAgd2lkdGg6IGF1dG9cbiAgICB0b3A6IDBcbiAgICByaWdodDogMTUwcHhcbiAgICBwYWRkaW5nOiAwXG4gIC5uby1qcyAubmF2LWlzLWZpeGVkIC5jZC1wcmltYXJ5LW5hdlxuICAgIHBvc2l0aW9uOiBmaXhlZFxuIiwiLm5hdi1mb290ZXJcblx0cGFkZGluZzogMzBweCAyMHB4IDIwcHhcblx0dGV4dC1hbGlnbjogbGVmdFxuXG5cdCttZWRpYShcIjw9dGFibGV0XCIpXG5cdFx0ZGlzcGxheTogbm9uZVxuXG5cdCZfX2hlYWRpbmdcblx0XHRmb250LWZhbWlseTogJHNhbnNcblx0XHRmb250LXNpemU6IDFyZW1cblx0XHRmb250LXdlaWdodDogJGJvbGRcblx0XHRtYXJnaW4tYm90dG9tOiAxcmVtXG5cblx0XHRhXG5cdFx0XHRjb2xvcjogJGNoYXJjb2FsXG5cdFx0XHQmOmhvdmVyXG5cdFx0XHRcdGNvbG9yOiAkZ3JlZW5cblxuXHQmX19saW5rXG5cdFx0Zm9udC1zaXplOiAxNHB4XG5cblx0Jl9fYm94XG5cdFx0cGFkZGluZzogMCAxMHB4XG5cdFx0dmVydGljYWwtYWxpZ246IHRvcFxuXG5cdCZfX2JveC1uYXJyb3dcblx0XHRwYWRkaW5nOiAwIDEwcHhcblx0XHR2ZXJ0aWNhbC1hbGlnbjogdG9wXG5cblx0Jl9fYnV0dG9uXG5cdFx0Ym9yZGVyLXdpZHRoOiAxcHhcblx0XHRjb2xvcjogJGdyZWVuXG5cdFx0Zm9udC1zaXplOiAuOXJlbVxuXHRcdG1hcmdpbi1ib3R0b206IDFyZW1cblx0XHRwYWRkaW5nOiAuNXJlbSAxcmVtXG5cdFx0d2lkdGg6IDEwMCVcblxuXG5cdC8vIFN1Yi1uYXZpZ2F0aW9uLCB3aGljaCBoaWRlcyBvbiBzbWFsbCBzaXplc1xuXHQmX19zdWItbGlua3Ncblx0XHRmb250LXNpemU6IDE0cHhcblxuXHRcdGxpOm50aC1jaGlsZCgxKVxuXHRcdFx0Zm9udC1mYW1pbHk6ICRzYW5zXG5cdFx0XHRmb250LXNpemU6IDFyZW1cblx0XHRcdGZvbnQtd2VpZ2h0OiAkYm9sZFxuXHRcdFx0bWFyZ2luLWJvdHRvbTogLjVyZW1cblxuXHRcdFx0YVxuXHRcdFx0ICBjb2xvcjogJGNoYXJjb2FsXG5cdFx0XHQgICY6aG92ZXJcblx0XHRcdCAgICBjb2xvcjogJGdyZWVuXG4iLCIvL0Jhbm5lciBUYWxsIC0gVGhpcyBpcyBmb3VuZCBvbiB0aGUgaG9tZXBhZ2Ugb25seVxuLmJhbm5lci10YWxsXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChpbWFnZXMvaW5kZXhfaGVyby5qcGcpXG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlclxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyXG4gIGhlaWdodDogMjAwcHhcbiAgcG9zaXRpb246IHJlbGF0aXZlXG5cbiAgK21lZGlhKFwiPnRhYmxldFwiKVxuXG4gICAgaGVpZ2h0OiA0NjVweFxuXG4gICttZWRpYShcIjw9cGhvbmVcIilcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoaW1hZ2VzL2luZGV4X2hlcm8tMi5qcGcpXG4gICAgLy9iYWNrZ3JvdW5kLXBvc2l0aW9uOiBsZWZ0XG4gICAgaGVpZ2h0OiAyNjVweFxuXG5cbiAgJl9faGVhZGxpbmVcbiAgICBib3R0b206IDNyZW1cbiAgICBjb2xvcjogJHdoaXRlXG4gICAgZm9udC1mYW1pbHk6IHNlcmlmXG4gICAgZm9udC1zaXplOiA0cmVtXG4gICAgZm9udC13ZWlnaHQ6IDgwMFxuICAgIGxlZnQ6IDJyZW1cbiAgICBsaW5lLWhlaWdodDogMVxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZVxuICAgIG1hcmdpbjogMCAwIDFyZW0gMXJlbVxuICAgIHRleHQtc2hhZG93OiAycHggMnB4IDJweCAkY2hhcmNvYWxcblxuICAgICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgICBwb3NpdGlvbjogc3RhdGljXG4gICAgICBmb250LXNpemU6IDJyZW1cbiAgICAgIHBhZGRpbmc6IDJyZW1cblxuICAgIHN1cFxuICAgICAgZm9udC1zaXplOjEuNzVyZW1cblxuICAgICAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICAgICAgdG9wOiAtMC4yNWVtXG5cbi8vIEJhbm5lciBTdGFuZGFyZCAtIFRoaXMgaXMgZm91bmQgb24gdGhlIG1ham9yaXR5IG9mIHRoZSBpbnRlcm5hbCBwYWdlc1xuLmJhbm5lci1zdGFuZGFyZFxuICBiYWNrZ3JvdW5kOiAkZ3JlZW5cbiAgY29sb3I6ICR3aGl0ZVxuICBkaXNwbGF5OiB0YWJsZVxuICBoZWlnaHQ6IGF1dG9cblxuICAvLyBHZXQgcmlkIG9mIHdlaXJkIHNwYWNlIGJlbG93IGltYWdlIGluIHRoZSBiYW5uZXJzXG4gIGltZ1xuICAgIGRpc3BsYXk6IGJsb2NrXG5cbiAgJl9fYm94XG4gICAgcGFkZGluZzogMXJlbSAycmVtXG5cbiAgJl9faGVhZGluZ1xuICAgIGNvbG9yOiAkd2hpdGVcblxuICAmX190ZXh0XG5cbiAgJl9fbWVkaWFcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2xhdGVcblxuICAvLyBUaGlzIGlzIGZvdW5kIG9uIHRoZSBBcHByb2FjaCBQYWdlXG4gICZfX21lZGlhLWFwcHJvYWNoXG4gICAvLyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1hZ2VzL21lZXRpbmcuanBnKVxuICAgLy8gYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyXG4gICAvLyBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyXG5cbiAgICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgICAgaGVpZ2h0OiAzMDBweFxuXG4gIC8vIFRoaXMgaXMgZm91bmQgb24gdGhlIExlYWRlcnNoaXAgcGFnZVxuICAmX19tZWRpYS1sZWFkZXJzaGlwXG4gICAvLyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1hZ2VzL3Blb3BsZS5qcGcpXG4gICAvLyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXJcbiAgIC8vIGJhY2tncm91bmQtc2l6ZTogY292ZXJcblxuICAgICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgICBoZWlnaHQ6IDMwMHB4XG5cbi8vIEJhbm5lciBQYW5vcmFtYSAtIFRoaXMgaXMgZm91bmQgb24gdGhlIE5ld3MgcGFnZVxuLmJhbm5lci1wYW5vcmFtYVxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1hZ2VzL3RyZWVzLmpwZylcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyXG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXJcbiAgaGVpZ2h0OiAyNTVweFxuIiwiLmNhcmQtZGlwdGljXG4gIGRpc3BsYXk6IHRhYmxlXG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAkYm9yZGVyQ29sb3JcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRib3JkZXJDb2xvclxuXG4gICtyZXNwb25zaXZlLXN0YWNrXG5cbiAgJl9fYm94XG4gICAgZGlzcGxheTogdGFibGUtY2VsbFxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGVcblxuICAgIHBhZGRpbmc6IDJyZW0gMXJlbVxuXG4gICAgK21lZGlhKFwiPnRhYmxldFwiKVxuICAgICAgcGFkZGluZzogMnJlbSAxcmVtIDJyZW0gMnJlbVxuXG4gICAgJjpudGgtY2hpbGQoMilcbiAgICAgICttZWRpYShcIj50YWJsZXRcIilcbiAgICAgICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAkYm9yZGVyQ29sb3JcbiAgICAgICAgcGFkZGluZzogMnJlbSAycmVtIDJyZW0gMXJlbVxuXG4gICZfX2hlYWRpbmdcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXJcblxuICAmX19tZWRpYVxuICAgIG1hcmdpbi1ib3R0b206IDJyZW1cblxuICAmX190ZXh0XG4gICAgdGV4dC1hbGlnbjogY2VudGVyXG4gICAgbWFyZ2luLWJvdHRvbTogMnJlbVxuXG4gIHVsXG4gICAgbGlzdC1zdHlsZTogbm9uZVxuICAgIHRleHQtYWxpZ246IGNlbnRlclxuXG4gICAgbGlcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgICAgcGFkZGluZzogLjVyZW1cbiAgICAgIHdpZHRoOiA0NyVcblxuXG4gICZfX2xpbmtcbiAgICBjb2xvcjogJHNpdGUtdGV4dC1jb2xvci1saW5rXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrXG4gICAgZm9udC1mYW1pbHk6ICRzZXJpZlxuICAgIHBhZGRpbmc6IDAgLjRyZW1cbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlXG4gICAgJjpob3ZlclxuICAgICAgY29sb3I6ICRzaXRlLXRleHQtY29sb3ItbGluay1ob3ZlclxuXG5cbi8vIENhcmQgQmlvIC0gVGhlc2UgYXJlIGZvdW5kIG9uIHRoZSBMZWFkZXJzaGlwIHBhZ2Vcbi5jYXJkLWJpb1xuICBwYWRkaW5nLWJvdHRvbTogMnJlbVxuXG4gICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRjbG91ZFxuICAgIG1hcmdpbi1ib3R0b206IDJyZW1cblxuICAmX19tZWRpYVxuICAgIHZlcnRpY2FsLWFsaWduOiB0b3BcblxuICAgICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgICBtYXJnaW4tYm90dG9tOiAxcmVtXG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXJcblxuICAgIGltZ1xuICAgICAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrXG4gICAgICAgIHdpZHRoOiAzMyVcblxuICAmX19ib3hcbiAgICBwYWRkaW5nLWxlZnQ6IDJyZW1cbiAgICBwYWRkaW5nLXRvcDogMFxuICAgIHZlcnRpY2FsLWFsaWduOiB0b3BcblxuICAgICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgICBwYWRkaW5nOiAwXG5cbiAgJl9faGVhZGluZ1xuICAgIC8vTWl4aW4gY2FuIGJlIGZvdW5kIGluIHR5cG9ncmFwaHlcbiAgICArc3RhbmRhcmQtaGVhZGluZygpXG4gICAgbWFyZ2luLWJvdHRvbToxcmVtO1xuXG4gICZfX3N1YnRpdGxlXG4gICAgY29sb3I6ICRzdG9uZVxuICAgIG1hcmdpbi1ib3R0b206IDhweFxuXG4gICAgaDNcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgIGFcbiAgICAgIGNvbG9yOiAkZ3JlZW5cbiAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4XG4gICAgICBpXG4gICAgICAgIGJvcmRlcjoxcHggc29saWQgJGdyZWVuXG4gICAgICAgIHBhZGRpbmc6IDJweFxuXG4gICZfX3RleHRcblxuICAgICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgICB0ZXh0LWFsaWduOiBsZWZ0XG5cbiAgICAqICsgKlxuICAgICAgbWFyZ2luLXRvcDogMXJlbVxuXG5cbi8vIENhcmQgYXJ0aWNsZSAtIFRoZXNlIGFyZSBmb3VuZCBvbiB0aGUgTmV3cyBhbmQgSW5zaWdodHMgcGFnZVxuLmNhcmQtYXJ0aWNsZVxuXG5cbiAgJl9fYm94XG4gICAgYm94LXNoYWRvdzogMCAxcHggMCAkZ3JlZW5cbiAgICBkaXNwbGF5OiBub25lXG4gICAgK3ZlcnQtcGFkZGluZygxLDEpXG5cbiAgICAqICsgKlxuICAgICAgbWFyZ2luLXRvcDogMXJlbVxuXG4gIGFcbiAgICAmOmhvdmVyXG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmVcblxuICBoMlxuICAgICtzdGFuZGFyZC1oZWFkaW5nKCkgLy9NaXhpbiBjYW4gYmUgZm91bmQgaW4gdHlwb2dyYXBoeVxuICAgICY6aG92ZXJcbiAgICAgIGNvbG9yOiRuaWdodGdyZWVuXG5cbiAgc21hbGxcbiAgICBjb2xvcjogIzY2NlxuICAgIGZvbnQtc2l6ZTogLjc1cmVtXG5cbiAgcFxuXG4ubG9hZGVyX19uYXZcbiAgZGlzcGxheTogdGFibGUtY2VsbFxuICBwYWRkaW5nLXRvcDogMS4yNXJlbVxuXG5cbi5jYXJkLXRyaXB0aWNcbiAgZGlzcGxheTogdGFibGVcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICRib3JkZXJDb2xvclxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJGJvcmRlckNvbG9yXG5cbiAgJl9fYm94XG4gICAgcGFkZGluZzogMnJlbVxuICAgIHZlcnRpY2FsLWFsaWduOiB0b3BcblxuICAgICY6bnRoLWNoaWxkKDIpXG4gICAgICArbWVkaWEoXCI+dGFibGV0XCIpXG4gICAgICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgJGJvcmRlckNvbG9yXG4gICAgICAgIC8vcGFkZGluZzogMnJlbSAxcmVtIDJyZW0gMXJlbVxuXG4gICAgJjpudGgtY2hpbGQoMylcbiAgICAgICttZWRpYShcIj50YWJsZXRcIilcbiAgICAgICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAkYm9yZGVyQ29sb3JcbiAgICAgICAgLy9wYWRkaW5nOiAycmVtIDJyZW0gMnJlbSAxcmVtXG5cbiAgJl9fbWVkaWFcbiAgICAvL2JhY2tncm91bmQtY29sb3I6ICRncmVlblxuICAgIGhlaWdodDogMTUwcHhcbiAgICBvdmVyZmxvdzogaGlkZGVuXG4gICAgbWFyZ2luLWJvdHRvbTogMnJlbVxuXG4gICAgaW1nXG5cbiAgJl9faGVhZGluZy1saW5rXG4gICAgK3NtYWxsLWhlYWRpbmcoKVxuICAgIGNvbG9yOiAkc2l0ZS10ZXh0LWNvbG9yLWxpbmtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXJcblxuICAgICY6aG92ZXJcbiAgICAgIGNvbG9yOiAkc2l0ZS10ZXh0LWNvbG9yLWxpbmstaG92ZXJcblxuICAmX190ZXh0XG4gICAgdGV4dC1hbGlnbjogY2VudGVyXG4iLCIvL1xuLy9DVEFzIC0gQ2FsbCB0byBBY3Rpb24gbW9kdWxlc1xuLy9cblxuLy9Db250YWN0IENUQVxuLy9UaGlzIGlzIGZvdW5kIG9uIHRoZSBob21lcGFnZSBvbmx5IHJpZ2h0IG5vd1xuLmN0YS1jb250YWN0XG4gIGJhY2tncm91bmQtY29sb3I6ICRzbGF0ZVxuICBkaXNwbGF5OiB0YWJsZVxuICB3aWR0aDogMTAwJTtcblxuICAmX19ib3hcbiAgICBwYWRkaW5nOiAycmVtXG5cbiAgJl9fYm94Om50aC1jaGlsZCgyKVxuICAgIHBhZGRpbmc6IDJyZW0gMFxuXG5cbiAgJl9fdGV4dFxuICAgIG1hcmdpbjogMFxuICAgIHBhZGRpbmc6IDAgMy41cmVtIDAgMnJlbVxuXG4gICAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICAgIHBhZGRpbmc6IDBcblxuICAmX19idXR0b25cbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgICBtYXJnaW46IDAgMnJlbSAwIDBcblxuICAgICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgICBtYXJnaW46IDBcblxuXG4vL1ZpZGVvIHRlYXNlciBDVEFcbi8vVGhpcyBpcyBmb3VuZCBvbiB0aGUgaG9tZXBhZ2Ugb25seSByaWdodCBub3dcbi5jdGEtdGVhc2VyXG4gIGRpc3BsYXk6IHRhYmxlXG4gIHBhZGRpbmc6IDFyZW0gMnJlbVxuXG4gIHZpZGVvXG4gICAgd2lkdGg6IDEwMCVcbiAgICBoZWlnaHQ6IDEwMCVcblxuICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgIGZsZXgtZmxvdzogY29sdW1uXG5cbiAgJl9fYm94XG4gICAgcGFkZGluZy1yaWdodDogMnJlbVxuXG4gICAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICAgIHBhZGRpbmc6IDBcblxuICAmX19oZWFkaW5nXG5cbiAgJl9fdGV4dFxuICAgIG1hcmdpbi1ib3R0b206IDJyZW1cblxuXG4gICZfX21lZGlhXG4gICAgaGVpZ2h0OiAzMDBweFxuICAgIG92ZXJmbG93OiBoaWRkZW5cblxuICAgICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgICBoZWlnaHQ6IGF1dG9cbiAgICAgIG1hcmdpbi10b3A6IDJyZW1cblxuXG4vL0NlbnRlcmVkIENUQVxuLy9UaGlzIGlzIGZvdW5kIG9uIHRoZSBob21lcGFnZSBvbmx5IHJpZ2h0IG5vd1xuLmN0YS1jZW50ZXJcbiAgcGFkZGluZzogMnJlbVxuICB0ZXh0LWFsaWduOiBjZW50ZXJcblxuICAmX19oZWFkaW5nXG5cbiAgJl9fdGV4dFxuICAgIHBhZGRpbmc6IDAgOHJlbVxuICAgIG1hcmdpbi1ib3R0b206IDJyZW1cblxuICAgICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgICBwYWRkaW5nOiAwXG5cbiAgJl9fYnV0dG9uXG5cblxuXG4vL1N1YnNjcmliZSBDVEEgLSBUaGlzIGlzIGZvdW5kIGF0IHRoZSB0b3Agb2YgdGhlIGZvb3RlclxuLmN0YS1zdWJzY3JpYmVcbiAgYmFja2dyb3VuZC1jb2xvcjogJGdyZWVuXG4gIGNvbG9yOiAkd2hpdGVcbiAgK3ZlcnQtcGFkZGluZygxLDEuNSlcblxuICAmX19oZWFkaW5nXG4gICAgY29sb3I6ICR3aGl0ZVxuICAgIHRleHQtYWxpZ246IGNlbnRlclxuXG4gICZfX2JveFxuICAgIGRpc3BsYXk6IHRhYmxlXG4gICAgbWFyZ2luOiAwIGF1dG9cbiAgICB3aWR0aDogNzUlXG5cbiAgLy8gVE9ETyB1c2UgY29sIGNsYXNzIGluc3RlYWQgZm9yIHdpZHRoXG4gICZfX2lucHV0LWFkZC1vblxuXG5cbiAgJl9faW5wdXRcbiAgICBwYWRkaW5nOiAuOXJlbVxuICAgIHdpZHRoOiAxMDAlXG5cbiAgJl9fYnV0dG9uXG4gICAgYm9yZGVyOiAxcHggc29saWQgJHdoaXRlXG4gICAgY29sb3I6ICR3aGl0ZVxuICAgIGZvbnQtc2l6ZTogMS41cmVtXG4gICAgbWFyZ2luLWxlZnQ6IDFyZW1cbiAgICB3aWR0aDogMTAwJVxuICAgIHRyYW5zaXRpb246IGFsbCAuMnMgZWFzZVxuXG4gICAgJjpob3ZlclxuICAgICAgLypUaGVzZSB3aWxsIHRyYW5zaXRpb24gb24gaG92ZXJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICR3aGl0ZVxuICAgICAgY29sb3I6ICRncmVlblxuXG4gICAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICAgIG1hcmdpbjogMXJlbSAwIDAgMFxuXG4gICZfX21lc3NhZ2VcbiAgICBkaXNwbGF5OiBub25lXG4gICAgcGFkZGluZy10b3A6IDIuNXJlbVxuXG4gICZfX2Vycm9yXG4gICAgZGlzcGxheTogbm9uZVxuICAgIHBhZGRpbmctdG9wOiAxcmVtXG5cbiAgICAmLW1zZ1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyXG5cblxuLy9TaWRlYmFyIENUQSAtIFRoaXMgaXMgZm91bmQgb24gaW50ZXJuYWwgcGFnZXMgb25seVxuLmN0YS1zaWRlYmFyXG4gIHBhZGRpbmc6IDFyZW0gMCAwIDVyZW1cbiAgdmVydGljYWwtYWxpZ246IHRvcFxuXG4gICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgcGFkZGluZzogM3JlbSAycmVtXG5cbiAgJl9fbWVkaWFcbiAgICAvL2hlaWdodDogMTgwcHhcbiAgICAvL292ZXJmbG93OiBoaWRkZW5cblxuICAgICttZWRpYShcIjw9dGFibGV0XCIpXG5cblxuICAgIGltZ1xuXG4gICZfX2hlYWRpbmdcbiAgICBmb250LXNpemU6IDEuMjVyZW1cbiAgICArdmVydC1tYXJnaW4oLjUsLjUpXG5cbiAgJl9fdGV4dFxuXG4gICZfX2J1dHRvblxuICAgIG1hcmdpbi10b3A6IDFyZW1cblxuLy9BZGQgc29tZSBzcGFjaW5nIHdoZW4gdGhlcmUncyBtdWx0aXBsZSBzaWRlYmFyIGl0ZW1zXG4uY3RhLXNpZGViYXJfX2J1dHRvbiArIC5jdGEtc2lkZWJhcl9faGVhZGluZyxcbi5jdGEtc2lkZWJhcl9fdGV4dCArIC5jdGEtc2lkZWJhcl9faGVhZGluZ1xuICBtYXJnaW4tdG9wOiAycmVtXG5cblxuXG4vL1NvY2lhbCBDVEEgLSBUaGVzZSBhcmUgY3VycmVudGx5IGZvdW5kIGF0IHRoZSBib3R0b20gb2YgdGhlIGJsb2cgcG9zdHNcbi5jdGEtc29jaWFsXG4gIHBhZGRpbmctbGVmdDogMXJlbVxuXG4gIC5pY29uXG4gICAgZmlsbDogJGdyZWVuXG5cbiAgICAmOmhvdmVyXG4gICAgICBmaWxsOiAkZ3JhcGhpdGVcblxuICBhXG4gICAgJjpob3ZlclxuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lXG4iLCIvL0Zvb3RlclxuJGZvb3Rlci1oZWFkZXItbmF2OiBUcmVidWNoZXQgTVNcblxuZm9vdGVyXG5cdHBhZGRpbmctYm90dG9tOiA1cmVtXG5cblx0K21lZGlhKFwiPD10YWJsZXRcIilcblx0XHRwYWRkaW5nOiAwXG5cblxuLmZvb3Rlci1jb3B5cmlnaHRcblx0Ym9yZGVyLXRvcDogMXB4IHNvbGlkICRjbG91ZFxuXHRkaXNwbGF5OiB0YWJsZVxuXHRwYWRkaW5nOiAycmVtXG5cdHdpZHRoOiAxMDAlXG5cblx0K21lZGlhKFwiPD10YWJsZXRcIilcblx0XHRwYWRkaW5nOiAycmVtIDAgMCAwXG5cdFx0ZGlzcGxheTogYmxvY2tcblxuXHQmX19sb2dvLWJveFxuXG5cdFx0LmxvZ29cblx0XHRcdHdpZHRoOiA1MDBweFxuXG5cdFx0XHQrbWVkaWEoXCI8PXRhYmxldFwiKVxuXHRcdFx0XHRkaXNwbGF5OiBpbmxpbmUtYmxvY2tcblx0XHRcdFx0d2lkdGg6IGF1dG9cblxuXHRcdFx0XHQubG9nb19fc3RhY2tlZFxuXHRcdFx0XHRcdGRpc3BsYXk6IGlubGluZS1ibG9ja1xuXHRcdFx0XHRcdHdpZHRoOiAyNTBweFxuXG5cblx0Jl9fYm94XG5cdFx0dGV4dC1hbGlnbjogcmlnaHRcblxuXHRcdCttZWRpYShcIj49dGFibGV0XCIsIFwiPj1kZXNrdG9wXCIpXG5cdFx0XHR0ZXh0LWFsaWduOiByaWdodFxuXG5cdFx0c21hbGxcblx0XHRcdGRpc3BsYXk6IGJsb2NrXG5cdFx0XHRmb250LXNpemU6IDE0cHhcblx0XHRcdHBhZGRpbmctcmlnaHQ6IC41cmVtXG5cblxuXHRcdFx0K21lZGlhKFwiPj10YWJsZXRcIiwgXCI+PWRlc2t0b3BcIilcblx0XHRcdFx0Zm9udC1zaXplOiAxMnB4XG5cdFx0XHRcdGRpc3BsYXk6IGlubGluZS1ibG9ja1xuXG5cdFx0XHRcdCY6OmJlZm9yZVxuXHRcdFx0XHQgIGNvbnRlbnQ6ICd8J1xuXG5cdFx0XHRcdCY6bnRoLWNoaWxkKDEpXG5cdFx0XHRcdCAgJjo6YmVmb3JlXG5cdFx0XHRcdCAgICBjb250ZW50OiAnJ1xuXG5cdFx0Lm5hdi1taW5vclxuXHRcdFx0bGlcblx0XHRcdCAgYVxuXHRcdFx0ICAgIGZvbnQtc2l6ZTogMTRweFxuXHRcdFx0ICAgICttZWRpYShcIj49dGFibGV0XCIsIFwiPj1kZXNrdG9wXCIpXG5cdFx0XHQgICAgICBmb250LXNpemU6IDEycHhcblxuLmZvb3Rlci1kaXNjbGFpbWVyXG5cdHRleHQtYWxpZ246IGNlbnRlclxuXHR3aWR0aDogMTAwJVxuXG5cdCZfX2JveFxuXHRcdGJvcmRlcjogMXB4IHNvbGlkICRmb290ZXItdGV4dFxuXHRcdGRpc3BsYXk6IGlubGluZS1ibG9ja1xuXHRcdHRleHQtYWxpZ246IGNlbnRlclxuXHRcdHBhZGRpbmc6IDIwcHhcblx0XHRtYXJnaW46IDUwcHggYXV0byAxMHB4XG5cblx0XHQrbWVkaWEoXCI+PWRlc2t0b3BcIilcblx0XHQgIHBhZGRpbmc6IDIwcHggMTAwcHhcblxuXHR1bFxuXHRcdEBleHRlbmQgJW1lbnVcblx0XHRkaXNwbGF5OiB0YWJsZVxuXHRcdG1hcmdpbjogMCBhdXRvXG5cblx0XHRsaVxuXHRcdFx0ZGlzcGxheTogdGFibGUtY2VsbFxuXHRcdFx0Ym9yZGVyOiAxcHggc29saWQgI0NDQ0NDQ1xuXHRcdFx0Ym9yZGVyLXJpZ2h0OiBub25lXG5cdFx0XHRib3JkZXItbGVmdC1zdHlsZTogZGFzaGVkXG5cdFx0XHRtYXJnaW46IDAgMTBweFxuXHRcdFx0cGFkZGluZzogLjVyZW1cblx0XHRcdCY6bGFzdC1jaGlsZFxuXHRcdFx0ICBib3JkZXItcmlnaHQ6IDFweCAjQ0NDIHNvbGlkXG5cdFx0XHQmOmZpcnN0LWNoaWxkXG5cdFx0XHQgIGJvcmRlci1sZWZ0LXN0eWxlOiBzb2xpZFxuXG5cdGg2LCBwLCB1bFxuXHRcdGZvbnQtc2l6ZTogMTRweFxuXHRcdG1hcmdpbi1ib3R0b206IDFyZW1cblxuXHRcdCttZWRpYShcIj49dGFibGV0XCIsIFwiPj1kZXNrdG9wXCIpXG5cdFx0XHRmb250LXNpemU6IDEycHhcbiIsIlxuQGtleWZyYW1lcyBmYWRlSW5cbiAgZnJvbVxuICAgIG9wYWNpdHk6IDBcbiAgdG9cbiAgICBvcGFjaXR5OiAxXG5cbi5oZWFkZXJfX2xvZ28tYm94XG4gIGJhY2tncm91bmQtY29sb3I6ICR3aGl0ZVxuICBib3JkZXItbGVmdDogMXB4IHNvbGlkICRib3JkZXJDb2xvclxuICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAkYm9yZGVyQ29sb3JcbiAgbWFyZ2luOiAwIGF1dG9cbiAgbWF4LXdpZHRoOiAxMjAwcHhcblxuLy8gRm9yIElFOVxuLm5vLWNzc2FuaW1hdGlvbnMgLmhlYWRlcl9fbG9nby1ib3hcbiAgcGFkZGluZy10b3A6IDBcblxuLmhlYWRlcl9fbG9nb1xuICBiYWNrZ3JvdW5kOiAkd2hpdGVcblxuXG4ubG9nb1xuICBkaXNwbGF5OiBibG9ja1xuICBwYWRkaW5nOiAwcmVtIDAgMHJlbSAycmVtXG4gIHdpZHRoOiA2MDBweFxuXG4gICttZWRpYShcIjw5MDBweFwiKVxuICAgIHdpZHRoOiA0MDBweFxuXG4gICttZWRpYShcIjw1MDBweFwiKVxuICAgIHBhZGRpbmc6IDFyZW1cbiAgICB3aWR0aDogMzAwcHhcblxuLy8gRm9yIElFOVxuLm5vLWNzc2FuaW1hdGlvbnMgLmxvZ29cbiAgaGVpZ2h0OiA2OHB4XG4gIHBhZGRpbmc6IDAgMXJlbVxuXG5cbnN2Z1xuXG4gIHBhdGgsIHBvbHlnb25cbiAgICBmaWxsOiAkZ3JlZW5cblxuICAmOmhvdmVyIHBhdGgsXG4gICY6aG92ZXIgcG9seWdvblxuICAgIG9wYWNpdHk6IC43XG4gICAgdHJhbnNpdGlvbjogZmlsbCAwLjJzIGVhc2VcbiAgICBmaWxsLW9wYWNpdHk6IDAuN1xuXG4ubG9nb19fc3RyZXRjaGVkXG4gIGRpc3BsYXk6IGJsb2NrXG5cbiAgK21lZGlhKFwiPDkwMHB4XCIpXG4gICAgZGlzcGxheTogbm9uZVxuXG4ubG9nb19fc3RhY2tlZFxuICBkaXNwbGF5OiBub25lXG5cbiAgK21lZGlhKFwiPDkwMHB4XCIpXG4gICAgZGlzcGxheTogYmxvY2tcblxuXG4vLyAyNSBwaWVjZXNcbi5sb2dvX19nbG9iZVxuICBwYXRoXG4gIC8vTG9nbyBMb2FkIEFuaW1hdGlvblxuICAvLyAgIG9wYWNpdHk6IDBcbiAgLy8gICBhbmltYXRpb246IGZhZGVJbiBlYXNlLWluIDFcbiAgLy8gICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkc1xuICAvLyAgIGFuaW1hdGlvbi1kdXJhdGlvbjogLjVzXG5cbiAgLy8gcGF0aDpudGgtY2hpbGQoMSlcbiAgLy8gICBhbmltYXRpb24tZGVsYXk6IDAuMXNcblxuICAvLyBwYXRoOm50aC1jaGlsZCgyKVxuICAvLyAgIGFuaW1hdGlvbi1kZWxheTogMC4xMXNcblxuICAvLyBwYXRoOm50aC1jaGlsZCgzKVxuICAvLyAgIGFuaW1hdGlvbi1kZWxheTogMC4yMnNcblxuICAvLyBwYXRoOm50aC1jaGlsZCg0KVxuICAvLyAgIGFuaW1hdGlvbi1kZWxheTogMC4xM3NcblxuICAvLyBwYXRoOm50aC1jaGlsZCg1KVxuICAvLyAgIGFuaW1hdGlvbi1kZWxheTogMC4xNHNcblxuICAvLyBwYXRoOm50aC1jaGlsZCg2KVxuICAvLyAgIGFuaW1hdGlvbi1kZWxheTogMC4xNXNcblxuICAvLyBwYXRoOm50aC1jaGlsZCg3KVxuICAvLyAgIGFuaW1hdGlvbi1kZWxheTogMC4xNnNcblxuICAvLyBwYXRoOm50aC1jaGlsZCg4KVxuICAvLyAgIGFuaW1hdGlvbi1kZWxheTogMC4zN3NcblxuICAvLyBwYXRoOm50aC1jaGlsZCg5KVxuICAvLyAgIGFuaW1hdGlvbi1kZWxheTogMC4xOHNcblxuICAvLyBwYXRoOm50aC1jaGlsZCgxMClcbiAgLy8gICBhbmltYXRpb24tZGVsYXk6IDAuMTlzXG5cbiAgLy8gcGF0aDpudGgtY2hpbGQoMTEpXG4gIC8vICAgYW5pbWF0aW9uLWRlbGF5OiAwLjIwc1xuXG4gIC8vIHBhdGg6bnRoLWNoaWxkKDEyKVxuICAvLyAgIGFuaW1hdGlvbi1kZWxheTogMC4yMXNcblxuICAvLyBwYXRoOm50aC1jaGlsZCgxMylcbiAgLy8gICBhbmltYXRpb24tZGVsYXk6IDAuMTJzXG5cbiAgLy8gcGF0aDpudGgtY2hpbGQoMTQpXG4gIC8vICAgYW5pbWF0aW9uLWRlbGF5OiAwLjIzc1xuXG4gIC8vIHBhdGg6bnRoLWNoaWxkKDE1KVxuICAvLyAgIGFuaW1hdGlvbi1kZWxheTogMC4zNHNcblxuICAvLyBwYXRoOm50aC1jaGlsZCgxNilcbiAgLy8gICBhbmltYXRpb24tZGVsYXk6IDAuMjVzXG5cblxuLm5vLWNzc2FuaW1hdGlvbnMgLmxvZ29fX2dsb2JlXG4gIHBhdGhcbiAgICBmaWxsOiAkZ3JlZW5cbiAgICBvcGFjaXR5OiAxXG5cbi8vIE90aGVyIGNsYXNzZXMgZm9yIGFuaW1haXRvbiBtYXliZVxuLy8gLmxvZ29fX3RleHRcbi8vXG4vLyAubG9nb19fY29tbWVyY2Vcbi8vICAgcGF0aCwgcG9seWdvblxuLy9cbi8vXG4vLyAubG9nb19fdHJ1c3Rcbi8vICAgcGF0aCwgcG9seWdvblxuLy9cbi8vXG4vLyAubG9nb19fdGFnbGluZVxuLy8gICBwYXRoLCBwb2x5Z29uXG4iLCIvLy0gVGhpcyBjb250YWluZXIgaG9sZCB0aGUgbWFpbiBjb250ZW50IG9uIGVhY2ggcGFnZVxuLy8tIEl0IGlzIGZvdW5kIG9uIGFsbCBpbnRlcm5hbCBwYWdlc1xuXG4vLy0gQWxsIFwiTWFpblwiIGNsYXNzZXMgaGF2ZSBzaGFyZSB0aGVzZSBydWxlc1xuJW1haW5cbiAgZGlzcGxheTogdGFibGVcbiAgcGFkZGluZzogMXJlbSAycmVtXG5cbi5tYWluLXN0YW5kYXJkXG4gIEBleHRlbmQgJW1haW5cbiAgcGFkZGluZy1ib3R0b206IDVyZW1cblxuICAmX19jb250ZW50XG5cbiAgICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgICAgdGV4dC1hbGlnbjogbGVmdFxuXG4gICAgJi5jb2wtNy0xMlxuICAgICAgcGFkZGluZy10b3A6IDEuNXJlbVxuICAgICAgdmVydGljYWwtYWxpZ246IHRvcFxuXG4gICZfX3RleHRcblxuICAgICogKyAqXG4gICAgICBtYXJnaW4tdG9wOiAxcmVtXG5cbiAgICBoMlxuICAgICAgK3N0YW5kYXJkLWhlYWRpbmcoKVxuICAgICAgK3ZlcnQtcGFkZGluZygxLDApXG5cbiAgICAvLyBEZWZhdWx0IHVub3JkZXJlZCBsaXN0cyBpbiBjb250ZW50IGFyZWFzXG4gICAgdWxcbiAgICAgIHBhZGRpbmctbGVmdDogMnJlbVxuICAgICAgbGlzdC1zdHlsZTogZGlzY1xuXG4gICAgICBsaVxuICAgICAgICBtYXJnaW4tdG9wOiAwLjVyZW1cblxuICAgIC8vIERlZmF1bHQgb3JkZXJlZCBsaXN0cyBpbiBjb250ZW50IGFyZWFzXG4gICAgb2xcbiAgICAgIHBhZGRpbmctbGVmdDogMnJlbVxuICAgICAgLy9saXN0LXN0eWxlLXR5cGU6IHVwcGVyLXJvbWFuXG5cbiAgICAvLyBLZWVwIHNtYWxsIGltYWdlcyBmcm9tIGdldHRpbmcgZ2lhbnRcbiAgICBpbWdcbiAgICAgIGhlaWdodDogYXV0b1xuICAgICAgd2lkdGg6IDEwMCVcblxuICAgICAgLy8gR2l2ZSBzbWFsbCBpbWFnZXMgYSBjbGFzcyBvZiAuYXV0byBzbyB0aGV5IGZpdCBjb3JyZWN0bHkuXG4gICAgICAmLmF1dG9cbiAgICAgICAgd2lkdGg6IGF1dG9cblxuXG4vLyBNYWluIGNvbnRlbnQgYmxvY2sgb24gTGVhZGVyc2hpcCBwYWdlXG4ubWFpbi1iaW9zXG4gIGRpc3BsYXk6IHRhYmxlXG4gIHBhZGRpbmc6IDJyZW1cblxuXG4vLyBNYWluIGNvbnRlbnQgYmxvY2sgb24gTmV3cyBwYWdlXG4ubWFpbi1uZXdzXG4gIEBleHRlbmQgJW1haW5cblxuLy9NYWluIGNvbnRlbnQgbG9jYXRpb25zIHRhYmxlXG4uY2l0eS1jb2x1bW5cbiAgd2lkdGg6MTM1cHhcbi5hZGRyZXNzLWNvbHVtblxuICB3aWR0aDozMzVweFxuLnBob25lLWNvbHVtblxuXG4ubG9jYXRpb24tcGhvbmVcbiAgY29sb3I6JG5pZ2h0Z3JlZW5cbiAgJjpob3ZlclxuICAgIGNvbG9yOiRncmVlblxuXG5cbi8vIE1haW4gY29udGVudCBibG9jayBvbiBCbG9nIFBvc3QgcGFnZVxuLm1haW4tcG9zdFxuICBAZXh0ZW5kICVtYWluXG5cbiAgJl9fdGV4dFxuXG4gICAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICAgIHRleHQtYWxpZ246IGxlZnRcblxuICAgICogKyAqXG4gICAgICBtYXJnaW4tdG9wOiAxcmVtXG5cbiAgICBoMlxuICAgICAgK3N0YW5kYXJkLWhlYWRpbmcoKVxuXG4gICAgaDNcbiAgICAgICttaW5vci1oZWFkaW5nKClcblxuICAgIGZpZ2NhcHRpb25cbiAgICAgIGNvbG9yOiAkZ3JhcGhpdGVcbiAgICAgIGZvbnQtc2l6ZTogLjc1cmVtXG4gICAgICBtYXJnaW4tdG9wOiAwXG5cbiAgICBibG9ja3F1b3RlXG4gICAgICArYmxvY2txdW90ZSgpXG5cblxuLmJyZWFkY3J1bWJcbiAgcGFkZGluZy1ib3R0b206IDEuNXJlbVxuICBmb250LXNpemU6MTRweFxuXG4gIGFcbiAgICBjb2xvcjokZ3JlZW5cbiAgICAmOmhvdmVyXG4gICAgICBjb2xvcjokbmlnaHRncmVlblxuICBzcGFuXG4gICAgY29sb3I6JHN0b25lXG4iLCIuZm9ybS1zdGFuZGFyZFxuICBtYXJnaW4tdG9wOiAycmVtXG5cbiAgaW5wdXQsXG4gIGlucHV0W3R5cGU9XCJlbWFpbFwiXSxcbiAgaW5wdXRbdHlwZT1cIm51bWJlclwiXSxcbiAgaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdLFxuICBpbnB1dFt0eXBlPVwic2VhcmNoXCJdLFxuICBpbnB1dFt0eXBlPVwidGVsXCJdLFxuICBpbnB1dFt0eXBlPVwidGV4dFwiXSxcbiAgaW5wdXRbdHlwZT1cInVybFwiXSxcbiAgaW5wdXRbdHlwZT1cImNvbG9yXCJdLFxuICBpbnB1dFt0eXBlPVwiZGF0ZVwiXSxcbiAgaW5wdXRbdHlwZT1cIm5hbWVcIl0sXG4gIGlucHV0W3R5cGU9XCJkYXRldGltZVwiXSxcbiAgaW5wdXRbdHlwZT1cImRhdGV0aW1lLWxvY2FsXCJdLFxuICBpbnB1dFt0eXBlPVwibW9udGhcIl0sXG4gIGlucHV0W3R5cGU9XCJ0aW1lXCJdLFxuICBpbnB1dFt0eXBlPVwid2Vla1wiXSxcbiAgdGV4dGFyZWFcbiAgXHRjb2xvcjogJHNpdGUtdGV4dC1jb2xvclxuICBcdGJvcmRlcjogMXB4IHNvbGlkICRib3JkZXJDb2xvclxuICAgIGJveC1zaXppbmc6IGNvbnRlbnQtYm94XG4gIFx0Ym9yZGVyLXJhZGl1czogMFxuICAgIGZvbnQtc2l6ZTogMXJlbVxuICBcdHBhZGRpbmc6IDFyZW1cbiAgXHRkaXNwbGF5OiBibG9ja1xuICBcdHdpZHRoOiAxMDAlXG5cblxuICBsYWJlbFxuICAgIGRpc3BsYXk6IGJsb2NrXG5cbiAgaW5wdXRbdHlwZT1cImJ1dHRvblwiXSxcbiAgaW5wdXRbdHlwZT1cInJlc2V0XCJdLFxuICBpbnB1dFt0eXBlPVwic3VibWl0XCJdXG4gICAgLy8gYW55IGRlZmF1bHQgYnV0dG9uIHN0eWxlcyB0aGF0IG5lZWQgdG8gYmUgZGlmZmVyZW50IG9uIGZvcm1zIGdvIGhlcmVcbiAgICBkaXNwbGF5OiBibG9ja1xuXG5cbiAgJl9fY2hlY2tib3hcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgICBmbG9hdDogbGVmdCAhaW1wb3J0YW50XG4gICAgd2lkdGg6IGF1dG8gIWltcG9ydGFudFxuXG4gICZfX2NoZWNrYm94ICsgbGFiZWxcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgICBmbG9hdDogbGVmdCAhaW1wb3J0YW50XG4gICAgbWFyZ2luOiAxMHB4IDEwcHggMjBweCAxMHB4ICFpbXBvcnRhbnRcblxuICAuc2VsZWN0Ym94XG4gICAgYmFja2dyb3VuZDogJHdoaXRlXG4gICAgYm9yZGVyLXJhZGl1czogMFxuICAgIGN1cnNvcjogcG9pbnRlclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZVxuICAgIGhlaWdodDogNDhweFxuXG4gICAgJjo6YWZ0ZXJcbiAgICAgIGNvbG9yOiAjY2NjXG4gICAgICBjb250ZW50OiAn4pa+J1xuICAgICAgcG9zaXRpb246IGFic29sdXRlXG4gICAgICB0b3A6IDFyZW1cbiAgICAgIHJpZ2h0OiAuNXJlbVxuICAgICAgd2lkdGg6IDFyZW1cbiAgICAgIGhlaWdodDogMXJlbVxuXG5cbiAgc2VsZWN0XG4gICAgYmFja2dyb3VuZDogJHdoaXRlXG4gICAgYm94LXNoYWRvdzogbm9uZVxuICAgIGJvcmRlci1yYWRpdXM6IDBcbiAgICBib3JkZXI6IDFweCBzb2xpZCAkYm9yZGVyQ29sb3JcbiAgICBjb2xvcjogJHN0b25lXG4gICAgY3Vyc29yOiBwb2ludGVyXG4gICAgZGlzcGxheTogYmxvY2tcbiAgICBmb250LXNpemU6IDFyZW1cbiAgICBoZWlnaHQ6IDYwcHhcbiAgICBwb3NpdGlvbjogcmVsYXRpdmVcblxuICAgIHBhZGRpbmctbGVmdDogMXJlbVxuICAgIHdpZHRoOiAxMDAlXG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmVcbiAgICAtbW96LWFwcGVhcmFuY2U6IG5vbmVcbiAgICBhcHBlYXJhbmNlOiBub25lXG5cblxuLmNvbnRhY3QtdXNfX2J1dHRvblxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2xhdGVcbiAgbWF4LXdpZHRoOjE4M3B4XG4gIGNsZWFyOmJvdGhcblxuXG4vLyBJRTkgb3ZlcnJpZGVcbi8vIFVzaW5nIG1vZGVybml6ciBmb3IgZmVhdHVyZSBkZXRlY3Rpb25cbi5uby1jc3NncmFkaWVudHMgLnNlbGVjdGJveDo6YWZ0ZXJcbiAgei1pbmRleDogLTNcbiJdfQ== */