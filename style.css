@charset "UTF-8";
article, aside, details, figcaption, figure, footer, header, hgroup, nav, section, summary {
  display: block; }

audio, canvas, video {
  display: inline-block; }

audio:not([controls]) {
  display: none;
  height: 0; }

[hidden], template {
  display: none; }

html {
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%; }

body {
  margin: 0; }

a {
  background: transparent; }
  a:hover, a:active {
    outline: 0; }

/* @if \$normalize_headings == true {
    h1 {
        font-size: \$h1_font_size;
        margin: \$h1_margin;
    }

    h2 {
        font-size: \$h2_font_size;
        margin: \$h2_margin;
    }

    h3 {
        font-size: \$h3_font_size;
        margin: \$h3_margin;
    }

    h4 {
        font-size: \$h4_font_size;
        margin: \$h4_margin;
    }

    h5 {
        font-size: \$h5_font_size;
        margin: \$h5_margin;
    }

    h6 {
        font-size: \$h6_font_size;
        margin: \$h6_margin;
    }
} */
abbr[title] {
  border-bottom: 1px dotted; }

b, strong {
  font-weight: bold; }

dfn {
  font-style: italic; }

mark {
  background: #ff0;
  color: #000; }

code, kbd, pre, samp {
  font-family: monospace, serif;
  font-size: 1em; }

pre {
  white-space: pre;
  white-space: pre-wrap;
  word-wrap: break-word; }

q {
  quotes: "\201C" "\201D" "\2018" "\2019"; }

q:before, q:after {
  content: '';
  content: none; }

/* /small {
    font-size: 80%;
} */
sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

img {
  border: 0; }

svg:not(:root) {
  overflow: hidden; }

figure {
  margin: 0; }

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

legend {
  border: 0;
  padding: 0;
  white-space: normal; }

button, input, select, textarea {
  font-family: inherit;
  font-size: 100%;
  margin: 0;
  vertical-align: baseline; }

button, input {
  line-height: normal; }

button, select {
  text-transform: none; }

button, html input[type="button"], input[type="reset"], input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer; }

button[disabled], input[disabled] {
  cursor: default; }

button::-moz-focus-inner, input::-moz-focus-inner {
  border: 0;
  padding: 0; }

textarea {
  overflow: auto;
  vertical-align: top; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

input[type="search"] {
  -webkit-appearance: textfield;
  -moz-box-sizing: content-box;
  box-sizing: content-box; }
  input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration {
    -webkit-appearance: none; }
input[type="checkbox"], input[type="radio"] {
  -moz-box-sizing: border-box;
       box-sizing: border-box;
  padding: 0; }

html {
  font-size: 16px;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased; }

body {
  color: #333;
  line-height: 1.5;
  font-family: News Cycle, sans-serif;
  -moz-background-size: auto 24px;
       background-size: auto 24px;
  margin: 0; }

[class*='__heading'] {
  color: #267e64;
  font-family: Playfair Display, serif;
  font-size: 40px;
  font-size: 2.5rem;
  font-weight: 400;
  line-height: 1;
  margin-bottom: 32px;
  margin-bottom: 2rem; }

[class*=__button], input[type="button"], input[type="reset"] {
  border: 1px solid #267e64;
  cursor: pointer;
  display: inline-block;
  font-family: Playfair Display, serif;
  font-size: 19px;
  font-size: 1.2rem;
  font-style: italic;
  text-align: center;
  padding: 12px 48px;
  padding: .75rem 3rem;
  text-decoration: none;
  /*Items for transition */
  background-color: transparent;
  color: #267e64;
  /*Transition settings */
  -webkit-transition: all .2s ease;
     -moz-transition: all .2s ease;
       -o-transition: all .2s ease;
          transition: all .2s ease; }
  [class*=__button]:hover, input[type="button"]:hover, input[type="reset"]:hover {
    /*These will transition on hover */
    background-color: #267e64;
    color: #fff;
    text-decoration: none; }

.loader__button.disabled {
  background-color: #e5e6e7;
  color: #267e64;
  cursor: default;
  opacity: .3;
  filter: alpha(opacity=30); }

.clearfix:after {
  content: "";
  display: table;
  clear: both; }

img, iframe, embed {
  width: 100%; }

.container {
  background-color: #fff;
  border-left: 1px solid #ccc;
  border-right: 1px solid #ccc;
  margin: 0 auto;
  max-width: 1200px; }

[class*='col-'] {
  display: table-cell;
  vertical-align: middle; }

.col-2-12 {
  width: 16.66667%; }

.col-3-12 {
  width: 25%; }

.col-4-12 {
  width: 33.33333%; }

.col-5-12 {
  width: 41.66667%; }

.col-6-12 {
  width: 50%; }

.col-7-12 {
  width: 58.33333%; }

.col-8-12 {
  width: 66.66667%; }

.col-9-12 {
  width: 75%; }

.col-10-12 {
  width: 83.33333%; }

.col-11-12 {
  width: 91.66667%; }

* {
  margin: 0;
  padding: 0;
  -moz-box-sizing: border-box;
       box-sizing: border-box; }
  *:after, *:before {
    -moz-box-sizing: border-box;
         box-sizing: border-box; }

body {
  background-color: #eceee6;
  padding: 0; }

a {
  text-decoration: none;
  color: #267e64; }
  a:hover {
    color: #455652;
    text-decoration: underline; }

table {
  margin: 0 0 1.5em;
  width: 100%; }

tr {
  border-bottom: 1px solid #e5e6e7; }
  tr:nth-child(even) {
    background-color: #f8f8f8; }

td {
  vertical-align: top;
  padding: 10px 5px; }

thead {
  background-color: #e5e6e7; }
  thead th {
    font-weight: 600;
    text-align: left;
    padding: 5px; }

.nav-minor {
  display: block;
  text-align: right; }
  .nav-minor__container {
    background-color: #fff;
    border-left: 1px solid #ccc;
    border-right: 1px solid #ccc;
    margin: 0 auto;
    padding-right: 24px;
    padding-right: 1.5rem;
    padding-top: 16px;
    padding-top: 1rem;
    max-width: 1200px; }
  .nav-minor li {
    display: inline-block; }
    .nav-minor li:after {
      display: inline-block;
      content: ' | ';
      color: #267e64;
      margin: 0 2px 0 4px;
      margin: 0 2px 0 .3rem; }
    .nav-minor li:nth-child(3):after {
      content: ' '; }
    .nav-minor li:last-child a {
      font-weight: bold;
      margin-right: 10px; }
  .nav-minor__link {
    color: #333;
    display: inline-block;
    padding: 0 4px 0;
    padding: 0 .3rem 0; }
    .nav-minor__link:hover {
      color: #267e64; }

.site-map a {
  color: #333; }
  .site-map a:hover {
    color: #267e64; }

a.cd-nav-item:hover img {
  opacity: .7 !important;
  filter: alpha(opacity=70); }
a.cd-nav-item:hover h3 {
  color: #455652 !important; }

input[type="search"]::-ms-clear {
  display: none; }

input[type="search"]::-webkit-search-decoration, input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-results-button, input[type="search"]::-webkit-search-results-decoration {
  display: none; }

/* --------------------------------
 *
 *Main components
 *
 *--------------------------------* */
.cd-main-content, .cd-main-header {
  /* Force Hardware Acceleration in WebKit */
  -webkit-transform: translateZ(0);
     -moz-transform: translateZ(0);
          transform: translateZ(0);
  will-change: transform; }
  .cd-main-content ul, .cd-main-header ul {
    list-style: none; }

.cd-main-content {
  position: relative;
  -webkit-transition: -webkit-transform 0.3s;
     -moz-transition: -moz-transform 0.3s;
       -o-transition: -o-transform 0.3s;
          transition: transform 0.3s; }

.cd-main-header {
  font-family: Playfair Display, serif;
  position: relative;
  -webkit-transition: -webkit-transform 0.3s;
     -moz-transition: -moz-transform 0.3s;
       -o-transition: -o-transform 0.3s;
          transition: transform 0.3s; }

.cd-main-content {
  min-height: 100vh;
  z-index: 2; }

.cd-main-header {
  height: 50px;
  background: #fff;
  z-index: 3;
  border-bottom: 1px solid #e5e6e7; }
  .nav-is-fixed .cd-main-header {
    /* add .nav-is-fixed class to body if you want a fixed navigation on > 1024px */
    position: fixed;
    top: 0;
    left: 0;
    width: 100%; }

.cd-logo {
  position: absolute;
  top: 12px;
  left: 5%; }
  .cd-logo img {
    display: block; }

.cd-header-buttons {
  position: absolute;
  display: inline-block;
  top: 3px;
  right: 5%; }
  .cd-header-buttons li {
    display: inline-block; }

.cd-search-trigger, .cd-nav-trigger {
  position: relative;
  display: block;
  width: 44px;
  height: 44px;
  overflow: hidden;
  white-space: nowrap;
  /* hide text */
  color: transparent;
  z-index: 3; }

.cd-search-trigger:before, .cd-search-trigger:after {
  /* search icon */
  content: '';
  position: absolute;
  -webkit-transition: opacity 0.3s;
     -moz-transition: opacity 0.3s;
       -o-transition: opacity 0.3s;
          transition: opacity 0.3s;
  /* Force Hardware Acceleration in WebKit */
  -webkit-transform: translateZ(0);
     -moz-transform: translateZ(0);
          transform: translateZ(0);
  -webkit-backface-visibility: hidden;
     -moz-backface-visibility: hidden;
          backface-visibility: hidden; }
.cd-search-trigger:before {
  /* lens */
  top: 11px;
  left: 11px;
  width: 18px;
  height: 18px;
  -moz-border-radius: 50%;
       border-radius: 50%;
  border: 3px solid #455652; }
.cd-search-trigger:after {
  /* handle */
  height: 3px;
  width: 8px;
  background: #455652;
  bottom: 14px;
  right: 11px;
  -webkit-transform: rotate(45deg);
     -moz-transform: rotate(45deg);
      -ms-transform: rotate(45deg);
       -o-transform: rotate(45deg);
          transform: rotate(45deg); }
.cd-search-trigger span {
  /* container for the X icon */
  position: absolute;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0; }
.cd-search-trigger span:before, .cd-search-trigger span:after {
  /* close icon */
  content: '';
  position: absolute;
  display: inline-block;
  height: 3px;
  width: 22px;
  top: 50%;
  margin-top: -2px;
  left: 50%;
  margin-left: -11px;
  background: #455652;
  opacity: 0;
  filter: alpha(opacity=0);
  /* Force Hardware Acceleration in WebKit */
  -webkit-transform: translateZ(0);
     -moz-transform: translateZ(0);
          transform: translateZ(0);
  -webkit-backface-visibility: hidden;
     -moz-backface-visibility: hidden;
          backface-visibility: hidden;
  -webkit-transition: opacity 0.3s, -webkit-transform 0.3s;
     -moz-transition: opacity 0.3s, -moz-transform 0.3s;
       -o-transition: opacity 0.3s, -o-transform 0.3s;
          transition: opacity 0.3s, transform 0.3s; }
.cd-search-trigger span:before {
  -webkit-transform: rotate(45deg);
     -moz-transform: rotate(45deg);
      -ms-transform: rotate(45deg);
       -o-transform: rotate(45deg);
          transform: rotate(45deg); }
.cd-search-trigger span:after {
  -webkit-transform: rotate(-45deg);
     -moz-transform: rotate(-45deg);
      -ms-transform: rotate(-45deg);
       -o-transform: rotate(-45deg);
          transform: rotate(-45deg); }
.cd-search-trigger.search-is-visible:before, .cd-search-trigger.search-is-visible:after {
  /* hide search icon */
  opacity: 0;
  filter: alpha(opacity=0); }
.cd-search-trigger.search-is-visible span:before, .cd-search-trigger.search-is-visible span:after {
  /* show close icon */
  opacity: 1;
  filter: alpha(opacity=100); }
.cd-search-trigger.search-is-visible span:before {
  -webkit-transform: rotate(135deg);
     -moz-transform: rotate(135deg);
      -ms-transform: rotate(135deg);
       -o-transform: rotate(135deg);
          transform: rotate(135deg); }
.cd-search-trigger.search-is-visible span:after {
  -webkit-transform: rotate(45deg);
     -moz-transform: rotate(45deg);
      -ms-transform: rotate(45deg);
       -o-transform: rotate(45deg);
          transform: rotate(45deg); }

.cd-nav-trigger:hover {
  color: transparent; }
.cd-nav-trigger span, .cd-nav-trigger span:before, .cd-nav-trigger span:after {
  /* hamburger icon in CSS */
  position: absolute;
  display: inline-block;
  height: 3px;
  width: 24px;
  background: #455652; }
.cd-nav-trigger span {
  /* line in the center */
  position: absolute;
  top: 50%;
  right: 10px;
  margin-top: -2px;
  -webkit-transition: background 0.3s 0.3s;
     -moz-transition: background 0.3s 0.3s;
       -o-transition: background 0.3s 0.3s;
          transition: background 0.3s 0.3s; }
.cd-nav-trigger span:before, .cd-nav-trigger span:after {
  /* other 2 lines */
  content: '';
  right: 0;
  /* Force Hardware Acceleration in WebKit */
  -webkit-transform: translateZ(0);
     -moz-transform: translateZ(0);
          transform: translateZ(0);
  -webkit-backface-visibility: hidden;
     -moz-backface-visibility: hidden;
          backface-visibility: hidden;
  -webkit-transform-origin: 0% 50%;
     -moz-transform-origin: 0% 50%;
      -ms-transform-origin: 0% 50%;
       -o-transform-origin: 0% 50%;
          transform-origin: 0% 50%;
  -webkit-transition: -webkit-transform 0.3s 0.3s;
     -moz-transition: -moz-transform 0.3s 0.3s;
       -o-transition: -o-transform 0.3s 0.3s;
          transition: transform 0.3s 0.3s; }
.cd-nav-trigger span:before {
  /* menu icon top line */
  top: -6px; }
.cd-nav-trigger span:after {
  /* menu icon bottom line */
  top: 6px; }
.cd-nav-trigger.nav-is-visible span {
  /* hide line in the center */
  background: rgba(69, 86, 82, 0); }
.cd-nav-trigger.nav-is-visible span:before, .cd-nav-trigger.nav-is-visible span:after {
  /* keep visible other 2 lines */
  background: #455652; }
.cd-nav-trigger.nav-is-visible span:before {
  -webkit-transform: translateX(4px) translateY(-3px) rotate(45deg);
     -moz-transform: translateX(4px) translateY(-3px) rotate(45deg);
      -ms-transform: translateX(4px) translateY(-3px) rotate(45deg);
       -o-transform: translateX(4px) translateY(-3px) rotate(45deg);
          transform: translateX(4px) translateY(-3px) rotate(45deg); }
.cd-nav-trigger.nav-is-visible span:after {
  -webkit-transform: translateX(4px) translateY(2px) rotate(-45deg);
     -moz-transform: translateX(4px) translateY(2px) rotate(-45deg);
      -ms-transform: translateX(4px) translateY(2px) rotate(-45deg);
       -o-transform: translateX(4px) translateY(2px) rotate(-45deg);
          transform: translateX(4px) translateY(2px) rotate(-45deg); }

.cd-primary-nav {
  right: 0; }

.cd-primary-nav ul {
  right: 20px; }

.cd-primary-nav, .cd-primary-nav ul {
  position: fixed;
  top: 0;
  height: 100%;
  width: 260px;
  background: #455652;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  z-index: 1;
  /* Force Hardware Acceleration in WebKit */
  -webkit-transform: translateZ(0);
     -moz-transform: translateZ(0);
          transform: translateZ(0);
  -webkit-transform: translateX(0);
     -moz-transform: translateX(0);
      -ms-transform: translateX(0);
       -o-transform: translateX(0);
          transform: translateX(0);
  -webkit-transition: -webkit-transform 0.3s;
     -moz-transition: -moz-transform 0.3s;
       -o-transition: -o-transform 0.3s;
          transition: transform 0.3s; }
  .cd-primary-nav a, .cd-primary-nav ul a {
    display: block;
    font-size: 19px;
    font-size: 1.2rem;
    height: 50px;
    line-height: 50px;
    padding: 0 20px;
    color: #fff;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    border-bottom: 1px solid #50645f;
    -webkit-transform: translateZ(0);
       -moz-transform: translateZ(0);
            transform: translateZ(0);
    will-change: transform, opacity;
    -webkit-transition: -webkit-transform 0.3s, opacity 0.3s;
       -moz-transition: -moz-transform 0.3s, opacity 0.3s;
         -o-transition: -o-transform 0.3s, opacity 0.3s;
            transition: transform 0.3s, opacity 0.3s; }
  .cd-primary-nav.is-hidden, .cd-primary-nav ul.is-hidden {
    /* secondary navigations hidden by default */
    -webkit-transform: translateX(100%);
       -moz-transform: translateX(100%);
        -ms-transform: translateX(100%);
         -o-transform: translateX(100%);
            transform: translateX(100%); }
  .cd-primary-nav.moves-out > li > a, .cd-primary-nav ul.moves-out > li > a {
    /* push the navigation items to the left - and lower down opacity - when secondary nav slides in */
    -webkit-transform: translateX(-100%);
       -moz-transform: translateX(-100%);
        -ms-transform: translateX(-100%);
         -o-transform: translateX(-100%);
            transform: translateX(-100%);
    opacity: 0;
    filter: alpha(opacity=0); }

.cd-primary-nav .see-all a {
  /* different style for the See all button on mobile and tablet */
  color: #267e64; }
.cd-primary-nav .cd-nav-gallery .cd-nav-item, .cd-primary-nav .cd-nav-icons .cd-nav-item {
  /* items with picture (or icon) and title */
  height: 80px;
  line-height: 80px; }
  .cd-primary-nav .cd-nav-gallery .cd-nav-item h3, .cd-primary-nav .cd-nav-icons .cd-nav-item h3 {
    overflow: hidden;
    text-overflow: ellipsis; }
.cd-primary-nav .cd-nav-gallery .cd-nav-item img {
  position: absolute;
  display: block;
  height: 40px;
  width: auto;
  left: 20px;
  top: 50%;
  margin-top: -20px; }
.cd-primary-nav .cd-nav-icons .cd-nav-item {
  padding-left: 75px; }
  .cd-primary-nav .cd-nav-icons .cd-nav-item p {
    color: #455652;
    font-size: 20px;
    font-size: 1.3rem;
    /* hide description on small devices */
    display: none; }
  .cd-primary-nav .cd-nav-icons .cd-nav-item:before {
    /* item icon */
    content: '';
    display: block;
    position: absolute;
    left: 20px;
    top: 50%;
    margin-top: -20px;
    width: 40px;
    height: 40px;
    background-repeat: no-repeat;
    background-position: center center;
    -moz-background-size: 40px 40px;
         background-size: 40px 40px; }
  .cd-primary-nav .cd-nav-icons .cd-nav-item.item-1:before {
    background-image: url("/images/line-icon-1.svg"); }
  .cd-primary-nav .cd-nav-icons .cd-nav-item.item-2:before {
    background-image: url("/images/line-icon-2.svg"); }
  .cd-primary-nav .cd-nav-icons .cd-nav-item.item-3:before {
    background-image: url("/images/line-icon-3.svg"); }
  .cd-primary-nav .cd-nav-icons .cd-nav-item.item-4:before {
    background-image: url("/images/line-icon-4.svg"); }
  .cd-primary-nav .cd-nav-icons .cd-nav-item.item-5:before {
    background-image: url("/images/line-icon-5.svg"); }
  .cd-primary-nav .cd-nav-icons .cd-nav-item.item-6:before {
    background-image: url("/images/line-icon-6.svg"); }
  .cd-primary-nav .cd-nav-icons .cd-nav-item.item-7:before {
    background-image: url("/images/line-icon-7.svg"); }
  .cd-primary-nav .cd-nav-icons .cd-nav-item.item-8:before {
    background-image: url("/images/line-icon-8.svg"); }

.has-children > a, .go-back a {
  position: relative; }
  .has-children > a:before, .has-children > a:after, .go-back a:before, .go-back a:after {
    /* arrow icon in CSS - for element with nested unordered lists */
    content: '';
    position: absolute;
    top: 50%;
    margin-top: -1px;
    display: inline-block;
    height: 2px;
    width: 10px;
    background: #5c726d;
    -webkit-backface-visibility: hidden;
       -moz-backface-visibility: hidden;
            backface-visibility: hidden; }
  .has-children > a:before, .go-back a:before {
    -webkit-transform: rotate(45deg);
       -moz-transform: rotate(45deg);
        -ms-transform: rotate(45deg);
         -o-transform: rotate(45deg);
            transform: rotate(45deg); }
  .has-children > a:after, .go-back a:after {
    -webkit-transform: rotate(-45deg);
       -moz-transform: rotate(-45deg);
        -ms-transform: rotate(-45deg);
         -o-transform: rotate(-45deg);
            transform: rotate(-45deg); }

.has-children > a {
  padding-right: 40px; }
  .has-children > a:before, .has-children > a:after {
    /* arrow goes on the right side - children navigation */
    right: 20px;
    -webkit-transform-origin: 9px 50%;
       -moz-transform-origin: 9px 50%;
        -ms-transform-origin: 9px 50%;
         -o-transform-origin: 9px 50%;
            transform-origin: 9px 50%; }

.cd-primary-nav .go-back a {
  padding-left: 40px; }
  .cd-primary-nav .go-back a:before, .cd-primary-nav .go-back a:after {
    /* arrow goes on the left side - go back button */
    left: 20px;
    -webkit-transform-origin: 1px 50%;
       -moz-transform-origin: 1px 50%;
        -ms-transform-origin: 1px 50%;
         -o-transform-origin: 1px 50%;
            transform-origin: 1px 50%; }

.cd-search {
  float: right; }
  .cd-search form {
    position: relative; }
  .cd-search input[type="submit"] {
    background-image: url("/images/search-icon.png");
    background-repeat: no-repeat;
    background-color: transparent;
    display: inline-block;
    text-indent: -99999px;
    height: 22px;
    width: 22px;
    -webkit-appearance: none;
    border: 0;
    position: absolute;
    top: 6px;
    right: 3px;
    -moz-background-size: 75%;
         background-size: 75%; }
  .cd-search input[type="search"] {
    padding-left: 10px;
    appearance: none;
    border: 1px solid #ccc; }
    .cd-search input[type="search"]::-webkit-input-placeholder, .cd-search input[type="search"]::-moz-placeholder, .cd-search input[type="search"]:-ms-input-placeholder {
      color: #cacdcf; }
    .cd-search input[type="search"]:focus {
      outline: none; }
  .cd-search.is-visible {
    opacity: 1;
    filter: alpha(opacity=100);
    visibility: visible;
    -webkit-transition: opacity .3s 0s, visibility 0s 0s;
       -moz-transition: opacity .3s 0s, visibility 0s 0s;
         -o-transition: opacity .3s 0s, visibility 0s 0s;
            transition: opacity .3s 0s, visibility 0s 0s; }
  .nav-is-fixed .cd-search {
    position: fixed; }

.cd-overlay {
  /* shadow layer visible when navigation is active */
  position: fixed;
  z-index: 2;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
  cursor: pointer;
  visibility: hidden;
  opacity: 0;
  filter: alpha(opacity=0);
  -webkit-backface-visibility: hidden;
     -moz-backface-visibility: hidden;
          backface-visibility: hidden;
  -webkit-transition: opacity 0.3s 0s, visibility 0s 0.3s, -webkit-transform 0.3s 0s;
     -moz-transition: opacity 0.3s 0s, visibility 0s 0.3s, -moz-transform 0.3s 0s;
       -o-transition: opacity 0.3s 0s, visibility 0s 0.3s, -o-transform 0.3s 0s;
          transition: opacity 0.3s 0s, visibility 0s 0.3s, transform 0.3s 0s; }
  .cd-overlay.is-visible {
    opacity: 1;
    filter: alpha(opacity=100);
    visibility: visible;
    -webkit-transition: opacity 0.3s 0s, visibility 0s 0s, -webkit-transform 0.3s 0s;
       -moz-transition: opacity 0.3s 0s, visibility 0s 0s, -moz-transform 0.3s 0s;
         -o-transition: opacity 0.3s 0s, visibility 0s 0s, -o-transform 0.3s 0s;
            transition: opacity 0.3s 0s, visibility 0s 0s, transform 0.3s 0s; }

/* --------------------------------
 *
 *support for no js
 *
 *-------------------------------- */
.no-js .cd-primary-nav {
  position: relative;
  height: auto;
  width: 100%;
  overflow: visible;
  visibility: visible;
  z-index: 2; }

.no-js .cd-search {
  position: relative;
  top: 0;
  opacity: 1;
  filter: alpha(opacity=100);
  visibility: visible; }

.nav-footer {
  padding: 30px 20px 20px;
  text-align: left; }
  .nav-footer__heading {
    font-family: News Cycle, sans-serif;
    font-size: 16px;
    font-size: 1rem;
    font-weight: 700;
    margin-bottom: 16px;
    margin-bottom: 1rem; }
    .nav-footer__heading a {
      color: #333; }
      .nav-footer__heading a:hover {
        color: #267e64; }
  .nav-footer__link {
    font-size: 14px; }
  .nav-footer__box {
    padding: 0 10px;
    vertical-align: top; }
  .nav-footer__box-narrow {
    padding: 0 10px;
    vertical-align: top; }
  .nav-footer__button {
    border-width: 1px;
    color: #267e64;
    font-size: 14px;
    font-size: .9rem;
    margin-bottom: 16px;
    margin-bottom: 1rem;
    padding: 8px 16px;
    padding: .5rem 1rem;
    width: 100%; }
  .nav-footer__sub-links {
    font-size: 14px; }
    .nav-footer__sub-links li:nth-child(1) {
      font-family: News Cycle, sans-serif;
      font-size: 16px;
      font-size: 1rem;
      font-weight: 700;
      margin-bottom: 8px;
      margin-bottom: .5rem; }
      .nav-footer__sub-links li:nth-child(1) a {
        color: #333; }
        .nav-footer__sub-links li:nth-child(1) a:hover {
          color: #267e64; }

.banner-tall {
  background-image: url(images/index_hero.jpg);
  background-position: center;
  -moz-background-size: cover;
       background-size: cover;
  height: 200px;
  position: relative; }
  .banner-tall__headline {
    bottom: 48px;
    bottom: 3rem;
    color: #fff;
    font-family: serif;
    font-size: 64px;
    font-size: 4rem;
    font-weight: 800;
    left: 32px;
    left: 2rem;
    line-height: 1;
    position: absolute;
    margin: 0 0 16px 16px;
    margin: 0 0 1rem 1rem;
    text-shadow: 2px 2px 2px #333; }
    .banner-tall__headline sup {
      font-size: 28px;
      font-size: 1.75rem; }

.banner-standard {
  background: #267e64;
  color: #fff;
  display: table;
  height: auto; }
  .banner-standard img {
    display: block; }
  .banner-standard__box {
    padding: 16px 32px;
    padding: 1rem 2rem; }
  .banner-standard__heading {
    color: #fff; }
  .banner-standard__media {
    background-color: #eceee6; }

.banner-panorama {
  background-image: url(../images/trees.jpg);
  background-position: center;
  -moz-background-size: cover;
       background-size: cover;
  height: 255px; }

.card-diptic {
  display: table;
  border-top: 1px solid #ccc;
  border-bottom: 1px solid #ccc; }
  .card-diptic__box {
    display: table-cell;
    vertical-align: middle;
    padding: 32px 16px;
    padding: 2rem 1rem; }
  .card-diptic__heading {
    text-align: center; }
  .card-diptic__media {
    margin-bottom: 32px;
    margin-bottom: 2rem; }
  .card-diptic__text {
    text-align: center;
    margin-bottom: 32px;
    margin-bottom: 2rem; }
  .card-diptic ul {
    list-style: none;
    text-align: center; }
    .card-diptic ul li {
      display: inline-block;
      padding: 8px;
      padding: .5rem;
      width: 47%; }
  .card-diptic__link {
    color: #267e64;
    display: inline-block;
    font-family: Playfair Display, serif;
    padding: 0 6px;
    padding: 0 .4rem;
    vertical-align: middle; }
    .card-diptic__link:hover {
      color: #455652; }

.card-bio {
  padding-bottom: 32px;
  padding-bottom: 2rem; }
  .card-bio__media {
    vertical-align: top; }
  .card-bio__box {
    padding-left: 32px;
    padding-left: 2rem;
    padding-top: 0;
    vertical-align: top; }
  .card-bio__heading {
    color: #267e64;
    font-family: Playfair Display, serif;
    font-size: 32px;
    font-size: 2rem;
    font-weight: 400;
    line-height: 1;
    margin-bottom: 16px;
    margin-bottom: 1rem; }
  .card-bio__subtitle {
    color: #7f7e7e;
    margin-bottom: 8px; }
    .card-bio__subtitle h3 {
      display: inline-block; }
    .card-bio__subtitle a {
      color: #267e64;
      margin-left: 10px; }
      .card-bio__subtitle a i {
        border: 1px solid #267e64;
        padding: 2px; }
  .card-bio__text * + * {
    margin-top: 16px;
    margin-top: 1rem; }

.card-article__box {
  -moz-box-shadow: 0 1px 0 #267e64;
       box-shadow: 0 1px 0 #267e64;
  display: none;
  padding-top: 24px;
  padding-bottom: 24px; }
  .card-article__box * + * {
    margin-top: 16px;
    margin-top: 1rem; }
.card-article a:hover {
  text-decoration: none; }
.card-article h2 {
  color: #267e64;
  font-family: Playfair Display, serif;
  font-size: 32px;
  font-size: 2rem;
  font-weight: 400;
  line-height: 1; }
  .card-article h2:hover {
    color: #455652; }
.card-article small {
  color: #666;
  font-size: 12px;
  font-size: .75rem; }

.loader__nav {
  display: table-cell;
  padding-top: 20px;
  padding-top: 1.25rem; }

.card-triptic {
  display: table;
  border-top: 1px solid #ccc;
  border-bottom: 1px solid #ccc; }
  .card-triptic__box {
    padding: 32px;
    padding: 2rem;
    vertical-align: top; }
  .card-triptic__media {
    height: 150px;
    overflow: hidden;
    margin-bottom: 32px;
    margin-bottom: 2rem; }
  .card-triptic__heading-link {
    color: #267e64;
    font-family: Playfair Display, serif;
    font-size: 22px;
    font-size: 1.375rem;
    font-weight: 400;
    line-height: 1;
    color: #267e64;
    display: inline-block;
    text-align: center; }
    .card-triptic__heading-link:hover {
      color: #455652; }
  .card-triptic__text {
    text-align: center; }

.cta-contact {
  background-color: #eceee6;
  display: table;
  width: 100%; }
  .cta-contact__box {
    padding: 32px;
    padding: 2rem; }
  .cta-contact__box:nth-child(2) {
    padding: 32px 0;
    padding: 2rem 0; }
  .cta-contact__text {
    margin: 0;
    padding: 0 56px 0 32px;
    padding: 0 3.5rem 0 2rem; }
  .cta-contact__button {
    display: inline-block;
    margin: 0 32px 0 0;
    margin: 0 2rem 0 0; }

.cta-teaser {
  display: table;
  padding: 16px 32px;
  padding: 1rem 2rem; }
  .cta-teaser video {
    width: 100%;
    height: 100%; }
  .cta-teaser__box {
    padding-right: 32px;
    padding-right: 2rem; }
  .cta-teaser__text {
    margin-bottom: 32px;
    margin-bottom: 2rem; }
  .cta-teaser__media {
    height: 300px;
    overflow: hidden; }

.cta-center {
  padding: 32px;
  padding: 2rem;
  text-align: center; }
  .cta-center__text {
    padding: 0 128px;
    padding: 0 8rem;
    margin-bottom: 32px;
    margin-bottom: 2rem; }

.cta-subscribe {
  background-color: #267e64;
  color: #fff;
  padding-top: 24px;
  padding-bottom: 36px; }
  .cta-subscribe__heading {
    color: #fff;
    text-align: center; }
  .cta-subscribe__box {
    display: table;
    margin: 0 auto;
    width: 75%; }
  .cta-subscribe__input {
    padding: 14px;
    padding: .9rem;
    width: 100%; }
  .cta-subscribe__button {
    border: 1px solid #fff;
    color: #fff;
    font-size: 24px;
    font-size: 1.5rem;
    margin-left: 16px;
    margin-left: 1rem;
    width: 100%;
    -webkit-transition: all .2s ease;
       -moz-transition: all .2s ease;
         -o-transition: all .2s ease;
            transition: all .2s ease; }
    .cta-subscribe__button:hover {
      /*These will transition on hover */
      background-color: #fff;
      color: #267e64; }
  .cta-subscribe__message {
    display: none;
    padding-top: 40px;
    padding-top: 2.5rem; }
  .cta-subscribe__error {
    display: none;
    padding-top: 16px;
    padding-top: 1rem; }
    .cta-subscribe__error-msg {
      text-align: center; }

.cta-sidebar {
  padding: 16px 0 0 80px;
  padding: 1rem 0 0 5rem;
  vertical-align: top; }
  .cta-sidebar__heading {
    font-size: 20px;
    font-size: 1.25rem;
    margin-top: 12px;
    margin-bottom: 12px; }
  .cta-sidebar__button {
    margin-top: 16px;
    margin-top: 1rem; }

.cta-sidebar__button + .cta-sidebar__heading, .cta-sidebar__text + .cta-sidebar__heading {
  margin-top: 32px;
  margin-top: 2rem; }

.cta-social {
  padding-left: 16px;
  padding-left: 1rem; }
  .cta-social .icon {
    fill: #267e64; }
    .cta-social .icon:hover {
      fill: #ccc; }
  .cta-social a:hover {
    text-decoration: none; }

footer {
  padding-bottom: 80px;
  padding-bottom: 5rem; }

.footer-copyright {
  border-top: 1px solid #e5e6e7;
  display: table;
  padding: 32px;
  padding: 2rem;
  width: 100%; }
  .footer-copyright__logo-box {
    width: 450px; }
  .footer-copyright__box {
    text-align: right; }
    .footer-copyright__box small {
      display: block;
      font-size: 14px;
      padding-right: 8px;
      padding-right: .5rem; }
    .footer-copyright__box .nav-minor li a {
      font-size: 14px; }

.footer-disclaimer {
  text-align: center;
  width: 100%; }
  .footer-disclaimer__box {
    border: 1px solid #455652;
    display: inline-block;
    text-align: center;
    padding: 20px;
    margin: 50px auto 10px; }
  .footer-disclaimer ul {
    display: table;
    margin: 0 auto; }
    .footer-disclaimer ul li {
      display: table-cell;
      border: 1px solid #CCCCCC;
      border-right: none;
      border-left-style: dashed;
      margin: 0 10px;
      padding: 8px;
      padding: .5rem; }
      .footer-disclaimer ul li:last-child {
        border-right: 1px #CCC solid; }
      .footer-disclaimer ul li:first-child {
        border-left-style: solid; }
  .footer-disclaimer h6, .footer-disclaimer p, .footer-disclaimer ul {
    font-size: 14px;
    margin-bottom: 16px;
    margin-bottom: 1rem; }

@-webkit-keyframes fadeIn {
  from {
    opacity: 0;
    filter: alpha(opacity=0); }

  to {
    opacity: 1;
    filter: alpha(opacity=100); } }

@-moz-keyframes fadeIn {
  from {
    opacity: 0;
    filter: alpha(opacity=0); }

  to {
    opacity: 1;
    filter: alpha(opacity=100); } }

@-o-keyframes fadeIn {
  from {
    opacity: 0;
    filter: alpha(opacity=0); }

  to {
    opacity: 1;
    filter: alpha(opacity=100); } }

@keyframes fadeIn {
  from {
    opacity: 0;
    filter: alpha(opacity=0); }

  to {
    opacity: 1;
    filter: alpha(opacity=100); } }

.header__logo-box {
  background-color: #fff;
  border-left: 1px solid #ccc;
  border-right: 1px solid #ccc;
  margin: 0 auto;
  max-width: 1200px; }

.no-cssanimations .header__logo-box {
  padding-top: 0; }

.header__logo {
  background: #fff; }

.logo {
  display: block;
  padding: 0px 0 0px 32px;
  padding: 0rem 0 0rem 2rem;
  width: 600px; }

.no-cssanimations .logo {
  height: 68px;
  padding: 0 16px;
  padding: 0 1rem; }

svg path, svg polygon {
  fill: #267e64; }
svg:hover path, svg:hover polygon {
  opacity: .7;
  filter: alpha(opacity=70);
  -webkit-transition: fill 0.2s ease;
     -moz-transition: fill 0.2s ease;
       -o-transition: fill 0.2s ease;
          transition: fill 0.2s ease;
  fill-opacity: 0.7; }

.logo__stretched {
  display: block; }

.logo__stacked {
  display: none; }

.no-cssanimations .logo__globe path {
  fill: #267e64;
  opacity: 1;
  filter: alpha(opacity=100); }

.main-standard, .main-news, .main-post {
  display: table;
  padding: 16px 32px;
  padding: 1rem 2rem; }

.main-standard {
  padding-bottom: 80px;
  padding-bottom: 5rem; }
  .main-standard__content.col-7-12 {
    padding-top: 24px;
    padding-top: 1.5rem;
    vertical-align: top; }
  .main-standard__text * + * {
    margin-top: 16px;
    margin-top: 1rem; }
  .main-standard__text h2 {
    color: #267e64;
    font-family: Playfair Display, serif;
    font-size: 32px;
    font-size: 2rem;
    font-weight: 400;
    line-height: 1;
    padding-top: 24px;
    padding-bottom: 0px; }
  .main-standard__text ul {
    padding-left: 32px;
    padding-left: 2rem;
    list-style: disc; }
    .main-standard__text ul li {
      margin-top: 8px;
      margin-top: 0.5rem; }
  .main-standard__text ol {
    padding-left: 32px;
    padding-left: 2rem; }
  .main-standard__text img {
    width: 100%; }

.main-bios {
  display: table;
  padding: 32px;
  padding: 2rem; }

.city-column {
  width: 135px; }

.address-column {
  width: 335px; }

.location-phone {
  color: #455652; }
  .location-phone:hover {
    color: #267e64; }
.main-post__text * + * {
  margin-top: 16px;
  margin-top: 1rem; }
.main-post__text h2 {
  color: #267e64;
  font-family: Playfair Display, serif;
  font-size: 32px;
  font-size: 2rem;
  font-weight: 400;
  line-height: 1; }
.main-post__text h3 {
  color: #455652;
  font-family: Playfair Display, serif;
  font-size: 20px;
  font-size: 1.25rem;
  font-weight: 700;
  line-height: 1;
  text-transform: uppercase;
  margin-top: 36px;
  margin-bottom: 0px; }
.main-post__text figcaption {
  color: #ccc;
  font-size: 12px;
  font-size: .75rem;
  margin-top: 0; }
.main-post__text blockquote {
  color: #267e64;
  font-family: Playfair Display, serif;
  font-size: 24px;
  font-size: 1.5rem;
  font-style: italic;
  font-weight: 700;
  margin-top: 36px;
  margin-bottom: 36px; }

.breadcrumb {
  padding-bottom: 24px;
  padding-bottom: 1.5rem;
  font-size: 14px; }
  .breadcrumb a {
    color: #267e64; }
    .breadcrumb a:hover {
      color: #455652; }
  .breadcrumb span {
    color: #7f7e7e; }

.form-standard {
  margin-top: 32px;
  margin-top: 2rem; }
  .form-standard input, .form-standard input[type="email"], .form-standard input[type="number"], .form-standard input[type="password"], .form-standard input[type="search"], .form-standard input[type="tel"], .form-standard input[type="text"], .form-standard input[type="url"], .form-standard input[type="color"], .form-standard input[type="date"], .form-standard input[type="name"], .form-standard input[type="datetime"], .form-standard input[type="datetime-local"], .form-standard input[type="month"], .form-standard input[type="time"], .form-standard input[type="week"], .form-standard textarea {
    color: #333;
    border: 1px solid #ccc;
    border-box-sizing: content-box;
    -moz-border-radius: 0;
         border-radius: 0;
    border-radius-font-size: 1rem;
    padding: 16px;
    padding: 1rem;
    display: block;
    width: 100%; }
  .form-standard label {
    display: block; }
  .form-standard input[type="button"], .form-standard input[type="reset"], .form-standard input[type="submit"] {
    display: block; }
  .form-standard__checkbox {
    display: inline-block;
    float: left !important;
    width: auto !important; }
  .form-standard__checkbox + label {
    display: inline-block;
    float: left !important;
    margin: 10px 10px 20px 10px !important; }
  .form-standard .selectbox {
    background: #fff;
    -moz-border-radius: 0;
         border-radius: 0;
    cursor: pointer;
    position: relative;
    height: 48px; }
    .form-standard .selectbox:after {
      color: #ccc;
      content: '▾';
      position: absolute;
      top: 16px;
      top: 1rem;
      right: 8px;
      right: .5rem;
      width: 16px;
      width: 1rem;
      height: 16px;
      height: 1rem; }
  .form-standard select {
    background: #fff;
    -moz-box-shadow: none;
         box-shadow: none;
    -moz-border-radius: 0;
         border-radius: 0;
    border: 1px solid #ccc;
    color: #7f7e7e;
    cursor: pointer;
    display: block;
    font-size: 16px;
    font-size: 1rem;
    height: 60px;
    position: relative;
    padding-left: 16px;
    padding-left: 1rem;
    width: 100%;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none; }

.contact-us__button {
  background-color: #eceee6;
  max-width: 183px;
  clear: both; }

.no-cssgradients .selectbox:after {
  z-index: -3; }


@media (max-width: 768px){
  [class*='col-']{
    display: inline-block;
    text-align: center; }
  .col-2-12{
    width: 100%; }
  .col-3-12{
    width: 100%; }
  .col-4-12{
    width: 100%; }
  .col-5-12{
    width: 100%; }
  .col-6-12{
    width: 100%; }
  .col-7-12{
    width: 100%; }
  .col-8-12{
    width: 100%; }
  .col-9-12{
    width: 100%; }
  .col-10-12{
    width: 100%; }
  .col-11-12{
    width: 100%; }
  .nav-minor__container{
    text-align: center; }
  .nav-footer{
    display: none; }
  .card-diptic{
    -webkit-flex-flow: column;
        -ms-flex-flow: column;
            flex-flow: column; }
  .card-bio{
    border-bottom: 1px solid #e5e6e7;
    margin-bottom: 2rem; }
  .card-bio__media{
    margin-bottom: 1rem;
    text-align: center; }
  .card-bio__media img{
    display: inline-block;
    width: 33%; }
  .card-bio__box{
    padding: 0; }
  .card-bio__text{
    text-align: left; }
  .cta-contact__text{
    padding: 0; }
  .cta-contact__button{
    margin: 0; }
  .cta-teaser{
    -webkit-flex-flow: column;
        -ms-flex-flow: column;
            flex-flow: column; }
  .cta-teaser__box{
    padding: 0; }
  .cta-teaser__media{
    height: auto;
    margin-top: 2rem; }
  .cta-center__text{
    padding: 0; }
  .cta-subscribe__button{
    margin: 1rem 0 0 0; }
  .cta-sidebar{
    padding: 3rem 2rem; }
  footer{
    padding: 0; }
  .footer-copyright{
    padding: 2rem 0 0 0;
    display: block; }
  .footer-copyright__logo-box{
    display: inline-block;
    width: auto; }
  .footer-copyright__logo-box .logo__stacked{
    display: inline-block;
    width: 250px; }
  .main-standard__content{
    text-align: left; }
  .main-post__text{
    text-align: left; } }


@media (max-width: 700px){
  tr{
    margin-top: 0 !important; }
  tr:first-child{
    border-top: 1px solid #e5e6e7; }
  td{
    margin-top: 0 !important;
    position: relative;
    padding-left: 40%; }
  td:before{
    position: absolute;
    top: 6px;
    left: 6px;
    width: 40%;
    padding-right: 10px;
    white-space: nowrap;
    font-weight: 600; }
  td:nth-of-type(1):before{
    content: "City: "; }
  td:nth-of-type(2):before{
    content: "Address: "; }
  td:nth-of-type(3):before{
    content: "Phone: "; }
  thead tr{
    position: absolute;
    top: -9999px;
    left: -9999px; }
  table, thead, tbody, th, td, tr{
    display: block; } }


@media (max-width: 1022px){
  body.nav-on-left.overflow-hidden{
    overflow: hidden; }
  .cd-main-content.nav-is-visible{
    -webkit-transform: translateX(-260px);
       -moz-transform: translateX(-260px);
        -ms-transform: translateX(-260px);
         -o-transform: translateX(-260px);
            transform: translateX(-260px); }
  .nav-on-left .cd-main-content.nav-is-visible{
    -webkit-transform: translateX(260px);
       -moz-transform: translateX(260px);
        -ms-transform: translateX(260px);
         -o-transform: translateX(260px);
            transform: translateX(260px); }
  .cd-main-header.nav-is-visible{
    -webkit-transform: translateX(0);
       -moz-transform: translateX(0);
        -ms-transform: translateX(0);
         -o-transform: translateX(0);
            transform: translateX(0); }
  .nav-on-left .cd-main-header.nav-is-visible{
    -webkit-transform: translateX(260px);
       -moz-transform: translateX(260px);
        -ms-transform: translateX(260px);
         -o-transform: translateX(260px);
            transform: translateX(260px); }
  .nav-on-left .cd-logo{
    left: auto;
    right: 5%; }
  .nav-on-left .cd-header-buttons{
    right: auto;
    left: 5%; }
  .nav-on-left .cd-header-buttons li{
    float: right; }
  .nav-on-left .cd-primary-nav, .nav-on-left .cd-primary-nav ul{
    right: auto;
    left: 0; }
  .cd-primary-nav .cd-nav-gallery .cd-nav-item img{
    display: none; }
  .cd-primary-nav{

    /* by default .cd-primary-nav is hidden - trick for iOS devices where you can see the navigation if you pull down */
    visibility: hidden;
    -webkit-transition: visibility 0s 0.3s;
       -moz-transition: visibility 0s 0.3s;
         -o-transition: visibility 0s 0.3s;
            transition: visibility 0s 0.3s; }
  .cd-primary-nav.nav-is-visible{
    visibility: visible;
    -webkit-transition: visibility 0s 0s;
       -moz-transition: visibility 0s 0s;
         -o-transition: visibility 0s 0s;
            transition: visibility 0s 0s; }
  .cd-overlay.is-visible{
    -webkit-transform: translateX(0);
       -moz-transform: translateX(0);
        -ms-transform: translateX(0);
         -o-transform: translateX(0);
            transform: translateX(0); }
  .nav-on-left .cd-overlay.is-visible{
    -webkit-transform: translateX(260px);
       -moz-transform: translateX(260px);
        -ms-transform: translateX(260px);
         -o-transform: translateX(260px);
            transform: translateX(260px); }
  .cd-overlay.is-visible.search-is-visible, .nav-on-left .cd-overlay.is-visible.search-is-visible{
    -webkit-transform: translateX(0);
       -moz-transform: translateX(0);
        -ms-transform: translateX(0);
         -o-transform: translateX(0);
            transform: translateX(0); } }


@media (min-width: 1024px){
  .cd-main-header{
    height: 80px; }
  .cd-main-header:after{
    content: "";
    display: table;
    clear: both; }
  .cd-logo{
    top: 26px;
    left: 4em; }
  .cd-header-buttons{
    top: 1rem;
    right: 1rem; }
  .cd-nav-trigger{
    display: none; }
  .cd-primary-nav{
    position: static;
    padding: 0 50px 0 0;
    margin-left: 20px;
    height: auto;
    width: 100%;
    overflow: visible;
    background: transparent; }
  .cd-primary-nav:after{
    content: "";
    display: table;
    clear: both; }
  .cd-primary-nav.moves-out > li > a{

    /* reset mobile style */
    -webkit-transform: translateX(0);
       -moz-transform: translateX(0);
        -ms-transform: translateX(0);
         -o-transform: translateX(0);
            transform: translateX(0);
    opacity: 1;
    filter: alpha(opacity=100); }
  .cd-primary-nav ul{
    position: static;
    height: auto;
    width: auto;
    background: transparent;
    overflow: visible;
    text-align: left;
    z-index: 3; }
  .cd-primary-nav ul.is-hidden{

    /* reset mobile style */
    -webkit-transform: translateX(0);
       -moz-transform: translateX(0);
        -ms-transform: translateX(0);
         -o-transform: translateX(0);
            transform: translateX(0); }
  .cd-primary-nav ul.moves-out > li > a{

    /* reset mobile style */
    -webkit-transform: translateX(0);
       -moz-transform: translateX(0);
        -ms-transform: translateX(0);
         -o-transform: translateX(0);
            transform: translateX(0);
    opacity: 1;
    filter: alpha(opacity=100); }
  .cd-primary-nav > li{
    display: inline-block;
    margin-left: .5rem; }
  .cd-primary-nav > li > a{

    /* main navigation buttons style */
    position: relative;
    display: inline-block;
    height: 80px;
    line-height: 80px;
    padding: 0;
    color: #455652;
    overflow: visible;
    border-bottom: none;
    -webkit-transition: color 0.3s, box-shadow 0.3s;
       -moz-transition: color 0.3s, -moz-box-shadow 0.3s;
         -o-transition: color 0.3s, box-shadow 0.3s;
            transition: color 0.3s, box-shadow 0.3s; }
  .cd-primary-nav > li > a:hover{
    color: #267e64;
    text-decoration: none; }
  .cd-primary-nav > li > a.selected{
    color: #267e64;
    -moz-box-shadow: inset 0 -2px 0 #267e64;
         box-shadow: inset 0 -2px 0 #267e64; }
  .cd-primary-nav .go-back, .cd-primary-nav .see-all{
    display: none; }
  .cd-primary-nav .cd-secondary-nav, .cd-primary-nav .cd-nav-gallery, .cd-primary-nav .cd-nav-icons{

    /* dropdown menu style */
    position: absolute;
    top: 80px;
    width: 100%;
    background: #fff;
    padding: 2rem;
    -moz-box-shadow: inset 0 1px 0 #e5e6e7, 0 3px 6px rgba(0, 0, 0, 0.05);
         box-shadow: inset 0 1px 0 #e5e6e7, 0 3px 6px rgba(0, 0, 0, 0.05);
    -webkit-transform: translateX(0);
       -moz-transform: translateX(0);
        -ms-transform: translateX(0);
         -o-transform: translateX(0);
            transform: translateX(0);
    -webkit-transition: opacity .3s 0s, visibility 0s 0s;
       -moz-transition: opacity .3s 0s, visibility 0s 0s;
         -o-transition: opacity .3s 0s, visibility 0s 0s;
            transition: opacity .3s 0s, visibility 0s 0s; }
  .cd-primary-nav .cd-secondary-nav:after, .cd-primary-nav .cd-nav-gallery:after, .cd-primary-nav .cd-nav-icons:after{
    content: "";
    display: table;
    clear: both; }
  .cd-primary-nav .cd-secondary-nav.is-hidden, .cd-primary-nav .cd-nav-gallery.is-hidden, .cd-primary-nav .cd-nav-icons.is-hidden{
    opacity: 0;
    filter: alpha(opacity=0);
    visibility: hidden;
    -webkit-transition: opacity .3s 0s, visibility 0s .3s;
       -moz-transition: opacity .3s 0s, visibility 0s .3s;
         -o-transition: opacity .3s 0s, visibility 0s .3s;
            transition: opacity .3s 0s, visibility 0s .3s; }
  .cd-primary-nav .cd-secondary-nav > .see-all, .cd-primary-nav .cd-nav-gallery > .see-all, .cd-primary-nav .cd-nav-icons > .see-all{

    /* this is the BIG See all button at the bottom of the dropdown menu */
    display: block;
    position: absolute;
    left: 0;
    bottom: 0;
    height: 80px;
    width: 100%;
    overflow: hidden;

    /* reset some inherited style */
    margin: 0;
    padding: 0; }
  .cd-primary-nav .cd-secondary-nav > .see-all a, .cd-primary-nav .cd-nav-gallery > .see-all a, .cd-primary-nav .cd-nav-icons > .see-all a{
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    font-size: 2.2rem;
    font-weight: bold;
    text-align: center;
    line-height: 80px;
    border-top: 1px solid #e5e6e7;

    /* reset some inherited style */
    border-bottom: none;
    margin: 0;
    padding: 0;
    -webkit-transition: color 0.2s, background 0.2s, border 0.2s;
       -moz-transition: color 0.2s, background 0.2s, border 0.2s;
         -o-transition: color 0.2s, background 0.2s, border 0.2s;
            transition: color 0.2s, background 0.2s, border 0.2s; }
  .cd-primary-nav .cd-secondary-nav > .see-all a:hover, .cd-primary-nav .cd-nav-gallery > .see-all a:hover, .cd-primary-nav .cd-nav-icons > .see-all a:hover{
    background: #455652;
    border-color: #455652;
    color: #fff; }
  .cd-primary-nav .cd-secondary-nav > li{

    /* change the height according to your needs - you can even set height: auto */
    height: 340px;

    /* here you set the number of columns - use width percentage */
    width: 23%;
    float: left;
    margin-right: 2.66%;
    border-right: 1px solid #e5e6e7;
    overflow: hidden;
    overflow-x: hidden;
    overflow-y: auto;
    -webkit-overflow-scrolling: touch; }
  .cd-primary-nav .cd-secondary-nav > li:nth-child(4n+2){

    /* +2 because we have 2 list items with display:none */
    margin-right: 0;
    border-right: none; }
  .cd-primary-nav .cd-secondary-nav > li > a{

    /* secondary nav title */
    color: #267e64;
    font-weight: bold;
    font-size: 1.6rem;
    margin-bottom: .6em; }
  .cd-primary-nav .cd-secondary-nav a{
    height: 30px;
    line-height: 30px;
    padding: 0 18% 0 0;
    color: #455652;
    border-bottom: none;
    font-size: 1.4rem; }
  .cd-primary-nav .cd-secondary-nav a:hover{
    color: #267e64; }
  .cd-primary-nav .cd-secondary-nav ul{

    /* Force Hardware Acceleration in WebKit */
    -webkit-transform: translateZ(0);
       -moz-transform: translateZ(0);
            transform: translateZ(0); }
  .cd-primary-nav .cd-secondary-nav ul ul{

    /* tertiary navigation */
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%; }
  .cd-primary-nav .cd-secondary-nav ul ul.is-hidden{
    -webkit-transform: translateX(100%);
       -moz-transform: translateX(100%);
        -ms-transform: translateX(100%);
         -o-transform: translateX(100%);
            transform: translateX(100%); }
  .cd-primary-nav .cd-secondary-nav ul ul .go-back{
    display: block; }
  .cd-primary-nav .cd-secondary-nav ul ul .go-back a{
    color: transparent; }
  .cd-primary-nav .cd-secondary-nav ul ul .see-all{
    display: block; }
  .cd-primary-nav .cd-secondary-nav .moves-out > li > a{

    /* push the navigation items to the left - and lower down opacity - when tertiary nav slides in */
    -webkit-transform: translateX(-100%);
       -moz-transform: translateX(-100%);
        -ms-transform: translateX(-100%);
         -o-transform: translateX(-100%);
            transform: translateX(-100%); }
  .cd-primary-nav .cd-nav-gallery{
    -moz-box-shadow: 0 5px 5px rgba(100, 100, 100, 0.3);
         box-shadow: 0 5px 5px rgba(100, 100, 100, 0.3); }
  .cd-primary-nav .cd-nav-gallery li{

    /* set here number of columns - use width percentage */
    float: left;
    width: 25%;
    padding: 1rem; }
  .cd-primary-nav .cd-nav-gallery li:nth-child(4n+2){

    /* +2 because we have two additional list items with display:none */ }
  .cd-primary-nav .cd-nav-gallery .cd-nav-item{
    border-bottom: none;
    padding: 0;
    height: auto;
    line-height: 1.2; }
  .cd-primary-nav .cd-nav-gallery .cd-nav-item img{
    position: static;
    margin-top: 0;
    height: auto;
    width: 100%;
    margin-bottom: .6rem; }
  .cd-primary-nav .cd-nav-gallery .cd-nav-item h3{
    color: #267e64;
    font-size: .9rem;
    padding: 0 .4rem;
    font-weight: normal; }
  .cd-primary-nav .cd-nav-icons li{

    /* set here number of columns - use width percentage */
    width: 32%;
    float: left;
    margin: 0 2% 20px 0; }
  .cd-primary-nav .cd-nav-icons li:nth-child(3n+2){

    /* +2 because we have two additional list items with display:none */
    margin-right: 0; }
  .cd-primary-nav .cd-nav-icons .cd-nav-item{
    border-bottom: none;
    height: 80px;
    line-height: 1.2;
    padding: 24px 0 0 85px; }
  .cd-primary-nav .cd-nav-icons .cd-nav-item:hover{
    background: #fafafb; }
  .cd-primary-nav .cd-nav-icons .cd-nav-item h3{
    color: #267e64;
    font-weight: bold; }
  .cd-primary-nav .cd-nav-icons .cd-nav-item p{
    display: block; }
  .cd-primary-nav .cd-nav-icons .cd-nav-item:before{
    left: 25px; }
  .has-children > a:before, .has-children > a:after, .go-back a:before, .go-back a:after{
    background: #cacdcf; }
  .has-children > a:hover:before, .has-children > a:hover:after, .go-back a:hover:before, .go-back a:hover:after{
    background: #267e64; }
  .has-children > a:before, .has-children > a:after{
    right: 15%; }
  .cd-primary-nav > .has-children > a{

    /* main navigation arrows on larger devices */
    padding-right: 30px !important; }
  .cd-primary-nav > .has-children > a:before, .cd-primary-nav > .has-children > a:after{
    width: 9px;
    -webkit-transform-origin: 50% 50%;
       -moz-transform-origin: 50% 50%;
        -ms-transform-origin: 50% 50%;
         -o-transform-origin: 50% 50%;
            transform-origin: 50% 50%;
    background: #cacdcf;
    -webkit-backface-visibility: hidden;
       -moz-backface-visibility: hidden;
            backface-visibility: hidden;
    -webkit-transition: width 0.3s, -webkit-transform 0.3s;
       -moz-transition: width 0.3s, -moz-transform 0.3s;
         -o-transition: width 0.3s, -o-transform 0.3s;
            transition: width 0.3s, transform 0.3s; }
  .cd-primary-nav > .has-children > a:before{
    right: 12px; }
  .cd-primary-nav > .has-children > a:after{
    right: 7px; }
  .cd-primary-nav > .has-children > a.selected:before, .cd-primary-nav > .has-children > a.selected:after{
    width: 14px; }
  .cd-primary-nav > .has-children > a.selected:before{
    -webkit-transform: translateX(5px) rotate(-45deg);
       -moz-transform: translateX(5px) rotate(-45deg);
        -ms-transform: translateX(5px) rotate(-45deg);
         -o-transform: translateX(5px) rotate(-45deg);
            transform: translateX(5px) rotate(-45deg); }
  .cd-primary-nav > .has-children > a.selected:after{
    -webkit-transform: rotate(45deg);
       -moz-transform: rotate(45deg);
        -ms-transform: rotate(45deg);
         -o-transform: rotate(45deg);
            transform: rotate(45deg); }
  .cd-secondary-nav > .has-children > a:before, .cd-secondary-nav > .has-children > a:after{

    /* remove arrows on secondary nav titles */
    display: none; }
  .cd-primary-nav .go-back a{
    padding-left: 20px; }
  .cd-primary-nav .go-back a:before, .cd-primary-nav .go-back a:after{
    left: 1px; }
  .no-js .cd-primary-nav{
    position: absolute;
    z-index: 3;
    display: inline-block;
    width: auto;
    top: 0;
    right: 150px;
    padding: 0; }
  .no-js .nav-is-fixed .cd-primary-nav{
    position: fixed; } }


@media (min-width: 769px){
  .banner-tall{
    height: 465px; }
  .card-diptic__box{
    padding: 2rem 1rem 2rem 2rem; }
  .card-diptic__box:nth-child(2){
    border-left: 1px solid #ccc;
    padding: 2rem 2rem 2rem 1rem; }
  .card-triptic__box:nth-child(2){
    border-left: 1px solid #ccc; }
  .card-triptic__box:nth-child(3){
    border-left: 1px solid #ccc; } }


@media (max-width: 767px){
  .banner-tall__headline{
    position: static;
    font-size: 2rem;
    padding: 2rem; } }


@media (min-width: 768px) and (min-width: 1023px){
  .footer-copyright__box{
    text-align: right; }
  .footer-copyright__box small{
    font-size: 12px;
    display: inline-block; }
  .footer-copyright__box small:before{
    content: '|'; }
  .footer-copyright__box small:nth-child(1):before{
    content: ''; }
  .footer-copyright__box .nav-minor li a{
    font-size: 12px; }
  .footer-disclaimer h6, .footer-disclaimer p, .footer-disclaimer ul{
    font-size: 12px; } }


@media (min-width: 1023px){
  .footer-disclaimer__box{
    padding: 20px 100px; } }


@media (max-width: 899px){
  .logo{
    width: 400px; }
  .logo__stretched{
    display: none; }
  .logo__stacked{
    display: block; } }


@media (max-width: 499px){
  .logo{
    padding: 1rem;
    width: 300px; } }


/*# sourceMappingURL=data:application/json;base64, */
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9zb3VyY2UvdmVuZG9yL19ub3JtYWxpemUuc2NzcyIsInN0eWxlLmNzcyIsIi9zb3VyY2UvYmFzZS9fdHlwb2dyYXBoeS5zYXNzIiwiL3NvdXJjZS9iYXNlL19jb2xvcnMuc2FzcyIsIi9zb3VyY2UvYmFzZS9fY2xlYXItZml4LnNhc3MiLCIvc291cmNlL2Jhc2UvX2xheW91dC5zYXNzIiwiL3NvdXJjZS9iYXNlL19pbmNsdWRlLW1lZGlhLnNhc3MiLCIvc291cmNlL2Jhc2UvX2dsb2JhbC5zYXNzIiwiL3NvdXJjZS9iYXNlL190YWJsZXMuc2FzcyIsIi9zb3VyY2UvbW9kdWxlcy9uYXYvX25hdi1taW5vci5zYXNzIiwiL3NvdXJjZS9tb2R1bGVzL25hdi9fbmF2LW1lZ2Euc2FzcyIsIi9zb3VyY2UvbW9kdWxlcy9uYXYvX25hdi1mb290ZXIuc2FzcyIsIi9zb3VyY2UvbW9kdWxlcy9iYW5uZXIvX19iYW5uZXIuc2FzcyIsIi9zb3VyY2UvbW9kdWxlcy9jYXJkcy9fX2NhcmRzLnNhc3MiLCIvc291cmNlL21vZHVsZXMvY3RhL19fY3RhLnNhc3MiLCIvc291cmNlL21vZHVsZXMvZm9vdGVyL19mb290ZXIuc2FzcyIsIi9zb3VyY2UvbW9kdWxlcy9oZWFkZXIvX2hlYWRlci5zYXNzIiwiL3NvdXJjZS9tb2R1bGVzL21haW4vX21haW4uc2FzcyIsIi9zb3VyY2UvbW9kdWxlcy9mb3JtL19mb3JtLnNhc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNEM2QyxrQkFBc0M7QUMzQ25GO0VBQ0UsZ0JBQWUsRUFBRTs7QUFFbkI7RUFDRSx1QkFBc0IsRUFBRTs7QUFFMUI7RURvRVksZUFBQTtFQ2xFVixXQUFVLEVBQUU7O0FBRWQ7RUFDRSxlQUFjLEVBQUU7O0FBRWxCO0VEeUYwQixnQ0FBQTtFQ3ZGeEIsNEJBQTJCLEVBQUU7O0FBRS9CO0VBQ0UsV0FBVSxFQUFFOztBQUVkO0VEMkhVLHlCQUFBLEVBQUE7RUN6SFI7SUFDRSxZQUFXLEVBQUU7O0FBRWpCOzs7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IjpbIi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBOb3JtYWxpemUuc2NzcyBiYXNlZCBvbiBOaWNvbGFzIEdhbGxhZ2hlciBhbmQgSm9uYXRoYW4gTmVhbCdzXG4vLyBub3JtYWxpemUuY3NzIHYyLjEuMyB8IE1JVCBMaWNlbnNlIHwgZ2l0LmlvL25vcm1hbGl6ZVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIE5vcm1hbGl6ZS5zY3NzIHNldHRpbmdzXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG5cbi8vIFNldCB0byB0cnVlIGlmIHlvdSB3YW50IHRvIGFkZCBzdXBwb3J0IGZvciBJRTYgYW5kIElFN1xuLy8gTm90aWNlOiBzZXR0aW5nIHRvIHRydWUgbWlnaHQgcmVuZGVyIHNvbWUgZWxlbWVudHNcbi8vIHNsaWdodGx5IGRpZmZlcmVudGx5IHRoYW4gd2hlbiBzZXQgdG8gZmFsc2VcbiRsZWdhY3lfc3VwcG9ydF9mb3JfaWU6IGZhbHNlICFkZWZhdWx0OyAvLyBVc2VkIGFsc28gaW4gQ29tcGFzc1xuXG5cbi8vIFNldCB0aGUgZGVmYXVsdCBmb250IGZhbWlseSBoZXJlIHNvIHlvdSBkb24ndCBoYXZlIHRvIG92ZXJyaWRlIGl0IGxhdGVyXG4kbm9ybWFsaXplZF9mb250X2ZhbWlseTogc2Fucy1zZXJpZiAhZGVmYXVsdDtcblxuJG5vcm1hbGl6ZV9oZWFkaW5nczogdHJ1ZSAhZGVmYXVsdDtcblxuJGgxX2ZvbnRfc2l6ZTogMmVtICFkZWZhdWx0O1xuJGgyX2ZvbnRfc2l6ZTogMS41ZW0gIWRlZmF1bHQ7XG4kaDNfZm9udF9zaXplOiAxLjE3ZW0gIWRlZmF1bHQ7XG4kaDRfZm9udF9zaXplOiAxZW0gIWRlZmF1bHQ7XG4kaDVfZm9udF9zaXplOiAwLjgzZW0gIWRlZmF1bHQ7XG4kaDZfZm9udF9zaXplOiAwLjc1ZW0gIWRlZmF1bHQ7XG5cbiRoMV9tYXJnaW46IDAuNjdlbSAwICFkZWZhdWx0O1xuJGgyX21hcmdpbjogMC44M2VtIDAgIWRlZmF1bHQ7XG4kaDNfbWFyZ2luOiAxZW0gMCAhZGVmYXVsdDtcbiRoNF9tYXJnaW46IDEuMzNlbSAwICFkZWZhdWx0O1xuJGg1X21hcmdpbjogMS42N2VtIDAgIWRlZmF1bHQ7XG4kaDZfbWFyZ2luOiAyLjMzZW0gMCAhZGVmYXVsdDtcblxuJGJhY2tncm91bmQ6ICNmZmYgIWRlZmF1bHQ7XG4kY29sb3I6ICMwMDAgIWRlZmF1bHQ7XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBIVE1MNSBkaXNwbGF5IGRlZmluaXRpb25zXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyBDb3JyZWN0cyBibG9jayBkaXNwbGF5IG5vdCBkZWZpbmVkIGluIElFNi83LzgvOSAmIEZGM1xuXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm5hdixcbnNlY3Rpb24sXG5zdW1tYXJ5IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbn1cblxuLy8gQ29ycmVjdHMgaW5saW5lLWJsb2NrIGRpc3BsYXkgbm90IGRlZmluZWQgaW4gSUU2LzcvOC85ICYgRkYzXG5cbmF1ZGlvLFxuY2FudmFzLFxudmlkZW8ge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBAaWYgJGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZSB7XG4gICAgICAgICpkaXNwbGF5OiBpbmxpbmU7XG4gICAgICAgICp6b29tOiAxO1xuICAgIH1cbn1cblxuLy8gMS4gUHJldmVudHMgbW9kZXJuIGJyb3dzZXJzIGZyb20gZGlzcGxheWluZyAnYXVkaW8nIHdpdGhvdXQgY29udHJvbHNcbi8vIDIuIFJlbW92ZSBleGNlc3MgaGVpZ2h0IGluIGlPUzUgZGV2aWNlc1xuXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICAgIGRpc3BsYXk6IG5vbmU7IC8vIDFcbiAgICBoZWlnaHQ6IDA7IC8vIDJcbn1cblxuLy9cbi8vIEFkZHJlc3MgYFtoaWRkZW5dYCBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS5cbi8vIEhpZGUgdGhlIGB0ZW1wbGF0ZWAgZWxlbWVudCBpbiBJRSwgU2FmYXJpLCBhbmQgRmlyZWZveCA8IDIyLlxuLy9cblxuW2hpZGRlbl0sIHRlbXBsYXRlIHtcbiAgICBkaXNwbGF5OiBub25lO1xufVxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gQmFzZVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gMS4gQ29ycmVjdHMgdGV4dCByZXNpemluZyBvZGRseSBpbiBJRTYvNyB3aGVuIGJvZHkgZm9udC1zaXplIGlzIHNldCB1c2luZyBlbSB1bml0c1xuLy8gICAgaHR0cDovL2NsYWdudXQuY29tL2Jsb2cvMzQ4LyNjNzkwXG4vLyAyLiBQcmV2ZW50cyBpT1MgdGV4dCBzaXplIGFkanVzdCBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2UsIHdpdGhvdXQgZGlzYWJsaW5nIHVzZXIgem9vbVxuLy8gICAgd3d3LjQ1NmJlcmVhc3RyZWV0LmNvbS9hcmNoaXZlLzIwMTAxMi9jb250cm9sbGluZ190ZXh0X3NpemVfaW5fc2FmYXJpX2Zvcl9pb3Nfd2l0aG91dF9kaXNhYmxpbmdfdXNlcl96b29tL1xuXG5odG1sIHtcbiAgICBAaWYgJGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTAwJTsgLy8gMVxuICAgIH1cblx0XHQvL2JhY2tncm91bmQ6ICRiYWNrZ3JvdW5kO1xuXHRcdC8vY29sb3I6ICRjb2xvcjtcbiAgICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8vIDJcbiAgICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLy8gMlxufVxuXG4vLyBBZGRyZXNzZXMgZm9udC1mYW1pbHkgaW5jb25zaXN0ZW5jeSBiZXR3ZWVuICd0ZXh0YXJlYScgYW5kIG90aGVyIGZvcm0gZWxlbWVudHMuXG5cbmh0bWwsXG5idXR0b24sXG5pbnB1dCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgICAvL2ZvbnQtZmFtaWx5OiAkbm9ybWFsaXplZF9mb250X2ZhbWlseTtcbn1cblxuLy8gQWRkcmVzc2VzIG1hcmdpbnMgaGFuZGxlZCBpbmNvcnJlY3RseSBpbiBJRTYvN1xuXG5ib2R5IHtcbiAgICBtYXJnaW46IDA7XG59XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBMaW5rc1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gMS4gUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgY29sb3IgZnJvbSBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4vLyAyLiBBZGRyZXNzZXMgb3V0bGluZSBkaXNwbGF5ZWQgb2RkbHkgaW4gQ2hyb21lXG4vLyAzLiBJbXByb3ZlcyByZWFkYWJpbGl0eSB3aGVuIGZvY3VzZWQgYW5kIGFsc28gbW91c2UgaG92ZXJlZCBpbiBhbGwgYnJvd3NlcnNcbi8vICAgIHBlb3BsZS5vcGVyYS5jb20vcGF0cmlja2wvZXhwZXJpbWVudHMva2V5Ym9hcmQvdGVzdFxuXG5hIHtcbiAgICAvLyAxXG5cbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcblxuICAgIC8vIDJcblxuICAgICY6Zm9jdXMge1xuICAgICAgICAvL291dGxpbmU6IHRoaW4gZG90dGVkO1xuICAgIH1cblxuICAgIC8vIDNcblxuICAgICY6aG92ZXIsXG4gICAgJjphY3RpdmUge1xuICAgICAgICBvdXRsaW5lOiAwO1xuICAgIH1cbn1cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIFR5cG9ncmFwaHlcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIEFkZHJlc3NlcyBmb250IHNpemVzIGFuZCBtYXJnaW5zIHNldCBkaWZmZXJlbnRseSBpbiBJRTYvN1xuLy8gQWRkcmVzc2VzIGZvbnQgc2l6ZXMgd2l0aGluICdzZWN0aW9uJyBhbmQgJ2FydGljbGUnIGluIEZGNCssIENocm9tZSwgUzVcblxuLyogQGlmIFxcJG5vcm1hbGl6ZV9oZWFkaW5ncyA9PSB0cnVlIHtcbiAgICBoMSB7XG4gICAgICAgIGZvbnQtc2l6ZTogXFwkaDFfZm9udF9zaXplO1xuICAgICAgICBtYXJnaW46IFxcJGgxX21hcmdpbjtcbiAgICB9XG5cbiAgICBoMiB7XG4gICAgICAgIGZvbnQtc2l6ZTogXFwkaDJfZm9udF9zaXplO1xuICAgICAgICBtYXJnaW46IFxcJGgyX21hcmdpbjtcbiAgICB9XG5cbiAgICBoMyB7XG4gICAgICAgIGZvbnQtc2l6ZTogXFwkaDNfZm9udF9zaXplO1xuICAgICAgICBtYXJnaW46IFxcJGgzX21hcmdpbjtcbiAgICB9XG5cbiAgICBoNCB7XG4gICAgICAgIGZvbnQtc2l6ZTogXFwkaDRfZm9udF9zaXplO1xuICAgICAgICBtYXJnaW46IFxcJGg0X21hcmdpbjtcbiAgICB9XG5cbiAgICBoNSB7XG4gICAgICAgIGZvbnQtc2l6ZTogXFwkaDVfZm9udF9zaXplO1xuICAgICAgICBtYXJnaW46IFxcJGg1X21hcmdpbjtcbiAgICB9XG5cbiAgICBoNiB7XG4gICAgICAgIGZvbnQtc2l6ZTogXFwkaDZfZm9udF9zaXplO1xuICAgICAgICBtYXJnaW46IFxcJGg2X21hcmdpbjtcbiAgICB9XG59ICovXG5cbi8vIEFkZHJlc3NlcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOSwgUzUsIENocm9tZVxuXG5hYmJyW3RpdGxlXSB7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZDtcbn1cblxuLy8gQWRkcmVzc2VzIHN0eWxlIHNldCB0byAnYm9sZGVyJyBpbiBGRjMrLCBTNC81LCBDaHJvbWVcblxuYixcbnN0cm9uZyB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbkBpZiAkbGVnYWN5X3N1cHBvcnRfZm9yX2llIHtcbiAgICBibG9ja3F1b3RlIHtcbiAgICAgICAgbWFyZ2luOiAxZW0gNDBweDtcbiAgICB9XG59XG5cbi8vIEFkZHJlc3NlcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIFM1LCBDaHJvbWVcblxuZGZuIHtcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi8vIEFkZHJlc3NlcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFNi83LzgvOVxuXG5tYXJrIHtcbiAgICBiYWNrZ3JvdW5kOiAjZmYwO1xuICAgIGNvbG9yOiAjMDAwO1xufVxuXG4vLyBBZGRyZXNzZXMgbWFyZ2lucyBzZXQgZGlmZmVyZW50bHkgaW4gSUU2LzdcbkBpZiAkbGVnYWN5X3N1cHBvcnRfZm9yX2llIHtcbiAgICBwLFxuICAgIHByZSB7XG4gICAgICAgIG1hcmdpbjogMWVtIDA7XG4gICAgfVxufVxuXG4vLyBDb3JyZWN0cyBmb250IGZhbWlseSBzZXQgb2RkbHkgaW4gSUU2LCBTNC81LCBDaHJvbWVcbi8vIGVuLndpa2lwZWRpYS5vcmcvd2lraS9Vc2VyOkRhdmlkZ290aGJlcmcvVGVzdDU5XG5cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcbiAgICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBzZXJpZjtcbiAgICBAaWYgJGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZSB7XG4gICAgICAgIF9mb250LWZhbWlseTogJ2NvdXJpZXIgbmV3JywgbW9ub3NwYWNlO1xuICAgIH1cbiAgICBmb250LXNpemU6IDFlbTtcbn1cblxuLy8gSW1wcm92ZXMgcmVhZGFiaWxpdHkgb2YgcHJlLWZvcm1hdHRlZCB0ZXh0IGluIGFsbCBicm93c2Vyc1xuXG5wcmUge1xuICAgIHdoaXRlLXNwYWNlOiBwcmU7XG4gICAgd2hpdGUtc3BhY2U6IHByZS13cmFwO1xuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbn1cblxuLy8gU2V0IGNvbnNpc3RlbnQgcXVvdGUgdHlwZXMuXG5cbnEge1xuICAgIHF1b3RlczogXCJcXDIwMUNcIiBcIlxcMjAxRFwiIFwiXFwyMDE4XCIgXCJcXDIwMTlcIjtcbn1cblxuLy8gMS4gQWRkcmVzc2VzIENTUyBxdW90ZXMgbm90IHN1cHBvcnRlZCBpbiBJRTYvN1xuLy8gMi4gQWRkcmVzc2VzIHF1b3RlIHByb3BlcnR5IG5vdCBzdXBwb3J0ZWQgaW4gUzRcblxuLy8gMVxuQGlmICRsZWdhY3lfc3VwcG9ydF9mb3JfaWUge1xuICAgIHEge1xuICAgICAgICBxdW90ZXM6IG5vbmU7XG4gICAgfVxufVxuXG4vLyAyXG5xIHtcbiAgICAmOmJlZm9yZSxcbiAgICAmOmFmdGVyIHtcbiAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgIGNvbnRlbnQ6IG5vbmU7XG4gICAgfVxufVxuXG4vLyBBZGRyZXNzIGluY29uc2lzdGVudCBhbmQgdmFyaWFibGUgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cblxuLyogL3NtYWxsIHtcbiAgICBmb250LXNpemU6IDgwJTtcbn0gKi9cblxuLy8gUHJldmVudHMgc3ViIGFuZCBzdXAgYWZmZWN0aW5nIGxpbmUtaGVpZ2h0IGluIGFsbCBicm93c2Vyc1xuLy8gZ2lzdC5naXRodWIuY29tLzQxMzkzMFxuXG5zdWIsXG5zdXAge1xuICAgIGZvbnQtc2l6ZTogNzUlO1xuICAgIGxpbmUtaGVpZ2h0OiAwO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1cCB7XG4gICAgdG9wOiAtMC41ZW07XG59XG5cbnN1YiB7XG4gICAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gTGlzdHNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIEFkZHJlc3NlcyBtYXJnaW5zIHNldCBkaWZmZXJlbnRseSBpbiBJRTYvN1xuQGlmICRsZWdhY3lfc3VwcG9ydF9mb3JfaWUge1xuICAgIGRsLFxuICAgIG1lbnUsXG4gICAgb2wsXG4gICAgdWwge1xuICAgICAgICAvL21hcmdpbjogMWVtIDA7XG4gICAgfVxufVxuXG5AaWYgJGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZSB7XG4gICAgZGQge1xuICAgICAgICBtYXJnaW46IDAgMCAwIDQwcHg7XG4gICAgfVxufVxuXG4vLyBBZGRyZXNzZXMgcGFkZGluZ3Mgc2V0IGRpZmZlcmVudGx5IGluIElFNi83XG5AaWYgJGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZSB7XG4gICAgbWVudSxcbiAgICBvbCxcbiAgICB1bCB7XG4gICAgICAgIC8vcGFkZGluZzogMCAwIDAgNDBweDtcbiAgICB9XG59XG5cbi8vIENvcnJlY3RzIGxpc3QgaW1hZ2VzIGhhbmRsZWQgaW5jb3JyZWN0bHkgaW4gSUU3XG5cbm5hdiB7XG4gICAgdWwsXG4gICAgb2wge1xuICAgICAgICBAaWYgJGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZSB7XG4gICAgICAgICAgICAvL2xpc3Qtc3R5bGUtaW1hZ2U6IG5vbmU7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBFbWJlZGRlZCBjb250ZW50XG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyAxLiBSZW1vdmVzIGJvcmRlciB3aGVuIGluc2lkZSAnYScgZWxlbWVudCBpbiBJRTYvNy84LzksIEZGM1xuLy8gMi4gSW1wcm92ZXMgaW1hZ2UgcXVhbGl0eSB3aGVuIHNjYWxlZCBpbiBJRTdcbi8vICAgIGNvZGUuZmxpY2tyLmNvbS9ibG9nLzIwMDgvMTEvMTIvb24tdWktcXVhbGl0eS10aGUtbGl0dGxlLXRoaW5ncy1jbGllbnQtc2lkZS1pbWFnZS1yZXNpemluZy9cblxuaW1nIHtcbiAgICBib3JkZXI6IDA7IC8vIDFcbiAgICBAaWYgJGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZSB7XG4gICAgICAgIC1tcy1pbnRlcnBvbGF0aW9uLW1vZGU6IGJpY3ViaWM7IC8vIDJcbiAgICB9XG59XG5cbi8vIENvcnJlY3RzIG92ZXJmbG93IGRpc3BsYXllZCBvZGRseSBpbiBJRTlcblxuc3ZnOm5vdCg6cm9vdCkge1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBGaWd1cmVzXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyBBZGRyZXNzZXMgbWFyZ2luIG5vdCBwcmVzZW50IGluIElFNi83LzgvOSwgUzUsIE8xMVxuXG5maWd1cmUge1xuICAgIG1hcmdpbjogMDtcbn1cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIEZvcm1zXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyBDb3JyZWN0cyBtYXJnaW4gZGlzcGxheWVkIG9kZGx5IGluIElFNi83XG5AaWYgJGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZSB7XG4gICAgZm9ybSB7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICB9XG59XG5cbi8vIERlZmluZSBjb25zaXN0ZW50IGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZ1xuXG5maWVsZHNldCB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgICBtYXJnaW46IDAgMnB4O1xuICAgIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTtcbn1cblxuLy8gMS4gQ29ycmVjdHMgY29sb3Igbm90IGJlaW5nIGluaGVyaXRlZCBpbiBJRTYvNy84Lzlcbi8vIDIuIFJlbW92ZSBwYWRkaW5nIHNvIHBlb3BsZSBhcmVuJ3QgY2F1Z2h0IG91dCBpZiB0aGV5IHplcm8gb3V0IGZpZWxkc2V0cy5cbi8vIDMuIENvcnJlY3RzIHRleHQgbm90IHdyYXBwaW5nIGluIEZGM1xuLy8gNC4gQ29ycmVjdHMgYWxpZ25tZW50IGRpc3BsYXllZCBvZGRseSBpbiBJRTYvN1xuXG5sZWdlbmQge1xuICAgIGJvcmRlcjogMDsgLy8gMVxuICAgIHBhZGRpbmc6IDA7IC8vIDJcbiAgICB3aGl0ZS1zcGFjZTogbm9ybWFsOyAvLyAzXG4gICAgQGlmICRsZWdhY3lfc3VwcG9ydF9mb3JfaWUge1xuICAgICAgICAqbWFyZ2luLWxlZnQ6IC03cHg7IC8vIDRcbiAgICB9XG59XG5cbi8vIDEuIENvcnJlY3QgZm9udCBmYW1pbHkgbm90IGJlaW5nIGluaGVyaXRlZCBpbiBhbGwgYnJvd3NlcnMuXG4vLyAyLiBDb3JyZWN0cyBmb250IHNpemUgbm90IGJlaW5nIGluaGVyaXRlZCBpbiBhbGwgYnJvd3NlcnNcbi8vIDMuIEFkZHJlc3NlcyBtYXJnaW5zIHNldCBkaWZmZXJlbnRseSBpbiBJRTYvNywgRkYzKywgUzUsIENocm9tZVxuLy8gNC4gSW1wcm92ZXMgYXBwZWFyYW5jZSBhbmQgY29uc2lzdGVuY3kgaW4gYWxsIGJyb3dzZXJzXG5cbmJ1dHRvbixcbmlucHV0LFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0OyAvLyAxXG4gICAgZm9udC1zaXplOiAxMDAlOyAvLyAyXG4gICAgbWFyZ2luOiAwOyAvLyAzXG4gICAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyAvLyA0XG4gICAgQGlmICRsZWdhY3lfc3VwcG9ydF9mb3JfaWUge1xuICAgICAgICAqdmVydGljYWwtYWxpZ246IG1pZGRsZTsgLy8gNFxuICAgIH1cbn1cblxuLy8gQWRkcmVzc2VzIEZGMy80IHNldHRpbmcgbGluZS1oZWlnaHQgb24gJ2lucHV0JyB1c2luZyAhaW1wb3J0YW50IGluIHRoZSBVQSBzdHlsZXNoZWV0XG5cbmJ1dHRvbiwgaW5wdXQge1xuICAgIGxpbmUtaGVpZ2h0OiBub3JtYWw7XG59XG5cbi8vIEFkZHJlc3MgaW5jb25zaXN0ZW50IGB0ZXh0LXRyYW5zZm9ybWAgaW5oZXJpdGFuY2UgZm9yIGBidXR0b25gIGFuZCBgc2VsZWN0YC5cbi8vIEFsbCBvdGhlciBmb3JtIGNvbnRyb2wgZWxlbWVudHMgZG8gbm90IGluaGVyaXQgYHRleHQtdHJhbnNmb3JtYCB2YWx1ZXMuXG4vLyBDb3JyZWN0IGBidXR0b25gIHN0eWxlIGluaGVyaXRhbmNlIGluIENocm9tZSwgU2FmYXJpIDUrLCBhbmQgSUUgOCsuXG4vLyBDb3JyZWN0IGBzZWxlY3RgIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3ggNCsgYW5kIE9wZXJhLlxuXG5idXR0b24sXG5zZWxlY3Qge1xuICAgIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vLyAxLiBBdm9pZCB0aGUgV2ViS2l0IGJ1ZyBpbiBBbmRyb2lkIDQuMC4qIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYFxuLy8gICAgYW5kIGB2aWRlb2AgY29udHJvbHNcbi8vIDIuIENvcnJlY3RzIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgJ2lucHV0JyB0eXBlcyBpbiBpT1Ncbi8vIDMuIEltcHJvdmVzIHVzYWJpbGl0eSBhbmQgY29uc2lzdGVuY3kgb2YgY3Vyc29yIHN0eWxlIGJldHdlZW4gaW1hZ2UtdHlwZVxuLy8gICAgJ2lucHV0JyBhbmQgb3RoZXJzXG4vLyA0LiBSZW1vdmVzIGlubmVyIHNwYWNpbmcgaW4gSUU3IHdpdGhvdXQgYWZmZWN0aW5nIG5vcm1hbCB0ZXh0IGlucHV0c1xuLy8gICAgS25vd24gaXNzdWU6IGlubmVyIHNwYWNpbmcgcmVtYWlucyBpbiBJRTZcblxuYnV0dG9uLFxuaHRtbCBpbnB1dFt0eXBlPVwiYnV0dG9uXCJdLCAvLyAxXG5pbnB1dFt0eXBlPVwicmVzZXRcIl0sXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLy8gMlxuICAgIGN1cnNvcjogcG9pbnRlcjsgLy8gM1xuICAgIEBpZiAkbGVnYWN5X3N1cHBvcnRfZm9yX2llIHtcbiAgICAgICAgKm92ZXJmbG93OiB2aXNpYmxlOyAgLy8gNFxuICAgIH1cbn1cblxuLy8gUmUtc2V0IGRlZmF1bHQgY3Vyc29yIGZvciBkaXNhYmxlZCBlbGVtZW50c1xuXG5idXR0b25bZGlzYWJsZWRdLFxuaW5wdXRbZGlzYWJsZWRdIHtcbiAgICBjdXJzb3I6IGRlZmF1bHQ7XG59XG5cbi8vIFJlbW92ZXMgaW5uZXIgcGFkZGluZyBhbmQgYm9yZGVyIGluIEZGMytcbi8vIHd3dy5zaXRlcGVuLmNvbS9ibG9nLzIwMDgvMDUvMTQvdGhlLWRldmlscy1pbi10aGUtZGV0YWlscy1maXhpbmctZG9qb3MtdG9vbGJhci1idXR0b25zL1xuXG5idXR0b24sIGlucHV0IHtcbiAgICAmOjotbW96LWZvY3VzLWlubmVyIHtcbiAgICAgICAgYm9yZGVyOiAwO1xuICAgICAgICBwYWRkaW5nOiAwO1xuICAgIH1cbn1cblxuLy8gMS4gUmVtb3ZlcyBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRTYvNy84Lzlcbi8vIDIuIEltcHJvdmVzIHJlYWRhYmlsaXR5IGFuZCBhbGlnbm1lbnQgaW4gYWxsIGJyb3dzZXJzXG5cbnRleHRhcmVhIHtcbiAgICBvdmVyZmxvdzogYXV0bzsgLy8gMVxuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7IC8vIDJcbn1cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIFRhYmxlc1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gUmVtb3ZlIG1vc3Qgc3BhY2luZyBiZXR3ZWVuIHRhYmxlIGNlbGxzXG5cbnRhYmxlIHtcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICAgIGJvcmRlci1zcGFjaW5nOiAwO1xufVxuXG5pbnB1dCB7XG4gICAgLy8gMS4gQWRkcmVzc2VzIGFwcGVhcmFuY2Ugc2V0IHRvIHNlYXJjaGZpZWxkIGluIFM1LCBDaHJvbWVcbiAgICAvLyAyLiBBZGRyZXNzZXMgYm94LXNpemluZyBzZXQgdG8gYm9yZGVyLWJveCBpbiBTNSwgQ2hyb21lIChpbmNsdWRlIC1tb3ogdG8gZnV0dXJlLXByb29mKVxuICAgICZbdHlwZT1cInNlYXJjaFwiXSB7XG4gICAgICAgIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvLyAxXG4gICAgICAgIC1tb3otYm94LXNpemluZzogY29udGVudC1ib3g7XG4gICAgICAgIC13ZWJraXQtYm94LXNpemluZzogY29udGVudC1ib3g7IC8vIDJcbiAgICAgICAgYm94LXNpemluZzogY29udGVudC1ib3g7XG5cbiAgICBcdC8vIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBzZWFyY2ggY2FuY2VsIGJ1dHRvbiBpbiBTYWZhcmkgNSBhbmQgQ2hyb21lXG4gICAgICAgIC8vIG9uIE9TIFguXG4gICAgICAgICY6Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG4gICAgICAgICY6Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAgICAgICAgICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gMS4gQWRkcmVzcyBib3ggc2l6aW5nIHNldCB0byBgY29udGVudC1ib3hgIGluIElFIDgvOS8xMC5cbiAgICAvLyAyLiBSZW1vdmUgZXhjZXNzIHBhZGRpbmcgaW4gSUUgOC85LzEwLlxuICAgIC8vIDMuIFJlbW92ZXMgZXhjZXNzIHBhZGRpbmcgaW4gSUU3XG4gICAgLy8gICAgS25vd24gaXNzdWU6IGV4Y2VzcyBwYWRkaW5nIHJlbWFpbnMgaW4gSUU2XG4gICAgJlt0eXBlPVwiY2hlY2tib3hcIl0sXG4gICAgJlt0eXBlPVwicmFkaW9cIl0ge1xuICAgIFx0Ym94LXNpemluZzogYm9yZGVyLWJveDsgLy8gMVxuICAgIFx0cGFkZGluZzogMDsgLy8gMlxuICAgIFx0QGlmICRsZWdhY3lfc3VwcG9ydF9mb3JfaWUge1xuICAgICAgICBcdCpoZWlnaHQ6IDEzcHg7IC8vIDNcbiAgICAgICAgXHQqd2lkdGg6IDEzcHg7IC8vIDNcbiAgICBcdH1cbiAgICB9XG59XG4iLCJAY2hhcnNldCBcIlVURi04XCI7XG5hcnRpY2xlLCBhc2lkZSwgZGV0YWlscywgZmlnY2FwdGlvbiwgZmlndXJlLCBmb290ZXIsIGhlYWRlciwgaGdyb3VwLCBuYXYsIHNlY3Rpb24sIHN1bW1hcnkge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG5hdWRpbywgY2FudmFzLCB2aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7IH1cblxuW2hpZGRlbl0sIHRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG5odG1sIHtcbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgfVxuXG5ib2R5IHtcbiAgbWFyZ2luOiAwOyB9XG5cbmEge1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDsgfVxuICBhOmhvdmVyLCBhOmFjdGl2ZSB7XG4gICAgb3V0bGluZTogMDsgfVxuXG4vKiBAaWYgXFwkbm9ybWFsaXplX2hlYWRpbmdzID09IHRydWUge1xuICAgIGgxIHtcbiAgICAgICAgZm9udC1zaXplOiBcXCRoMV9mb250X3NpemU7XG4gICAgICAgIG1hcmdpbjogXFwkaDFfbWFyZ2luO1xuICAgIH1cblxuICAgIGgyIHtcbiAgICAgICAgZm9udC1zaXplOiBcXCRoMl9mb250X3NpemU7XG4gICAgICAgIG1hcmdpbjogXFwkaDJfbWFyZ2luO1xuICAgIH1cblxuICAgIGgzIHtcbiAgICAgICAgZm9udC1zaXplOiBcXCRoM19mb250X3NpemU7XG4gICAgICAgIG1hcmdpbjogXFwkaDNfbWFyZ2luO1xuICAgIH1cblxuICAgIGg0IHtcbiAgICAgICAgZm9udC1zaXplOiBcXCRoNF9mb250X3NpemU7XG4gICAgICAgIG1hcmdpbjogXFwkaDRfbWFyZ2luO1xuICAgIH1cblxuICAgIGg1IHtcbiAgICAgICAgZm9udC1zaXplOiBcXCRoNV9mb250X3NpemU7XG4gICAgICAgIG1hcmdpbjogXFwkaDVfbWFyZ2luO1xuICAgIH1cblxuICAgIGg2IHtcbiAgICAgICAgZm9udC1zaXplOiBcXCRoNl9mb250X3NpemU7XG4gICAgICAgIG1hcmdpbjogXFwkaDZfbWFyZ2luO1xuICAgIH1cbn0gKi9cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZDsgfVxuXG5iLCBzdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZDsgfVxuXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7IH1cblxubWFyayB7XG4gIGJhY2tncm91bmQ6ICNmZjA7XG4gIGNvbG9yOiAjMDAwOyB9XG5cbmNvZGUsIGtiZCwgcHJlLCBzYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgc2VyaWY7XG4gIGZvbnQtc2l6ZTogMWVtOyB9XG5cbnByZSB7XG4gIHdoaXRlLXNwYWNlOiBwcmU7XG4gIHdoaXRlLXNwYWNlOiBwcmUtd3JhcDtcbiAgd29yZC13cmFwOiBicmVhay13b3JkOyB9XG5cbnEge1xuICBxdW90ZXM6IFwiXFwyMDFDXCIgXCJcXDIwMURcIiBcIlxcMjAxOFwiIFwiXFwyMDE5XCI7IH1cblxucTpiZWZvcmUsIHE6YWZ0ZXIge1xuICBjb250ZW50OiAnJztcbiAgY29udGVudDogbm9uZTsgfVxuXG4vKiAvc21hbGwge1xuICAgIGZvbnQtc2l6ZTogODAlO1xufSAqL1xuc3ViLCBzdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtOyB9XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTsgfVxuXG5pbWcge1xuICBib3JkZXI6IDA7IH1cblxuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuOyB9XG5cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMDsgfVxuXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gIG1hcmdpbjogMCAycHg7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTsgfVxuXG5sZWdlbmQge1xuICBib3JkZXI6IDA7XG4gIHBhZGRpbmc6IDA7XG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7IH1cblxuYnV0dG9uLCBpbnB1dCwgc2VsZWN0LCB0ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICBmb250LXNpemU6IDEwMCU7XG4gIG1hcmdpbjogMDtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbmJ1dHRvbiwgaW5wdXQge1xuICBsaW5lLWhlaWdodDogbm9ybWFsOyB9XG5cbmJ1dHRvbiwgc2VsZWN0IHtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuYnV0dG9uLCBodG1sIGlucHV0W3R5cGU9XCJidXR0b25cIl0sIGlucHV0W3R5cGU9XCJyZXNldFwiXSwgaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICBjdXJzb3I6IHBvaW50ZXI7IH1cblxuYnV0dG9uW2Rpc2FibGVkXSwgaW5wdXRbZGlzYWJsZWRdIHtcbiAgY3Vyc29yOiBkZWZhdWx0OyB9XG5cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lciwgaW5wdXQ6Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXI6IDA7XG4gIHBhZGRpbmc6IDA7IH1cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbiAgdmVydGljYWwtYWxpZ246IHRvcDsgfVxuXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwOyB9XG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLW1vei1ib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7IH1cbiAgaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbiwgaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG5pbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0sIGlucHV0W3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIHBhZGRpbmc6IDA7IH1cblxuaHRtbCB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7IH1cblxuYm9keSB7XG4gIGNvbG9yOiAjMzMzO1xuICBsaW5lLWhlaWdodDogMS41O1xuICBmb250LWZhbWlseTogTmV3cyBDeWNsZSwgc2Fucy1zZXJpZjtcbiAgYmFja2dyb3VuZC1zaXplOiBhdXRvIDI0cHg7XG4gIG1hcmdpbjogMDsgfVxuXG5bY2xhc3MqPSdfX2hlYWRpbmcnXSB7XG4gIGNvbG9yOiAjMjY3ZTY0O1xuICBmb250LWZhbWlseTogUGxheWZhaXIgRGlzcGxheSwgc2VyaWY7XG4gIGZvbnQtc2l6ZTogMi41cmVtO1xuICBmb250LXdlaWdodDogNDAwO1xuICBsaW5lLWhlaWdodDogMTtcbiAgbWFyZ2luLWJvdHRvbTogMnJlbTsgfVxuXG5bY2xhc3MqPV9fYnV0dG9uXSwgaW5wdXRbdHlwZT1cImJ1dHRvblwiXSwgaW5wdXRbdHlwZT1cInJlc2V0XCJdIHtcbiAgYm9yZGVyOiAxcHggc29saWQgIzI2N2U2NDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGZvbnQtZmFtaWx5OiBQbGF5ZmFpciBEaXNwbGF5LCBzZXJpZjtcbiAgZm9udC1zaXplOiAxLjJyZW07XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwYWRkaW5nOiAuNzVyZW0gM3JlbTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAvKkl0ZW1zIGZvciB0cmFuc2l0aW9uICovXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBjb2xvcjogIzI2N2U2NDtcbiAgLypUcmFuc2l0aW9uIHNldHRpbmdzICovXG4gIHRyYW5zaXRpb246IGFsbCAuMnMgZWFzZTsgfVxuICBbY2xhc3MqPV9fYnV0dG9uXTpob3ZlciwgaW5wdXRbdHlwZT1cImJ1dHRvblwiXTpob3ZlciwgaW5wdXRbdHlwZT1cInJlc2V0XCJdOmhvdmVyIHtcbiAgICAvKlRoZXNlIHdpbGwgdHJhbnNpdGlvbiBvbiBob3ZlciAqL1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyNjdlNjQ7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG5cbi5sb2FkZXJfX2J1dHRvbi5kaXNhYmxlZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlNWU2ZTc7XG4gIGNvbG9yOiAjMjY3ZTY0O1xuICBjdXJzb3I6IGRlZmF1bHQ7XG4gIG9wYWNpdHk6IC4zOyB9XG5cbi5jbGVhcmZpeDphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBjbGVhcjogYm90aDsgfVxuXG5pbWcsIGlmcmFtZSwgZW1iZWQge1xuICB3aWR0aDogMTAwJTsgfVxuXG4uY29udGFpbmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjY2NjO1xuICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjY2NjO1xuICBtYXJnaW46IDAgYXV0bztcbiAgbWF4LXdpZHRoOiAxMjAwcHg7IH1cblxuW2NsYXNzKj0nY29sLSddIHtcbiAgZGlzcGxheTogdGFibGUtY2VsbDtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICBbY2xhc3MqPSdjb2wtJ10ge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyOyB9IH1cblxuLmNvbC0yLTEyIHtcbiAgd2lkdGg6IDE2LjY2NjY3JTsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAuY29sLTItMTIge1xuICAgICAgd2lkdGg6IDEwMCU7IH0gfVxuXG4uY29sLTMtMTIge1xuICB3aWR0aDogMjUlOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5jb2wtMy0xMiB7XG4gICAgICB3aWR0aDogMTAwJTsgfSB9XG5cbi5jb2wtNC0xMiB7XG4gIHdpZHRoOiAzMy4zMzMzMyU7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmNvbC00LTEyIHtcbiAgICAgIHdpZHRoOiAxMDAlOyB9IH1cblxuLmNvbC01LTEyIHtcbiAgd2lkdGg6IDQxLjY2NjY3JTsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAuY29sLTUtMTIge1xuICAgICAgd2lkdGg6IDEwMCU7IH0gfVxuXG4uY29sLTYtMTIge1xuICB3aWR0aDogNTAlOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5jb2wtNi0xMiB7XG4gICAgICB3aWR0aDogMTAwJTsgfSB9XG5cbi5jb2wtNy0xMiB7XG4gIHdpZHRoOiA1OC4zMzMzMyU7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmNvbC03LTEyIHtcbiAgICAgIHdpZHRoOiAxMDAlOyB9IH1cblxuLmNvbC04LTEyIHtcbiAgd2lkdGg6IDY2LjY2NjY3JTsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAuY29sLTgtMTIge1xuICAgICAgd2lkdGg6IDEwMCU7IH0gfVxuXG4uY29sLTktMTIge1xuICB3aWR0aDogNzUlOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5jb2wtOS0xMiB7XG4gICAgICB3aWR0aDogMTAwJTsgfSB9XG5cbi5jb2wtMTAtMTIge1xuICB3aWR0aDogODMuMzMzMzMlOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5jb2wtMTAtMTIge1xuICAgICAgd2lkdGg6IDEwMCU7IH0gfVxuXG4uY29sLTExLTEyIHtcbiAgd2lkdGg6IDkxLjY2NjY3JTsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAuY29sLTExLTEyIHtcbiAgICAgIHdpZHRoOiAxMDAlOyB9IH1cblxuKiB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxuICAqOjphZnRlciwgKjo6YmVmb3JlIHtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG5cbmJvZHkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWNlZWU2O1xuICBwYWRkaW5nOiAwOyB9XG5cbmEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiAjMjY3ZTY0OyB9XG4gIGE6aG92ZXIge1xuICAgIGNvbG9yOiAjNDU1NjUyO1xuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyB9XG5cbnRhYmxlIHtcbiAgbWFyZ2luOiAwIDAgMS41ZW07XG4gIHdpZHRoOiAxMDAlOyB9XG5cbnRyIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlNWU2ZTc7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDcwMHB4KSB7XG4gICAgdHIge1xuICAgICAgbWFyZ2luLXRvcDogMCAhaW1wb3J0YW50OyB9XG4gICAgICB0cjpmaXJzdC1jaGlsZCB7XG4gICAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTVlNmU3OyB9IH1cbiAgdHI6bnRoLWNoaWxkKGV2ZW4pIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmOGY4OyB9XG5cbnRkIHtcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgcGFkZGluZzogMTBweCA1cHg7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDcwMHB4KSB7XG4gICAgdGQge1xuICAgICAgbWFyZ2luLXRvcDogMCAhaW1wb3J0YW50O1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgcGFkZGluZy1sZWZ0OiA0MCU7IH1cbiAgICAgIHRkOmJlZm9yZSB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiA2cHg7XG4gICAgICAgIGxlZnQ6IDZweDtcbiAgICAgICAgd2lkdGg6IDQwJTtcbiAgICAgICAgcGFkZGluZy1yaWdodDogMTBweDtcbiAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDsgfVxuICAgICAgdGQ6bnRoLW9mLXR5cGUoMSk6YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogXCJDaXR5OiBcIjsgfVxuICAgICAgdGQ6bnRoLW9mLXR5cGUoMik6YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogXCJBZGRyZXNzOiBcIjsgfVxuICAgICAgdGQ6bnRoLW9mLXR5cGUoMyk6YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogXCJQaG9uZTogXCI7IH0gfVxuXG50aGVhZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlNWU2ZTc7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDcwMHB4KSB7XG4gICAgdGhlYWQgdHIge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAtOTk5OXB4O1xuICAgICAgbGVmdDogLTk5OTlweDsgfSB9XG4gIHRoZWFkIHRoIHtcbiAgICBmb250LXdlaWdodDogNjAwO1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgcGFkZGluZzogNXB4OyB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3MDBweCkge1xuICB0YWJsZSwgdGhlYWQsIHRib2R5LCB0aCwgdGQsIHRyIHtcbiAgICBkaXNwbGF5OiBibG9jazsgfSB9XG5cbi5uYXYtbWlub3Ige1xuICBkaXNwbGF5OiBibG9jaztcbiAgdGV4dC1hbGlnbjogcmlnaHQ7IH1cbiAgLm5hdi1taW5vcl9fY29udGFpbmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2NjYztcbiAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjY2NjO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIHBhZGRpbmctcmlnaHQ6IDEuNXJlbTtcbiAgICBwYWRkaW5nLXRvcDogMXJlbTtcbiAgICBtYXgtd2lkdGg6IDEyMDBweDsgfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgLm5hdi1taW5vcl9fY29udGFpbmVyIHtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOyB9IH1cbiAgLm5hdi1taW5vciBsaSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG4gICAgLm5hdi1taW5vciBsaTphZnRlciB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICBjb250ZW50OiAnIHwgJztcbiAgICAgIGNvbG9yOiAjMjY3ZTY0O1xuICAgICAgbWFyZ2luOiAwIDJweCAwIC4zcmVtOyB9XG4gICAgLm5hdi1taW5vciBsaTpudGgtY2hpbGQoMyk6YWZ0ZXIge1xuICAgICAgY29udGVudDogJyAnOyB9XG4gICAgLm5hdi1taW5vciBsaTpsYXN0LWNoaWxkIGEge1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7IH1cbiAgLm5hdi1taW5vcl9fbGluayB7XG4gICAgY29sb3I6ICMzMzM7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHBhZGRpbmc6IDAgLjNyZW0gMDsgfVxuICAgIC5uYXYtbWlub3JfX2xpbms6aG92ZXIge1xuICAgICAgY29sb3I6ICMyNjdlNjQ7IH1cblxuLnNpdGUtbWFwIGEge1xuICBjb2xvcjogIzMzMzsgfVxuICAuc2l0ZS1tYXAgYTpob3ZlciB7XG4gICAgY29sb3I6ICMyNjdlNjQ7IH1cblxuYS5jZC1uYXYtaXRlbTpob3ZlciBpbWcge1xuICBvcGFjaXR5OiAuNyAhaW1wb3J0YW50OyB9XG5hLmNkLW5hdi1pdGVtOmhvdmVyIGgzIHtcbiAgY29sb3I6ICM0NTU2NTIgIWltcG9ydGFudDsgfVxuXG5AbWVkaWEgKG1heC13aWR0aDogMTAyMnB4KSB7XG4gIGJvZHkubmF2LW9uLWxlZnQub3ZlcmZsb3ctaGlkZGVuIHtcbiAgICBvdmVyZmxvdzogaGlkZGVuOyB9IH1cblxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LW1zLWNsZWFyIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uLCBpbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLCBpbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1yZXN1bHRzLWJ1dHRvbiwgaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtcmVzdWx0cy1kZWNvcmF0aW9uIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICpcbiAqTWFpbiBjb21wb25lbnRzXG4gKlxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSogKi9cbi5jZC1tYWluLWNvbnRlbnQsIC5jZC1tYWluLWhlYWRlciB7XG4gIC8qIEZvcmNlIEhhcmR3YXJlIEFjY2VsZXJhdGlvbiBpbiBXZWJLaXQgKi9cbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApO1xuICB3aWxsLWNoYW5nZTogdHJhbnNmb3JtOyB9XG4gIC5jZC1tYWluLWNvbnRlbnQgdWwsIC5jZC1tYWluLWhlYWRlciB1bCB7XG4gICAgbGlzdC1zdHlsZTogbm9uZTsgfVxuXG4uY2QtbWFpbi1jb250ZW50IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zczsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogMTAyMnB4KSB7XG4gICAgLmNkLW1haW4tY29udGVudC5uYXYtaXMtdmlzaWJsZSB7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTI2MHB4KTsgfVxuICAgIC5uYXYtb24tbGVmdCAuY2QtbWFpbi1jb250ZW50Lm5hdi1pcy12aXNpYmxlIHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyNjBweCk7IH0gfVxuXG4uY2QtbWFpbi1oZWFkZXIge1xuICBmb250LWZhbWlseTogUGxheWZhaXIgRGlzcGxheSwgc2VyaWY7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3M7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMjJweCkge1xuICAgIC5jZC1tYWluLWhlYWRlci5uYXYtaXMtdmlzaWJsZSB7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7IH1cbiAgICAubmF2LW9uLWxlZnQgLmNkLW1haW4taGVhZGVyLm5hdi1pcy12aXNpYmxlIHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyNjBweCk7IH0gfVxuXG4uY2QtbWFpbi1jb250ZW50IHtcbiAgbWluLWhlaWdodDogMTAwdmg7XG4gIHotaW5kZXg6IDI7IH1cblxuLmNkLW1haW4taGVhZGVyIHtcbiAgaGVpZ2h0OiA1MHB4O1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICB6LWluZGV4OiAzO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2U1ZTZlNzsgfVxuICAubmF2LWlzLWZpeGVkIC5jZC1tYWluLWhlYWRlciB7XG4gICAgLyogYWRkIC5uYXYtaXMtZml4ZWQgY2xhc3MgdG8gYm9keSBpZiB5b3Ugd2FudCBhIGZpeGVkIG5hdmlnYXRpb24gb24gPiAxMDI0cHggKi9cbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgd2lkdGg6IDEwMCU7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgIC5jZC1tYWluLWhlYWRlciB7XG4gICAgICBoZWlnaHQ6IDgwcHg7IH1cbiAgICAgIC5jZC1tYWluLWhlYWRlcjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIGRpc3BsYXk6IHRhYmxlO1xuICAgICAgICBjbGVhcjogYm90aDsgfSB9XG5cbi5jZC1sb2dvIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDEycHg7XG4gIGxlZnQ6IDUlOyB9XG4gIC5jZC1sb2dvIGltZyB7XG4gICAgZGlzcGxheTogYmxvY2s7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMjJweCkge1xuICAgIC5uYXYtb24tbGVmdCAuY2QtbG9nbyB7XG4gICAgICBsZWZ0OiBhdXRvO1xuICAgICAgcmlnaHQ6IDUlOyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgIC5jZC1sb2dvIHtcbiAgICAgIHRvcDogMjZweDtcbiAgICAgIGxlZnQ6IDRlbTsgfSB9XG5cbi5jZC1oZWFkZXItYnV0dG9ucyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB0b3A6IDNweDtcbiAgcmlnaHQ6IDUlOyB9XG4gIC5jZC1oZWFkZXItYnV0dG9ucyBsaSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAxMDIycHgpIHtcbiAgICAubmF2LW9uLWxlZnQgLmNkLWhlYWRlci1idXR0b25zIHtcbiAgICAgIHJpZ2h0OiBhdXRvO1xuICAgICAgbGVmdDogNSU7IH1cbiAgICAgIC5uYXYtb24tbGVmdCAuY2QtaGVhZGVyLWJ1dHRvbnMgbGkge1xuICAgICAgICBmbG9hdDogcmlnaHQ7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgLmNkLWhlYWRlci1idXR0b25zIHtcbiAgICAgIHRvcDogMXJlbTtcbiAgICAgIHJpZ2h0OiAxcmVtOyB9IH1cblxuLmNkLXNlYXJjaC10cmlnZ2VyLCAuY2QtbmF2LXRyaWdnZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogNDRweDtcbiAgaGVpZ2h0OiA0NHB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAvKiBoaWRlIHRleHQgKi9cbiAgY29sb3I6IHRyYW5zcGFyZW50O1xuICB6LWluZGV4OiAzOyB9XG5cbi5jZC1zZWFyY2gtdHJpZ2dlcjo6YmVmb3JlLCAuY2Qtc2VhcmNoLXRyaWdnZXI6OmFmdGVyIHtcbiAgLyogc2VhcmNoIGljb24gKi9cbiAgY29udGVudDogJyc7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzO1xuICAvKiBGb3JjZSBIYXJkd2FyZSBBY2NlbGVyYXRpb24gaW4gV2ViS2l0ICovXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKTtcbiAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuOyB9XG4uY2Qtc2VhcmNoLXRyaWdnZXI6OmJlZm9yZSB7XG4gIC8qIGxlbnMgKi9cbiAgdG9wOiAxMXB4O1xuICBsZWZ0OiAxMXB4O1xuICB3aWR0aDogMThweDtcbiAgaGVpZ2h0OiAxOHB4O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJvcmRlcjogM3B4IHNvbGlkICM0NTU2NTI7IH1cbi5jZC1zZWFyY2gtdHJpZ2dlcjo6YWZ0ZXIge1xuICAvKiBoYW5kbGUgKi9cbiAgaGVpZ2h0OiAzcHg7XG4gIHdpZHRoOiA4cHg7XG4gIGJhY2tncm91bmQ6ICM0NTU2NTI7XG4gIGJvdHRvbTogMTRweDtcbiAgcmlnaHQ6IDExcHg7XG4gIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTsgfVxuLmNkLXNlYXJjaC10cmlnZ2VyIHNwYW4ge1xuICAvKiBjb250YWluZXIgZm9yIHRoZSBYIGljb24gKi9cbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7IH1cbi5jZC1zZWFyY2gtdHJpZ2dlciBzcGFuOjpiZWZvcmUsIC5jZC1zZWFyY2gtdHJpZ2dlciBzcGFuOjphZnRlciB7XG4gIC8qIGNsb3NlIGljb24gKi9cbiAgY29udGVudDogJyc7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBoZWlnaHQ6IDNweDtcbiAgd2lkdGg6IDIycHg7XG4gIHRvcDogNTAlO1xuICBtYXJnaW4tdG9wOiAtMnB4O1xuICBsZWZ0OiA1MCU7XG4gIG1hcmdpbi1sZWZ0OiAtMTFweDtcbiAgYmFja2dyb3VuZDogIzQ1NTY1MjtcbiAgb3BhY2l0eTogMDtcbiAgLyogRm9yY2UgSGFyZHdhcmUgQWNjZWxlcmF0aW9uIGluIFdlYktpdCAqL1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVooMCk7XG4gIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzLCB0cmFuc2Zvcm0gMC4zczsgfVxuLmNkLXNlYXJjaC10cmlnZ2VyIHNwYW46OmJlZm9yZSB7XG4gIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTsgfVxuLmNkLXNlYXJjaC10cmlnZ2VyIHNwYW46OmFmdGVyIHtcbiAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTsgfVxuLmNkLXNlYXJjaC10cmlnZ2VyLnNlYXJjaC1pcy12aXNpYmxlOjpiZWZvcmUsIC5jZC1zZWFyY2gtdHJpZ2dlci5zZWFyY2gtaXMtdmlzaWJsZTo6YWZ0ZXIge1xuICAvKiBoaWRlIHNlYXJjaCBpY29uICovXG4gIG9wYWNpdHk6IDA7IH1cbi5jZC1zZWFyY2gtdHJpZ2dlci5zZWFyY2gtaXMtdmlzaWJsZSBzcGFuOjpiZWZvcmUsIC5jZC1zZWFyY2gtdHJpZ2dlci5zZWFyY2gtaXMtdmlzaWJsZSBzcGFuOjphZnRlciB7XG4gIC8qIHNob3cgY2xvc2UgaWNvbiAqL1xuICBvcGFjaXR5OiAxOyB9XG4uY2Qtc2VhcmNoLXRyaWdnZXIuc2VhcmNoLWlzLXZpc2libGUgc3Bhbjo6YmVmb3JlIHtcbiAgdHJhbnNmb3JtOiByb3RhdGUoMTM1ZGVnKTsgfVxuLmNkLXNlYXJjaC10cmlnZ2VyLnNlYXJjaC1pcy12aXNpYmxlIHNwYW46OmFmdGVyIHtcbiAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpOyB9XG5cbi5jZC1uYXYtdHJpZ2dlcjpob3ZlciB7XG4gIGNvbG9yOiB0cmFuc3BhcmVudDsgfVxuLmNkLW5hdi10cmlnZ2VyIHNwYW4sIC5jZC1uYXYtdHJpZ2dlciBzcGFuOjpiZWZvcmUsIC5jZC1uYXYtdHJpZ2dlciBzcGFuOjphZnRlciB7XG4gIC8qIGhhbWJ1cmdlciBpY29uIGluIENTUyAqL1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgaGVpZ2h0OiAzcHg7XG4gIHdpZHRoOiAyNHB4O1xuICBiYWNrZ3JvdW5kOiAjNDU1NjUyOyB9XG4uY2QtbmF2LXRyaWdnZXIgc3BhbiB7XG4gIC8qIGxpbmUgaW4gdGhlIGNlbnRlciAqL1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICByaWdodDogMTBweDtcbiAgbWFyZ2luLXRvcDogLTJweDtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjNzIDAuM3M7IH1cbi5jZC1uYXYtdHJpZ2dlciBzcGFuOjpiZWZvcmUsIC5jZC1uYXYtdHJpZ2dlciBzcGFuOjphZnRlciB7XG4gIC8qIG90aGVyIDIgbGluZXMgKi9cbiAgY29udGVudDogJyc7XG4gIHJpZ2h0OiAwO1xuICAvKiBGb3JjZSBIYXJkd2FyZSBBY2NlbGVyYXRpb24gaW4gV2ViS2l0ICovXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKTtcbiAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICB0cmFuc2Zvcm0tb3JpZ2luOiAwJSA1MCU7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzIDAuM3M7IH1cbi5jZC1uYXYtdHJpZ2dlciBzcGFuOjpiZWZvcmUge1xuICAvKiBtZW51IGljb24gdG9wIGxpbmUgKi9cbiAgdG9wOiAtNnB4OyB9XG4uY2QtbmF2LXRyaWdnZXIgc3Bhbjo6YWZ0ZXIge1xuICAvKiBtZW51IGljb24gYm90dG9tIGxpbmUgKi9cbiAgdG9wOiA2cHg7IH1cbi5jZC1uYXYtdHJpZ2dlci5uYXYtaXMtdmlzaWJsZSBzcGFuIHtcbiAgLyogaGlkZSBsaW5lIGluIHRoZSBjZW50ZXIgKi9cbiAgYmFja2dyb3VuZDogcmdiYSg2OSwgODYsIDgyLCAwKTsgfVxuLmNkLW5hdi10cmlnZ2VyLm5hdi1pcy12aXNpYmxlIHNwYW46OmJlZm9yZSwgLmNkLW5hdi10cmlnZ2VyLm5hdi1pcy12aXNpYmxlIHNwYW46OmFmdGVyIHtcbiAgLyoga2VlcCB2aXNpYmxlIG90aGVyIDIgbGluZXMgKi9cbiAgYmFja2dyb3VuZDogIzQ1NTY1MjsgfVxuLmNkLW5hdi10cmlnZ2VyLm5hdi1pcy12aXNpYmxlIHNwYW46OmJlZm9yZSB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg0cHgpIHRyYW5zbGF0ZVkoLTNweCkgcm90YXRlKDQ1ZGVnKTsgfVxuLmNkLW5hdi10cmlnZ2VyLm5hdi1pcy12aXNpYmxlIHNwYW46OmFmdGVyIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDRweCkgdHJhbnNsYXRlWSgycHgpIHJvdGF0ZSgtNDVkZWcpOyB9XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5jZC1uYXYtdHJpZ2dlciB7XG4gICAgZGlzcGxheTogbm9uZTsgfSB9XG5cbi5jZC1wcmltYXJ5LW5hdiB7XG4gIHJpZ2h0OiAwOyB9XG5cbi5jZC1wcmltYXJ5LW5hdiB1bCB7XG4gIHJpZ2h0OiAyMHB4OyB9XG5cbi5jZC1wcmltYXJ5LW5hdiwgLmNkLXByaW1hcnktbmF2IHVsIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDI2MHB4O1xuICBiYWNrZ3JvdW5kOiAjNDU1NjUyO1xuICBvdmVyZmxvdzogYXV0bztcbiAgLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6IHRvdWNoO1xuICB6LWluZGV4OiAxO1xuICAvKiBGb3JjZSBIYXJkd2FyZSBBY2NlbGVyYXRpb24gaW4gV2ViS2l0ICovXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zczsgfVxuICAuY2QtcHJpbWFyeS1uYXYgYSwgLmNkLXByaW1hcnktbmF2IHVsIGEge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xuICAgIGhlaWdodDogNTBweDtcbiAgICBsaW5lLWhlaWdodDogNTBweDtcbiAgICBwYWRkaW5nOiAwIDIwcHg7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gICAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICM1MDY0NWY7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApO1xuICAgIHdpbGwtY2hhbmdlOiB0cmFuc2Zvcm0sIG9wYWNpdHk7XG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MsIG9wYWNpdHkgMC4zczsgfVxuICAuY2QtcHJpbWFyeS1uYXYuaXMtaGlkZGVuLCAuY2QtcHJpbWFyeS1uYXYgdWwuaXMtaGlkZGVuIHtcbiAgICAvKiBzZWNvbmRhcnkgbmF2aWdhdGlvbnMgaGlkZGVuIGJ5IGRlZmF1bHQgKi9cbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTAwJSk7IH1cbiAgLmNkLXByaW1hcnktbmF2Lm1vdmVzLW91dCA+IGxpID4gYSwgLmNkLXByaW1hcnktbmF2IHVsLm1vdmVzLW91dCA+IGxpID4gYSB7XG4gICAgLyogcHVzaCB0aGUgbmF2aWdhdGlvbiBpdGVtcyB0byB0aGUgbGVmdCAtIGFuZCBsb3dlciBkb3duIG9wYWNpdHkgLSB3aGVuIHNlY29uZGFyeSBuYXYgc2xpZGVzIGluICovXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKTtcbiAgICBvcGFjaXR5OiAwOyB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDIycHgpIHtcbiAgLm5hdi1vbi1sZWZ0IC5jZC1wcmltYXJ5LW5hdiwgLm5hdi1vbi1sZWZ0IC5jZC1wcmltYXJ5LW5hdiB1bCB7XG4gICAgcmlnaHQ6IGF1dG87XG4gICAgbGVmdDogMDsgfSB9XG5cbi5jZC1wcmltYXJ5LW5hdiAuc2VlLWFsbCBhIHtcbiAgLyogZGlmZmVyZW50IHN0eWxlIGZvciB0aGUgU2VlIGFsbCBidXR0b24gb24gbW9iaWxlIGFuZCB0YWJsZXQgKi9cbiAgY29sb3I6ICMyNjdlNjQ7IH1cbi5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWdhbGxlcnkgLmNkLW5hdi1pdGVtLCAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyAuY2QtbmF2LWl0ZW0ge1xuICAvKiBpdGVtcyB3aXRoIHBpY3R1cmUgKG9yIGljb24pIGFuZCB0aXRsZSAqL1xuICBoZWlnaHQ6IDgwcHg7XG4gIGxpbmUtaGVpZ2h0OiA4MHB4OyB9XG4gIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWdhbGxlcnkgLmNkLW5hdi1pdGVtIGgzLCAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyAuY2QtbmF2LWl0ZW0gaDMge1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7IH1cbi5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWdhbGxlcnkgLmNkLW5hdi1pdGVtIGltZyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGhlaWdodDogNDBweDtcbiAgd2lkdGg6IGF1dG87XG4gIGxlZnQ6IDIwcHg7XG4gIHRvcDogNTAlO1xuICBtYXJnaW4tdG9wOiAtMjBweDsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogMTAyMnB4KSB7XG4gICAgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtZ2FsbGVyeSAuY2QtbmF2LWl0ZW0gaW1nIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtaWNvbnMgLmNkLW5hdi1pdGVtIHtcbiAgcGFkZGluZy1sZWZ0OiA3NXB4OyB9XG4gIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWljb25zIC5jZC1uYXYtaXRlbSBwIHtcbiAgICBjb2xvcjogIzQ1NTY1MjtcbiAgICBmb250LXNpemU6IDEuM3JlbTtcbiAgICAvKiBoaWRlIGRlc2NyaXB0aW9uIG9uIHNtYWxsIGRldmljZXMgKi9cbiAgICBkaXNwbGF5OiBub25lOyB9XG4gIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWljb25zIC5jZC1uYXYtaXRlbTo6YmVmb3JlIHtcbiAgICAvKiBpdGVtIGljb24gKi9cbiAgICBjb250ZW50OiAnJztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMjBweDtcbiAgICB0b3A6IDUwJTtcbiAgICBtYXJnaW4tdG9wOiAtMjBweDtcbiAgICB3aWR0aDogNDBweDtcbiAgICBoZWlnaHQ6IDQwcHg7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICAgIGJhY2tncm91bmQtc2l6ZTogNDBweCA0MHB4OyB9XG4gIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWljb25zIC5jZC1uYXYtaXRlbS5pdGVtLTE6OmJlZm9yZSB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiL2ltYWdlcy9saW5lLWljb24tMS5zdmdcIik7IH1cbiAgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtaWNvbnMgLmNkLW5hdi1pdGVtLml0ZW0tMjo6YmVmb3JlIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIvaW1hZ2VzL2xpbmUtaWNvbi0yLnN2Z1wiKTsgfVxuICAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyAuY2QtbmF2LWl0ZW0uaXRlbS0zOjpiZWZvcmUge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi9pbWFnZXMvbGluZS1pY29uLTMuc3ZnXCIpOyB9XG4gIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWljb25zIC5jZC1uYXYtaXRlbS5pdGVtLTQ6OmJlZm9yZSB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiL2ltYWdlcy9saW5lLWljb24tNC5zdmdcIik7IH1cbiAgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtaWNvbnMgLmNkLW5hdi1pdGVtLml0ZW0tNTo6YmVmb3JlIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIvaW1hZ2VzL2xpbmUtaWNvbi01LnN2Z1wiKTsgfVxuICAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyAuY2QtbmF2LWl0ZW0uaXRlbS02OjpiZWZvcmUge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi9pbWFnZXMvbGluZS1pY29uLTYuc3ZnXCIpOyB9XG4gIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWljb25zIC5jZC1uYXYtaXRlbS5pdGVtLTc6OmJlZm9yZSB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiL2ltYWdlcy9saW5lLWljb24tNy5zdmdcIik7IH1cbiAgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtaWNvbnMgLmNkLW5hdi1pdGVtLml0ZW0tODo6YmVmb3JlIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIvaW1hZ2VzL2xpbmUtaWNvbi04LnN2Z1wiKTsgfVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjJweCkge1xuICAuY2QtcHJpbWFyeS1uYXYge1xuICAgIC8qIGJ5IGRlZmF1bHQgLmNkLXByaW1hcnktbmF2IGlzIGhpZGRlbiAtIHRyaWNrIGZvciBpT1MgZGV2aWNlcyB3aGVyZSB5b3UgY2FuIHNlZSB0aGUgbmF2aWdhdGlvbiBpZiB5b3UgcHVsbCBkb3duICovXG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgIHRyYW5zaXRpb246IHZpc2liaWxpdHkgMHMgMC4zczsgfVxuICAgIC5jZC1wcmltYXJ5LW5hdi5uYXYtaXMtdmlzaWJsZSB7XG4gICAgICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xuICAgICAgdHJhbnNpdGlvbjogdmlzaWJpbGl0eSAwcyAwczsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLmNkLXByaW1hcnktbmF2IHtcbiAgICBwb3NpdGlvbjogc3RhdGljO1xuICAgIHBhZGRpbmc6IDAgNTBweCAwIDA7XG4gICAgbWFyZ2luLWxlZnQ6IDIwcHg7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50OyB9XG4gICAgLmNkLXByaW1hcnktbmF2OmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICBkaXNwbGF5OiB0YWJsZTtcbiAgICAgIGNsZWFyOiBib3RoOyB9XG4gICAgLmNkLXByaW1hcnktbmF2Lm1vdmVzLW91dCA+IGxpID4gYSB7XG4gICAgICAvKiByZXNldCBtb2JpbGUgc3R5bGUgKi9cbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAgIG9wYWNpdHk6IDE7IH1cbiAgICAuY2QtcHJpbWFyeS1uYXYgdWwge1xuICAgICAgcG9zaXRpb246IHN0YXRpYztcbiAgICAgIGhlaWdodDogYXV0bztcbiAgICAgIHdpZHRoOiBhdXRvO1xuICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICB6LWluZGV4OiAzOyB9XG4gICAgICAuY2QtcHJpbWFyeS1uYXYgdWwuaXMtaGlkZGVuIHtcbiAgICAgICAgLyogcmVzZXQgbW9iaWxlIHN0eWxlICovXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTsgfVxuICAgICAgLmNkLXByaW1hcnktbmF2IHVsLm1vdmVzLW91dCA+IGxpID4gYSB7XG4gICAgICAgIC8qIHJlc2V0IG1vYmlsZSBzdHlsZSAqL1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgICAgIG9wYWNpdHk6IDE7IH1cbiAgICAuY2QtcHJpbWFyeS1uYXYgPiBsaSB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICBtYXJnaW4tbGVmdDogLjVyZW07IH1cbiAgICAuY2QtcHJpbWFyeS1uYXYgPiBsaSA+IGEge1xuICAgICAgLyogbWFpbiBuYXZpZ2F0aW9uIGJ1dHRvbnMgc3R5bGUgKi9cbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIGhlaWdodDogODBweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiA4MHB4O1xuICAgICAgcGFkZGluZzogMDtcbiAgICAgIGNvbG9yOiAjNDU1NjUyO1xuICAgICAgb3ZlcmZsb3c6IHZpc2libGU7XG4gICAgICBib3JkZXItYm90dG9tOiBub25lO1xuICAgICAgdHJhbnNpdGlvbjogY29sb3IgMC4zcywgYm94LXNoYWRvdyAwLjNzOyB9XG4gICAgICAuY2QtcHJpbWFyeS1uYXYgPiBsaSA+IGE6aG92ZXIge1xuICAgICAgICBjb2xvcjogIzI2N2U2NDtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG4gICAgICAuY2QtcHJpbWFyeS1uYXYgPiBsaSA+IGEuc2VsZWN0ZWQge1xuICAgICAgICBjb2xvcjogIzI2N2U2NDtcbiAgICAgICAgYm94LXNoYWRvdzogaW5zZXQgMCAtMnB4IDAgIzI2N2U2NDsgfVxuICAgIC5jZC1wcmltYXJ5LW5hdiAuZ28tYmFjaywgLmNkLXByaW1hcnktbmF2IC5zZWUtYWxsIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLXNlY29uZGFyeS1uYXYsIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWdhbGxlcnksIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWljb25zIHtcbiAgICAgIC8qIGRyb3Bkb3duIG1lbnUgc3R5bGUgKi9cbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogODBweDtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICAgIHBhZGRpbmc6IDJyZW07XG4gICAgICBib3gtc2hhZG93OiBpbnNldCAwIDFweCAwICNlNWU2ZTcsIDAgM3B4IDZweCByZ2JhKDAsIDAsIDAsIDAuMDUpO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAuM3MgMHMsIHZpc2liaWxpdHkgMHMgMHM7IH1cbiAgICAgIC5jZC1wcmltYXJ5LW5hdiAuY2Qtc2Vjb25kYXJ5LW5hdjphZnRlciwgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtZ2FsbGVyeTphZnRlciwgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtaWNvbnM6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICBkaXNwbGF5OiB0YWJsZTtcbiAgICAgICAgY2xlYXI6IGJvdGg7IH1cbiAgICAgIC5jZC1wcmltYXJ5LW5hdiAuY2Qtc2Vjb25kYXJ5LW5hdi5pcy1oaWRkZW4sIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWdhbGxlcnkuaXMtaGlkZGVuLCAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucy5pcy1oaWRkZW4ge1xuICAgICAgICBvcGFjaXR5OiAwO1xuICAgICAgICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gICAgICAgIHRyYW5zaXRpb246IG9wYWNpdHkgLjNzIDBzLCB2aXNpYmlsaXR5IDBzIC4zczsgfVxuICAgICAgLmNkLXByaW1hcnktbmF2IC5jZC1zZWNvbmRhcnktbmF2ID4gLnNlZS1hbGwsIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWdhbGxlcnkgPiAuc2VlLWFsbCwgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtaWNvbnMgPiAuc2VlLWFsbCB7XG4gICAgICAgIC8qIHRoaXMgaXMgdGhlIEJJRyBTZWUgYWxsIGJ1dHRvbiBhdCB0aGUgYm90dG9tIG9mIHRoZSBkcm9wZG93biBtZW51ICovXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIGJvdHRvbTogMDtcbiAgICAgICAgaGVpZ2h0OiA4MHB4O1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgLyogcmVzZXQgc29tZSBpbmhlcml0ZWQgc3R5bGUgKi9cbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICBwYWRkaW5nOiAwOyB9XG4gICAgICAgIC5jZC1wcmltYXJ5LW5hdiAuY2Qtc2Vjb25kYXJ5LW5hdiA+IC5zZWUtYWxsIGEsIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWdhbGxlcnkgPiAuc2VlLWFsbCBhLCAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyA+IC5zZWUtYWxsIGEge1xuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgZm9udC1zaXplOiAyLjJyZW07XG4gICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIGxpbmUtaGVpZ2h0OiA4MHB4O1xuICAgICAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTVlNmU3O1xuICAgICAgICAgIC8qIHJlc2V0IHNvbWUgaW5oZXJpdGVkIHN0eWxlICovXG4gICAgICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgICB0cmFuc2l0aW9uOiBjb2xvciAwLjJzLCBiYWNrZ3JvdW5kIDAuMnMsIGJvcmRlciAwLjJzOyB9XG4gICAgICAgICAgLmNkLXByaW1hcnktbmF2IC5jZC1zZWNvbmRhcnktbmF2ID4gLnNlZS1hbGwgYTpob3ZlciwgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtZ2FsbGVyeSA+IC5zZWUtYWxsIGE6aG92ZXIsIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWljb25zID4gLnNlZS1hbGwgYTpob3ZlciB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAjNDU1NjUyO1xuICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiAjNDU1NjUyO1xuICAgICAgICAgICAgY29sb3I6ICNmZmY7IH1cbiAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLXNlY29uZGFyeS1uYXYgPiBsaSB7XG4gICAgICAvKiBjaGFuZ2UgdGhlIGhlaWdodCBhY2NvcmRpbmcgdG8geW91ciBuZWVkcyAtIHlvdSBjYW4gZXZlbiBzZXQgaGVpZ2h0OiBhdXRvICovXG4gICAgICBoZWlnaHQ6IDM0MHB4O1xuICAgICAgLyogaGVyZSB5b3Ugc2V0IHRoZSBudW1iZXIgb2YgY29sdW1ucyAtIHVzZSB3aWR0aCBwZXJjZW50YWdlICovXG4gICAgICB3aWR0aDogMjMlO1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDIuNjYlO1xuICAgICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgI2U1ZTZlNztcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICBvdmVyZmxvdy14OiBoaWRkZW47XG4gICAgICBvdmVyZmxvdy15OiBhdXRvO1xuICAgICAgLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6IHRvdWNoOyB9XG4gICAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLXNlY29uZGFyeS1uYXYgPiBsaTpudGgtY2hpbGQoNG4rMikge1xuICAgICAgICAvKiArMiBiZWNhdXNlIHdlIGhhdmUgMiBsaXN0IGl0ZW1zIHdpdGggZGlzcGxheTpub25lICovXG4gICAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICAgICAgYm9yZGVyLXJpZ2h0OiBub25lOyB9XG4gICAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLXNlY29uZGFyeS1uYXYgPiBsaSA+IGEge1xuICAgICAgICAvKiBzZWNvbmRhcnkgbmF2IHRpdGxlICovXG4gICAgICAgIGNvbG9yOiAjMjY3ZTY0O1xuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgZm9udC1zaXplOiAxLjZyZW07XG4gICAgICAgIG1hcmdpbi1ib3R0b206IC42ZW07IH1cbiAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLXNlY29uZGFyeS1uYXYgYSB7XG4gICAgICBoZWlnaHQ6IDMwcHg7XG4gICAgICBsaW5lLWhlaWdodDogMzBweDtcbiAgICAgIHBhZGRpbmc6IDAgMTglIDAgMDtcbiAgICAgIGNvbG9yOiAjNDU1NjUyO1xuICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgICAgIGZvbnQtc2l6ZTogMS40cmVtOyB9XG4gICAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLXNlY29uZGFyeS1uYXYgYTpob3ZlciB7XG4gICAgICAgIGNvbG9yOiAjMjY3ZTY0OyB9XG4gICAgLmNkLXByaW1hcnktbmF2IC5jZC1zZWNvbmRhcnktbmF2IHVsIHtcbiAgICAgIC8qIEZvcmNlIEhhcmR3YXJlIEFjY2VsZXJhdGlvbiBpbiBXZWJLaXQgKi9cbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKTsgfVxuICAgIC5jZC1wcmltYXJ5LW5hdiAuY2Qtc2Vjb25kYXJ5LW5hdiB1bCB1bCB7XG4gICAgICAvKiB0ZXJ0aWFyeSBuYXZpZ2F0aW9uICovXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDA7XG4gICAgICBsZWZ0OiAwO1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgd2lkdGg6IDEwMCU7IH1cbiAgICAgIC5jZC1wcmltYXJ5LW5hdiAuY2Qtc2Vjb25kYXJ5LW5hdiB1bCB1bC5pcy1oaWRkZW4ge1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTAwJSk7IH1cbiAgICAgIC5jZC1wcmltYXJ5LW5hdiAuY2Qtc2Vjb25kYXJ5LW5hdiB1bCB1bCAuZ28tYmFjayB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gICAgICAgIC5jZC1wcmltYXJ5LW5hdiAuY2Qtc2Vjb25kYXJ5LW5hdiB1bCB1bCAuZ28tYmFjayBhIHtcbiAgICAgICAgICBjb2xvcjogdHJhbnNwYXJlbnQ7IH1cbiAgICAgIC5jZC1wcmltYXJ5LW5hdiAuY2Qtc2Vjb25kYXJ5LW5hdiB1bCB1bCAuc2VlLWFsbCB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gICAgLmNkLXByaW1hcnktbmF2IC5jZC1zZWNvbmRhcnktbmF2IC5tb3Zlcy1vdXQgPiBsaSA+IGEge1xuICAgICAgLyogcHVzaCB0aGUgbmF2aWdhdGlvbiBpdGVtcyB0byB0aGUgbGVmdCAtIGFuZCBsb3dlciBkb3duIG9wYWNpdHkgLSB3aGVuIHRlcnRpYXJ5IG5hdiBzbGlkZXMgaW4gKi9cbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSk7IH1cbiAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1nYWxsZXJ5IHtcbiAgICAgIGJveC1zaGFkb3c6IDAgNXB4IDVweCByZ2JhKDEwMCwgMTAwLCAxMDAsIDAuMyk7IH1cbiAgICAgIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWdhbGxlcnkgbGkge1xuICAgICAgICAvKiBzZXQgaGVyZSBudW1iZXIgb2YgY29sdW1ucyAtIHVzZSB3aWR0aCBwZXJjZW50YWdlICovXG4gICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICB3aWR0aDogMjUlO1xuICAgICAgICBwYWRkaW5nOiAxcmVtOyB9XG4gICAgICAgIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWdhbGxlcnkgbGk6bnRoLWNoaWxkKDRuKzIpIHtcbiAgICAgICAgICAvKiArMiBiZWNhdXNlIHdlIGhhdmUgdHdvIGFkZGl0aW9uYWwgbGlzdCBpdGVtcyB3aXRoIGRpc3BsYXk6bm9uZSAqLyB9XG4gICAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1nYWxsZXJ5IC5jZC1uYXYtaXRlbSB7XG4gICAgICAgIGJvcmRlci1ib3R0b206IG5vbmU7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgIGhlaWdodDogYXV0bztcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuMjsgfVxuICAgICAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1nYWxsZXJ5IC5jZC1uYXYtaXRlbSBpbWcge1xuICAgICAgICAgIHBvc2l0aW9uOiBzdGF0aWM7XG4gICAgICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICAgICAgICBoZWlnaHQ6IGF1dG87XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgbWFyZ2luLWJvdHRvbTogLjZyZW07IH1cbiAgICAgICAgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtZ2FsbGVyeSAuY2QtbmF2LWl0ZW0gaDMge1xuICAgICAgICAgIGNvbG9yOiAjMjY3ZTY0O1xuICAgICAgICAgIGZvbnQtc2l6ZTogLjlyZW07XG4gICAgICAgICAgcGFkZGluZzogMCAuNHJlbTtcbiAgICAgICAgICBmb250LXdlaWdodDogbm9ybWFsOyB9XG4gICAgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtaWNvbnMgbGkge1xuICAgICAgLyogc2V0IGhlcmUgbnVtYmVyIG9mIGNvbHVtbnMgLSB1c2Ugd2lkdGggcGVyY2VudGFnZSAqL1xuICAgICAgd2lkdGg6IDMyJTtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgbWFyZ2luOiAwIDIlIDIwcHggMDsgfVxuICAgICAgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtaWNvbnMgbGk6bnRoLWNoaWxkKDNuKzIpIHtcbiAgICAgICAgLyogKzIgYmVjYXVzZSB3ZSBoYXZlIHR3byBhZGRpdGlvbmFsIGxpc3QgaXRlbXMgd2l0aCBkaXNwbGF5Om5vbmUgKi9cbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAwOyB9XG4gICAgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtaWNvbnMgLmNkLW5hdi1pdGVtIHtcbiAgICAgIGJvcmRlci1ib3R0b206IG5vbmU7XG4gICAgICBoZWlnaHQ6IDgwcHg7XG4gICAgICBsaW5lLWhlaWdodDogMS4yO1xuICAgICAgcGFkZGluZzogMjRweCAwIDAgODVweDsgfVxuICAgICAgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtaWNvbnMgLmNkLW5hdi1pdGVtOmhvdmVyIHtcbiAgICAgICAgYmFja2dyb3VuZDogI2ZhZmFmYjsgfVxuICAgICAgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtaWNvbnMgLmNkLW5hdi1pdGVtIGgzIHtcbiAgICAgICAgY29sb3I6ICMyNjdlNjQ7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkOyB9XG4gICAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyAuY2QtbmF2LWl0ZW0gcCB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gICAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyAuY2QtbmF2LWl0ZW06OmJlZm9yZSB7XG4gICAgICAgIGxlZnQ6IDI1cHg7IH0gfVxuXG4uaGFzLWNoaWxkcmVuID4gYSwgLmdvLWJhY2sgYSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAuaGFzLWNoaWxkcmVuID4gYTo6YmVmb3JlLCAuaGFzLWNoaWxkcmVuID4gYTo6YWZ0ZXIsIC5nby1iYWNrIGE6OmJlZm9yZSwgLmdvLWJhY2sgYTo6YWZ0ZXIge1xuICAgIC8qIGFycm93IGljb24gaW4gQ1NTIC0gZm9yIGVsZW1lbnQgd2l0aCBuZXN0ZWQgdW5vcmRlcmVkIGxpc3RzICovXG4gICAgY29udGVudDogJyc7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNTAlO1xuICAgIG1hcmdpbi10b3A6IC0xcHg7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGhlaWdodDogMnB4O1xuICAgIHdpZHRoOiAxMHB4O1xuICAgIGJhY2tncm91bmQ6ICM1YzcyNmQ7XG4gICAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuOyB9XG4gIC5oYXMtY2hpbGRyZW4gPiBhOjpiZWZvcmUsIC5nby1iYWNrIGE6OmJlZm9yZSB7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpOyB9XG4gIC5oYXMtY2hpbGRyZW4gPiBhOjphZnRlciwgLmdvLWJhY2sgYTo6YWZ0ZXIge1xuICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgIC5oYXMtY2hpbGRyZW4gPiBhOjpiZWZvcmUsIC5oYXMtY2hpbGRyZW4gPiBhOjphZnRlciwgLmdvLWJhY2sgYTo6YmVmb3JlLCAuZ28tYmFjayBhOjphZnRlciB7XG4gICAgICBiYWNrZ3JvdW5kOiAjY2FjZGNmOyB9XG4gICAgLmhhcy1jaGlsZHJlbiA+IGE6aG92ZXI6OmJlZm9yZSwgLmhhcy1jaGlsZHJlbiA+IGE6aG92ZXI6OmFmdGVyLCAuZ28tYmFjayBhOmhvdmVyOjpiZWZvcmUsIC5nby1iYWNrIGE6aG92ZXI6OmFmdGVyIHtcbiAgICAgIGJhY2tncm91bmQ6ICMyNjdlNjQ7IH0gfVxuXG4uaGFzLWNoaWxkcmVuID4gYSB7XG4gIHBhZGRpbmctcmlnaHQ6IDQwcHg7IH1cbiAgLmhhcy1jaGlsZHJlbiA+IGE6OmJlZm9yZSwgLmhhcy1jaGlsZHJlbiA+IGE6OmFmdGVyIHtcbiAgICAvKiBhcnJvdyBnb2VzIG9uIHRoZSByaWdodCBzaWRlIC0gY2hpbGRyZW4gbmF2aWdhdGlvbiAqL1xuICAgIHJpZ2h0OiAyMHB4O1xuICAgIHRyYW5zZm9ybS1vcmlnaW46IDlweCA1MCU7IH1cblxuLmNkLXByaW1hcnktbmF2IC5nby1iYWNrIGEge1xuICBwYWRkaW5nLWxlZnQ6IDQwcHg7IH1cbiAgLmNkLXByaW1hcnktbmF2IC5nby1iYWNrIGE6OmJlZm9yZSwgLmNkLXByaW1hcnktbmF2IC5nby1iYWNrIGE6OmFmdGVyIHtcbiAgICAvKiBhcnJvdyBnb2VzIG9uIHRoZSBsZWZ0IHNpZGUgLSBnbyBiYWNrIGJ1dHRvbiAqL1xuICAgIGxlZnQ6IDIwcHg7XG4gICAgdHJhbnNmb3JtLW9yaWdpbjogMXB4IDUwJTsgfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5oYXMtY2hpbGRyZW4gPiBhOjpiZWZvcmUsIC5oYXMtY2hpbGRyZW4gPiBhOjphZnRlciB7XG4gICAgcmlnaHQ6IDE1JTsgfVxuICAuY2QtcHJpbWFyeS1uYXYgPiAuaGFzLWNoaWxkcmVuID4gYSB7XG4gICAgLyogbWFpbiBuYXZpZ2F0aW9uIGFycm93cyBvbiBsYXJnZXIgZGV2aWNlcyAqL1xuICAgIHBhZGRpbmctcmlnaHQ6IDMwcHggIWltcG9ydGFudDsgfVxuICAgIC5jZC1wcmltYXJ5LW5hdiA+IC5oYXMtY2hpbGRyZW4gPiBhOjpiZWZvcmUsIC5jZC1wcmltYXJ5LW5hdiA+IC5oYXMtY2hpbGRyZW4gPiBhOjphZnRlciB7XG4gICAgICB3aWR0aDogOXB4O1xuICAgICAgdHJhbnNmb3JtLW9yaWdpbjogNTAlIDUwJTtcbiAgICAgIGJhY2tncm91bmQ6ICNjYWNkY2Y7XG4gICAgICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gICAgICB0cmFuc2l0aW9uOiB3aWR0aCAwLjNzLCB0cmFuc2Zvcm0gMC4zczsgfVxuICAgIC5jZC1wcmltYXJ5LW5hdiA+IC5oYXMtY2hpbGRyZW4gPiBhOjpiZWZvcmUge1xuICAgICAgcmlnaHQ6IDEycHg7IH1cbiAgICAuY2QtcHJpbWFyeS1uYXYgPiAuaGFzLWNoaWxkcmVuID4gYTo6YWZ0ZXIge1xuICAgICAgcmlnaHQ6IDdweDsgfVxuICAgIC5jZC1wcmltYXJ5LW5hdiA+IC5oYXMtY2hpbGRyZW4gPiBhLnNlbGVjdGVkOjpiZWZvcmUsIC5jZC1wcmltYXJ5LW5hdiA+IC5oYXMtY2hpbGRyZW4gPiBhLnNlbGVjdGVkOjphZnRlciB7XG4gICAgICB3aWR0aDogMTRweDsgfVxuICAgIC5jZC1wcmltYXJ5LW5hdiA+IC5oYXMtY2hpbGRyZW4gPiBhLnNlbGVjdGVkOjpiZWZvcmUge1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDVweCkgcm90YXRlKC00NWRlZyk7IH1cbiAgICAuY2QtcHJpbWFyeS1uYXYgPiAuaGFzLWNoaWxkcmVuID4gYS5zZWxlY3RlZDo6YWZ0ZXIge1xuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpOyB9XG4gIC5jZC1zZWNvbmRhcnktbmF2ID4gLmhhcy1jaGlsZHJlbiA+IGE6OmJlZm9yZSwgLmNkLXNlY29uZGFyeS1uYXYgPiAuaGFzLWNoaWxkcmVuID4gYTo6YWZ0ZXIge1xuICAgIC8qIHJlbW92ZSBhcnJvd3Mgb24gc2Vjb25kYXJ5IG5hdiB0aXRsZXMgKi9cbiAgICBkaXNwbGF5OiBub25lOyB9XG4gIC5jZC1wcmltYXJ5LW5hdiAuZ28tYmFjayBhIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDIwcHg7IH1cbiAgICAuY2QtcHJpbWFyeS1uYXYgLmdvLWJhY2sgYTo6YmVmb3JlLCAuY2QtcHJpbWFyeS1uYXYgLmdvLWJhY2sgYTo6YWZ0ZXIge1xuICAgICAgbGVmdDogMXB4OyB9IH1cblxuLmNkLXNlYXJjaCB7XG4gIGZsb2F0OiByaWdodDsgfVxuICAuY2Qtc2VhcmNoIGZvcm0ge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAuY2Qtc2VhcmNoIGlucHV0W3R5cGU9XCJzdWJtaXRcIl0ge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi9pbWFnZXMvc2VhcmNoLWljb24ucG5nXCIpO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHRleHQtaW5kZW50OiAtOTk5OTlweDtcbiAgICBoZWlnaHQ6IDIycHg7XG4gICAgd2lkdGg6IDIycHg7XG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICAgIGJvcmRlcjogMDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA2cHg7XG4gICAgcmlnaHQ6IDNweDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IDc1JTsgfVxuICAuY2Qtc2VhcmNoIGlucHV0W3R5cGU9XCJzZWFyY2hcIl0ge1xuICAgIHBhZGRpbmctbGVmdDogMTBweDtcbiAgICBhcHBlYXJhbmNlOiBub25lO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7IH1cbiAgICAuY2Qtc2VhcmNoIGlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIsIC5jZC1zZWFyY2ggaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LW1vei1wbGFjZWhvbGRlciwgLmNkLXNlYXJjaCBpbnB1dFt0eXBlPVwic2VhcmNoXCJdOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgICBjb2xvcjogI2NhY2RjZjsgfVxuICAgIC5jZC1zZWFyY2ggaW5wdXRbdHlwZT1cInNlYXJjaFwiXTpmb2N1cyB7XG4gICAgICBvdXRsaW5lOiBub25lOyB9XG4gIC5jZC1zZWFyY2guaXMtdmlzaWJsZSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgLjNzIDBzLCB2aXNpYmlsaXR5IDBzIDBzOyB9XG4gIC5uYXYtaXMtZml4ZWQgLmNkLXNlYXJjaCB7XG4gICAgcG9zaXRpb246IGZpeGVkOyB9XG5cbi5jZC1vdmVybGF5IHtcbiAgLyogc2hhZG93IGxheWVyIHZpc2libGUgd2hlbiBuYXZpZ2F0aW9uIGlzIGFjdGl2ZSAqL1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHotaW5kZXg6IDI7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gIG9wYWNpdHk6IDA7XG4gIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzIDBzLCB2aXNpYmlsaXR5IDBzIDAuM3MsIHRyYW5zZm9ybSAwLjNzIDBzOyB9XG4gIC5jZC1vdmVybGF5LmlzLXZpc2libGUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3MgMHMsIHZpc2liaWxpdHkgMHMgMHMsIHRyYW5zZm9ybSAwLjNzIDBzOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAxMDIycHgpIHtcbiAgICAuY2Qtb3ZlcmxheS5pcy12aXNpYmxlIHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTsgfVxuICAgIC5uYXYtb24tbGVmdCAuY2Qtb3ZlcmxheS5pcy12aXNpYmxlIHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyNjBweCk7IH1cbiAgICAuY2Qtb3ZlcmxheS5pcy12aXNpYmxlLnNlYXJjaC1pcy12aXNpYmxlLCAubmF2LW9uLWxlZnQgLmNkLW92ZXJsYXkuaXMtdmlzaWJsZS5zZWFyY2gtaXMtdmlzaWJsZSB7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7IH0gfVxuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICpcbiAqc3VwcG9ydCBmb3Igbm8ganNcbiAqXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4ubm8tanMgLmNkLXByaW1hcnktbmF2IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBoZWlnaHQ6IGF1dG87XG4gIHdpZHRoOiAxMDAlO1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgei1pbmRleDogMjsgfVxuXG4ubm8tanMgLmNkLXNlYXJjaCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdG9wOiAwO1xuICBvcGFjaXR5OiAxO1xuICB2aXNpYmlsaXR5OiB2aXNpYmxlOyB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLm5vLWpzIC5jZC1wcmltYXJ5LW5hdiB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHotaW5kZXg6IDM7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIHRvcDogMDtcbiAgICByaWdodDogMTUwcHg7XG4gICAgcGFkZGluZzogMDsgfVxuICAubm8tanMgLm5hdi1pcy1maXhlZCAuY2QtcHJpbWFyeS1uYXYge1xuICAgIHBvc2l0aW9uOiBmaXhlZDsgfSB9XG5cbi5uYXYtZm9vdGVyIHtcbiAgcGFkZGluZzogMzBweCAyMHB4IDIwcHg7XG4gIHRleHQtYWxpZ246IGxlZnQ7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLm5hdi1mb290ZXIge1xuICAgICAgZGlzcGxheTogbm9uZTsgfSB9XG4gIC5uYXYtZm9vdGVyX19oZWFkaW5nIHtcbiAgICBmb250LWZhbWlseTogTmV3cyBDeWNsZSwgc2Fucy1zZXJpZjtcbiAgICBmb250LXNpemU6IDFyZW07XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICBtYXJnaW4tYm90dG9tOiAxcmVtOyB9XG4gICAgLm5hdi1mb290ZXJfX2hlYWRpbmcgYSB7XG4gICAgICBjb2xvcjogIzMzMzsgfVxuICAgICAgLm5hdi1mb290ZXJfX2hlYWRpbmcgYTpob3ZlciB7XG4gICAgICAgIGNvbG9yOiAjMjY3ZTY0OyB9XG4gIC5uYXYtZm9vdGVyX19saW5rIHtcbiAgICBmb250LXNpemU6IDE0cHg7IH1cbiAgLm5hdi1mb290ZXJfX2JveCB7XG4gICAgcGFkZGluZzogMCAxMHB4O1xuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7IH1cbiAgLm5hdi1mb290ZXJfX2JveC1uYXJyb3cge1xuICAgIHBhZGRpbmc6IDAgMTBweDtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wOyB9XG4gIC5uYXYtZm9vdGVyX19idXR0b24ge1xuICAgIGJvcmRlci13aWR0aDogMXB4O1xuICAgIGNvbG9yOiAjMjY3ZTY0O1xuICAgIGZvbnQtc2l6ZTogLjlyZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbiAgICBwYWRkaW5nOiAuNXJlbSAxcmVtO1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gIC5uYXYtZm9vdGVyX19zdWItbGlua3Mge1xuICAgIGZvbnQtc2l6ZTogMTRweDsgfVxuICAgIC5uYXYtZm9vdGVyX19zdWItbGlua3MgbGk6bnRoLWNoaWxkKDEpIHtcbiAgICAgIGZvbnQtZmFtaWx5OiBOZXdzIEN5Y2xlLCBzYW5zLXNlcmlmO1xuICAgICAgZm9udC1zaXplOiAxcmVtO1xuICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICAgIG1hcmdpbi1ib3R0b206IC41cmVtOyB9XG4gICAgICAubmF2LWZvb3Rlcl9fc3ViLWxpbmtzIGxpOm50aC1jaGlsZCgxKSBhIHtcbiAgICAgICAgY29sb3I6ICMzMzM7IH1cbiAgICAgICAgLm5hdi1mb290ZXJfX3N1Yi1saW5rcyBsaTpudGgtY2hpbGQoMSkgYTpob3ZlciB7XG4gICAgICAgICAgY29sb3I6ICMyNjdlNjQ7IH1cblxuLmJhbm5lci10YWxsIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKGltYWdlcy9pbmRleF9oZXJvLmpwZyk7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgaGVpZ2h0OiAyMDBweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3NjlweCkge1xuICAgIC5iYW5uZXItdGFsbCB7XG4gICAgICBoZWlnaHQ6IDQ2NXB4OyB9IH1cbiAgLmJhbm5lci10YWxsX19oZWFkbGluZSB7XG4gICAgYm90dG9tOiAzcmVtO1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGZvbnQtZmFtaWx5OiBzZXJpZjtcbiAgICBmb250LXNpemU6IDRyZW07XG4gICAgZm9udC13ZWlnaHQ6IDgwMDtcbiAgICBsZWZ0OiAycmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBtYXJnaW46IDAgMCAxcmVtIDFyZW07XG4gICAgdGV4dC1zaGFkb3c6IDJweCAycHggMnB4ICMzMzM7IH1cbiAgICAuYmFubmVyLXRhbGxfX2hlYWRsaW5lIHN1cCB7XG4gICAgICBmb250LXNpemU6IDEuNzVyZW07IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgICAgIC5iYW5uZXItdGFsbF9faGVhZGxpbmUge1xuICAgICAgICBwb3NpdGlvbjogc3RhdGljO1xuICAgICAgICBmb250LXNpemU6IDJyZW07XG4gICAgICAgIHBhZGRpbmc6IDJyZW07IH0gfVxuXG4uYmFubmVyLXN0YW5kYXJkIHtcbiAgYmFja2dyb3VuZDogIzI2N2U2NDtcbiAgY29sb3I6ICNmZmY7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBoZWlnaHQ6IGF1dG87IH1cbiAgLmJhbm5lci1zdGFuZGFyZCBpbWcge1xuICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gIC5iYW5uZXItc3RhbmRhcmRfX2JveCB7XG4gICAgcGFkZGluZzogMXJlbSAycmVtOyB9XG4gIC5iYW5uZXItc3RhbmRhcmRfX2hlYWRpbmcge1xuICAgIGNvbG9yOiAjZmZmOyB9XG4gIC5iYW5uZXItc3RhbmRhcmRfX21lZGlhIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWNlZWU2OyB9XG5cbi5iYW5uZXItcGFub3JhbWEge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1hZ2VzL3RyZWVzLmpwZyk7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgaGVpZ2h0OiAyNTVweDsgfVxuXG4uY2FyZC1kaXB0aWMge1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNjY2M7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjY2NjOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5jYXJkLWRpcHRpYyB7XG4gICAgICBmbGV4LWZsb3c6IGNvbHVtbjsgfSB9XG4gIC5jYXJkLWRpcHRpY19fYm94IHtcbiAgICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgcGFkZGluZzogMnJlbSAxcmVtOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDc2OXB4KSB7XG4gICAgICAuY2FyZC1kaXB0aWNfX2JveCB7XG4gICAgICAgIHBhZGRpbmc6IDJyZW0gMXJlbSAycmVtIDJyZW07IH0gfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjlweCkge1xuICAgICAgLmNhcmQtZGlwdGljX19ib3g6bnRoLWNoaWxkKDIpIHtcbiAgICAgICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjY2NjO1xuICAgICAgICBwYWRkaW5nOiAycmVtIDJyZW0gMnJlbSAxcmVtOyB9IH1cbiAgLmNhcmQtZGlwdGljX19oZWFkaW5nIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgLmNhcmQtZGlwdGljX19tZWRpYSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMnJlbTsgfVxuICAuY2FyZC1kaXB0aWNfX3RleHQge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW4tYm90dG9tOiAycmVtOyB9XG4gIC5jYXJkLWRpcHRpYyB1bCB7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgICAuY2FyZC1kaXB0aWMgdWwgbGkge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgcGFkZGluZzogLjVyZW07XG4gICAgICB3aWR0aDogNDclOyB9XG4gIC5jYXJkLWRpcHRpY19fbGluayB7XG4gICAgY29sb3I6ICMyNjdlNjQ7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGZvbnQtZmFtaWx5OiBQbGF5ZmFpciBEaXNwbGF5LCBzZXJpZjtcbiAgICBwYWRkaW5nOiAwIC40cmVtO1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IH1cbiAgICAuY2FyZC1kaXB0aWNfX2xpbms6aG92ZXIge1xuICAgICAgY29sb3I6ICM0NTU2NTI7IH1cblxuLmNhcmQtYmlvIHtcbiAgcGFkZGluZy1ib3R0b206IDJyZW07IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmNhcmQtYmlvIHtcbiAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZTVlNmU3O1xuICAgICAgbWFyZ2luLWJvdHRvbTogMnJlbTsgfSB9XG4gIC5jYXJkLWJpb19fbWVkaWEge1xuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgIC5jYXJkLWJpb19fbWVkaWEge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAxcmVtO1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH0gfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgLmNhcmQtYmlvX19tZWRpYSBpbWcge1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIHdpZHRoOiAzMyU7IH0gfVxuICAuY2FyZC1iaW9fX2JveCB7XG4gICAgcGFkZGluZy1sZWZ0OiAycmVtO1xuICAgIHBhZGRpbmctdG9wOiAwO1xuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgIC5jYXJkLWJpb19fYm94IHtcbiAgICAgICAgcGFkZGluZzogMDsgfSB9XG4gIC5jYXJkLWJpb19faGVhZGluZyB7XG4gICAgY29sb3I6ICMyNjdlNjQ7XG4gICAgZm9udC1mYW1pbHk6IFBsYXlmYWlyIERpc3BsYXksIHNlcmlmO1xuICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgIG1hcmdpbi1ib3R0b206IDFyZW07IH1cbiAgLmNhcmQtYmlvX19zdWJ0aXRsZSB7XG4gICAgY29sb3I6ICM3ZjdlN2U7XG4gICAgbWFyZ2luLWJvdHRvbTogOHB4OyB9XG4gICAgLmNhcmQtYmlvX19zdWJ0aXRsZSBoMyB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cbiAgICAuY2FyZC1iaW9fX3N1YnRpdGxlIGEge1xuICAgICAgY29sb3I6ICMyNjdlNjQ7XG4gICAgICBtYXJnaW4tbGVmdDogMTBweDsgfVxuICAgICAgLmNhcmQtYmlvX19zdWJ0aXRsZSBhIGkge1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjMjY3ZTY0O1xuICAgICAgICBwYWRkaW5nOiAycHg7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmNhcmQtYmlvX190ZXh0IHtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7IH0gfVxuICAuY2FyZC1iaW9fX3RleHQgKiArICoge1xuICAgIG1hcmdpbi10b3A6IDFyZW07IH1cblxuLmNhcmQtYXJ0aWNsZV9fYm94IHtcbiAgYm94LXNoYWRvdzogMCAxcHggMCAjMjY3ZTY0O1xuICBkaXNwbGF5OiBub25lO1xuICBwYWRkaW5nLXRvcDogMjRweDtcbiAgcGFkZGluZy1ib3R0b206IDI0cHg7IH1cbiAgLmNhcmQtYXJ0aWNsZV9fYm94ICogKyAqIHtcbiAgICBtYXJnaW4tdG9wOiAxcmVtOyB9XG4uY2FyZC1hcnRpY2xlIGE6aG92ZXIge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cbi5jYXJkLWFydGljbGUgaDIge1xuICBjb2xvcjogIzI2N2U2NDtcbiAgZm9udC1mYW1pbHk6IFBsYXlmYWlyIERpc3BsYXksIHNlcmlmO1xuICBmb250LXNpemU6IDJyZW07XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiAxOyB9XG4gIC5jYXJkLWFydGljbGUgaDI6aG92ZXIge1xuICAgIGNvbG9yOiAjNDU1NjUyOyB9XG4uY2FyZC1hcnRpY2xlIHNtYWxsIHtcbiAgY29sb3I6ICM2NjY7XG4gIGZvbnQtc2l6ZTogLjc1cmVtOyB9XG5cbi5sb2FkZXJfX25hdiB7XG4gIGRpc3BsYXk6IHRhYmxlLWNlbGw7XG4gIHBhZGRpbmctdG9wOiAxLjI1cmVtOyB9XG5cbi5jYXJkLXRyaXB0aWMge1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNjY2M7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjY2NjOyB9XG4gIC5jYXJkLXRyaXB0aWNfX2JveCB7XG4gICAgcGFkZGluZzogMnJlbTtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDc2OXB4KSB7XG4gICAgICAuY2FyZC10cmlwdGljX19ib3g6bnRoLWNoaWxkKDIpIHtcbiAgICAgICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjY2NjOyB9IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY5cHgpIHtcbiAgICAgIC5jYXJkLXRyaXB0aWNfX2JveDpudGgtY2hpbGQoMykge1xuICAgICAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICNjY2M7IH0gfVxuICAuY2FyZC10cmlwdGljX19tZWRpYSB7XG4gICAgaGVpZ2h0OiAxNTBweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIG1hcmdpbi1ib3R0b206IDJyZW07IH1cbiAgLmNhcmQtdHJpcHRpY19faGVhZGluZy1saW5rIHtcbiAgICBjb2xvcjogIzI2N2U2NDtcbiAgICBmb250LWZhbWlseTogUGxheWZhaXIgRGlzcGxheSwgc2VyaWY7XG4gICAgZm9udC1zaXplOiAxLjM3NXJlbTtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgIGNvbG9yOiAjMjY3ZTY0O1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgICAuY2FyZC10cmlwdGljX19oZWFkaW5nLWxpbms6aG92ZXIge1xuICAgICAgY29sb3I6ICM0NTU2NTI7IH1cbiAgLmNhcmQtdHJpcHRpY19fdGV4dCB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG5cbi5jdGEtY29udGFjdCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlY2VlZTY7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICB3aWR0aDogMTAwJTsgfVxuICAuY3RhLWNvbnRhY3RfX2JveCB7XG4gICAgcGFkZGluZzogMnJlbTsgfVxuICAuY3RhLWNvbnRhY3RfX2JveDpudGgtY2hpbGQoMikge1xuICAgIHBhZGRpbmc6IDJyZW0gMDsgfVxuICAuY3RhLWNvbnRhY3RfX3RleHQge1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwIDMuNXJlbSAwIDJyZW07IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgIC5jdGEtY29udGFjdF9fdGV4dCB7XG4gICAgICAgIHBhZGRpbmc6IDA7IH0gfVxuICAuY3RhLWNvbnRhY3RfX2J1dHRvbiB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIG1hcmdpbjogMCAycmVtIDAgMDsgfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgLmN0YS1jb250YWN0X19idXR0b24ge1xuICAgICAgICBtYXJnaW46IDA7IH0gfVxuXG4uY3RhLXRlYXNlciB7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBwYWRkaW5nOiAxcmVtIDJyZW07IH1cbiAgLmN0YS10ZWFzZXIgdmlkZW8ge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAuY3RhLXRlYXNlciB7XG4gICAgICBmbGV4LWZsb3c6IGNvbHVtbjsgfSB9XG4gIC5jdGEtdGVhc2VyX19ib3gge1xuICAgIHBhZGRpbmctcmlnaHQ6IDJyZW07IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgIC5jdGEtdGVhc2VyX19ib3gge1xuICAgICAgICBwYWRkaW5nOiAwOyB9IH1cbiAgLmN0YS10ZWFzZXJfX3RleHQge1xuICAgIG1hcmdpbi1ib3R0b206IDJyZW07IH1cbiAgLmN0YS10ZWFzZXJfX21lZGlhIHtcbiAgICBoZWlnaHQ6IDMwMHB4O1xuICAgIG92ZXJmbG93OiBoaWRkZW47IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgIC5jdGEtdGVhc2VyX19tZWRpYSB7XG4gICAgICAgIGhlaWdodDogYXV0bztcbiAgICAgICAgbWFyZ2luLXRvcDogMnJlbTsgfSB9XG5cbi5jdGEtY2VudGVyIHtcbiAgcGFkZGluZzogMnJlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gIC5jdGEtY2VudGVyX190ZXh0IHtcbiAgICBwYWRkaW5nOiAwIDhyZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMnJlbTsgfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgLmN0YS1jZW50ZXJfX3RleHQge1xuICAgICAgICBwYWRkaW5nOiAwOyB9IH1cblxuLmN0YS1zdWJzY3JpYmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjY3ZTY0O1xuICBjb2xvcjogI2ZmZjtcbiAgcGFkZGluZy10b3A6IDI0cHg7XG4gIHBhZGRpbmctYm90dG9tOiAzNnB4OyB9XG4gIC5jdGEtc3Vic2NyaWJlX19oZWFkaW5nIHtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgLmN0YS1zdWJzY3JpYmVfX2JveCB7XG4gICAgZGlzcGxheTogdGFibGU7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgd2lkdGg6IDc1JTsgfVxuICAuY3RhLXN1YnNjcmliZV9faW5wdXQge1xuICAgIHBhZGRpbmc6IC45cmVtO1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gIC5jdGEtc3Vic2NyaWJlX19idXR0b24ge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNmZmY7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgZm9udC1zaXplOiAxLjVyZW07XG4gICAgbWFyZ2luLWxlZnQ6IDFyZW07XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgdHJhbnNpdGlvbjogYWxsIC4ycyBlYXNlOyB9XG4gICAgLmN0YS1zdWJzY3JpYmVfX2J1dHRvbjpob3ZlciB7XG4gICAgICAvKlRoZXNlIHdpbGwgdHJhbnNpdGlvbiBvbiBob3ZlciAqL1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICAgIGNvbG9yOiAjMjY3ZTY0OyB9XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAuY3RhLXN1YnNjcmliZV9fYnV0dG9uIHtcbiAgICAgICAgbWFyZ2luOiAxcmVtIDAgMCAwOyB9IH1cbiAgLmN0YS1zdWJzY3JpYmVfX21lc3NhZ2Uge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgcGFkZGluZy10b3A6IDIuNXJlbTsgfVxuICAuY3RhLXN1YnNjcmliZV9fZXJyb3Ige1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgcGFkZGluZy10b3A6IDFyZW07IH1cbiAgICAuY3RhLXN1YnNjcmliZV9fZXJyb3ItbXNnIHtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuXG4uY3RhLXNpZGViYXIge1xuICBwYWRkaW5nOiAxcmVtIDAgMCA1cmVtO1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5jdGEtc2lkZWJhciB7XG4gICAgICBwYWRkaW5nOiAzcmVtIDJyZW07IH0gfVxuICAuY3RhLXNpZGViYXJfX2hlYWRpbmcge1xuICAgIGZvbnQtc2l6ZTogMS4yNXJlbTtcbiAgICBtYXJnaW4tdG9wOiAxMnB4O1xuICAgIG1hcmdpbi1ib3R0b206IDEycHg7IH1cbiAgLmN0YS1zaWRlYmFyX19idXR0b24ge1xuICAgIG1hcmdpbi10b3A6IDFyZW07IH1cblxuLmN0YS1zaWRlYmFyX19idXR0b24gKyAuY3RhLXNpZGViYXJfX2hlYWRpbmcsIC5jdGEtc2lkZWJhcl9fdGV4dCArIC5jdGEtc2lkZWJhcl9faGVhZGluZyB7XG4gIG1hcmdpbi10b3A6IDJyZW07IH1cblxuLmN0YS1zb2NpYWwge1xuICBwYWRkaW5nLWxlZnQ6IDFyZW07IH1cbiAgLmN0YS1zb2NpYWwgLmljb24ge1xuICAgIGZpbGw6ICMyNjdlNjQ7IH1cbiAgICAuY3RhLXNvY2lhbCAuaWNvbjpob3ZlciB7XG4gICAgICBmaWxsOiAjY2NjOyB9XG4gIC5jdGEtc29jaWFsIGE6aG92ZXIge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuXG5mb290ZXIge1xuICBwYWRkaW5nLWJvdHRvbTogNXJlbTsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICBmb290ZXIge1xuICAgICAgcGFkZGluZzogMDsgfSB9XG5cbi5mb290ZXItY29weXJpZ2h0IHtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlNWU2ZTc7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBwYWRkaW5nOiAycmVtO1xuICB3aWR0aDogMTAwJTsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAuZm9vdGVyLWNvcHlyaWdodCB7XG4gICAgICBwYWRkaW5nOiAycmVtIDAgMCAwO1xuICAgICAgZGlzcGxheTogYmxvY2s7IH0gfVxuICAuZm9vdGVyLWNvcHlyaWdodF9fbG9nby1ib3gge1xuICAgIHdpZHRoOiA0NTBweDsgfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgLmZvb3Rlci1jb3B5cmlnaHRfX2xvZ28tYm94IHtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICB3aWR0aDogYXV0bzsgfVxuICAgICAgICAuZm9vdGVyLWNvcHlyaWdodF9fbG9nby1ib3ggLmxvZ29fX3N0YWNrZWQge1xuICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICB3aWR0aDogMjUwcHg7IH0gfVxuICAuZm9vdGVyLWNvcHlyaWdodF9fYm94IHtcbiAgICB0ZXh0LWFsaWduOiByaWdodDsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtaW4td2lkdGg6IDEwMjNweCkge1xuICAgICAgLmZvb3Rlci1jb3B5cmlnaHRfX2JveCB7XG4gICAgICAgIHRleHQtYWxpZ246IHJpZ2h0OyB9IH1cbiAgICAuZm9vdGVyLWNvcHlyaWdodF9fYm94IHNtYWxsIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgcGFkZGluZy1yaWdodDogLjVyZW07IH1cbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtaW4td2lkdGg6IDEwMjNweCkge1xuICAgICAgICAuZm9vdGVyLWNvcHlyaWdodF9fYm94IHNtYWxsIHtcbiAgICAgICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG4gICAgICAgICAgLmZvb3Rlci1jb3B5cmlnaHRfX2JveCBzbWFsbDo6YmVmb3JlIHtcbiAgICAgICAgICAgIGNvbnRlbnQ6ICd8JzsgfVxuICAgICAgICAgIC5mb290ZXItY29weXJpZ2h0X19ib3ggc21hbGw6bnRoLWNoaWxkKDEpOjpiZWZvcmUge1xuICAgICAgICAgICAgY29udGVudDogJyc7IH0gfVxuICAgIC5mb290ZXItY29weXJpZ2h0X19ib3ggLm5hdi1taW5vciBsaSBhIHtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDsgfVxuICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1pbi13aWR0aDogMTAyM3B4KSB7XG4gICAgICAgIC5mb290ZXItY29weXJpZ2h0X19ib3ggLm5hdi1taW5vciBsaSBhIHtcbiAgICAgICAgICBmb250LXNpemU6IDEycHg7IH0gfVxuXG4uZm9vdGVyLWRpc2NsYWltZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlOyB9XG4gIC5mb290ZXItZGlzY2xhaW1lcl9fYm94IHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjNDU1NjUyO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgcGFkZGluZzogMjBweDtcbiAgICBtYXJnaW46IDUwcHggYXV0byAxMHB4OyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjNweCkge1xuICAgICAgLmZvb3Rlci1kaXNjbGFpbWVyX19ib3gge1xuICAgICAgICBwYWRkaW5nOiAyMHB4IDEwMHB4OyB9IH1cbiAgLmZvb3Rlci1kaXNjbGFpbWVyIHVsIHtcbiAgICBkaXNwbGF5OiB0YWJsZTtcbiAgICBtYXJnaW46IDAgYXV0bzsgfVxuICAgIC5mb290ZXItZGlzY2xhaW1lciB1bCBsaSB7XG4gICAgICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgI0NDQ0NDQztcbiAgICAgIGJvcmRlci1yaWdodDogbm9uZTtcbiAgICAgIGJvcmRlci1sZWZ0LXN0eWxlOiBkYXNoZWQ7XG4gICAgICBtYXJnaW46IDAgMTBweDtcbiAgICAgIHBhZGRpbmc6IC41cmVtOyB9XG4gICAgICAuZm9vdGVyLWRpc2NsYWltZXIgdWwgbGk6bGFzdC1jaGlsZCB7XG4gICAgICAgIGJvcmRlci1yaWdodDogMXB4ICNDQ0Mgc29saWQ7IH1cbiAgICAgIC5mb290ZXItZGlzY2xhaW1lciB1bCBsaTpmaXJzdC1jaGlsZCB7XG4gICAgICAgIGJvcmRlci1sZWZ0LXN0eWxlOiBzb2xpZDsgfVxuICAuZm9vdGVyLWRpc2NsYWltZXIgaDYsIC5mb290ZXItZGlzY2xhaW1lciBwLCAuZm9vdGVyLWRpc2NsYWltZXIgdWwge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBtYXJnaW4tYm90dG9tOiAxcmVtOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1pbi13aWR0aDogMTAyM3B4KSB7XG4gICAgICAuZm9vdGVyLWRpc2NsYWltZXIgaDYsIC5mb290ZXItZGlzY2xhaW1lciBwLCAuZm9vdGVyLWRpc2NsYWltZXIgdWwge1xuICAgICAgICBmb250LXNpemU6IDEycHg7IH0gfVxuXG5Aa2V5ZnJhbWVzIGZhZGVJbiB7XG4gIGZyb20ge1xuICAgIG9wYWNpdHk6IDA7IH1cblxuICB0byB7XG4gICAgb3BhY2l0eTogMTsgfSB9XG5cbi5oZWFkZXJfX2xvZ28tYm94IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjY2NjO1xuICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjY2NjO1xuICBtYXJnaW46IDAgYXV0bztcbiAgbWF4LXdpZHRoOiAxMjAwcHg7IH1cblxuLm5vLWNzc2FuaW1hdGlvbnMgLmhlYWRlcl9fbG9nby1ib3gge1xuICBwYWRkaW5nLXRvcDogMDsgfVxuXG4uaGVhZGVyX19sb2dvIHtcbiAgYmFja2dyb3VuZDogI2ZmZjsgfVxuXG4ubG9nbyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwYWRkaW5nOiAwcmVtIDAgMHJlbSAycmVtO1xuICB3aWR0aDogNjAwcHg7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDg5OXB4KSB7XG4gICAgLmxvZ28ge1xuICAgICAgd2lkdGg6IDQwMHB4OyB9IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDQ5OXB4KSB7XG4gICAgLmxvZ28ge1xuICAgICAgcGFkZGluZzogMXJlbTtcbiAgICAgIHdpZHRoOiAzMDBweDsgfSB9XG5cbi5uby1jc3NhbmltYXRpb25zIC5sb2dvIHtcbiAgaGVpZ2h0OiA2OHB4O1xuICBwYWRkaW5nOiAwIDFyZW07IH1cblxuc3ZnIHBhdGgsIHN2ZyBwb2x5Z29uIHtcbiAgZmlsbDogIzI2N2U2NDsgfVxuc3ZnOmhvdmVyIHBhdGgsIHN2Zzpob3ZlciBwb2x5Z29uIHtcbiAgb3BhY2l0eTogLjc7XG4gIHRyYW5zaXRpb246IGZpbGwgMC4ycyBlYXNlO1xuICBmaWxsLW9wYWNpdHk6IDAuNzsgfVxuXG4ubG9nb19fc3RyZXRjaGVkIHtcbiAgZGlzcGxheTogYmxvY2s7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDg5OXB4KSB7XG4gICAgLmxvZ29fX3N0cmV0Y2hlZCB7XG4gICAgICBkaXNwbGF5OiBub25lOyB9IH1cblxuLmxvZ29fX3N0YWNrZWQge1xuICBkaXNwbGF5OiBub25lOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA4OTlweCkge1xuICAgIC5sb2dvX19zdGFja2VkIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrOyB9IH1cblxuLm5vLWNzc2FuaW1hdGlvbnMgLmxvZ29fX2dsb2JlIHBhdGgge1xuICBmaWxsOiAjMjY3ZTY0O1xuICBvcGFjaXR5OiAxOyB9XG5cbi5tYWluLXN0YW5kYXJkLCAubWFpbi1uZXdzLCAubWFpbi1wb3N0IHtcbiAgZGlzcGxheTogdGFibGU7XG4gIHBhZGRpbmc6IDFyZW0gMnJlbTsgfVxuXG4ubWFpbi1zdGFuZGFyZCB7XG4gIHBhZGRpbmctYm90dG9tOiA1cmVtOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5tYWluLXN0YW5kYXJkX19jb250ZW50IHtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7IH0gfVxuICAubWFpbi1zdGFuZGFyZF9fY29udGVudC5jb2wtNy0xMiB7XG4gICAgcGFkZGluZy10b3A6IDEuNXJlbTtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wOyB9XG4gIC5tYWluLXN0YW5kYXJkX190ZXh0ICogKyAqIHtcbiAgICBtYXJnaW4tdG9wOiAxcmVtOyB9XG4gIC5tYWluLXN0YW5kYXJkX190ZXh0IGgyIHtcbiAgICBjb2xvcjogIzI2N2U2NDtcbiAgICBmb250LWZhbWlseTogUGxheWZhaXIgRGlzcGxheSwgc2VyaWY7XG4gICAgZm9udC1zaXplOiAycmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgbGluZS1oZWlnaHQ6IDE7XG4gICAgcGFkZGluZy10b3A6IDI0cHg7XG4gICAgcGFkZGluZy1ib3R0b206IDBweDsgfVxuICAubWFpbi1zdGFuZGFyZF9fdGV4dCB1bCB7XG4gICAgcGFkZGluZy1sZWZ0OiAycmVtO1xuICAgIGxpc3Qtc3R5bGU6IGRpc2M7IH1cbiAgICAubWFpbi1zdGFuZGFyZF9fdGV4dCB1bCBsaSB7XG4gICAgICBtYXJnaW4tdG9wOiAwLjVyZW07IH1cbiAgLm1haW4tc3RhbmRhcmRfX3RleHQgb2wge1xuICAgIHBhZGRpbmctbGVmdDogMnJlbTsgfVxuICAubWFpbi1zdGFuZGFyZF9fdGV4dCBpbWcge1xuICAgIHdpZHRoOiAxMDAlOyB9XG5cbi5tYWluLWJpb3Mge1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgcGFkZGluZzogMnJlbTsgfVxuXG4uY2l0eS1jb2x1bW4ge1xuICB3aWR0aDogMTM1cHg7IH1cblxuLmFkZHJlc3MtY29sdW1uIHtcbiAgd2lkdGg6IDMzNXB4OyB9XG5cbi5sb2NhdGlvbi1waG9uZSB7XG4gIGNvbG9yOiAjNDU1NjUyOyB9XG4gIC5sb2NhdGlvbi1waG9uZTpob3ZlciB7XG4gICAgY29sb3I6ICMyNjdlNjQ7IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5tYWluLXBvc3RfX3RleHQge1xuICAgIHRleHQtYWxpZ246IGxlZnQ7IH0gfVxuLm1haW4tcG9zdF9fdGV4dCAqICsgKiB7XG4gIG1hcmdpbi10b3A6IDFyZW07IH1cbi5tYWluLXBvc3RfX3RleHQgaDIge1xuICBjb2xvcjogIzI2N2U2NDtcbiAgZm9udC1mYW1pbHk6IFBsYXlmYWlyIERpc3BsYXksIHNlcmlmO1xuICBmb250LXNpemU6IDJyZW07XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiAxOyB9XG4ubWFpbi1wb3N0X190ZXh0IGgzIHtcbiAgY29sb3I6ICM0NTU2NTI7XG4gIGZvbnQtZmFtaWx5OiBQbGF5ZmFpciBEaXNwbGF5LCBzZXJpZjtcbiAgZm9udC1zaXplOiAxLjI1cmVtO1xuICBmb250LXdlaWdodDogNzAwO1xuICBsaW5lLWhlaWdodDogMTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgbWFyZ2luLXRvcDogMzZweDtcbiAgbWFyZ2luLWJvdHRvbTogMHB4OyB9XG4ubWFpbi1wb3N0X190ZXh0IGZpZ2NhcHRpb24ge1xuICBjb2xvcjogI2NjYztcbiAgZm9udC1zaXplOiAuNzVyZW07XG4gIG1hcmdpbi10b3A6IDA7IH1cbi5tYWluLXBvc3RfX3RleHQgYmxvY2txdW90ZSB7XG4gIGNvbG9yOiAjMjY3ZTY0O1xuICBmb250LWZhbWlseTogUGxheWZhaXIgRGlzcGxheSwgc2VyaWY7XG4gIGZvbnQtc2l6ZTogMS41cmVtO1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIG1hcmdpbi10b3A6IDM2cHg7XG4gIG1hcmdpbi1ib3R0b206IDM2cHg7IH1cblxuLmJyZWFkY3J1bWIge1xuICBwYWRkaW5nLWJvdHRvbTogMS41cmVtO1xuICBmb250LXNpemU6IDE0cHg7IH1cbiAgLmJyZWFkY3J1bWIgYSB7XG4gICAgY29sb3I6ICMyNjdlNjQ7IH1cbiAgICAuYnJlYWRjcnVtYiBhOmhvdmVyIHtcbiAgICAgIGNvbG9yOiAjNDU1NjUyOyB9XG4gIC5icmVhZGNydW1iIHNwYW4ge1xuICAgIGNvbG9yOiAjN2Y3ZTdlOyB9XG5cbi5mb3JtLXN0YW5kYXJkIHtcbiAgbWFyZ2luLXRvcDogMnJlbTsgfVxuICAuZm9ybS1zdGFuZGFyZCBpbnB1dCwgLmZvcm0tc3RhbmRhcmQgaW5wdXRbdHlwZT1cImVtYWlsXCJdLCAuZm9ybS1zdGFuZGFyZCBpbnB1dFt0eXBlPVwibnVtYmVyXCJdLCAuZm9ybS1zdGFuZGFyZCBpbnB1dFt0eXBlPVwicGFzc3dvcmRcIl0sIC5mb3JtLXN0YW5kYXJkIGlucHV0W3R5cGU9XCJzZWFyY2hcIl0sIC5mb3JtLXN0YW5kYXJkIGlucHV0W3R5cGU9XCJ0ZWxcIl0sIC5mb3JtLXN0YW5kYXJkIGlucHV0W3R5cGU9XCJ0ZXh0XCJdLCAuZm9ybS1zdGFuZGFyZCBpbnB1dFt0eXBlPVwidXJsXCJdLCAuZm9ybS1zdGFuZGFyZCBpbnB1dFt0eXBlPVwiY29sb3JcIl0sIC5mb3JtLXN0YW5kYXJkIGlucHV0W3R5cGU9XCJkYXRlXCJdLCAuZm9ybS1zdGFuZGFyZCBpbnB1dFt0eXBlPVwibmFtZVwiXSwgLmZvcm0tc3RhbmRhcmQgaW5wdXRbdHlwZT1cImRhdGV0aW1lXCJdLCAuZm9ybS1zdGFuZGFyZCBpbnB1dFt0eXBlPVwiZGF0ZXRpbWUtbG9jYWxcIl0sIC5mb3JtLXN0YW5kYXJkIGlucHV0W3R5cGU9XCJtb250aFwiXSwgLmZvcm0tc3RhbmRhcmQgaW5wdXRbdHlwZT1cInRpbWVcIl0sIC5mb3JtLXN0YW5kYXJkIGlucHV0W3R5cGU9XCJ3ZWVrXCJdLCAuZm9ybS1zdGFuZGFyZCB0ZXh0YXJlYSB7XG4gICAgY29sb3I6ICMzMzM7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgICBib3JkZXItYm94LXNpemluZzogY29udGVudC1ib3g7XG4gICAgYm9yZGVyLXJhZGl1czogMDtcbiAgICBib3JkZXItcmFkaXVzLWZvbnQtc2l6ZTogMXJlbTtcbiAgICBwYWRkaW5nOiAxcmVtO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gIC5mb3JtLXN0YW5kYXJkIGxhYmVsIHtcbiAgICBkaXNwbGF5OiBibG9jazsgfVxuICAuZm9ybS1zdGFuZGFyZCBpbnB1dFt0eXBlPVwiYnV0dG9uXCJdLCAuZm9ybS1zdGFuZGFyZCBpbnB1dFt0eXBlPVwicmVzZXRcIl0sIC5mb3JtLXN0YW5kYXJkIGlucHV0W3R5cGU9XCJzdWJtaXRcIl0ge1xuICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gIC5mb3JtLXN0YW5kYXJkX19jaGVja2JveCB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGZsb2F0OiBsZWZ0ICFpbXBvcnRhbnQ7XG4gICAgd2lkdGg6IGF1dG8gIWltcG9ydGFudDsgfVxuICAuZm9ybS1zdGFuZGFyZF9fY2hlY2tib3ggKyBsYWJlbCB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGZsb2F0OiBsZWZ0ICFpbXBvcnRhbnQ7XG4gICAgbWFyZ2luOiAxMHB4IDEwcHggMjBweCAxMHB4ICFpbXBvcnRhbnQ7IH1cbiAgLmZvcm0tc3RhbmRhcmQgLnNlbGVjdGJveCB7XG4gICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICBib3JkZXItcmFkaXVzOiAwO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgaGVpZ2h0OiA0OHB4OyB9XG4gICAgLmZvcm0tc3RhbmRhcmQgLnNlbGVjdGJveDo6YWZ0ZXIge1xuICAgICAgY29sb3I6ICNjY2M7XG4gICAgICBjb250ZW50OiAn4pa+JztcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogMXJlbTtcbiAgICAgIHJpZ2h0OiAuNXJlbTtcbiAgICAgIHdpZHRoOiAxcmVtO1xuICAgICAgaGVpZ2h0OiAxcmVtOyB9XG4gIC5mb3JtLXN0YW5kYXJkIHNlbGVjdCB7XG4gICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICBib3gtc2hhZG93OiBub25lO1xuICAgIGJvcmRlci1yYWRpdXM6IDA7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgICBjb2xvcjogIzdmN2U3ZTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZm9udC1zaXplOiAxcmVtO1xuICAgIGhlaWdodDogNjBweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgcGFkZGluZy1sZWZ0OiAxcmVtO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgICAtbW96LWFwcGVhcmFuY2U6IG5vbmU7XG4gICAgYXBwZWFyYW5jZTogbm9uZTsgfVxuXG4uY29udGFjdC11c19fYnV0dG9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VjZWVlNjtcbiAgbWF4LXdpZHRoOiAxODNweDtcbiAgY2xlYXI6IGJvdGg7IH1cblxuLm5vLWNzc2dyYWRpZW50cyAuc2VsZWN0Ym94OjphZnRlciB7XG4gIHotaW5kZXg6IC0zOyB9XG5cblxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkluWmxibVJ2Y2k5ZmJtOXliV0ZzYVhwbExuTmpjM01pTENKaVlYTmxMMTkwZVhCdlozSmhjR2g1TG5OaGMzTWlMQ0ppWVhObEwxOWpiMnh2Y25NdWMyRnpjeUlzSW1KaGMyVXZYMk5zWldGeUxXWnBlQzV6WVhOeklpd2lZbUZ6WlM5ZmFXMWhaMlZ6TG5OaGMzTWlMQ0ppWVhObEwxOXNZWGx2ZFhRdWMyRnpjeUlzSW1KaGMyVXZYMmx1WTJ4MVpHVXRiV1ZrYVdFdWMyRnpjeUlzSW1KaGMyVXZYMmRzYjJKaGJDNXpZWE56SWl3aVltRnpaUzlmZEdGaWJHVnpMbk5oYzNNaUxDSnRiMlIxYkdWekwyNWhkaTlmYm1GMkxXMXBibTl5TG5OaGMzTWlMQ0p0YjJSMWJHVnpMMjVoZGk5ZmJtRjJMVzFsWjJFdWMyRnpjeUlzSW0xdlpIVnNaWE12Ym1GMkwxOXVZWFl0Wm05dmRHVnlMbk5oYzNNaUxDSnRiMlIxYkdWekwySmhibTVsY2k5ZlgySmhibTVsY2k1ellYTnpJaXdpYlc5a2RXeGxjeTlqWVhKa2N5OWZYMk5oY21SekxuTmhjM01pTENKdGIyUjFiR1Z6TDJOMFlTOWZYMk4wWVM1ellYTnpJaXdpYlc5a2RXeGxjeTltYjI5MFpYSXZYMlp2YjNSbGNpNXpZWE56SWl3aWJXOWtkV3hsY3k5b1pXRmtaWEl2WDJobFlXUmxjaTV6WVhOeklpd2liVzlrZFd4bGN5OXRZV2x1TDE5dFlXbHVMbk5oYzNNaUxDSnRiMlIxYkdWekwyWnZjbTB2WDJadmNtMHVjMkZ6Y3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pUVVFMFEwRXNRVUZCVXl4QlFVRlBMRUZCUVZNc1FVRkJXU3hCUVVGUkxFRkJRVkVzUVVGQlVTeEJRVUZSTEVGQlFVc3NRVUZCVXp0RlFWY3ZSU3hCUVVGVE96dEJRVXRpTEVGQlFVOHNRVUZCVVR0RlFVZFlMRUZCUVZNN08wRkJWV0lzUVVGQlN5eEJRVUZMTzBWQlEwNHNRVUZCVXp0RlFVTlVMRUZCUVZFN08wRkJVVm9zUVVGQlZUdEZRVU5PTEVGQlFWTTdPMEZCV1dJN1JVRk5TU3hCUVVFd1FqdEZRVU14UWl4QlFVRnpRanM3UVVGbE1VSTdSVUZEU1N4QlFVRlJPenRCUVZsYU8wVkJSMGtzUVVGQldUdEZRVlZvUWl4QlFVRkRMRUZCUVZFc1FVRkJRenRKUVVWR0xFRkJRVk03T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096dEJRVFpEYWtJc1FVRkJTVHRGUVVOQkxFRkJRV1U3TzBGQlMyNUNMRUZCUVVjN1JVRkZReXhCUVVGaE96dEJRVmRxUWp0RlFVTkpMRUZCUVZrN08wRkJTMmhDTzBWQlEwa3NRVUZCV1R0RlFVTmFMRUZCUVU4N08wRkJZMWdzUVVGQlRTeEJRVUZMTEVGQlFVczdSVUZKV2l4QlFVRmhPMFZCU1dJc1FVRkJWenM3UVVGTFpqdEZRVU5KTEVGQlFXRTdSVUZEWWl4QlFVRmhPMFZCUTJJc1FVRkJWenM3UVVGTFpqdEZRVU5KTEVGQlFWRTdPMEZCWlZvc1FVRkJReXhCUVVGVExFRkJRVU03UlVGRlNDeEJRVUZUTzBWQlExUXNRVUZCVXpzN096czdRVUZoYWtJc1FVRkJTenRGUVVWRUxFRkJRVmM3UlVGRFdDeEJRVUZoTzBWQlEySXNRVUZCVlR0RlFVTldMRUZCUVdkQ096dEJRVWR3UWp0RlFVTkpMRUZCUVVzN08wRkJSMVE3UlVGRFNTeEJRVUZST3p0QlFXMUVXanRGUVVOSkxFRkJRVkU3TzBGQlVWb3NRVUZCUnl4QlFVRkxPMFZCUTBvc1FVRkJWVHM3UVVGVFpEdEZRVU5KTEVGQlFWRTdPMEZCWjBKYU8wVkJRMGtzUVVGQlVUdEZRVU5TTEVGQlFWRTdSVUZEVWl4QlFVRlRPenRCUVZGaU8wVkJRMGtzUVVGQlVUdEZRVU5TTEVGQlFWTTdSVUZEVkN4QlFVRmhPenRCUVZkcVFpeEJRVUZSTEVGQlFVOHNRVUZCVVR0RlFVbHVRaXhCUVVGaE8wVkJRMklzUVVGQlZ6dEZRVU5ZTEVGQlFWRTdSVUZEVWl4QlFVRm5RanM3UVVGUmNFSXNRVUZCVVR0RlFVTktMRUZCUVdFN08wRkJVV3BDTEVGQlFWRTdSVUZGU2l4QlFVRm5RanM3UVVGWGNFSXNRVUZCVVN4QlFVRkxMRUZCUVVzc1FVRkJhVUlzUVVGQlN5eEJRVUZuUWl4QlFVRkxPMFZCU1hwRUxFRkJRVzlDTzBWQlEzQkNMRUZCUVZFN08wRkJVVm9zUVVGQlRTeEJRVUZaTEVGQlFVczdSVUZGYmtJc1FVRkJVVHM3UVVGUFdpeEJRVUZOTEVGQlFXOUNMRUZCUVVzN1JVRkRka0lzUVVGQlVUdEZRVU5TTEVGQlFWTTdPMEZCVDJwQ08wVkJRMGtzUVVGQlZUdEZRVU5XTEVGQlFXZENPenRCUVZOd1FqdEZRVU5KTEVGQlFXbENPMFZCUTJwQ0xFRkJRV2RDT3p0QlFVMXdRaXhCUVVGTE8wVkJRMGNzUVVGQmIwSTdSVUZEY0VJc1FVRkJhVUk3UlVGRGFrSXNRVUZCYjBJN1JVRkRjRUlzUVVGQldUdEZRVWx3UWl4QlFVRkxMRUZCUVdVc1FVRkJaME1zUVVGQlN5eEJRVUZsTzBsQlJUVkVMRUZCUVc5Q08wRkJVV2hETEVGQlFVc3NRVUZCYlVJc1FVRkJTenRGUVVWNFFpeEJRVUZaTzBWQlExb3NRVUZCVXpzN1FVTTFaV1E3UlVFeFFtbENMRUZCTWtKbU8wVkJRMEVzUVVGQmVVSTdSVUZEZWtJc1FVRkJkMEk3TzBGQlJURkNPMFZEY2tKWExFRkVjMEpVTzBWQlEwRXNRVUZCWVR0RlFUbENTQ3hCUVN0Q1ZqdEZRVU5CTEVGQlFXbENPMFZCUTJwQ0xFRkJRVkU3TzBGQlNWWTdSVU40UTFFc1FVUjVRMDQ3UlVGeVEyVXNRVUZ6UTJZN1JVRkRRU3hCUVVGWE8wVkJia05LTEVGQmIwTlFPMFZCUTBFc1FVRkJZVHRGUVVOaUxFRkJRV1U3TzBGQmMwTnFRaXhCUVVGdFFpeEJRVUZMTEVGQlFXbENMRUZCUVVzN1JVRkhOVU1zUVVGQlVUdEZRVU5TTEVGQlFWRTdSVUZEVWl4QlFVRlRPMFZCY2taTkxFRkJjMFptTzBWQlEwRXNRVUZCVnp0RlFVTllMRUZCUVZrN1JVRkRXaXhCUVVGWk8wVkJRMW9zUVVGQlV6dEZRVU5VTEVGQlFXbENPenRGUVVWcVFpeEJRVUZyUWp0RlEycEhXaXhCUkd0SFRqczdSVUZGUVN4QlFVRlpPMFZCUldRc1FVRkJhVUlzUVVGQlVTeEJRVUZMTEVGQlFXVXNRVUZCVVN4QlFVRkxMRUZCUVdNN08wbERkRWRvUlN4QlJIZEhTanRKUTNCSFNTeEJSSEZIU2p0SlFVTkJMRUZCUVdsQ096dEJRWE5DY2tJc1FVRkJaVHRGUXpGSVVDeEJSREpJVGp0RlEycEpUU3hCUkd0SlRqdEZRVU5CTEVGQlFWRTdSVUZEVWl4QlFVRlRPenRCUlhCSldDeEJRVUZUTzBWQlExQXNRVUZCVXp0RlFVTlVMRUZCUVZNN1JVRkRWQ3hCUVVGUE96dEJRMGhVTEVGQlFVc3NRVUZCVVR0RlFVTllMRUZCUVU4N08wRkRSRlE3UlVGRFJTeEJRVUZyUWp0RlFVTnNRaXhCUVVGaE8wVkJRMklzUVVGQll6dEZRVU5rTEVGQlFWRTdSVUZEVWl4QlFVRlhPenRCUVVkaU8wVkJRMFVzUVVGQlV6dEZRVU5VTEVGQlFXZENPMFZEYlVOb1FqdEpSSEpEUmp0TlFVdEpMRUZCUVZNN1RVRkRWQ3hCUVVGWk96dEJRVVZvUWp0RlFVTkZMRUZCUVU4N1JVTTBRbEE3U1VRM1FrWTdUVUZKU1N4QlFVRlBPenRCUVVWWU8wVkJRMFVzUVVGQlR6dEZRM05DVUR0SlJIWkNSanROUVVsSkxFRkJRVTg3TzBGQlJWZzdSVUZEUlN4QlFVRlBPMFZEWjBKUU8wbEVha0pHTzAxQlNVa3NRVUZCVHpzN1FVRkhXRHRGUVVORkxFRkJRVTg3UlVOVFVEdEpSRlpHTzAxQlNVa3NRVUZCVHpzN1FVRkhXRHRGUVVORkxFRkJRVTg3UlVORlVEdEpSRWhHTzAxQlNVa3NRVUZCVHpzN1FVRkhXRHRGUVVORkxFRkJRVTg3UlVOTVVEdEpSRWxHTzAxQlNVa3NRVUZCVHpzN1FVRkhXRHRGUVVORkxFRkJRVTg3UlVOYVVEdEpSRmRHTzAxQlNVa3NRVUZCVHpzN1FVRkhXRHRGUVVORkxFRkJRVTg3UlVOdVFsQTdTVVJyUWtZN1RVRkpTU3hCUVVGUE96dEJRVWRZTzBWQlEwVXNRVUZCVHp0RlF6RkNVRHRKUkhsQ1JqdE5RVWxKTEVGQlFVODdPMEZCUlZnN1JVRkRSU3hCUVVGUE8wVkRhRU5RTzBsRUswSkdPMDFCU1Vrc1FVRkJUenM3UVVWb1JsZzdSVUZEUlN4QlFVRlJPMFZCUTFJc1FVRkJVenRGUVVOVUxFRkJRVms3UlVGRlpDeEJRVUZETEVGQlFWTXNRVUZCUXp0SlFVTlFMRUZCUVZrN08wRkJSV2hDTzBWTVRsRXNRVXRQVGp0RlFVTkJMRUZCUVZNN08wRkJSVmc3UlVGRFJTeEJRVUZwUWp0RlRHSllMRUZMWTA0N1JVRkRSaXhCUVVGRE8wbE1aRmtzUVV0bFZEdEpRVU5CTEVGQlFXbENPenRCUTJaeVFqdEZRVU5ETEVGQlFWRTdSVUZEVWl4QlFVRlBPenRCUVVWU08wVkJRMFVzUVVGQlpUdEZSbk5EWmp0SlJYWkRSanROUVVsSkxFRkJRVms3VFVGRmFFSXNRVUZCUlR0UlFVTkpMRUZCUVZrN1JVRkZiRUlzUVVGQlJUdEpUbFpOTEVGTlYwbzdPMEZCUlVvN1JVRkRSU3hCUVVGblFqdEZRVU5vUWl4QlFVRlRPMFZHZVVKVU8wbEZNMEpHTzAxQlMwa3NRVUZCV1R0TlFVTmFMRUZCUVZVN1RVRkRWaXhCUVVGak8wMUJSV3hDTEVGQlFVVTdVVUZEU1N4QlFVRlZPMUZCUTFZc1FVRkJTenRSUVVOTUxFRkJRVTA3VVVGRFRpeEJRVUZQTzFGQlExQXNRVUZCWlR0UlFVTm1MRUZCUVdFN1VVRkRZaXhCVUhwQ1N6dE5UelpDV0N4QlFVRkZMRUZCUVdVN1VVRkRWQ3hCUVVGVE8wMUJSV3BDTEVGQlFVVXNRVUZCWlR0UlFVTlVMRUZCUVZNN1RVRkZha0lzUVVGQlJTeEJRVUZsTzFGQlExUXNRVUZCVXpzN1FVRkZha0k3UlU1NlExRXNRVTB3UTA0N1JVWklRVHRKUlV0R0xFRkJRVTA3VFVGSFFTeEJRVUZWTzAxQlExWXNRVUZCU3p0TlFVTk1MRUZCUVUwN1JVRkZXaXhCUVVGTk8wbEJRMFlzUVZCcVJFODdTVTlyUkZBc1FVRkJXVHRKUVVOYUxFRkJRVk03TzBGR1psZzdSVVZwUWtZc1FVRkJUeXhCUVVGUExFRkJRVThzUVVGQlNTeEJRVUZKTzBsQlJYcENMRUZCUVZNN08wRkRhRVZpTzBWQlEwVXNRVUZCVXp0RlFVTlVMRUZCUVZrN1JVRkZaRHRKVUVGUkxFRlBRMG83U1VGRFFTeEJRVUZoTzBsQlEySXNRVUZCWXp0SlFVTmtMRUZCUVZFN1NVRkRVaXhCUVVGbE8wbEJRMllzUVVGQllUdEpRVU5pTEVGQlFWYzdTVWhyUTJJN1RVZDZRMFk3VVVGVlRTeEJRVUZaTzBWQlJXeENMRUZCUVZjN1NVRkRVQ3hCUVVGVE8wbEJSV0lzUVVGQlZ5eEJRVUZGTzAxQlExQXNRVUZCVXp0TlFVTlVMRUZCUVZNN1RWQnlRbEFzUVU5elFrWTdUVUZEUVN4QlFVRlJPMGxCU1dRc1FVRkJWeXhCUVVGRkxFRkJRV0U3VFVGRGJFSXNRVUZCVXp0SlFVZHFRaXhCUVVGWExFRkJRVVVzUVVGQldUdE5RVU5xUWl4QlFVRlpPMDFCUTFvc1FVRkJZenRGUVVWMFFqdEpVSHBDVnl4QlR6QkNVRHRKUVVOQkxFRkJRVk03U1VGRFZDeEJRVUZUTzBsQlJXSXNRVUZCWjBJN1RWQjRRMUlzUVU5NVEwWTdPMEZCUjA0c1FVRkJWVHRGVUd4RFF5eEJUMjFEVUR0RlFVTktMRUZCUVZVc1FVRkJRenRKVURsRFNDeEJUeXREUmpzN1FVTm1UaXhCUVVGRExFRkJRVmtzUVVGQlR6dEZRVU5rTEVGQlFWTTdRVUZEWml4QlFVRkRMRUZCUVZrc1FVRkJUenRGUVVOa0xFRkJRVTg3TzBGS1ZWZzdSVWxJUml4QlFVRkpMRUZCUVZrN1NVRkRWaXhCUVVGVk96dEJRVVZvUWl4QlFVRkxMRUZCUVdVN1JVRkRiRUlzUVVGQlV6czdRVUZGV0N4QlFVRkxMRUZCUVdVc1FVRkJOa0lzUVVGQlN5eEJRVUZsTEVGQlFXZERMRUZCUVVzc1FVRkJaU3hCUVVGcFF5eEJRVUZMTEVGQlFXVTdSVUZKTlVzc1FVRkJVenM3T3pzN096dEJRVkZZTEVGQlFXdENPenRGUVVkb1FpeEJRVUZYTzBWQlExZ3NRVUZCWVR0RlFVVm1MRUZCUVdsQ0xFRkJRVWtzUVVGQlowSTdTVUZEYWtNc1FVRkJXVHM3UVVGRmFFSTdSVUZEUlN4QlFVRlZPMFZCUTFZc1FVRkJXVHRGU2pGQ1dqdEpTVFpDUml4QlFVRm5RanROUVVOV0xFRkJRVmM3U1VGRmFrSXNRVUZCWVN4QlFVRm5RanROUVVOMlFpeEJRVUZYT3p0QlFVVnFRanRGVkRWRmFVSXNRVk0yUldZN1JVRkRRU3hCUVVGVk8wVkJRMVlzUVVGQldUdEZTblJEV2p0SlNYbERSaXhCUVVGbE8wMUJRMVFzUVVGQlZ6dEpRVVZxUWl4QlFVRmhMRUZCUVdVN1RVRkRkRUlzUVVGQlZ6czdRVUZGYWtJN1JVRkRSU3hCUVVGWk8wVkJjRVpLTEVGQmNVWlNPenRCUVVWR08wVkJhRWRyUWl4QlFXbEhhRUk3UlZJM1JrMHNRVkU0Ums0N1JVRjRSbU1zUVVGNVJtUTdSVUZGUVN4QlFVRmxPMFZCUldwQ0xFRkJRV003TzBsQlJWWXNRVUZCVlR0SlFVTldMRUZCUVVzN1NVRkRUQ3hCUVVGTk8wbEJRMDRzUVVGQlR6dEZTaTlFVkR0SlNXMUVSanROUVM5R2EwSXNRVUU0UjJRN1RVRjBSa29zUVVGQlpUdFJRVU5ZTEVGQlFWTTdVVUZEVkN4QlFVRlRPMUZCUTFRc1FVRkJUenM3UVVGelJsZzdSVUZEUlN4QlFVRlZPMFZCUTFZc1FVRkJTenRGUVVOTUxFRkJRVTA3UlVGRlVpeEJRVUZUTzBsQlEwd3NRVUZCVXp0RlNqTkZXRHRKU1RoRlJpeEJRVUZoTzAxQlExQXNRVUZCVFR0TlFVTk9MRUZCUVU4N1JVcG9SbGc3U1VseFJVWTdUVUZqU1N4QlFVRkxPMDFCUTB3c1FVRkJUVHM3UVVGRlZqdEZRVU5GTEVGQlFWVTdSVUZEVml4QlFVRlRPMFZCUTFRc1FVRkJTenRGUVVOTUxFRkJRVTg3UlVGRlZDeEJRVUZ0UWp0SlFVTm1MRUZCUVZNN1JVbzNSbGc3U1VsblIwWXNRVUZCWVR0TlFVTlFMRUZCUVU4N1RVRkRVQ3hCUVVGTk8wMUJRMW9zUVVGQllTeEJRVUZ0UWp0UlFVTjRRaXhCUVVGUE8wVktjRWRpTzBsSmMwWkdPMDFCYVVKSkxFRkJRVXM3VFVGRFRDeEJRVUZQT3p0QlFVVllMRUZCUVc5Q08wVkJSV3hDTEVGQlFWVTdSVUZEVml4QlFVRlRPMFZCUTFRc1FVRkJUenRGUVVOUUxFRkJRVkU3UlVGRFVpeEJRVUZWTzBWQlExWXNRVUZCWVRzN1JVRkZZaXhCUVVGUE8wVkJkRXBQTEVGQmRVcGtPenRCUVVkR0xFRkJRV3RDTEVGQlFWVXNRVUZCYTBJN08wVkJSVEZETEVGQlFWTTdSVUZEVkN4QlFVRlZPMFZCUTFZc1FVRkJXVHM3UlVGRldpeEJRVUZYTzBWQlExZ3NRVUZCY1VJN1FVRkZla0lzUVVGQmEwSTdPMFZCUldRc1FVRkJTenRGUVVOTUxFRkJRVTA3UlVGRFRpeEJRVUZQTzBWQlExQXNRVUZCVVR0RlFVTlNMRUZCUVdVN1JVRkRaaXhCUVVGUk8wRkJSVm9zUVVGQmEwSTdPMFZCUldRc1FVRkJVVHRGUVVOU0xFRkJRVTg3UlZKNFRFVXNRVkY1VEZRN1JVRkRRU3hCUVVGUk8wVkJRMUlzUVVGQlR6dEZRVU5RTEVGQlFWYzdRVUZEWml4QlFVRnRRanM3UlVGRlppeEJRVUZWTzBWQlExWXNRVUZCVVR0RlFVTlNMRUZCUVU4N1JVRkRVQ3hCUVVGTE8wVkJRMHdzUVVGQlRUdEJRVU5XTEVGQlFXMUNMRUZCUVVrc1FVRkJWU3hCUVVGdFFpeEJRVUZKT3p0RlFVVndSQ3hCUVVGVE8wVkJRMVFzUVVGQlZUdEZRVU5XTEVGQlFWTTdSVUZEVkN4QlFVRlJPMFZCUTFJc1FVRkJUenRGUVVOUUxFRkJRVXM3UlVGRFRDeEJRVUZaTzBWQlExb3NRVUZCVFR0RlFVTk9MRUZCUVdFN1JWSTVUVW9zUVZFclRWUTdSVUZEUVN4QlFVRlRPenRGUVVWVUxFRkJRVmM3UlVGRFdDeEJRVUZ4UWp0RlFVTnlRaXhCUVVGdlFqdEJRVVY0UWl4QlFVRnRRaXhCUVVGSk8wVkJRMjVDTEVGQlFWYzdRVUZGWml4QlFVRnRRaXhCUVVGSk8wVkJRMjVDTEVGQlFWYzdRVUZIWml4QlFVRnJRaXhCUVVGclFpeEJRVUZWTEVGQlFXdENMRUZCUVd0Q096dEZRVVUxUlN4QlFVRlRPMEZCUTJZc1FVRkJhMElzUVVGQmJVSXNRVUZCU1N4QlFVRlZMRUZCUVd0Q0xFRkJRVzFDTEVGQlFVazdPMFZCUlhSR0xFRkJRVk03UVVGRFppeEJRVUZyUWl4QlFVRnRRaXhCUVVGSk8wVkJRMjVETEVGQlFWYzdRVUZEYWtJc1FVRkJhMElzUVVGQmJVSXNRVUZCU1R0RlFVTnVReXhCUVVGWE96dEJRVWRxUWl4QlFVRmxPMFZCUTFnc1FVRkJUenRCUVVOWUxFRkJRV2RDTEVGQlFVMHNRVUZCWjBJc1FVRkJTU3hCUVVGVkxFRkJRV2RDTEVGQlFVazdPMFZCUlhCRkxFRkJRVlU3UlVGRFZpeEJRVUZUTzBWQlExUXNRVUZCVVR0RlFVTlNMRUZCUVU4N1JWSm9VRVVzUVZGcFVGUTdRVUZEU2l4QlFVRm5RanM3UlVGRldpeEJRVUZWTzBWQlExWXNRVUZCU3p0RlFVTk1MRUZCUVU4N1JVRkRVQ3hCUVVGWk8wVkJRMW9zUVVGQldUdEJRVU5vUWl4QlFVRm5RaXhCUVVGSkxFRkJRVlVzUVVGQlowSXNRVUZCU1RzN1JVRkZPVU1zUVVGQlV6dEZRVU5VTEVGQlFVODdPMFZCUlZBc1FVRkJWenRGUVVOWUxFRkJRWEZDTzBWQlEzSkNMRUZCUVd0Q08wVkJRMnhDTEVGQlFWazdRVUZEYUVJc1FVRkJaMElzUVVGQlNUczdSVUZGYUVJc1FVRkJTenRCUVVOVUxFRkJRV2RDTEVGQlFVazdPMFZCUldoQ0xFRkJRVXM3UVVGRlZDeEJRVUZsTEVGQlFXZENPenRGUVVWNlFpeEJRVUZaTzBGQlEyeENMRUZCUVdVc1FVRkJaMElzUVVGQlNTeEJRVUZWTEVGQlFXVXNRVUZCWjBJc1FVRkJTVHM3UlVGRk1VVXNRVUZCV1R0QlFVTnNRaXhCUVVGbExFRkJRV2RDTEVGQlFVazdSVUZETjBJc1FVRkJlVUk3UVVGREwwSXNRVUZCWlN4QlFVRm5RaXhCUVVGSk8wVkJRemRDTEVGQlFYbENPMEZLZEU4M1FqdEZTVFJNUmp0SlFUUkRTU3hCUVVGVE96dEJRVWRpTzBWQlEwVXNRVUZCVHpzN1FVRkZWQ3hCUVVGblFqdEZRVU5rTEVGQlFVODdPMEZCUlZRc1FVRkJhVUlzUVVGQlowSTdSVUZGTDBJc1FVRkJWVHRGUVVOV0xFRkJRVXM3UlVGRFRDeEJRVUZSTzBWQkwxSkpMRUZCWjFOYU8wVlNiRk5YTEVGUmJWTllPMFZCUTBFc1FVRkJWVHRGUVVOV0xFRkJRVFJDTzBWQk9WSmtMRUZCSzFKa096dEZRVWRCTEVGQlFWYzdSVUZEV0N4QlFVRlhPMFZCUTFnc1FVRkJXVHRGUVVWa0xFRkJRV2RDTEVGQlFVY3NRVUZCWjBJc1FVRkJSenRKUVVOc1F5eEJRVUZUTzBsQlExUXNRVUZCVnp0SlFVTllMRUZCUVZFN1NVRkRVaXhCUVVGaE8wbEJRMklzUVVGQlV6dEpVaTlUVEN4QlVXZFVTanRKUVVOQkxFRkJRWGRDTzBsQlEzaENMRUZCUVhsQ08wbEJRM3BDTEVGQlFWVTdTVUZEVml4QlFVRmxPMGxCUTJZc1FVRkJZVHRKUVVOaUxFRkJRV1U3U1VGRFppeEJRVUZYTzBsQlExZ3NRVUZCWVR0SlFVTmlMRUZCUVhOQ08wVkJSVEZDTEVGQlFXVXNRVUZCV1N4QlFVRm5RaXhCUVVGRk96dEpRVVY2UXl4QlFVRlhPMFZCUldZc1FVRkJaU3hCUVVGaExFRkJRVXNzUVVGQlJ5eEJRVUZuUWl4QlFVRkZMRUZCUVdFc1FVRkJTenM3U1VGRmNFVXNRVUZCVnp0SlFVTllMRUZCUVZNN08wRktlbEpZTzBWSk5GSkdMRUZCUVdFc1FVRkJhVUlzUVVGQllTeEJRVUZuUWp0SlFVVjJSQ3hCUVVGUE8wbEJRMUFzUVVGQlRUczdRVUZKVml4QlFVRm5RaXhCUVVGVE96dEZVbWhXYWtJc1FWRnJWa283UVVGRlNpeEJRVUZuUWl4QlFVRm5RaXhCUVVGakxFRkJRV2RDTEVGQlFXTTdPMFZCUjNoRkxFRkJRVkU3UlVGRFVpeEJRVUZoTzBWQlJXcENMRUZCUVdkQ0xFRkJRV2RDTEVGQlFXRXNRVUZCU1N4QlFVRm5RaXhCUVVGakxFRkJRV0U3U1VGRGRFWXNRVUZCVlR0SlFVTldMRUZCUVdVN1FVRkpja0lzUVVGQlowSXNRVUZCWjBJc1FVRkJZVHRGUVVOMlF5eEJRVUZWTzBWQlExWXNRVUZCVXp0RlFVTlVMRUZCUVZFN1JVRkRVaXhCUVVGUE8wVkJRMUFzUVVGQlRUdEZRVU5PTEVGQlFVczdSVUZEVEN4QlFVRlpPMFZLTVZSb1FqdEpTVzFVUml4QlFVRm5RaXhCUVVGblFpeEJRVUZoTzAxQlZYSkRMRUZCUVZNN1FVRkZha0lzUVVGQlowSXNRVUZCWXp0RlFVTXhRaXhCUVVGak8wVkJSV3hDTEVGQlFXZENMRUZCUVdNc1FVRkJZVHRKVWpsWE9VSXNRVkVyVjFBN1NVRkRRU3hCUVVGWE96dEpRVVZZTEVGQlFWTTdSVUZGWml4QlFVRm5RaXhCUVVGakxFRkJRVms3TzBsQlJYQkRMRUZCUVZNN1NVRkRWQ3hCUVVGVE8wbEJRMVFzUVVGQlZUdEpRVU5XTEVGQlFVMDdTVUZEVGl4QlFVRkxPMGxCUTB3c1FVRkJXVHRKUVVOYUxFRkJRVTg3U1VGRFVDeEJRVUZSTzBsQlExSXNRVUZCYlVJN1NVRkRia0lzUVVGQmNVSTdTVUZEY2tJc1FVRkJhVUk3UlVGRmRrSXNRVUZCWjBJc1FVRkJZeXhCUVVGWkxFRkJRVTg3U1VGRE0wTXNRVUZCYTBJN1JVRkRlRUlzUVVGQlowSXNRVUZCWXl4QlFVRlpMRUZCUVU4N1NVRkRNME1zUVVGQmEwSTdSVUZEZUVJc1FVRkJaMElzUVVGQll5eEJRVUZaTEVGQlFVODdTVUZETTBNc1FVRkJhMEk3UlVGRGVFSXNRVUZCWjBJc1FVRkJZeXhCUVVGWkxFRkJRVTg3U1VGRE0wTXNRVUZCYTBJN1JVRkRlRUlzUVVGQlowSXNRVUZCWXl4QlFVRlpMRUZCUVU4N1NVRkRNME1zUVVGQmEwSTdSVUZEZUVJc1FVRkJaMElzUVVGQll5eEJRVUZaTEVGQlFVODdTVUZETTBNc1FVRkJhMEk3UlVGRGVFSXNRVUZCWjBJc1FVRkJZeXhCUVVGWkxFRkJRVTg3U1VGRE0wTXNRVUZCYTBJN1JVRkRlRUlzUVVGQlowSXNRVUZCWXl4QlFVRlpMRUZCUVU4N1NVRkRNME1zUVVGQmEwSTdRVXB5VjNSQ08wVkphMU5HT3p0SlFYVkZTU3hCUVVGWk8wbEJRMW9zUVVGQldUdEpRVU5vUWl4QlFVRmxPMDFCUTFRc1FVRkJXVHROUVVOYUxFRkJRVms3TzBGS04xZG9RanRGU1dsWVJqdEpRVU5KTEVGQlFWVTdTVUZEVml4QlFVRlRPMGxCUTFRc1FVRkJZVHRKUVVOaUxFRkJRVkU3U1VGRFVpeEJRVUZQTzBsQlExQXNRVUZCVlR0SlFVTldMRUZCUVZrN1NVRTFXV2hDTEVGQlFXVTdUVUZEV0N4QlFVRlRPMDFCUTFRc1FVRkJVenROUVVOVUxFRkJRVTg3U1VFMldWZ3NRVUZCWlN4QlFVRmhMRUZCUVVzN08wMUJSVE5DTEVGQlFWYzdUVUZEV0N4QlFVRlRPMGxCUldZc1FVRkJaMEk3VFVGRFZpeEJRVUZWTzAxQlExWXNRVUZCVVR0TlFVTlNMRUZCUVU4N1RVRkRVQ3hCUVVGWk8wMUJRMW9zUVVGQlZUdE5RVU5XTEVGQlFWazdUVUV4WVVZc1FVRXlZVlk3VFVGRlRpeEJRVUZuUWl4QlFVRkZPenRSUVVWV0xFRkJRVmM3VFVGRmJrSXNRVUZCWjBJc1FVRkJSU3hCUVVGaExFRkJRVXM3TzFGQlJUVkNMRUZCUVZjN1VVRkRXQ3hCUVVGVE8wbEJSV3BDTEVGQlFXdENPMDFCUTFvc1FVRkJVenROUVVOVUxFRkJRV0U3U1VGRmJrSXNRVUZCYTBJc1FVRkJTenM3VFVGRmFrSXNRVUZCVlR0TlFVTldMRUZCUVZNN1RVRjBZMGNzUVVGMVkxbzdUVUYyWTFrc1FVRjNZMW83VFVGRFFTeEJRVUZUTzAxU2VtTkdMRUZSTUdOUU8wMUJRMEVzUVVGQlZUdE5RVU5XTEVGQlFXVTdUVUZEWml4QlFVRnJRanROUVVWNFFpeEJRVUZyUWl4QlFVRkxMRUZCUVVNN1VWSm9aR2hDTEVGUmFXUkJPMUZCUTBFc1FVRkJhVUk3VFVGRGVrSXNRVUZCYTBJc1FVRkJTeXhCUVVGRE8xRlNibVJvUWl4QlVXOWtRVHRSUVVOQkxFRkJRVms3U1VGRmNFSXNRVUZCWjBJc1FVRkJWU3hCUVVGblFqdE5RVU53UXl4QlFVRlRPMGxCUldZc1FVRkJaMElzUVVGQmJVSXNRVUZCWjBJc1FVRkJhVUlzUVVGQlowSTdPMDFCU1RsRkxFRkJRVlU3VFVFM1pFVXNRVUU0WkZvN1RVRkRRU3hCUVVGUE8wMVNOV1JNTEVGUk5tUkdPMDFCUTBFc1FVRkJVenROUVVOVUxFRkJRVEJDTzAxQlF6RkNMRUZCUVZjN1RVRkhXQ3hCUVVGM1FqdE5RVGxqT1VJc1FVRkJaMElzUVVGQmFVSXNRVUZCVVN4QlFVRm5RaXhCUVVGbExFRkJRVkVzUVVGQlowSXNRVUZCWVR0UlFVTjZSeXhCUVVGVE8xRkJRMVFzUVVGQlV6dFJRVU5VTEVGQlFVODdUVUUyWTFnc1FVRkJaMElzUVVGQmFVSXNRVUZCV1N4QlFVRm5RaXhCUVVGbExFRkJRVmtzUVVGQlowSXNRVUZCWVR0UlFVTTNSeXhCUVVGVE8xRkJRMVFzUVVGQldUdFJRVU5hTEVGQlFYZENPMDFCUldoRExFRkJRV2RDTEVGQlFXOUNMRUZCUVZVc1FVRkJaMElzUVVGQmEwSXNRVUZCVlN4QlFVRm5RaXhCUVVGblFqczdVVUZGYkVnc1FVRkJVenRSUVVOVUxFRkJRVlU3VVVGRFZpeEJRVUZOTzFGQlEwNHNRVUZCVVR0UlFVTlNMRUZCUVZFN1VVRkRVaXhCUVVGUE8xRkJRMUFzUVVGQlZUczdVVUZGVml4QlFVRlJPMUZCUTFJc1FVRkJVenRSUVVWcVFpeEJRVUZuUWl4QlFVRnZRaXhCUVVGVExFRkJRVWNzUVVGQlowSXNRVUZCYTBJc1FVRkJVeXhCUVVGSExFRkJRV2RDTEVGQlFXZENMRUZCUVZNN1ZVRkROMGdzUVVGQlZUdFZRVU5XTEVGQlFVODdWVUZEVUN4QlFVRlJPMVZCUTFJc1FVRkJTenRWUVVOTUxFRkJRVTA3VlVGRFRpeEJRVUZYTzFWQlExZ3NRVUZCWVR0VlFVTmlMRUZCUVZrN1ZVRkRXaXhCUVVGaE8xVkJRMklzUVVGQldUczdWVUZGV2l4QlFVRmxPMVZCUTJZc1FVRkJVVHRWUVVOU0xFRkJRVk03VlVGRFZDeEJRVUZyUWp0VlFVVTFRaXhCUVVGblFpeEJRVUZ2UWl4QlFVRlRMRUZCUVVNc1FVRkJVU3hCUVVGblFpeEJRVUZyUWl4QlFVRlRMRUZCUVVNc1FVRkJVU3hCUVVGblFpeEJRVUZuUWl4QlFVRlRMRUZCUVVNN1dWSXpaMEoyU1N4QlVUUm5Ra1E3V1ZJMVowSkRMRUZSTm1kQ1JEdFpVakZuUWtvc1FWRXlaMEpKTzBsQlNWb3NRVUZCWjBJc1FVRkJiMEk3TzAxQlJUVkNMRUZCUVZFN08wMUJhR2RDWkN4QlFVRlBPMDFCUkc5RExFRkJSVE5ETzAxQmEyZENUU3hCUVVGak8wMUJRMlFzUVVGQll6dE5RVU5rTEVGQlFWVTdUVUZEVml4QlFVRlpPMDFCUTFvc1FVRkJXVHROUVVOYUxFRkJRVFJDTzAxQlJYQkRMRUZCUVdkQ0xFRkJRVzlDTEVGQlFVVTdPMUZCUlRWQ0xFRkJRV003VVVGRFpDeEJRVUZqTzAxQlJYaENMRUZCUVdkQ0xFRkJRVzlDTEVGQlFVczdPMUZTY0dsQ2FrTXNRVkZ6YVVKRk8xRkJRMEVzUVVGQllUdFJRVU5pTEVGQlFWYzdVVUZEV0N4QlFVRmxPMGxCUlhwQ0xFRkJRV2RDTEVGQlFXdENPMDFCUXpGQ0xFRkJRVkU3VFVGRFVpeEJRVUZoTzAxQlEySXNRVUZCVXp0TlVqZHBRa29zUVZFNGFVSk1PMDFCUTBFc1FVRkJaVHROUVVObUxFRkJRVmM3VFVGRmJrSXNRVUZCWjBJc1FVRkJhMElzUVVGQlF6dFJVbTVxUWpOQ0xFRlJiMnBDUlR0SlFVVldMRUZCUVdkQ0xFRkJRV3RDT3p0TlFVVXhRaXhCUVVGWE8wbEJSVzVDTEVGQlFXZENMRUZCUVd0Q0xFRkJRVWM3TzAxQlJUZENMRUZCUVZVN1RVRkRWaXhCUVVGTE8wMUJRMHdzUVVGQlRUdE5RVU5PTEVGQlFWRTdUVUZEVWl4QlFVRlBPMDFCUldZc1FVRkJaMElzUVVGQmEwSXNRVUZCUnl4QlFVRkZPMUZCUXpkQ0xFRkJRVmM3VFVGRmNrSXNRVUZCWjBJc1FVRkJhMElzUVVGQlJ5eEJRVUZITzFGQlF6bENMRUZCUVZNN1VVRkZia0lzUVVGQlowSXNRVUZCYTBJc1FVRkJSeXhCUVVGSExFRkJRVk03VlVGRGNrTXNRVUZCVHp0TlFVVnVRaXhCUVVGblFpeEJRVUZyUWl4QlFVRkhMRUZCUVVjN1VVRkRPVUlzUVVGQlV6dEpRVVZ1UWl4QlFVRm5RaXhCUVVGclFpeEJRVUZoTEVGQlFVczdPMDFCUlRWRExFRkJRVmM3U1VGRmJrSXNRVUZCWjBJN1RVRkRWaXhCUVVGWk8wMUJSV3hDTEVGQlFXZENMRUZCUVdkQ096dFJRVWQ0UWl4QlFVRlBPMUZCUTFBc1FVRkJUenRSUVVOUUxFRkJRVk03VVVGRmFrSXNRVUZCWjBJc1FVRkJaMElzUVVGQlJUczdUVUZIYkVNc1FVRkJaMElzUVVGQlowSTdVVUZEZUVJc1FVRkJaVHRSUVVObUxFRkJRVk03VVVGRFZDeEJRVUZSTzFGQlExSXNRVUZCWVR0UlFVVnlRaXhCUVVGblFpeEJRVUZuUWl4QlFVRmhPMVZCUTI1RExFRkJRVlU3VlVGRFZpeEJRVUZaTzFWQlExb3NRVUZCVVR0VlFVTlNMRUZCUVU4N1ZVRkRVQ3hCUVVGbE8xRkJSWHBDTEVGQlFXZENMRUZCUVdkQ0xFRkJRV0U3VlZJMWJVSnlReXhCVVRadFFrVTdWVUZEUVN4QlFVRlhPMVZCUTFnc1FVRkJVenRWUVVOVUxFRkJRV0U3U1VGSmRrSXNRVUZCWjBJc1FVRkJZenM3VFVFdmJFSTFRaXhCUVVGUE8wMUJSRzlETEVGQlJUTkRPMDFCYVcxQ1RTeEJRVUZSTzAxQlEyaENMRUZCUVdkQ0xFRkJRV01zUVVGQlJUczdVVUZGZEVJc1FVRkJZenRKUVVONFFpeEJRVUZuUWl4QlFVRmpPMDFCUTNSQ0xFRkJRV1U3VFVGRFppeEJRVUZSTzAxQlExSXNRVUZCWVR0TlFVTmlMRUZCUVZNN1RVRkRha0lzUVVGQlowSXNRVUZCWXl4QlFVRlpPMUZCUTJoRExFRkJRVms3VFVGRGRFSXNRVUZCWjBJc1FVRkJZeXhCUVVGaE8xRlNiRzlDYmtNc1FWRnRiMEpGTzFGQlEwRXNRVUZCWVR0TlFVTjJRaXhCUVVGblFpeEJRVUZqTEVGQlFXRTdVVUZEYWtNc1FVRkJVenROUVVOdVFpeEJRVUZuUWl4QlFVRmpMRUZCUVZrN1VVRkRhRU1zUVVGQlRUczdRVUZIYUVJc1FVRkJaMElzUVVGQlJ5eEJRVUZUTzBWQlF6RkNMRUZCUVZVN1JVRkRXaXhCUVVGblFpeEJRVUZETEVGQlFWVXNRVUZCWjBJc1FVRkJReXhCUVVGVExFRkJRVk1zUVVGQlF5eEJRVUZWTEVGQlFWTXNRVUZCUXpzN1NVRkZMMFVzUVVGQlV6dEpRVU5VTEVGQlFWVTdTVUZEVml4QlFVRkxPMGxCUTB3c1FVRkJXVHRKUVVOYUxFRkJRVk03U1VGRFZDeEJRVUZSTzBsQlExSXNRVUZCVHp0SlFVTlFMRUZCUVZrN1NVRkZXaXhCUVVGeFFqdEZRVU42UWl4QlFVRm5RaXhCUVVGRExFRkJRVlVzUVVGQlV5eEJRVUZETzBsQlEycERMRUZCUVZjN1JVRkRaaXhCUVVGblFpeEJRVUZETEVGQlFWTXNRVUZCVXl4QlFVRkRPMGxCUTJoRExFRkJRVmM3UlVvdmJVSmlPMGxKYVc1Q1JpeEJRVUZuUWl4QlFVRkRMRUZCUVZVc1FVRkJaMElzUVVGQlF5eEJRVUZUTEVGQlFWTXNRVUZCUXl4QlFVRlZMRUZCUVZNc1FVRkJRenROUVVNM1JTeEJRVUZaTzBsQlEyeENMRUZCUVdkQ0xFRkJRVU1zUVVGQlRTeEJRVUZWTEVGQlFXZENMRUZCUVVNc1FVRkJUU3hCUVVGVExFRkJRVk1zUVVGQlF5eEJRVUZOTEVGQlFWVXNRVUZCVXl4QlFVRkRMRUZCUVUwN1RWSm9jVUp1Unl4QlVXbHhRa1k3TzBGQlJVNHNRVUZCWjBJN1JVRkRaQ3hCUVVGbE8wVkJRMnBDTEVGQlFXZENMRUZCUVVNc1FVRkJWU3hCUVVGblFpeEJRVUZET3p0SlFVVjRReXhCUVVGUE8wbEJRMUFzUVVGQmEwSTdPMEZCUlhSQ0xFRkJRV2RDTEVGQlFWTTdSVUZEZGtJc1FVRkJZenRGUVVOb1FpeEJRVUZuUWl4QlFVRlRMRUZCUVVNc1FVRkJWU3hCUVVGblFpeEJRVUZUTEVGQlFVTTdPMGxCUlRGRUxFRkJRVTA3U1VGRFRpeEJRVUZyUWpzN1FVcHNiMEp3UWp0RlNYTnZRa1lzUVVGQlowSXNRVUZCUXl4QlFVRlZMRUZCUVdkQ0xFRkJRVU03U1VGRGRFTXNRVUZCVHp0RlFVTmlMRUZCUVd0Q0xFRkJRV2RDT3p0SlFVVTVRaXhCUVVGbE8wbEJRMjVDTEVGQlFXdENMRUZCUVdkQ0xFRkJRVU1zUVVGQlZTeEJRVUZyUWl4QlFVRm5RaXhCUVVGRE8wMUJRekZGTEVGQlFVODdUVUZEVUN4QlFVRnJRanROUVVOc1FpeEJRVUZaTzAxQlJWb3NRVUZCY1VJN1RVRkRja0lzUVVGQmEwSTdTVUZEZUVJc1FVRkJhMElzUVVGQlowSXNRVUZCUXp0TlFVTTNRaXhCUVVGUE8wbEJRMklzUVVGQmEwSXNRVUZCWjBJc1FVRkJRenROUVVNM1FpeEJRVUZQTzBsQlEySXNRVUZCYTBJc1FVRkJaMElzUVVGQlF5eEJRVUZUTEVGQlFWVXNRVUZCYTBJc1FVRkJaMElzUVVGQlF5eEJRVUZUTzAxQlF6VkdMRUZCUVU4N1NVRkRZaXhCUVVGclFpeEJRVUZuUWl4QlFVRkRMRUZCUVZNN1RVRkRkRU1zUVVGQmVVSTdTVUZETDBJc1FVRkJhMElzUVVGQlowSXNRVUZCUXl4QlFVRlRPMDFCUTNSRExFRkJRVmM3UlVGRGFrSXNRVUZCYjBJc1FVRkJaMElzUVVGQlF5eEJRVUZWTEVGQlFXOUNMRUZCUVdkQ0xFRkJRVU03TzBsQlJXaEdMRUZCUVZNN1JVRkRZaXhCUVVGblFpeEJRVUZUTzBsQlEzSkNMRUZCUVdNN1NVRkRiRUlzUVVGQlowSXNRVUZCVXl4QlFVRkRMRUZCUVZVc1FVRkJaMElzUVVGQlV5eEJRVUZETzAxQlEzaEVMRUZCUVUwN08wRkJTMW83UlVGRFJTeEJRVUZOTzBWQlNWSXNRVUZCVnp0SlFVTlFMRUZCUVZNN1JVRkRZaXhCUVVGWExFRkJRVXM3U1VGRFdpeEJRVUZyUWp0SlFVTnNRaXhCUVVGdFFqdEpRVU51UWl4QlFVRnJRanRKUVVOc1FpeEJRVUZUTzBsQlExUXNRVUZCWVR0SlFVTmlMRUZCUVZFN1NVRkRVaXhCUVVGUE8wbEJRMUFzUVVGQmIwSTdTVUZEY0VJc1FVRkJVVHRKUVVOU0xFRkJRVlU3U1VGRFZpeEJRVUZMTzBsQlEwd3NRVUZCVHp0SlFVTlFMRUZCUVdsQ08wVkJSWEpDTEVGQlFWY3NRVUZCU3p0SlFVTmFMRUZCUVdFN1NVRkRZaXhCUVVGWk8wbEJRMW9zUVVGQlVUdEpRVVZhTEVGQlFWY3NRVUZCU3l4QlFVRmxMRUZCUVRaQ0xFRkJRVmNzUVVGQlN5eEJRVUZsTEVGQlFXOUNMRUZCUVZjc1FVRkJTeXhCUVVGbE8wMUJSM2hKTEVGQlFVODdTVUZGWWl4QlFVRlhMRUZCUVVzc1FVRkJaVHROUVVONlFpeEJRVUZUTzBWQlJXWXNRVUZCVlR0SlFVTk9MRUZCUVZNN1NVRkRWQ3hCUVVGWk8wbEJRMW9zUVVGQmQwSTdSVUZGTlVJc1FVRkJZenRKUVVOV0xFRkJRVlU3TzBGQlUyUTdPMFZCUlVVc1FVRkJWVHRGUVVOV0xFRkJRVk03UlVGRFZDeEJRVUZSTzBWQlExSXNRVUZCVHp0RlFVTlFMRUZCUVVzN1JVRkRUQ3hCUVVGTk8wVkJRMDRzUVVGQlVUdEZRVU5TTEVGQlFWazdSVUZEV2l4QlFVRlRPMFZCUTFRc1FVRkJjVUk3UlVGRGNrSXNRVUZCZVVJN1JVRkZNMElzUVVGQlZ6dEpRVU5RTEVGQlFWTTdTVUZEVkN4QlFVRlpPMGxCUTFvc1FVRkJlVUk3UlVveGRVSXpRanRKU1RaMVFrWXNRVUZCVnp0TlFVTk1MRUZCUVZjN1NVRkZha0lzUVVGQllTeEJRVUZYTzAxQlEyeENMRUZCUVZjN1NVRkZha0lzUVVGQlZ5eEJRVUZYTEVGQlFXOUNMRUZCUVdFc1FVRkJWeXhCUVVGWE8wMUJSWFpGTEVGQlFWYzdPenM3T3pzN1FVRlJha0lzUVVGQlR6dEZRVU5NTEVGQlFWVTdSVUZEVml4QlFVRlJPMFZCUTFJc1FVRkJUenRGUVVOUUxFRkJRVlU3UlVGRFZpeEJRVUZaTzBWQmRIbENTaXhCUVhWNVFsSTdPMEZCUlVZc1FVRkJUenRGUVVOTUxFRkJRVlU3UlVGRFZpeEJRVUZMTzBWQlEwd3NRVUZCVXp0RlFVTlVMRUZCUVZrN08wRktlbmRDV2p0RlNUUjNRa1lzUVVGQlR6dEpRVU5JTEVGQlFWVTdTVUZvZWtKRkxFRkJhWHBDV2p0SlFVTkJMRUZCUVZNN1NVRkRWQ3hCUVVGUE8wbEJRMUFzUVVGQlN6dEpRVU5NTEVGQlFVODdTVUZEVUN4QlFVRlRPMFZCUTJJc1FVRkJUeXhCUVVGak8wbEJRMnBDTEVGQlFWVTdPMEZEYkRCQ1pEdEZRVU5ETEVGQlFWTTdSVUZEVkN4QlFVRlpPMFZNTWtOWU8wbExOME5HTzAxQlMwVXNRVUZCVXp0RlFVVllPMGxXU2xrc1FWVkxWanRKUVVOQkxFRkJRVmM3U1ZaRFRpeEJWVUZNTzBsQlEwRXNRVUZCWlR0SlFVVnFRaXhCUVVGeFFqdE5WRWhXTEVGVFNWSTdUVUZEU0N4QlFVRnhRaXhCUVVGRE8xRlVabVFzUVZOblFrbzdSVUZGU2p0SlFVTkZMRUZCUVZjN1JVRkZZanRKUVVORkxFRkJRVk03U1VGRFZDeEJRVUZuUWp0RlFVVnNRanRKUVVORkxFRkJRVk03U1VGRFZDeEJRVUZuUWp0RlFVVnNRanRKUVVORkxFRkJRV003U1ZRNVFsSXNRVk1yUWs0N1NVRkRRU3hCUVVGWE8wbEJRMWdzUVVGQlpUdEpRVU5tTEVGQlFWTTdTVUZEVkN4QlFVRlBPMFZCUjFRN1NVRkRSU3hCUVVGWE8wbEJSV0lzUVVGQmRVSXNRVUZCUlR0TlZuUkRZaXhCVlhWRFZEdE5RVU5CTEVGQlFWYzdUVlpxUTFBc1FWVnJRMG83VFVGRFFTeEJRVUZsTzAxQlJXeENMRUZCUVhWQ0xFRkJRVVVzUVVGQll6dFJWSEpETlVJc1FWTnpRMDQ3VVVGRFRDeEJRVUYxUWl4QlFVRkZMRUZCUVdNc1FVRkJRenRWVkdwRWFFTXNRVk5yUkVRN08wRkRiRVJRTzBWQlEwVXNRVUZCYTBJN1JVRkRiRUlzUVVGQmNVSTdSVUZEY2tJc1FVRkJhVUk3UlVGRGFrSXNRVUZCVVR0RlFVTlNMRUZCUVZVN1JVNTNRMVk3U1UwM1EwWTdUVUZSU1N4QlFVRlJPMFZCUjFvN1NVRkRTU3hCUVVGUk8wbFdVa29zUVZWVFNqdEpRVU5CTEVGQlFXRTdTVUZEWWl4QlFVRlhPMGxCUTFnc1FVRkJZVHRKUVVOaUxFRkJRVTA3U1VGRFRpeEJRVUZoTzBsQlEySXNRVUZCVlR0SlFVTldMRUZCUVZFN1NVRkRVaXhCUVVGaE8wbEJSV3BDTEVGQlFYVkNPMDFCUTJwQ0xFRkJRVlU3U1U1eFFtUTdUVTFzUTBZN1VVRm5RazBzUVVGQlZUdFJRVU5XTEVGQlFWYzdVVUZEV0N4QlFVRlRPenRCUVVWbU8wVldMMEpSTEVGVlowTk9PMFZXTlVKTkxFRlZOa0pPTzBWQlEwRXNRVUZCVXp0RlFVTlVMRUZCUVZFN1JVRkZWaXhCUVVGcFFqdEpRVU5pTEVGQlFWTTdSVUZGWWp0SlFVTkpMRUZCUVZNN1JVRkZZanRKVm5aRFVTeEJWWGREU2p0RlFVbEtPMGxXT1VOUkxFRlZLME5LT3p0QlFWRktPMFZCUTBVc1FVRkJhMEk3UlVGRGJFSXNRVUZCY1VJN1JVRkRja0lzUVVGQmFVSTdSVUZEYWtJc1FVRkJVVHM3UVVNM1JGWTdSVUZEUlN4QlFVRlRPMFZCUTFRc1FVRkJXVHRGUVVOYUxFRkJRV1U3UlZBd1EyWTdTVTgzUTBZN1RVNXhRa2tzUVVGQlZ6dEZUV1JtTzBsQlEwa3NRVUZCVXp0SlFVTlVMRUZCUVdkQ08wbEJSV2hDTEVGQlFWTTdTVkJyUTFnN1RVOTBRMFk3VVVGUFRTeEJRVUZUTzBsUUswSmlPMDFQTjBKR0xFRkJRV2xDTzFGQlJWUXNRVUZCWVR0UlFVTmlMRUZCUVZNN1JVRkZha0k3U1VGRFNTeEJRVUZaTzBWQlJXaENPMGxCUTBrc1FVRkJaVHRGUVVWdVFqdEpRVU5KTEVGQlFWazdTVUZEV2l4QlFVRmxPMFZCUlc1Q0xFRkJRV0U3U1VGRFZDeEJRVUZaTzBsQlExb3NRVUZCV1R0SlFVVm9RaXhCUVVGaExFRkJRVWM3VFVGRFZpeEJRVUZUTzAxQlExUXNRVUZCVXp0TlFVTlVMRUZCUVU4N1JVRkhZanRKV0hwRFVTeEJWekJEU2p0SlFVTkJMRUZCUVZNN1NWcDJRMGtzUVZsM1EySTdTVUZEUVN4QlFVRlRPMGxCUTFRc1FVRkJaMEk3U1VGRGNFSXNRVUZCYTBJN1RWZ3pRbGNzUVZjMFFuWkNPenRCUVVkT08wVkJRMFVzUVVGQlowSTdSVkJRYUVJN1NVOU5SanROUVVsSkxFRkJRV1U3VFVGRFppeEJRVUZsTzBWQlJXNUNPMGxCUTBrc1FVRkJaMEk3U1ZCa2JFSTdUVTloUmp0UlFVbE5MRUZCUVdVN1VVRkRaaXhCUVVGWk8wbFFiRUpvUWp0TlQyOUNSaXhCUVVGcFFqdFJRVVZVTEVGQlFWTTdVVUZEVkN4QlFVRlBPMFZCUldZN1NVRkRTU3hCUVVGak8wbEJRMlFzUVVGQllUdEpRVU5pTEVGQlFXZENPMGxRTlVKc1FqdE5UM2xDUmp0UlFVMU5MRUZCUVZNN1JVRkZaanRKV0RsRlVTeEJSR2xFVGp0SlFUZERaU3hCUVRoRFpqdEpRVU5CTEVGQlFWYzdTVUV6UTBvc1FVRTBRMUE3U1VGRFFTeEJRVUZoTzBsWk1rSllMRUZCUVdNN1JVRkZiRUk3U1ZneFJWRXNRVmN5UlVvN1NVRkRRU3hCUVVGbE8wbEJSVzVDTEVGQlFXOUNPMDFCUTJRc1FVRkJVenRKUVVObUxFRkJRVzlDTzAxWWVFWmFMRUZYZVVaR08wMUJRMEVzUVVGQllUdE5RVU51UWl4QlFVRnZRaXhCUVVGRk8xRkJRMlFzUVVGQlR6dFJRVU5RTEVGQlFWTTdSVkJvUkdZN1NVOXJSRVk3VFVGSFRTeEJRVUZaTzBWQlJXeENMRUZCUVdkQ0xFRkJRVWs3U1VGRFpDeEJRVUZaT3p0QlFVMXNRanRGUVVOSkxFRkJRVms3UlVGRFdpeEJRVUZUTzBWYWRrWllMRUZCUVdFN1JVRkRZaXhCUVVGblFqdEZXWGxHYkVJc1FVRkJiVUlzUVVGQlNUdEpRVU5xUWl4QlFVRlpPMEZCUjJ4Q0xFRkJRV01zUVVGQlF6dEZRVU5VTEVGQlFXbENPMEZCUlhaQ0xFRkJRV003UlZoMlNFNHNRVVJwUkU0N1JVRTNRMlVzUVVFNFEyWTdSVUZEUVN4QlFVRlhPMFZCTTBOS0xFRkJORU5RTzBWQlEwRXNRVUZCWVR0RldXOUZaaXhCUVVGakxFRkJRVVU3U1ZoNFNFZ3NRVmQ1U0ZBN1FVRkZUaXhCUVVGak8wVkJRMVlzUVVGQlR6dEZRVU5RTEVGQlFWYzdPMEZCU1dZN1JVRkRSU3hCUVVGVE8wVkJRMVFzUVVGQllUczdRVUZIWmp0RlFVTkZMRUZCUVZNN1JVRkRWQ3hCUVVGWk8wVkJRMW9zUVVGQlpUdEZRVVZxUWp0SlFVTkpMRUZCUVZNN1NVRkRWQ3hCUVVGblFqdEpVR3BIYkVJN1RVOXRSMFlzUVVGQmEwSTdVVUZGVml4QlFVRmhPMGxRY2tkdVFqdE5UM1ZIUml4QlFVRnJRanRSUVVWV0xFRkJRV0U3UlVGRmNrSTdTVUZEU1N4QlFVRlJPMGxCUTFJc1FVRkJWVHRKUVVOV0xFRkJRV1U3UlVGSmJrSTdTVmd2U2xFc1FVUnRSVTQ3U1VFdlJHVXNRVUZuUldZN1NVRkRRU3hCUVVGWE8wbEJOMFJLTEVGQk9FUlFPMGxCUTBFc1FVRkJZVHRKUTNaRlVDeEJWMmxMU2p0SlFVTkJMRUZCUVZNN1NVRkRWQ3hCUVVGWk8wbEJSV2hDTEVGQlFUSkNPMDFZYWtwRkxFRlhhMHAyUWp0RlFVVk9PMGxCUTBrc1FVRkJXVHM3UVVONFMyaENPMFZhUTFFc1FWbEJUanRGUVVOQkxFRkJRVk03UlVGRFZDeEJRVUZQTzBWQlJWUTdTVUZEU1N4QlFVRlRPMFZCUldJc1FVRkJhVUk3U1VGRFlpeEJRVUZUTzBWQlIySTdTVUZEU1N4QlFVRlJPMGxCUTFJc1FVRkJVenRKVWpoQ1dEdE5VV2hEUmp0UlFVdE5MRUZCUVZNN1JVRkZaanRKUVVOSkxFRkJRVk03U1VGRFZDeEJRVUZSTzBsU2RVSldPMDFSZWtKR08xRkJTMDBzUVVGQlVUczdRVUZIWkR0RlFVTkZMRUZCUVZNN1JVRkRWQ3hCUVVGVE8wVkJSVmdzUVVGQldUdEpRVU5TTEVGQlFVODdTVUZEVUN4QlFVRlJPMFZTVjFZN1NWRnFRa1k3VFVGVFNTeEJRVUZYTzBWQlJXWTdTVUZEU1N4QlFVRmxPMGxTUzJwQ08wMVJUa1k3VVVGSlRTeEJRVUZUTzBWQlNXWTdTVUZEU1N4QlFVRmxPMFZCUjI1Q08wbEJRMGtzUVVGQlVUdEpRVU5TTEVGQlFWVTdTVkpTV2p0TlVVMUdPMUZCUzAwc1FVRkJVVHRSUVVOU0xFRkJRVms3TzBGQlIyeENPMFZCUTBVc1FVRkJVenRGUVVOVUxFRkJRVms3UlVGSlpEdEpRVU5KTEVGQlFWTTdTVUZEVkN4QlFVRmxPMGxTZGtKcVFqdE5VWEZDUmp0UlFVdE5MRUZCUVZNN08wRkJUV1k3UlZvM1JWRXNRVms0UlU0N1JWb3hSVTBzUVZreVJVNDdSV0o2UkVFc1FVRkJZVHRGUVVOaUxFRkJRV2RDTzBWaE1rUnNRanRKV2psRlVTeEJXU3RGU2p0SlFVTkJMRUZCUVZrN1JVRkZhRUk3U1VGRFNTeEJRVUZUTzBsQlExUXNRVUZCVVR0SlFVTlNMRUZCUVU4N1JVRkxXRHRKUVVOSkxFRkJRVk03U1VGRFZDeEJRVUZQTzBWQlJWZzdTVUZEU1N4QlFVRlJPMGxhTDBaS0xFRlpaMGRLTzBsQlEwRXNRVUZCVnp0SlFVTllMRUZCUVdFN1NVRkRZaXhCUVVGUE8wbEJRMUFzUVVGQldUdEpRVVZvUWl4QlFVRnpRanM3VFZwMFIyUXNRVmwzUjBZN1RWbzFSMFVzUVZrMlIwWTdTVkpvUlVvN1RWRnhSRVk3VVVGalRTeEJRVUZSTzBWQlJXUTdTVUZEU1N4QlFVRlRPMGxCUTFRc1FVRkJZVHRGUVVWcVFqdEpRVU5KTEVGQlFWTTdTVUZEVkN4QlFVRmhPMGxCUldwQ08wMUJRMDBzUVVGQldUczdRVUZIYkVJN1JVRkRSU3hCUVVGVE8wVkJRMVFzUVVGQlowSTdSVkp1Um1oQ08wbFJhVVpHTzAxQlMwa3NRVUZCVXp0RlFWTmlPMGxCUTBrc1FVRkJWenRKWWpOSVlpeEJRVUZaTzBsQlExb3NRVUZCWlR0RllTdElha0k3U1VGRFNTeEJRVUZaT3p0QlFVVm9RaXhCUVVGMVFpeEJRVUYxUWl4QlFVRnhRanRGUVVWcVJTeEJRVUZaT3p0QlFVbGtPMFZCUTBVc1FVRkJZenRGUVVWb1FpeEJRVUZaTzBsYU9VcEtMRUZaSzBwS08wbEJSVW9zUVVGQldTeEJRVUZMTzAxYU1VcE9MRUZaTWtwTU8wVkJSMDRzUVVGQldTeEJRVUZETzBsQlExQXNRVUZCYVVJN08wRkRjRXQyUWp0RlFVTkRMRUZCUVdkQ08wVlVNRU5tTzBsVE0wTkdPMDFCU1VVc1FVRkJVenM3UVVGSFdEdEZRVU5ETEVGQlFWazdSVUZEV2l4QlFVRlRPMFZCUTFRc1FVRkJVenRGUVVOVUxFRkJRVTg3UlZSblEwNDdTVk53UTBZN1RVRlBSU3hCUVVGVE8wMUJRMVFzUVVGQlV6dEZRVVZZTzBsQlEwVXNRVUZCVHp0SlZIbENVRHROVXpGQ1JqdFJRVWxITEVGQlFWTTdVVUZEVkN4QlFVRlBPMUZCUlZZc1FVRkJORUk3VlVGRGVFSXNRVUZCVXp0VlFVTlVMRUZCUVU4N1JVRkhXRHRKUVVORkxFRkJRVms3U1ZSaFdqdE5VMlJHTzFGQlNVY3NRVUZCV1R0SlFVVm1MRUZCUVhWQ08wMUJRM0JDTEVGQlFWTTdUVUZEVkN4QlFVRlhPMDFCUTFnc1FVRkJaVHROVkV0b1FqdFJVMUpHTEVGQlFYVkNPMVZCVDI1Q0xFRkJRVmM3VlVGRFdDeEJRVUZUTzFWQlJXSXNRVUZCZFVJc1FVRkJTenRaUVVOMFFpeEJRVUZUTzFWQlIyWXNRVUZCZFVJc1FVRkJTeXhCUVVGaE8xbEJRMnBETEVGQlFWTTdTVUZKYWtJc1FVRkJkVUlzUVVGQlZ5eEJRVUZITzAxQlF6bENMRUZCUVZjN1RWUmFhRUk3VVZOWFJpeEJRVUYxUWl4QlFVRlhMRUZCUVVjN1ZVRkhOVUlzUVVGQlZ6czdRVUZGY0VJN1JVRkRReXhCUVVGWk8wVkJRMW9zUVVGQlR6dEZRVVZTTzBsQlEwVXNRVUZCVVR0SlFVTlNMRUZCUVZNN1NVRkRWQ3hCUVVGWk8wbEJRMW9zUVVGQlV6dEpRVU5VTEVGQlFWRTdTVlI2UWxJN1RWTnZRa1k3VVVGUlNTeEJRVUZUTzBWQlJXSXNRVUZCYlVJN1NVRkZha0lzUVVGQlV6dEpRVU5VTEVGQlFWRTdTVUZGVml4QlFVRnRRaXhCUVVGSE8wMUJRMjVDTEVGQlFWTTdUVUZEVkN4QlFVRlJPMDFCUTFJc1FVRkJZenROUVVOa0xFRkJRVzFDTzAxQlEyNUNMRUZCUVZFN1RVRkRVaXhCUVVGVE8wMUJRMW9zUVVGQmJVSXNRVUZCUnl4QlFVRkZPMUZCUTI1Q0xFRkJRV003VFVGRGJrSXNRVUZCYlVJc1FVRkJSeXhCUVVGRk8xRkJRMjVDTEVGQlFXMUNPMFZCUlhoQ0xFRkJRVzFDTEVGQlFVa3NRVUZCYlVJc1FVRkJSeXhCUVVGdFFqdEpRVU01UkN4QlFVRlhPMGxCUTFnc1FVRkJaVHRKVkdwRVpqdE5VeXREUml4QlFVRnRRaXhCUVVGSkxFRkJRVzFDTEVGQlFVY3NRVUZCYlVJN1VVRkxOMFFzUVVGQlZ6czdWME5vUjBnN1JVRkRXRHRKUVVOSkxFRkJRVk03TzBWQlEySTdTVUZEU1N4QlFVRlRPenRCUVVWaU8wVmtTRkVzUVdOSlRqdEZRVU5CTEVGQlFXRTdSVUZEWWl4QlFVRmpPMFZCUTJRc1FVRkJVVHRGUVVOU0xFRkJRVmM3TzBGQlJXSXNRVUZCYTBJN1JVRkRhRUlzUVVGQllUczdRVUZGWmp0RlpHSlJMRUZqWTA0N08wRkJSMFk3UlVGRFJTeEJRVUZUTzBWQlExUXNRVUZCVXp0RlFVTlVMRUZCUVU4N1JWWnhRbEE3U1ZWNFFrWTdUVUZOU1N4QlFVRlBPMFZXYTBKVU8wbFZlRUpHTzAxQlUwa3NRVUZCVXp0TlFVTlVMRUZCUVU4N08wRkJSVmdzUVVGQmEwSTdSVUZEYUVJc1FVRkJVVHRGUVVOU0xFRkJRVk03TzBGQlMxZ3NRVUZCU1N4QlFVRk5MRUZCUVVrN1JXUjRRMDRzUVdONVEwbzdRVUZGU2l4QlFVRkhMRUZCUVU4c1FVRkJUU3hCUVVGSExFRkJRVTg3UlVGRmRFSXNRVUZCVXp0RlFVTlVMRUZCUVZrN1JVRkRXaXhCUVVGak96dEJRVVZzUWp0RlFVTkZMRUZCUVZNN1JWWk1WRHRKVlVsR08wMUJTVWtzUVVGQlV6czdRVUZGWWp0RlFVTkZMRUZCUVZNN1JWWllWRHRKVlZWR08wMUJTVWtzUVVGQlV6czdRVUYzUW1Jc1FVRkJhMElzUVVGQllUdEZaRzVHZGtJc1FXTnZSa283UlVGRFFTeEJRVUZUT3p0QlEzQkdUaXhCUVVGblFpeEJRVUZaTzBWQlEycERMRUZCUVZNN1JVRkRWQ3hCUVVGVE96dEJRVVZZTzBWQlJVVXNRVUZCWjBJN1JWaHpRMmhDTzBsWGNFTkdPMDFCUjAwc1FVRkJXVHRGUVVWc1FpeEJRVUYxUWp0SlFVTnFRaXhCUVVGaE8wbEJRMklzUVVGQlowSTdSVUZKZEVJc1FVRkJjVUlzUVVGQlNUdEpRVU51UWl4QlFVRlpPMFZCUld4Q0xFRkJRWEZDTzBsbWRrSmlMRUZFYVVST08wbEJOME5sTEVGQk9FTm1PMGxCUTBFc1FVRkJWenRKUVRORFNpeEJRVFJEVUR0SlFVTkJMRUZCUVdFN1NVRXZRbUlzUVVGQllUdEpRVU5pTEVGQlFXZENPMFZuUWtsc1FpeEJRVUZ4UWp0SlFVTm1MRUZCUVdNN1NVRkRaQ3hCUVVGWk8wbEJSV3hDTEVGQlFYRkNMRUZCUVVjN1RVRkRhRUlzUVVGQldUdEZRVVZ3UWl4QlFVRnhRanRKUVVObUxFRkJRV003UlVGRmNFSXNRVUZCY1VJN1NVRkRaaXhCUVVGUE96dEJRVWRpTzBWQlEwVXNRVUZCVXp0RlFVTlVMRUZCUVZNN08wRkJUVmc3UlVGRFJTeEJRVUZOT3p0QlFVTlNPMFZCUTBVc1FVRkJUVHM3UVVGSFVqdEZablJFWVN4QlpYVkVXRHRGUVVOR0xFRkJRV1U3U1daNlJGQXNRV1V3UkVvN08wRllZa1k3UlZkdFFrWTdTVUZIVFN4QlFVRlpPMEZCUld4Q0xFRkJRV2xDTEVGQlFVazdSVUZEWml4QlFVRlpPMEZCUld4Q0xFRkJRV2xDTzBWbWVFVlVMRUZFYVVST08wVkJOME5sTEVGQk9FTm1PMFZCUTBFc1FVRkJWenRGUVRORFNpeEJRVFJEVUR0RlFVTkJMRUZCUVdFN1FXZENjMEptTEVGQlFXbENPMFZtTVVWS0xFRkVkMFJZTzBWQmNrUmxMRUZCYzBSbU8wVkJRMEVzUVVGQlZ6dEZRV3BFVGl4QlFXdEVURHRGUVVOQkxFRkJRV0U3UlVGRFlpeEJRVUZuUWp0RlFUVkRhRUlzUVVGQldUdEZRVU5hTEVGQlFXVTdRV2RDTWtScVFpeEJRVUZwUWp0RlpuWkZUaXhCWlhkRlREdEZRVU5CTEVGQlFWYzdSVUZEV0N4QlFVRlpPMEZCUld4Q0xFRkJRV2xDTzBWbWJrWlVMRUZFTWtWT08wVkJka1ZsTEVGQmQwVm1PMFZCUTBFc1FVRkJWenRGUVVOWUxFRkJRVms3UlVGd1JWQXNRVUZ4UlV3N1JVRTNSRUVzUVVGQldUdEZRVU5hTEVGQlFXVTdPMEZuUW05RmFrSTdSVUZEUlN4QlFVRm5RanRGUVVOb1FpeEJRVUZWTzBWQlJWb3NRVUZCV1R0SlpqTkdTaXhCWlRSR1NqdEpRVU5LTEVGQlFWa3NRVUZCUXp0TlpqVkdRU3hCWlRaR1VEdEZRVU5PTEVGQlFWazdTV1oyUmtvc1FXVjNSa283TzBGRGFFZEtPMFZCUTBVc1FVRkJXVHRGUVVWa0xFRkJRV1VzUVVGQlR5eEJRVUZsTEVGQlFVc3NRVUZCWjBJc1FVRkJaU3hCUVVGTExFRkJRV2xDTEVGQlFXVXNRVUZCU3l4QlFVRnRRaXhCUVVGbExFRkJRVXNzUVVGQmFVSXNRVUZCWlN4QlFVRkxMRUZCUVdNc1FVRkJaU3hCUVVGTExFRkJRV1VzUVVGQlpTeEJRVUZMTEVGQlFXTXNRVUZCWlN4QlFVRkxMRUZCUVdkQ0xFRkJRV1VzUVVGQlN5eEJRVUZsTEVGQlFXVXNRVUZCU3l4QlFVRmxMRUZCUVdVc1FVRkJTeXhCUVVGdFFpeEJRVUZsTEVGQlFVc3NRVUZCZVVJc1FVRkJaU3hCUVVGTExFRkJRV2RDTEVGQlFXVXNRVUZCU3l4QlFVRmxMRUZCUVdVc1FVRkJTeXhCUVVGbExFRkJRV1U3U1doQ1R6bHFRaXhCWjBKVlVqdEpRVU5CTEVGQlFWRTdTVUZCVlN4QlFVTk1PMGxCUTJJc1FVRkJaVHRKUVVGQkxFRkJRMGc3U1VGRFdpeEJRVUZUTzBsQlExUXNRVUZCVXp0SlFVTlVMRUZCUVU4N1JVRkhWaXhCUVVGbE8wbEJRMWdzUVVGQlV6dEZRVVZpTEVGQlFXVXNRVUZCU3l4QlFVRnBRaXhCUVVGbExFRkJRVXNzUVVGQlowSXNRVUZCWlN4QlFVRkxPMGxCUjNwR0xFRkJRVk03UlVGSFlqdEpRVU5KTEVGQlFWTTdTVUZEVkN4QlFVRlBPMGxCUTFBc1FVRkJUenRGUVVWWUxFRkJRVEpDTzBsQlEzWkNMRUZCUVZNN1NVRkRWQ3hCUVVGUE8wbEJRMUFzUVVGQlVUdEZRVVZhTEVGQlFXVTdTV2hDTjBOUUxFRm5RamhEU2p0SlFVTkJMRUZCUVdVN1NVRkRaaXhCUVVGUk8wbEJRMUlzUVVGQlZUdEpRVU5XTEVGQlFWRTdTVUZGV2l4QlFVRmxMRUZCUVZVN1RVRkRia0lzUVVGQlR6dE5RVU5RTEVGQlFWTTdUVUZEVkN4QlFVRlZPMDFCUTFZc1FVRkJTenROUVVOTUxFRkJRVTg3VFVGRFVDeEJRVUZQTzAxQlExQXNRVUZCVVR0RlFVZGtMRUZCUVdVN1NXaENPVVJRTEVGblFpdEVTanRKUVVOQkxFRkJRVms3U1VGRFdpeEJRVUZsTzBsQlEyWXNRVUZCVVR0SmFFSTVSRW9zUVdkQ0swUktPMGxCUTBFc1FVRkJVVHRKUVVOU0xFRkJRVk03U1VGRFZDeEJRVUZYTzBsQlExZ3NRVUZCVVR0SlFVTlNMRUZCUVZVN1NVRkZWaXhCUVVGak8wbEJRMlFzUVVGQlR6dEpRVU5RTEVGQlFXMUNPMGxCUTI1Q0xFRkJRV2xDTzBsQlEycENMRUZCUVZrN08wRkJSMmhDTzBWb1FtNUdVU3hCWjBKdlJrNDdSVUZEUVN4QlFVRlZPMFZCUTFZc1FVRkJUVHM3UVVGSFVpeEJRVUZwUWl4QlFVRlZPMFZCUTNwQ0xFRkJRVk1pTENKbWFXeGxJam9pYzNSNWJHVXVZM056SWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaUx5OGdQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQxY2JpOHZJRTV2Y20xaGJHbDZaUzV6WTNOeklHSmhjMlZrSUc5dUlFNXBZMjlzWVhNZ1IyRnNiR0ZuYUdWeUlHRnVaQ0JLYjI1aGRHaGhiaUJPWldGc0ozTmNiaTh2SUc1dmNtMWhiR2w2WlM1amMzTWdkakl1TVM0eklId2dUVWxVSUV4cFkyVnVjMlVnZkNCbmFYUXVhVzh2Ym05eWJXRnNhWHBsWEc0dkx5QTlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFZ4dVhHNHZMeUE5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBWeHVMeThnVG05eWJXRnNhWHBsTG5OamMzTWdjMlYwZEdsdVozTmNiaTh2SUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlYRzVjYmx4dUx5OGdVMlYwSUhSdklIUnlkV1VnYVdZZ2VXOTFJSGRoYm5RZ2RHOGdZV1JrSUhOMWNIQnZjblFnWm05eUlFbEZOaUJoYm1RZ1NVVTNYRzR2THlCT2IzUnBZMlU2SUhObGRIUnBibWNnZEc4Z2RISjFaU0J0YVdkb2RDQnlaVzVrWlhJZ2MyOXRaU0JsYkdWdFpXNTBjMXh1THk4Z2MyeHBaMmgwYkhrZ1pHbG1abVZ5Wlc1MGJIa2dkR2hoYmlCM2FHVnVJSE5sZENCMGJ5Qm1ZV3h6WlZ4dUpHeGxaMkZqZVY5emRYQndiM0owWDJadmNsOXBaVG9nWm1Gc2MyVWdJV1JsWm1GMWJIUTdJQzh2SUZWelpXUWdZV3h6YnlCcGJpQkRiMjF3WVhOelhHNWNibHh1THk4Z1UyVjBJSFJvWlNCa1pXWmhkV3gwSUdadmJuUWdabUZ0YVd4NUlHaGxjbVVnYzI4Z2VXOTFJR1J2YmlkMElHaGhkbVVnZEc4Z2IzWmxjbkpwWkdVZ2FYUWdiR0YwWlhKY2JpUnViM0p0WVd4cGVtVmtYMlp2Ym5SZlptRnRhV3g1T2lCellXNXpMWE5sY21sbUlDRmtaV1poZFd4ME8xeHVYRzRrYm05eWJXRnNhWHBsWDJobFlXUnBibWR6T2lCMGNuVmxJQ0ZrWldaaGRXeDBPMXh1WEc0a2FERmZabTl1ZEY5emFYcGxPaUF5WlcwZ0lXUmxabUYxYkhRN1hHNGthREpmWm05dWRGOXphWHBsT2lBeExqVmxiU0FoWkdWbVlYVnNkRHRjYmlSb00xOW1iMjUwWDNOcGVtVTZJREV1TVRkbGJTQWhaR1ZtWVhWc2REdGNiaVJvTkY5bWIyNTBYM05wZW1VNklERmxiU0FoWkdWbVlYVnNkRHRjYmlSb05WOW1iMjUwWDNOcGVtVTZJREF1T0RObGJTQWhaR1ZtWVhWc2REdGNiaVJvTmw5bWIyNTBYM05wZW1VNklEQXVOelZsYlNBaFpHVm1ZWFZzZER0Y2JseHVKR2d4WDIxaGNtZHBiam9nTUM0Mk4yVnRJREFnSVdSbFptRjFiSFE3WEc0a2FESmZiV0Z5WjJsdU9pQXdMamd6WlcwZ01DQWhaR1ZtWVhWc2REdGNiaVJvTTE5dFlYSm5hVzQ2SURGbGJTQXdJQ0ZrWldaaGRXeDBPMXh1SkdnMFgyMWhjbWRwYmpvZ01TNHpNMlZ0SURBZ0lXUmxabUYxYkhRN1hHNGthRFZmYldGeVoybHVPaUF4TGpZM1pXMGdNQ0FoWkdWbVlYVnNkRHRjYmlSb05sOXRZWEpuYVc0NklESXVNek5sYlNBd0lDRmtaV1poZFd4ME8xeHVYRzRrWW1GamEyZHliM1Z1WkRvZ0kyWm1aaUFoWkdWbVlYVnNkRHRjYmlSamIyeHZjam9nSXpBd01DQWhaR1ZtWVhWc2REdGNibHh1THk4Z1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDFjYmk4dklFaFVUVXcxSUdScGMzQnNZWGtnWkdWbWFXNXBkR2x2Ym5OY2JpOHZJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVhHNWNiaTh2SUVOdmNuSmxZM1J6SUdKc2IyTnJJR1JwYzNCc1lYa2dibTkwSUdSbFptbHVaV1FnYVc0Z1NVVTJMemN2T0M4NUlDWWdSa1l6WEc1Y2JtRnlkR2xqYkdVc1hHNWhjMmxrWlN4Y2JtUmxkR0ZwYkhNc1hHNW1hV2RqWVhCMGFXOXVMRnh1Wm1sbmRYSmxMRnh1Wm05dmRHVnlMRnh1YUdWaFpHVnlMRnh1YUdkeWIzVndMRnh1Ym1GMkxGeHVjMlZqZEdsdmJpeGNibk4xYlcxaGNua2dlMXh1SUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4dWZWeHVYRzR2THlCRGIzSnlaV04wY3lCcGJteHBibVV0WW14dlkyc2daR2x6Y0d4aGVTQnViM1FnWkdWbWFXNWxaQ0JwYmlCSlJUWXZOeTg0THprZ0ppQkdSak5jYmx4dVlYVmthVzhzWEc1allXNTJZWE1zWEc1MmFXUmxieUI3WEc0Z0lDQWdaR2x6Y0d4aGVUb2dhVzVzYVc1bExXSnNiMk5yTzF4dUlDQWdJRUJwWmlBa2JHVm5ZV041WDNOMWNIQnZjblJmWm05eVgybGxJSHRjYmlBZ0lDQWdJQ0FnS21ScGMzQnNZWGs2SUdsdWJHbHVaVHRjYmlBZ0lDQWdJQ0FnS25wdmIyMDZJREU3WEc0Z0lDQWdmVnh1ZlZ4dVhHNHZMeUF4TGlCUWNtVjJaVzUwY3lCdGIyUmxjbTRnWW5KdmQzTmxjbk1nWm5KdmJTQmthWE53YkdGNWFXNW5JQ2RoZFdScGJ5Y2dkMmwwYUc5MWRDQmpiMjUwY205c2MxeHVMeThnTWk0Z1VtVnRiM1psSUdWNFkyVnpjeUJvWldsbmFIUWdhVzRnYVU5VE5TQmtaWFpwWTJWelhHNWNibUYxWkdsdk9tNXZkQ2hiWTI5dWRISnZiSE5kS1NCN1hHNGdJQ0FnWkdsemNHeGhlVG9nYm05dVpUc2dMeThnTVZ4dUlDQWdJR2hsYVdkb2REb2dNRHNnTHk4Z01seHVmVnh1WEc0dkwxeHVMeThnUVdSa2NtVnpjeUJnVzJocFpHUmxibDFnSUhOMGVXeHBibWNnYm05MElIQnlaWE5sYm5RZ2FXNGdTVVVnT0M4NUxseHVMeThnU0dsa1pTQjBhR1VnWUhSbGJYQnNZWFJsWUNCbGJHVnRaVzUwSUdsdUlFbEZMQ0JUWVdaaGNta3NJR0Z1WkNCR2FYSmxabTk0SUR3Z01qSXVYRzR2TDF4dVhHNWJhR2xrWkdWdVhTd2dkR1Z0Y0d4aGRHVWdlMXh1SUNBZ0lHUnBjM0JzWVhrNklHNXZibVU3WEc1OVhHNWNiaTh2SUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlYRzR2THlCQ1lYTmxYRzR2THlBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVnh1WEc0dkx5QXhMaUJEYjNKeVpXTjBjeUIwWlhoMElISmxjMmw2YVc1bklHOWtaR3g1SUdsdUlFbEZOaTgzSUhkb1pXNGdZbTlrZVNCbWIyNTBMWE5wZW1VZ2FYTWdjMlYwSUhWemFXNW5JR1Z0SUhWdWFYUnpYRzR2THlBZ0lDQm9kSFJ3T2k4dlkyeGhaMjUxZEM1amIyMHZZbXh2Wnk4ek5EZ3ZJMk0zT1RCY2JpOHZJREl1SUZCeVpYWmxiblJ6SUdsUFV5QjBaWGgwSUhOcGVtVWdZV1JxZFhOMElHRm1kR1Z5SUc5eWFXVnVkR0YwYVc5dUlHTm9ZVzVuWlN3Z2QybDBhRzkxZENCa2FYTmhZbXhwYm1jZ2RYTmxjaUI2YjI5dFhHNHZMeUFnSUNCM2QzY3VORFUyWW1WeVpXRnpkSEpsWlhRdVkyOXRMMkZ5WTJocGRtVXZNakF4TURFeUwyTnZiblJ5YjJ4c2FXNW5YM1JsZUhSZmMybDZaVjlwYmw5ellXWmhjbWxmWm05eVgybHZjMTkzYVhSb2IzVjBYMlJwYzJGaWJHbHVaMTkxYzJWeVgzcHZiMjB2WEc1Y2JtaDBiV3dnZTF4dUlDQWdJRUJwWmlBa2JHVm5ZV041WDNOMWNIQnZjblJmWm05eVgybGxJSHRjYmlBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lBeE1EQWxPeUF2THlBeFhHNGdJQ0FnZlZ4dVhIUmNkQzh2WW1GamEyZHliM1Z1WkRvZ0pHSmhZMnRuY205MWJtUTdYRzVjZEZ4MEx5OWpiMnh2Y2pvZ0pHTnZiRzl5TzF4dUlDQWdJQzEzWldKcmFYUXRkR1Y0ZEMxemFYcGxMV0ZrYW5WemREb2dNVEF3SlRzZ0x5OGdNbHh1SUNBZ0lDMXRjeTEwWlhoMExYTnBlbVV0WVdScWRYTjBPaUF4TURBbE95QXZMeUF5WEc1OVhHNWNiaTh2SUVGa1pISmxjM05sY3lCbWIyNTBMV1poYldsc2VTQnBibU52Ym5OcGMzUmxibU41SUdKbGRIZGxaVzRnSjNSbGVIUmhjbVZoSnlCaGJtUWdiM1JvWlhJZ1ptOXliU0JsYkdWdFpXNTBjeTVjYmx4dWFIUnRiQ3hjYm1KMWRIUnZiaXhjYm1sdWNIVjBMRnh1YzJWc1pXTjBMRnh1ZEdWNGRHRnlaV0VnZTF4dUlDQWdJQzh2Wm05dWRDMW1ZVzFwYkhrNklDUnViM0p0WVd4cGVtVmtYMlp2Ym5SZlptRnRhV3g1TzF4dWZWeHVYRzR2THlCQlpHUnlaWE56WlhNZ2JXRnlaMmx1Y3lCb1lXNWtiR1ZrSUdsdVkyOXljbVZqZEd4NUlHbHVJRWxGTmk4M1hHNWNibUp2WkhrZ2UxeHVJQ0FnSUcxaGNtZHBiam9nTUR0Y2JuMWNibHh1THk4Z1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDFjYmk4dklFeHBibXR6WEc0dkx5QTlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFZ4dVhHNHZMeUF4TGlCU1pXMXZkbVVnZEdobElHZHlZWGtnWW1GamEyZHliM1Z1WkNCamIyeHZjaUJtY205dElHRmpkR2wyWlNCc2FXNXJjeUJwYmlCSlJTQXhNQzVjYmk4dklESXVJRUZrWkhKbGMzTmxjeUJ2ZFhSc2FXNWxJR1JwYzNCc1lYbGxaQ0J2WkdSc2VTQnBiaUJEYUhKdmJXVmNiaTh2SURNdUlFbHRjSEp2ZG1WeklISmxZV1JoWW1sc2FYUjVJSGRvWlc0Z1ptOWpkWE5sWkNCaGJtUWdZV3h6YnlCdGIzVnpaU0JvYjNabGNtVmtJR2x1SUdGc2JDQmljbTkzYzJWeWMxeHVMeThnSUNBZ2NHVnZjR3hsTG05d1pYSmhMbU52YlM5d1lYUnlhV05yYkM5bGVIQmxjbWx0Wlc1MGN5OXJaWGxpYjJGeVpDOTBaWE4wWEc1Y2JtRWdlMXh1SUNBZ0lDOHZJREZjYmx4dUlDQWdJR0poWTJ0bmNtOTFibVE2SUhSeVlXNXpjR0Z5Wlc1ME8xeHVYRzRnSUNBZ0x5OGdNbHh1WEc0Z0lDQWdKanBtYjJOMWN5QjdYRzRnSUNBZ0lDQWdJQzh2YjNWMGJHbHVaVG9nZEdocGJpQmtiM1IwWldRN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnTHk4Z00xeHVYRzRnSUNBZ0pqcG9iM1psY2l4Y2JpQWdJQ0FtT21GamRHbDJaU0I3WEc0Z0lDQWdJQ0FnSUc5MWRHeHBibVU2SURBN1hHNGdJQ0FnZlZ4dWZWeHVYRzR2THlBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVnh1THk4Z1ZIbHdiMmR5WVhCb2VWeHVMeThnUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMWNibHh1THk4Z1FXUmtjbVZ6YzJWeklHWnZiblFnYzJsNlpYTWdZVzVrSUcxaGNtZHBibk1nYzJWMElHUnBabVpsY21WdWRHeDVJR2x1SUVsRk5pODNYRzR2THlCQlpHUnlaWE56WlhNZ1ptOXVkQ0J6YVhwbGN5QjNhWFJvYVc0Z0ozTmxZM1JwYjI0bklHRnVaQ0FuWVhKMGFXTnNaU2NnYVc0Z1JrWTBLeXdnUTJoeWIyMWxMQ0JUTlZ4dVhHNHZLaUJBYVdZZ1hGd2tibTl5YldGc2FYcGxYMmhsWVdScGJtZHpJRDA5SUhSeWRXVWdlMXh1SUNBZ0lHZ3hJSHRjYmlBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lCY1hDUm9NVjltYjI1MFgzTnBlbVU3WEc0Z0lDQWdJQ0FnSUcxaGNtZHBiam9nWEZ3a2FERmZiV0Z5WjJsdU8xeHVJQ0FnSUgxY2JseHVJQ0FnSUdneUlIdGNiaUFnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUJjWENSb01sOW1iMjUwWDNOcGVtVTdYRzRnSUNBZ0lDQWdJRzFoY21kcGJqb2dYRndrYURKZmJXRnlaMmx1TzF4dUlDQWdJSDFjYmx4dUlDQWdJR2d6SUh0Y2JpQWdJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQmNYQ1JvTTE5bWIyNTBYM05wZW1VN1hHNGdJQ0FnSUNBZ0lHMWhjbWRwYmpvZ1hGd2thRE5mYldGeVoybHVPMXh1SUNBZ0lIMWNibHh1SUNBZ0lHZzBJSHRjYmlBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lCY1hDUm9ORjltYjI1MFgzTnBlbVU3WEc0Z0lDQWdJQ0FnSUcxaGNtZHBiam9nWEZ3a2FEUmZiV0Z5WjJsdU8xeHVJQ0FnSUgxY2JseHVJQ0FnSUdnMUlIdGNiaUFnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUJjWENSb05WOW1iMjUwWDNOcGVtVTdYRzRnSUNBZ0lDQWdJRzFoY21kcGJqb2dYRndrYURWZmJXRnlaMmx1TzF4dUlDQWdJSDFjYmx4dUlDQWdJR2cySUh0Y2JpQWdJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQmNYQ1JvTmw5bWIyNTBYM05wZW1VN1hHNGdJQ0FnSUNBZ0lHMWhjbWRwYmpvZ1hGd2thRFpmYldGeVoybHVPMXh1SUNBZ0lIMWNibjBnS2k5Y2JseHVMeThnUVdSa2NtVnpjMlZ6SUhOMGVXeHBibWNnYm05MElIQnlaWE5sYm5RZ2FXNGdTVVVnT0M4NUxDQlROU3dnUTJoeWIyMWxYRzVjYm1GaVluSmJkR2wwYkdWZElIdGNiaUFnSUNCaWIzSmtaWEl0WW05MGRHOXRPaUF4Y0hnZ1pHOTBkR1ZrTzF4dWZWeHVYRzR2THlCQlpHUnlaWE56WlhNZ2MzUjViR1VnYzJWMElIUnZJQ2RpYjJ4a1pYSW5JR2x1SUVaR015c3NJRk0wTHpVc0lFTm9jbTl0WlZ4dVhHNWlMRnh1YzNSeWIyNW5JSHRjYmlBZ0lDQm1iMjUwTFhkbGFXZG9kRG9nWW05c1pEdGNibjFjYmx4dVFHbG1JQ1JzWldkaFkzbGZjM1Z3Y0c5eWRGOW1iM0pmYVdVZ2UxeHVJQ0FnSUdKc2IyTnJjWFZ2ZEdVZ2UxeHVJQ0FnSUNBZ0lDQnRZWEpuYVc0NklERmxiU0EwTUhCNE8xeHVJQ0FnSUgxY2JuMWNibHh1THk4Z1FXUmtjbVZ6YzJWeklITjBlV3hwYm1jZ2JtOTBJSEJ5WlhObGJuUWdhVzRnVXpVc0lFTm9jbTl0WlZ4dVhHNWtabTRnZTF4dUlDQWdJR1p2Ym5RdGMzUjViR1U2SUdsMFlXeHBZenRjYm4xY2JseHVMeThnUVdSa2NtVnpjMlZ6SUhOMGVXeHBibWNnYm05MElIQnlaWE5sYm5RZ2FXNGdTVVUyTHpjdk9DODVYRzVjYm0xaGNtc2dlMXh1SUNBZ0lHSmhZMnRuY205MWJtUTZJQ05tWmpBN1hHNGdJQ0FnWTI5c2IzSTZJQ013TURBN1hHNTlYRzVjYmk4dklFRmtaSEpsYzNObGN5QnRZWEpuYVc1eklITmxkQ0JrYVdabVpYSmxiblJzZVNCcGJpQkpSVFl2TjF4dVFHbG1JQ1JzWldkaFkzbGZjM1Z3Y0c5eWRGOW1iM0pmYVdVZ2UxeHVJQ0FnSUhBc1hHNGdJQ0FnY0hKbElIdGNiaUFnSUNBZ0lDQWdiV0Z5WjJsdU9pQXhaVzBnTUR0Y2JpQWdJQ0I5WEc1OVhHNWNiaTh2SUVOdmNuSmxZM1J6SUdadmJuUWdabUZ0YVd4NUlITmxkQ0J2WkdSc2VTQnBiaUJKUlRZc0lGTTBMelVzSUVOb2NtOXRaVnh1THk4Z1pXNHVkMmxyYVhCbFpHbGhMbTl5Wnk5M2FXdHBMMVZ6WlhJNlJHRjJhV1JuYjNSb1ltVnlaeTlVWlhOME5UbGNibHh1WTI5a1pTeGNibXRpWkN4Y2JuQnlaU3hjYm5OaGJYQWdlMXh1SUNBZ0lHWnZiblF0Wm1GdGFXeDVPaUJ0YjI1dmMzQmhZMlVzSUhObGNtbG1PMXh1SUNBZ0lFQnBaaUFrYkdWbllXTjVYM04xY0hCdmNuUmZabTl5WDJsbElIdGNiaUFnSUNBZ0lDQWdYMlp2Ym5RdFptRnRhV3g1T2lBblkyOTFjbWxsY2lCdVpYY25MQ0J0YjI1dmMzQmhZMlU3WEc0Z0lDQWdmVnh1SUNBZ0lHWnZiblF0YzJsNlpUb2dNV1Z0TzF4dWZWeHVYRzR2THlCSmJYQnliM1psY3lCeVpXRmtZV0pwYkdsMGVTQnZaaUJ3Y21VdFptOXliV0YwZEdWa0lIUmxlSFFnYVc0Z1lXeHNJR0p5YjNkelpYSnpYRzVjYm5CeVpTQjdYRzRnSUNBZ2QyaHBkR1V0YzNCaFkyVTZJSEJ5WlR0Y2JpQWdJQ0IzYUdsMFpTMXpjR0ZqWlRvZ2NISmxMWGR5WVhBN1hHNGdJQ0FnZDI5eVpDMTNjbUZ3T2lCaWNtVmhheTEzYjNKa08xeHVmVnh1WEc0dkx5QlRaWFFnWTI5dWMybHpkR1Z1ZENCeGRXOTBaU0IwZVhCbGN5NWNibHh1Y1NCN1hHNGdJQ0FnY1hWdmRHVnpPaUJjSWx4Y01qQXhRMXdpSUZ3aVhGd3lNREZFWENJZ1hDSmNYREl3TVRoY0lpQmNJbHhjTWpBeE9Wd2lPMXh1ZlZ4dVhHNHZMeUF4TGlCQlpHUnlaWE56WlhNZ1ExTlRJSEYxYjNSbGN5QnViM1FnYzNWd2NHOXlkR1ZrSUdsdUlFbEZOaTgzWEc0dkx5QXlMaUJCWkdSeVpYTnpaWE1nY1hWdmRHVWdjSEp2Y0dWeWRIa2dibTkwSUhOMWNIQnZjblJsWkNCcGJpQlRORnh1WEc0dkx5QXhYRzVBYVdZZ0pHeGxaMkZqZVY5emRYQndiM0owWDJadmNsOXBaU0I3WEc0Z0lDQWdjU0I3WEc0Z0lDQWdJQ0FnSUhGMWIzUmxjem9nYm05dVpUdGNiaUFnSUNCOVhHNTlYRzVjYmk4dklESmNibkVnZTF4dUlDQWdJQ1k2WW1WbWIzSmxMRnh1SUNBZ0lDWTZZV1owWlhJZ2UxeHVJQ0FnSUNBZ0lDQmpiMjUwWlc1ME9pQW5KenRjYmlBZ0lDQWdJQ0FnWTI5dWRHVnVkRG9nYm05dVpUdGNiaUFnSUNCOVhHNTlYRzVjYmk4dklFRmtaSEpsYzNNZ2FXNWpiMjV6YVhOMFpXNTBJR0Z1WkNCMllYSnBZV0pzWlNCbWIyNTBJSE5wZW1VZ2FXNGdZV3hzSUdKeWIzZHpaWEp6TGx4dVhHNHZLaUF2YzIxaGJHd2dlMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dPREFsTzF4dWZTQXFMMXh1WEc0dkx5QlFjbVYyWlc1MGN5QnpkV0lnWVc1a0lITjFjQ0JoWm1abFkzUnBibWNnYkdsdVpTMW9aV2xuYUhRZ2FXNGdZV3hzSUdKeWIzZHpaWEp6WEc0dkx5Qm5hWE4wTG1kcGRHaDFZaTVqYjIwdk5ERXpPVE13WEc1Y2JuTjFZaXhjYm5OMWNDQjdYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQTNOU1U3WEc0Z0lDQWdiR2x1WlMxb1pXbG5hSFE2SURBN1hHNGdJQ0FnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4dUlDQWdJSFpsY25ScFkyRnNMV0ZzYVdkdU9pQmlZWE5sYkdsdVpUdGNibjFjYmx4dWMzVndJSHRjYmlBZ0lDQjBiM0E2SUMwd0xqVmxiVHRjYm4xY2JseHVjM1ZpSUh0Y2JpQWdJQ0JpYjNSMGIyMDZJQzB3TGpJMVpXMDdYRzU5WEc1Y2JpOHZJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVhHNHZMeUJNYVhOMGMxeHVMeThnUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMWNibHh1THk4Z1FXUmtjbVZ6YzJWeklHMWhjbWRwYm5NZ2MyVjBJR1JwWm1abGNtVnVkR3g1SUdsdUlFbEZOaTgzWEc1QWFXWWdKR3hsWjJGamVWOXpkWEJ3YjNKMFgyWnZjbDlwWlNCN1hHNGdJQ0FnWkd3c1hHNGdJQ0FnYldWdWRTeGNiaUFnSUNCdmJDeGNiaUFnSUNCMWJDQjdYRzRnSUNBZ0lDQWdJQzh2YldGeVoybHVPaUF4WlcwZ01EdGNiaUFnSUNCOVhHNTlYRzVjYmtCcFppQWtiR1ZuWVdONVgzTjFjSEJ2Y25SZlptOXlYMmxsSUh0Y2JpQWdJQ0JrWkNCN1hHNGdJQ0FnSUNBZ0lHMWhjbWRwYmpvZ01DQXdJREFnTkRCd2VEdGNiaUFnSUNCOVhHNTlYRzVjYmk4dklFRmtaSEpsYzNObGN5QndZV1JrYVc1bmN5QnpaWFFnWkdsbVptVnlaVzUwYkhrZ2FXNGdTVVUyTHpkY2JrQnBaaUFrYkdWbllXTjVYM04xY0hCdmNuUmZabTl5WDJsbElIdGNiaUFnSUNCdFpXNTFMRnh1SUNBZ0lHOXNMRnh1SUNBZ0lIVnNJSHRjYmlBZ0lDQWdJQ0FnTHk5d1lXUmthVzVuT2lBd0lEQWdNQ0EwTUhCNE8xeHVJQ0FnSUgxY2JuMWNibHh1THk4Z1EyOXljbVZqZEhNZ2JHbHpkQ0JwYldGblpYTWdhR0Z1Wkd4bFpDQnBibU52Y25KbFkzUnNlU0JwYmlCSlJUZGNibHh1Ym1GMklIdGNiaUFnSUNCMWJDeGNiaUFnSUNCdmJDQjdYRzRnSUNBZ0lDQWdJRUJwWmlBa2JHVm5ZV041WDNOMWNIQnZjblJmWm05eVgybGxJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDOHZiR2x6ZEMxemRIbHNaUzFwYldGblpUb2dibTl1WlR0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JuMWNibHh1THk4Z1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDFjYmk4dklFVnRZbVZrWkdWa0lHTnZiblJsYm5SY2JpOHZJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVhHNWNiaTh2SURFdUlGSmxiVzkyWlhNZ1ltOXlaR1Z5SUhkb1pXNGdhVzV6YVdSbElDZGhKeUJsYkdWdFpXNTBJR2x1SUVsRk5pODNMemd2T1N3Z1JrWXpYRzR2THlBeUxpQkpiWEJ5YjNabGN5QnBiV0ZuWlNCeGRXRnNhWFI1SUhkb1pXNGdjMk5oYkdWa0lHbHVJRWxGTjF4dUx5OGdJQ0FnWTI5a1pTNW1iR2xqYTNJdVkyOXRMMkpzYjJjdk1qQXdPQzh4TVM4eE1pOXZiaTExYVMxeGRXRnNhWFI1TFhSb1pTMXNhWFIwYkdVdGRHaHBibWR6TFdOc2FXVnVkQzF6YVdSbExXbHRZV2RsTFhKbGMybDZhVzVuTDF4dVhHNXBiV2NnZTF4dUlDQWdJR0p2Y21SbGNqb2dNRHNnTHk4Z01WeHVJQ0FnSUVCcFppQWtiR1ZuWVdONVgzTjFjSEJ2Y25SZlptOXlYMmxsSUh0Y2JpQWdJQ0FnSUNBZ0xXMXpMV2x1ZEdWeWNHOXNZWFJwYjI0dGJXOWtaVG9nWW1samRXSnBZenNnTHk4Z01seHVJQ0FnSUgxY2JuMWNibHh1THk4Z1EyOXljbVZqZEhNZ2IzWmxjbVpzYjNjZ1pHbHpjR3hoZVdWa0lHOWtaR3g1SUdsdUlFbEZPVnh1WEc1emRtYzZibTkwS0RweWIyOTBLU0I3WEc0Z0lDQWdiM1psY21ac2IzYzZJR2hwWkdSbGJqdGNibjFjYmx4dUx5OGdQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQxY2JpOHZJRVpwWjNWeVpYTmNiaTh2SUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlYRzVjYmk4dklFRmtaSEpsYzNObGN5QnRZWEpuYVc0Z2JtOTBJSEJ5WlhObGJuUWdhVzRnU1VVMkx6Y3ZPQzg1TENCVE5Td2dUekV4WEc1Y2JtWnBaM1Z5WlNCN1hHNGdJQ0FnYldGeVoybHVPaUF3TzF4dWZWeHVYRzR2THlBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVnh1THk4Z1JtOXliWE5jYmk4dklEMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5WEc1Y2JpOHZJRU52Y25KbFkzUnpJRzFoY21kcGJpQmthWE53YkdGNVpXUWdiMlJrYkhrZ2FXNGdTVVUyTHpkY2JrQnBaaUFrYkdWbllXTjVYM04xY0hCdmNuUmZabTl5WDJsbElIdGNiaUFnSUNCbWIzSnRJSHRjYmlBZ0lDQWdJQ0FnYldGeVoybHVPaUF3TzF4dUlDQWdJSDFjYm4xY2JseHVMeThnUkdWbWFXNWxJR052Ym5OcGMzUmxiblFnWW05eVpHVnlMQ0J0WVhKbmFXNHNJR0Z1WkNCd1lXUmthVzVuWEc1Y2JtWnBaV3hrYzJWMElIdGNiaUFnSUNCaWIzSmtaWEk2SURGd2VDQnpiMnhwWkNBall6QmpNR013TzF4dUlDQWdJRzFoY21kcGJqb2dNQ0F5Y0hnN1hHNGdJQ0FnY0dGa1pHbHVaem9nTUM0ek5XVnRJREF1TmpJMVpXMGdNQzQzTldWdE8xeHVmVnh1WEc0dkx5QXhMaUJEYjNKeVpXTjBjeUJqYjJ4dmNpQnViM1FnWW1WcGJtY2dhVzVvWlhKcGRHVmtJR2x1SUVsRk5pODNMemd2T1Z4dUx5OGdNaTRnVW1WdGIzWmxJSEJoWkdScGJtY2djMjhnY0dWdmNHeGxJR0Z5Wlc0bmRDQmpZWFZuYUhRZ2IzVjBJR2xtSUhSb1pYa2dlbVZ5YnlCdmRYUWdabWxsYkdSelpYUnpMbHh1THk4Z015NGdRMjl5Y21WamRITWdkR1Y0ZENCdWIzUWdkM0poY0hCcGJtY2dhVzRnUmtZelhHNHZMeUEwTGlCRGIzSnlaV04wY3lCaGJHbG5ibTFsYm5RZ1pHbHpjR3hoZVdWa0lHOWtaR3g1SUdsdUlFbEZOaTgzWEc1Y2JteGxaMlZ1WkNCN1hHNGdJQ0FnWW05eVpHVnlPaUF3T3lBdkx5QXhYRzRnSUNBZ2NHRmtaR2x1WnpvZ01Ec2dMeThnTWx4dUlDQWdJSGRvYVhSbExYTndZV05sT2lCdWIzSnRZV3c3SUM4dklETmNiaUFnSUNCQWFXWWdKR3hsWjJGamVWOXpkWEJ3YjNKMFgyWnZjbDlwWlNCN1hHNGdJQ0FnSUNBZ0lDcHRZWEpuYVc0dGJHVm1kRG9nTFRkd2VEc2dMeThnTkZ4dUlDQWdJSDFjYm4xY2JseHVMeThnTVM0Z1EyOXljbVZqZENCbWIyNTBJR1poYldsc2VTQnViM1FnWW1WcGJtY2dhVzVvWlhKcGRHVmtJR2x1SUdGc2JDQmljbTkzYzJWeWN5NWNiaTh2SURJdUlFTnZjbkpsWTNSeklHWnZiblFnYzJsNlpTQnViM1FnWW1WcGJtY2dhVzVvWlhKcGRHVmtJR2x1SUdGc2JDQmljbTkzYzJWeWMxeHVMeThnTXk0Z1FXUmtjbVZ6YzJWeklHMWhjbWRwYm5NZ2MyVjBJR1JwWm1abGNtVnVkR3g1SUdsdUlFbEZOaTgzTENCR1JqTXJMQ0JUTlN3Z1EyaHliMjFsWEc0dkx5QTBMaUJKYlhCeWIzWmxjeUJoY0hCbFlYSmhibU5sSUdGdVpDQmpiMjV6YVhOMFpXNWplU0JwYmlCaGJHd2dZbkp2ZDNObGNuTmNibHh1WW5WMGRHOXVMRnh1YVc1d2RYUXNYRzV6Wld4bFkzUXNYRzUwWlhoMFlYSmxZU0I3WEc0Z0lDQWdabTl1ZEMxbVlXMXBiSGs2SUdsdWFHVnlhWFE3SUM4dklERmNiaUFnSUNCbWIyNTBMWE5wZW1VNklERXdNQ1U3SUM4dklESmNiaUFnSUNCdFlYSm5hVzQ2SURBN0lDOHZJRE5jYmlBZ0lDQjJaWEowYVdOaGJDMWhiR2xuYmpvZ1ltRnpaV3hwYm1VN0lDOHZJRFJjYmlBZ0lDQkFhV1lnSkd4bFoyRmplVjl6ZFhCd2IzSjBYMlp2Y2w5cFpTQjdYRzRnSUNBZ0lDQWdJQ3AyWlhKMGFXTmhiQzFoYkdsbmJqb2diV2xrWkd4bE95QXZMeUEwWEc0Z0lDQWdmVnh1ZlZ4dVhHNHZMeUJCWkdSeVpYTnpaWE1nUmtZekx6UWdjMlYwZEdsdVp5QnNhVzVsTFdobGFXZG9kQ0J2YmlBbmFXNXdkWFFuSUhWemFXNW5JQ0ZwYlhCdmNuUmhiblFnYVc0Z2RHaGxJRlZCSUhOMGVXeGxjMmhsWlhSY2JseHVZblYwZEc5dUxDQnBibkIxZENCN1hHNGdJQ0FnYkdsdVpTMW9aV2xuYUhRNklHNXZjbTFoYkR0Y2JuMWNibHh1THk4Z1FXUmtjbVZ6Y3lCcGJtTnZibk5wYzNSbGJuUWdZSFJsZUhRdGRISmhibk5tYjNKdFlDQnBibWhsY21sMFlXNWpaU0JtYjNJZ1lHSjFkSFJ2Ym1BZ1lXNWtJR0J6Wld4bFkzUmdMbHh1THk4Z1FXeHNJRzkwYUdWeUlHWnZjbTBnWTI5dWRISnZiQ0JsYkdWdFpXNTBjeUJrYnlCdWIzUWdhVzVvWlhKcGRDQmdkR1Y0ZEMxMGNtRnVjMlp2Y20xZ0lIWmhiSFZsY3k1Y2JpOHZJRU52Y25KbFkzUWdZR0oxZEhSdmJtQWdjM1I1YkdVZ2FXNW9aWEpwZEdGdVkyVWdhVzRnUTJoeWIyMWxMQ0JUWVdaaGNta2dOU3NzSUdGdVpDQkpSU0E0S3k1Y2JpOHZJRU52Y25KbFkzUWdZSE5sYkdWamRHQWdjM1I1YkdVZ2FXNW9aWEpwZEdGdVkyVWdhVzRnUm1seVpXWnZlQ0EwS3lCaGJtUWdUM0JsY21FdVhHNWNibUoxZEhSdmJpeGNibk5sYkdWamRDQjdYRzRnSUNBZ2RHVjRkQzEwY21GdWMyWnZjbTA2SUc1dmJtVTdYRzU5WEc1Y2JpOHZJREV1SUVGMmIybGtJSFJvWlNCWFpXSkxhWFFnWW5WbklHbHVJRUZ1WkhKdmFXUWdOQzR3TGlvZ2QyaGxjbVVnS0RJcElHUmxjM1J5YjNseklHNWhkR2wyWlNCZ1lYVmthVzlnWEc0dkx5QWdJQ0JoYm1RZ1lIWnBaR1Z2WUNCamIyNTBjbTlzYzF4dUx5OGdNaTRnUTI5eWNtVmpkSE1nYVc1aFltbHNhWFI1SUhSdklITjBlV3hsSUdOc2FXTnJZV0pzWlNBbmFXNXdkWFFuSUhSNWNHVnpJR2x1SUdsUFUxeHVMeThnTXk0Z1NXMXdjbTkyWlhNZ2RYTmhZbWxzYVhSNUlHRnVaQ0JqYjI1emFYTjBaVzVqZVNCdlppQmpkWEp6YjNJZ2MzUjViR1VnWW1WMGQyVmxiaUJwYldGblpTMTBlWEJsWEc0dkx5QWdJQ0FuYVc1d2RYUW5JR0Z1WkNCdmRHaGxjbk5jYmk4dklEUXVJRkpsYlc5MlpYTWdhVzV1WlhJZ2MzQmhZMmx1WnlCcGJpQkpSVGNnZDJsMGFHOTFkQ0JoWm1abFkzUnBibWNnYm05eWJXRnNJSFJsZUhRZ2FXNXdkWFJ6WEc0dkx5QWdJQ0JMYm05M2JpQnBjM04xWlRvZ2FXNXVaWElnYzNCaFkybHVaeUJ5WlcxaGFXNXpJR2x1SUVsRk5seHVYRzVpZFhSMGIyNHNYRzVvZEcxc0lHbHVjSFYwVzNSNWNHVTlYQ0ppZFhSMGIyNWNJbDBzSUM4dklERmNibWx1Y0hWMFczUjVjR1U5WENKeVpYTmxkRndpWFN4Y2JtbHVjSFYwVzNSNWNHVTlYQ0p6ZFdKdGFYUmNJbDBnZTF4dUlDQWdJQzEzWldKcmFYUXRZWEJ3WldGeVlXNWpaVG9nWW5WMGRHOXVPeUF2THlBeVhHNGdJQ0FnWTNWeWMyOXlPaUJ3YjJsdWRHVnlPeUF2THlBelhHNGdJQ0FnUUdsbUlDUnNaV2RoWTNsZmMzVndjRzl5ZEY5bWIzSmZhV1VnZTF4dUlDQWdJQ0FnSUNBcWIzWmxjbVpzYjNjNklIWnBjMmxpYkdVN0lDQXZMeUEwWEc0Z0lDQWdmVnh1ZlZ4dVhHNHZMeUJTWlMxelpYUWdaR1ZtWVhWc2RDQmpkWEp6YjNJZ1ptOXlJR1JwYzJGaWJHVmtJR1ZzWlcxbGJuUnpYRzVjYm1KMWRIUnZibHRrYVhOaFlteGxaRjBzWEc1cGJuQjFkRnRrYVhOaFlteGxaRjBnZTF4dUlDQWdJR04xY25OdmNqb2daR1ZtWVhWc2REdGNibjFjYmx4dUx5OGdVbVZ0YjNabGN5QnBibTVsY2lCd1lXUmthVzVuSUdGdVpDQmliM0prWlhJZ2FXNGdSa1l6SzF4dUx5OGdkM2QzTG5OcGRHVndaVzR1WTI5dEwySnNiMmN2TWpBd09DOHdOUzh4TkM5MGFHVXRaR1YyYVd4ekxXbHVMWFJvWlMxa1pYUmhhV3h6TFdacGVHbHVaeTFrYjJwdmN5MTBiMjlzWW1GeUxXSjFkSFJ2Ym5NdlhHNWNibUoxZEhSdmJpd2dhVzV3ZFhRZ2UxeHVJQ0FnSUNZNk9pMXRiM290Wm05amRYTXRhVzV1WlhJZ2UxeHVJQ0FnSUNBZ0lDQmliM0prWlhJNklEQTdYRzRnSUNBZ0lDQWdJSEJoWkdScGJtYzZJREE3WEc0Z0lDQWdmVnh1ZlZ4dVhHNHZMeUF4TGlCU1pXMXZkbVZ6SUdSbFptRjFiSFFnZG1WeWRHbGpZV3dnYzJOeWIyeHNZbUZ5SUdsdUlFbEZOaTgzTHpndk9WeHVMeThnTWk0Z1NXMXdjbTkyWlhNZ2NtVmhaR0ZpYVd4cGRIa2dZVzVrSUdGc2FXZHViV1Z1ZENCcGJpQmhiR3dnWW5KdmQzTmxjbk5jYmx4dWRHVjRkR0Z5WldFZ2UxeHVJQ0FnSUc5MlpYSm1iRzkzT2lCaGRYUnZPeUF2THlBeFhHNGdJQ0FnZG1WeWRHbGpZV3d0WVd4cFoyNDZJSFJ2Y0RzZ0x5OGdNbHh1ZlZ4dVhHNHZMeUE5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBWeHVMeThnVkdGaWJHVnpYRzR2THlBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVnh1WEc0dkx5QlNaVzF2ZG1VZ2JXOXpkQ0J6Y0dGamFXNW5JR0psZEhkbFpXNGdkR0ZpYkdVZ1kyVnNiSE5jYmx4dWRHRmliR1VnZTF4dUlDQWdJR0p2Y21SbGNpMWpiMnhzWVhCelpUb2dZMjlzYkdGd2MyVTdYRzRnSUNBZ1ltOXlaR1Z5TFhOd1lXTnBibWM2SURBN1hHNTlYRzVjYm1sdWNIVjBJSHRjYmlBZ0lDQXZMeUF4TGlCQlpHUnlaWE56WlhNZ1lYQndaV0Z5WVc1alpTQnpaWFFnZEc4Z2MyVmhjbU5vWm1sbGJHUWdhVzRnVXpVc0lFTm9jbTl0WlZ4dUlDQWdJQzh2SURJdUlFRmtaSEpsYzNObGN5QmliM2d0YzJsNmFXNW5JSE5sZENCMGJ5QmliM0prWlhJdFltOTRJR2x1SUZNMUxDQkRhSEp2YldVZ0tHbHVZMngxWkdVZ0xXMXZlaUIwYnlCbWRYUjFjbVV0Y0hKdmIyWXBYRzRnSUNBZ0psdDBlWEJsUFZ3aWMyVmhjbU5vWENKZElIdGNiaUFnSUNBZ0lDQWdMWGRsWW10cGRDMWhjSEJsWVhKaGJtTmxPaUIwWlhoMFptbGxiR1E3SUM4dklERmNiaUFnSUNBZ0lDQWdMVzF2ZWkxaWIzZ3RjMmw2YVc1bk9pQmpiMjUwWlc1MExXSnZlRHRjYmlBZ0lDQWdJQ0FnTFhkbFltdHBkQzFpYjNndGMybDZhVzVuT2lCamIyNTBaVzUwTFdKdmVEc2dMeThnTWx4dUlDQWdJQ0FnSUNCaWIzZ3RjMmw2YVc1bk9pQmpiMjUwWlc1MExXSnZlRHRjYmx4dUlDQWdJRngwTHk4Z1VtVnRiM1psSUdsdWJtVnlJSEJoWkdScGJtY2dZVzVrSUhObFlYSmphQ0JqWVc1alpXd2dZblYwZEc5dUlHbHVJRk5oWm1GeWFTQTFJR0Z1WkNCRGFISnZiV1ZjYmlBZ0lDQWdJQ0FnTHk4Z2IyNGdUMU1nV0M1Y2JpQWdJQ0FnSUNBZ0pqbzZMWGRsWW10cGRDMXpaV0Z5WTJndFkyRnVZMlZzTFdKMWRIUnZiaXhjYmlBZ0lDQWdJQ0FnSmpvNkxYZGxZbXRwZEMxelpXRnlZMmd0WkdWamIzSmhkR2x2YmlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0F0ZDJWaWEybDBMV0Z3Y0dWaGNtRnVZMlU2SUc1dmJtVTdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQjlYRzVjYmlBZ0lDQXZMeUF4TGlCQlpHUnlaWE56SUdKdmVDQnphWHBwYm1jZ2MyVjBJSFJ2SUdCamIyNTBaVzUwTFdKdmVHQWdhVzRnU1VVZ09DODVMekV3TGx4dUlDQWdJQzh2SURJdUlGSmxiVzkyWlNCbGVHTmxjM01nY0dGa1pHbHVaeUJwYmlCSlJTQTRMemt2TVRBdVhHNGdJQ0FnTHk4Z015NGdVbVZ0YjNabGN5QmxlR05sYzNNZ2NHRmtaR2x1WnlCcGJpQkpSVGRjYmlBZ0lDQXZMeUFnSUNCTGJtOTNiaUJwYzNOMVpUb2daWGhqWlhOeklIQmhaR1JwYm1jZ2NtVnRZV2x1Y3lCcGJpQkpSVFpjYmlBZ0lDQW1XM1I1Y0dVOVhDSmphR1ZqYTJKdmVGd2lYU3hjYmlBZ0lDQW1XM1I1Y0dVOVhDSnlZV1JwYjF3aVhTQjdYRzRnSUNBZ1hIUmliM2d0YzJsNmFXNW5PaUJpYjNKa1pYSXRZbTk0T3lBdkx5QXhYRzRnSUNBZ1hIUndZV1JrYVc1bk9pQXdPeUF2THlBeVhHNGdJQ0FnWEhSQWFXWWdKR3hsWjJGamVWOXpkWEJ3YjNKMFgyWnZjbDlwWlNCN1hHNGdJQ0FnSUNBZ0lGeDBLbWhsYVdkb2REb2dNVE53ZURzZ0x5OGdNMXh1SUNBZ0lDQWdJQ0JjZENwM2FXUjBhRG9nTVROd2VEc2dMeThnTTF4dUlDQWdJRngwZlZ4dUlDQWdJSDFjYm4xY2JpSXNJaTh2SUZaaGNuTmNiaVJpWVhObExXWnZiblF0YzJsNlpUb2dNVFp3ZUZ4dUpHSmhjMlV0YkdsdVpTMW9aV2xuYUhRNklERXVOVnh1WEc0dkx5QlVlWEJsWm1GalpYTmNiaVJ6WVc1ek9pQk9aWGR6SUVONVkyeGxMQ0J6WVc1ekxYTmxjbWxtWEc0a2MyVnlhV1k2SUZCc1lYbG1ZV2x5SUVScGMzQnNZWGtzSUhObGNtbG1YRzVjYmk4dklFWnZiblFnZDJWcFoyaDBjMXh1Skhoc2FXZG9kRG9nTWpBd1hHNGtiR2xuYUhRNklETXdNRnh1Skc1dmNtMWhiRG9nTkRBd1hHNGtjMlZ0YVdKdmJHUTZJRFl3TUZ4dUpHSnZiR1E2SURjd01GeHVYRzR2THlCTWFXNWxJR2hsYVdkb2RDQm1kVzVqZEdsdmJseHVRR1oxYm1OMGFXOXVJR3hwYm1VdGFHVnBaMmgwS0NsY2JpQWdRSEpsZEhWeWJpQWtZbUZ6WlMxbWIyNTBMWE5wZW1VZ0tpQWtZbUZ6WlMxc2FXNWxMV2hsYVdkb2RGeHVYRzR2THlCV1lYSWdiWFZ6ZENCaVpTQnpjR1ZqYVdacFpXUWdZV1owWlhJZ2NtVjBkWEp1YVc1bklIUm9aU0JzYVc1bExXaGxhV2RvZENCbWRXNWpkR2x2Ymx4dUpHTmhiQzFzYVc1bExXaGxhV2RvZERvZ2JHbHVaUzFvWldsbmFIUW9LVnh1WEc0dkx5Qk5hWGhwYm5OY2JqMTJaWEowTFcxaGNtZHBiaWdrZEc5d09pQXhMQ0FrWW05MGRHOXRPaUF4S1Z4dUlDQnRZWEpuYVc0dGRHOXdPaUFrWTJGc0xXeHBibVV0YUdWcFoyaDBJQ29nSkhSdmNGeHVJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQWtZMkZzTFd4cGJtVXRhR1ZwWjJoMElDb2dKR0p2ZEhSdmJWeHVYRzQ5ZG1WeWRDMXdZV1JrYVc1bktDUjBiM0E2SURFc0lDUmliM1IwYjIwNklERXBYRzRnSUhCaFpHUnBibWN0ZEc5d09pQWtZMkZzTFd4cGJtVXRhR1ZwWjJoMElDb2dKSFJ2Y0Z4dUlDQndZV1JrYVc1bkxXSnZkSFJ2YlRvZ0pHTmhiQzFzYVc1bExXaGxhV2RvZENBcUlDUmliM1IwYjIxY2JseHVYRzVvZEcxc1hHNGdJR1p2Ym5RdGMybDZaVG9nSkdKaGMyVXRabTl1ZEMxemFYcGxYRzRnSUMxdGIzb3RiM040TFdadmJuUXRjMjF2YjNSb2FXNW5PaUJuY21GNWMyTmhiR1ZjYmlBZ0xYZGxZbXRwZEMxbWIyNTBMWE50YjI5MGFHbHVaem9nWVc1MGFXRnNhV0Z6WldSY2JseHVZbTlrZVZ4dUlDQmpiMnh2Y2pvZ0pHTm9ZWEpqYjJGc1hHNGdJR3hwYm1VdGFHVnBaMmgwT2lBeExqVmNiaUFnWm05dWRDMW1ZVzFwYkhrNklDUnpZVzV6WEc0Z0lDOHZZbUZqYTJkeWIzVnVaQzFwYldGblpUb2diR2x1WldGeUxXZHlZV1JwWlc1MEtIUnlZVzV6Y0dGeVpXNTBMQ0IwY21GdWMzQmhjbVZ1ZENCc2FXNWxMV2hsYVdkb2RDZ3BJQzBnTVhCNExDQWtaM0psWlc0Z01YQjRJQ3dnZEhKaGJuTndZWEpsYm5RcFhHNGdJR0poWTJ0bmNtOTFibVF0YzJsNlpUb2dZWFYwYnlCc2FXNWxMV2hsYVdkb2RDZ3BYRzRnSUcxaGNtZHBiam9nTUZ4dVhHNHZMMXRqYkdGemN5bzlKMTlmYUdWaFpHeHBibVVuWFZ4dVhHNWNiaTh2SUZWelpXUWdhVzRnWVhKMGFXTnNaU0JvWldGa1pYSnpJR2x1SUhSb1pTQXVUV0ZwYmlCamIyeDFiVzV6WEc1YlkyeGhjM01xUFNkZlgyaGxZV1JwYm1jblhWeHVJQ0JqYjJ4dmNqb2dKR2R5WldWdVhHNGdJR1p2Ym5RdFptRnRhV3g1T2lBa2MyVnlhV1pjYmlBZ1ptOXVkQzF6YVhwbE9pQXlMalZ5WlcxY2JpQWdabTl1ZEMxM1pXbG5hSFE2SUNSdWIzSnRZV3hjYmlBZ2JHbHVaUzFvWldsbmFIUTZJREZjYmlBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTW5KbGJWeHVYRzQ5YzNSaGJtUmhjbVF0YUdWaFpHbHVaeWdwWEc0Z0lHTnZiRzl5T2lBa1ozSmxaVzVjYmlBZ1ptOXVkQzFtWVcxcGJIazZJQ1J6WlhKcFpseHVJQ0JtYjI1MExYTnBlbVU2SURKeVpXMWNiaUFnWm05dWRDMTNaV2xuYUhRNklDUnViM0p0WVd4Y2JpQWdiR2x1WlMxb1pXbG5hSFE2SURGY2JseHVYRzR2THlCR2IzVnVaQ0JwYmlCMGFHVWdUV0ZwYmlCQ2JHOW5JRkJ2YzNSelhHNDliV2x1YjNJdGFHVmhaR2x1WnlncFhHNGdJR052Ykc5eU9pQWtibWxuYUhSbmNtVmxibHh1SUNCbWIyNTBMV1poYldsc2VUb2dKSE5sY21sbVhHNGdJR1p2Ym5RdGMybDZaVG9nTVM0eU5YSmxiVnh1SUNCbWIyNTBMWGRsYVdkb2REb2dKR0p2YkdSY2JpQWdiR2x1WlMxb1pXbG5hSFE2SURGY2JpQWdkR1Y0ZEMxMGNtRnVjMlp2Y20wNklIVndjR1Z5WTJGelpWeHVJQ0FyZG1WeWRDMXRZWEpuYVc0b01TNDFMREFwWEc1Y2JseHVMeThnVlhObFpDQnBiaUJoY25ScFkyeGxJR2hsWVdSbGNuTWdhVzRnZEdobElDNU5ZV2x1SUdOdmJIVnRibk5jYmoxemJXRnNiQzFvWldGa2FXNW5LQ2xjYmlBZ1kyOXNiM0k2SUNSbmNtVmxibHh1SUNCbWIyNTBMV1poYldsc2VUb2dKSE5sY21sbVhHNGdJR1p2Ym5RdGMybDZaVG9nTVM0ek56VnlaVzFjYmlBZ1ptOXVkQzEzWldsbmFIUTZJQ1J1YjNKdFlXeGNiaUFnYkdsdVpTMW9aV2xuYUhRNklERmNibHh1WEc0dkx5QkdiM1Z1WkNCcGJpQjBhR1VnVFdGcGJpQkNiRzluSUZCdmMzUnpYRzQ5WW14dlkydHhkVzkwWlNncFhHNGdJR052Ykc5eU9pQWtaM0psWlc1Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUNSelpYSnBabHh1SUNCbWIyNTBMWE5wZW1VNklERXVOWEpsYlZ4dUlDQm1iMjUwTFhOMGVXeGxPaUJwZEdGc2FXTmNiaUFnWm05dWRDMTNaV2xuYUhRNklDUmliMnhrWEc0Z0lDdDJaWEowTFcxaGNtZHBiaWd4TGpVc01TNDFLVnh1WEc1Y2JpOHZhVzV3ZFhSYmRIbHdaVDFjSW5OMVltMXBkRndpWFZ4dVhHNWJZMnhoYzNNcVBWOWZZblYwZEc5dVhTeGNibWx1Y0hWMFczUjVjR1U5WENKaWRYUjBiMjVjSWwwc1hHNXBibkIxZEZ0MGVYQmxQVndpY21WelpYUmNJbDFjYmlBZ1ltOXlaR1Z5T2lBeGNIZ2djMjlzYVdRZ0pHZHlaV1Z1WEc0Z0lHTjFjbk52Y2pvZ2NHOXBiblJsY2x4dUlDQmthWE53YkdGNU9pQnBibXhwYm1VdFlteHZZMnRjYmlBZ1ptOXVkQzFtWVcxcGJIazZJQ1J6WlhKcFpseHVJQ0JtYjI1MExYTnBlbVU2SURFdU1uSmxiVnh1SUNCbWIyNTBMWE4wZVd4bE9pQnBkR0ZzYVdOY2JpQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlYRzRnSUhCaFpHUnBibWM2SUM0M05YSmxiU0F6Y21WdFhHNGdJSFJsZUhRdFpHVmpiM0poZEdsdmJqb2dibTl1WlZ4dUlDQXZLa2wwWlcxeklHWnZjaUIwY21GdWMybDBhVzl1WEc0Z0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklIUnlZVzV6Y0dGeVpXNTBYRzRnSUdOdmJHOXlPaUFrWjNKbFpXNWNiaUFnTHlwVWNtRnVjMmwwYVc5dUlITmxkSFJwYm1kelhHNGdJSFJ5WVc1emFYUnBiMjQ2SUdGc2JDQXVNbk1nWldGelpWeHVYRzRnSUNZNmFHOTJaWEpjYmlBZ0lDQXZLbFJvWlhObElIZHBiR3dnZEhKaGJuTnBkR2x2YmlCdmJpQm9iM1psY2x4dUlDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ1JuY21WbGJseHVJQ0FnSUdOdmJHOXlPaUFrZDJocGRHVmNiaUFnSUNCMFpYaDBMV1JsWTI5eVlYUnBiMjQ2SUc1dmJtVmNibHh1WEc0dkx5QnBiaUJ3Y205bmNtVnpjMXh1WEc0dkx5Qk5hWGhwYm5OY2JqMWlkWFIwYjI0b0pHSmhZMnRuY205MWJtUXNJQ1JqYjJ4dmNpd2dKR0p2Y21SbGNpMWpiMnh2Y2lsY2JpQWdZbTl5WkdWeU9pQXhjSGdnYzI5c2FXUWdKR0p2Y21SbGNpMWpiMnh2Y2x4dUlDQm1iMjUwTFdaaGJXbHNlVG9nSkhObGNtbG1YRzRnSUdadmJuUXRjMmw2WlRvZ01TNHljbVZ0WEc0Z0lHWnZiblF0YzNSNWJHVTZJR2wwWVd4cFkxeHVJQ0J3WVdSa2FXNW5PaUF1TlhKbGJTQXhjbVZ0WEc0Z0lIUmxlSFF0WkdWamIzSmhkR2x2YmpvZ2JtOXVaVnh1SUNBdktrbDBaVzF6SUdadmNpQjBjbUZ1YzJsMGFXOXVYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUhSeVlXNXpjR0Z5Wlc1MFhHNGdJR052Ykc5eU9pQWtZMjlzYjNKY2JpQWdMeXBVY21GdWMybDBhVzl1SUhObGRIUnBibWR6WEc0Z0lIUnlZVzV6YVhScGIyNDZJR0ZzYkNBdU1uTWdaV0Z6WlZ4dUlDQW1PbWh2ZG1WeVhHNGdJQ0FnTHlwVWFHVnpaU0IzYVd4c0lIUnlZVzV6YVhScGIyNGdiMjRnYUc5MlpYSmNiaUFnSUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBa1ozSmxaVzVjYmlBZ0lDQmpiMnh2Y2pvZ0pHTnZiRzl5WEc1Y2JseHVMbXh2WVdSbGNsOWZZblYwZEc5dUxtUnBjMkZpYkdWa1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ1JqYkc5MVpGeHVJQ0JqYjJ4dmNqb2dKR2R5WldWdVhHNGdJR04xY25OdmNqb2daR1ZtWVhWc2RGeHVJQ0J2Y0dGamFYUjVPaUF1TTF4dUlpd2lMeThnVTJsMFpTQmpiMnh2Y2lCd1lXeGxkSFJsWEc0a1ozSmxaVzQ2SUNNeU5qZGxOalJjYmlSdWFXZG9kR2R5WldWdU9pQWpORFUxTmpVeVhHNGtjMnhoZEdVNklDTmxZMlZsWlRaY2JseHVMeThnTlRBZ2MyaGhaR1Z6SUc5bUlHZHlZWGxjYmlSM2FHbDBaVG9nSTJabVpseHVKSE4wWldGdE9pQWpaamhtT0dZNFhHNGtZMnh2ZFdRNklDTmxOV1UyWlRkY2JpUm5jbUZ3YUdsMFpUb2dJMk5qWTF4dUpITjBiMjVsT2lBak4yWTNaVGRsWEc0a2JHVmhaRG9nSXpabE5tSTJZMXh1SkdOb1lYSmpiMkZzT2lBak16TXpYRzRrWW14aFkyczZJQ013TURCY2JseHVYRzRrYlc5aWFXeGxMVzVoZGkxaWRHNDZJQ1J6YkdGMFpWeHVYRzR2TDBKdmNtUmxjaUJEYjJ4dmNseHVKR0p2Y21SbGNrTnZiRzl5T2lBa1ozSmhjR2hwZEdWY2JseHVMeThnVTJsMFpTQmlZWE5sSUhSbGVIUWdZMjlzYjNKelhHNGtjMmwwWlMxMFpYaDBMV052Ykc5eU9pQWtZMmhoY21OdllXeGNiaVJ6YVhSbExYUmxlSFF0WTI5c2IzSXRiR2x1YXpvZ0pHZHlaV1Z1WEc0a2MybDBaUzEwWlhoMExXTnZiRzl5TFd4cGJtc3RhRzkyWlhJNklDTTBOVFUyTlRKY2JseHVYRzR2THlCR2IyOTBaWElnWTI5c2IzSnpYRzRrWm05dmRHVnlMWFJsZUhRNklDUnVhV2RvZEdkeVpXVnVYRzRrWm05dmRHVnlMWFJsZUhRdGJHbHVhem9nSkc1cFoyaDBaM0psWlc1Y2JpUm1iMjkwWlhJdGRHVjRkQzFzYVc1ckxXaHZkbVZ5T2lBa1ozSmxaVzVjYmlJc0lpOHZJR2gwZEhBNkx5OWpjM050YjJwdkxtTnZiUzlzWVhSbGMzUmZibVYzWDJOc1pXRnlabWw0WDNOdlgyWmhjaTljYmk1amJHVmhjbVpwZURwaFpuUmxjbHh1SUNCamIyNTBaVzUwT2lCY0lsd2lYRzRnSUdScGMzQnNZWGs2SUhSaFlteGxYRzRnSUdOc1pXRnlPaUJpYjNSb1hHNGlMQ0l2THlCU1JWTlFUMDVUU1ZaRklFbE5RVWRGVTF4dWFXMW5MQ0JwWm5KaGJXVXNJR1Z0WW1Wa1hHNGdJSGRwWkhSb09pQXhNREFsWEc0aUxDSXVZMjl1ZEdGcGJtVnlYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNObVptWmNiaUFnWW05eVpHVnlMV3hsWm5RNklERndlQ0J6YjJ4cFpDQWtZbTl5WkdWeVEyOXNiM0pjYmlBZ1ltOXlaR1Z5TFhKcFoyaDBPaUF4Y0hnZ2MyOXNhV1FnSkdKdmNtUmxja052Ykc5eVhHNGdJRzFoY21kcGJqb2dNQ0JoZFhSdlhHNGdJRzFoZUMxM2FXUjBhRG9nTVRJd01IQjRYRzVjYmx4dVcyTnNZWE56S2owblkyOXNMU2RkWEc0Z0lHUnBjM0JzWVhrNklIUmhZbXhsTFdObGJHeGNiaUFnZG1WeWRHbGpZV3d0WVd4cFoyNDZJRzFwWkdSc1pWeHVYRzRnSUN0dFpXUnBZU2hjSWp3OWRHRmliR1YwWENJcFhHNGdJQ0FnWkdsemNHeGhlVG9nYVc1c2FXNWxMV0pzYjJOclhHNGdJQ0FnZEdWNGRDMWhiR2xuYmpvZ1kyVnVkR1Z5WEc1Y2JpOHZNaUJqYjJ4MWJXNXpJSGRwWkdWY2JpOHZJRlJvYVhNZ2FYTWdkWE5sWkNCcGJpQjBhR1VnWm05dmRHVnlJR1p2Y2lCdVlYSnliM2RsY2lCamIyeDFiVzV6SUc5bUlHeHBibXR6WEc0dVkyOXNMVEl0TVRKY2JpQWdkMmxrZEdnNklESXZNVElnS2lBeE1EQWxYRzVjYmlBZ0syMWxaR2xoS0Z3aVBEMTBZV0pzWlhSY0lpbGNiaUFnSUNCM2FXUjBhRG9nTVRBd0pWeHVYRzR2THpNZ1kyOXNkVzF1Y3lCM2FXUmxYRzR2THlCVWFHbHpJR2x6SUhWelpXUWdhVzRnZEdobElHWnZiM1JsY2lCbWIzSWdabUYwZEdWeUlHTnZiSFZ0Ym5NZ2IyWWdiRzl1WjJWeUxYUnBkR3hsWkNCc2FXNXJjMXh1TG1OdmJDMHpMVEV5WEc0Z0lIZHBaSFJvT2lBekx6RXlJQ29nTVRBd0pWeHVYRzRnSUN0dFpXUnBZU2hjSWp3OWRHRmliR1YwWENJcFhHNGdJQ0FnZDJsa2RHZzZJREV3TUNWY2JseHVMeThnTkNCamIyeDFiVzV6SUhkcFpHVXVYRzR2THlCVWFHbHpJR2x6SUhWelpXUWdhVzRnZEdobElFeGxZV1JsY25Ob2FYQWdjR0ZuWlM1Y2JpNWpiMnd0TkMweE1seHVJQ0IzYVdSMGFEb2dOQzh4TWlBcUlERXdNQ1ZjYmx4dUlDQXJiV1ZrYVdFb1hDSThQWFJoWW14bGRGd2lLVnh1SUNBZ0lIZHBaSFJvT2lBeE1EQWxYRzVjYmx4dUx5OGdOU0JqYjJ4MWJXNXpJSGRwWkdVdVhHNHZMeUJVYUdseklHbHpJSFZ6WldRZ2FXNGdiVzl6ZENCdlppQjBhR1VnWW1GdWJtVnljeTVjYmk4dklFbDBJR2x6SUdGc2MyOGdkWE5sWkNCcGJpQjBhR1VnVFdGcGJpQnRiMlIxYkdVZ1lYSmxZU0IwYUdGMElHbHVZMngxWkdWeklIUm9aU0J6YVdSbFltRnlMbHh1TG1OdmJDMDFMVEV5WEc0Z0lIZHBaSFJvT2lBMUx6RXlJQ29nTVRBd0pWeHVYRzRnSUN0dFpXUnBZU2hjSWp3OWRHRmliR1YwWENJcFhHNGdJQ0FnZDJsa2RHZzZJREV3TUNWY2JseHVYRzR2THlBMklHTnZiSFZ0Ym5NZ2QybGtaUzVjYmk4dklGUm9hWE1nZDJsc2JDQnpjR0Z1SUdoaGJHWWdkR2hsSUdGMllXbHNZV0pzWlNCM2FXUjBhRnh1THk4Z1ZHaGxJRU5oY21RZ1RXOWtkV3hsSUc5dUlIUm9aU0JvYjIxbGNHRm5aU0IxYzJWeklIUm9hWE5jYmk1amIyd3ROaTB4TWx4dUlDQjNhV1IwYURvZ05pOHhNaUFxSURFd01DVmNibHh1SUNBcmJXVmthV0VvWENJOFBYUmhZbXhsZEZ3aUtWeHVJQ0FnSUhkcFpIUm9PaUF4TURBbFhHNWNibHh1THk4Z055QmpiMngxYlc1eklIZHBaR1V1WEc0dkx5QlVhR2x6SUdseklIVnpaV1FnYVc0Z2JXOXpkQ0J2WmlCMGFHVWdZbUZ1Ym1WeWN5NWNiaTh2SUVsMElHbHpJR0ZzYzI4Z2RYTmxaQ0JwYmlCMGFHVWdUV0ZwYmlCdGIyUjFiR1VnWVhKbFlTQjBhR0YwSUdsdVkyeDFaR1Z6SUhSb1pTQnphV1JsWW1GeUxseHVMeThnVzJOc1lYTnpLajBuTFMxamIyd3ROeTB4TWlkZFhHNHVZMjlzTFRjdE1USmNiaUFnZDJsa2RHZzZJRGN2TVRJZ0tpQXhNREFsWEc1Y2JpQWdLMjFsWkdsaEtGd2lQRDEwWVdKc1pYUmNJaWxjYmlBZ0lDQjNhV1IwYURvZ01UQXdKVnh1WEc1Y2JpOHZJRGdnWTI5c2RXMXVjeUIzYVdSbExseHVMeThnVkdocGN5QnBjeUIxYzJWa0lHbHVJSFJvWlNCTVpXRmtaWEp6YUdsd0lIQmhaMlV1WEc0dVkyOXNMVGd0TVRKY2JpQWdkMmxrZEdnNklEZ3ZNVElnS2lBeE1EQWxYRzVjYmlBZ0syMWxaR2xoS0Z3aVBEMTBZV0pzWlhSY0lpbGNiaUFnSUNCM2FXUjBhRG9nTVRBd0pWeHVYRzVjYmk1amIyd3RPUzB4TWx4dUlDQjNhV1IwYURvZ09TOHhNaUFxSURFd01DVmNibHh1SUNBcmJXVmthV0VvWENJOFBYUmhZbXhsZEZ3aUtWeHVJQ0FnSUhkcFpIUm9PaUF4TURBbFhHNWNibHh1TG1OdmJDMHhNQzB4TWx4dUlDQjNhV1IwYURvZ01UQXZNVElnS2lBeE1EQWxYRzVjYmlBZ0syMWxaR2xoS0Z3aVBEMTBZV0pzWlhSY0lpbGNiaUFnSUNCM2FXUjBhRG9nTVRBd0pWeHVYRzR1WTI5c0xURXhMVEV5WEc0Z0lIZHBaSFJvT2lBeE1TOHhNaUFxSURFd01DVmNibHh1SUNBcmJXVmthV0VvWENJOFBYUmhZbXhsZEZ3aUtWeHVJQ0FnSUhkcFpIUm9PaUF4TURBbFhHNGlMQ0l2TDF4dVhIUWdYeUFnSUNBZ0lDQWdJQ0FnSUY4Z0lDQWdJQ0FnSUNBZ0lGOGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmZJRjljYmx4MEtGOHBJQ0FnSUNBZ0lDQWdJSHdnZkNBZ0lDQWdJQ0FnSUh3Z2ZDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOElDaGZLVnh1WEhRZ1h5QmZJRjlmSUNBZ1gxOWZmQ0I4WHlBZ0lGOGdJRjlmZkNCOElGOWZYeUFnSUY4Z1gxOGdYMTlmSUNBZ1gxOWZJQ0JmWDN3Z2ZGOGdJRjlmSUY5Y2JseDBmQ0I4SUNkZklGeGNJQzhnWDE5OElId2dmQ0I4SUh3dklGOWdJSHd2SUY4Z1hGd2dmQ0FuWHlCZ0lGOGdYRndnTHlCZklGeGNMeUJmWUNCOElId3ZJRjlnSUh4Y2JseDBmQ0I4SUh3Z2ZDQjhJQ2hmWDN3Z2ZDQjhYM3dnZkNBb1gzd2dmQ0FnWDE4dklId2dmQ0I4SUh3Z2ZDQjhJQ0JmWHk4Z0tGOThJSHdnZkNBb1gzd2dmRnh1WEhSOFgzeGZmQ0I4WDN4Y1hGOWZYM3hmZkZ4Y1gxOHNYM3hjWEY5ZkxGOThYRnhmWDE5OElIeGZmQ0I4WDN3Z2ZGOThYRnhmWDE5OFhGeGZYeXhmZkY5OFhGeGZYeXhmZkZ4dVhHNWNkRk5wYlhCc1pTd2daV3hsWjJGdWRDQmhibVFnYldGcGJuUmhhVzVoWW14bElHMWxaR2xoSUhGMVpYSnBaWE1nYVc0Z1UyRnpjMXh1WEc1Y2RHaDBkSEE2THk5cGJtTnNkV1JsTFcxbFpHbGhMbU52YlZ4dVhHNGdJRUYxZEdodmNqb2dSV1IxWVhKa2J5QkNiM1ZqWVhNZ1BHMWhhV3hBWldSMVlYSmtiMkp2ZFdOaGN5NWpiMjArWEc1Y2JseHVJQ0JEY21WaGRHVnpJR0VnYkdsemRDQnZaaUJuYkc5aVlXd2dZbkpsWVd0d2IybHVkSE5jYmx4dUlDQkFZWFYwYUc5eUlFVmtkV0Z5Wkc4Z1FtOTFZMkZ6WEc1Y2JpQWdRR1Y0WVcxd2JHVWdjMk56Y3lBdElFTnlaV0YwWlhNZ1lTQnphVzVuYkdVZ1luSmxZV3R3YjJsdWRDQjNhWFJvSUhSb1pTQnNZV0psYkNCZ2NHaHZibVZnWEc0Z0lDUmljbVZoYTNCdmFXNTBjem9nS0Nkd2FHOXVaU2M2SURNeU1IQjRLVHRjYmx4dUpHSnlaV0ZyY0c5cGJuUnpPaUFvWENKd2FHOXVaVndpT2lBME9EQndlQ3dnWENKMFlXSnNaWFJjSWpvZ056WTRjSGdzSUZ3aVpHVnphM1J2Y0Z3aU9pQXhNREl6Y0hncElDRmtaV1poZFd4MFhHNWNiaTh2WEc0Z0lFTnlaV0YwWlhNZ1lTQnNhWE4wSUc5bUlITjBZWFJwWXlCbGVIQnlaWE56YVc5dWN5QnZjaUJ0WldScFlTQjBlWEJsYzF4dVhHNGdJRUJoZFhSb2IzSWdSV1IxWVhKa2J5QkNiM1ZqWVhOY2JseHVJQ0JBWlhoaGJYQnNaU0J6WTNOeklDMGdRM0psWVhSbGN5QmhJSE5wYm1kc1pTQnRaV1JwWVNCMGVYQmxJQ2h6WTNKbFpXNHBYRzRnSUNBa2JXVmthV0V0Wlhod2NtVnpjMmx2Ym5NNklDZ25jMk55WldWdUp6b2dKM05qY21WbGJpY3BPMXh1WEc0Z0lFQmxlR0Z0Y0d4bElITmpjM01nTFNCRGNtVmhkR1Z6SUdFZ2MzUmhkR2xqSUdWNGNISmxjM05wYjI0Z2QybDBhQ0JzYjJkcFkyRnNJR1JwYzJwMWJtTjBhVzl1SUNoUFVpQnZjR1Z5WVhSdmNpbGNiaUFnSUNSdFpXUnBZUzFsZUhCeVpYTnphVzl1Y3pvZ0tGeHVJQ0JjZEZ4MEozSmxkR2x1WVRKNEp6b2dLRnh1SUNCY2RGeDBYSFFuS0MxM1pXSnJhWFF0YldsdUxXUmxkbWxqWlMxd2FYaGxiQzF5WVhScGJ6b2dNaWtuTEZ4dUlDQmNkRngwWEhRbktHMXBiaTF5WlhOdmJIVjBhVzl1T2lBeE9USmtjR2twSjF4dUlDQmNkRngwS1Z4dUlDQmNkQ2s3WEc1Y2JpUnRaV1JwWVMxbGVIQnlaWE56YVc5dWN6b2dLRndpYzJOeVpXVnVYQ0k2SUZ3aWMyTnlaV1Z1WENJc0lGd2ljSEpwYm5SY0lqb2dYQ0p3Y21sdWRGd2lMQ0JjSW1oaGJtUm9aV3hrWENJNklGd2lhR0Z1WkdobGJHUmNJaXdnWENKeVpYUnBibUV5ZUZ3aU9pQW9YQ0lvTFhkbFltdHBkQzF0YVc0dFpHVjJhV05sTFhCcGVHVnNMWEpoZEdsdk9pQXlLVndpTENCY0lpaHRhVzR0Y21WemIyeDFkR2x2YmpvZ01Ua3laSEJwS1Z3aUtTd2dYQ0p5WlhScGJtRXplRndpT2lBb1hDSW9MWGRsWW10cGRDMXRhVzR0WkdWMmFXTmxMWEJwZUdWc0xYSmhkR2x2T2lBektWd2lMQ0JjSWlodGFXNHRjbVZ6YjJ4MWRHbHZiam9nTXpVd1pIQnBLVndpS1NrZ0lXUmxabUYxYkhSY2JseHVMeTljYmlBZ1JHVm1hVzVsY3lCaElHNTFiV0psY2lCMGJ5QmlaU0JoWkdSbFpDQnZjaUJ6ZFdKMGNtRmpkR1ZrSUdaeWIyMGdaV0ZqYUNCMWJtbDBJSGRvWlc0Z1pHVmpiR0Z5YVc1bklHSnlaV0ZyY0c5cGJuUnpJSGRwZEdnZ1pYaGpiSFZ6YVhabElHbHVkR1Z5ZG1Gc2MxeHVYRzRnSUVCaGRYUm9iM0lnUldSMVlYSmtieUJDYjNWallYTmNibHh1SUNCQVpYaGhiWEJzWlNCelkzTnpJQzBnU1c1MFpYSjJZV3dnWm05eUlIQnBlR1ZzY3lCcGN5QmtaV1pwYm1Wa0lHRnpJR0F4WUNCaWVTQmtaV1poZFd4MFhHNGdJQ0JBYVc1amJIVmtaU0J0WldScFlTaGNJajR4TWpod2VGd2lLU0I3ZlZ4dVhHNGdJRWRsYm1WeVlYUmxjenBjYmlBZ1FHMWxaR2xoSUNodGFXNHRkMmxrZEdnNklERXlPWEI0S1NCN2ZWeHVYRzRnSUVCbGVHRnRjR3hsSUhOamMzTWdMU0JKYm5SbGNuWmhiQ0JtYjNJZ1pXMXpJR2x6SUdSbFptbHVaV1FnWVhNZ1lEQXVNREZnSUdKNUlHUmxabUYxYkhSY2JpQWdJRUJwYm1Oc2RXUmxJRzFsWkdsaEtGd2lQakl3WlcxY0lpa2dlMzFjYmx4dUlDQkhaVzVsY21GMFpYTTZYRzRnSUVCdFpXUnBZU0FvYldsdUxYZHBaSFJvT2lBeU1DNHdNV1Z0S1NCN2ZWeHVYRzRnSUVCbGVHRnRjR3hsSUhOamMzTWdMU0JKYm5SbGNuWmhiQ0JtYjNJZ2NtVnRjeUJwY3lCa1pXWnBibVZrSUdGeklHQXdMakZnSUdKNUlHUmxabUYxYkhRc0lIUnZJR0psSUhWelpXUWdkMmwwYUNCZ1ptOXVkQzF6YVhwbE9pQTJNaTQxSlR0Z1hHNGdJQ0JBYVc1amJIVmtaU0J0WldScFlTaGNJajR5TGpCeVpXMWNJaWtnZTMxY2JseHVJQ0JIWlc1bGNtRjBaWE02WEc0Z0lFQnRaV1JwWVNBb2JXbHVMWGRwWkhSb09pQXlMakZ5WlcwcElIdDlYRzVjYmlSMWJtbDBMV2x1ZEdWeWRtRnNjem9nS0Z3aWNIaGNJam9nTVN3Z1hDSmxiVndpT2lBd0xqQXhMQ0JjSW5KbGJWd2lPaUF3TGpFcElDRmtaV1poZFd4MFhHNWNiaTh2WEc0Z0lFZGxibVZ5WVhSbGN5QmhJRzFsWkdsaElIRjFaWEo1SUdKaGMyVmtJRzl1SUdFZ2JHbHpkQ0J2WmlCamIyNWthWFJwYjI1elhHNWNiaUFnUUdGMWRHaHZjaUJGWkhWaGNtUnZJRUp2ZFdOaGMxeHVYRzRnSUVCd1lYSmhiU0I3VEdsemRIMGdJQ0FrWTI5dVpHbDBhVzl1Y3lBZ0xTQk5aV1JwWVNCeGRXVnllU0JqYjI1a2FYUnBiMjV6WEc1Y2JpQWdRR1Y0WVcxd2JHVWdjMk56Y3lBdElGZHBkR2dnWVNCemFXNW5iR1VnYzJWMElHSnlaV0ZyY0c5cGJuUmNiaUFnSUVCcGJtTnNkV1JsSUcxbFpHbGhLRndpUG5Cb2IyNWxYQ0lwSUhzZ2ZWeHVYRzRnSUVCbGVHRnRjR3hsSUhOamMzTWdMU0JYYVhSb0lIUjNieUJ6WlhRZ1luSmxZV3R3YjJsdWRITmNiaUFnSUVCcGJtTnNkV1JsSUcxbFpHbGhLRndpUG5Cb2IyNWxYQ0lzSUZ3aVBEMTBZV0pzWlhSY0lpa2dleUI5WEc1Y2JpQWdRR1Y0WVcxd2JHVWdjMk56Y3lBdElGZHBkR2dnWTNWemRHOXRJSFpoYkhWbGMxeHVJQ0FnUUdsdVkyeDFaR1VnYldWa2FXRW9YQ0krUFRNMU9IQjRYQ0lzSUZ3aVBEZzFNSEI0WENJcElIc2dmVnh1WEc0Z0lFQmxlR0Z0Y0d4bElITmpjM01nTFNCWGFYUm9JSE5sZENCaWNtVmhhM0J2YVc1MGN5QjNhWFJvSUdOMWMzUnZiU0IyWVd4MVpYTmNiaUFnSUVCcGJtTnNkV1JsSUcxbFpHbGhLRndpUG1SbGMydDBiM0JjSWl3Z1hDSThQVEV6TlRCd2VGd2lLU0I3SUgxY2JseHVJQ0JBWlhoaGJYQnNaU0J6WTNOeklDMGdWMmwwYUNCaElITjBZWFJwWXlCbGVIQnlaWE56YVc5dVhHNGdJQ0JBYVc1amJIVmtaU0J0WldScFlTaGNJbkpsZEdsdVlUSjRYQ0lwSUhzZ2ZWeHVYRzRnSUVCbGVHRnRjR3hsSUhOamMzTWdMU0JOYVhocGJtY2daWFpsY25sMGFHbHVaMXh1SUNBZ1FHbHVZMngxWkdVZ2JXVmthV0VvWENJK1BUTTFNSEI0WENJc0lGd2lQSFJoWW14bGRGd2lMQ0JjSW5KbGRHbHVZVE40WENJcElIc2dmVnh1WEc1Y2JqMXRaV1JwWVNna1kyOXVaR2wwYVc5dWN5NHVMaWxjYmlBZ1FHWnZjaUFrYVNCbWNtOXRJREVnZEdoeWIzVm5hQ0JzWlc1bmRHZ29KR052Ym1ScGRHbHZibk1wWEc0Z0lDQWdKR052Ym1ScGRHbHZibk02SUhObGRDMXVkR2dvSkdOdmJtUnBkR2x2Ym5Nc0lDUnBMQ0J3WVhKelpTMWxlSEJ5WlhOemFXOXVLRzUwYUNna1kyOXVaR2wwYVc5dWN5d2dKR2twS1NsY2JpQWdKR0p5WVc1amFHVnpPaUJuWlhRdGNYVmxjbmt0WW5KaGJtTm9aWE1vSkdOdmJtUnBkR2x2Ym5NcFhHNGdJQ1J4ZFdWeWVUb2dYQ0pjSWx4dUlDQkFaV0ZqYUNBa1luSmhibU5vSUdsdUlDUmljbUZ1WTJobGMxeHVJQ0FnSUVCcFppQnpkSEl0YkdWdVozUm9LQ1J4ZFdWeWVTa2dJVDBnTUZ4dUlDQWdJQ0FnSkhGMVpYSjVPaUFrY1hWbGNua2dLeUJjSWl3Z1hDSmNiaUFnSUNBa2NYVmxjbms2SUNSeGRXVnllU0FySUNSaWNtRnVZMmhjYmlBZ1FHMWxaR2xoSUNON0pIRjFaWEo1ZlZ4dUlDQWdJRUJqYjI1MFpXNTBYRzVjYmk4dlhHNGdJRkpsWVdSeklHRWdiR2x6ZENCdlppQnRaV1JwWVNCeGRXVnllU0JsZUhCeVpYTnphVzl1Y3lCaGJtUWdjMlZ3WVhKaGRHVnpJR3h2WjJsallXd2daR2x6YW5WdVkzUnBiMjV6SUdsdWRHOGdaR2xtWm1WeVpXNTBJR0p5WVc1amFHVnpYRzVjYmlBZ1FHRjFkR2h2Y2lCRlpIVmhjbVJ2SUVKdmRXTmhjMXh1SUNCQWNHRnlZVzBnZTB4cGMzUjlJQ0FnSkdWNGNISmxjM05wYjI1eklDQXRJR3hwYzNRZ2IyWWdaWGh3Y21WemMybHZibk5jYmlBZ1FIUm9jbTkzY3lCZ0pHVjRjSEpsYzNOcGIyNWdJR2x6SUc1dmRDQmhJSFpoYkdsa0lHVjRjSEpsYzNOcGIyNWNibHh1SUNCQWNtVjBkWEp1SUh0TWFYTjBJSHdnVG5Wc2JIMWNibHh1WEc1QVpuVnVZM1JwYjI0Z1oyVjBMWEYxWlhKNUxXSnlZVzVqYUdWektDUmxlSEJ5WlhOemFXOXVjeWxjYmlBZ0pISmxjM1ZzZERvZ1hDSmNJbHh1SUNBa2FHRnpMV2R5YjNWd2N6b2dabUZzYzJWY2JpQWdMeThnUjJWMGRHbHVaeUJwYm1sMGFXRnNJSE51WVhCemFHOTBJR0Z1WkNCc2IyOXJhVzVuSUdadmNpQm5jbTkxY0hOY2JpQWdRR1ZoWTJnZ0pHVjRjSEpsYzNOcGIyNGdhVzRnSkdWNGNISmxjM05wYjI1elhHNGdJQ0FnUUdsbUlITjBjaTFzWlc1bmRHZ29KSEpsYzNWc2RDa2dJVDBnTUZ4dUlDQWdJQ0FnSkhKbGMzVnNkRG9nSkhKbGMzVnNkQ0FySUZ3aUlHRnVaQ0JjSWx4dUlDQWdJRUJwWmlCMGVYQmxMVzltS0NSbGVIQnlaWE56YVc5dUtTQTlQU0JjSW5OMGNtbHVaMXdpWEc0Z0lDQWdJQ0FrY21WemRXeDBPaUFrY21WemRXeDBJQ3NnSkdWNGNISmxjM05wYjI1Y2JpQWdJQ0JBWld4elpTQnBaaUIwZVhCbExXOW1LQ1JsZUhCeVpYTnphVzl1S1NBOVBTQmNJbXhwYzNSY0lseHVJQ0FnSUNBZ0pISmxjM1ZzZERvZ0pISmxjM1ZzZENBcklHNTBhQ2drWlhod2NtVnpjMmx2Yml3Z01TbGNiaUFnSUNBZ0lDUm9ZWE10WjNKdmRYQnpPaUIwY25WbFhHNGdJQ0FnUUdWc2MyVmNiaUFnSUNBZ0lFQjNZWEp1SUZ3aUkzc2taWGh3Y21WemMybHZibjBnYVhNZ2JtOTBJR0VnZG1Gc2FXUWdaWGh3Y21WemMybHZiaTVjSWx4dUlDQXZMeUJKWmlCM1pTQm9ZWFpsSUdkeWIzVndjeXdnZDJVZ2FHRjJaU0IwYnlCamNtVmhkR1VnWVd4c0lIQnZjM05wWW14bElHTnZiV0pwYm1GMGFXOXVjMXh1SUNCQWFXWWdKR2hoY3kxbmNtOTFjSE5jYmlBZ0lDQkFaV0ZqYUNBa1pYaHdjbVZ6YzJsdmJpQnBiaUFrWlhod2NtVnpjMmx2Ym5OY2JpQWdJQ0FnSUVCcFppQjBlWEJsTFc5bUtDUmxlSEJ5WlhOemFXOXVLU0E5UFNCY0lteHBjM1JjSWx4dUlDQWdJQ0FnSUNBa1ptbHljM1E2SUc1MGFDZ2taWGh3Y21WemMybHZiaXdnTVNsY2JpQWdJQ0FnSUNBZ1FHVmhZMmdnSkcxbGJXSmxjaUJwYmlBa1pYaHdjbVZ6YzJsdmJseHVJQ0FnSUNBZ0lDQWdJRUJwWmlBa2JXVnRZbVZ5SUNFOUlDUm1hWEp6ZEZ4dUlDQWdJQ0FnSUNBZ0lDQWdRR1ZoWTJnZ0pIQmhjblJwWVd3Z2FXNGdKSEpsYzNWc2RGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBa2NtVnpkV3gwT2lCcWIybHVLQ1J5WlhOMWJIUXNJSE4wY2kxeVpYQnNZV05sTFdacGNuTjBLQ1JtYVhKemRDd2dKRzFsYldKbGNpd2dKSEJoY25ScFlXd3BLVnh1SUNCQWNtVjBkWEp1SUNSeVpYTjFiSFJjYmx4dUx5OWNiaUFnVUdGeWMyVnpJR0VnYzNSeWFXNW5JSFJ2SUdadmNtMGdZU0J0WldScFlTQnhkV1Z5ZVNCbGVIQnlaWE56YVc5dVhHNWNiaUFnUUdGMWRHaHZjaUJGWkhWaGNtUnZJRUp2ZFdOaGMxeHVYRzRnSUVCd1lYSmhiU0I3VTNSeWFXNW5mU0FnSUNSbGVIQnlaWE56YVc5dUlDQXRJR1Y0Y0hKbGMzTnBiMjRnS0dsdUlITjBjbWx1WnlsY2JpQWdRSFJvY205M2N5QkZlSEJ5WlhOemFXOXVJSGRwZEdnZ2RIbHdaU0JnZEhsd1pTMXZaaWdrWlhod2NtVnpjMmx2YmlsZ0lHUmxkR1ZqZEdWa0xDQnpkSEpwYm1jZ1pYaHdaV04wWldSY2JpQWdRSFJvY205M2N5QmdKR1Y0Y0hKbGMzTnBiMjVnSUdseklHMXBjM05wYm1jZ1lXNGdiM0JsY21GMGIzSmNiaUFnUUhSb2NtOTNjeUJWYm10dWIzZHVJSFZ1YVhRNklHQWtkVzVwZEdCY2JseHVJQ0JBY21WMGRYSnVJSHRUZEhKcGJtY2dmQ0JPZFd4c2ZWeHVYRzVjYmtCbWRXNWpkR2x2YmlCd1lYSnpaUzFsZUhCeVpYTnphVzl1S0NSbGVIQnlaWE56YVc5dUtWeHVJQ0FrYjNCbGNtRjBiM0k2SUZ3aVhDSmNiaUFnSkhaaGJIVmxPaUJjSWx3aVhHNGdJQ1JsYkdWdFpXNTBPaUJjSWx3aVhHNGdJQ1J5WlhOMWJIUTZJRndpWENKY2JpQWdKR2x6TFhkcFpIUm9PaUIwY25WbFhHNGdJRUJwWmlCMGVYQmxMVzltS0NSbGVIQnlaWE56YVc5dUtTQWhQU0JjSW5OMGNtbHVaMXdpWEc0Z0lDQWdRSGRoY200Z1hDSkZlSEJ5WlhOemFXOXVJSGRwZEdnZ2RIbHdaU0JnSTN0MGVYQmxMVzltS0NSbGVIQnlaWE56YVc5dUtYMWdJR1JsZEdWamRHVmtMQ0J6ZEhKcGJtY2daWGh3WldOMFpXUXVYQ0pjYmlBZ0x5OGdVMlZ3WVhKaGRHbHVaeUIwYUdVZ2IzQmxjbUYwYjNJZ1puSnZiU0IwYUdVZ2NtVnpkQ0J2WmlCMGFHVWdaWGh3Y21WemMybHZibHh1SUNCQWFXWWdjM1J5TFhOc2FXTmxLQ1JsZUhCeVpYTnphVzl1TENBeUxDQXlLU0E5UFNCY0lqMWNJbHh1SUNBZ0lDUnZjR1Z5WVhSdmNqb2djM1J5TFhOc2FXTmxLQ1JsZUhCeVpYTnphVzl1TENBeExDQXlLVnh1SUNBZ0lDUjJZV3gxWlRvZ2MzUnlMWE5zYVdObEtDUmxlSEJ5WlhOemFXOXVMQ0F6S1Z4dUlDQkFaV3h6WlZ4dUlDQWdJQ1J2Y0dWeVlYUnZjam9nYzNSeUxYTnNhV05sS0NSbGVIQnlaWE56YVc5dUxDQXhMQ0F4S1Z4dUlDQWdJQ1IyWVd4MVpUb2djM1J5TFhOc2FXTmxLQ1JsZUhCeVpYTnphVzl1TENBeUtWeHVJQ0F2THlCRGFHVmphMmx1WnlCM2FHRjBJSFI1Y0dVZ2IyWWdaWGh3Y21WemMybHZiaUIzWlhKbElHUmxZV3hwYm1jZ2QybDBhRnh1SUNCQWFXWWdiV0Z3TFdoaGN5MXJaWGtvSkdKeVpXRnJjRzlwYm5SekxDQWtkbUZzZFdVcFhHNGdJQ0FnSkhKbGMzVnNkRG9nYldGd0xXZGxkQ2drWW5KbFlXdHdiMmx1ZEhNc0lDUjJZV3gxWlNsY2JpQWdRR1ZzYzJVZ2FXWWdiV0Z3TFdoaGN5MXJaWGtvSkcxbFpHbGhMV1Y0Y0hKbGMzTnBiMjV6TENBa1pYaHdjbVZ6YzJsdmJpbGNiaUFnSUNBa2NtVnpkV3gwT2lCdFlYQXRaMlYwS0NSdFpXUnBZUzFsZUhCeVpYTnphVzl1Y3l3Z0pHVjRjSEpsYzNOcGIyNHBYRzRnSUNBZ0pHbHpMWGRwWkhSb09pQm1ZV3h6WlZ4dUlDQkFaV3h6WlZ4dUlDQWdJQ1J5WlhOMWJIUTZJSFJ2TFc1MWJXSmxjaWdrZG1Gc2RXVXBYRzRnSUVCcFppQWthWE10ZDJsa2RHaGNiaUFnSUNBa2RXNXBkRG9nZFc1cGRDZ2tjbVZ6ZFd4MEtWeHVJQ0FnSUNScGJuUmxjblpoYkRvZ01GeHVJQ0FnSUVCcFppQnRZWEF0YUdGekxXdGxlU2drZFc1cGRDMXBiblJsY25aaGJITXNJQ1IxYm1sMEtWeHVJQ0FnSUNBZ0pHbHVkR1Z5ZG1Gc09pQnRZWEF0WjJWMEtDUjFibWwwTFdsdWRHVnlkbUZzY3l3Z0pIVnVhWFFwWEc0Z0lDQWdRR1ZzYzJWY2JpQWdJQ0FnSUVCM1lYSnVJRndpVlc1cmJtOTNiaUIxYm1sME9pQWpleVIxYm1sMGZWd2lYRzRnSUNBZ1FHbG1JQ1J2Y0dWeVlYUnZjaUE5UFNCY0lqNWNJbHh1SUNBZ0lDQWdKR1ZzWlcxbGJuUTZJRndpS0cxcGJpMTNhV1IwYURvZ0kzc2tjbVZ6ZFd4MElDc2dKR2x1ZEdWeWRtRnNmU2xjSWx4dUlDQWdJRUJsYkhObElHbG1JQ1J2Y0dWeVlYUnZjaUE5UFNCY0lqeGNJbHh1SUNBZ0lDQWdKR1ZzWlcxbGJuUTZJRndpS0cxaGVDMTNhV1IwYURvZ0kzc2tjbVZ6ZFd4MElDMGdKR2x1ZEdWeWRtRnNmU2xjSWx4dUlDQWdJRUJsYkhObElHbG1JQ1J2Y0dWeVlYUnZjaUE5UFNCY0lqNDlYQ0pjYmlBZ0lDQWdJQ1JsYkdWdFpXNTBPaUJjSWlodGFXNHRkMmxrZEdnNklDTjdKSEpsYzNWc2RIMHBYQ0pjYmlBZ0lDQkFaV3h6WlNCcFppQWtiM0JsY21GMGIzSWdQVDBnWENJOFBWd2lYRzRnSUNBZ0lDQWtaV3hsYldWdWREb2dYQ0lvYldGNExYZHBaSFJvT2lBamV5UnlaWE4xYkhSOUtWd2lYRzRnSUNBZ1FHVnNjMlZjYmlBZ0lDQWdJRUIzWVhKdUlGd2lJM3NrWlhod2NtVnpjMmx2Ym4wZ2FYTWdiV2x6YzJsdVp5QmhiaUJ2Y0dWeVlYUnZjaTVjSWx4dUlDQkFaV3h6WlZ4dUlDQWdJQ1JsYkdWdFpXNTBPaUFrY21WemRXeDBYRzRnSUVCeVpYUjFjbTRnSkdWc1pXMWxiblJjYmx4dUx5OWNiaUFnVW1Wd2JHRmpaWE1nZEdobElHWnBjbk4wSUc5alkzVnlaVzVqWlNCdlppQjBhR1VnYzNSeWFXNW5JSGRwZEdnZ2RHaGxJSEpsY0d4aFkyVnRaVzUwSUhOMGNtbHVaMXh1WEc0Z0lFQmhkWFJvYjNJZ1JXUjFZWEprYnlCQ2IzVmpZWE5jYmx4dUlDQkFjR0Z5WVcwZ2UxTjBjbWx1WjMwZ0lDQWtjMlZoY21Ob0lDQXRJRlJvWlNCMllXeDFaU0JpWldsdVp5QnpaV0Z5WTJobFpDQm1iM0pjYmlBZ1FIQmhjbUZ0SUh0VGRISnBibWQ5SUNBZ0pISmxjR3hoWTJVZ0lDMGdWR2hsSUhKbGNHeGhZMlZ0Wlc1MElITjBjbWx1WjF4dUlDQkFjR0Z5WVcwZ2UxTjBjbWx1WjMwZ0lDQWtjM1ZpYW1WamRDQWdMU0JVYUdVZ2MzUnlhVzVuSUdKbGFXNW5JSEpsY0d4aFkyVmtJRzl1WEc1Y2JpQWdRSEpsZEhWeWJpQjdVM1J5YVc1bklId2dUblZzYkgxY2JseHVYRzVBWm5WdVkzUnBiMjRnYzNSeUxYSmxjR3hoWTJVdFptbHljM1FvSkhObFlYSmphQ3dnSkhKbGNHeGhZMlVzSUNSemRXSnFaV04wS1Z4dUlDQWtjMlZoY21Ob0xYTjBZWEowT2lCemRISXRhVzVrWlhnb0pITjFZbXBsWTNRc0lDUnpaV0Z5WTJncFhHNGdJRUJwWmlBa2MyVmhjbU5vTFhOMFlYSjBJRDA5SUc1MWJHeGNiaUFnSUNCQWNtVjBkWEp1SUNSemRXSnFaV04wWEc0Z0lDUnlaWE4xYkhRNklITjBjaTF6YkdsalpTZ2tjM1ZpYW1WamRDd2dNQ3dnSkhObFlYSmphQzF6ZEdGeWRDQXRJREVwWEc0Z0lDUnlaWE4xYkhRNklDUnlaWE4xYkhRZ0t5QWtjbVZ3YkdGalpWeHVJQ0FrY21WemRXeDBPaUFrY21WemRXeDBJQ3NnYzNSeUxYTnNhV05sS0NSemRXSnFaV04wTENBa2MyVmhjbU5vTFhOMFlYSjBJQ3NnYzNSeUxXeGxibWQwYUNna2MyVmhjbU5vS1NsY2JpQWdRSEpsZEhWeWJpQWtjbVZ6ZFd4MFhHNWNiaTh2WEc0Z0lFTmhjM1J6SUdFZ2JuVnRZbVZ5SUhSdklHRWdjM1J5YVc1blhHNWNiaUFnUUdGMWRHaHZjaUJJZFdkdklFZHBjbUYxWkdWc1hHNWNiaUFnUUhCaGNtRnRJSHRUZEhKcGJtZDlJQ0FnSkhOMGNtbHVaeUFnTFNCT2RXMWlaWElnZEc4Z1ltVWdjR0Z5YzJWa1hHNWNiaUFnUUhKbGRIVnliaUI3VEdsemRDQjhJRTUxYkd4OVhHNWNia0JtZFc1amRHbHZiaUIwYnkxdWRXMWlaWElvSkhOMGNtbHVaeWxjYmlBZ0x5OGdUV0YwY21salpYTmNiaUFnSkhOMGNtbHVaM002SUZ3aU1Gd2lJRndpTVZ3aUlGd2lNbHdpSUZ3aU0xd2lJRndpTkZ3aUlGd2lOVndpSUZ3aU5sd2lJRndpTjF3aUlGd2lPRndpSUZ3aU9Wd2lYRzRnSUNSdWRXMWlaWEp6T2lBd0lERWdNaUF6SURRZ05TQTJJRGNnT0NBNVhHNGdJQzh2SUZKbGMzVnNkRnh1SUNBa2NtVnpkV3gwT2lBd1hHNGdJQ1JrYVhacFpHVnlPaUF3WEc0Z0lDUnRhVzUxY3pvZ1ptRnNjMlZjYmlBZ0x5OGdURzl2Y0dsdVp5QjBhSEp2ZFdkb0lHRnNiQ0JqYUdGeVlXTjBaWEp6WEc0Z0lFQm1iM0lnSkdrZ1puSnZiU0F4SUhSb2NtOTFaMmdnYzNSeUxXeGxibWQwYUNna2MzUnlhVzVuS1Z4dUlDQWdJQ1JqYUdGeVlXTjBaWEk2SUhOMGNpMXpiR2xqWlNna2MzUnlhVzVuTENBa2FTd2dKR2twWEc0Z0lDQWdKR2x1WkdWNE9pQnBibVJsZUNna2MzUnlhVzVuY3l3Z0pHTm9ZWEpoWTNSbGNpbGNiaUFnSUNCQWFXWWdKR05vWVhKaFkzUmxjaUE5UFNCY0lpMWNJbHh1SUNBZ0lDQWdKRzFwYm5Wek9pQjBjblZsWEc0Z0lDQWdRR1ZzYzJVZ2FXWWdKR05vWVhKaFkzUmxjaUE5UFNCY0lpNWNJbHh1SUNBZ0lDQWdKR1JwZG1sa1pYSTZJREZjYmlBZ0lDQkFaV3h6WlZ4dUlDQWdJQ0FnUUdsbUlIUjVjR1V0YjJZb0pHbHVaR1Y0S1NBaFBTQmNJbTUxYldKbGNsd2lYRzRnSUNBZ0lDQWdJQ1J5WlhOMWJIUTZJR2xtS0NSdGFXNTFjeXdnSkhKbGMzVnNkQ0FxSUMweExDQWtjbVZ6ZFd4MEtWeHVJQ0FnSUNBZ0lDQkFjbVYwZFhKdUlGOXNaVzVuZEdnb0pISmxjM1ZzZEN3Z2MzUnlMWE5zYVdObEtDUnpkSEpwYm1jc0lDUnBLU2xjYmlBZ0lDQWdJQ1J1ZFcxaVpYSTZJRzUwYUNna2JuVnRZbVZ5Y3l3Z0pHbHVaR1Y0S1Z4dUlDQWdJQ0FnUUdsbUlDUmthWFpwWkdWeUlEMDlJREJjYmlBZ0lDQWdJQ0FnSkhKbGMzVnNkRG9nSkhKbGMzVnNkQ0FxSURFd1hHNGdJQ0FnSUNCQVpXeHpaVnh1SUNBZ0lDQWdJQ0F2THlCTmIzWmxJSFJvWlNCa1pXTnBiV0ZzSUdSdmRDQjBieUIwYUdVZ2JHVm1kRnh1SUNBZ0lDQWdJQ0FrWkdsMmFXUmxjam9nSkdScGRtbGtaWElnS2lBeE1GeHVJQ0FnSUNBZ0lDQWtiblZ0WW1WeU9pQWtiblZ0WW1WeUlDOGdKR1JwZG1sa1pYSmNiaUFnSUNBZ0lDUnlaWE4xYkhRNklDUnlaWE4xYkhRZ0t5QWtiblZ0WW1WeVhHNGdJRUJ5WlhSMWNtNGdhV1lvSkcxcGJuVnpMQ0FrY21WemRXeDBJQ29nTFRFc0lDUnlaWE4xYkhRcFhHNWNia0JtZFc1amRHbHZiaUJmYkdWdVozUm9LQ1J1ZFcxaVpYSXNJQ1IxYm1sMEtWeHVJQ0FrYzNSeWFXNW5jem9nWENKd2VGd2lJRndpWTIxY0lpQmNJbTF0WENJZ1hDSWxYQ0lnWENKamFGd2lJRndpY0dsallWd2lJRndpYVc1Y0lpQmNJbVZ0WENJZ1hDSnlaVzFjSWlCY0luQjBYQ0lnWENKd1kxd2lJRndpWlhoY0lpQmNJblozWENJZ1hDSjJhRndpSUZ3aWRtMXBibHdpSUZ3aWRtMWhlRndpWEc0Z0lDUjFibWwwY3pvZ01YQjRJREZqYlNBeGJXMGdNU1VnTVdOb0lERndhV05oSURGcGJpQXhaVzBnTVhKbGJTQXhjSFFnTVhCaklERmxlQ0F4ZG5jZ01YWm9JREYyYldsdUlERjJiV0Y0WEc0Z0lDUnBibVJsZURvZ2FXNWtaWGdvSkhOMGNtbHVaM01zSUNSMWJtbDBLVnh1SUNCQWFXWWdkSGx3WlMxdlppZ2thVzVrWlhncElDRTlJRndpYm5WdFltVnlYQ0pjYmlBZ0lDQkFkMkZ5YmlCY0lsVnVhMjV2ZDI0Z2RXNXBkQ0JnSTNza2RXNXBkSDFnTGx3aVhHNGdJQ0FnUUhKbGRIVnliaUJtWVd4elpWeHVJQ0JBY21WMGRYSnVJQ1J1ZFcxaVpYSWdLaUJ1ZEdnb0pIVnVhWFJ6TENBa2FXNWtaWGdwWEc0aUxDSXFYRzRnSUcxaGNtZHBiam9nTUZ4dUlDQndZV1JrYVc1bk9pQXdYRzRnSUdKdmVDMXphWHBwYm1jNklHSnZjbVJsY2kxaWIzaGNibHh1SUNBbU9qcGhablJsY2l3Z0pqbzZZbVZtYjNKbFhHNGdJQ0FnWW05NExYTnBlbWx1WnpvZ1ltOXlaR1Z5TFdKdmVGeHVYRzVpYjJSNVhHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ1J6YkdGMFpWeHVJQ0J3WVdSa2FXNW5PaUF3WEc1Y2JtRmNiaUFnZEdWNGRDMWtaV052Y21GMGFXOXVPaUJ1YjI1bFhHNGdJR052Ykc5eU9pUm5jbVZsYmx4dUlDQW1PbWh2ZG1WeVhHNGdJQ0FnWTI5c2IzSTZKRzVwWjJoMFozSmxaVzVjYmlBZ0lDQjBaWGgwTFdSbFkyOXlZWFJwYjI0NklIVnVaR1Z5YkdsdVpWeHVYRzR2TDFKbGMyVjBJR1pzWlhoaWIzZ2djMlYwZEdsdVozTWdkMmhsYmlCeVpYTndiMjVrYVc1bklHSmxiRzkzSUdSbGMydDBiM0JjYmoxeVpYTndiMjV6YVhabExYTjBZV05yWEc0Z0lDdHRaV1JwWVNoY0lqdzlkR0ZpYkdWMFhDSXBYRzRnSUNBZ1pteGxlQzFtYkc5M09pQmpiMngxYlc1Y2JpSXNJaTh2SUZSb1pTQjBZV0pzWlhNZ2MzUmhjblFnZEc4Z2JHOXZheUJtZFdkc2VTQmhkQ0JoY205MWJtUWdOekF3Y0hnc0lITnZJR3hsZENkeklITjBZWEowSUhKbGMzQnZibVJwYm1jZ2RHaGxjbVZjYmlSMFlXSnNaUzFpY21WaGF6b2dYQ0k4UFRjd01IQjRYQ0pjYmx4dWRHRmliR1ZjYmx4MGJXRnlaMmx1T2lBd0lEQWdNUzQxWlcxY2JseDBkMmxrZEdnNklERXdNQ1ZjYmx4dWRISmNiaUFnWW05eVpHVnlMV0p2ZEhSdmJUb2dNWEI0SUhOdmJHbGtJQ1JqYkc5MVpGeHVYRzRnSUN0dFpXUnBZU2drZEdGaWJHVXRZbkpsWVdzcFhHNGdJQ0FnYldGeVoybHVMWFJ2Y0RvZ01DQWhhVzF3YjNKMFlXNTBPMXh1WEc0Z0lDQWdKanBtYVhKemRDMWphR2xzWkZ4dUlDQWdJQ0FnWW05eVpHVnlMWFJ2Y0RvZ01YQjRJSE52Ykdsa0lDUmpiRzkxWkZ4dVhHNGdJQ1k2Ym5Sb0xXTm9hV3hrS0dWMlpXNHBYRzRnSUNBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0pITjBaV0Z0WEc1Y2JuUmtYRzRnSUhabGNuUnBZMkZzTFdGc2FXZHVPaUIwYjNCY2JpQWdjR0ZrWkdsdVp6b2dNVEJ3ZUNBMWNIaGNibHh1SUNBcmJXVmthV0VvSkhSaFlteGxMV0p5WldGcktWeHVJQ0FnSUcxaGNtZHBiaTEwYjNBNklEQWdJV2x0Y0c5eWRHRnVkRHRjYmlBZ0lDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVmNiaUFnSUNCd1lXUmthVzVuTFd4bFpuUTZJRFF3SlZ4dVhHNGdJQ0FnSmpwaVpXWnZjbVZjYmlBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVnh1SUNBZ0lDQWdkRzl3T2lBMmNIaGNiaUFnSUNBZ0lHeGxablE2SURad2VGeHVJQ0FnSUNBZ2QybGtkR2c2SURRd0pWeHVJQ0FnSUNBZ2NHRmtaR2x1WnkxeWFXZG9kRG9nTVRCd2VGeHVJQ0FnSUNBZ2QyaHBkR1V0YzNCaFkyVTZJRzV2ZDNKaGNGeHVJQ0FnSUNBZ1ptOXVkQzEzWldsbmFIUTZJQ1J6WlcxcFltOXNaRnh1WEc1Y2JpQWdJQ0FtT201MGFDMXZaaTEwZVhCbEtERXBYRzRnSUNBZ0lDQW1PbUpsWm05eVpWeHVJQ0FnSUNBZ0lDQmpiMjUwWlc1ME9pQmNJa05wZEhrNklGd2lYRzRnSUNBZ0pqcHVkR2d0YjJZdGRIbHdaU2d5S1Z4dUlDQWdJQ0FnSmpwaVpXWnZjbVZjYmlBZ0lDQWdJQ0FnWTI5dWRHVnVkRG9nWENKQlpHUnlaWE56T2lCY0lseHVJQ0FnSUNZNmJuUm9MVzltTFhSNWNHVW9NeWxjYmlBZ0lDQWdJQ1k2WW1WbWIzSmxYRzRnSUNBZ0lDQWdJR052Ym5SbGJuUTZJRndpVUdodmJtVTZJRndpWEc1Y2JuUm9aV0ZrWEc0Z0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDUmpiRzkxWkZ4dVhHNGdJSFJ5WEc0Z0lDQWdMeTlJYVdSbElIUm9aU0IwYUdWaFpDQnBibVp2Y20xaGRHbHZiaUJwYmlCaGJpQmhZMk5sYzNOcFlteGxJSGRoZVZ4dVhHNGdJQ0FnSzIxbFpHbGhLQ1IwWVdKc1pTMWljbVZoYXlsY2JpQWdJQ0FnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlZ4dUlDQWdJQ0FnZEc5d09pQXRPVGs1T1hCNFhHNGdJQ0FnSUNCc1pXWjBPaUF0T1RrNU9YQjRYRzVjYmlBZ2RHaGNiaUFnSUNCbWIyNTBMWGRsYVdkb2REb2dKSE5sYldsaWIyeGtYRzRnSUNBZ2RHVjRkQzFoYkdsbmJqb2diR1ZtZEZ4dUlDQWdJSEJoWkdScGJtYzZJRFZ3ZUZ4dVhHNTBZV0pzWlN3Z2RHaGxZV1FzSUhSaWIyUjVMQ0IwYUN3Z2RHUXNJSFJ5WEc0Z0lDdHRaV1JwWVNna2RHRmliR1V0WW5KbFlXc3BYRzRnSUNBZ1pHbHpjR3hoZVRvZ1lteHZZMnRjYmlJc0lpNXVZWFl0YldsdWIzSmNiaUFnWkdsemNHeGhlVG9nWW14dlkydGNiaUFnZEdWNGRDMWhiR2xuYmpvZ2NtbG5hSFJjYmx4dUlDQW1YMTlqYjI1MFlXbHVaWEpjYmlBZ0lDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWtkMmhwZEdWY2JpQWdJQ0JpYjNKa1pYSXRiR1ZtZERvZ01YQjRJSE52Ykdsa0lDUmliM0prWlhKRGIyeHZjbHh1SUNBZ0lHSnZjbVJsY2kxeWFXZG9kRG9nTVhCNElITnZiR2xrSUNSaWIzSmtaWEpEYjJ4dmNseHVJQ0FnSUcxaGNtZHBiam9nTUNCaGRYUnZYRzRnSUNBZ2NHRmtaR2x1WnkxeWFXZG9kRG9nTVM0MWNtVnRYRzRnSUNBZ2NHRmtaR2x1WnkxMGIzQTZJREZ5WlcxY2JpQWdJQ0J0WVhndGQybGtkR2c2SURFeU1EQndlRnh1WEc0Z0lDQWdLMjFsWkdsaEtGd2lQRDEwWVdKc1pYUmNJaWxjYmlBZ0lDQWdJQzh2WkdsemNHeGhlVG9nYm05dVpWeHVJQ0FnSUNBZ2RHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeVhHNWNiaUFnYkdsY2JpQWdJQ0JrYVhOd2JHRjVPaUJwYm14cGJtVXRZbXh2WTJ0Y2JseHVJQ0FnSUNZNllXWjBaWEpjYmlBZ0lDQWdJR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYTF4dUlDQWdJQ0FnWTI5dWRHVnVkRG9nSnlCOElDZGNiaUFnSUNBZ0lHTnZiRzl5T2lBa1ozSmxaVzVjYmlBZ0lDQWdJRzFoY21kcGJqb2dNQ0F5Y0hnZ01DQXVNM0psYlZ4dVhHNGdJQ0FnSmpwdWRHZ3RZMmhwYkdRb015bGNibHh1SUNBZ0lDQWdKanBoWm5SbGNseHVJQ0FnSUNBZ0lDQmpiMjUwWlc1ME9pQW5JQ2RjYmx4dUlDQWdJQ1k2YkdGemRDMWphR2xzWkZ4dUlDQWdJQ0FnWVZ4dUlDQWdJQ0FnSUNCbWIyNTBMWGRsYVdkb2REcGliMnhrWEc0Z0lDQWdJQ0FnSUcxaGNtZHBiaTF5YVdkb2REb2dNVEJ3ZUZ4dVhHNGdJQ1pmWDJ4cGJtdGNiaUFnSUNCamIyeHZjam9nSkdOb1lYSmpiMkZzWEc0Z0lDQWdaR2x6Y0d4aGVUb2dhVzVzYVc1bExXSnNiMk5yWEc0Z0lDQWdjR0ZrWkdsdVp6b2dNQ0F1TTNKbGJTQXdYRzVjYmlBZ0lDQW1PbWh2ZG1WeVhHNGdJQ0FnSUNCamIyeHZjam9nSkdkeVpXVnVYRzVjYmk1emFYUmxMVzFoY0Z4dUlDQmhYRzRnSUNBZ1kyOXNiM0k2SkdOb1lYSmpiMkZzWEc0Z0lDQWdKanBvYjNabGNseHVJQ0FnSUNBZ1kyOXNiM0k2SUNSbmNtVmxibHh1SWl3aUx5OGdhR1ZoWkdWeUlITnBlbVZjYmlSb1pXRmtaWEl0YUdWcFoyaDBMVk02SURVd2NIaGNiaVJvWldGa1pYSXRhR1ZwWjJoMExVdzZJRGd3Y0hoY2JseHVMeThnVG1GMmFXZGhkR2x2YmlCemFYcGxYRzRrYm1GMkxYZHBaSFJvTFZNNklESTJNSEI0WEc1Y2JpOHZJRk5sWVhKamFDQnphWHBsWEc0a2MyVmhjbU5vTFdobGFXZG9kQzFUT2lBMU1IQjRYRzRrYzJWaGNtTm9MV2hsYVdkb2RDMU1PaUF4TWpCd2VGeHVYRzR2THlCNkxXbHVaR1Y0WEc0a1ltVnNiM2N0WTI5dWRHVnVkRG9nTVZ4dUpHTnZiblJsYm5RNklESmNiaVJoWW05MlpTMWpiMjUwWlc1ME9pQXpYRzVjYmk4dlhHNGdJRndpY0dodmJtVmNJam9nTXpJd2NIZ3NYRzRnSUZ3aWRHRmliR1YwWENJNklEYzJPSEI0TEZ4dUlDQmNJbVJsYzJ0MGIzQmNJam9nTVRBeU5IQjRLVnh1WEc1Y2JpOHZJR0p5WldGcmNHOXBiblJ6WEc0Z0lDUlRPaUEwT0RCd2VGeHVJQ0FrVFRvZ056WTRjSGhjYmlBZ0pFdzZJREV3TWpSd2VGeHVJQ0FrYldGNFREb2dKRXdnTFNBeGNIaGNibHh1WEc0dkwxeHVJQ0FyVFZFb2JXRjRUQ2xjYmlBZ0syMWxaR2xoS0Z3aVBHUmxjMnQwYjNCY0lpbGNibHh1THk5Y2JpQWdLMDFSS0V3cFhHNGdJQ3R0WldScFlTaGNJajVrWlhOcmRHOXdYQ0lwWEc1Y2JseHVMeThnYzNWd1pYSWdiR2xuYUhRZ1ozSnBaQ0F0SUdsMElIZHZjbXR6SUhkcGRHZ2dkR2hsSUM1alpDMWpiMjUwWVdsdVpYSWdZMnhoYzNNZ2FXNXphV1JsSUhOMGVXeGxMbk5qYzNOY2JseHVQV052YkhWdGJpZ2tjR1Z5WTJWdWRHRm5aU3dnSkdac2IyRjBMV1JwY21WamRHbHZiam9nYkdWbWRDbGNiaUFnZDJsa2RHZzZJREV3TUNVZ0tpQWtjR1Z5WTJWdWRHRm5aVnh1SUNCbWJHOWhkRG9nSkdac2IyRjBMV1JwY21WamRHbHZibHh1WEc0OVkyeGxZWEptYVhoY2JpQWdKanBoWm5SbGNseHVJQ0FnSUdOdmJuUmxiblE2SUZ3aVhDSmNiaUFnSUNCa2FYTndiR0Y1T2lCMFlXSnNaVnh1SUNBZ0lHTnNaV0Z5T2lCaWIzUm9YRzVjYm1FdVkyUXRibUYyTFdsMFpXMWNiaUFnSmpwb2IzWmxjbHh1SUNBZ0lHbHRaMXh1SUNBZ0lDQWdiM0JoWTJsMGVUb2dMamNnSVdsdGNHOXlkR0Z1ZEZ4dUlDQWdJR2d6WEc0Z0lDQWdJQ0JqYjJ4dmNqb2dKRzVwWjJoMFozSmxaVzRnSVdsdGNHOXlkR0Z1ZEZ4dVhHNWNiaTh2VUhKcGJXRnllU0J6ZEhsc1pWeHVYRzVjYm1KdlpIbGNiaUFnSzIxbFpHbGhLRndpUEdSbGMydDBiM0JjSWlsY2JpQWdJQ0F2THlCc1lYbHZkWFFnYldsNGFXNXpJR2x1YzJsa1pTQndZWEowYVdGc2N5QStJRjlzWVhsdmRYUXVjMk56YzF4dUlDQWdJQ1l1Ym1GMkxXOXVMV3hsWm5RdWIzWmxjbVpzYjNjdGFHbGtaR1Z1WEc0Z0lDQWdJQ0J2ZG1WeVpteHZkem9nYUdsa1pHVnVYRzVjYm1sdWNIVjBXM1I1Y0dVOVhDSnpaV0Z5WTJoY0lsMDZPaTF0Y3kxamJHVmhjbHh1SUNBdkx5QnlaVzF2ZG1WeklHTnNiM05sSUdsamIyNGdMU0JKUlZ4dUlDQmthWE53YkdGNU9pQnViMjVsWEc1Y2JtbHVjSFYwVzNSNWNHVTlYQ0p6WldGeVkyaGNJbDA2T2kxM1pXSnJhWFF0YzJWaGNtTm9MV1JsWTI5eVlYUnBiMjRzWEc1cGJuQjFkRnQwZVhCbFBWd2ljMlZoY21Ob1hDSmRPam90ZDJWaWEybDBMWE5sWVhKamFDMWpZVzVqWld3dFluVjBkRzl1TEZ4dWFXNXdkWFJiZEhsd1pUMWNJbk5sWVhKamFGd2lYVG82TFhkbFltdHBkQzF6WldGeVkyZ3RjbVZ6ZFd4MGN5MWlkWFIwYjI0c1hHNXBibkIxZEZ0MGVYQmxQVndpYzJWaGNtTm9YQ0pkT2pvdGQyVmlhMmwwTFhObFlYSmphQzF5WlhOMWJIUnpMV1JsWTI5eVlYUnBiMjVjYmlBZ1pHbHpjR3hoZVRvZ2JtOXVaVnh1WEc0dktpQXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFZ4dUlDcGNiaUFxVFdGcGJpQmpiMjF3YjI1bGJuUnpYRzRnS2x4dUlDb3RMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFNwY2JseHVMbU5rTFcxaGFXNHRZMjl1ZEdWdWRDeGNiaTVqWkMxdFlXbHVMV2hsWVdSbGNseHVJQ0F2S2lCR2IzSmpaU0JJWVhKa2QyRnlaU0JCWTJObGJHVnlZWFJwYjI0Z2FXNGdWMlZpUzJsMFhHNGdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsV2lnd0tWeHVJQ0IzYVd4c0xXTm9ZVzVuWlRvZ2RISmhibk5tYjNKdFhHNWNiaUFnZFd4Y2JpQWdJQ0JzYVhOMExYTjBlV3hsT2lCdWIyNWxYRzVjYmk1alpDMXRZV2x1TFdOdmJuUmxiblJjYmlBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabFhHNGdJSFJ5WVc1emFYUnBiMjQ2SUhSeVlXNXpabTl5YlNBd0xqTnpYRzVjYmlBZ0syMWxaR2xoS0Z3aVBHUmxjMnQwYjNCY0lpbGNiaUFnSUNBbUxtNWhkaTFwY3kxMmFYTnBZbXhsWEc0Z0lDQWdJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlZnb0xTUnVZWFl0ZDJsa2RHZ3RVeWxjYmx4dUlDQWdJQzV1WVhZdGIyNHRiR1ZtZENBbUxtNWhkaTFwY3kxMmFYTnBZbXhsWEc0Z0lDQWdJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlZnb0pHNWhkaTEzYVdSMGFDMVRLVnh1WEc0dVkyUXRiV0ZwYmkxb1pXRmtaWEpjYmlBZ1ptOXVkQzFtWVcxcGJIazZJQ1J6WlhKcFpseHVJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVZjYmlBZ2RISmhibk5wZEdsdmJqb2dkSEpoYm5ObWIzSnRJREF1TTNOY2JseHVJQ0FyYldWa2FXRW9YQ0k4WkdWemEzUnZjRndpS1Z4dUlDQWdJQ1l1Ym1GMkxXbHpMWFpwYzJsaWJHVmNiaUFnSUNBZ0lDOHZkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1ZZS0Mwa2JtRjJMWGRwWkhSb0xWTXBYRzRnSUNBZ0lDQjBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaVmdvTUNsY2JseHVJQ0FnSUM1dVlYWXRiMjR0YkdWbWRDQW1MbTVoZGkxcGN5MTJhWE5wWW14bFhHNGdJQ0FnSUNCMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpWZ29KRzVoZGkxM2FXUjBhQzFUS1Z4dVhHNHVZMlF0YldGcGJpMWpiMjUwWlc1MFhHNGdJQzh2UTBoQlRrZEZSRnh1SUNBdkwySmhZMnRuY205MWJtUTZJQ1JqYkc5MVpGeHVJQ0J0YVc0dGFHVnBaMmgwT2lBeE1EQjJhRnh1SUNCNkxXbHVaR1Y0T2lBa1kyOXVkR1Z1ZEZ4dVhHNHVZMlF0YldGcGJpMW9aV0ZrWlhKY2JpQWdhR1ZwWjJoME9pQWthR1ZoWkdWeUxXaGxhV2RvZEMxVFhHNGdJR0poWTJ0bmNtOTFibVE2SUNSM2FHbDBaVnh1SUNCNkxXbHVaR1Y0T2lBa1lXSnZkbVV0WTI5dWRHVnVkRnh1WEc0Z0lDOHZRMGhCVGtkRlJGeHVJQ0F2TDJKdmVDMXphR0ZrYjNjNklEQWdNWEI0SURWd2VDQnlaMkpoS0RFd01Dd3hNREFzTVRBd0xDQXVOU2xjYmlBZ1ltOXlaR1Z5TFdKdmRIUnZiVG9nTVhCNElITnZiR2xrSUNSamJHOTFaRnh1WEc0Z0lDNXVZWFl0YVhNdFptbDRaV1FnSmx4dUlDQWdJQzhxSUdGa1pDQXVibUYyTFdsekxXWnBlR1ZrSUdOc1lYTnpJSFJ2SUdKdlpIa2dhV1lnZVc5MUlIZGhiblFnWVNCbWFYaGxaQ0J1WVhacFoyRjBhVzl1SUc5dUlENGdNVEF5TkhCNFhHNGdJQ0FnY0c5emFYUnBiMjQ2SUdacGVHVmtYRzRnSUNBZ2RHOXdPaUF3WEc0Z0lDQWdiR1ZtZERvZ01GeHVJQ0FnSUhkcFpIUm9PaUF4TURBbFhHNWNiaUFnSzIxbFpHbGhLRndpUG1SbGMydDBiM0JjSWlsY2JpQWdJQ0JvWldsbmFIUTZJQ1JvWldGa1pYSXRhR1ZwWjJoMExVeGNiaUFnSUNBclkyeGxZWEptYVhoY2JseHVMbU5rTFd4dloyOWNiaUFnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsWEc0Z0lIUnZjRG9nTVRKd2VGeHVJQ0JzWldaME9pQTFKVnh1WEc0Z0lHbHRaMXh1SUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yWEc1Y2JpQWdLMjFsWkdsaEtGd2lQR1JsYzJ0MGIzQmNJaWxjYmlBZ0lDQXVibUYyTFc5dUxXeGxablFnSmx4dUlDQWdJQ0FnYkdWbWREb2dZWFYwYjF4dUlDQWdJQ0FnY21sbmFIUTZJRFVsWEc1Y2JpQWdLMjFsWkdsaEtGd2lQbVJsYzJ0MGIzQmNJaWxjYmlBZ0lDQjBiM0E2SURJMmNIaGNiaUFnSUNCc1pXWjBPaUEwWlcxY2JseHVMbU5rTFdobFlXUmxjaTFpZFhSMGIyNXpYRzRnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlZ4dUlDQmthWE53YkdGNU9pQnBibXhwYm1VdFlteHZZMnRjYmlBZ2RHOXdPaUF6Y0hoY2JpQWdjbWxuYUhRNklEVWxYRzVjYmlBZ2JHbGNiaUFnSUNCa2FYTndiR0Y1T2lCcGJteHBibVV0WW14dlkydGNibHh1SUNBcmJXVmthV0VvWENJOFpHVnphM1J2Y0Z3aUtWeHVJQ0FnSUM1dVlYWXRiMjR0YkdWbWRDQW1YRzRnSUNBZ0lDQnlhV2RvZERvZ1lYVjBiMXh1SUNBZ0lDQWdiR1ZtZERvZ05TVmNiaUFnSUNBZ0lHeHBYRzRnSUNBZ0lDQWdJR1pzYjJGME9pQnlhV2RvZEZ4dVhHNGdJQ3R0WldScFlTaGNJajVrWlhOcmRHOXdYQ0lwWEc0Z0lDQWdkRzl3T2lBeGNtVnRYRzRnSUNBZ2NtbG5hSFE2SURGeVpXMWNibHh1TG1Oa0xYTmxZWEpqYUMxMGNtbG5aMlZ5TEZ4dUxtTmtMVzVoZGkxMGNtbG5aMlZ5WEc0Z0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpWeHVJQ0JrYVhOd2JHRjVPaUJpYkc5amExeHVJQ0IzYVdSMGFEb2dORFJ3ZUZ4dUlDQm9aV2xuYUhRNklEUTBjSGhjYmlBZ2IzWmxjbVpzYjNjNklHaHBaR1JsYmx4dUlDQjNhR2wwWlMxemNHRmpaVG9nYm05M2NtRndYRzRnSUM4cUlHaHBaR1VnZEdWNGRGeHVJQ0JqYjJ4dmNqb2dkSEpoYm5Od1lYSmxiblJjYmlBZ2VpMXBibVJsZURvZ0pHRmliM1psTFdOdmJuUmxiblJjYmx4dUxtTmtMWE5sWVhKamFDMTBjbWxuWjJWeVhHNGdJQ1k2T21KbFptOXlaU3dnSmpvNllXWjBaWEpjYmlBZ0lDQXZLaUJ6WldGeVkyZ2dhV052Ymx4dUlDQWdJR052Ym5SbGJuUTZJQ2NuWEc0Z0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxYRzRnSUNBZ2RISmhibk5wZEdsdmJqb2diM0JoWTJsMGVTQXdMak56WEc0Z0lDQWdMeW9nUm05eVkyVWdTR0Z5WkhkaGNtVWdRV05qWld4bGNtRjBhVzl1SUdsdUlGZGxZa3RwZEZ4dUlDQWdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsV2lnd0tWeHVJQ0FnSUdKaFkydG1ZV05sTFhacGMybGlhV3hwZEhrNklHaHBaR1JsYmx4dVhHNGdJQ1k2T21KbFptOXlaVnh1SUNBZ0lDOHFJR3hsYm5OY2JpQWdJQ0IwYjNBNklERXhjSGhjYmlBZ0lDQnNaV1owT2lBeE1YQjRYRzRnSUNBZ2QybGtkR2c2SURFNGNIaGNiaUFnSUNCb1pXbG5hSFE2SURFNGNIaGNiaUFnSUNCaWIzSmtaWEl0Y21Ga2FYVnpPaUExTUNWY2JpQWdJQ0JpYjNKa1pYSTZJRE53ZUNCemIyeHBaQ0FrYm1sbmFIUm5jbVZsYmx4dVhHNGdJQ1k2T21GbWRHVnlYRzRnSUNBZ0x5b2dhR0Z1Wkd4bFhHNGdJQ0FnYUdWcFoyaDBPaUF6Y0hoY2JpQWdJQ0IzYVdSMGFEb2dPSEI0WEc0Z0lDQWdZbUZqYTJkeWIzVnVaRG9nSkc1cFoyaDBaM0psWlc1Y2JpQWdJQ0JpYjNSMGIyMDZJREUwY0hoY2JpQWdJQ0J5YVdkb2REb2dNVEZ3ZUZ4dUlDQWdJSFJ5WVc1elptOXliVG9nY205MFlYUmxLRFExWkdWbktWeHVJQ0J6Y0dGdVhHNGdJQ0FnTHlvZ1kyOXVkR0ZwYm1WeUlHWnZjaUIwYUdVZ1dDQnBZMjl1WEc0Z0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxYRzRnSUNBZ2FHVnBaMmgwT2lBeE1EQWxYRzRnSUNBZ2QybGtkR2c2SURFd01DVmNiaUFnSUNCMGIzQTZJREJjYmlBZ0lDQnNaV1owT2lBd1hHNGdJSE53WVc0Nk9tSmxabTl5WlN3Z2MzQmhiam82WVdaMFpYSmNiaUFnSUNBdktpQmpiRzl6WlNCcFkyOXVYRzRnSUNBZ1kyOXVkR1Z1ZERvZ0p5ZGNiaUFnSUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdWY2JpQWdJQ0JrYVhOd2JHRjVPaUJwYm14cGJtVXRZbXh2WTJ0Y2JpQWdJQ0JvWldsbmFIUTZJRE53ZUZ4dUlDQWdJSGRwWkhSb09pQXlNbkI0WEc0Z0lDQWdkRzl3T2lBMU1DVmNiaUFnSUNCdFlYSm5hVzR0ZEc5d09pQXRNbkI0WEc0Z0lDQWdiR1ZtZERvZ05UQWxYRzRnSUNBZ2JXRnlaMmx1TFd4bFpuUTZJQzB4TVhCNFhHNGdJQ0FnWW1GamEyZHliM1Z1WkRvZ0pHNXBaMmgwWjNKbFpXNWNiaUFnSUNCdmNHRmphWFI1T2lBd1hHNGdJQ0FnTHlvZ1JtOXlZMlVnU0dGeVpIZGhjbVVnUVdOalpXeGxjbUYwYVc5dUlHbHVJRmRsWWt0cGRGeHVJQ0FnSUhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbFdpZ3dLVnh1SUNBZ0lHSmhZMnRtWVdObExYWnBjMmxpYVd4cGRIazZJR2hwWkdSbGJseHVJQ0FnSUhSeVlXNXphWFJwYjI0NklHOXdZV05wZEhrZ01DNHpjeXdnZEhKaGJuTm1iM0p0SURBdU0zTmNibHh1SUNCemNHRnVPanBpWldadmNtVmNiaUFnSUNCMGNtRnVjMlp2Y20wNklISnZkR0YwWlNnME5XUmxaeWxjYmx4dUlDQnpjR0Z1T2pwaFpuUmxjbHh1SUNBZ0lIUnlZVzV6Wm05eWJUb2djbTkwWVhSbEtDMDBOV1JsWnlsY2JseHVJQ0FtTG5ObFlYSmphQzFwY3kxMmFYTnBZbXhsWEc0Z0lDQWdKam82WW1WbWIzSmxMQ0FtT2pwaFpuUmxjbHh1SUNBZ0lDQWdMeW9nYUdsa1pTQnpaV0Z5WTJnZ2FXTnZibHh1SUNBZ0lDQWdiM0JoWTJsMGVUb2dNRnh1SUNBZ0lITndZVzQ2T21KbFptOXlaU3dnYzNCaGJqbzZZV1owWlhKY2JpQWdJQ0FnSUM4cUlITm9iM2NnWTJ4dmMyVWdhV052Ymx4dUlDQWdJQ0FnYjNCaFkybDBlVG9nTVZ4dUlDQWdJSE53WVc0Nk9tSmxabTl5WlZ4dUlDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCeWIzUmhkR1VvTVRNMVpHVm5LVnh1SUNBZ0lITndZVzQ2T21GbWRHVnlYRzRnSUNBZ0lDQjBjbUZ1YzJadmNtMDZJSEp2ZEdGMFpTZzBOV1JsWnlsY2JseHVMbU5rTFc1aGRpMTBjbWxuWjJWeVhHNGdJQ1k2YUc5MlpYSmNiaUFnSUNBdkwwaHBaR1VnSjAxbGJuVW5JSGR2Y21RZ1ptOXlJR0ZqWTJWemMybGlhV3hwZEhrZ1NTQm9iM0JsWEc0Z0lDQWdZMjlzYjNJNklIUnlZVzV6Y0dGeVpXNTBYRzRnSUhOd1lXNHNJSE53WVc0Nk9tSmxabTl5WlN3Z2MzQmhiam82WVdaMFpYSmNiaUFnSUNBdktpQm9ZVzFpZFhKblpYSWdhV052YmlCcGJpQkRVMU5jYmlBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVmNiaUFnSUNCa2FYTndiR0Y1T2lCcGJteHBibVV0WW14dlkydGNiaUFnSUNCb1pXbG5hSFE2SUROd2VGeHVJQ0FnSUhkcFpIUm9PaUF5TkhCNFhHNGdJQ0FnWW1GamEyZHliM1Z1WkRvZ0pHNXBaMmgwWjNKbFpXNWNiaUFnYzNCaGJseHVJQ0FnSUM4cUlHeHBibVVnYVc0Z2RHaGxJR05sYm5SbGNseHVJQ0FnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlZ4dUlDQWdJSFJ2Y0RvZ05UQWxYRzRnSUNBZ2NtbG5hSFE2SURFd2NIaGNiaUFnSUNCdFlYSm5hVzR0ZEc5d09pQXRNbkI0WEc0Z0lDQWdkSEpoYm5OcGRHbHZiam9nWW1GamEyZHliM1Z1WkNBd0xqTnpJREF1TTNOY2JpQWdjM0JoYmpvNlltVm1iM0psTENCemNHRnVPanBoWm5SbGNseHVJQ0FnSUM4cUlHOTBhR1Z5SURJZ2JHbHVaWE5jYmlBZ0lDQmpiMjUwWlc1ME9pQW5KMXh1SUNBZ0lISnBaMmgwT2lBd1hHNGdJQ0FnTHlvZ1JtOXlZMlVnU0dGeVpIZGhjbVVnUVdOalpXeGxjbUYwYVc5dUlHbHVJRmRsWWt0cGRGeHVJQ0FnSUhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbFdpZ3dLVnh1SUNBZ0lHSmhZMnRtWVdObExYWnBjMmxpYVd4cGRIazZJR2hwWkdSbGJseHVJQ0FnSUhSeVlXNXpabTl5YlMxdmNtbG5hVzQ2SURBbElEVXdKVnh1SUNBZ0lIUnlZVzV6YVhScGIyNDZJSFJ5WVc1elptOXliU0F3TGpOeklEQXVNM05jYmlBZ2MzQmhiam82WW1WbWIzSmxYRzRnSUNBZ0x5b2diV1Z1ZFNCcFkyOXVJSFJ2Y0NCc2FXNWxYRzRnSUNBZ2RHOXdPaUF0Tm5CNFhHNGdJSE53WVc0Nk9tRm1kR1Z5WEc0Z0lDQWdMeW9nYldWdWRTQnBZMjl1SUdKdmRIUnZiU0JzYVc1bFhHNGdJQ0FnZEc5d09pQTJjSGhjYmlBZ0ppNXVZWFl0YVhNdGRtbHphV0pzWlZ4dUlDQWdJSE53WVc1Y2JpQWdJQ0FnSUM4cUlHaHBaR1VnYkdsdVpTQnBiaUIwYUdVZ1kyVnVkR1Z5WEc0Z0lDQWdJQ0JpWVdOclozSnZkVzVrT2lCeVoySmhLQ1J1YVdkb2RHZHlaV1Z1TENBd0tWeHVJQ0FnSUhOd1lXNDZPbUpsWm05eVpTd2djM0JoYmpvNllXWjBaWEpjYmlBZ0lDQWdJQzhxSUd0bFpYQWdkbWx6YVdKc1pTQnZkR2hsY2lBeUlHeHBibVZ6WEc0Z0lDQWdJQ0JpWVdOclozSnZkVzVrT2lCeVoySmhLQ1J1YVdkb2RHZHlaV1Z1TENBeEtWeHVJQ0FnSUhOd1lXNDZPbUpsWm05eVpWeHVJQ0FnSUNBZ2RISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVllLRFJ3ZUNrZ2RISmhibk5zWVhSbFdTZ3RNM0I0S1NCeWIzUmhkR1VvTkRWa1pXY3BYRzRnSUNBZ2MzQmhiam82WVdaMFpYSmNiaUFnSUNBZ0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxXQ2cwY0hncElIUnlZVzV6YkdGMFpWa29NbkI0S1NCeWIzUmhkR1VvTFRRMVpHVm5LVnh1SUNBcmJXVmthV0VvWENJK1pHVnphM1J2Y0Z3aUtWeHVJQ0FnSUdScGMzQnNZWGs2SUc1dmJtVmNibHh1WEc0dVkyUXRjSEpwYldGeWVTMXVZWFpjYmlBZ2NtbG5hSFE2SURCY2JseHVMeTlTYVdkb2RDQmhiR2xuYm1sdVp5QjBhR1VnYldWdWRTQnRaV0Z1Y3lCM1pTQm9ZWFpsSUhSdklHSjFiWEFnZEdobElHUnliM0JrYjNkdUlHSmhZMnNnYjNabGNpQjBieUJzYVc1bElIVndYRzR1WTJRdGNISnBiV0Z5ZVMxdVlYWWdkV3hjYmlBZ2NtbG5hSFE2SURJd2NIaGNibHh1TG1Oa0xYQnlhVzFoY25rdGJtRjJMRnh1TG1Oa0xYQnlhVzFoY25rdGJtRjJJSFZzWEc0Z0lIQnZjMmwwYVc5dU9pQm1hWGhsWkZ4dUlDQjBiM0E2SURCY2JpQWdMeTl5YVdkb2REb2dNRnh1SUNCb1pXbG5hSFE2SURFd01DVmNiaUFnZDJsa2RHZzZJQ1J1WVhZdGQybGtkR2d0VTF4dUlDQmlZV05yWjNKdmRXNWtPaUFrYm1sbmFIUm5jbVZsYmx4dUlDQnZkbVZ5Wm14dmR6b2dZWFYwYjF4dUlDQXRkMlZpYTJsMExXOTJaWEptYkc5M0xYTmpjbTlzYkdsdVp6b2dkRzkxWTJoY2JpQWdlaTFwYm1SbGVEb2dKR0psYkc5M0xXTnZiblJsYm5SY2JseHVJQ0F2S2lCR2IzSmpaU0JJWVhKa2QyRnlaU0JCWTJObGJHVnlZWFJwYjI0Z2FXNGdWMlZpUzJsMFhHNGdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsV2lnd0tWeHVJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlZnb01DbGNiaUFnZEhKaGJuTnBkR2x2YmpvZ2RISmhibk5tYjNKdElEQXVNM05jYmx4dUlDQmhYRzRnSUNBZ1pHbHpjR3hoZVRvZ1lteHZZMnRjYmlBZ0lDQm1iMjUwTFhOcGVtVTZJREV1TW5KbGJWeHVJQ0FnSUdobGFXZG9kRG9nTlRCd2VGeHVJQ0FnSUd4cGJtVXRhR1ZwWjJoME9pQTFNSEI0WEc0Z0lDQWdjR0ZrWkdsdVp6b2dNQ0F5TUhCNFhHNGdJQ0FnWTI5c2IzSTZJQ1IzYUdsMFpWeHVJQ0FnSUMxM1pXSnJhWFF0Wm05dWRDMXpiVzl2ZEdocGJtYzZJR0Z1ZEdsaGJHbGhjMlZrWEc0Z0lDQWdMVzF2ZWkxdmMzZ3RabTl1ZEMxemJXOXZkR2hwYm1jNklHZHlZWGx6WTJGc1pWeHVJQ0FnSUc5MlpYSm1iRzkzT2lCb2FXUmtaVzVjYmlBZ0lDQjBaWGgwTFc5MlpYSm1iRzkzT2lCbGJHeHBjSE5wYzF4dUlDQWdJSGRvYVhSbExYTndZV05sT2lCdWIzZHlZWEJjYmlBZ0lDQmliM0prWlhJdFltOTBkRzl0T2lBeGNIZ2djMjlzYVdRZ2JHbG5hSFJsYmlna2JtbG5hSFJuY21WbGJpd2dOU1VwWEc0Z0lDQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1ZhS0RBcFhHNGdJQ0FnZDJsc2JDMWphR0Z1WjJVNklIUnlZVzV6Wm05eWJTd2diM0JoWTJsMGVWeHVJQ0FnSUhSeVlXNXphWFJwYjI0NklIUnlZVzV6Wm05eWJTQXdMak56TENCdmNHRmphWFI1SURBdU0zTmNibHh1SUNBbUxtbHpMV2hwWkdSbGJseHVJQ0FnSUM4cUlITmxZMjl1WkdGeWVTQnVZWFpwWjJGMGFXOXVjeUJvYVdSa1pXNGdZbmtnWkdWbVlYVnNkRnh1SUNBZ0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxXQ2d4TURBbEtWeHVYRzRnSUNZdWJXOTJaWE10YjNWMElENGdiR2tnUGlCaFhHNGdJQ0FnTHlvZ2NIVnphQ0IwYUdVZ2JtRjJhV2RoZEdsdmJpQnBkR1Z0Y3lCMGJ5QjBhR1VnYkdWbWRDQXRJR0Z1WkNCc2IzZGxjaUJrYjNkdUlHOXdZV05wZEhrZ0xTQjNhR1Z1SUhObFkyOXVaR0Z5ZVNCdVlYWWdjMnhwWkdWeklHbHVYRzRnSUNBZ2RISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVllLQzB4TURBbEtWeHVJQ0FnSUc5d1lXTnBkSGs2SURCY2JseHVLMjFsWkdsaEtGd2lQR1JsYzJ0MGIzQmNJaWxjYmlBZ0xtNWhkaTF2Ymkxc1pXWjBJQzVqWkMxd2NtbHRZWEo1TFc1aGRpeGNiaUFnTG01aGRpMXZiaTFzWldaMElDNWpaQzF3Y21sdFlYSjVMVzVoZGlCMWJGeHVJQ0FnSUhKcFoyaDBPaUJoZFhSdlhHNGdJQ0FnYkdWbWREb2dNRnh1WEc1Y2JpNWpaQzF3Y21sdFlYSjVMVzVoZGx4dUlDQXVjMlZsTFdGc2JDQmhYRzRnSUNBZ0x5b2daR2xtWm1WeVpXNTBJSE4wZVd4bElHWnZjaUIwYUdVZ1UyVmxJR0ZzYkNCaWRYUjBiMjRnYjI0Z2JXOWlhV3hsSUdGdVpDQjBZV0pzWlhSY2JpQWdJQ0JqYjJ4dmNqb2dKR2R5WldWdVhHNWNiaUFnTG1Oa0xXNWhkaTFuWVd4c1pYSjVJQzVqWkMxdVlYWXRhWFJsYlN4Y2JpQWdMbU5rTFc1aGRpMXBZMjl1Y3lBdVkyUXRibUYyTFdsMFpXMWNiaUFnSUNBdktpQnBkR1Z0Y3lCM2FYUm9JSEJwWTNSMWNtVWdLRzl5SUdsamIyNHBJR0Z1WkNCMGFYUnNaVnh1SUNBZ0lHaGxhV2RvZERvZ09EQndlRnh1SUNBZ0lHeHBibVV0YUdWcFoyaDBPaUE0TUhCNFhHNWNiaUFnSUNCb00xeHVJQ0FnSUNBZ2IzWmxjbVpzYjNjNklHaHBaR1JsYmx4dUlDQWdJQ0FnZEdWNGRDMXZkbVZ5Wm14dmR6b2daV3hzYVhCemFYTmNibHh1SUNBdVkyUXRibUYyTFdkaGJHeGxjbmtnTG1Oa0xXNWhkaTFwZEdWdFhHNGdJQ0FnTHk5d1lXUmthVzVuTFd4bFpuUTZJRGt3Y0hoY2JseHVJQ0FnSUdsdFoxeHVJQ0FnSUNBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbFhHNGdJQ0FnSUNCa2FYTndiR0Y1T2lCaWJHOWphMXh1SUNBZ0lDQWdhR1ZwWjJoME9pQTBNSEI0WEc0Z0lDQWdJQ0IzYVdSMGFEb2dZWFYwYjF4dUlDQWdJQ0FnYkdWbWREb2dNakJ3ZUZ4dUlDQWdJQ0FnZEc5d09pQTFNQ1ZjYmlBZ0lDQWdJRzFoY21kcGJpMTBiM0E2SUMweU1IQjRYRzVjYmlBZ0lDQWdJQ3R0WldScFlTaGNJanhrWlhOcmRHOXdYQ0lwWEc0Z0lDQWdJQ0FnSUdScGMzQnNZWGs2SUc1dmJtVmNibHh1SUNBdVkyUXRibUYyTFdsamIyNXpJQzVqWkMxdVlYWXRhWFJsYlZ4dUlDQWdJSEJoWkdScGJtY3RiR1ZtZERvZ056VndlRnh1WEc0Z0lDQWdjRnh1SUNBZ0lDQWdZMjlzYjNJNklDUnVhV2RvZEdkeVpXVnVYRzRnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJREV1TTNKbGJWeHVJQ0FnSUNBZ0x5b2dhR2xrWlNCa1pYTmpjbWx3ZEdsdmJpQnZiaUJ6YldGc2JDQmtaWFpwWTJWelhHNGdJQ0FnSUNCa2FYTndiR0Y1T2lCdWIyNWxYRzVjYmlBZ0lDQW1PanBpWldadmNtVmNiaUFnSUNBZ0lDOHFJR2wwWlcwZ2FXTnZibHh1SUNBZ0lDQWdZMjl1ZEdWdWREb2dKeWRjYmlBZ0lDQWdJR1JwYzNCc1lYazZJR0pzYjJOclhHNGdJQ0FnSUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdWY2JpQWdJQ0FnSUd4bFpuUTZJREl3Y0hoY2JpQWdJQ0FnSUhSdmNEb2dOVEFsWEc0Z0lDQWdJQ0J0WVhKbmFXNHRkRzl3T2lBdE1qQndlRnh1SUNBZ0lDQWdkMmxrZEdnNklEUXdjSGhjYmlBZ0lDQWdJR2hsYVdkb2REb2dOREJ3ZUZ4dUlDQWdJQ0FnWW1GamEyZHliM1Z1WkMxeVpYQmxZWFE2SUc1dkxYSmxjR1ZoZEZ4dUlDQWdJQ0FnWW1GamEyZHliM1Z1WkMxd2IzTnBkR2x2YmpvZ1kyVnVkR1Z5SUdObGJuUmxjbHh1SUNBZ0lDQWdZbUZqYTJkeWIzVnVaQzF6YVhwbE9pQTBNSEI0SURRd2NIaGNibHh1SUNBZ0lDWXVhWFJsYlMweE9qcGlaV1p2Y21WY2JpQWdJQ0FnSUdKaFkydG5jbTkxYm1RdGFXMWhaMlU2SUhWeWJDaGNJaTlwYldGblpYTXZiR2x1WlMxcFkyOXVMVEV1YzNablhDSXBYRzRnSUNBZ0ppNXBkR1Z0TFRJNk9tSmxabTl5WlZ4dUlDQWdJQ0FnWW1GamEyZHliM1Z1WkMxcGJXRm5aVG9nZFhKc0tGd2lMMmx0WVdkbGN5OXNhVzVsTFdsamIyNHRNaTV6ZG1kY0lpbGNiaUFnSUNBbUxtbDBaVzB0TXpvNlltVm1iM0psWEc0Z0lDQWdJQ0JpWVdOclozSnZkVzVrTFdsdFlXZGxPaUIxY213b1hDSXZhVzFoWjJWekwyeHBibVV0YVdOdmJpMHpMbk4yWjF3aUtWeHVJQ0FnSUNZdWFYUmxiUzAwT2pwaVpXWnZjbVZjYmlBZ0lDQWdJR0poWTJ0bmNtOTFibVF0YVcxaFoyVTZJSFZ5YkNoY0lpOXBiV0ZuWlhNdmJHbHVaUzFwWTI5dUxUUXVjM1puWENJcFhHNGdJQ0FnSmk1cGRHVnRMVFU2T21KbFptOXlaVnh1SUNBZ0lDQWdZbUZqYTJkeWIzVnVaQzFwYldGblpUb2dkWEpzS0Z3aUwybHRZV2RsY3k5c2FXNWxMV2xqYjI0dE5TNXpkbWRjSWlsY2JpQWdJQ0FtTG1sMFpXMHROam82WW1WbWIzSmxYRzRnSUNBZ0lDQmlZV05yWjNKdmRXNWtMV2x0WVdkbE9pQjFjbXdvWENJdmFXMWhaMlZ6TDJ4cGJtVXRhV052YmkwMkxuTjJaMXdpS1Z4dUlDQWdJQ1l1YVhSbGJTMDNPanBpWldadmNtVmNiaUFnSUNBZ0lHSmhZMnRuY205MWJtUXRhVzFoWjJVNklIVnliQ2hjSWk5cGJXRm5aWE12YkdsdVpTMXBZMjl1TFRjdWMzWm5YQ0lwWEc0Z0lDQWdKaTVwZEdWdExUZzZPbUpsWm05eVpWeHVJQ0FnSUNBZ1ltRmphMmR5YjNWdVpDMXBiV0ZuWlRvZ2RYSnNLRndpTDJsdFlXZGxjeTlzYVc1bExXbGpiMjR0T0M1emRtZGNJaWxjYmx4dUlDQXJiV1ZrYVdFb1hDSThaR1Z6YTNSdmNGd2lLVnh1SUNBZ0lDOHFJR0o1SUdSbFptRjFiSFFnTG1Oa0xYQnlhVzFoY25rdGJtRjJJR2x6SUdocFpHUmxiaUF0SUhSeWFXTnJJR1p2Y2lCcFQxTWdaR1YyYVdObGN5QjNhR1Z5WlNCNWIzVWdZMkZ1SUhObFpTQjBhR1VnYm1GMmFXZGhkR2x2YmlCcFppQjViM1VnY0hWc2JDQmtiM2R1WEc0Z0lDQWdkbWx6YVdKcGJHbDBlVG9nYUdsa1pHVnVYRzRnSUNBZ2RISmhibk5wZEdsdmJqb2dkbWx6YVdKcGJHbDBlU0F3Y3lBd0xqTnpYRzRnSUNBZ0ppNXVZWFl0YVhNdGRtbHphV0pzWlZ4dUlDQWdJQ0FnZG1semFXSnBiR2wwZVRvZ2RtbHphV0pzWlZ4dUlDQWdJQ0FnZEhKaGJuTnBkR2x2YmpvZ2RtbHphV0pwYkdsMGVTQXdjeUF3YzF4dVhHNHJiV1ZrYVdFb1hDSStaR1Z6YTNSdmNGd2lLVnh1WEc0Z0lDNWpaQzF3Y21sdFlYSjVMVzVoZGx4dUlDQWdJSEJ2YzJsMGFXOXVPaUJ6ZEdGMGFXTmNiaUFnSUNCd1lXUmthVzVuT2lBd0lEVXdjSGdnTUNBd1hHNGdJQ0FnYldGeVoybHVMV3hsWm5RNklESXdjSGhjYmlBZ0lDQm9aV2xuYUhRNklHRjFkRzljYmlBZ0lDQjNhV1IwYURvZ01UQXdKVnh1SUNBZ0lDOHZabXh2WVhRNklISnBaMmgwWEc0Z0lDQWdiM1psY21ac2IzYzZJSFpwYzJsaWJHVmNiaUFnSUNCaVlXTnJaM0p2ZFc1a09pQjBjbUZ1YzNCaGNtVnVkRnh1SUNBZ0lDOHZkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlYRzVjYmlBZ0lDQXJZMnhsWVhKbWFYaGNibHh1SUNBZ0lDWXViVzkyWlhNdGIzVjBJRDRnYkdrZ1BpQmhYRzRnSUNBZ0lDQXZLaUJ5WlhObGRDQnRiMkpwYkdVZ2MzUjViR1ZjYmlBZ0lDQWdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsV0Nnd0tWeHVJQ0FnSUNBZ2IzQmhZMmwwZVRvZ01WeHVYRzRnSUNBZ2RXeGNiaUFnSUNBZ0lIQnZjMmwwYVc5dU9pQnpkR0YwYVdOY2JpQWdJQ0FnSUdobGFXZG9kRG9nWVhWMGIxeHVJQ0FnSUNBZ2QybGtkR2c2SUdGMWRHOWNiaUFnSUNBZ0lHSmhZMnRuY205MWJtUTZJSFJ5WVc1emNHRnlaVzUwWEc0Z0lDQWdJQ0J2ZG1WeVpteHZkem9nZG1semFXSnNaVnh1SUNBZ0lDQWdkR1Y0ZEMxaGJHbG5iam9nYkdWbWRGeHVJQ0FnSUNBZ2VpMXBibVJsZURvZ0pHRmliM1psTFdOdmJuUmxiblJjYmx4dUlDQWdJQ0FnSmk1cGN5MW9hV1JrWlc1Y2JpQWdJQ0FnSUNBZ0x5b2djbVZ6WlhRZ2JXOWlhV3hsSUhOMGVXeGxYRzRnSUNBZ0lDQWdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsV0Nnd0tWeHVYRzRnSUNBZ0lDQW1MbTF2ZG1WekxXOTFkQ0ErSUd4cElENGdZVnh1SUNBZ0lDQWdJQ0F2S2lCeVpYTmxkQ0J0YjJKcGJHVWdjM1I1YkdWY2JpQWdJQ0FnSUNBZ2RISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVllLREFwWEc0Z0lDQWdJQ0FnSUc5d1lXTnBkSGs2SURGY2JseHVJQ0FnSUM4dlZHOXdJRzVoZGlCcGRHVnRjMXh1SUNBZ0lENGdiR2xjYmlBZ0lDQWdJR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYTF4dUlDQWdJQ0FnTHk5bWJHOWhkRG9nYkdWbWRGeHVJQ0FnSUNBZ2JXRnlaMmx1TFd4bFpuUTZJQzQxY21WdFhHNWNiaUFnSUNBK0lHeHBJRDRnWVZ4dUlDQWdJQ0FnTHlvZ2JXRnBiaUJ1WVhacFoyRjBhVzl1SUdKMWRIUnZibk1nYzNSNWJHVmNiaUFnSUNBZ0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpWeHVJQ0FnSUNBZ1pHbHpjR3hoZVRvZ2FXNXNhVzVsTFdKc2IyTnJYRzRnSUNBZ0lDQm9aV2xuYUhRNklDUm9aV0ZrWlhJdGFHVnBaMmgwTFV4Y2JpQWdJQ0FnSUd4cGJtVXRhR1ZwWjJoME9pQWthR1ZoWkdWeUxXaGxhV2RvZEMxTVhHNGdJQ0FnSUNCd1lXUmthVzVuT2lBd1hHNGdJQ0FnSUNCamIyeHZjam9nSkc1cFoyaDBaM0psWlc1Y2JpQWdJQ0FnSUc5MlpYSm1iRzkzT2lCMmFYTnBZbXhsWEc0Z0lDQWdJQ0JpYjNKa1pYSXRZbTkwZEc5dE9pQnViMjVsWEc0Z0lDQWdJQ0IwY21GdWMybDBhVzl1T2lCamIyeHZjaUF3TGpOekxDQmliM2d0YzJoaFpHOTNJREF1TTNOY2JseHVJQ0FnSUNBZ0pqcG9iM1psY2x4dUlDQWdJQ0FnSUNCamIyeHZjam9nSkdkeVpXVnVYRzRnSUNBZ0lDQWdJSFJsZUhRdFpHVmpiM0poZEdsdmJqb2dibTl1WlZ4dUlDQWdJQ0FnSmk1elpXeGxZM1JsWkZ4dUlDQWdJQ0FnSUNCamIyeHZjam9nSkdkeVpXVnVYRzRnSUNBZ0lDQWdJR0p2ZUMxemFHRmtiM2M2SUdsdWMyVjBJREFnTFRKd2VDQXdJQ1JuY21WbGJseHVYRzRnSUNBZ0xtZHZMV0poWTJzc0lDNXpaV1V0WVd4c1hHNGdJQ0FnSUNCa2FYTndiR0Y1T2lCdWIyNWxYRzVjYmlBZ0lDQXVZMlF0YzJWamIyNWtZWEo1TFc1aGRpeGNiaUFnSUNBdVkyUXRibUYyTFdkaGJHeGxjbmtzWEc0Z0lDQWdMbU5rTFc1aGRpMXBZMjl1YzF4dUlDQWdJQ0FnTHlvZ1pISnZjR1J2ZDI0Z2JXVnVkU0J6ZEhsc1pWeHVJQ0FnSUNBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbFhHNGdJQ0FnSUNCMGIzQTZJQ1JvWldGa1pYSXRhR1ZwWjJoMExVeGNiaUFnSUNBZ0lDOHZkMmxrZEdnNklERXdNSFozWEc0Z0lDQWdJQ0IzYVdSMGFEb2dNVEF3SlZ4dUlDQWdJQ0FnWW1GamEyZHliM1Z1WkRvZ0pIZG9hWFJsWEc0Z0lDQWdJQ0F2TDBOSVFVNUhSVVJjYmlBZ0lDQWdJQzh2Y0dGa1pHbHVaem9nTkRod2VDQTJOSEI0SURFek1IQjRYRzRnSUNBZ0lDQndZV1JrYVc1bk9pQXljbVZ0WEc0Z0lDQWdJQ0JpYjNndGMyaGhaRzkzT2lCcGJuTmxkQ0F3SURGd2VDQXdJQ1JqYkc5MVpDd2dNQ0F6Y0hnZ05uQjRJSEpuWW1Fb0l6QXdNQ3dnTUM0d05TbGNiaUFnSUNBZ0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxXQ2d3S1Z4dUlDQWdJQ0FnSzJOc1pXRnlabWw0WEc1Y2JpQWdJQ0FnSUhSeVlXNXphWFJwYjI0NklHOXdZV05wZEhrZ0xqTnpJREJ6TENCMmFYTnBZbWxzYVhSNUlEQnpJREJ6WEc1Y2JpQWdJQ0FnSUNZdWFYTXRhR2xrWkdWdVhHNGdJQ0FnSUNBZ0lHOXdZV05wZEhrNklEQmNiaUFnSUNBZ0lDQWdkbWx6YVdKcGJHbDBlVG9nYUdsa1pHVnVYRzRnSUNBZ0lDQWdJSFJ5WVc1emFYUnBiMjQ2SUc5d1lXTnBkSGtnTGpOeklEQnpMQ0IyYVhOcFltbHNhWFI1SURCeklDNHpjMXh1WEc0Z0lDQWdJQ0ErSUM1elpXVXRZV3hzWEc0Z0lDQWdJQ0FnSUM4cUlIUm9hWE1nYVhNZ2RHaGxJRUpKUnlCVFpXVWdZV3hzSUdKMWRIUnZiaUJoZENCMGFHVWdZbTkwZEc5dElHOW1JSFJvWlNCa2NtOXdaRzkzYmlCdFpXNTFYRzRnSUNBZ0lDQWdJR1JwYzNCc1lYazZJR0pzYjJOclhHNGdJQ0FnSUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpWeHVJQ0FnSUNBZ0lDQnNaV1owT2lBd1hHNGdJQ0FnSUNBZ0lHSnZkSFJ2YlRvZ01GeHVJQ0FnSUNBZ0lDQm9aV2xuYUhRNklEZ3djSGhjYmlBZ0lDQWdJQ0FnZDJsa2RHZzZJREV3TUNWY2JpQWdJQ0FnSUNBZ2IzWmxjbVpzYjNjNklHaHBaR1JsYmx4dUlDQWdJQ0FnSUNBdktpQnlaWE5sZENCemIyMWxJR2x1YUdWeWFYUmxaQ0J6ZEhsc1pWeHVJQ0FnSUNBZ0lDQnRZWEpuYVc0NklEQmNiaUFnSUNBZ0lDQWdjR0ZrWkdsdVp6b2dNRnh1WEc0Z0lDQWdJQ0FnSUdGY2JpQWdJQ0FnSUNBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVmNiaUFnSUNBZ0lDQWdJQ0IzYVdSMGFEb2dNVEF3SlZ4dUlDQWdJQ0FnSUNBZ0lHaGxhV2RvZERvZ01UQXdKVnh1SUNBZ0lDQWdJQ0FnSUhSdmNEb2dNRnh1SUNBZ0lDQWdJQ0FnSUd4bFpuUTZJREJjYmlBZ0lDQWdJQ0FnSUNCbWIyNTBMWE5wZW1VNklESXVNbkpsYlZ4dUlDQWdJQ0FnSUNBZ0lHWnZiblF0ZDJWcFoyaDBPaUJpYjJ4a1hHNGdJQ0FnSUNBZ0lDQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlYRzRnSUNBZ0lDQWdJQ0FnYkdsdVpTMW9aV2xuYUhRNklEZ3djSGhjYmlBZ0lDQWdJQ0FnSUNCaWIzSmtaWEl0ZEc5d09pQXhjSGdnYzI5c2FXUWdKR05zYjNWa1hHNGdJQ0FnSUNBZ0lDQWdMeW9nY21WelpYUWdjMjl0WlNCcGJtaGxjbWwwWldRZ2MzUjViR1ZjYmlBZ0lDQWdJQ0FnSUNCaWIzSmtaWEl0WW05MGRHOXRPaUJ1YjI1bFhHNGdJQ0FnSUNBZ0lDQWdiV0Z5WjJsdU9pQXdYRzRnSUNBZ0lDQWdJQ0FnY0dGa1pHbHVaem9nTUZ4dUlDQWdJQ0FnSUNBZ0lIUnlZVzV6YVhScGIyNDZJR052Ykc5eUlEQXVNbk1zSUdKaFkydG5jbTkxYm1RZ01DNHljeXdnWW05eVpHVnlJREF1TW5OY2JseHVJQ0FnSUNBZ0lDQWdJQ1k2YUc5MlpYSmNiaUFnSUNBZ0lDQWdJQ0FnSUdKaFkydG5jbTkxYm1RNklDUnVhV2RvZEdkeVpXVnVYRzRnSUNBZ0lDQWdJQ0FnSUNCaWIzSmtaWEl0WTI5c2IzSTZJQ1J1YVdkb2RHZHlaV1Z1WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ0pIZG9hWFJsWEc1Y2JpQWdJQ0F1WTJRdGMyVmpiMjVrWVhKNUxXNWhkbHh1WEc0Z0lDQWdJQ0ErSUd4cFhHNGdJQ0FnSUNBZ0lDOHFJR05vWVc1blpTQjBhR1VnYUdWcFoyaDBJR0ZqWTI5eVpHbHVaeUIwYnlCNWIzVnlJRzVsWldSeklDMGdlVzkxSUdOaGJpQmxkbVZ1SUhObGRDQm9aV2xuYUhRNklHRjFkRzljYmlBZ0lDQWdJQ0FnYUdWcFoyaDBPaUF6TkRCd2VGeHVJQ0FnSUNBZ0lDQXZLaUJvWlhKbElIbHZkU0J6WlhRZ2RHaGxJRzUxYldKbGNpQnZaaUJqYjJ4MWJXNXpJQzBnZFhObElIZHBaSFJvSUhCbGNtTmxiblJoWjJWY2JpQWdJQ0FnSUNBZ0syTnZiSFZ0Ymlnd0xqSXpLVnh1SUNBZ0lDQWdJQ0F2THlCelpXVWdjR0Z5ZEdsaGJITWdQaUJmYkdGNWIzVjBMbk5qYzNOY2JpQWdJQ0FnSUNBZ2JXRnlaMmx1TFhKcFoyaDBPaUF5TGpZMkpWeHVJQ0FnSUNBZ0lDQmliM0prWlhJdGNtbG5hSFE2SURGd2VDQnpiMnhwWkNBa1kyeHZkV1JjYmlBZ0lDQWdJQ0FnYjNabGNtWnNiM2M2SUdocFpHUmxibHh1SUNBZ0lDQWdJQ0J2ZG1WeVpteHZkeTE0T2lCb2FXUmtaVzVjYmlBZ0lDQWdJQ0FnYjNabGNtWnNiM2N0ZVRvZ1lYVjBiMXh1SUNBZ0lDQWdJQ0F0ZDJWaWEybDBMVzkyWlhKbWJHOTNMWE5qY205c2JHbHVaem9nZEc5MVkyaGNibHh1SUNBZ0lDQWdJQ0FtT201MGFDMWphR2xzWkNnMGJpc3lLVnh1SUNBZ0lDQWdJQ0FnSUM4cUlDc3lJR0psWTJGMWMyVWdkMlVnYUdGMlpTQXlJR3hwYzNRZ2FYUmxiWE1nZDJsMGFDQmthWE53YkdGNU9tNXZibVZjYmlBZ0lDQWdJQ0FnSUNCdFlYSm5hVzR0Y21sbmFIUTZJREJjYmlBZ0lDQWdJQ0FnSUNCaWIzSmtaWEl0Y21sbmFIUTZJRzV2Ym1WY2JseHVJQ0FnSUNBZ0lDQStJR0ZjYmlBZ0lDQWdJQ0FnSUNBdktpQnpaV052Ym1SaGNua2dibUYySUhScGRHeGxYRzRnSUNBZ0lDQWdJQ0FnWTI5c2IzSTZJQ1JuY21WbGJseHVJQ0FnSUNBZ0lDQWdJR1p2Ym5RdGQyVnBaMmgwT2lCaWIyeGtYRzRnSUNBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lBeExqWnlaVzFjYmlBZ0lDQWdJQ0FnSUNCdFlYSm5hVzR0WW05MGRHOXRPaUF1Tm1WdFhHNWNiaUFnSUNBZ0lHRmNiaUFnSUNBZ0lDQWdhR1ZwWjJoME9pQXpNSEI0WEc0Z0lDQWdJQ0FnSUd4cGJtVXRhR1ZwWjJoME9pQXpNSEI0WEc0Z0lDQWdJQ0FnSUhCaFpHUnBibWM2SURBZ01UZ2xJREFnTUZ4dUlDQWdJQ0FnSUNCamIyeHZjam9nSkc1cFoyaDBaM0psWlc1Y2JpQWdJQ0FnSUNBZ1ltOXlaR1Z5TFdKdmRIUnZiVG9nYm05dVpWeHVJQ0FnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJREV1TkhKbGJWeHVYRzRnSUNBZ0lDQWdJQ1k2YUc5MlpYSmNiaUFnSUNBZ0lDQWdJQ0JqYjJ4dmNqb2dKR2R5WldWdVhHNWNiaUFnSUNBZ0lIVnNYRzRnSUNBZ0lDQWdJQzhxSUVadmNtTmxJRWhoY21SM1lYSmxJRUZqWTJWc1pYSmhkR2x2YmlCcGJpQlhaV0pMYVhSY2JpQWdJQ0FnSUNBZ2RISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVmFLREFwWEc1Y2JpQWdJQ0FnSUhWc0lIVnNYRzRnSUNBZ0lDQWdJQzhxSUhSbGNuUnBZWEo1SUc1aGRtbG5ZWFJwYjI1Y2JpQWdJQ0FnSUNBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbFhHNGdJQ0FnSUNBZ0lIUnZjRG9nTUZ4dUlDQWdJQ0FnSUNCc1pXWjBPaUF3WEc0Z0lDQWdJQ0FnSUdobGFXZG9kRG9nTVRBd0pWeHVJQ0FnSUNBZ0lDQjNhV1IwYURvZ01UQXdKVnh1WEc0Z0lDQWdJQ0FnSUNZdWFYTXRhR2xrWkdWdVhHNGdJQ0FnSUNBZ0lDQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1ZZS0RFd01DVXBYRzVjYmlBZ0lDQWdJQ0FnTG1kdkxXSmhZMnRjYmlBZ0lDQWdJQ0FnSUNCa2FYTndiR0Y1T2lCaWJHOWphMXh1WEc0Z0lDQWdJQ0FnSUNBZ1lWeHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5c2IzSTZJSFJ5WVc1emNHRnlaVzUwWEc1Y2JpQWdJQ0FnSUNBZ0xuTmxaUzFoYkd4Y2JpQWdJQ0FnSUNBZ0lDQmthWE53YkdGNU9pQmliRzlqYTF4dVhHNGdJQ0FnSUNBdWJXOTJaWE10YjNWMElENGdiR2tnUGlCaFhHNGdJQ0FnSUNBZ0lDOHFJSEIxYzJnZ2RHaGxJRzVoZG1sbllYUnBiMjRnYVhSbGJYTWdkRzhnZEdobElHeGxablFnTFNCaGJtUWdiRzkzWlhJZ1pHOTNiaUJ2Y0dGamFYUjVJQzBnZDJobGJpQjBaWEowYVdGeWVTQnVZWFlnYzJ4cFpHVnpJR2x1WEc0Z0lDQWdJQ0FnSUhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbFdDZ3RNVEF3SlNsY2JseHVJQ0FnSUM1alpDMXVZWFl0WjJGc2JHVnllVnh1SUNBZ0lDQWdZbTk0TFhOb1lXUnZkem9nTUNBMWNIZ2dOWEI0SUhKblltRW9NVEF3TERFd01Dd3hNREFzTGpNcFhHNWNiaUFnSUNBZ0lHeHBYRzRnSUNBZ0lDQWdJQzhxSUhObGRDQm9aWEpsSUc1MWJXSmxjaUJ2WmlCamIyeDFiVzV6SUMwZ2RYTmxJSGRwWkhSb0lIQmxjbU5sYm5SaFoyVmNiaUFnSUNBZ0lDQWdMeThyWTI5c2RXMXVLREF1TWpJcFhHNGdJQ0FnSUNBZ0lDOHZiV0Z5WjJsdU9pQXdJRFFsSURRd2NIZ2dNRnh1WEc0Z0lDQWdJQ0FnSUdac2IyRjBPaUJzWldaMFhHNGdJQ0FnSUNBZ0lIZHBaSFJvT2lBeU5TVmNiaUFnSUNBZ0lDQWdjR0ZrWkdsdVp6b2dNWEpsYlZ4dVhHNGdJQ0FnSUNBZ0lDWTZiblJvTFdOb2FXeGtLRFJ1S3pJcFhHNGdJQ0FnSUNBZ0lDQWdMeW9nS3pJZ1ltVmpZWFZ6WlNCM1pTQm9ZWFpsSUhSM2J5QmhaR1JwZEdsdmJtRnNJR3hwYzNRZ2FYUmxiWE1nZDJsMGFDQmthWE53YkdGNU9tNXZibVZjYmlBZ0lDQWdJQ0FnSUNBdkwyMWhjbWRwYmkxeWFXZG9kRG9nTUZ4dVhHNGdJQ0FnSUNBdVkyUXRibUYyTFdsMFpXMWNiaUFnSUNBZ0lDQWdZbTl5WkdWeUxXSnZkSFJ2YlRvZ2JtOXVaVnh1SUNBZ0lDQWdJQ0J3WVdSa2FXNW5PaUF3WEc0Z0lDQWdJQ0FnSUdobGFXZG9kRG9nWVhWMGIxeHVJQ0FnSUNBZ0lDQnNhVzVsTFdobGFXZG9kRG9nTVM0eVhHNWNiaUFnSUNBZ0lDQWdhVzFuWEc0Z0lDQWdJQ0FnSUNBZ2NHOXphWFJwYjI0NklITjBZWFJwWTF4dUlDQWdJQ0FnSUNBZ0lHMWhjbWRwYmkxMGIzQTZJREJjYmlBZ0lDQWdJQ0FnSUNCb1pXbG5hSFE2SUdGMWRHOWNiaUFnSUNBZ0lDQWdJQ0IzYVdSMGFEb2dNVEF3SlZ4dUlDQWdJQ0FnSUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2SUM0MmNtVnRYRzVjYmlBZ0lDQWdJQ0FnYUROY2JpQWdJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ0pHZHlaV1Z1WEc0Z0lDQWdJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQXVPWEpsYlZ4dUlDQWdJQ0FnSUNBZ0lIQmhaR1JwYm1jNklEQWdMalJ5WlcxY2JpQWdJQ0FnSUNBZ0lDQm1iMjUwTFhkbGFXZG9kRG9nYm05eWJXRnNYRzVjYmlBZ0lDQXVZMlF0Ym1GMkxXbGpiMjV6WEc1Y2JpQWdJQ0FnSUd4cFhHNGdJQ0FnSUNBZ0lDOHFJSE5sZENCb1pYSmxJRzUxYldKbGNpQnZaaUJqYjJ4MWJXNXpJQzBnZFhObElIZHBaSFJvSUhCbGNtTmxiblJoWjJWY2JpQWdJQ0FnSUNBZ0syTnZiSFZ0Ymlnd0xqTXlLVnh1SUNBZ0lDQWdJQ0J0WVhKbmFXNDZJREFnTWlVZ01qQndlQ0F3WEc0Z0lDQWdJQ0FnSUNZNmJuUm9MV05vYVd4a0tETnVLeklwWEc0Z0lDQWdJQ0FnSUNBZ0x5b2dLeklnWW1WallYVnpaU0IzWlNCb1lYWmxJSFIzYnlCaFpHUnBkR2x2Ym1Gc0lHeHBjM1FnYVhSbGJYTWdkMmwwYUNCa2FYTndiR0Y1T201dmJtVmNiaUFnSUNBZ0lDQWdJQ0J0WVhKbmFXNHRjbWxuYUhRNklEQmNiaUFnSUNBZ0lDNWpaQzF1WVhZdGFYUmxiVnh1SUNBZ0lDQWdJQ0JpYjNKa1pYSXRZbTkwZEc5dE9pQnViMjVsWEc0Z0lDQWdJQ0FnSUdobGFXZG9kRG9nT0RCd2VGeHVJQ0FnSUNBZ0lDQnNhVzVsTFdobGFXZG9kRG9nTVM0eVhHNGdJQ0FnSUNBZ0lIQmhaR1JwYm1jNklESTBjSGdnTUNBd0lEZzFjSGhjYmlBZ0lDQWdJQ0FnSmpwb2IzWmxjbHh1SUNBZ0lDQWdJQ0FnSUdKaFkydG5jbTkxYm1RNklHeHBaMmgwWlc0b0pHTnNiM1ZrTENBNEpTbGNiaUFnSUNBZ0lDQWdhRE5jYmlBZ0lDQWdJQ0FnSUNCamIyeHZjam9nSkdkeVpXVnVYRzRnSUNBZ0lDQWdJQ0FnWm05dWRDMTNaV2xuYUhRNklHSnZiR1JjYmlBZ0lDQWdJQ0FnY0Z4dUlDQWdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yWEc0Z0lDQWdJQ0FnSUNZNk9tSmxabTl5WlZ4dUlDQWdJQ0FnSUNBZ0lHeGxablE2SURJMWNIaGNibHh1WEc0dWFHRnpMV05vYVd4a2NtVnVJRDRnWVN3Z0xtZHZMV0poWTJzZ1lWeHVJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVZjYmlBZ0pqbzZZbVZtYjNKbExDQW1PanBoWm5SbGNseHVJQ0FnSUM4cUlHRnljbTkzSUdsamIyNGdhVzRnUTFOVElDMGdabTl5SUdWc1pXMWxiblFnZDJsMGFDQnVaWE4wWldRZ2RXNXZjbVJsY21Wa0lHeHBjM1J6WEc0Z0lDQWdZMjl1ZEdWdWREb2dKeWRjYmlBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVmNiaUFnSUNCMGIzQTZJRFV3SlZ4dUlDQWdJRzFoY21kcGJpMTBiM0E2SUMweGNIaGNiaUFnSUNCa2FYTndiR0Y1T2lCcGJteHBibVV0WW14dlkydGNiaUFnSUNCb1pXbG5hSFE2SURKd2VGeHVJQ0FnSUhkcFpIUm9PaUF4TUhCNFhHNGdJQ0FnWW1GamEyZHliM1Z1WkRvZ2JHbG5hSFJsYmlna2JtbG5hSFJuY21WbGJpd2dNVEFsS1Z4dVhHNGdJQ0FnWW1GamEyWmhZMlV0ZG1semFXSnBiR2wwZVRvZ2FHbGtaR1Z1WEc0Z0lDWTZPbUpsWm05eVpWeHVJQ0FnSUhSeVlXNXpabTl5YlRvZ2NtOTBZWFJsS0RRMVpHVm5LVnh1SUNBbU9qcGhablJsY2x4dUlDQWdJSFJ5WVc1elptOXliVG9nY205MFlYUmxLQzAwTldSbFp5bGNiaUFnSzIxbFpHbGhLRndpUG1SbGMydDBiM0JjSWlsY2JpQWdJQ0FtT2pwaVpXWnZjbVVzSUNZNk9tRm1kR1Z5WEc0Z0lDQWdJQ0JpWVdOclozSnZkVzVrT2lCa1lYSnJaVzRvSkdOc2IzVmtMQ0F4TUNVcFhHNGdJQ0FnSmpwb2IzWmxjam82WW1WbWIzSmxMQ0FtT21odmRtVnlPanBoWm5SbGNseHVJQ0FnSUNBZ1ltRmphMmR5YjNWdVpEb2dKR2R5WldWdVhHNWNiaTVvWVhNdFkyaHBiR1J5Wlc0Z1BpQmhYRzRnSUhCaFpHUnBibWN0Y21sbmFIUTZJRFF3Y0hoY2JpQWdKam82WW1WbWIzSmxMQ0FtT2pwaFpuUmxjbHh1SUNBZ0lDOHFJR0Z5Y205M0lHZHZaWE1nYjI0Z2RHaGxJSEpwWjJoMElITnBaR1VnTFNCamFHbHNaSEpsYmlCdVlYWnBaMkYwYVc5dVhHNGdJQ0FnY21sbmFIUTZJREl3Y0hoY2JpQWdJQ0IwY21GdWMyWnZjbTB0YjNKcFoybHVPaUE1Y0hnZ05UQWxYRzVjYmk1alpDMXdjbWx0WVhKNUxXNWhkaUF1WjI4dFltRmpheUJoWEc0Z0lIQmhaR1JwYm1jdGJHVm1kRG9nTkRCd2VGeHVJQ0FtT2pwaVpXWnZjbVVzSUNZNk9tRm1kR1Z5WEc0Z0lDQWdMeW9nWVhKeWIzY2daMjlsY3lCdmJpQjBhR1VnYkdWbWRDQnphV1JsSUMwZ1oyOGdZbUZqYXlCaWRYUjBiMjVjYmlBZ0lDQnNaV1owT2lBeU1IQjRYRzRnSUNBZ2RISmhibk5tYjNKdExXOXlhV2RwYmpvZ01YQjRJRFV3SlZ4dVhHNHJiV1ZrYVdFb1hDSStaR1Z6YTNSdmNGd2lLVnh1SUNBdWFHRnpMV05vYVd4a2NtVnVJRDRnWVZ4dUlDQWdJQ1k2T21KbFptOXlaU3dnSmpvNllXWjBaWEpjYmlBZ0lDQWdJSEpwWjJoME9pQXhOU1ZjYmlBZ0xtTmtMWEJ5YVcxaGNua3RibUYySUQ0Z0xtaGhjeTFqYUdsc1pISmxiaUErSUdGY2JpQWdJQ0F2S2lCdFlXbHVJRzVoZG1sbllYUnBiMjRnWVhKeWIzZHpJRzl1SUd4aGNtZGxjaUJrWlhacFkyVnpYRzRnSUNBZ2NHRmtaR2x1WnkxeWFXZG9kRG9nTXpCd2VDQWhhVzF3YjNKMFlXNTBYRzRnSUNBZ0pqbzZZbVZtYjNKbExDQW1PanBoWm5SbGNseHVJQ0FnSUNBZ2QybGtkR2c2SURsd2VGeHVJQ0FnSUNBZ2RISmhibk5tYjNKdExXOXlhV2RwYmpvZ05UQWxJRFV3SlZ4dUlDQWdJQ0FnWW1GamEyZHliM1Z1WkRvZ1pHRnlhMlZ1S0NSamJHOTFaQ3dnTVRBbEtWeHVYRzRnSUNBZ0lDQmlZV05yWm1GalpTMTJhWE5wWW1sc2FYUjVPaUJvYVdSa1pXNWNiaUFnSUNBZ0lIUnlZVzV6YVhScGIyNDZJSGRwWkhSb0lEQXVNM01zSUhSeVlXNXpabTl5YlNBd0xqTnpYRzRnSUNBZ0pqbzZZbVZtYjNKbFhHNGdJQ0FnSUNCeWFXZG9kRG9nTVRKd2VGeHVJQ0FnSUNZNk9tRm1kR1Z5WEc0Z0lDQWdJQ0J5YVdkb2REb2dOM0I0WEc0Z0lDQWdKaTV6Wld4bFkzUmxaRG82WW1WbWIzSmxMQ0FtTG5ObGJHVmpkR1ZrT2pwaFpuUmxjbHh1SUNBZ0lDQWdkMmxrZEdnNklERTBjSGhjYmlBZ0lDQW1Mbk5sYkdWamRHVmtPanBpWldadmNtVmNiaUFnSUNBZ0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxXQ2cxY0hncElISnZkR0YwWlNndE5EVmtaV2NwWEc0Z0lDQWdKaTV6Wld4bFkzUmxaRG82WVdaMFpYSmNiaUFnSUNBZ0lIUnlZVzV6Wm05eWJUb2djbTkwWVhSbEtEUTFaR1ZuS1Z4dUlDQXVZMlF0YzJWamIyNWtZWEo1TFc1aGRpQStJQzVvWVhNdFkyaHBiR1J5Wlc0Z1BpQmhPanBpWldadmNtVXNJQzVqWkMxelpXTnZibVJoY25rdGJtRjJJRDRnTG1oaGN5MWphR2xzWkhKbGJpQStJR0U2T21GbWRHVnlYRzRnSUNBZ0x5b2djbVZ0YjNabElHRnljbTkzY3lCdmJpQnpaV052Ym1SaGNua2dibUYySUhScGRHeGxjMXh1SUNBZ0lHUnBjM0JzWVhrNklHNXZibVZjYmlBZ0xtTmtMWEJ5YVcxaGNua3RibUYySUM1bmJ5MWlZV05ySUdGY2JpQWdJQ0J3WVdSa2FXNW5MV3hsWm5RNklESXdjSGhjYmlBZ0lDQW1PanBpWldadmNtVXNJQ1k2T21GbWRHVnlYRzRnSUNBZ0lDQnNaV1owT2lBeGNIaGNibHh1WEc1Y2JseHVMbU5rTFhObFlYSmphRnh1SUNCbWJHOWhkRHB5YVdkb2REdGNibHh1WEc1Y2JpQWdabTl5YlZ4dUlDQWdJSEJ2YzJsMGFXOXVPbkpsYkdGMGFYWmxYRzRnSUdsdWNIVjBXM1I1Y0dVOVhDSnpkV0p0YVhSY0lsMWNiaUFnSUNCaVlXTnJaM0p2ZFc1a0xXbHRZV2RsT2lCMWNtd29YQ0l2YVcxaFoyVnpMM05sWVhKamFDMXBZMjl1TG5CdVoxd2lLVnh1SUNBZ0lHSmhZMnRuY205MWJtUXRjbVZ3WldGME9pQnVieTF5WlhCbFlYUmNiaUFnSUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCMGNtRnVjM0JoY21WdWRGeHVJQ0FnSUdScGMzQnNZWGs2SUdsdWJHbHVaUzFpYkc5amExeHVJQ0FnSUhSbGVIUXRhVzVrWlc1ME9pQXRPVGs1T1Rsd2VGeHVJQ0FnSUdobGFXZG9kRG9nTWpKd2VGeHVJQ0FnSUhkcFpIUm9PaUF5TW5CNFhHNGdJQ0FnTFhkbFltdHBkQzFoY0hCbFlYSmhibU5sT2lCdWIyNWxYRzRnSUNBZ1ltOXlaR1Z5T2lBd1hHNGdJQ0FnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsWEc0Z0lDQWdkRzl3T2lBMmNIaGNiaUFnSUNCeWFXZG9kRG9nTTNCNFhHNGdJQ0FnWW1GamEyZHliM1Z1WkMxemFYcGxPaUEzTlNWY2JseHVJQ0JwYm5CMWRGdDBlWEJsUFZ3aWMyVmhjbU5vWENKZFhHNGdJQ0FnY0dGa1pHbHVaeTFzWldaME9qRXdjSGc3WEc0Z0lDQWdMeTlpYjNndGMyaGhaRzkzT2lCcGJuTmxkQ0F3SURGd2VDQXdJQ1JqYkc5MVpDd2dNQ0F6Y0hnZ05uQjRJSEpuWW1Fb0l6QXdNQ3dnTUM0d05TbGNiaUFnSUNCaGNIQmxZWEpoYm1ObE9pQnViMjVsWEc0Z0lDQWdZbTl5WkdWeU9pQXhjSGdnYzI5c2FXUWdKR2R5WVhCb2FYUmxYRzVjYmlBZ0lDQW1Pam90ZDJWaWEybDBMV2x1Y0hWMExYQnNZV05sYUc5c1pHVnlMRnh1SUNBZ0lDWTZPaTF0YjNvdGNHeGhZMlZvYjJ4a1pYSXNYRzRnSUNBZ0pqb3RiWE10YVc1d2RYUXRjR3hoWTJWb2IyeGtaWEpjYmlBZ0lDQWdJR052Ykc5eU9pQmtZWEpyWlc0b0pHTnNiM1ZrTENBeE1DVXBYRzVjYmlBZ0lDQW1PbVp2WTNWelhHNGdJQ0FnSUNCdmRYUnNhVzVsT2lCdWIyNWxYRzVjYmlBZ0ppNXBjeTEyYVhOcFlteGxYRzRnSUNBZ2IzQmhZMmwwZVRvZ01WeHVJQ0FnSUhacGMybGlhV3hwZEhrNklIWnBjMmxpYkdWY2JpQWdJQ0IwY21GdWMybDBhVzl1T2lCdmNHRmphWFI1SUM0emN5QXdjeXdnZG1semFXSnBiR2wwZVNBd2N5QXdjMXh1SUNBZ0lDOHZZbTk0TFhOb1lXUnZkem9nTVhCNElERndlQ0ExY0hnZ2NtZGlZU2d4TURBc01UQXdMREV3TUN3Z0xqVXBYRzVjYmlBZ0xtNWhkaTFwY3kxbWFYaGxaQ0FtWEc0Z0lDQWdjRzl6YVhScGIyNDZJR1pwZUdWa1hHNWNiaUFnSzIxbFpHbGhLRndpUG1SbGMydDBiM0JjSWlsY2JseHVYRzRnSUNBZ2FXNXdkWFJjYmx4dVhHNWNiaTVqWkMxdmRtVnliR0Y1WEc0Z0lDOHFJSE5vWVdSdmR5QnNZWGxsY2lCMmFYTnBZbXhsSUhkb1pXNGdibUYyYVdkaGRHbHZiaUJwY3lCaFkzUnBkbVZjYmlBZ2NHOXphWFJwYjI0NklHWnBlR1ZrWEc0Z0lIb3RhVzVrWlhnNklESmNiaUFnYUdWcFoyaDBPaUF4TURBbFhHNGdJSGRwWkhSb09pQXhNREFsWEc0Z0lIUnZjRG9nTUZ4dUlDQnNaV1owT2lBd1hHNGdJR04xY25OdmNqb2djRzlwYm5SbGNseHVJQ0F2TDJKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUhKblltRW9KR2R5WldWdUxDQXdMamdwWEc0Z0lIWnBjMmxpYVd4cGRIazZJR2hwWkdSbGJseHVJQ0J2Y0dGamFYUjVPaUF3WEc0Z0lHSmhZMnRtWVdObExYWnBjMmxpYVd4cGRIazZJR2hwWkdSbGJseHVJQ0IwY21GdWMybDBhVzl1T2lCdmNHRmphWFI1SURBdU0zTWdNSE1zSUhacGMybGlhV3hwZEhrZ01ITWdNQzR6Y3l3Z2RISmhibk5tYjNKdElEQXVNM01nTUhOY2JseHVJQ0FtTG1sekxYWnBjMmxpYkdWY2JpQWdJQ0J2Y0dGamFYUjVPaUF4WEc0Z0lDQWdkbWx6YVdKcGJHbDBlVG9nZG1semFXSnNaVnh1SUNBZ0lIUnlZVzV6YVhScGIyNDZJRzl3WVdOcGRIa2dNQzR6Y3lBd2N5d2dkbWx6YVdKcGJHbDBlU0F3Y3lBd2N5d2dkSEpoYm5ObWIzSnRJREF1TTNNZ01ITmNibHh1SUNBcmJXVmthV0VvWENJOFpHVnphM1J2Y0Z3aUtWeHVJQ0FnSUNZdWFYTXRkbWx6YVdKc1pWeHVJQ0FnSUNBZ0x5OTBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaVmdvTFNSdVlYWXRkMmxrZEdndFV5bGNiaUFnSUNBZ0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxXQ2d3S1Z4dVhHNGdJQ0FnTG01aGRpMXZiaTFzWldaMElDWXVhWE10ZG1semFXSnNaVnh1SUNBZ0lDQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1ZZS0NSdVlYWXRkMmxrZEdndFV5bGNibHh1SUNBZ0lDWXVhWE10ZG1semFXSnNaUzV6WldGeVkyZ3RhWE10ZG1semFXSnNaU3hjYmlBZ0lDQXVibUYyTFc5dUxXeGxablFnSmk1cGN5MTJhWE5wWW14bExuTmxZWEpqYUMxcGN5MTJhWE5wWW14bFhHNGdJQ0FnSUNCMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpWZ29NQ2xjYmx4dUx5b2dMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpQXFYRzRnS25OMWNIQnZjblFnWm05eUlHNXZJR3B6WEc0Z0tseHVJQ290TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExWeHVYRzR1Ym04dGFuTWdMbU5rTFhCeWFXMWhjbmt0Ym1GMlhHNGdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVnh1SUNCb1pXbG5hSFE2SUdGMWRHOWNiaUFnZDJsa2RHZzZJREV3TUNWY2JpQWdiM1psY21ac2IzYzZJSFpwYzJsaWJHVmNiaUFnZG1semFXSnBiR2wwZVRvZ2RtbHphV0pzWlZ4dUlDQjZMV2x1WkdWNE9pQWtZMjl1ZEdWdWRGeHVYRzR1Ym04dGFuTWdMbU5rTFhObFlYSmphRnh1SUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1WY2JpQWdkRzl3T2lBd1hHNGdJRzl3WVdOcGRIazZJREZjYmlBZ2RtbHphV0pwYkdsMGVUb2dkbWx6YVdKc1pWeHVYRzRyYldWa2FXRW9YQ0krWkdWemEzUnZjRndpS1Z4dUlDQXVibTh0YW5NZ0xtTmtMWEJ5YVcxaGNua3RibUYyWEc0Z0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxYRzRnSUNBZ2VpMXBibVJsZURvZ0pHRmliM1psTFdOdmJuUmxiblJjYmlBZ0lDQmthWE53YkdGNU9pQnBibXhwYm1VdFlteHZZMnRjYmlBZ0lDQjNhV1IwYURvZ1lYVjBiMXh1SUNBZ0lIUnZjRG9nTUZ4dUlDQWdJSEpwWjJoME9pQXhOVEJ3ZUZ4dUlDQWdJSEJoWkdScGJtYzZJREJjYmlBZ0xtNXZMV3B6SUM1dVlYWXRhWE10Wm1sNFpXUWdMbU5rTFhCeWFXMWhjbmt0Ym1GMlhHNGdJQ0FnY0c5emFYUnBiMjQ2SUdacGVHVmtYRzRpTENJdWJtRjJMV1p2YjNSbGNseHVYSFJ3WVdSa2FXNW5PaUF6TUhCNElESXdjSGdnTWpCd2VGeHVYSFIwWlhoMExXRnNhV2R1T2lCc1pXWjBYRzVjYmx4MEsyMWxaR2xoS0Z3aVBEMTBZV0pzWlhSY0lpbGNibHgwWEhSa2FYTndiR0Y1T2lCdWIyNWxYRzVjYmx4MEpsOWZhR1ZoWkdsdVoxeHVYSFJjZEdadmJuUXRabUZ0YVd4NU9pQWtjMkZ1YzF4dVhIUmNkR1p2Ym5RdGMybDZaVG9nTVhKbGJWeHVYSFJjZEdadmJuUXRkMlZwWjJoME9pQWtZbTlzWkZ4dVhIUmNkRzFoY21kcGJpMWliM1IwYjIwNklERnlaVzFjYmx4dVhIUmNkR0ZjYmx4MFhIUmNkR052Ykc5eU9pQWtZMmhoY21OdllXeGNibHgwWEhSY2RDWTZhRzkyWlhKY2JseDBYSFJjZEZ4MFkyOXNiM0k2SUNSbmNtVmxibHh1WEc1Y2RDWmZYMnhwYm10Y2JseDBYSFJtYjI1MExYTnBlbVU2SURFMGNIaGNibHh1WEhRbVgxOWliM2hjYmx4MFhIUndZV1JrYVc1bk9pQXdJREV3Y0hoY2JseDBYSFIyWlhKMGFXTmhiQzFoYkdsbmJqb2dkRzl3WEc1Y2JseDBKbDlmWW05NExXNWhjbkp2ZDF4dVhIUmNkSEJoWkdScGJtYzZJREFnTVRCd2VGeHVYSFJjZEhabGNuUnBZMkZzTFdGc2FXZHVPaUIwYjNCY2JseHVYSFFtWDE5aWRYUjBiMjVjYmx4MFhIUmliM0prWlhJdGQybGtkR2c2SURGd2VGeHVYSFJjZEdOdmJHOXlPaUFrWjNKbFpXNWNibHgwWEhSbWIyNTBMWE5wZW1VNklDNDVjbVZ0WEc1Y2RGeDBiV0Z5WjJsdUxXSnZkSFJ2YlRvZ01YSmxiVnh1WEhSY2RIQmhaR1JwYm1jNklDNDFjbVZ0SURGeVpXMWNibHgwWEhSM2FXUjBhRG9nTVRBd0pWeHVYRzVjYmx4MEx5OGdVM1ZpTFc1aGRtbG5ZWFJwYjI0c0lIZG9hV05vSUdocFpHVnpJRzl1SUhOdFlXeHNJSE5wZW1WelhHNWNkQ1pmWDNOMVlpMXNhVzVyYzF4dVhIUmNkR1p2Ym5RdGMybDZaVG9nTVRSd2VGeHVYRzVjZEZ4MGJHazZiblJvTFdOb2FXeGtLREVwWEc1Y2RGeDBYSFJtYjI1MExXWmhiV2xzZVRvZ0pITmhibk5jYmx4MFhIUmNkR1p2Ym5RdGMybDZaVG9nTVhKbGJWeHVYSFJjZEZ4MFptOXVkQzEzWldsbmFIUTZJQ1JpYjJ4a1hHNWNkRngwWEhSdFlYSm5hVzR0WW05MGRHOXRPaUF1TlhKbGJWeHVYRzVjZEZ4MFhIUmhYRzVjZEZ4MFhIUWdJR052Ykc5eU9pQWtZMmhoY21OdllXeGNibHgwWEhSY2RDQWdKanBvYjNabGNseHVYSFJjZEZ4MElDQWdJR052Ykc5eU9pQWtaM0psWlc1Y2JpSXNJaTh2UW1GdWJtVnlJRlJoYkd3Z0xTQlVhR2x6SUdseklHWnZkVzVrSUc5dUlIUm9aU0JvYjIxbGNHRm5aU0J2Ym14NVhHNHVZbUZ1Ym1WeUxYUmhiR3hjYmlBZ1ltRmphMmR5YjNWdVpDMXBiV0ZuWlRvZ2RYSnNLR2x0WVdkbGN5OXBibVJsZUY5b1pYSnZMbXB3WnlsY2JpQWdZbUZqYTJkeWIzVnVaQzF3YjNOcGRHbHZiam9nWTJWdWRHVnlYRzRnSUdKaFkydG5jbTkxYm1RdGMybDZaVG9nWTI5MlpYSmNiaUFnYUdWcFoyaDBPaUF5TURCd2VGeHVJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVZjYmx4dUlDQXJiV1ZrYVdFb1hDSStkR0ZpYkdWMFhDSXBYRzRnSUNBZ2FHVnBaMmgwT2lBME5qVndlRnh1WEc1Y2JpQWdKbDlmYUdWaFpHeHBibVZjYmlBZ0lDQmliM1IwYjIwNklETnlaVzFjYmlBZ0lDQmpiMnh2Y2pvZ0pIZG9hWFJsWEc0Z0lDQWdabTl1ZEMxbVlXMXBiSGs2SUhObGNtbG1YRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQTBjbVZ0WEc0Z0lDQWdabTl1ZEMxM1pXbG5hSFE2SURnd01GeHVJQ0FnSUd4bFpuUTZJREp5WlcxY2JpQWdJQ0JzYVc1bExXaGxhV2RvZERvZ01WeHVJQ0FnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlZ4dUlDQWdJRzFoY21kcGJqb2dNQ0F3SURGeVpXMGdNWEpsYlZ4dUlDQWdJSFJsZUhRdGMyaGhaRzkzT2lBeWNIZ2dNbkI0SURKd2VDQWtZMmhoY21OdllXeGNibHh1SUNBZ0lITjFjRnh1SUNBZ0lDQWdabTl1ZEMxemFYcGxPakV1TnpWeVpXMWNibHh1SUNBZ0lDdHRaV1JwWVNoY0lqeDBZV0pzWlhSY0lpbGNiaUFnSUNBZ0lIQnZjMmwwYVc5dU9pQnpkR0YwYVdOY2JpQWdJQ0FnSUdadmJuUXRjMmw2WlRvZ01uSmxiVnh1SUNBZ0lDQWdjR0ZrWkdsdVp6b2dNbkpsYlZ4dVhHNHZMeUJDWVc1dVpYSWdVM1JoYm1SaGNtUWdMU0JVYUdseklHbHpJR1p2ZFc1a0lHOXVJSFJvWlNCdFlXcHZjbWwwZVNCdlppQjBhR1VnYVc1MFpYSnVZV3dnY0dGblpYTmNiaTVpWVc1dVpYSXRjM1JoYm1SaGNtUmNiaUFnWW1GamEyZHliM1Z1WkRvZ0pHZHlaV1Z1WEc0Z0lHTnZiRzl5T2lBa2QyaHBkR1ZjYmlBZ1pHbHpjR3hoZVRvZ2RHRmliR1ZjYmlBZ2FHVnBaMmgwT2lCaGRYUnZYRzVjYmlBZ0x5OGdSMlYwSUhKcFpDQnZaaUIzWldseVpDQnpjR0ZqWlNCaVpXeHZkeUJwYldGblpTQnBiaUIwYUdVZ1ltRnVibVZ5YzF4dUlDQnBiV2RjYmlBZ0lDQmthWE53YkdGNU9pQmliRzlqYTF4dVhHNGdJQ1pmWDJKdmVGeHVJQ0FnSUhCaFpHUnBibWM2SURGeVpXMGdNbkpsYlZ4dVhHNGdJQ1pmWDJobFlXUnBibWRjYmlBZ0lDQmpiMnh2Y2pvZ0pIZG9hWFJsWEc1Y2JpQWdKbDlmZEdWNGRGeHVYRzRnSUNaZlgyMWxaR2xoWEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dKSE5zWVhSbFhHNWNiaUFnTHk4Z1ZHaHBjeUJwY3lCbWIzVnVaQ0J2YmlCMGFHVWdRWEJ3Y205aFkyZ2dVR0ZuWlZ4dUlDQW1YMTl0WldScFlTMWhjSEJ5YjJGamFGeHVJQ0FnTHk4Z1ltRmphMmR5YjNWdVpDMXBiV0ZuWlRvZ2RYSnNLQzR1TDJsdFlXZGxjeTl0WldWMGFXNW5MbXB3WnlsY2JpQWdJQzh2SUdKaFkydG5jbTkxYm1RdGNHOXphWFJwYjI0NklHTmxiblJsY2x4dUlDQWdMeThnWW1GamEyZHliM1Z1WkMxemFYcGxPaUJqYjNabGNseHVYRzRnSUNBZ0syMWxaR2xoS0Z3aVBEMTBZV0pzWlhSY0lpbGNiaUFnSUNBZ0lHaGxhV2RvZERvZ016QXdjSGhjYmx4dUlDQXZMeUJVYUdseklHbHpJR1p2ZFc1a0lHOXVJSFJvWlNCTVpXRmtaWEp6YUdsd0lIQmhaMlZjYmlBZ0psOWZiV1ZrYVdFdGJHVmhaR1Z5YzJocGNGeHVJQ0FnTHk4Z1ltRmphMmR5YjNWdVpDMXBiV0ZuWlRvZ2RYSnNLQzR1TDJsdFlXZGxjeTl3Wlc5d2JHVXVhbkJuS1Z4dUlDQWdMeThnWW1GamEyZHliM1Z1WkMxd2IzTnBkR2x2YmpvZ1kyVnVkR1Z5WEc0Z0lDQXZMeUJpWVdOclozSnZkVzVrTFhOcGVtVTZJR052ZG1WeVhHNWNiaUFnSUNBcmJXVmthV0VvWENJOFBYUmhZbXhsZEZ3aUtWeHVJQ0FnSUNBZ2FHVnBaMmgwT2lBek1EQndlRnh1WEc0dkx5QkNZVzV1WlhJZ1VHRnViM0poYldFZ0xTQlVhR2x6SUdseklHWnZkVzVrSUc5dUlIUm9aU0JPWlhkeklIQmhaMlZjYmk1aVlXNXVaWEl0Y0dGdWIzSmhiV0ZjYmlBZ1ltRmphMmR5YjNWdVpDMXBiV0ZuWlRvZ2RYSnNLQzR1TDJsdFlXZGxjeTkwY21WbGN5NXFjR2NwWEc0Z0lHSmhZMnRuY205MWJtUXRjRzl6YVhScGIyNDZJR05sYm5SbGNseHVJQ0JpWVdOclozSnZkVzVrTFhOcGVtVTZJR052ZG1WeVhHNGdJR2hsYVdkb2REb2dNalUxY0hoY2JpSXNJaTVqWVhKa0xXUnBjSFJwWTF4dUlDQmthWE53YkdGNU9pQjBZV0pzWlZ4dUlDQmliM0prWlhJdGRHOXdPaUF4Y0hnZ2MyOXNhV1FnSkdKdmNtUmxja052Ykc5eVhHNGdJR0p2Y21SbGNpMWliM1IwYjIwNklERndlQ0J6YjJ4cFpDQWtZbTl5WkdWeVEyOXNiM0pjYmx4dUlDQXJjbVZ6Y0c5dWMybDJaUzF6ZEdGamExeHVYRzRnSUNaZlgySnZlRnh1SUNBZ0lHUnBjM0JzWVhrNklIUmhZbXhsTFdObGJHeGNiaUFnSUNCMlpYSjBhV05oYkMxaGJHbG5iam9nYldsa1pHeGxYRzVjYmlBZ0lDQndZV1JrYVc1bk9pQXljbVZ0SURGeVpXMWNibHh1SUNBZ0lDdHRaV1JwWVNoY0lqNTBZV0pzWlhSY0lpbGNiaUFnSUNBZ0lIQmhaR1JwYm1jNklESnlaVzBnTVhKbGJTQXljbVZ0SURKeVpXMWNibHh1SUNBZ0lDWTZiblJvTFdOb2FXeGtLRElwWEc0Z0lDQWdJQ0FyYldWa2FXRW9YQ0krZEdGaWJHVjBYQ0lwWEc0Z0lDQWdJQ0FnSUdKdmNtUmxjaTFzWldaME9pQXhjSGdnYzI5c2FXUWdKR0p2Y21SbGNrTnZiRzl5WEc0Z0lDQWdJQ0FnSUhCaFpHUnBibWM2SURKeVpXMGdNbkpsYlNBeWNtVnRJREZ5WlcxY2JseHVJQ0FtWDE5b1pXRmthVzVuWEc0Z0lDQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlYRzVjYmlBZ0psOWZiV1ZrYVdGY2JpQWdJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXljbVZ0WEc1Y2JpQWdKbDlmZEdWNGRGeHVJQ0FnSUhSbGVIUXRZV3hwWjI0NklHTmxiblJsY2x4dUlDQWdJRzFoY21kcGJpMWliM1IwYjIwNklESnlaVzFjYmx4dUlDQjFiRnh1SUNBZ0lHeHBjM1F0YzNSNWJHVTZJRzV2Ym1WY2JpQWdJQ0IwWlhoMExXRnNhV2R1T2lCalpXNTBaWEpjYmx4dUlDQWdJR3hwWEc0Z0lDQWdJQ0JrYVhOd2JHRjVPaUJwYm14cGJtVXRZbXh2WTJ0Y2JpQWdJQ0FnSUhCaFpHUnBibWM2SUM0MWNtVnRYRzRnSUNBZ0lDQjNhV1IwYURvZ05EY2xYRzVjYmx4dUlDQW1YMTlzYVc1clhHNGdJQ0FnWTI5c2IzSTZJQ1J6YVhSbExYUmxlSFF0WTI5c2IzSXRiR2x1YTF4dUlDQWdJR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYTF4dUlDQWdJR1p2Ym5RdFptRnRhV3g1T2lBa2MyVnlhV1pjYmlBZ0lDQndZV1JrYVc1bk9pQXdJQzQwY21WdFhHNGdJQ0FnZG1WeWRHbGpZV3d0WVd4cFoyNDZJRzFwWkdSc1pWeHVJQ0FnSUNZNmFHOTJaWEpjYmlBZ0lDQWdJR052Ykc5eU9pQWtjMmwwWlMxMFpYaDBMV052Ykc5eUxXeHBibXN0YUc5MlpYSmNibHh1WEc0dkx5QkRZWEprSUVKcGJ5QXRJRlJvWlhObElHRnlaU0JtYjNWdVpDQnZiaUIwYUdVZ1RHVmhaR1Z5YzJocGNDQndZV2RsWEc0dVkyRnlaQzFpYVc5Y2JpQWdjR0ZrWkdsdVp5MWliM1IwYjIwNklESnlaVzFjYmx4dUlDQXJiV1ZrYVdFb1hDSThQWFJoWW14bGRGd2lLVnh1SUNBZ0lHSnZjbVJsY2kxaWIzUjBiMjA2SURGd2VDQnpiMnhwWkNBa1kyeHZkV1JjYmlBZ0lDQnRZWEpuYVc0dFltOTBkRzl0T2lBeWNtVnRYRzVjYmlBZ0psOWZiV1ZrYVdGY2JpQWdJQ0IyWlhKMGFXTmhiQzFoYkdsbmJqb2dkRzl3WEc1Y2JpQWdJQ0FyYldWa2FXRW9YQ0k4UFhSaFlteGxkRndpS1Z4dUlDQWdJQ0FnYldGeVoybHVMV0p2ZEhSdmJUb2dNWEpsYlZ4dUlDQWdJQ0FnZEdWNGRDMWhiR2xuYmpvZ1kyVnVkR1Z5WEc1Y2JpQWdJQ0JwYldkY2JpQWdJQ0FnSUN0dFpXUnBZU2hjSWp3OWRHRmliR1YwWENJcFhHNGdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHbHViR2x1WlMxaWJHOWphMXh1SUNBZ0lDQWdJQ0IzYVdSMGFEb2dNek1sWEc1Y2JpQWdKbDlmWW05NFhHNGdJQ0FnY0dGa1pHbHVaeTFzWldaME9pQXljbVZ0WEc0Z0lDQWdjR0ZrWkdsdVp5MTBiM0E2SURCY2JpQWdJQ0IyWlhKMGFXTmhiQzFoYkdsbmJqb2dkRzl3WEc1Y2JpQWdJQ0FyYldWa2FXRW9YQ0k4UFhSaFlteGxkRndpS1Z4dUlDQWdJQ0FnY0dGa1pHbHVaem9nTUZ4dVhHNGdJQ1pmWDJobFlXUnBibWRjYmlBZ0lDQXZMMDFwZUdsdUlHTmhiaUJpWlNCbWIzVnVaQ0JwYmlCMGVYQnZaM0poY0doNVhHNGdJQ0FnSzNOMFlXNWtZWEprTFdobFlXUnBibWNvS1Z4dUlDQWdJRzFoY21kcGJpMWliM1IwYjIwNk1YSmxiVHRjYmx4dUlDQW1YMTl6ZFdKMGFYUnNaVnh1SUNBZ0lHTnZiRzl5T2lBa2MzUnZibVZjYmlBZ0lDQnRZWEpuYVc0dFltOTBkRzl0T2lBNGNIaGNibHh1SUNBZ0lHZ3pYRzRnSUNBZ0lDQmthWE53YkdGNU9pQnBibXhwYm1VdFlteHZZMnRjYmlBZ0lDQmhYRzRnSUNBZ0lDQmpiMnh2Y2pvZ0pHZHlaV1Z1WEc0Z0lDQWdJQ0J0WVhKbmFXNHRiR1ZtZERvZ01UQndlRnh1SUNBZ0lDQWdhVnh1SUNBZ0lDQWdJQ0JpYjNKa1pYSTZNWEI0SUhOdmJHbGtJQ1JuY21WbGJseHVJQ0FnSUNBZ0lDQndZV1JrYVc1bk9pQXljSGhjYmx4dUlDQW1YMTkwWlhoMFhHNWNiaUFnSUNBcmJXVmthV0VvWENJOFBYUmhZbXhsZEZ3aUtWeHVJQ0FnSUNBZ2RHVjRkQzFoYkdsbmJqb2diR1ZtZEZ4dVhHNGdJQ0FnS2lBcklDcGNiaUFnSUNBZ0lHMWhjbWRwYmkxMGIzQTZJREZ5WlcxY2JseHVYRzR2THlCRFlYSmtJR0Z5ZEdsamJHVWdMU0JVYUdWelpTQmhjbVVnWm05MWJtUWdiMjRnZEdobElFNWxkM01nWVc1a0lFbHVjMmxuYUhSeklIQmhaMlZjYmk1allYSmtMV0Z5ZEdsamJHVmNibHh1WEc0Z0lDWmZYMkp2ZUZ4dUlDQWdJR0p2ZUMxemFHRmtiM2M2SURBZ01YQjRJREFnSkdkeVpXVnVYRzRnSUNBZ1pHbHpjR3hoZVRvZ2JtOXVaVnh1SUNBZ0lDdDJaWEowTFhCaFpHUnBibWNvTVN3eEtWeHVYRzRnSUNBZ0tpQXJJQ3BjYmlBZ0lDQWdJRzFoY21kcGJpMTBiM0E2SURGeVpXMWNibHh1SUNCaFhHNGdJQ0FnSmpwb2IzWmxjbHh1SUNBZ0lDQWdkR1Y0ZEMxa1pXTnZjbUYwYVc5dU9pQnViMjVsWEc1Y2JpQWdhREpjYmlBZ0lDQXJjM1JoYm1SaGNtUXRhR1ZoWkdsdVp5Z3BJQzh2VFdsNGFXNGdZMkZ1SUdKbElHWnZkVzVrSUdsdUlIUjVjRzluY21Gd2FIbGNiaUFnSUNBbU9taHZkbVZ5WEc0Z0lDQWdJQ0JqYjJ4dmNqb2tibWxuYUhSbmNtVmxibHh1WEc0Z0lITnRZV3hzWEc0Z0lDQWdZMjlzYjNJNklDTTJOalpjYmlBZ0lDQm1iMjUwTFhOcGVtVTZJQzQzTlhKbGJWeHVYRzRnSUhCY2JseHVMbXh2WVdSbGNsOWZibUYyWEc0Z0lHUnBjM0JzWVhrNklIUmhZbXhsTFdObGJHeGNiaUFnY0dGa1pHbHVaeTEwYjNBNklERXVNalZ5WlcxY2JseHVYRzR1WTJGeVpDMTBjbWx3ZEdsalhHNGdJR1JwYzNCc1lYazZJSFJoWW14bFhHNGdJR0p2Y21SbGNpMTBiM0E2SURGd2VDQnpiMnhwWkNBa1ltOXlaR1Z5UTI5c2IzSmNiaUFnWW05eVpHVnlMV0p2ZEhSdmJUb2dNWEI0SUhOdmJHbGtJQ1JpYjNKa1pYSkRiMnh2Y2x4dVhHNGdJQ1pmWDJKdmVGeHVJQ0FnSUhCaFpHUnBibWM2SURKeVpXMWNiaUFnSUNCMlpYSjBhV05oYkMxaGJHbG5iam9nZEc5d1hHNWNiaUFnSUNBbU9tNTBhQzFqYUdsc1pDZ3lLVnh1SUNBZ0lDQWdLMjFsWkdsaEtGd2lQblJoWW14bGRGd2lLVnh1SUNBZ0lDQWdJQ0JpYjNKa1pYSXRiR1ZtZERvZ01YQjRJSE52Ykdsa0lDUmliM0prWlhKRGIyeHZjbHh1SUNBZ0lDQWdJQ0F2TDNCaFpHUnBibWM2SURKeVpXMGdNWEpsYlNBeWNtVnRJREZ5WlcxY2JseHVJQ0FnSUNZNmJuUm9MV05vYVd4a0tETXBYRzRnSUNBZ0lDQXJiV1ZrYVdFb1hDSStkR0ZpYkdWMFhDSXBYRzRnSUNBZ0lDQWdJR0p2Y21SbGNpMXNaV1owT2lBeGNIZ2djMjlzYVdRZ0pHSnZjbVJsY2tOdmJHOXlYRzRnSUNBZ0lDQWdJQzh2Y0dGa1pHbHVaem9nTW5KbGJTQXljbVZ0SURKeVpXMGdNWEpsYlZ4dVhHNGdJQ1pmWDIxbFpHbGhYRzRnSUNBZ0x5OWlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWtaM0psWlc1Y2JpQWdJQ0JvWldsbmFIUTZJREUxTUhCNFhHNGdJQ0FnYjNabGNtWnNiM2M2SUdocFpHUmxibHh1SUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2SURKeVpXMWNibHh1SUNBZ0lHbHRaMXh1WEc0Z0lDWmZYMmhsWVdScGJtY3RiR2x1YTF4dUlDQWdJQ3R6YldGc2JDMW9aV0ZrYVc1bktDbGNiaUFnSUNCamIyeHZjam9nSkhOcGRHVXRkR1Y0ZEMxamIyeHZjaTFzYVc1clhHNGdJQ0FnWkdsemNHeGhlVG9nYVc1c2FXNWxMV0pzYjJOclhHNGdJQ0FnZEdWNGRDMWhiR2xuYmpvZ1kyVnVkR1Z5WEc1Y2JpQWdJQ0FtT21odmRtVnlYRzRnSUNBZ0lDQmpiMnh2Y2pvZ0pITnBkR1V0ZEdWNGRDMWpiMnh2Y2kxc2FXNXJMV2h2ZG1WeVhHNWNiaUFnSmw5ZmRHVjRkRnh1SUNBZ0lIUmxlSFF0WVd4cFoyNDZJR05sYm5SbGNseHVJaXdpTHk5Y2JpOHZRMVJCY3lBdElFTmhiR3dnZEc4Z1FXTjBhVzl1SUcxdlpIVnNaWE5jYmk4dlhHNWNiaTh2UTI5dWRHRmpkQ0JEVkVGY2JpOHZWR2hwY3lCcGN5Qm1iM1Z1WkNCdmJpQjBhR1VnYUc5dFpYQmhaMlVnYjI1c2VTQnlhV2RvZENCdWIzZGNiaTVqZEdFdFkyOXVkR0ZqZEZ4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWtjMnhoZEdWY2JpQWdaR2x6Y0d4aGVUb2dkR0ZpYkdWY2JpQWdkMmxrZEdnNklERXdNQ1U3WEc1Y2JpQWdKbDlmWW05NFhHNGdJQ0FnY0dGa1pHbHVaem9nTW5KbGJWeHVYRzRnSUNaZlgySnZlRHB1ZEdndFkyaHBiR1FvTWlsY2JpQWdJQ0J3WVdSa2FXNW5PaUF5Y21WdElEQmNibHh1WEc0Z0lDWmZYM1JsZUhSY2JpQWdJQ0J0WVhKbmFXNDZJREJjYmlBZ0lDQndZV1JrYVc1bk9pQXdJRE11TlhKbGJTQXdJREp5WlcxY2JseHVJQ0FnSUN0dFpXUnBZU2hjSWp3OWRHRmliR1YwWENJcFhHNGdJQ0FnSUNCd1lXUmthVzVuT2lBd1hHNWNiaUFnSmw5ZlluVjBkRzl1WEc0Z0lDQWdaR2x6Y0d4aGVUb2dhVzVzYVc1bExXSnNiMk5yWEc0Z0lDQWdiV0Z5WjJsdU9pQXdJREp5WlcwZ01DQXdYRzVjYmlBZ0lDQXJiV1ZrYVdFb1hDSThQWFJoWW14bGRGd2lLVnh1SUNBZ0lDQWdiV0Z5WjJsdU9pQXdYRzVjYmx4dUx5OVdhV1JsYnlCMFpXRnpaWElnUTFSQlhHNHZMMVJvYVhNZ2FYTWdabTkxYm1RZ2IyNGdkR2hsSUdodmJXVndZV2RsSUc5dWJIa2djbWxuYUhRZ2JtOTNYRzR1WTNSaExYUmxZWE5sY2x4dUlDQmthWE53YkdGNU9pQjBZV0pzWlZ4dUlDQndZV1JrYVc1bk9pQXhjbVZ0SURKeVpXMWNibHh1SUNCMmFXUmxiMXh1SUNBZ0lIZHBaSFJvT2lBeE1EQWxYRzRnSUNBZ2FHVnBaMmgwT2lBeE1EQWxYRzVjYmlBZ0syMWxaR2xoS0Z3aVBEMTBZV0pzWlhSY0lpbGNiaUFnSUNCbWJHVjRMV1pzYjNjNklHTnZiSFZ0Ymx4dVhHNGdJQ1pmWDJKdmVGeHVJQ0FnSUhCaFpHUnBibWN0Y21sbmFIUTZJREp5WlcxY2JseHVJQ0FnSUN0dFpXUnBZU2hjSWp3OWRHRmliR1YwWENJcFhHNGdJQ0FnSUNCd1lXUmthVzVuT2lBd1hHNWNiaUFnSmw5ZmFHVmhaR2x1WjF4dVhHNGdJQ1pmWDNSbGVIUmNiaUFnSUNCdFlYSm5hVzR0WW05MGRHOXRPaUF5Y21WdFhHNWNibHh1SUNBbVgxOXRaV1JwWVZ4dUlDQWdJR2hsYVdkb2REb2dNekF3Y0hoY2JpQWdJQ0J2ZG1WeVpteHZkem9nYUdsa1pHVnVYRzVjYmlBZ0lDQXJiV1ZrYVdFb1hDSThQWFJoWW14bGRGd2lLVnh1SUNBZ0lDQWdhR1ZwWjJoME9pQmhkWFJ2WEc0Z0lDQWdJQ0J0WVhKbmFXNHRkRzl3T2lBeWNtVnRYRzVjYmx4dUx5OURaVzUwWlhKbFpDQkRWRUZjYmk4dlZHaHBjeUJwY3lCbWIzVnVaQ0J2YmlCMGFHVWdhRzl0WlhCaFoyVWdiMjVzZVNCeWFXZG9kQ0J1YjNkY2JpNWpkR0V0WTJWdWRHVnlYRzRnSUhCaFpHUnBibWM2SURKeVpXMWNiaUFnZEdWNGRDMWhiR2xuYmpvZ1kyVnVkR1Z5WEc1Y2JpQWdKbDlmYUdWaFpHbHVaMXh1WEc0Z0lDWmZYM1JsZUhSY2JpQWdJQ0J3WVdSa2FXNW5PaUF3SURoeVpXMWNiaUFnSUNCdFlYSm5hVzR0WW05MGRHOXRPaUF5Y21WdFhHNWNiaUFnSUNBcmJXVmthV0VvWENJOFBYUmhZbXhsZEZ3aUtWeHVJQ0FnSUNBZ2NHRmtaR2x1WnpvZ01GeHVYRzRnSUNaZlgySjFkSFJ2Ymx4dVhHNWNibHh1THk5VGRXSnpZM0pwWW1VZ1ExUkJJQzBnVkdocGN5QnBjeUJtYjNWdVpDQmhkQ0IwYUdVZ2RHOXdJRzltSUhSb1pTQm1iMjkwWlhKY2JpNWpkR0V0YzNWaWMyTnlhV0psWEc0Z0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDUm5jbVZsYmx4dUlDQmpiMnh2Y2pvZ0pIZG9hWFJsWEc0Z0lDdDJaWEowTFhCaFpHUnBibWNvTVN3eExqVXBYRzVjYmlBZ0psOWZhR1ZoWkdsdVoxeHVJQ0FnSUdOdmJHOXlPaUFrZDJocGRHVmNiaUFnSUNCMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhKY2JseHVJQ0FtWDE5aWIzaGNiaUFnSUNCa2FYTndiR0Y1T2lCMFlXSnNaVnh1SUNBZ0lHMWhjbWRwYmpvZ01DQmhkWFJ2WEc0Z0lDQWdkMmxrZEdnNklEYzFKVnh1WEc0Z0lDOHZJRlJQUkU4Z2RYTmxJR052YkNCamJHRnpjeUJwYm5OMFpXRmtJR1p2Y2lCM2FXUjBhRnh1SUNBbVgxOXBibkIxZEMxaFpHUXRiMjVjYmx4dVhHNGdJQ1pmWDJsdWNIVjBYRzRnSUNBZ2NHRmtaR2x1WnpvZ0xqbHlaVzFjYmlBZ0lDQjNhV1IwYURvZ01UQXdKVnh1WEc0Z0lDWmZYMkoxZEhSdmJseHVJQ0FnSUdKdmNtUmxjam9nTVhCNElITnZiR2xrSUNSM2FHbDBaVnh1SUNBZ0lHTnZiRzl5T2lBa2QyaHBkR1ZjYmlBZ0lDQm1iMjUwTFhOcGVtVTZJREV1TlhKbGJWeHVJQ0FnSUcxaGNtZHBiaTFzWldaME9pQXhjbVZ0WEc0Z0lDQWdkMmxrZEdnNklERXdNQ1ZjYmlBZ0lDQjBjbUZ1YzJsMGFXOXVPaUJoYkd3Z0xqSnpJR1ZoYzJWY2JseHVJQ0FnSUNZNmFHOTJaWEpjYmlBZ0lDQWdJQzhxVkdobGMyVWdkMmxzYkNCMGNtRnVjMmwwYVc5dUlHOXVJR2h2ZG1WeVhHNGdJQ0FnSUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBa2QyaHBkR1ZjYmlBZ0lDQWdJR052Ykc5eU9pQWtaM0psWlc1Y2JseHVJQ0FnSUN0dFpXUnBZU2hjSWp3OWRHRmliR1YwWENJcFhHNGdJQ0FnSUNCdFlYSm5hVzQ2SURGeVpXMGdNQ0F3SURCY2JseHVJQ0FtWDE5dFpYTnpZV2RsWEc0Z0lDQWdaR2x6Y0d4aGVUb2dibTl1WlZ4dUlDQWdJSEJoWkdScGJtY3RkRzl3T2lBeUxqVnlaVzFjYmx4dUlDQW1YMTlsY25KdmNseHVJQ0FnSUdScGMzQnNZWGs2SUc1dmJtVmNiaUFnSUNCd1lXUmthVzVuTFhSdmNEb2dNWEpsYlZ4dVhHNGdJQ0FnSmkxdGMyZGNiaUFnSUNBZ0lIUmxlSFF0WVd4cFoyNDZJR05sYm5SbGNseHVYRzVjYmk4dlUybGtaV0poY2lCRFZFRWdMU0JVYUdseklHbHpJR1p2ZFc1a0lHOXVJR2x1ZEdWeWJtRnNJSEJoWjJWeklHOXViSGxjYmk1amRHRXRjMmxrWldKaGNseHVJQ0J3WVdSa2FXNW5PaUF4Y21WdElEQWdNQ0ExY21WdFhHNGdJSFpsY25ScFkyRnNMV0ZzYVdkdU9pQjBiM0JjYmx4dUlDQXJiV1ZrYVdFb1hDSThQWFJoWW14bGRGd2lLVnh1SUNBZ0lIQmhaR1JwYm1jNklETnlaVzBnTW5KbGJWeHVYRzRnSUNaZlgyMWxaR2xoWEc0Z0lDQWdMeTlvWldsbmFIUTZJREU0TUhCNFhHNGdJQ0FnTHk5dmRtVnlabXh2ZHpvZ2FHbGtaR1Z1WEc1Y2JpQWdJQ0FyYldWa2FXRW9YQ0k4UFhSaFlteGxkRndpS1Z4dVhHNWNiaUFnSUNCcGJXZGNibHh1SUNBbVgxOW9aV0ZrYVc1blhHNGdJQ0FnWm05dWRDMXphWHBsT2lBeExqSTFjbVZ0WEc0Z0lDQWdLM1psY25RdGJXRnlaMmx1S0M0MUxDNDFLVnh1WEc0Z0lDWmZYM1JsZUhSY2JseHVJQ0FtWDE5aWRYUjBiMjVjYmlBZ0lDQnRZWEpuYVc0dGRHOXdPaUF4Y21WdFhHNWNiaTh2UVdSa0lITnZiV1VnYzNCaFkybHVaeUIzYUdWdUlIUm9aWEpsSjNNZ2JYVnNkR2x3YkdVZ2MybGtaV0poY2lCcGRHVnRjMXh1TG1OMFlTMXphV1JsWW1GeVgxOWlkWFIwYjI0Z0t5QXVZM1JoTFhOcFpHVmlZWEpmWDJobFlXUnBibWNzWEc0dVkzUmhMWE5wWkdWaVlYSmZYM1JsZUhRZ0t5QXVZM1JoTFhOcFpHVmlZWEpmWDJobFlXUnBibWRjYmlBZ2JXRnlaMmx1TFhSdmNEb2dNbkpsYlZ4dVhHNWNibHh1THk5VGIyTnBZV3dnUTFSQklDMGdWR2hsYzJVZ1lYSmxJR04xY25KbGJuUnNlU0JtYjNWdVpDQmhkQ0IwYUdVZ1ltOTBkRzl0SUc5bUlIUm9aU0JpYkc5bklIQnZjM1J6WEc0dVkzUmhMWE52WTJsaGJGeHVJQ0J3WVdSa2FXNW5MV3hsWm5RNklERnlaVzFjYmx4dUlDQXVhV052Ymx4dUlDQWdJR1pwYkd3NklDUm5jbVZsYmx4dVhHNGdJQ0FnSmpwb2IzWmxjbHh1SUNBZ0lDQWdabWxzYkRvZ0pHZHlZWEJvYVhSbFhHNWNiaUFnWVZ4dUlDQWdJQ1k2YUc5MlpYSmNiaUFnSUNBZ0lIUmxlSFF0WkdWamIzSmhkR2x2YmpvZ2JtOXVaVnh1SWl3aUx5OUdiMjkwWlhKY2JpUm1iMjkwWlhJdGFHVmhaR1Z5TFc1aGRqb2dWSEpsWW5WamFHVjBJRTFUWEc1Y2JtWnZiM1JsY2x4dVhIUndZV1JrYVc1bkxXSnZkSFJ2YlRvZ05YSmxiVnh1WEc1Y2RDdHRaV1JwWVNoY0lqdzlkR0ZpYkdWMFhDSXBYRzVjZEZ4MGNHRmtaR2x1WnpvZ01GeHVYRzVjYmk1bWIyOTBaWEl0WTI5d2VYSnBaMmgwWEc1Y2RHSnZjbVJsY2kxMGIzQTZJREZ3ZUNCemIyeHBaQ0FrWTJ4dmRXUmNibHgwWkdsemNHeGhlVG9nZEdGaWJHVmNibHgwY0dGa1pHbHVaem9nTW5KbGJWeHVYSFIzYVdSMGFEb2dNVEF3SlZ4dVhHNWNkQ3R0WldScFlTaGNJanc5ZEdGaWJHVjBYQ0lwWEc1Y2RGeDBjR0ZrWkdsdVp6b2dNbkpsYlNBd0lEQWdNRnh1WEhSY2RHUnBjM0JzWVhrNklHSnNiMk5yWEc1Y2JseDBKbDlmYkc5bmJ5MWliM2hjYmx4MFhIUjNhV1IwYURvZ05EVXdjSGhjYmx4dVhIUmNkQ3R0WldScFlTaGNJanc5ZEdGaWJHVjBYQ0lwWEc1Y2RGeDBYSFJrYVhOd2JHRjVPaUJwYm14cGJtVXRZbXh2WTJ0Y2JseDBYSFJjZEhkcFpIUm9PaUJoZFhSdlhHNWNibHgwWEhSY2RDNXNiMmR2WDE5emRHRmphMlZrWEc1Y2RGeDBYSFJjZEdScGMzQnNZWGs2SUdsdWJHbHVaUzFpYkc5amExeHVYSFJjZEZ4MFhIUjNhV1IwYURvZ01qVXdjSGhjYmx4dVhHNWNkQ1pmWDJKdmVGeHVYSFJjZEhSbGVIUXRZV3hwWjI0NklISnBaMmgwWEc1Y2JseDBYSFFyYldWa2FXRW9YQ0krUFhSaFlteGxkRndpTENCY0lqNDlaR1Z6YTNSdmNGd2lLVnh1WEhSY2RGeDBkR1Y0ZEMxaGJHbG5iam9nY21sbmFIUmNibHh1WEhSY2RITnRZV3hzWEc1Y2RGeDBYSFJrYVhOd2JHRjVPaUJpYkc5amExeHVYSFJjZEZ4MFptOXVkQzF6YVhwbE9pQXhOSEI0WEc1Y2RGeDBYSFJ3WVdSa2FXNW5MWEpwWjJoME9pQXVOWEpsYlZ4dVhHNWNibHgwWEhSY2RDdHRaV1JwWVNoY0lqNDlkR0ZpYkdWMFhDSXNJRndpUGoxa1pYTnJkRzl3WENJcFhHNWNkRngwWEhSY2RHWnZiblF0YzJsNlpUb2dNVEp3ZUZ4dVhIUmNkRngwWEhSa2FYTndiR0Y1T2lCcGJteHBibVV0WW14dlkydGNibHh1WEhSY2RGeDBYSFFtT2pwaVpXWnZjbVZjYmx4MFhIUmNkRngwSUNCamIyNTBaVzUwT2lBbmZDZGNibHh1WEhSY2RGeDBYSFFtT201MGFDMWphR2xzWkNneEtWeHVYSFJjZEZ4MFhIUWdJQ1k2T21KbFptOXlaVnh1WEhSY2RGeDBYSFFnSUNBZ1kyOXVkR1Z1ZERvZ0p5ZGNibHh1WEhSY2RDNXVZWFl0YldsdWIzSmNibHgwWEhSY2RHeHBYRzVjZEZ4MFhIUWdJR0ZjYmx4MFhIUmNkQ0FnSUNCbWIyNTBMWE5wZW1VNklERTBjSGhjYmx4MFhIUmNkQ0FnSUNBcmJXVmthV0VvWENJK1BYUmhZbXhsZEZ3aUxDQmNJajQ5WkdWemEzUnZjRndpS1Z4dVhIUmNkRngwSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF4TW5CNFhHNWNiaTVtYjI5MFpYSXRaR2x6WTJ4aGFXMWxjbHh1WEhSMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhKY2JseDBkMmxrZEdnNklERXdNQ1ZjYmx4dVhIUW1YMTlpYjNoY2JseDBYSFJpYjNKa1pYSTZJREZ3ZUNCemIyeHBaQ0FrWm05dmRHVnlMWFJsZUhSY2JseDBYSFJrYVhOd2JHRjVPaUJwYm14cGJtVXRZbXh2WTJ0Y2JseDBYSFIwWlhoMExXRnNhV2R1T2lCalpXNTBaWEpjYmx4MFhIUndZV1JrYVc1bk9pQXlNSEI0WEc1Y2RGeDBiV0Z5WjJsdU9pQTFNSEI0SUdGMWRHOGdNVEJ3ZUZ4dVhHNWNkRngwSzIxbFpHbGhLRndpUGoxa1pYTnJkRzl3WENJcFhHNWNkRngwSUNCd1lXUmthVzVuT2lBeU1IQjRJREV3TUhCNFhHNWNibHgwZFd4Y2JseDBYSFJBWlhoMFpXNWtJQ1Z0Wlc1MVhHNWNkRngwWkdsemNHeGhlVG9nZEdGaWJHVmNibHgwWEhSdFlYSm5hVzQ2SURBZ1lYVjBiMXh1WEc1Y2RGeDBiR2xjYmx4MFhIUmNkR1JwYzNCc1lYazZJSFJoWW14bExXTmxiR3hjYmx4MFhIUmNkR0p2Y21SbGNqb2dNWEI0SUhOdmJHbGtJQ05EUTBORFEwTmNibHgwWEhSY2RHSnZjbVJsY2kxeWFXZG9kRG9nYm05dVpWeHVYSFJjZEZ4MFltOXlaR1Z5TFd4bFpuUXRjM1I1YkdVNklHUmhjMmhsWkZ4dVhIUmNkRngwYldGeVoybHVPaUF3SURFd2NIaGNibHgwWEhSY2RIQmhaR1JwYm1jNklDNDFjbVZ0WEc1Y2RGeDBYSFFtT214aGMzUXRZMmhwYkdSY2JseDBYSFJjZENBZ1ltOXlaR1Z5TFhKcFoyaDBPaUF4Y0hnZ0kwTkRReUJ6YjJ4cFpGeHVYSFJjZEZ4MEpqcG1hWEp6ZEMxamFHbHNaRnh1WEhSY2RGeDBJQ0JpYjNKa1pYSXRiR1ZtZEMxemRIbHNaVG9nYzI5c2FXUmNibHh1WEhSb05pd2djQ3dnZFd4Y2JseDBYSFJtYjI1MExYTnBlbVU2SURFMGNIaGNibHgwWEhSdFlYSm5hVzR0WW05MGRHOXRPaUF4Y21WdFhHNWNibHgwWEhRcmJXVmthV0VvWENJK1BYUmhZbXhsZEZ3aUxDQmNJajQ5WkdWemEzUnZjRndpS1Z4dVhIUmNkRngwWm05dWRDMXphWHBsT2lBeE1uQjRYRzRpTENKY2JrQnJaWGxtY21GdFpYTWdabUZrWlVsdVhHNGdJR1p5YjIxY2JpQWdJQ0J2Y0dGamFYUjVPaUF3WEc0Z0lIUnZYRzRnSUNBZ2IzQmhZMmwwZVRvZ01WeHVYRzR1YUdWaFpHVnlYMTlzYjJkdkxXSnZlRnh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBa2QyaHBkR1ZjYmlBZ1ltOXlaR1Z5TFd4bFpuUTZJREZ3ZUNCemIyeHBaQ0FrWW05eVpHVnlRMjlzYjNKY2JpQWdZbTl5WkdWeUxYSnBaMmgwT2lBeGNIZ2djMjlzYVdRZ0pHSnZjbVJsY2tOdmJHOXlYRzRnSUcxaGNtZHBiam9nTUNCaGRYUnZYRzRnSUcxaGVDMTNhV1IwYURvZ01USXdNSEI0WEc1Y2JpOHZJRVp2Y2lCSlJUbGNiaTV1YnkxamMzTmhibWx0WVhScGIyNXpJQzVvWldGa1pYSmZYMnh2WjI4dFltOTRYRzRnSUhCaFpHUnBibWN0ZEc5d09pQXdYRzVjYmk1b1pXRmtaWEpmWDJ4dloyOWNiaUFnWW1GamEyZHliM1Z1WkRvZ0pIZG9hWFJsWEc1Y2JseHVMbXh2WjI5Y2JpQWdaR2x6Y0d4aGVUb2dZbXh2WTJ0Y2JpQWdjR0ZrWkdsdVp6b2dNSEpsYlNBd0lEQnlaVzBnTW5KbGJWeHVJQ0IzYVdSMGFEb2dOakF3Y0hoY2JseHVJQ0FyYldWa2FXRW9YQ0k4T1RBd2NIaGNJaWxjYmlBZ0lDQjNhV1IwYURvZ05EQXdjSGhjYmx4dUlDQXJiV1ZrYVdFb1hDSThOVEF3Y0hoY0lpbGNiaUFnSUNCd1lXUmthVzVuT2lBeGNtVnRYRzRnSUNBZ2QybGtkR2c2SURNd01IQjRYRzVjYmk4dklFWnZjaUJKUlRsY2JpNXVieTFqYzNOaGJtbHRZWFJwYjI1eklDNXNiMmR2WEc0Z0lHaGxhV2RvZERvZ05qaHdlRnh1SUNCd1lXUmthVzVuT2lBd0lERnlaVzFjYmx4dVhHNXpkbWRjYmx4dUlDQndZWFJvTENCd2IyeDVaMjl1WEc0Z0lDQWdabWxzYkRvZ0pHZHlaV1Z1WEc1Y2JpQWdKanBvYjNabGNpQndZWFJvTEZ4dUlDQW1PbWh2ZG1WeUlIQnZiSGxuYjI1Y2JpQWdJQ0J2Y0dGamFYUjVPaUF1TjF4dUlDQWdJSFJ5WVc1emFYUnBiMjQ2SUdacGJHd2dNQzR5Y3lCbFlYTmxYRzRnSUNBZ1ptbHNiQzF2Y0dGamFYUjVPaUF3TGpkY2JseHVMbXh2WjI5ZlgzTjBjbVYwWTJobFpGeHVJQ0JrYVhOd2JHRjVPaUJpYkc5amExeHVYRzRnSUN0dFpXUnBZU2hjSWp3NU1EQndlRndpS1Z4dUlDQWdJR1JwYzNCc1lYazZJRzV2Ym1WY2JseHVMbXh2WjI5ZlgzTjBZV05yWldSY2JpQWdaR2x6Y0d4aGVUb2dibTl1WlZ4dVhHNGdJQ3R0WldScFlTaGNJanc1TURCd2VGd2lLVnh1SUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yWEc1Y2JseHVMeThnTWpVZ2NHbGxZMlZ6WEc0dWJHOW5iMTlmWjJ4dlltVmNiaUFnY0dGMGFGeHVJQ0F2TDB4dloyOGdURzloWkNCQmJtbHRZWFJwYjI1Y2JpQWdMeThnSUNCdmNHRmphWFI1T2lBd1hHNGdJQzh2SUNBZ1lXNXBiV0YwYVc5dU9pQm1ZV1JsU1c0Z1pXRnpaUzFwYmlBeFhHNGdJQzh2SUNBZ1lXNXBiV0YwYVc5dUxXWnBiR3d0Ylc5a1pUb2dabTl5ZDJGeVpITmNiaUFnTHk4Z0lDQmhibWx0WVhScGIyNHRaSFZ5WVhScGIyNDZJQzQxYzF4dVhHNGdJQzh2SUhCaGRHZzZiblJvTFdOb2FXeGtLREVwWEc0Z0lDOHZJQ0FnWVc1cGJXRjBhVzl1TFdSbGJHRjVPaUF3TGpGelhHNWNiaUFnTHk4Z2NHRjBhRHB1ZEdndFkyaHBiR1FvTWlsY2JpQWdMeThnSUNCaGJtbHRZWFJwYjI0dFpHVnNZWGs2SURBdU1URnpYRzVjYmlBZ0x5OGdjR0YwYURwdWRHZ3RZMmhwYkdRb015bGNiaUFnTHk4Z0lDQmhibWx0WVhScGIyNHRaR1ZzWVhrNklEQXVNakp6WEc1Y2JpQWdMeThnY0dGMGFEcHVkR2d0WTJocGJHUW9OQ2xjYmlBZ0x5OGdJQ0JoYm1sdFlYUnBiMjR0WkdWc1lYazZJREF1TVROelhHNWNiaUFnTHk4Z2NHRjBhRHB1ZEdndFkyaHBiR1FvTlNsY2JpQWdMeThnSUNCaGJtbHRZWFJwYjI0dFpHVnNZWGs2SURBdU1UUnpYRzVjYmlBZ0x5OGdjR0YwYURwdWRHZ3RZMmhwYkdRb05pbGNiaUFnTHk4Z0lDQmhibWx0WVhScGIyNHRaR1ZzWVhrNklEQXVNVFZ6WEc1Y2JpQWdMeThnY0dGMGFEcHVkR2d0WTJocGJHUW9OeWxjYmlBZ0x5OGdJQ0JoYm1sdFlYUnBiMjR0WkdWc1lYazZJREF1TVRaelhHNWNiaUFnTHk4Z2NHRjBhRHB1ZEdndFkyaHBiR1FvT0NsY2JpQWdMeThnSUNCaGJtbHRZWFJwYjI0dFpHVnNZWGs2SURBdU16ZHpYRzVjYmlBZ0x5OGdjR0YwYURwdWRHZ3RZMmhwYkdRb09TbGNiaUFnTHk4Z0lDQmhibWx0WVhScGIyNHRaR1ZzWVhrNklEQXVNVGh6WEc1Y2JpQWdMeThnY0dGMGFEcHVkR2d0WTJocGJHUW9NVEFwWEc0Z0lDOHZJQ0FnWVc1cGJXRjBhVzl1TFdSbGJHRjVPaUF3TGpFNWMxeHVYRzRnSUM4dklIQmhkR2c2Ym5Sb0xXTm9hV3hrS0RFeEtWeHVJQ0F2THlBZ0lHRnVhVzFoZEdsdmJpMWtaV3hoZVRvZ01DNHlNSE5jYmx4dUlDQXZMeUJ3WVhSb09tNTBhQzFqYUdsc1pDZ3hNaWxjYmlBZ0x5OGdJQ0JoYm1sdFlYUnBiMjR0WkdWc1lYazZJREF1TWpGelhHNWNiaUFnTHk4Z2NHRjBhRHB1ZEdndFkyaHBiR1FvTVRNcFhHNGdJQzh2SUNBZ1lXNXBiV0YwYVc5dUxXUmxiR0Y1T2lBd0xqRXljMXh1WEc0Z0lDOHZJSEJoZEdnNmJuUm9MV05vYVd4a0tERTBLVnh1SUNBdkx5QWdJR0Z1YVcxaGRHbHZiaTFrWld4aGVUb2dNQzR5TTNOY2JseHVJQ0F2THlCd1lYUm9PbTUwYUMxamFHbHNaQ2d4TlNsY2JpQWdMeThnSUNCaGJtbHRZWFJwYjI0dFpHVnNZWGs2SURBdU16UnpYRzVjYmlBZ0x5OGdjR0YwYURwdWRHZ3RZMmhwYkdRb01UWXBYRzRnSUM4dklDQWdZVzVwYldGMGFXOXVMV1JsYkdGNU9pQXdMakkxYzF4dVhHNWNiaTV1YnkxamMzTmhibWx0WVhScGIyNXpJQzVzYjJkdlgxOW5iRzlpWlZ4dUlDQndZWFJvWEc0Z0lDQWdabWxzYkRvZ0pHZHlaV1Z1WEc0Z0lDQWdiM0JoWTJsMGVUb2dNVnh1WEc0dkx5QlBkR2hsY2lCamJHRnpjMlZ6SUdadmNpQmhibWx0WVdsMGIyNGdiV0Y1WW1WY2JpOHZJQzVzYjJkdlgxOTBaWGgwWEc0dkwxeHVMeThnTG14dloyOWZYMk52YlcxbGNtTmxYRzR2THlBZ0lIQmhkR2dzSUhCdmJIbG5iMjVjYmk4dlhHNHZMMXh1THk4Z0xteHZaMjlmWDNSeWRYTjBYRzR2THlBZ0lIQmhkR2dzSUhCdmJIbG5iMjVjYmk4dlhHNHZMMXh1THk4Z0xteHZaMjlmWDNSaFoyeHBibVZjYmk4dklDQWdjR0YwYUN3Z2NHOXNlV2R2Ymx4dUlpd2lMeTh0SUZSb2FYTWdZMjl1ZEdGcGJtVnlJR2h2YkdRZ2RHaGxJRzFoYVc0Z1kyOXVkR1Z1ZENCdmJpQmxZV05vSUhCaFoyVmNiaTh2TFNCSmRDQnBjeUJtYjNWdVpDQnZiaUJoYkd3Z2FXNTBaWEp1WVd3Z2NHRm5aWE5jYmx4dUx5OHRJRUZzYkNCY0lrMWhhVzVjSWlCamJHRnpjMlZ6SUdoaGRtVWdjMmhoY21VZ2RHaGxjMlVnY25Wc1pYTmNiaVZ0WVdsdVhHNGdJR1JwYzNCc1lYazZJSFJoWW14bFhHNGdJSEJoWkdScGJtYzZJREZ5WlcwZ01uSmxiVnh1WEc0dWJXRnBiaTF6ZEdGdVpHRnlaRnh1SUNCQVpYaDBaVzVrSUNWdFlXbHVYRzRnSUhCaFpHUnBibWN0WW05MGRHOXRPaUExY21WdFhHNWNiaUFnSmw5ZlkyOXVkR1Z1ZEZ4dVhHNGdJQ0FnSzIxbFpHbGhLRndpUEQxMFlXSnNaWFJjSWlsY2JpQWdJQ0FnSUhSbGVIUXRZV3hwWjI0NklHeGxablJjYmx4dUlDQWdJQ1l1WTI5c0xUY3RNVEpjYmlBZ0lDQWdJSEJoWkdScGJtY3RkRzl3T2lBeExqVnlaVzFjYmlBZ0lDQWdJSFpsY25ScFkyRnNMV0ZzYVdkdU9pQjBiM0JjYmx4dUlDQW1YMTkwWlhoMFhHNWNiaUFnSUNBcUlDc2dLbHh1SUNBZ0lDQWdiV0Z5WjJsdUxYUnZjRG9nTVhKbGJWeHVYRzRnSUNBZ2FESmNiaUFnSUNBZ0lDdHpkR0Z1WkdGeVpDMW9aV0ZrYVc1bktDbGNiaUFnSUNBZ0lDdDJaWEowTFhCaFpHUnBibWNvTVN3d0tWeHVYRzRnSUNBZ0x5OGdSR1ZtWVhWc2RDQjFibTl5WkdWeVpXUWdiR2x6ZEhNZ2FXNGdZMjl1ZEdWdWRDQmhjbVZoYzF4dUlDQWdJSFZzWEc0Z0lDQWdJQ0J3WVdSa2FXNW5MV3hsWm5RNklESnlaVzFjYmlBZ0lDQWdJR3hwYzNRdGMzUjViR1U2SUdScGMyTmNibHh1SUNBZ0lDQWdiR2xjYmlBZ0lDQWdJQ0FnYldGeVoybHVMWFJ2Y0RvZ01DNDFjbVZ0WEc1Y2JpQWdJQ0F2THlCRVpXWmhkV3gwSUc5eVpHVnlaV1FnYkdsemRITWdhVzRnWTI5dWRHVnVkQ0JoY21WaGMxeHVJQ0FnSUc5c1hHNGdJQ0FnSUNCd1lXUmthVzVuTFd4bFpuUTZJREp5WlcxY2JpQWdJQ0FnSUM4dmJHbHpkQzF6ZEhsc1pTMTBlWEJsT2lCMWNIQmxjaTF5YjIxaGJseHVYRzRnSUNBZ0x5OGdTMlZsY0NCemJXRnNiQ0JwYldGblpYTWdabkp2YlNCblpYUjBhVzVuSUdkcFlXNTBYRzRnSUNBZ2FXMW5YRzRnSUNBZ0lDQjNhV1IwYURvZ01UQXdKVnh1WEc1Y2JpOHZJRTFoYVc0Z1kyOXVkR1Z1ZENCaWJHOWpheUJ2YmlCTVpXRmtaWEp6YUdsd0lIQmhaMlZjYmk1dFlXbHVMV0pwYjNOY2JpQWdaR2x6Y0d4aGVUb2dkR0ZpYkdWY2JpQWdjR0ZrWkdsdVp6b2dNbkpsYlZ4dVhHNWNiaTh2SUUxaGFXNGdZMjl1ZEdWdWRDQmliRzlqYXlCdmJpQk9aWGR6SUhCaFoyVmNiaTV0WVdsdUxXNWxkM05jYmlBZ1FHVjRkR1Z1WkNBbGJXRnBibHh1WEc0dkwwMWhhVzRnWTI5dWRHVnVkQ0JzYjJOaGRHbHZibk1nZEdGaWJHVmNiaTVqYVhSNUxXTnZiSFZ0Ymx4dUlDQjNhV1IwYURveE16VndlRnh1TG1Ga1pISmxjM010WTI5c2RXMXVYRzRnSUhkcFpIUm9Pak16TlhCNFhHNHVjR2h2Ym1VdFkyOXNkVzF1WEc1Y2JpNXNiMk5oZEdsdmJpMXdhRzl1WlZ4dUlDQmpiMnh2Y2pva2JtbG5hSFJuY21WbGJseHVJQ0FtT21odmRtVnlYRzRnSUNBZ1kyOXNiM0k2SkdkeVpXVnVYRzVjYmx4dUx5OGdUV0ZwYmlCamIyNTBaVzUwSUdKc2IyTnJJRzl1SUVKc2IyY2dVRzl6ZENCd1lXZGxYRzR1YldGcGJpMXdiM04wWEc0Z0lFQmxlSFJsYm1RZ0pXMWhhVzVjYmx4dUlDQW1YMTkwWlhoMFhHNWNiaUFnSUNBcmJXVmthV0VvWENJOFBYUmhZbXhsZEZ3aUtWeHVJQ0FnSUNBZ2RHVjRkQzFoYkdsbmJqb2diR1ZtZEZ4dVhHNGdJQ0FnS2lBcklDcGNiaUFnSUNBZ0lHMWhjbWRwYmkxMGIzQTZJREZ5WlcxY2JseHVJQ0FnSUdneVhHNGdJQ0FnSUNBcmMzUmhibVJoY21RdGFHVmhaR2x1WnlncFhHNWNiaUFnSUNCb00xeHVJQ0FnSUNBZ0syMXBibTl5TFdobFlXUnBibWNvS1Z4dVhHNGdJQ0FnWm1sblkyRndkR2x2Ymx4dUlDQWdJQ0FnWTI5c2IzSTZJQ1JuY21Gd2FHbDBaVnh1SUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF1TnpWeVpXMWNiaUFnSUNBZ0lHMWhjbWRwYmkxMGIzQTZJREJjYmx4dUlDQWdJR0pzYjJOcmNYVnZkR1ZjYmlBZ0lDQWdJQ3RpYkc5amEzRjFiM1JsS0NsY2JseHVYRzR1WW5KbFlXUmpjblZ0WWx4dUlDQndZV1JrYVc1bkxXSnZkSFJ2YlRvZ01TNDFjbVZ0WEc0Z0lHWnZiblF0YzJsNlpUb3hOSEI0WEc1Y2JpQWdZVnh1SUNBZ0lHTnZiRzl5T2lSbmNtVmxibHh1SUNBZ0lDWTZhRzkyWlhKY2JpQWdJQ0FnSUdOdmJHOXlPaVJ1YVdkb2RHZHlaV1Z1WEc0Z0lITndZVzVjYmlBZ0lDQmpiMnh2Y2pva2MzUnZibVZjYmlJc0lpNW1iM0p0TFhOMFlXNWtZWEprWEc0Z0lHMWhjbWRwYmkxMGIzQTZJREp5WlcxY2JseHVJQ0JwYm5CMWRDeGNiaUFnYVc1d2RYUmJkSGx3WlQxY0ltVnRZV2xzWENKZExGeHVJQ0JwYm5CMWRGdDBlWEJsUFZ3aWJuVnRZbVZ5WENKZExGeHVJQ0JwYm5CMWRGdDBlWEJsUFZ3aWNHRnpjM2R2Y21SY0lsMHNYRzRnSUdsdWNIVjBXM1I1Y0dVOVhDSnpaV0Z5WTJoY0lsMHNYRzRnSUdsdWNIVjBXM1I1Y0dVOVhDSjBaV3hjSWwwc1hHNGdJR2x1Y0hWMFczUjVjR1U5WENKMFpYaDBYQ0pkTEZ4dUlDQnBibkIxZEZ0MGVYQmxQVndpZFhKc1hDSmRMRnh1SUNCcGJuQjFkRnQwZVhCbFBWd2lZMjlzYjNKY0lsMHNYRzRnSUdsdWNIVjBXM1I1Y0dVOVhDSmtZWFJsWENKZExGeHVJQ0JwYm5CMWRGdDBlWEJsUFZ3aWJtRnRaVndpWFN4Y2JpQWdhVzV3ZFhSYmRIbHdaVDFjSW1SaGRHVjBhVzFsWENKZExGeHVJQ0JwYm5CMWRGdDBlWEJsUFZ3aVpHRjBaWFJwYldVdGJHOWpZV3hjSWwwc1hHNGdJR2x1Y0hWMFczUjVjR1U5WENKdGIyNTBhRndpWFN4Y2JpQWdhVzV3ZFhSYmRIbHdaVDFjSW5ScGJXVmNJbDBzWEc0Z0lHbHVjSFYwVzNSNWNHVTlYQ0ozWldWclhDSmRMRnh1SUNCMFpYaDBZWEpsWVZ4dUlDQmNkR052Ykc5eU9pQWtjMmwwWlMxMFpYaDBMV052Ykc5eVhHNGdJRngwWW05eVpHVnlPaUF4Y0hnZ2MyOXNhV1FnSkdKdmNtUmxja052Ykc5eVhHNGdJQ0FnWW05NExYTnBlbWx1WnpvZ1kyOXVkR1Z1ZEMxaWIzaGNiaUFnWEhSaWIzSmtaWEl0Y21Ga2FYVnpPaUF3WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUF4Y21WdFhHNGdJRngwY0dGa1pHbHVaem9nTVhKbGJWeHVJQ0JjZEdScGMzQnNZWGs2SUdKc2IyTnJYRzRnSUZ4MGQybGtkR2c2SURFd01DVmNibHh1WEc0Z0lHeGhZbVZzWEc0Z0lDQWdaR2x6Y0d4aGVUb2dZbXh2WTJ0Y2JseHVJQ0JwYm5CMWRGdDBlWEJsUFZ3aVluVjBkRzl1WENKZExGeHVJQ0JwYm5CMWRGdDBlWEJsUFZ3aWNtVnpaWFJjSWwwc1hHNGdJR2x1Y0hWMFczUjVjR1U5WENKemRXSnRhWFJjSWwxY2JpQWdJQ0F2THlCaGJua2daR1ZtWVhWc2RDQmlkWFIwYjI0Z2MzUjViR1Z6SUhSb1lYUWdibVZsWkNCMGJ5QmlaU0JrYVdabVpYSmxiblFnYjI0Z1ptOXliWE1nWjI4Z2FHVnlaVnh1SUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yWEc1Y2JseHVJQ0FtWDE5amFHVmphMkp2ZUZ4dUlDQWdJR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYTF4dUlDQWdJR1pzYjJGME9pQnNaV1owSUNGcGJYQnZjblJoYm5SY2JpQWdJQ0IzYVdSMGFEb2dZWFYwYnlBaGFXMXdiM0owWVc1MFhHNWNiaUFnSmw5ZlkyaGxZMnRpYjNnZ0t5QnNZV0psYkZ4dUlDQWdJR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYTF4dUlDQWdJR1pzYjJGME9pQnNaV1owSUNGcGJYQnZjblJoYm5SY2JpQWdJQ0J0WVhKbmFXNDZJREV3Y0hnZ01UQndlQ0F5TUhCNElERXdjSGdnSVdsdGNHOXlkR0Z1ZEZ4dVhHNGdJQzV6Wld4bFkzUmliM2hjYmlBZ0lDQmlZV05yWjNKdmRXNWtPaUFrZDJocGRHVmNiaUFnSUNCaWIzSmtaWEl0Y21Ga2FYVnpPaUF3WEc0Z0lDQWdZM1Z5YzI5eU9pQndiMmx1ZEdWeVhHNGdJQ0FnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsWEc0Z0lDQWdhR1ZwWjJoME9pQTBPSEI0WEc1Y2JpQWdJQ0FtT2pwaFpuUmxjbHh1SUNBZ0lDQWdZMjlzYjNJNklDTmpZMk5jYmlBZ0lDQWdJR052Ym5SbGJuUTZJQ2ZpbHI0blhHNGdJQ0FnSUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdWY2JpQWdJQ0FnSUhSdmNEb2dNWEpsYlZ4dUlDQWdJQ0FnY21sbmFIUTZJQzQxY21WdFhHNGdJQ0FnSUNCM2FXUjBhRG9nTVhKbGJWeHVJQ0FnSUNBZ2FHVnBaMmgwT2lBeGNtVnRYRzVjYmx4dUlDQnpaV3hsWTNSY2JpQWdJQ0JpWVdOclozSnZkVzVrT2lBa2QyaHBkR1ZjYmlBZ0lDQmliM2d0YzJoaFpHOTNPaUJ1YjI1bFhHNGdJQ0FnWW05eVpHVnlMWEpoWkdsMWN6b2dNRnh1SUNBZ0lHSnZjbVJsY2pvZ01YQjRJSE52Ykdsa0lDUmliM0prWlhKRGIyeHZjbHh1SUNBZ0lHTnZiRzl5T2lBa2MzUnZibVZjYmlBZ0lDQmpkWEp6YjNJNklIQnZhVzUwWlhKY2JpQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amExeHVJQ0FnSUdadmJuUXRjMmw2WlRvZ01YSmxiVnh1SUNBZ0lHaGxhV2RvZERvZ05qQndlRnh1SUNBZ0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpWeHVYRzRnSUNBZ2NHRmtaR2x1Wnkxc1pXWjBPaUF4Y21WdFhHNGdJQ0FnZDJsa2RHZzZJREV3TUNWY2JpQWdJQ0F0ZDJWaWEybDBMV0Z3Y0dWaGNtRnVZMlU2Ym05dVpWeHVJQ0FnSUMxdGIzb3RZWEJ3WldGeVlXNWpaVG9nYm05dVpWeHVJQ0FnSUdGd2NHVmhjbUZ1WTJVNklHNXZibVZjYmx4dVhHNHVZMjl1ZEdGamRDMTFjMTlmWW5WMGRHOXVYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNSemJHRjBaVnh1SUNCdFlYZ3RkMmxrZEdnNk1UZ3pjSGhjYmlBZ1kyeGxZWEk2WW05MGFGeHVYRzVjYmk4dklFbEZPU0J2ZG1WeWNtbGtaVnh1THk4Z1ZYTnBibWNnYlc5a1pYSnVhWHB5SUdadmNpQm1aV0YwZFhKbElHUmxkR1ZqZEdsdmJseHVMbTV2TFdOemMyZHlZV1JwWlc1MGN5QXVjMlZzWldOMFltOTRPanBoWm5SbGNseHVJQ0I2TFdsdVpHVjRPaUF0TTF4dUlsMHNJbk52ZFhKalpWSnZiM1FpT2lJdmMyOTFjbU5sTHlKOSAqLyIsIi8vIFZhcnNcbiRiYXNlLWZvbnQtc2l6ZTogMTZweFxuJGJhc2UtbGluZS1oZWlnaHQ6IDEuNVxuXG4vLyBUeXBlZmFjZXNcbiRzYW5zOiBOZXdzIEN5Y2xlLCBzYW5zLXNlcmlmXG4kc2VyaWY6IFBsYXlmYWlyIERpc3BsYXksIHNlcmlmXG5cbi8vIEZvbnQgd2VpZ2h0c1xuJHhsaWdodDogMjAwXG4kbGlnaHQ6IDMwMFxuJG5vcm1hbDogNDAwXG4kc2VtaWJvbGQ6IDYwMFxuJGJvbGQ6IDcwMFxuXG4vLyBMaW5lIGhlaWdodCBmdW5jdGlvblxuQGZ1bmN0aW9uIGxpbmUtaGVpZ2h0KClcbiAgQHJldHVybiAkYmFzZS1mb250LXNpemUgKiAkYmFzZS1saW5lLWhlaWdodFxuXG4vLyBWYXIgbXVzdCBiZSBzcGVjaWZpZWQgYWZ0ZXIgcmV0dXJuaW5nIHRoZSBsaW5lLWhlaWdodCBmdW5jdGlvblxuJGNhbC1saW5lLWhlaWdodDogbGluZS1oZWlnaHQoKVxuXG4vLyBNaXhpbnNcbj12ZXJ0LW1hcmdpbigkdG9wOiAxLCAkYm90dG9tOiAxKVxuICBtYXJnaW4tdG9wOiAkY2FsLWxpbmUtaGVpZ2h0ICogJHRvcFxuICBtYXJnaW4tYm90dG9tOiAkY2FsLWxpbmUtaGVpZ2h0ICogJGJvdHRvbVxuXG49dmVydC1wYWRkaW5nKCR0b3A6IDEsICRib3R0b206IDEpXG4gIHBhZGRpbmctdG9wOiAkY2FsLWxpbmUtaGVpZ2h0ICogJHRvcFxuICBwYWRkaW5nLWJvdHRvbTogJGNhbC1saW5lLWhlaWdodCAqICRib3R0b21cblxuXG5odG1sXG4gIGZvbnQtc2l6ZTogJGJhc2UtZm9udC1zaXplXG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGVcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWRcblxuYm9keVxuICBjb2xvcjogJGNoYXJjb2FsXG4gIGxpbmUtaGVpZ2h0OiAxLjVcbiAgZm9udC1mYW1pbHk6ICRzYW5zXG4gIC8vYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRyYW5zcGFyZW50LCB0cmFuc3BhcmVudCBsaW5lLWhlaWdodCgpIC0gMXB4LCAkZ3JlZW4gMXB4ICwgdHJhbnNwYXJlbnQpXG4gIGJhY2tncm91bmQtc2l6ZTogYXV0byBsaW5lLWhlaWdodCgpXG4gIG1hcmdpbjogMFxuXG4vL1tjbGFzcyo9J19faGVhZGxpbmUnXVxuXG5cbi8vIFVzZWQgaW4gYXJ0aWNsZSBoZWFkZXJzIGluIHRoZSAuTWFpbiBjb2x1bW5zXG5bY2xhc3MqPSdfX2hlYWRpbmcnXVxuICBjb2xvcjogJGdyZWVuXG4gIGZvbnQtZmFtaWx5OiAkc2VyaWZcbiAgZm9udC1zaXplOiAyLjVyZW1cbiAgZm9udC13ZWlnaHQ6ICRub3JtYWxcbiAgbGluZS1oZWlnaHQ6IDFcbiAgbWFyZ2luLWJvdHRvbTogMnJlbVxuXG49c3RhbmRhcmQtaGVhZGluZygpXG4gIGNvbG9yOiAkZ3JlZW5cbiAgZm9udC1mYW1pbHk6ICRzZXJpZlxuICBmb250LXNpemU6IDJyZW1cbiAgZm9udC13ZWlnaHQ6ICRub3JtYWxcbiAgbGluZS1oZWlnaHQ6IDFcblxuXG4vLyBGb3VuZCBpbiB0aGUgTWFpbiBCbG9nIFBvc3RzXG49bWlub3ItaGVhZGluZygpXG4gIGNvbG9yOiAkbmlnaHRncmVlblxuICBmb250LWZhbWlseTogJHNlcmlmXG4gIGZvbnQtc2l6ZTogMS4yNXJlbVxuICBmb250LXdlaWdodDogJGJvbGRcbiAgbGluZS1oZWlnaHQ6IDFcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZVxuICArdmVydC1tYXJnaW4oMS41LDApXG5cblxuLy8gVXNlZCBpbiBhcnRpY2xlIGhlYWRlcnMgaW4gdGhlIC5NYWluIGNvbHVtbnNcbj1zbWFsbC1oZWFkaW5nKClcbiAgY29sb3I6ICRncmVlblxuICBmb250LWZhbWlseTogJHNlcmlmXG4gIGZvbnQtc2l6ZTogMS4zNzVyZW1cbiAgZm9udC13ZWlnaHQ6ICRub3JtYWxcbiAgbGluZS1oZWlnaHQ6IDFcblxuXG4vLyBGb3VuZCBpbiB0aGUgTWFpbiBCbG9nIFBvc3RzXG49YmxvY2txdW90ZSgpXG4gIGNvbG9yOiAkZ3JlZW5cbiAgZm9udC1mYW1pbHk6ICRzZXJpZlxuICBmb250LXNpemU6IDEuNXJlbVxuICBmb250LXN0eWxlOiBpdGFsaWNcbiAgZm9udC13ZWlnaHQ6ICRib2xkXG4gICt2ZXJ0LW1hcmdpbigxLjUsMS41KVxuXG5cbi8vaW5wdXRbdHlwZT1cInN1Ym1pdFwiXVxuXG5bY2xhc3MqPV9fYnV0dG9uXSxcbmlucHV0W3R5cGU9XCJidXR0b25cIl0sXG5pbnB1dFt0eXBlPVwicmVzZXRcIl1cbiAgYm9yZGVyOiAxcHggc29saWQgJGdyZWVuXG4gIGN1cnNvcjogcG9pbnRlclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgZm9udC1mYW1pbHk6ICRzZXJpZlxuICBmb250LXNpemU6IDEuMnJlbVxuICBmb250LXN0eWxlOiBpdGFsaWNcbiAgdGV4dC1hbGlnbjogY2VudGVyXG4gIHBhZGRpbmc6IC43NXJlbSAzcmVtXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZVxuICAvKkl0ZW1zIGZvciB0cmFuc2l0aW9uXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50XG4gIGNvbG9yOiAkZ3JlZW5cbiAgLypUcmFuc2l0aW9uIHNldHRpbmdzXG4gIHRyYW5zaXRpb246IGFsbCAuMnMgZWFzZVxuXG4gICY6aG92ZXJcbiAgICAvKlRoZXNlIHdpbGwgdHJhbnNpdGlvbiBvbiBob3ZlclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRncmVlblxuICAgIGNvbG9yOiAkd2hpdGVcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmVcblxuXG4vLyBpbiBwcm9ncmVzc1xuXG4vLyBNaXhpbnNcbj1idXR0b24oJGJhY2tncm91bmQsICRjb2xvciwgJGJvcmRlci1jb2xvcilcbiAgYm9yZGVyOiAxcHggc29saWQgJGJvcmRlci1jb2xvclxuICBmb250LWZhbWlseTogJHNlcmlmXG4gIGZvbnQtc2l6ZTogMS4ycmVtXG4gIGZvbnQtc3R5bGU6IGl0YWxpY1xuICBwYWRkaW5nOiAuNXJlbSAxcmVtXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZVxuICAvKkl0ZW1zIGZvciB0cmFuc2l0aW9uXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50XG4gIGNvbG9yOiAkY29sb3JcbiAgLypUcmFuc2l0aW9uIHNldHRpbmdzXG4gIHRyYW5zaXRpb246IGFsbCAuMnMgZWFzZVxuICAmOmhvdmVyXG4gICAgLypUaGVzZSB3aWxsIHRyYW5zaXRpb24gb24gaG92ZXJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JlZW5cbiAgICBjb2xvcjogJGNvbG9yXG5cblxuLmxvYWRlcl9fYnV0dG9uLmRpc2FibGVkXG4gIGJhY2tncm91bmQtY29sb3I6ICRjbG91ZFxuICBjb2xvcjogJGdyZWVuXG4gIGN1cnNvcjogZGVmYXVsdFxuICBvcGFjaXR5OiAuM1xuIiwiLy8gU2l0ZSBjb2xvciBwYWxldHRlXG4kZ3JlZW46ICMyNjdlNjRcbiRuaWdodGdyZWVuOiAjNDU1NjUyXG4kc2xhdGU6ICNlY2VlZTZcblxuLy8gNTAgc2hhZGVzIG9mIGdyYXlcbiR3aGl0ZTogI2ZmZlxuJHN0ZWFtOiAjZjhmOGY4XG4kY2xvdWQ6ICNlNWU2ZTdcbiRncmFwaGl0ZTogI2NjY1xuJHN0b25lOiAjN2Y3ZTdlXG4kbGVhZDogIzZlNmI2Y1xuJGNoYXJjb2FsOiAjMzMzXG4kYmxhY2s6ICMwMDBcblxuXG4kbW9iaWxlLW5hdi1idG46ICRzbGF0ZVxuXG4vL0JvcmRlciBDb2xvclxuJGJvcmRlckNvbG9yOiAkZ3JhcGhpdGVcblxuLy8gU2l0ZSBiYXNlIHRleHQgY29sb3JzXG4kc2l0ZS10ZXh0LWNvbG9yOiAkY2hhcmNvYWxcbiRzaXRlLXRleHQtY29sb3ItbGluazogJGdyZWVuXG4kc2l0ZS10ZXh0LWNvbG9yLWxpbmstaG92ZXI6ICM0NTU2NTJcblxuXG4vLyBGb290ZXIgY29sb3JzXG4kZm9vdGVyLXRleHQ6ICRuaWdodGdyZWVuXG4kZm9vdGVyLXRleHQtbGluazogJG5pZ2h0Z3JlZW5cbiRmb290ZXItdGV4dC1saW5rLWhvdmVyOiAkZ3JlZW5cbiIsIi8vIGh0dHA6Ly9jc3Ntb2pvLmNvbS9sYXRlc3RfbmV3X2NsZWFyZml4X3NvX2Zhci9cbi5jbGVhcmZpeDphZnRlclxuICBjb250ZW50OiBcIlwiXG4gIGRpc3BsYXk6IHRhYmxlXG4gIGNsZWFyOiBib3RoXG4iLCIuY29udGFpbmVyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZcbiAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAkYm9yZGVyQ29sb3JcbiAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgJGJvcmRlckNvbG9yXG4gIG1hcmdpbjogMCBhdXRvXG4gIG1heC13aWR0aDogMTIwMHB4XG5cblxuW2NsYXNzKj0nY29sLSddXG4gIGRpc3BsYXk6IHRhYmxlLWNlbGxcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZVxuXG4gICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrXG4gICAgdGV4dC1hbGlnbjogY2VudGVyXG5cbi8vMiBjb2x1bW5zIHdpZGVcbi8vIFRoaXMgaXMgdXNlZCBpbiB0aGUgZm9vdGVyIGZvciBuYXJyb3dlciBjb2x1bW5zIG9mIGxpbmtzXG4uY29sLTItMTJcbiAgd2lkdGg6IDIvMTIgKiAxMDAlXG5cbiAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICB3aWR0aDogMTAwJVxuXG4vLzMgY29sdW1ucyB3aWRlXG4vLyBUaGlzIGlzIHVzZWQgaW4gdGhlIGZvb3RlciBmb3IgZmF0dGVyIGNvbHVtbnMgb2YgbG9uZ2VyLXRpdGxlZCBsaW5rc1xuLmNvbC0zLTEyXG4gIHdpZHRoOiAzLzEyICogMTAwJVxuXG4gICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgd2lkdGg6IDEwMCVcblxuLy8gNCBjb2x1bW5zIHdpZGUuXG4vLyBUaGlzIGlzIHVzZWQgaW4gdGhlIExlYWRlcnNoaXAgcGFnZS5cbi5jb2wtNC0xMlxuICB3aWR0aDogNC8xMiAqIDEwMCVcblxuICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgIHdpZHRoOiAxMDAlXG5cblxuLy8gNSBjb2x1bW5zIHdpZGUuXG4vLyBUaGlzIGlzIHVzZWQgaW4gbW9zdCBvZiB0aGUgYmFubmVycy5cbi8vIEl0IGlzIGFsc28gdXNlZCBpbiB0aGUgTWFpbiBtb2R1bGUgYXJlYSB0aGF0IGluY2x1ZGVzIHRoZSBzaWRlYmFyLlxuLmNvbC01LTEyXG4gIHdpZHRoOiA1LzEyICogMTAwJVxuXG4gICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgd2lkdGg6IDEwMCVcblxuXG4vLyA2IGNvbHVtbnMgd2lkZS5cbi8vIFRoaXMgd2lsbCBzcGFuIGhhbGYgdGhlIGF2YWlsYWJsZSB3aWR0aFxuLy8gVGhlIENhcmQgTW9kdWxlIG9uIHRoZSBob21lcGFnZSB1c2VzIHRoaXNcbi5jb2wtNi0xMlxuICB3aWR0aDogNi8xMiAqIDEwMCVcblxuICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgIHdpZHRoOiAxMDAlXG5cblxuLy8gNyBjb2x1bW5zIHdpZGUuXG4vLyBUaGlzIGlzIHVzZWQgaW4gbW9zdCBvZiB0aGUgYmFubmVycy5cbi8vIEl0IGlzIGFsc28gdXNlZCBpbiB0aGUgTWFpbiBtb2R1bGUgYXJlYSB0aGF0IGluY2x1ZGVzIHRoZSBzaWRlYmFyLlxuLy8gW2NsYXNzKj0nLS1jb2wtNy0xMiddXG4uY29sLTctMTJcbiAgd2lkdGg6IDcvMTIgKiAxMDAlXG5cbiAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICB3aWR0aDogMTAwJVxuXG5cbi8vIDggY29sdW1ucyB3aWRlLlxuLy8gVGhpcyBpcyB1c2VkIGluIHRoZSBMZWFkZXJzaGlwIHBhZ2UuXG4uY29sLTgtMTJcbiAgd2lkdGg6IDgvMTIgKiAxMDAlXG5cbiAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICB3aWR0aDogMTAwJVxuXG5cbi5jb2wtOS0xMlxuICB3aWR0aDogOS8xMiAqIDEwMCVcblxuICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgIHdpZHRoOiAxMDAlXG5cblxuLmNvbC0xMC0xMlxuICB3aWR0aDogMTAvMTIgKiAxMDAlXG5cbiAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICB3aWR0aDogMTAwJVxuXG4uY29sLTExLTEyXG4gIHdpZHRoOiAxMS8xMiAqIDEwMCVcblxuICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgIHdpZHRoOiAxMDAlXG4iLCIvL1xuXHQgXyAgICAgICAgICAgIF8gICAgICAgICAgIF8gICAgICAgICAgICAgICAgICAgICAgICAgICBfIF9cblx0KF8pICAgICAgICAgIHwgfCAgICAgICAgIHwgfCAgICAgICAgICAgICAgICAgICAgICAgICB8IChfKVxuXHQgXyBfIF9fICAgX19ffCB8XyAgIF8gIF9ffCB8IF9fXyAgIF8gX18gX19fICAgX19fICBfX3wgfF8gIF9fIF9cblx0fCB8ICdfIFxcIC8gX198IHwgfCB8IHwvIF9gIHwvIF8gXFwgfCAnXyBgIF8gXFwgLyBfIFxcLyBfYCB8IHwvIF9gIHxcblx0fCB8IHwgfCB8IChfX3wgfCB8X3wgfCAoX3wgfCAgX18vIHwgfCB8IHwgfCB8ICBfXy8gKF98IHwgfCAoX3wgfFxuXHR8X3xffCB8X3xcXF9fX3xffFxcX18sX3xcXF9fLF98XFxfX198IHxffCB8X3wgfF98XFxfX198XFxfXyxffF98XFxfXyxffFxuXG5cdFNpbXBsZSwgZWxlZ2FudCBhbmQgbWFpbnRhaW5hYmxlIG1lZGlhIHF1ZXJpZXMgaW4gU2Fzc1xuXG5cdGh0dHA6Ly9pbmNsdWRlLW1lZGlhLmNvbVxuXG4gIEF1dGhvcjogRWR1YXJkbyBCb3VjYXMgPG1haWxAZWR1YXJkb2JvdWNhcy5jb20+XG5cblxuICBDcmVhdGVzIGEgbGlzdCBvZiBnbG9iYWwgYnJlYWtwb2ludHNcblxuICBAYXV0aG9yIEVkdWFyZG8gQm91Y2FzXG5cbiAgQGV4YW1wbGUgc2NzcyAtIENyZWF0ZXMgYSBzaW5nbGUgYnJlYWtwb2ludCB3aXRoIHRoZSBsYWJlbCBgcGhvbmVgXG4gICRicmVha3BvaW50czogKCdwaG9uZSc6IDMyMHB4KTtcblxuJGJyZWFrcG9pbnRzOiAoXCJwaG9uZVwiOiA0ODBweCwgXCJ0YWJsZXRcIjogNzY4cHgsIFwiZGVza3RvcFwiOiAxMDIzcHgpICFkZWZhdWx0XG5cbi8vXG4gIENyZWF0ZXMgYSBsaXN0IG9mIHN0YXRpYyBleHByZXNzaW9ucyBvciBtZWRpYSB0eXBlc1xuXG4gIEBhdXRob3IgRWR1YXJkbyBCb3VjYXNcblxuICBAZXhhbXBsZSBzY3NzIC0gQ3JlYXRlcyBhIHNpbmdsZSBtZWRpYSB0eXBlIChzY3JlZW4pXG4gICAkbWVkaWEtZXhwcmVzc2lvbnM6ICgnc2NyZWVuJzogJ3NjcmVlbicpO1xuXG4gIEBleGFtcGxlIHNjc3MgLSBDcmVhdGVzIGEgc3RhdGljIGV4cHJlc3Npb24gd2l0aCBsb2dpY2FsIGRpc2p1bmN0aW9uIChPUiBvcGVyYXRvcilcbiAgICRtZWRpYS1leHByZXNzaW9uczogKFxuICBcdFx0J3JldGluYTJ4JzogKFxuICBcdFx0XHQnKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMiknLFxuICBcdFx0XHQnKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpJ1xuICBcdFx0KVxuICBcdCk7XG5cbiRtZWRpYS1leHByZXNzaW9uczogKFwic2NyZWVuXCI6IFwic2NyZWVuXCIsIFwicHJpbnRcIjogXCJwcmludFwiLCBcImhhbmRoZWxkXCI6IFwiaGFuZGhlbGRcIiwgXCJyZXRpbmEyeFwiOiAoXCIoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKVwiLCBcIihtaW4tcmVzb2x1dGlvbjogMTkyZHBpKVwiKSwgXCJyZXRpbmEzeFwiOiAoXCIoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAzKVwiLCBcIihtaW4tcmVzb2x1dGlvbjogMzUwZHBpKVwiKSkgIWRlZmF1bHRcblxuLy9cbiAgRGVmaW5lcyBhIG51bWJlciB0byBiZSBhZGRlZCBvciBzdWJ0cmFjdGVkIGZyb20gZWFjaCB1bml0IHdoZW4gZGVjbGFyaW5nIGJyZWFrcG9pbnRzIHdpdGggZXhjbHVzaXZlIGludGVydmFsc1xuXG4gIEBhdXRob3IgRWR1YXJkbyBCb3VjYXNcblxuICBAZXhhbXBsZSBzY3NzIC0gSW50ZXJ2YWwgZm9yIHBpeGVscyBpcyBkZWZpbmVkIGFzIGAxYCBieSBkZWZhdWx0XG4gICBAaW5jbHVkZSBtZWRpYShcIj4xMjhweFwiKSB7fVxuXG4gIEdlbmVyYXRlczpcbiAgQG1lZGlhIChtaW4td2lkdGg6IDEyOXB4KSB7fVxuXG4gIEBleGFtcGxlIHNjc3MgLSBJbnRlcnZhbCBmb3IgZW1zIGlzIGRlZmluZWQgYXMgYDAuMDFgIGJ5IGRlZmF1bHRcbiAgIEBpbmNsdWRlIG1lZGlhKFwiPjIwZW1cIikge31cblxuICBHZW5lcmF0ZXM6XG4gIEBtZWRpYSAobWluLXdpZHRoOiAyMC4wMWVtKSB7fVxuXG4gIEBleGFtcGxlIHNjc3MgLSBJbnRlcnZhbCBmb3IgcmVtcyBpcyBkZWZpbmVkIGFzIGAwLjFgIGJ5IGRlZmF1bHQsIHRvIGJlIHVzZWQgd2l0aCBgZm9udC1zaXplOiA2Mi41JTtgXG4gICBAaW5jbHVkZSBtZWRpYShcIj4yLjByZW1cIikge31cblxuICBHZW5lcmF0ZXM6XG4gIEBtZWRpYSAobWluLXdpZHRoOiAyLjFyZW0pIHt9XG5cbiR1bml0LWludGVydmFsczogKFwicHhcIjogMSwgXCJlbVwiOiAwLjAxLCBcInJlbVwiOiAwLjEpICFkZWZhdWx0XG5cbi8vXG4gIEdlbmVyYXRlcyBhIG1lZGlhIHF1ZXJ5IGJhc2VkIG9uIGEgbGlzdCBvZiBjb25kaXRpb25zXG5cbiAgQGF1dGhvciBFZHVhcmRvIEJvdWNhc1xuXG4gIEBwYXJhbSB7TGlzdH0gICAkY29uZGl0aW9ucyAgLSBNZWRpYSBxdWVyeSBjb25kaXRpb25zXG5cbiAgQGV4YW1wbGUgc2NzcyAtIFdpdGggYSBzaW5nbGUgc2V0IGJyZWFrcG9pbnRcbiAgIEBpbmNsdWRlIG1lZGlhKFwiPnBob25lXCIpIHsgfVxuXG4gIEBleGFtcGxlIHNjc3MgLSBXaXRoIHR3byBzZXQgYnJlYWtwb2ludHNcbiAgIEBpbmNsdWRlIG1lZGlhKFwiPnBob25lXCIsIFwiPD10YWJsZXRcIikgeyB9XG5cbiAgQGV4YW1wbGUgc2NzcyAtIFdpdGggY3VzdG9tIHZhbHVlc1xuICAgQGluY2x1ZGUgbWVkaWEoXCI+PTM1OHB4XCIsIFwiPDg1MHB4XCIpIHsgfVxuXG4gIEBleGFtcGxlIHNjc3MgLSBXaXRoIHNldCBicmVha3BvaW50cyB3aXRoIGN1c3RvbSB2YWx1ZXNcbiAgIEBpbmNsdWRlIG1lZGlhKFwiPmRlc2t0b3BcIiwgXCI8PTEzNTBweFwiKSB7IH1cblxuICBAZXhhbXBsZSBzY3NzIC0gV2l0aCBhIHN0YXRpYyBleHByZXNzaW9uXG4gICBAaW5jbHVkZSBtZWRpYShcInJldGluYTJ4XCIpIHsgfVxuXG4gIEBleGFtcGxlIHNjc3MgLSBNaXhpbmcgZXZlcnl0aGluZ1xuICAgQGluY2x1ZGUgbWVkaWEoXCI+PTM1MHB4XCIsIFwiPHRhYmxldFwiLCBcInJldGluYTN4XCIpIHsgfVxuXG5cbj1tZWRpYSgkY29uZGl0aW9ucy4uLilcbiAgQGZvciAkaSBmcm9tIDEgdGhyb3VnaCBsZW5ndGgoJGNvbmRpdGlvbnMpXG4gICAgJGNvbmRpdGlvbnM6IHNldC1udGgoJGNvbmRpdGlvbnMsICRpLCBwYXJzZS1leHByZXNzaW9uKG50aCgkY29uZGl0aW9ucywgJGkpKSlcbiAgJGJyYW5jaGVzOiBnZXQtcXVlcnktYnJhbmNoZXMoJGNvbmRpdGlvbnMpXG4gICRxdWVyeTogXCJcIlxuICBAZWFjaCAkYnJhbmNoIGluICRicmFuY2hlc1xuICAgIEBpZiBzdHItbGVuZ3RoKCRxdWVyeSkgIT0gMFxuICAgICAgJHF1ZXJ5OiAkcXVlcnkgKyBcIiwgXCJcbiAgICAkcXVlcnk6ICRxdWVyeSArICRicmFuY2hcbiAgQG1lZGlhICN7JHF1ZXJ5fVxuICAgIEBjb250ZW50XG5cbi8vXG4gIFJlYWRzIGEgbGlzdCBvZiBtZWRpYSBxdWVyeSBleHByZXNzaW9ucyBhbmQgc2VwYXJhdGVzIGxvZ2ljYWwgZGlzanVuY3Rpb25zIGludG8gZGlmZmVyZW50IGJyYW5jaGVzXG5cbiAgQGF1dGhvciBFZHVhcmRvIEJvdWNhc1xuICBAcGFyYW0ge0xpc3R9ICAgJGV4cHJlc3Npb25zICAtIGxpc3Qgb2YgZXhwcmVzc2lvbnNcbiAgQHRocm93cyBgJGV4cHJlc3Npb25gIGlzIG5vdCBhIHZhbGlkIGV4cHJlc3Npb25cblxuICBAcmV0dXJuIHtMaXN0IHwgTnVsbH1cblxuXG5AZnVuY3Rpb24gZ2V0LXF1ZXJ5LWJyYW5jaGVzKCRleHByZXNzaW9ucylcbiAgJHJlc3VsdDogXCJcIlxuICAkaGFzLWdyb3VwczogZmFsc2VcbiAgLy8gR2V0dGluZyBpbml0aWFsIHNuYXBzaG90IGFuZCBsb29raW5nIGZvciBncm91cHNcbiAgQGVhY2ggJGV4cHJlc3Npb24gaW4gJGV4cHJlc3Npb25zXG4gICAgQGlmIHN0ci1sZW5ndGgoJHJlc3VsdCkgIT0gMFxuICAgICAgJHJlc3VsdDogJHJlc3VsdCArIFwiIGFuZCBcIlxuICAgIEBpZiB0eXBlLW9mKCRleHByZXNzaW9uKSA9PSBcInN0cmluZ1wiXG4gICAgICAkcmVzdWx0OiAkcmVzdWx0ICsgJGV4cHJlc3Npb25cbiAgICBAZWxzZSBpZiB0eXBlLW9mKCRleHByZXNzaW9uKSA9PSBcImxpc3RcIlxuICAgICAgJHJlc3VsdDogJHJlc3VsdCArIG50aCgkZXhwcmVzc2lvbiwgMSlcbiAgICAgICRoYXMtZ3JvdXBzOiB0cnVlXG4gICAgQGVsc2VcbiAgICAgIEB3YXJuIFwiI3skZXhwcmVzc2lvbn0gaXMgbm90IGEgdmFsaWQgZXhwcmVzc2lvbi5cIlxuICAvLyBJZiB3ZSBoYXZlIGdyb3Vwcywgd2UgaGF2ZSB0byBjcmVhdGUgYWxsIHBvc3NpYmxlIGNvbWJpbmF0aW9uc1xuICBAaWYgJGhhcy1ncm91cHNcbiAgICBAZWFjaCAkZXhwcmVzc2lvbiBpbiAkZXhwcmVzc2lvbnNcbiAgICAgIEBpZiB0eXBlLW9mKCRleHByZXNzaW9uKSA9PSBcImxpc3RcIlxuICAgICAgICAkZmlyc3Q6IG50aCgkZXhwcmVzc2lvbiwgMSlcbiAgICAgICAgQGVhY2ggJG1lbWJlciBpbiAkZXhwcmVzc2lvblxuICAgICAgICAgIEBpZiAkbWVtYmVyICE9ICRmaXJzdFxuICAgICAgICAgICAgQGVhY2ggJHBhcnRpYWwgaW4gJHJlc3VsdFxuICAgICAgICAgICAgICAkcmVzdWx0OiBqb2luKCRyZXN1bHQsIHN0ci1yZXBsYWNlLWZpcnN0KCRmaXJzdCwgJG1lbWJlciwgJHBhcnRpYWwpKVxuICBAcmV0dXJuICRyZXN1bHRcblxuLy9cbiAgUGFyc2VzIGEgc3RyaW5nIHRvIGZvcm0gYSBtZWRpYSBxdWVyeSBleHByZXNzaW9uXG5cbiAgQGF1dGhvciBFZHVhcmRvIEJvdWNhc1xuXG4gIEBwYXJhbSB7U3RyaW5nfSAgICRleHByZXNzaW9uICAtIGV4cHJlc3Npb24gKGluIHN0cmluZylcbiAgQHRocm93cyBFeHByZXNzaW9uIHdpdGggdHlwZSBgdHlwZS1vZigkZXhwcmVzc2lvbilgIGRldGVjdGVkLCBzdHJpbmcgZXhwZWN0ZWRcbiAgQHRocm93cyBgJGV4cHJlc3Npb25gIGlzIG1pc3NpbmcgYW4gb3BlcmF0b3JcbiAgQHRocm93cyBVbmtub3duIHVuaXQ6IGAkdW5pdGBcblxuICBAcmV0dXJuIHtTdHJpbmcgfCBOdWxsfVxuXG5cbkBmdW5jdGlvbiBwYXJzZS1leHByZXNzaW9uKCRleHByZXNzaW9uKVxuICAkb3BlcmF0b3I6IFwiXCJcbiAgJHZhbHVlOiBcIlwiXG4gICRlbGVtZW50OiBcIlwiXG4gICRyZXN1bHQ6IFwiXCJcbiAgJGlzLXdpZHRoOiB0cnVlXG4gIEBpZiB0eXBlLW9mKCRleHByZXNzaW9uKSAhPSBcInN0cmluZ1wiXG4gICAgQHdhcm4gXCJFeHByZXNzaW9uIHdpdGggdHlwZSBgI3t0eXBlLW9mKCRleHByZXNzaW9uKX1gIGRldGVjdGVkLCBzdHJpbmcgZXhwZWN0ZWQuXCJcbiAgLy8gU2VwYXJhdGluZyB0aGUgb3BlcmF0b3IgZnJvbSB0aGUgcmVzdCBvZiB0aGUgZXhwcmVzc2lvblxuICBAaWYgc3RyLXNsaWNlKCRleHByZXNzaW9uLCAyLCAyKSA9PSBcIj1cIlxuICAgICRvcGVyYXRvcjogc3RyLXNsaWNlKCRleHByZXNzaW9uLCAxLCAyKVxuICAgICR2YWx1ZTogc3RyLXNsaWNlKCRleHByZXNzaW9uLCAzKVxuICBAZWxzZVxuICAgICRvcGVyYXRvcjogc3RyLXNsaWNlKCRleHByZXNzaW9uLCAxLCAxKVxuICAgICR2YWx1ZTogc3RyLXNsaWNlKCRleHByZXNzaW9uLCAyKVxuICAvLyBDaGVja2luZyB3aGF0IHR5cGUgb2YgZXhwcmVzc2lvbiB3ZXJlIGRlYWxpbmcgd2l0aFxuICBAaWYgbWFwLWhhcy1rZXkoJGJyZWFrcG9pbnRzLCAkdmFsdWUpXG4gICAgJHJlc3VsdDogbWFwLWdldCgkYnJlYWtwb2ludHMsICR2YWx1ZSlcbiAgQGVsc2UgaWYgbWFwLWhhcy1rZXkoJG1lZGlhLWV4cHJlc3Npb25zLCAkZXhwcmVzc2lvbilcbiAgICAkcmVzdWx0OiBtYXAtZ2V0KCRtZWRpYS1leHByZXNzaW9ucywgJGV4cHJlc3Npb24pXG4gICAgJGlzLXdpZHRoOiBmYWxzZVxuICBAZWxzZVxuICAgICRyZXN1bHQ6IHRvLW51bWJlcigkdmFsdWUpXG4gIEBpZiAkaXMtd2lkdGhcbiAgICAkdW5pdDogdW5pdCgkcmVzdWx0KVxuICAgICRpbnRlcnZhbDogMFxuICAgIEBpZiBtYXAtaGFzLWtleSgkdW5pdC1pbnRlcnZhbHMsICR1bml0KVxuICAgICAgJGludGVydmFsOiBtYXAtZ2V0KCR1bml0LWludGVydmFscywgJHVuaXQpXG4gICAgQGVsc2VcbiAgICAgIEB3YXJuIFwiVW5rbm93biB1bml0OiAjeyR1bml0fVwiXG4gICAgQGlmICRvcGVyYXRvciA9PSBcIj5cIlxuICAgICAgJGVsZW1lbnQ6IFwiKG1pbi13aWR0aDogI3skcmVzdWx0ICsgJGludGVydmFsfSlcIlxuICAgIEBlbHNlIGlmICRvcGVyYXRvciA9PSBcIjxcIlxuICAgICAgJGVsZW1lbnQ6IFwiKG1heC13aWR0aDogI3skcmVzdWx0IC0gJGludGVydmFsfSlcIlxuICAgIEBlbHNlIGlmICRvcGVyYXRvciA9PSBcIj49XCJcbiAgICAgICRlbGVtZW50OiBcIihtaW4td2lkdGg6ICN7JHJlc3VsdH0pXCJcbiAgICBAZWxzZSBpZiAkb3BlcmF0b3IgPT0gXCI8PVwiXG4gICAgICAkZWxlbWVudDogXCIobWF4LXdpZHRoOiAjeyRyZXN1bHR9KVwiXG4gICAgQGVsc2VcbiAgICAgIEB3YXJuIFwiI3skZXhwcmVzc2lvbn0gaXMgbWlzc2luZyBhbiBvcGVyYXRvci5cIlxuICBAZWxzZVxuICAgICRlbGVtZW50OiAkcmVzdWx0XG4gIEByZXR1cm4gJGVsZW1lbnRcblxuLy9cbiAgUmVwbGFjZXMgdGhlIGZpcnN0IG9jY3VyZW5jZSBvZiB0aGUgc3RyaW5nIHdpdGggdGhlIHJlcGxhY2VtZW50IHN0cmluZ1xuXG4gIEBhdXRob3IgRWR1YXJkbyBCb3VjYXNcblxuICBAcGFyYW0ge1N0cmluZ30gICAkc2VhcmNoICAtIFRoZSB2YWx1ZSBiZWluZyBzZWFyY2hlZCBmb3JcbiAgQHBhcmFtIHtTdHJpbmd9ICAgJHJlcGxhY2UgIC0gVGhlIHJlcGxhY2VtZW50IHN0cmluZ1xuICBAcGFyYW0ge1N0cmluZ30gICAkc3ViamVjdCAgLSBUaGUgc3RyaW5nIGJlaW5nIHJlcGxhY2VkIG9uXG5cbiAgQHJldHVybiB7U3RyaW5nIHwgTnVsbH1cblxuXG5AZnVuY3Rpb24gc3RyLXJlcGxhY2UtZmlyc3QoJHNlYXJjaCwgJHJlcGxhY2UsICRzdWJqZWN0KVxuICAkc2VhcmNoLXN0YXJ0OiBzdHItaW5kZXgoJHN1YmplY3QsICRzZWFyY2gpXG4gIEBpZiAkc2VhcmNoLXN0YXJ0ID09IG51bGxcbiAgICBAcmV0dXJuICRzdWJqZWN0XG4gICRyZXN1bHQ6IHN0ci1zbGljZSgkc3ViamVjdCwgMCwgJHNlYXJjaC1zdGFydCAtIDEpXG4gICRyZXN1bHQ6ICRyZXN1bHQgKyAkcmVwbGFjZVxuICAkcmVzdWx0OiAkcmVzdWx0ICsgc3RyLXNsaWNlKCRzdWJqZWN0LCAkc2VhcmNoLXN0YXJ0ICsgc3RyLWxlbmd0aCgkc2VhcmNoKSlcbiAgQHJldHVybiAkcmVzdWx0XG5cbi8vXG4gIENhc3RzIGEgbnVtYmVyIHRvIGEgc3RyaW5nXG5cbiAgQGF1dGhvciBIdWdvIEdpcmF1ZGVsXG5cbiAgQHBhcmFtIHtTdHJpbmd9ICAgJHN0cmluZyAgLSBOdW1iZXIgdG8gYmUgcGFyc2VkXG5cbiAgQHJldHVybiB7TGlzdCB8IE51bGx9XG5cbkBmdW5jdGlvbiB0by1udW1iZXIoJHN0cmluZylcbiAgLy8gTWF0cmljZXNcbiAgJHN0cmluZ3M6IFwiMFwiIFwiMVwiIFwiMlwiIFwiM1wiIFwiNFwiIFwiNVwiIFwiNlwiIFwiN1wiIFwiOFwiIFwiOVwiXG4gICRudW1iZXJzOiAwIDEgMiAzIDQgNSA2IDcgOCA5XG4gIC8vIFJlc3VsdFxuICAkcmVzdWx0OiAwXG4gICRkaXZpZGVyOiAwXG4gICRtaW51czogZmFsc2VcbiAgLy8gTG9vcGluZyB0aHJvdWdoIGFsbCBjaGFyYWN0ZXJzXG4gIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggc3RyLWxlbmd0aCgkc3RyaW5nKVxuICAgICRjaGFyYWN0ZXI6IHN0ci1zbGljZSgkc3RyaW5nLCAkaSwgJGkpXG4gICAgJGluZGV4OiBpbmRleCgkc3RyaW5ncywgJGNoYXJhY3RlcilcbiAgICBAaWYgJGNoYXJhY3RlciA9PSBcIi1cIlxuICAgICAgJG1pbnVzOiB0cnVlXG4gICAgQGVsc2UgaWYgJGNoYXJhY3RlciA9PSBcIi5cIlxuICAgICAgJGRpdmlkZXI6IDFcbiAgICBAZWxzZVxuICAgICAgQGlmIHR5cGUtb2YoJGluZGV4KSAhPSBcIm51bWJlclwiXG4gICAgICAgICRyZXN1bHQ6IGlmKCRtaW51cywgJHJlc3VsdCAqIC0xLCAkcmVzdWx0KVxuICAgICAgICBAcmV0dXJuIF9sZW5ndGgoJHJlc3VsdCwgc3RyLXNsaWNlKCRzdHJpbmcsICRpKSlcbiAgICAgICRudW1iZXI6IG50aCgkbnVtYmVycywgJGluZGV4KVxuICAgICAgQGlmICRkaXZpZGVyID09IDBcbiAgICAgICAgJHJlc3VsdDogJHJlc3VsdCAqIDEwXG4gICAgICBAZWxzZVxuICAgICAgICAvLyBNb3ZlIHRoZSBkZWNpbWFsIGRvdCB0byB0aGUgbGVmdFxuICAgICAgICAkZGl2aWRlcjogJGRpdmlkZXIgKiAxMFxuICAgICAgICAkbnVtYmVyOiAkbnVtYmVyIC8gJGRpdmlkZXJcbiAgICAgICRyZXN1bHQ6ICRyZXN1bHQgKyAkbnVtYmVyXG4gIEByZXR1cm4gaWYoJG1pbnVzLCAkcmVzdWx0ICogLTEsICRyZXN1bHQpXG5cbkBmdW5jdGlvbiBfbGVuZ3RoKCRudW1iZXIsICR1bml0KVxuICAkc3RyaW5nczogXCJweFwiIFwiY21cIiBcIm1tXCIgXCIlXCIgXCJjaFwiIFwicGljYVwiIFwiaW5cIiBcImVtXCIgXCJyZW1cIiBcInB0XCIgXCJwY1wiIFwiZXhcIiBcInZ3XCIgXCJ2aFwiIFwidm1pblwiIFwidm1heFwiXG4gICR1bml0czogMXB4IDFjbSAxbW0gMSUgMWNoIDFwaWNhIDFpbiAxZW0gMXJlbSAxcHQgMXBjIDFleCAxdncgMXZoIDF2bWluIDF2bWF4XG4gICRpbmRleDogaW5kZXgoJHN0cmluZ3MsICR1bml0KVxuICBAaWYgdHlwZS1vZigkaW5kZXgpICE9IFwibnVtYmVyXCJcbiAgICBAd2FybiBcIlVua25vd24gdW5pdCBgI3skdW5pdH1gLlwiXG4gICAgQHJldHVybiBmYWxzZVxuICBAcmV0dXJuICRudW1iZXIgKiBudGgoJHVuaXRzLCAkaW5kZXgpXG4iLCIqXG4gIG1hcmdpbjogMFxuICBwYWRkaW5nOiAwXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3hcblxuICAmOjphZnRlciwgJjo6YmVmb3JlXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveFxuXG5ib2R5XG4gIGJhY2tncm91bmQtY29sb3I6ICRzbGF0ZVxuICBwYWRkaW5nOiAwXG5cbmFcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lXG4gIGNvbG9yOiRncmVlblxuICAmOmhvdmVyXG4gICAgY29sb3I6JG5pZ2h0Z3JlZW5cbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZVxuXG4vL1Jlc2V0IGZsZXhib3ggc2V0dGluZ3Mgd2hlbiByZXNwb25kaW5nIGJlbG93IGRlc2t0b3Bcbj1yZXNwb25zaXZlLXN0YWNrXG4gICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgZmxleC1mbG93OiBjb2x1bW5cbiIsIi8vIFRoZSB0YWJsZXMgc3RhcnQgdG8gbG9vayBmdWdseSBhdCBhcm91bmQgNzAwcHgsIHNvIGxldCdzIHN0YXJ0IHJlc3BvbmRpbmcgdGhlcmVcbiR0YWJsZS1icmVhazogXCI8PTcwMHB4XCJcblxudGFibGVcblx0bWFyZ2luOiAwIDAgMS41ZW1cblx0d2lkdGg6IDEwMCVcblxudHJcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRjbG91ZFxuXG4gICttZWRpYSgkdGFibGUtYnJlYWspXG4gICAgbWFyZ2luLXRvcDogMCAhaW1wb3J0YW50O1xuXG4gICAgJjpmaXJzdC1jaGlsZFxuICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICRjbG91ZFxuXG4gICY6bnRoLWNoaWxkKGV2ZW4pXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHN0ZWFtXG5cbnRkXG4gIHZlcnRpY2FsLWFsaWduOiB0b3BcbiAgcGFkZGluZzogMTBweCA1cHhcblxuICArbWVkaWEoJHRhYmxlLWJyZWFrKVxuICAgIG1hcmdpbi10b3A6IDAgIWltcG9ydGFudDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmVcbiAgICBwYWRkaW5nLWxlZnQ6IDQwJVxuXG4gICAgJjpiZWZvcmVcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZVxuICAgICAgdG9wOiA2cHhcbiAgICAgIGxlZnQ6IDZweFxuICAgICAgd2lkdGg6IDQwJVxuICAgICAgcGFkZGluZy1yaWdodDogMTBweFxuICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcFxuICAgICAgZm9udC13ZWlnaHQ6ICRzZW1pYm9sZFxuXG5cbiAgICAmOm50aC1vZi10eXBlKDEpXG4gICAgICAmOmJlZm9yZVxuICAgICAgICBjb250ZW50OiBcIkNpdHk6IFwiXG4gICAgJjpudGgtb2YtdHlwZSgyKVxuICAgICAgJjpiZWZvcmVcbiAgICAgICAgY29udGVudDogXCJBZGRyZXNzOiBcIlxuICAgICY6bnRoLW9mLXR5cGUoMylcbiAgICAgICY6YmVmb3JlXG4gICAgICAgIGNvbnRlbnQ6IFwiUGhvbmU6IFwiXG5cbnRoZWFkXG4gIGJhY2tncm91bmQtY29sb3I6ICRjbG91ZFxuXG4gIHRyXG4gICAgLy9IaWRlIHRoZSB0aGVhZCBpbmZvcm1hdGlvbiBpbiBhbiBhY2Nlc3NpYmxlIHdheVxuXG4gICAgK21lZGlhKCR0YWJsZS1icmVhaylcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZVxuICAgICAgdG9wOiAtOTk5OXB4XG4gICAgICBsZWZ0OiAtOTk5OXB4XG5cbiAgdGhcbiAgICBmb250LXdlaWdodDogJHNlbWlib2xkXG4gICAgdGV4dC1hbGlnbjogbGVmdFxuICAgIHBhZGRpbmc6IDVweFxuXG50YWJsZSwgdGhlYWQsIHRib2R5LCB0aCwgdGQsIHRyXG4gICttZWRpYSgkdGFibGUtYnJlYWspXG4gICAgZGlzcGxheTogYmxvY2tcbiIsIi5uYXYtbWlub3JcbiAgZGlzcGxheTogYmxvY2tcbiAgdGV4dC1hbGlnbjogcmlnaHRcblxuICAmX19jb250YWluZXJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGVcbiAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICRib3JkZXJDb2xvclxuICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICRib3JkZXJDb2xvclxuICAgIG1hcmdpbjogMCBhdXRvXG4gICAgcGFkZGluZy1yaWdodDogMS41cmVtXG4gICAgcGFkZGluZy10b3A6IDFyZW1cbiAgICBtYXgtd2lkdGg6IDEyMDBweFxuXG4gICAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICAgIC8vZGlzcGxheTogbm9uZVxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyXG5cbiAgbGlcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcblxuICAgICY6YWZ0ZXJcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgICAgY29udGVudDogJyB8ICdcbiAgICAgIGNvbG9yOiAkZ3JlZW5cbiAgICAgIG1hcmdpbjogMCAycHggMCAuM3JlbVxuXG4gICAgJjpudGgtY2hpbGQoMylcblxuICAgICAgJjphZnRlclxuICAgICAgICBjb250ZW50OiAnICdcblxuICAgICY6bGFzdC1jaGlsZFxuICAgICAgYVxuICAgICAgICBmb250LXdlaWdodDpib2xkXG4gICAgICAgIG1hcmdpbi1yaWdodDogMTBweFxuXG4gICZfX2xpbmtcbiAgICBjb2xvcjogJGNoYXJjb2FsXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrXG4gICAgcGFkZGluZzogMCAuM3JlbSAwXG5cbiAgICAmOmhvdmVyXG4gICAgICBjb2xvcjogJGdyZWVuXG5cbi5zaXRlLW1hcFxuICBhXG4gICAgY29sb3I6JGNoYXJjb2FsXG4gICAgJjpob3ZlclxuICAgICAgY29sb3I6ICRncmVlblxuIiwiLy8gaGVhZGVyIHNpemVcbiRoZWFkZXItaGVpZ2h0LVM6IDUwcHhcbiRoZWFkZXItaGVpZ2h0LUw6IDgwcHhcblxuLy8gTmF2aWdhdGlvbiBzaXplXG4kbmF2LXdpZHRoLVM6IDI2MHB4XG5cbi8vIFNlYXJjaCBzaXplXG4kc2VhcmNoLWhlaWdodC1TOiA1MHB4XG4kc2VhcmNoLWhlaWdodC1MOiAxMjBweFxuXG4vLyB6LWluZGV4XG4kYmVsb3ctY29udGVudDogMVxuJGNvbnRlbnQ6IDJcbiRhYm92ZS1jb250ZW50OiAzXG5cbi8vXG4gIFwicGhvbmVcIjogMzIwcHgsXG4gIFwidGFibGV0XCI6IDc2OHB4LFxuICBcImRlc2t0b3BcIjogMTAyNHB4KVxuXG5cbi8vIGJyZWFrcG9pbnRzXG4gICRTOiA0ODBweFxuICAkTTogNzY4cHhcbiAgJEw6IDEwMjRweFxuICAkbWF4TDogJEwgLSAxcHhcblxuXG4vL1xuICArTVEobWF4TClcbiAgK21lZGlhKFwiPGRlc2t0b3BcIilcblxuLy9cbiAgK01RKEwpXG4gICttZWRpYShcIj5kZXNrdG9wXCIpXG5cblxuLy8gc3VwZXIgbGlnaHQgZ3JpZCAtIGl0IHdvcmtzIHdpdGggdGhlIC5jZC1jb250YWluZXIgY2xhc3MgaW5zaWRlIHN0eWxlLnNjc3NcblxuPWNvbHVtbigkcGVyY2VudGFnZSwgJGZsb2F0LWRpcmVjdGlvbjogbGVmdClcbiAgd2lkdGg6IDEwMCUgKiAkcGVyY2VudGFnZVxuICBmbG9hdDogJGZsb2F0LWRpcmVjdGlvblxuXG49Y2xlYXJmaXhcbiAgJjphZnRlclxuICAgIGNvbnRlbnQ6IFwiXCJcbiAgICBkaXNwbGF5OiB0YWJsZVxuICAgIGNsZWFyOiBib3RoXG5cbmEuY2QtbmF2LWl0ZW1cbiAgJjpob3ZlclxuICAgIGltZ1xuICAgICAgb3BhY2l0eTogLjcgIWltcG9ydGFudFxuICAgIGgzXG4gICAgICBjb2xvcjogJG5pZ2h0Z3JlZW4gIWltcG9ydGFudFxuXG5cbi8vUHJpbWFyeSBzdHlsZVxuXG5cbmJvZHlcbiAgK21lZGlhKFwiPGRlc2t0b3BcIilcbiAgICAvLyBsYXlvdXQgbWl4aW5zIGluc2lkZSBwYXJ0aWFscyA+IF9sYXlvdXQuc2Nzc1xuICAgICYubmF2LW9uLWxlZnQub3ZlcmZsb3ctaGlkZGVuXG4gICAgICBvdmVyZmxvdzogaGlkZGVuXG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi1tcy1jbGVhclxuICAvLyByZW1vdmVzIGNsb3NlIGljb24gLSBJRVxuICBkaXNwbGF5OiBub25lXG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24sXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtcmVzdWx0cy1idXR0b24sXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1yZXN1bHRzLWRlY29yYXRpb25cbiAgZGlzcGxheTogbm9uZVxuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICpcbiAqTWFpbiBjb21wb25lbnRzXG4gKlxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcblxuLmNkLW1haW4tY29udGVudCxcbi5jZC1tYWluLWhlYWRlclxuICAvKiBGb3JjZSBIYXJkd2FyZSBBY2NlbGVyYXRpb24gaW4gV2ViS2l0XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKVxuICB3aWxsLWNoYW5nZTogdHJhbnNmb3JtXG5cbiAgdWxcbiAgICBsaXN0LXN0eWxlOiBub25lXG5cbi5jZC1tYWluLWNvbnRlbnRcbiAgcG9zaXRpb246IHJlbGF0aXZlXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzXG5cbiAgK21lZGlhKFwiPGRlc2t0b3BcIilcbiAgICAmLm5hdi1pcy12aXNpYmxlXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLSRuYXYtd2lkdGgtUylcblxuICAgIC5uYXYtb24tbGVmdCAmLm5hdi1pcy12aXNpYmxlXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoJG5hdi13aWR0aC1TKVxuXG4uY2QtbWFpbi1oZWFkZXJcbiAgZm9udC1mYW1pbHk6ICRzZXJpZlxuICBwb3NpdGlvbjogcmVsYXRpdmVcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3NcblxuICArbWVkaWEoXCI8ZGVza3RvcFwiKVxuICAgICYubmF2LWlzLXZpc2libGVcbiAgICAgIC8vdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0kbmF2LXdpZHRoLVMpXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMClcblxuICAgIC5uYXYtb24tbGVmdCAmLm5hdi1pcy12aXNpYmxlXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoJG5hdi13aWR0aC1TKVxuXG4uY2QtbWFpbi1jb250ZW50XG4gIC8vQ0hBTkdFRFxuICAvL2JhY2tncm91bmQ6ICRjbG91ZFxuICBtaW4taGVpZ2h0OiAxMDB2aFxuICB6LWluZGV4OiAkY29udGVudFxuXG4uY2QtbWFpbi1oZWFkZXJcbiAgaGVpZ2h0OiAkaGVhZGVyLWhlaWdodC1TXG4gIGJhY2tncm91bmQ6ICR3aGl0ZVxuICB6LWluZGV4OiAkYWJvdmUtY29udGVudFxuXG4gIC8vQ0hBTkdFRFxuICAvL2JveC1zaGFkb3c6IDAgMXB4IDVweCByZ2JhKDEwMCwxMDAsMTAwLCAuNSlcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRjbG91ZFxuXG4gIC5uYXYtaXMtZml4ZWQgJlxuICAgIC8qIGFkZCAubmF2LWlzLWZpeGVkIGNsYXNzIHRvIGJvZHkgaWYgeW91IHdhbnQgYSBmaXhlZCBuYXZpZ2F0aW9uIG9uID4gMTAyNHB4XG4gICAgcG9zaXRpb246IGZpeGVkXG4gICAgdG9wOiAwXG4gICAgbGVmdDogMFxuICAgIHdpZHRoOiAxMDAlXG5cbiAgK21lZGlhKFwiPmRlc2t0b3BcIilcbiAgICBoZWlnaHQ6ICRoZWFkZXItaGVpZ2h0LUxcbiAgICArY2xlYXJmaXhcblxuLmNkLWxvZ29cbiAgcG9zaXRpb246IGFic29sdXRlXG4gIHRvcDogMTJweFxuICBsZWZ0OiA1JVxuXG4gIGltZ1xuICAgIGRpc3BsYXk6IGJsb2NrXG5cbiAgK21lZGlhKFwiPGRlc2t0b3BcIilcbiAgICAubmF2LW9uLWxlZnQgJlxuICAgICAgbGVmdDogYXV0b1xuICAgICAgcmlnaHQ6IDUlXG5cbiAgK21lZGlhKFwiPmRlc2t0b3BcIilcbiAgICB0b3A6IDI2cHhcbiAgICBsZWZ0OiA0ZW1cblxuLmNkLWhlYWRlci1idXR0b25zXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZVxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgdG9wOiAzcHhcbiAgcmlnaHQ6IDUlXG5cbiAgbGlcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcblxuICArbWVkaWEoXCI8ZGVza3RvcFwiKVxuICAgIC5uYXYtb24tbGVmdCAmXG4gICAgICByaWdodDogYXV0b1xuICAgICAgbGVmdDogNSVcbiAgICAgIGxpXG4gICAgICAgIGZsb2F0OiByaWdodFxuXG4gICttZWRpYShcIj5kZXNrdG9wXCIpXG4gICAgdG9wOiAxcmVtXG4gICAgcmlnaHQ6IDFyZW1cblxuLmNkLXNlYXJjaC10cmlnZ2VyLFxuLmNkLW5hdi10cmlnZ2VyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZVxuICBkaXNwbGF5OiBibG9ja1xuICB3aWR0aDogNDRweFxuICBoZWlnaHQ6IDQ0cHhcbiAgb3ZlcmZsb3c6IGhpZGRlblxuICB3aGl0ZS1zcGFjZTogbm93cmFwXG4gIC8qIGhpZGUgdGV4dFxuICBjb2xvcjogdHJhbnNwYXJlbnRcbiAgei1pbmRleDogJGFib3ZlLWNvbnRlbnRcblxuLmNkLXNlYXJjaC10cmlnZ2VyXG4gICY6OmJlZm9yZSwgJjo6YWZ0ZXJcbiAgICAvKiBzZWFyY2ggaWNvblxuICAgIGNvbnRlbnQ6ICcnXG4gICAgcG9zaXRpb246IGFic29sdXRlXG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzXG4gICAgLyogRm9yY2UgSGFyZHdhcmUgQWNjZWxlcmF0aW9uIGluIFdlYktpdFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKVxuICAgIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlblxuXG4gICY6OmJlZm9yZVxuICAgIC8qIGxlbnNcbiAgICB0b3A6IDExcHhcbiAgICBsZWZ0OiAxMXB4XG4gICAgd2lkdGg6IDE4cHhcbiAgICBoZWlnaHQ6IDE4cHhcbiAgICBib3JkZXItcmFkaXVzOiA1MCVcbiAgICBib3JkZXI6IDNweCBzb2xpZCAkbmlnaHRncmVlblxuXG4gICY6OmFmdGVyXG4gICAgLyogaGFuZGxlXG4gICAgaGVpZ2h0OiAzcHhcbiAgICB3aWR0aDogOHB4XG4gICAgYmFja2dyb3VuZDogJG5pZ2h0Z3JlZW5cbiAgICBib3R0b206IDE0cHhcbiAgICByaWdodDogMTFweFxuICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKVxuICBzcGFuXG4gICAgLyogY29udGFpbmVyIGZvciB0aGUgWCBpY29uXG4gICAgcG9zaXRpb246IGFic29sdXRlXG4gICAgaGVpZ2h0OiAxMDAlXG4gICAgd2lkdGg6IDEwMCVcbiAgICB0b3A6IDBcbiAgICBsZWZ0OiAwXG4gIHNwYW46OmJlZm9yZSwgc3Bhbjo6YWZ0ZXJcbiAgICAvKiBjbG9zZSBpY29uXG4gICAgY29udGVudDogJydcbiAgICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgICBoZWlnaHQ6IDNweFxuICAgIHdpZHRoOiAyMnB4XG4gICAgdG9wOiA1MCVcbiAgICBtYXJnaW4tdG9wOiAtMnB4XG4gICAgbGVmdDogNTAlXG4gICAgbWFyZ2luLWxlZnQ6IC0xMXB4XG4gICAgYmFja2dyb3VuZDogJG5pZ2h0Z3JlZW5cbiAgICBvcGFjaXR5OiAwXG4gICAgLyogRm9yY2UgSGFyZHdhcmUgQWNjZWxlcmF0aW9uIGluIFdlYktpdFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKVxuICAgIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlblxuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcywgdHJhbnNmb3JtIDAuM3NcblxuICBzcGFuOjpiZWZvcmVcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZylcblxuICBzcGFuOjphZnRlclxuICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZylcblxuICAmLnNlYXJjaC1pcy12aXNpYmxlXG4gICAgJjo6YmVmb3JlLCAmOjphZnRlclxuICAgICAgLyogaGlkZSBzZWFyY2ggaWNvblxuICAgICAgb3BhY2l0eTogMFxuICAgIHNwYW46OmJlZm9yZSwgc3Bhbjo6YWZ0ZXJcbiAgICAgIC8qIHNob3cgY2xvc2UgaWNvblxuICAgICAgb3BhY2l0eTogMVxuICAgIHNwYW46OmJlZm9yZVxuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMTM1ZGVnKVxuICAgIHNwYW46OmFmdGVyXG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZylcblxuLmNkLW5hdi10cmlnZ2VyXG4gICY6aG92ZXJcbiAgICAvL0hpZGUgJ01lbnUnIHdvcmQgZm9yIGFjY2Vzc2liaWxpdHkgSSBob3BlXG4gICAgY29sb3I6IHRyYW5zcGFyZW50XG4gIHNwYW4sIHNwYW46OmJlZm9yZSwgc3Bhbjo6YWZ0ZXJcbiAgICAvKiBoYW1idXJnZXIgaWNvbiBpbiBDU1NcbiAgICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgICBoZWlnaHQ6IDNweFxuICAgIHdpZHRoOiAyNHB4XG4gICAgYmFja2dyb3VuZDogJG5pZ2h0Z3JlZW5cbiAgc3BhblxuICAgIC8qIGxpbmUgaW4gdGhlIGNlbnRlclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZVxuICAgIHRvcDogNTAlXG4gICAgcmlnaHQ6IDEwcHhcbiAgICBtYXJnaW4tdG9wOiAtMnB4XG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjNzIDAuM3NcbiAgc3Bhbjo6YmVmb3JlLCBzcGFuOjphZnRlclxuICAgIC8qIG90aGVyIDIgbGluZXNcbiAgICBjb250ZW50OiAnJ1xuICAgIHJpZ2h0OiAwXG4gICAgLyogRm9yY2UgSGFyZHdhcmUgQWNjZWxlcmF0aW9uIGluIFdlYktpdFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKVxuICAgIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlblxuICAgIHRyYW5zZm9ybS1vcmlnaW46IDAlIDUwJVxuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzIDAuM3NcbiAgc3Bhbjo6YmVmb3JlXG4gICAgLyogbWVudSBpY29uIHRvcCBsaW5lXG4gICAgdG9wOiAtNnB4XG4gIHNwYW46OmFmdGVyXG4gICAgLyogbWVudSBpY29uIGJvdHRvbSBsaW5lXG4gICAgdG9wOiA2cHhcbiAgJi5uYXYtaXMtdmlzaWJsZVxuICAgIHNwYW5cbiAgICAgIC8qIGhpZGUgbGluZSBpbiB0aGUgY2VudGVyXG4gICAgICBiYWNrZ3JvdW5kOiByZ2JhKCRuaWdodGdyZWVuLCAwKVxuICAgIHNwYW46OmJlZm9yZSwgc3Bhbjo6YWZ0ZXJcbiAgICAgIC8qIGtlZXAgdmlzaWJsZSBvdGhlciAyIGxpbmVzXG4gICAgICBiYWNrZ3JvdW5kOiByZ2JhKCRuaWdodGdyZWVuLCAxKVxuICAgIHNwYW46OmJlZm9yZVxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDRweCkgdHJhbnNsYXRlWSgtM3B4KSByb3RhdGUoNDVkZWcpXG4gICAgc3Bhbjo6YWZ0ZXJcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg0cHgpIHRyYW5zbGF0ZVkoMnB4KSByb3RhdGUoLTQ1ZGVnKVxuICArbWVkaWEoXCI+ZGVza3RvcFwiKVxuICAgIGRpc3BsYXk6IG5vbmVcblxuXG4uY2QtcHJpbWFyeS1uYXZcbiAgcmlnaHQ6IDBcblxuLy9SaWdodCBhbGlnbmluZyB0aGUgbWVudSBtZWFucyB3ZSBoYXZlIHRvIGJ1bXAgdGhlIGRyb3Bkb3duIGJhY2sgb3ZlciB0byBsaW5lIHVwXG4uY2QtcHJpbWFyeS1uYXYgdWxcbiAgcmlnaHQ6IDIwcHhcblxuLmNkLXByaW1hcnktbmF2LFxuLmNkLXByaW1hcnktbmF2IHVsXG4gIHBvc2l0aW9uOiBmaXhlZFxuICB0b3A6IDBcbiAgLy9yaWdodDogMFxuICBoZWlnaHQ6IDEwMCVcbiAgd2lkdGg6ICRuYXYtd2lkdGgtU1xuICBiYWNrZ3JvdW5kOiAkbmlnaHRncmVlblxuICBvdmVyZmxvdzogYXV0b1xuICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2hcbiAgei1pbmRleDogJGJlbG93LWNvbnRlbnRcblxuICAvKiBGb3JjZSBIYXJkd2FyZSBBY2NlbGVyYXRpb24gaW4gV2ViS2l0XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKVxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMClcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3NcblxuICBhXG4gICAgZGlzcGxheTogYmxvY2tcbiAgICBmb250LXNpemU6IDEuMnJlbVxuICAgIGhlaWdodDogNTBweFxuICAgIGxpbmUtaGVpZ2h0OiA1MHB4XG4gICAgcGFkZGluZzogMCAyMHB4XG4gICAgY29sb3I6ICR3aGl0ZVxuICAgIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkXG4gICAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZVxuICAgIG92ZXJmbG93OiBoaWRkZW5cbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpc1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXBcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgbGlnaHRlbigkbmlnaHRncmVlbiwgNSUpXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApXG4gICAgd2lsbC1jaGFuZ2U6IHRyYW5zZm9ybSwgb3BhY2l0eVxuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzLCBvcGFjaXR5IDAuM3NcblxuICAmLmlzLWhpZGRlblxuICAgIC8qIHNlY29uZGFyeSBuYXZpZ2F0aW9ucyBoaWRkZW4gYnkgZGVmYXVsdFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMDAlKVxuXG4gICYubW92ZXMtb3V0ID4gbGkgPiBhXG4gICAgLyogcHVzaCB0aGUgbmF2aWdhdGlvbiBpdGVtcyB0byB0aGUgbGVmdCAtIGFuZCBsb3dlciBkb3duIG9wYWNpdHkgLSB3aGVuIHNlY29uZGFyeSBuYXYgc2xpZGVzIGluXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKVxuICAgIG9wYWNpdHk6IDBcblxuK21lZGlhKFwiPGRlc2t0b3BcIilcbiAgLm5hdi1vbi1sZWZ0IC5jZC1wcmltYXJ5LW5hdixcbiAgLm5hdi1vbi1sZWZ0IC5jZC1wcmltYXJ5LW5hdiB1bFxuICAgIHJpZ2h0OiBhdXRvXG4gICAgbGVmdDogMFxuXG5cbi5jZC1wcmltYXJ5LW5hdlxuICAuc2VlLWFsbCBhXG4gICAgLyogZGlmZmVyZW50IHN0eWxlIGZvciB0aGUgU2VlIGFsbCBidXR0b24gb24gbW9iaWxlIGFuZCB0YWJsZXRcbiAgICBjb2xvcjogJGdyZWVuXG5cbiAgLmNkLW5hdi1nYWxsZXJ5IC5jZC1uYXYtaXRlbSxcbiAgLmNkLW5hdi1pY29ucyAuY2QtbmF2LWl0ZW1cbiAgICAvKiBpdGVtcyB3aXRoIHBpY3R1cmUgKG9yIGljb24pIGFuZCB0aXRsZVxuICAgIGhlaWdodDogODBweFxuICAgIGxpbmUtaGVpZ2h0OiA4MHB4XG5cbiAgICBoM1xuICAgICAgb3ZlcmZsb3c6IGhpZGRlblxuICAgICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXNcblxuICAuY2QtbmF2LWdhbGxlcnkgLmNkLW5hdi1pdGVtXG4gICAgLy9wYWRkaW5nLWxlZnQ6IDkwcHhcblxuICAgIGltZ1xuICAgICAgcG9zaXRpb246IGFic29sdXRlXG4gICAgICBkaXNwbGF5OiBibG9ja1xuICAgICAgaGVpZ2h0OiA0MHB4XG4gICAgICB3aWR0aDogYXV0b1xuICAgICAgbGVmdDogMjBweFxuICAgICAgdG9wOiA1MCVcbiAgICAgIG1hcmdpbi10b3A6IC0yMHB4XG5cbiAgICAgICttZWRpYShcIjxkZXNrdG9wXCIpXG4gICAgICAgIGRpc3BsYXk6IG5vbmVcblxuICAuY2QtbmF2LWljb25zIC5jZC1uYXYtaXRlbVxuICAgIHBhZGRpbmctbGVmdDogNzVweFxuXG4gICAgcFxuICAgICAgY29sb3I6ICRuaWdodGdyZWVuXG4gICAgICBmb250LXNpemU6IDEuM3JlbVxuICAgICAgLyogaGlkZSBkZXNjcmlwdGlvbiBvbiBzbWFsbCBkZXZpY2VzXG4gICAgICBkaXNwbGF5OiBub25lXG5cbiAgICAmOjpiZWZvcmVcbiAgICAgIC8qIGl0ZW0gaWNvblxuICAgICAgY29udGVudDogJydcbiAgICAgIGRpc3BsYXk6IGJsb2NrXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgICAgIGxlZnQ6IDIwcHhcbiAgICAgIHRvcDogNTAlXG4gICAgICBtYXJnaW4tdG9wOiAtMjBweFxuICAgICAgd2lkdGg6IDQwcHhcbiAgICAgIGhlaWdodDogNDBweFxuICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdFxuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlclxuICAgICAgYmFja2dyb3VuZC1zaXplOiA0MHB4IDQwcHhcblxuICAgICYuaXRlbS0xOjpiZWZvcmVcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi9pbWFnZXMvbGluZS1pY29uLTEuc3ZnXCIpXG4gICAgJi5pdGVtLTI6OmJlZm9yZVxuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiL2ltYWdlcy9saW5lLWljb24tMi5zdmdcIilcbiAgICAmLml0ZW0tMzo6YmVmb3JlXG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIvaW1hZ2VzL2xpbmUtaWNvbi0zLnN2Z1wiKVxuICAgICYuaXRlbS00OjpiZWZvcmVcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi9pbWFnZXMvbGluZS1pY29uLTQuc3ZnXCIpXG4gICAgJi5pdGVtLTU6OmJlZm9yZVxuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiL2ltYWdlcy9saW5lLWljb24tNS5zdmdcIilcbiAgICAmLml0ZW0tNjo6YmVmb3JlXG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIvaW1hZ2VzL2xpbmUtaWNvbi02LnN2Z1wiKVxuICAgICYuaXRlbS03OjpiZWZvcmVcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi9pbWFnZXMvbGluZS1pY29uLTcuc3ZnXCIpXG4gICAgJi5pdGVtLTg6OmJlZm9yZVxuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiL2ltYWdlcy9saW5lLWljb24tOC5zdmdcIilcblxuICArbWVkaWEoXCI8ZGVza3RvcFwiKVxuICAgIC8qIGJ5IGRlZmF1bHQgLmNkLXByaW1hcnktbmF2IGlzIGhpZGRlbiAtIHRyaWNrIGZvciBpT1MgZGV2aWNlcyB3aGVyZSB5b3UgY2FuIHNlZSB0aGUgbmF2aWdhdGlvbiBpZiB5b3UgcHVsbCBkb3duXG4gICAgdmlzaWJpbGl0eTogaGlkZGVuXG4gICAgdHJhbnNpdGlvbjogdmlzaWJpbGl0eSAwcyAwLjNzXG4gICAgJi5uYXYtaXMtdmlzaWJsZVxuICAgICAgdmlzaWJpbGl0eTogdmlzaWJsZVxuICAgICAgdHJhbnNpdGlvbjogdmlzaWJpbGl0eSAwcyAwc1xuXG4rbWVkaWEoXCI+ZGVza3RvcFwiKVxuXG4gIC5jZC1wcmltYXJ5LW5hdlxuICAgIHBvc2l0aW9uOiBzdGF0aWNcbiAgICBwYWRkaW5nOiAwIDUwcHggMCAwXG4gICAgbWFyZ2luLWxlZnQ6IDIwcHhcbiAgICBoZWlnaHQ6IGF1dG9cbiAgICB3aWR0aDogMTAwJVxuICAgIC8vZmxvYXQ6IHJpZ2h0XG4gICAgb3ZlcmZsb3c6IHZpc2libGVcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudFxuICAgIC8vdGV4dC1hbGlnbjogY2VudGVyXG5cbiAgICArY2xlYXJmaXhcblxuICAgICYubW92ZXMtb3V0ID4gbGkgPiBhXG4gICAgICAvKiByZXNldCBtb2JpbGUgc3R5bGVcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKVxuICAgICAgb3BhY2l0eTogMVxuXG4gICAgdWxcbiAgICAgIHBvc2l0aW9uOiBzdGF0aWNcbiAgICAgIGhlaWdodDogYXV0b1xuICAgICAgd2lkdGg6IGF1dG9cbiAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50XG4gICAgICBvdmVyZmxvdzogdmlzaWJsZVxuICAgICAgdGV4dC1hbGlnbjogbGVmdFxuICAgICAgei1pbmRleDogJGFib3ZlLWNvbnRlbnRcblxuICAgICAgJi5pcy1oaWRkZW5cbiAgICAgICAgLyogcmVzZXQgbW9iaWxlIHN0eWxlXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKVxuXG4gICAgICAmLm1vdmVzLW91dCA+IGxpID4gYVxuICAgICAgICAvKiByZXNldCBtb2JpbGUgc3R5bGVcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApXG4gICAgICAgIG9wYWNpdHk6IDFcblxuICAgIC8vVG9wIG5hdiBpdGVtc1xuICAgID4gbGlcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgICAgLy9mbG9hdDogbGVmdFxuICAgICAgbWFyZ2luLWxlZnQ6IC41cmVtXG5cbiAgICA+IGxpID4gYVxuICAgICAgLyogbWFpbiBuYXZpZ2F0aW9uIGJ1dHRvbnMgc3R5bGVcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZVxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrXG4gICAgICBoZWlnaHQ6ICRoZWFkZXItaGVpZ2h0LUxcbiAgICAgIGxpbmUtaGVpZ2h0OiAkaGVhZGVyLWhlaWdodC1MXG4gICAgICBwYWRkaW5nOiAwXG4gICAgICBjb2xvcjogJG5pZ2h0Z3JlZW5cbiAgICAgIG92ZXJmbG93OiB2aXNpYmxlXG4gICAgICBib3JkZXItYm90dG9tOiBub25lXG4gICAgICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzLCBib3gtc2hhZG93IDAuM3NcblxuICAgICAgJjpob3ZlclxuICAgICAgICBjb2xvcjogJGdyZWVuXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZVxuICAgICAgJi5zZWxlY3RlZFxuICAgICAgICBjb2xvcjogJGdyZWVuXG4gICAgICAgIGJveC1zaGFkb3c6IGluc2V0IDAgLTJweCAwICRncmVlblxuXG4gICAgLmdvLWJhY2ssIC5zZWUtYWxsXG4gICAgICBkaXNwbGF5OiBub25lXG5cbiAgICAuY2Qtc2Vjb25kYXJ5LW5hdixcbiAgICAuY2QtbmF2LWdhbGxlcnksXG4gICAgLmNkLW5hdi1pY29uc1xuICAgICAgLyogZHJvcGRvd24gbWVudSBzdHlsZVxuICAgICAgcG9zaXRpb246IGFic29sdXRlXG4gICAgICB0b3A6ICRoZWFkZXItaGVpZ2h0LUxcbiAgICAgIC8vd2lkdGg6IDEwMHZ3XG4gICAgICB3aWR0aDogMTAwJVxuICAgICAgYmFja2dyb3VuZDogJHdoaXRlXG4gICAgICAvL0NIQU5HRURcbiAgICAgIC8vcGFkZGluZzogNDhweCA2NHB4IDEzMHB4XG4gICAgICBwYWRkaW5nOiAycmVtXG4gICAgICBib3gtc2hhZG93OiBpbnNldCAwIDFweCAwICRjbG91ZCwgMCAzcHggNnB4IHJnYmEoIzAwMCwgMC4wNSlcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKVxuICAgICAgK2NsZWFyZml4XG5cbiAgICAgIHRyYW5zaXRpb246IG9wYWNpdHkgLjNzIDBzLCB2aXNpYmlsaXR5IDBzIDBzXG5cbiAgICAgICYuaXMtaGlkZGVuXG4gICAgICAgIG9wYWNpdHk6IDBcbiAgICAgICAgdmlzaWJpbGl0eTogaGlkZGVuXG4gICAgICAgIHRyYW5zaXRpb246IG9wYWNpdHkgLjNzIDBzLCB2aXNpYmlsaXR5IDBzIC4zc1xuXG4gICAgICA+IC5zZWUtYWxsXG4gICAgICAgIC8qIHRoaXMgaXMgdGhlIEJJRyBTZWUgYWxsIGJ1dHRvbiBhdCB0aGUgYm90dG9tIG9mIHRoZSBkcm9wZG93biBtZW51XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZVxuICAgICAgICBsZWZ0OiAwXG4gICAgICAgIGJvdHRvbTogMFxuICAgICAgICBoZWlnaHQ6IDgwcHhcbiAgICAgICAgd2lkdGg6IDEwMCVcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlblxuICAgICAgICAvKiByZXNldCBzb21lIGluaGVyaXRlZCBzdHlsZVxuICAgICAgICBtYXJnaW46IDBcbiAgICAgICAgcGFkZGluZzogMFxuXG4gICAgICAgIGFcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgICAgICAgICB3aWR0aDogMTAwJVxuICAgICAgICAgIGhlaWdodDogMTAwJVxuICAgICAgICAgIHRvcDogMFxuICAgICAgICAgIGxlZnQ6IDBcbiAgICAgICAgICBmb250LXNpemU6IDIuMnJlbVxuICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkXG4gICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyXG4gICAgICAgICAgbGluZS1oZWlnaHQ6IDgwcHhcbiAgICAgICAgICBib3JkZXItdG9wOiAxcHggc29saWQgJGNsb3VkXG4gICAgICAgICAgLyogcmVzZXQgc29tZSBpbmhlcml0ZWQgc3R5bGVcbiAgICAgICAgICBib3JkZXItYm90dG9tOiBub25lXG4gICAgICAgICAgbWFyZ2luOiAwXG4gICAgICAgICAgcGFkZGluZzogMFxuICAgICAgICAgIHRyYW5zaXRpb246IGNvbG9yIDAuMnMsIGJhY2tncm91bmQgMC4ycywgYm9yZGVyIDAuMnNcblxuICAgICAgICAgICY6aG92ZXJcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICRuaWdodGdyZWVuXG4gICAgICAgICAgICBib3JkZXItY29sb3I6ICRuaWdodGdyZWVuXG4gICAgICAgICAgICBjb2xvcjogJHdoaXRlXG5cbiAgICAuY2Qtc2Vjb25kYXJ5LW5hdlxuXG4gICAgICA+IGxpXG4gICAgICAgIC8qIGNoYW5nZSB0aGUgaGVpZ2h0IGFjY29yZGluZyB0byB5b3VyIG5lZWRzIC0geW91IGNhbiBldmVuIHNldCBoZWlnaHQ6IGF1dG9cbiAgICAgICAgaGVpZ2h0OiAzNDBweFxuICAgICAgICAvKiBoZXJlIHlvdSBzZXQgdGhlIG51bWJlciBvZiBjb2x1bW5zIC0gdXNlIHdpZHRoIHBlcmNlbnRhZ2VcbiAgICAgICAgK2NvbHVtbigwLjIzKVxuICAgICAgICAvLyBzZWUgcGFydGlhbHMgPiBfbGF5b3V0LnNjc3NcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAyLjY2JVxuICAgICAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAkY2xvdWRcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlblxuICAgICAgICBvdmVyZmxvdy14OiBoaWRkZW5cbiAgICAgICAgb3ZlcmZsb3cteTogYXV0b1xuICAgICAgICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2hcblxuICAgICAgICAmOm50aC1jaGlsZCg0bisyKVxuICAgICAgICAgIC8qICsyIGJlY2F1c2Ugd2UgaGF2ZSAyIGxpc3QgaXRlbXMgd2l0aCBkaXNwbGF5Om5vbmVcbiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDBcbiAgICAgICAgICBib3JkZXItcmlnaHQ6IG5vbmVcblxuICAgICAgICA+IGFcbiAgICAgICAgICAvKiBzZWNvbmRhcnkgbmF2IHRpdGxlXG4gICAgICAgICAgY29sb3I6ICRncmVlblxuICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkXG4gICAgICAgICAgZm9udC1zaXplOiAxLjZyZW1cbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAuNmVtXG5cbiAgICAgIGFcbiAgICAgICAgaGVpZ2h0OiAzMHB4XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAzMHB4XG4gICAgICAgIHBhZGRpbmc6IDAgMTglIDAgMFxuICAgICAgICBjb2xvcjogJG5pZ2h0Z3JlZW5cbiAgICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZVxuICAgICAgICBmb250LXNpemU6IDEuNHJlbVxuXG4gICAgICAgICY6aG92ZXJcbiAgICAgICAgICBjb2xvcjogJGdyZWVuXG5cbiAgICAgIHVsXG4gICAgICAgIC8qIEZvcmNlIEhhcmR3YXJlIEFjY2VsZXJhdGlvbiBpbiBXZWJLaXRcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApXG5cbiAgICAgIHVsIHVsXG4gICAgICAgIC8qIHRlcnRpYXJ5IG5hdmlnYXRpb25cbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlXG4gICAgICAgIHRvcDogMFxuICAgICAgICBsZWZ0OiAwXG4gICAgICAgIGhlaWdodDogMTAwJVxuICAgICAgICB3aWR0aDogMTAwJVxuXG4gICAgICAgICYuaXMtaGlkZGVuXG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwMCUpXG5cbiAgICAgICAgLmdvLWJhY2tcbiAgICAgICAgICBkaXNwbGF5OiBibG9ja1xuXG4gICAgICAgICAgYVxuICAgICAgICAgICAgY29sb3I6IHRyYW5zcGFyZW50XG5cbiAgICAgICAgLnNlZS1hbGxcbiAgICAgICAgICBkaXNwbGF5OiBibG9ja1xuXG4gICAgICAubW92ZXMtb3V0ID4gbGkgPiBhXG4gICAgICAgIC8qIHB1c2ggdGhlIG5hdmlnYXRpb24gaXRlbXMgdG8gdGhlIGxlZnQgLSBhbmQgbG93ZXIgZG93biBvcGFjaXR5IC0gd2hlbiB0ZXJ0aWFyeSBuYXYgc2xpZGVzIGluXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSlcblxuICAgIC5jZC1uYXYtZ2FsbGVyeVxuICAgICAgYm94LXNoYWRvdzogMCA1cHggNXB4IHJnYmEoMTAwLDEwMCwxMDAsLjMpXG5cbiAgICAgIGxpXG4gICAgICAgIC8qIHNldCBoZXJlIG51bWJlciBvZiBjb2x1bW5zIC0gdXNlIHdpZHRoIHBlcmNlbnRhZ2VcbiAgICAgICAgLy8rY29sdW1uKDAuMjIpXG4gICAgICAgIC8vbWFyZ2luOiAwIDQlIDQwcHggMFxuXG4gICAgICAgIGZsb2F0OiBsZWZ0XG4gICAgICAgIHdpZHRoOiAyNSVcbiAgICAgICAgcGFkZGluZzogMXJlbVxuXG4gICAgICAgICY6bnRoLWNoaWxkKDRuKzIpXG4gICAgICAgICAgLyogKzIgYmVjYXVzZSB3ZSBoYXZlIHR3byBhZGRpdGlvbmFsIGxpc3QgaXRlbXMgd2l0aCBkaXNwbGF5Om5vbmVcbiAgICAgICAgICAvL21hcmdpbi1yaWdodDogMFxuXG4gICAgICAuY2QtbmF2LWl0ZW1cbiAgICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZVxuICAgICAgICBwYWRkaW5nOiAwXG4gICAgICAgIGhlaWdodDogYXV0b1xuICAgICAgICBsaW5lLWhlaWdodDogMS4yXG5cbiAgICAgICAgaW1nXG4gICAgICAgICAgcG9zaXRpb246IHN0YXRpY1xuICAgICAgICAgIG1hcmdpbi10b3A6IDBcbiAgICAgICAgICBoZWlnaHQ6IGF1dG9cbiAgICAgICAgICB3aWR0aDogMTAwJVxuICAgICAgICAgIG1hcmdpbi1ib3R0b206IC42cmVtXG5cbiAgICAgICAgaDNcbiAgICAgICAgICBjb2xvcjogJGdyZWVuXG4gICAgICAgICAgZm9udC1zaXplOiAuOXJlbVxuICAgICAgICAgIHBhZGRpbmc6IDAgLjRyZW1cbiAgICAgICAgICBmb250LXdlaWdodDogbm9ybWFsXG5cbiAgICAuY2QtbmF2LWljb25zXG5cbiAgICAgIGxpXG4gICAgICAgIC8qIHNldCBoZXJlIG51bWJlciBvZiBjb2x1bW5zIC0gdXNlIHdpZHRoIHBlcmNlbnRhZ2VcbiAgICAgICAgK2NvbHVtbigwLjMyKVxuICAgICAgICBtYXJnaW46IDAgMiUgMjBweCAwXG4gICAgICAgICY6bnRoLWNoaWxkKDNuKzIpXG4gICAgICAgICAgLyogKzIgYmVjYXVzZSB3ZSBoYXZlIHR3byBhZGRpdGlvbmFsIGxpc3QgaXRlbXMgd2l0aCBkaXNwbGF5Om5vbmVcbiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDBcbiAgICAgIC5jZC1uYXYtaXRlbVxuICAgICAgICBib3JkZXItYm90dG9tOiBub25lXG4gICAgICAgIGhlaWdodDogODBweFxuICAgICAgICBsaW5lLWhlaWdodDogMS4yXG4gICAgICAgIHBhZGRpbmc6IDI0cHggMCAwIDg1cHhcbiAgICAgICAgJjpob3ZlclxuICAgICAgICAgIGJhY2tncm91bmQ6IGxpZ2h0ZW4oJGNsb3VkLCA4JSlcbiAgICAgICAgaDNcbiAgICAgICAgICBjb2xvcjogJGdyZWVuXG4gICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGRcbiAgICAgICAgcFxuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrXG4gICAgICAgICY6OmJlZm9yZVxuICAgICAgICAgIGxlZnQ6IDI1cHhcblxuXG4uaGFzLWNoaWxkcmVuID4gYSwgLmdvLWJhY2sgYVxuICBwb3NpdGlvbjogcmVsYXRpdmVcbiAgJjo6YmVmb3JlLCAmOjphZnRlclxuICAgIC8qIGFycm93IGljb24gaW4gQ1NTIC0gZm9yIGVsZW1lbnQgd2l0aCBuZXN0ZWQgdW5vcmRlcmVkIGxpc3RzXG4gICAgY29udGVudDogJydcbiAgICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgICB0b3A6IDUwJVxuICAgIG1hcmdpbi10b3A6IC0xcHhcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgICBoZWlnaHQ6IDJweFxuICAgIHdpZHRoOiAxMHB4XG4gICAgYmFja2dyb3VuZDogbGlnaHRlbigkbmlnaHRncmVlbiwgMTAlKVxuXG4gICAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuXG4gICY6OmJlZm9yZVxuICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKVxuICAmOjphZnRlclxuICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZylcbiAgK21lZGlhKFwiPmRlc2t0b3BcIilcbiAgICAmOjpiZWZvcmUsICY6OmFmdGVyXG4gICAgICBiYWNrZ3JvdW5kOiBkYXJrZW4oJGNsb3VkLCAxMCUpXG4gICAgJjpob3Zlcjo6YmVmb3JlLCAmOmhvdmVyOjphZnRlclxuICAgICAgYmFja2dyb3VuZDogJGdyZWVuXG5cbi5oYXMtY2hpbGRyZW4gPiBhXG4gIHBhZGRpbmctcmlnaHQ6IDQwcHhcbiAgJjo6YmVmb3JlLCAmOjphZnRlclxuICAgIC8qIGFycm93IGdvZXMgb24gdGhlIHJpZ2h0IHNpZGUgLSBjaGlsZHJlbiBuYXZpZ2F0aW9uXG4gICAgcmlnaHQ6IDIwcHhcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiA5cHggNTAlXG5cbi5jZC1wcmltYXJ5LW5hdiAuZ28tYmFjayBhXG4gIHBhZGRpbmctbGVmdDogNDBweFxuICAmOjpiZWZvcmUsICY6OmFmdGVyXG4gICAgLyogYXJyb3cgZ29lcyBvbiB0aGUgbGVmdCBzaWRlIC0gZ28gYmFjayBidXR0b25cbiAgICBsZWZ0OiAyMHB4XG4gICAgdHJhbnNmb3JtLW9yaWdpbjogMXB4IDUwJVxuXG4rbWVkaWEoXCI+ZGVza3RvcFwiKVxuICAuaGFzLWNoaWxkcmVuID4gYVxuICAgICY6OmJlZm9yZSwgJjo6YWZ0ZXJcbiAgICAgIHJpZ2h0OiAxNSVcbiAgLmNkLXByaW1hcnktbmF2ID4gLmhhcy1jaGlsZHJlbiA+IGFcbiAgICAvKiBtYWluIG5hdmlnYXRpb24gYXJyb3dzIG9uIGxhcmdlciBkZXZpY2VzXG4gICAgcGFkZGluZy1yaWdodDogMzBweCAhaW1wb3J0YW50XG4gICAgJjo6YmVmb3JlLCAmOjphZnRlclxuICAgICAgd2lkdGg6IDlweFxuICAgICAgdHJhbnNmb3JtLW9yaWdpbjogNTAlIDUwJVxuICAgICAgYmFja2dyb3VuZDogZGFya2VuKCRjbG91ZCwgMTAlKVxuXG4gICAgICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW5cbiAgICAgIHRyYW5zaXRpb246IHdpZHRoIDAuM3MsIHRyYW5zZm9ybSAwLjNzXG4gICAgJjo6YmVmb3JlXG4gICAgICByaWdodDogMTJweFxuICAgICY6OmFmdGVyXG4gICAgICByaWdodDogN3B4XG4gICAgJi5zZWxlY3RlZDo6YmVmb3JlLCAmLnNlbGVjdGVkOjphZnRlclxuICAgICAgd2lkdGg6IDE0cHhcbiAgICAmLnNlbGVjdGVkOjpiZWZvcmVcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg1cHgpIHJvdGF0ZSgtNDVkZWcpXG4gICAgJi5zZWxlY3RlZDo6YWZ0ZXJcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKVxuICAuY2Qtc2Vjb25kYXJ5LW5hdiA+IC5oYXMtY2hpbGRyZW4gPiBhOjpiZWZvcmUsIC5jZC1zZWNvbmRhcnktbmF2ID4gLmhhcy1jaGlsZHJlbiA+IGE6OmFmdGVyXG4gICAgLyogcmVtb3ZlIGFycm93cyBvbiBzZWNvbmRhcnkgbmF2IHRpdGxlc1xuICAgIGRpc3BsYXk6IG5vbmVcbiAgLmNkLXByaW1hcnktbmF2IC5nby1iYWNrIGFcbiAgICBwYWRkaW5nLWxlZnQ6IDIwcHhcbiAgICAmOjpiZWZvcmUsICY6OmFmdGVyXG4gICAgICBsZWZ0OiAxcHhcblxuXG5cblxuLmNkLXNlYXJjaFxuICBmbG9hdDpyaWdodDtcblxuXG5cbiAgZm9ybVxuICAgIHBvc2l0aW9uOnJlbGF0aXZlXG4gIGlucHV0W3R5cGU9XCJzdWJtaXRcIl1cbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIvaW1hZ2VzL3NlYXJjaC1pY29uLnBuZ1wiKVxuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXRcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudFxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgIHRleHQtaW5kZW50OiAtOTk5OTlweFxuICAgIGhlaWdodDogMjJweFxuICAgIHdpZHRoOiAyMnB4XG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lXG4gICAgYm9yZGVyOiAwXG4gICAgcG9zaXRpb246IGFic29sdXRlXG4gICAgdG9wOiA2cHhcbiAgICByaWdodDogM3B4XG4gICAgYmFja2dyb3VuZC1zaXplOiA3NSVcblxuICBpbnB1dFt0eXBlPVwic2VhcmNoXCJdXG4gICAgcGFkZGluZy1sZWZ0OjEwcHg7XG4gICAgLy9ib3gtc2hhZG93OiBpbnNldCAwIDFweCAwICRjbG91ZCwgMCAzcHggNnB4IHJnYmEoIzAwMCwgMC4wNSlcbiAgICBhcHBlYXJhbmNlOiBub25lXG4gICAgYm9yZGVyOiAxcHggc29saWQgJGdyYXBoaXRlXG5cbiAgICAmOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyLFxuICAgICY6Oi1tb3otcGxhY2Vob2xkZXIsXG4gICAgJjotbXMtaW5wdXQtcGxhY2Vob2xkZXJcbiAgICAgIGNvbG9yOiBkYXJrZW4oJGNsb3VkLCAxMCUpXG5cbiAgICAmOmZvY3VzXG4gICAgICBvdXRsaW5lOiBub25lXG5cbiAgJi5pcy12aXNpYmxlXG4gICAgb3BhY2l0eTogMVxuICAgIHZpc2liaWxpdHk6IHZpc2libGVcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IC4zcyAwcywgdmlzaWJpbGl0eSAwcyAwc1xuICAgIC8vYm94LXNoYWRvdzogMXB4IDFweCA1cHggcmdiYSgxMDAsMTAwLDEwMCwgLjUpXG5cbiAgLm5hdi1pcy1maXhlZCAmXG4gICAgcG9zaXRpb246IGZpeGVkXG5cbiAgK21lZGlhKFwiPmRlc2t0b3BcIilcblxuXG4gICAgaW5wdXRcblxuXG5cbi5jZC1vdmVybGF5XG4gIC8qIHNoYWRvdyBsYXllciB2aXNpYmxlIHdoZW4gbmF2aWdhdGlvbiBpcyBhY3RpdmVcbiAgcG9zaXRpb246IGZpeGVkXG4gIHotaW5kZXg6IDJcbiAgaGVpZ2h0OiAxMDAlXG4gIHdpZHRoOiAxMDAlXG4gIHRvcDogMFxuICBsZWZ0OiAwXG4gIGN1cnNvcjogcG9pbnRlclxuICAvL2JhY2tncm91bmQtY29sb3I6IHJnYmEoJGdyZWVuLCAwLjgpXG4gIHZpc2liaWxpdHk6IGhpZGRlblxuICBvcGFjaXR5OiAwXG4gIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlblxuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3MgMHMsIHZpc2liaWxpdHkgMHMgMC4zcywgdHJhbnNmb3JtIDAuM3MgMHNcblxuICAmLmlzLXZpc2libGVcbiAgICBvcGFjaXR5OiAxXG4gICAgdmlzaWJpbGl0eTogdmlzaWJsZVxuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyAwcywgdmlzaWJpbGl0eSAwcyAwcywgdHJhbnNmb3JtIDAuM3MgMHNcblxuICArbWVkaWEoXCI8ZGVza3RvcFwiKVxuICAgICYuaXMtdmlzaWJsZVxuICAgICAgLy90cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLSRuYXYtd2lkdGgtUylcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKVxuXG4gICAgLm5hdi1vbi1sZWZ0ICYuaXMtdmlzaWJsZVxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKCRuYXYtd2lkdGgtUylcblxuICAgICYuaXMtdmlzaWJsZS5zZWFyY2gtaXMtdmlzaWJsZSxcbiAgICAubmF2LW9uLWxlZnQgJi5pcy12aXNpYmxlLnNlYXJjaC1pcy12aXNpYmxlXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMClcblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqXG4gKnN1cHBvcnQgZm9yIG5vIGpzXG4gKlxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4ubm8tanMgLmNkLXByaW1hcnktbmF2XG4gIHBvc2l0aW9uOiByZWxhdGl2ZVxuICBoZWlnaHQ6IGF1dG9cbiAgd2lkdGg6IDEwMCVcbiAgb3ZlcmZsb3c6IHZpc2libGVcbiAgdmlzaWJpbGl0eTogdmlzaWJsZVxuICB6LWluZGV4OiAkY29udGVudFxuXG4ubm8tanMgLmNkLXNlYXJjaFxuICBwb3NpdGlvbjogcmVsYXRpdmVcbiAgdG9wOiAwXG4gIG9wYWNpdHk6IDFcbiAgdmlzaWJpbGl0eTogdmlzaWJsZVxuXG4rbWVkaWEoXCI+ZGVza3RvcFwiKVxuICAubm8tanMgLmNkLXByaW1hcnktbmF2XG4gICAgcG9zaXRpb246IGFic29sdXRlXG4gICAgei1pbmRleDogJGFib3ZlLWNvbnRlbnRcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgICB3aWR0aDogYXV0b1xuICAgIHRvcDogMFxuICAgIHJpZ2h0OiAxNTBweFxuICAgIHBhZGRpbmc6IDBcbiAgLm5vLWpzIC5uYXYtaXMtZml4ZWQgLmNkLXByaW1hcnktbmF2XG4gICAgcG9zaXRpb246IGZpeGVkXG4iLCIubmF2LWZvb3RlclxuXHRwYWRkaW5nOiAzMHB4IDIwcHggMjBweFxuXHR0ZXh0LWFsaWduOiBsZWZ0XG5cblx0K21lZGlhKFwiPD10YWJsZXRcIilcblx0XHRkaXNwbGF5OiBub25lXG5cblx0Jl9faGVhZGluZ1xuXHRcdGZvbnQtZmFtaWx5OiAkc2Fuc1xuXHRcdGZvbnQtc2l6ZTogMXJlbVxuXHRcdGZvbnQtd2VpZ2h0OiAkYm9sZFxuXHRcdG1hcmdpbi1ib3R0b206IDFyZW1cblxuXHRcdGFcblx0XHRcdGNvbG9yOiAkY2hhcmNvYWxcblx0XHRcdCY6aG92ZXJcblx0XHRcdFx0Y29sb3I6ICRncmVlblxuXG5cdCZfX2xpbmtcblx0XHRmb250LXNpemU6IDE0cHhcblxuXHQmX19ib3hcblx0XHRwYWRkaW5nOiAwIDEwcHhcblx0XHR2ZXJ0aWNhbC1hbGlnbjogdG9wXG5cblx0Jl9fYm94LW5hcnJvd1xuXHRcdHBhZGRpbmc6IDAgMTBweFxuXHRcdHZlcnRpY2FsLWFsaWduOiB0b3BcblxuXHQmX19idXR0b25cblx0XHRib3JkZXItd2lkdGg6IDFweFxuXHRcdGNvbG9yOiAkZ3JlZW5cblx0XHRmb250LXNpemU6IC45cmVtXG5cdFx0bWFyZ2luLWJvdHRvbTogMXJlbVxuXHRcdHBhZGRpbmc6IC41cmVtIDFyZW1cblx0XHR3aWR0aDogMTAwJVxuXG5cblx0Ly8gU3ViLW5hdmlnYXRpb24sIHdoaWNoIGhpZGVzIG9uIHNtYWxsIHNpemVzXG5cdCZfX3N1Yi1saW5rc1xuXHRcdGZvbnQtc2l6ZTogMTRweFxuXG5cdFx0bGk6bnRoLWNoaWxkKDEpXG5cdFx0XHRmb250LWZhbWlseTogJHNhbnNcblx0XHRcdGZvbnQtc2l6ZTogMXJlbVxuXHRcdFx0Zm9udC13ZWlnaHQ6ICRib2xkXG5cdFx0XHRtYXJnaW4tYm90dG9tOiAuNXJlbVxuXG5cdFx0XHRhXG5cdFx0XHQgIGNvbG9yOiAkY2hhcmNvYWxcblx0XHRcdCAgJjpob3ZlclxuXHRcdFx0ICAgIGNvbG9yOiAkZ3JlZW5cbiIsIi8vQmFubmVyIFRhbGwgLSBUaGlzIGlzIGZvdW5kIG9uIHRoZSBob21lcGFnZSBvbmx5XG4uYmFubmVyLXRhbGxcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKGltYWdlcy9pbmRleF9oZXJvLmpwZylcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyXG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXJcbiAgaGVpZ2h0OiAyMDBweFxuICBwb3NpdGlvbjogcmVsYXRpdmVcblxuICArbWVkaWEoXCI+dGFibGV0XCIpXG4gICAgaGVpZ2h0OiA0NjVweFxuXG5cbiAgJl9faGVhZGxpbmVcbiAgICBib3R0b206IDNyZW1cbiAgICBjb2xvcjogJHdoaXRlXG4gICAgZm9udC1mYW1pbHk6IHNlcmlmXG4gICAgZm9udC1zaXplOiA0cmVtXG4gICAgZm9udC13ZWlnaHQ6IDgwMFxuICAgIGxlZnQ6IDJyZW1cbiAgICBsaW5lLWhlaWdodDogMVxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZVxuICAgIG1hcmdpbjogMCAwIDFyZW0gMXJlbVxuICAgIHRleHQtc2hhZG93OiAycHggMnB4IDJweCAkY2hhcmNvYWxcblxuICAgIHN1cFxuICAgICAgZm9udC1zaXplOjEuNzVyZW1cblxuICAgICttZWRpYShcIjx0YWJsZXRcIilcbiAgICAgIHBvc2l0aW9uOiBzdGF0aWNcbiAgICAgIGZvbnQtc2l6ZTogMnJlbVxuICAgICAgcGFkZGluZzogMnJlbVxuXG4vLyBCYW5uZXIgU3RhbmRhcmQgLSBUaGlzIGlzIGZvdW5kIG9uIHRoZSBtYWpvcml0eSBvZiB0aGUgaW50ZXJuYWwgcGFnZXNcbi5iYW5uZXItc3RhbmRhcmRcbiAgYmFja2dyb3VuZDogJGdyZWVuXG4gIGNvbG9yOiAkd2hpdGVcbiAgZGlzcGxheTogdGFibGVcbiAgaGVpZ2h0OiBhdXRvXG5cbiAgLy8gR2V0IHJpZCBvZiB3ZWlyZCBzcGFjZSBiZWxvdyBpbWFnZSBpbiB0aGUgYmFubmVyc1xuICBpbWdcbiAgICBkaXNwbGF5OiBibG9ja1xuXG4gICZfX2JveFxuICAgIHBhZGRpbmc6IDFyZW0gMnJlbVxuXG4gICZfX2hlYWRpbmdcbiAgICBjb2xvcjogJHdoaXRlXG5cbiAgJl9fdGV4dFxuXG4gICZfX21lZGlhXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHNsYXRlXG5cbiAgLy8gVGhpcyBpcyBmb3VuZCBvbiB0aGUgQXBwcm9hY2ggUGFnZVxuICAmX19tZWRpYS1hcHByb2FjaFxuICAgLy8gYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltYWdlcy9tZWV0aW5nLmpwZylcbiAgIC8vIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlclxuICAgLy8gYmFja2dyb3VuZC1zaXplOiBjb3ZlclxuXG4gICAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICAgIGhlaWdodDogMzAwcHhcblxuICAvLyBUaGlzIGlzIGZvdW5kIG9uIHRoZSBMZWFkZXJzaGlwIHBhZ2VcbiAgJl9fbWVkaWEtbGVhZGVyc2hpcFxuICAgLy8gYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltYWdlcy9wZW9wbGUuanBnKVxuICAgLy8gYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyXG4gICAvLyBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyXG5cbiAgICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgICAgaGVpZ2h0OiAzMDBweFxuXG4vLyBCYW5uZXIgUGFub3JhbWEgLSBUaGlzIGlzIGZvdW5kIG9uIHRoZSBOZXdzIHBhZ2Vcbi5iYW5uZXItcGFub3JhbWFcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltYWdlcy90cmVlcy5qcGcpXG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlclxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyXG4gIGhlaWdodDogMjU1cHhcbiIsIi5jYXJkLWRpcHRpY1xuICBkaXNwbGF5OiB0YWJsZVxuICBib3JkZXItdG9wOiAxcHggc29saWQgJGJvcmRlckNvbG9yXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkYm9yZGVyQ29sb3JcblxuICArcmVzcG9uc2l2ZS1zdGFja1xuXG4gICZfX2JveFxuICAgIGRpc3BsYXk6IHRhYmxlLWNlbGxcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlXG5cbiAgICBwYWRkaW5nOiAycmVtIDFyZW1cblxuICAgICttZWRpYShcIj50YWJsZXRcIilcbiAgICAgIHBhZGRpbmc6IDJyZW0gMXJlbSAycmVtIDJyZW1cblxuICAgICY6bnRoLWNoaWxkKDIpXG4gICAgICArbWVkaWEoXCI+dGFibGV0XCIpXG4gICAgICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgJGJvcmRlckNvbG9yXG4gICAgICAgIHBhZGRpbmc6IDJyZW0gMnJlbSAycmVtIDFyZW1cblxuICAmX19oZWFkaW5nXG4gICAgdGV4dC1hbGlnbjogY2VudGVyXG5cbiAgJl9fbWVkaWFcbiAgICBtYXJnaW4tYm90dG9tOiAycmVtXG5cbiAgJl9fdGV4dFxuICAgIHRleHQtYWxpZ246IGNlbnRlclxuICAgIG1hcmdpbi1ib3R0b206IDJyZW1cblxuICB1bFxuICAgIGxpc3Qtc3R5bGU6IG5vbmVcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXJcblxuICAgIGxpXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgICAgIHBhZGRpbmc6IC41cmVtXG4gICAgICB3aWR0aDogNDclXG5cblxuICAmX19saW5rXG4gICAgY29sb3I6ICRzaXRlLXRleHQtY29sb3ItbGlua1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgIGZvbnQtZmFtaWx5OiAkc2VyaWZcbiAgICBwYWRkaW5nOiAwIC40cmVtXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZVxuICAgICY6aG92ZXJcbiAgICAgIGNvbG9yOiAkc2l0ZS10ZXh0LWNvbG9yLWxpbmstaG92ZXJcblxuXG4vLyBDYXJkIEJpbyAtIFRoZXNlIGFyZSBmb3VuZCBvbiB0aGUgTGVhZGVyc2hpcCBwYWdlXG4uY2FyZC1iaW9cbiAgcGFkZGluZy1ib3R0b206IDJyZW1cblxuICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkY2xvdWRcbiAgICBtYXJnaW4tYm90dG9tOiAycmVtXG5cbiAgJl9fbWVkaWFcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wXG5cbiAgICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgICAgbWFyZ2luLWJvdHRvbTogMXJlbVxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyXG5cbiAgICBpbWdcbiAgICAgICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgICAgICB3aWR0aDogMzMlXG5cbiAgJl9fYm94XG4gICAgcGFkZGluZy1sZWZ0OiAycmVtXG4gICAgcGFkZGluZy10b3A6IDBcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wXG5cbiAgICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgICAgcGFkZGluZzogMFxuXG4gICZfX2hlYWRpbmdcbiAgICAvL01peGluIGNhbiBiZSBmb3VuZCBpbiB0eXBvZ3JhcGh5XG4gICAgK3N0YW5kYXJkLWhlYWRpbmcoKVxuICAgIG1hcmdpbi1ib3R0b206MXJlbTtcblxuICAmX19zdWJ0aXRsZVxuICAgIGNvbG9yOiAkc3RvbmVcbiAgICBtYXJnaW4tYm90dG9tOiA4cHhcblxuICAgIGgzXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgICBhXG4gICAgICBjb2xvcjogJGdyZWVuXG4gICAgICBtYXJnaW4tbGVmdDogMTBweFxuICAgICAgaVxuICAgICAgICBib3JkZXI6MXB4IHNvbGlkICRncmVlblxuICAgICAgICBwYWRkaW5nOiAycHhcblxuICAmX190ZXh0XG5cbiAgICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgICAgdGV4dC1hbGlnbjogbGVmdFxuXG4gICAgKiArICpcbiAgICAgIG1hcmdpbi10b3A6IDFyZW1cblxuXG4vLyBDYXJkIGFydGljbGUgLSBUaGVzZSBhcmUgZm91bmQgb24gdGhlIE5ld3MgYW5kIEluc2lnaHRzIHBhZ2Vcbi5jYXJkLWFydGljbGVcblxuXG4gICZfX2JveFxuICAgIGJveC1zaGFkb3c6IDAgMXB4IDAgJGdyZWVuXG4gICAgZGlzcGxheTogbm9uZVxuICAgICt2ZXJ0LXBhZGRpbmcoMSwxKVxuXG4gICAgKiArICpcbiAgICAgIG1hcmdpbi10b3A6IDFyZW1cblxuICBhXG4gICAgJjpob3ZlclxuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lXG5cbiAgaDJcbiAgICArc3RhbmRhcmQtaGVhZGluZygpIC8vTWl4aW4gY2FuIGJlIGZvdW5kIGluIHR5cG9ncmFwaHlcbiAgICAmOmhvdmVyXG4gICAgICBjb2xvcjokbmlnaHRncmVlblxuXG4gIHNtYWxsXG4gICAgY29sb3I6ICM2NjZcbiAgICBmb250LXNpemU6IC43NXJlbVxuXG4gIHBcblxuLmxvYWRlcl9fbmF2XG4gIGRpc3BsYXk6IHRhYmxlLWNlbGxcbiAgcGFkZGluZy10b3A6IDEuMjVyZW1cblxuXG4uY2FyZC10cmlwdGljXG4gIGRpc3BsYXk6IHRhYmxlXG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAkYm9yZGVyQ29sb3JcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRib3JkZXJDb2xvclxuXG4gICZfX2JveFxuICAgIHBhZGRpbmc6IDJyZW1cbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wXG5cbiAgICAmOm50aC1jaGlsZCgyKVxuICAgICAgK21lZGlhKFwiPnRhYmxldFwiKVxuICAgICAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICRib3JkZXJDb2xvclxuICAgICAgICAvL3BhZGRpbmc6IDJyZW0gMXJlbSAycmVtIDFyZW1cblxuICAgICY6bnRoLWNoaWxkKDMpXG4gICAgICArbWVkaWEoXCI+dGFibGV0XCIpXG4gICAgICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgJGJvcmRlckNvbG9yXG4gICAgICAgIC8vcGFkZGluZzogMnJlbSAycmVtIDJyZW0gMXJlbVxuXG4gICZfX21lZGlhXG4gICAgLy9iYWNrZ3JvdW5kLWNvbG9yOiAkZ3JlZW5cbiAgICBoZWlnaHQ6IDE1MHB4XG4gICAgb3ZlcmZsb3c6IGhpZGRlblxuICAgIG1hcmdpbi1ib3R0b206IDJyZW1cblxuICAgIGltZ1xuXG4gICZfX2hlYWRpbmctbGlua1xuICAgICtzbWFsbC1oZWFkaW5nKClcbiAgICBjb2xvcjogJHNpdGUtdGV4dC1jb2xvci1saW5rXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrXG4gICAgdGV4dC1hbGlnbjogY2VudGVyXG5cbiAgICAmOmhvdmVyXG4gICAgICBjb2xvcjogJHNpdGUtdGV4dC1jb2xvci1saW5rLWhvdmVyXG5cbiAgJl9fdGV4dFxuICAgIHRleHQtYWxpZ246IGNlbnRlclxuIiwiLy9cbi8vQ1RBcyAtIENhbGwgdG8gQWN0aW9uIG1vZHVsZXNcbi8vXG5cbi8vQ29udGFjdCBDVEFcbi8vVGhpcyBpcyBmb3VuZCBvbiB0aGUgaG9tZXBhZ2Ugb25seSByaWdodCBub3dcbi5jdGEtY29udGFjdFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2xhdGVcbiAgZGlzcGxheTogdGFibGVcbiAgd2lkdGg6IDEwMCU7XG5cbiAgJl9fYm94XG4gICAgcGFkZGluZzogMnJlbVxuXG4gICZfX2JveDpudGgtY2hpbGQoMilcbiAgICBwYWRkaW5nOiAycmVtIDBcblxuXG4gICZfX3RleHRcbiAgICBtYXJnaW46IDBcbiAgICBwYWRkaW5nOiAwIDMuNXJlbSAwIDJyZW1cblxuICAgICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgICBwYWRkaW5nOiAwXG5cbiAgJl9fYnV0dG9uXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrXG4gICAgbWFyZ2luOiAwIDJyZW0gMCAwXG5cbiAgICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgICAgbWFyZ2luOiAwXG5cblxuLy9WaWRlbyB0ZWFzZXIgQ1RBXG4vL1RoaXMgaXMgZm91bmQgb24gdGhlIGhvbWVwYWdlIG9ubHkgcmlnaHQgbm93XG4uY3RhLXRlYXNlclxuICBkaXNwbGF5OiB0YWJsZVxuICBwYWRkaW5nOiAxcmVtIDJyZW1cblxuICB2aWRlb1xuICAgIHdpZHRoOiAxMDAlXG4gICAgaGVpZ2h0OiAxMDAlXG5cbiAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICBmbGV4LWZsb3c6IGNvbHVtblxuXG4gICZfX2JveFxuICAgIHBhZGRpbmctcmlnaHQ6IDJyZW1cblxuICAgICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgICBwYWRkaW5nOiAwXG5cbiAgJl9faGVhZGluZ1xuXG4gICZfX3RleHRcbiAgICBtYXJnaW4tYm90dG9tOiAycmVtXG5cblxuICAmX19tZWRpYVxuICAgIGhlaWdodDogMzAwcHhcbiAgICBvdmVyZmxvdzogaGlkZGVuXG5cbiAgICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgICAgaGVpZ2h0OiBhdXRvXG4gICAgICBtYXJnaW4tdG9wOiAycmVtXG5cblxuLy9DZW50ZXJlZCBDVEFcbi8vVGhpcyBpcyBmb3VuZCBvbiB0aGUgaG9tZXBhZ2Ugb25seSByaWdodCBub3dcbi5jdGEtY2VudGVyXG4gIHBhZGRpbmc6IDJyZW1cbiAgdGV4dC1hbGlnbjogY2VudGVyXG5cbiAgJl9faGVhZGluZ1xuXG4gICZfX3RleHRcbiAgICBwYWRkaW5nOiAwIDhyZW1cbiAgICBtYXJnaW4tYm90dG9tOiAycmVtXG5cbiAgICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgICAgcGFkZGluZzogMFxuXG4gICZfX2J1dHRvblxuXG5cblxuLy9TdWJzY3JpYmUgQ1RBIC0gVGhpcyBpcyBmb3VuZCBhdCB0aGUgdG9wIG9mIHRoZSBmb290ZXJcbi5jdGEtc3Vic2NyaWJlXG4gIGJhY2tncm91bmQtY29sb3I6ICRncmVlblxuICBjb2xvcjogJHdoaXRlXG4gICt2ZXJ0LXBhZGRpbmcoMSwxLjUpXG5cbiAgJl9faGVhZGluZ1xuICAgIGNvbG9yOiAkd2hpdGVcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXJcblxuICAmX19ib3hcbiAgICBkaXNwbGF5OiB0YWJsZVxuICAgIG1hcmdpbjogMCBhdXRvXG4gICAgd2lkdGg6IDc1JVxuXG4gIC8vIFRPRE8gdXNlIGNvbCBjbGFzcyBpbnN0ZWFkIGZvciB3aWR0aFxuICAmX19pbnB1dC1hZGQtb25cblxuXG4gICZfX2lucHV0XG4gICAgcGFkZGluZzogLjlyZW1cbiAgICB3aWR0aDogMTAwJVxuXG4gICZfX2J1dHRvblxuICAgIGJvcmRlcjogMXB4IHNvbGlkICR3aGl0ZVxuICAgIGNvbG9yOiAkd2hpdGVcbiAgICBmb250LXNpemU6IDEuNXJlbVxuICAgIG1hcmdpbi1sZWZ0OiAxcmVtXG4gICAgd2lkdGg6IDEwMCVcbiAgICB0cmFuc2l0aW9uOiBhbGwgLjJzIGVhc2VcblxuICAgICY6aG92ZXJcbiAgICAgIC8qVGhlc2Ugd2lsbCB0cmFuc2l0aW9uIG9uIGhvdmVyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGVcbiAgICAgIGNvbG9yOiAkZ3JlZW5cblxuICAgICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgICBtYXJnaW46IDFyZW0gMCAwIDBcblxuICAmX19tZXNzYWdlXG4gICAgZGlzcGxheTogbm9uZVxuICAgIHBhZGRpbmctdG9wOiAyLjVyZW1cblxuICAmX19lcnJvclxuICAgIGRpc3BsYXk6IG5vbmVcbiAgICBwYWRkaW5nLXRvcDogMXJlbVxuXG4gICAgJi1tc2dcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlclxuXG5cbi8vU2lkZWJhciBDVEEgLSBUaGlzIGlzIGZvdW5kIG9uIGludGVybmFsIHBhZ2VzIG9ubHlcbi5jdGEtc2lkZWJhclxuICBwYWRkaW5nOiAxcmVtIDAgMCA1cmVtXG4gIHZlcnRpY2FsLWFsaWduOiB0b3BcblxuICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgIHBhZGRpbmc6IDNyZW0gMnJlbVxuXG4gICZfX21lZGlhXG4gICAgLy9oZWlnaHQ6IDE4MHB4XG4gICAgLy9vdmVyZmxvdzogaGlkZGVuXG5cbiAgICArbWVkaWEoXCI8PXRhYmxldFwiKVxuXG5cbiAgICBpbWdcblxuICAmX19oZWFkaW5nXG4gICAgZm9udC1zaXplOiAxLjI1cmVtXG4gICAgK3ZlcnQtbWFyZ2luKC41LC41KVxuXG4gICZfX3RleHRcblxuICAmX19idXR0b25cbiAgICBtYXJnaW4tdG9wOiAxcmVtXG5cbi8vQWRkIHNvbWUgc3BhY2luZyB3aGVuIHRoZXJlJ3MgbXVsdGlwbGUgc2lkZWJhciBpdGVtc1xuLmN0YS1zaWRlYmFyX19idXR0b24gKyAuY3RhLXNpZGViYXJfX2hlYWRpbmcsXG4uY3RhLXNpZGViYXJfX3RleHQgKyAuY3RhLXNpZGViYXJfX2hlYWRpbmdcbiAgbWFyZ2luLXRvcDogMnJlbVxuXG5cblxuLy9Tb2NpYWwgQ1RBIC0gVGhlc2UgYXJlIGN1cnJlbnRseSBmb3VuZCBhdCB0aGUgYm90dG9tIG9mIHRoZSBibG9nIHBvc3RzXG4uY3RhLXNvY2lhbFxuICBwYWRkaW5nLWxlZnQ6IDFyZW1cblxuICAuaWNvblxuICAgIGZpbGw6ICRncmVlblxuXG4gICAgJjpob3ZlclxuICAgICAgZmlsbDogJGdyYXBoaXRlXG5cbiAgYVxuICAgICY6aG92ZXJcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZVxuIiwiLy9Gb290ZXJcbiRmb290ZXItaGVhZGVyLW5hdjogVHJlYnVjaGV0IE1TXG5cbmZvb3RlclxuXHRwYWRkaW5nLWJvdHRvbTogNXJlbVxuXG5cdCttZWRpYShcIjw9dGFibGV0XCIpXG5cdFx0cGFkZGluZzogMFxuXG5cbi5mb290ZXItY29weXJpZ2h0XG5cdGJvcmRlci10b3A6IDFweCBzb2xpZCAkY2xvdWRcblx0ZGlzcGxheTogdGFibGVcblx0cGFkZGluZzogMnJlbVxuXHR3aWR0aDogMTAwJVxuXG5cdCttZWRpYShcIjw9dGFibGV0XCIpXG5cdFx0cGFkZGluZzogMnJlbSAwIDAgMFxuXHRcdGRpc3BsYXk6IGJsb2NrXG5cblx0Jl9fbG9nby1ib3hcblx0XHR3aWR0aDogNDUwcHhcblxuXHRcdCttZWRpYShcIjw9dGFibGV0XCIpXG5cdFx0XHRkaXNwbGF5OiBpbmxpbmUtYmxvY2tcblx0XHRcdHdpZHRoOiBhdXRvXG5cblx0XHRcdC5sb2dvX19zdGFja2VkXG5cdFx0XHRcdGRpc3BsYXk6IGlubGluZS1ibG9ja1xuXHRcdFx0XHR3aWR0aDogMjUwcHhcblxuXG5cdCZfX2JveFxuXHRcdHRleHQtYWxpZ246IHJpZ2h0XG5cblx0XHQrbWVkaWEoXCI+PXRhYmxldFwiLCBcIj49ZGVza3RvcFwiKVxuXHRcdFx0dGV4dC1hbGlnbjogcmlnaHRcblxuXHRcdHNtYWxsXG5cdFx0XHRkaXNwbGF5OiBibG9ja1xuXHRcdFx0Zm9udC1zaXplOiAxNHB4XG5cdFx0XHRwYWRkaW5nLXJpZ2h0OiAuNXJlbVxuXG5cblx0XHRcdCttZWRpYShcIj49dGFibGV0XCIsIFwiPj1kZXNrdG9wXCIpXG5cdFx0XHRcdGZvbnQtc2l6ZTogMTJweFxuXHRcdFx0XHRkaXNwbGF5OiBpbmxpbmUtYmxvY2tcblxuXHRcdFx0XHQmOjpiZWZvcmVcblx0XHRcdFx0ICBjb250ZW50OiAnfCdcblxuXHRcdFx0XHQmOm50aC1jaGlsZCgxKVxuXHRcdFx0XHQgICY6OmJlZm9yZVxuXHRcdFx0XHQgICAgY29udGVudDogJydcblxuXHRcdC5uYXYtbWlub3Jcblx0XHRcdGxpXG5cdFx0XHQgIGFcblx0XHRcdCAgICBmb250LXNpemU6IDE0cHhcblx0XHRcdCAgICArbWVkaWEoXCI+PXRhYmxldFwiLCBcIj49ZGVza3RvcFwiKVxuXHRcdFx0ICAgICAgZm9udC1zaXplOiAxMnB4XG5cbi5mb290ZXItZGlzY2xhaW1lclxuXHR0ZXh0LWFsaWduOiBjZW50ZXJcblx0d2lkdGg6IDEwMCVcblxuXHQmX19ib3hcblx0XHRib3JkZXI6IDFweCBzb2xpZCAkZm9vdGVyLXRleHRcblx0XHRkaXNwbGF5OiBpbmxpbmUtYmxvY2tcblx0XHR0ZXh0LWFsaWduOiBjZW50ZXJcblx0XHRwYWRkaW5nOiAyMHB4XG5cdFx0bWFyZ2luOiA1MHB4IGF1dG8gMTBweFxuXG5cdFx0K21lZGlhKFwiPj1kZXNrdG9wXCIpXG5cdFx0ICBwYWRkaW5nOiAyMHB4IDEwMHB4XG5cblx0dWxcblx0XHRAZXh0ZW5kICVtZW51XG5cdFx0ZGlzcGxheTogdGFibGVcblx0XHRtYXJnaW46IDAgYXV0b1xuXG5cdFx0bGlcblx0XHRcdGRpc3BsYXk6IHRhYmxlLWNlbGxcblx0XHRcdGJvcmRlcjogMXB4IHNvbGlkICNDQ0NDQ0Ncblx0XHRcdGJvcmRlci1yaWdodDogbm9uZVxuXHRcdFx0Ym9yZGVyLWxlZnQtc3R5bGU6IGRhc2hlZFxuXHRcdFx0bWFyZ2luOiAwIDEwcHhcblx0XHRcdHBhZGRpbmc6IC41cmVtXG5cdFx0XHQmOmxhc3QtY2hpbGRcblx0XHRcdCAgYm9yZGVyLXJpZ2h0OiAxcHggI0NDQyBzb2xpZFxuXHRcdFx0JjpmaXJzdC1jaGlsZFxuXHRcdFx0ICBib3JkZXItbGVmdC1zdHlsZTogc29saWRcblxuXHRoNiwgcCwgdWxcblx0XHRmb250LXNpemU6IDE0cHhcblx0XHRtYXJnaW4tYm90dG9tOiAxcmVtXG5cblx0XHQrbWVkaWEoXCI+PXRhYmxldFwiLCBcIj49ZGVza3RvcFwiKVxuXHRcdFx0Zm9udC1zaXplOiAxMnB4XG4iLCJcbkBrZXlmcmFtZXMgZmFkZUluXG4gIGZyb21cbiAgICBvcGFjaXR5OiAwXG4gIHRvXG4gICAgb3BhY2l0eTogMVxuXG4uaGVhZGVyX19sb2dvLWJveFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGVcbiAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAkYm9yZGVyQ29sb3JcbiAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgJGJvcmRlckNvbG9yXG4gIG1hcmdpbjogMCBhdXRvXG4gIG1heC13aWR0aDogMTIwMHB4XG5cbi8vIEZvciBJRTlcbi5uby1jc3NhbmltYXRpb25zIC5oZWFkZXJfX2xvZ28tYm94XG4gIHBhZGRpbmctdG9wOiAwXG5cbi5oZWFkZXJfX2xvZ29cbiAgYmFja2dyb3VuZDogJHdoaXRlXG5cblxuLmxvZ29cbiAgZGlzcGxheTogYmxvY2tcbiAgcGFkZGluZzogMHJlbSAwIDByZW0gMnJlbVxuICB3aWR0aDogNjAwcHhcblxuICArbWVkaWEoXCI8OTAwcHhcIilcbiAgICB3aWR0aDogNDAwcHhcblxuICArbWVkaWEoXCI8NTAwcHhcIilcbiAgICBwYWRkaW5nOiAxcmVtXG4gICAgd2lkdGg6IDMwMHB4XG5cbi8vIEZvciBJRTlcbi5uby1jc3NhbmltYXRpb25zIC5sb2dvXG4gIGhlaWdodDogNjhweFxuICBwYWRkaW5nOiAwIDFyZW1cblxuXG5zdmdcblxuICBwYXRoLCBwb2x5Z29uXG4gICAgZmlsbDogJGdyZWVuXG5cbiAgJjpob3ZlciBwYXRoLFxuICAmOmhvdmVyIHBvbHlnb25cbiAgICBvcGFjaXR5OiAuN1xuICAgIHRyYW5zaXRpb246IGZpbGwgMC4ycyBlYXNlXG4gICAgZmlsbC1vcGFjaXR5OiAwLjdcblxuLmxvZ29fX3N0cmV0Y2hlZFxuICBkaXNwbGF5OiBibG9ja1xuXG4gICttZWRpYShcIjw5MDBweFwiKVxuICAgIGRpc3BsYXk6IG5vbmVcblxuLmxvZ29fX3N0YWNrZWRcbiAgZGlzcGxheTogbm9uZVxuXG4gICttZWRpYShcIjw5MDBweFwiKVxuICAgIGRpc3BsYXk6IGJsb2NrXG5cblxuLy8gMjUgcGllY2VzXG4ubG9nb19fZ2xvYmVcbiAgcGF0aFxuICAvL0xvZ28gTG9hZCBBbmltYXRpb25cbiAgLy8gICBvcGFjaXR5OiAwXG4gIC8vICAgYW5pbWF0aW9uOiBmYWRlSW4gZWFzZS1pbiAxXG4gIC8vICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHNcbiAgLy8gICBhbmltYXRpb24tZHVyYXRpb246IC41c1xuXG4gIC8vIHBhdGg6bnRoLWNoaWxkKDEpXG4gIC8vICAgYW5pbWF0aW9uLWRlbGF5OiAwLjFzXG5cbiAgLy8gcGF0aDpudGgtY2hpbGQoMilcbiAgLy8gICBhbmltYXRpb24tZGVsYXk6IDAuMTFzXG5cbiAgLy8gcGF0aDpudGgtY2hpbGQoMylcbiAgLy8gICBhbmltYXRpb24tZGVsYXk6IDAuMjJzXG5cbiAgLy8gcGF0aDpudGgtY2hpbGQoNClcbiAgLy8gICBhbmltYXRpb24tZGVsYXk6IDAuMTNzXG5cbiAgLy8gcGF0aDpudGgtY2hpbGQoNSlcbiAgLy8gICBhbmltYXRpb24tZGVsYXk6IDAuMTRzXG5cbiAgLy8gcGF0aDpudGgtY2hpbGQoNilcbiAgLy8gICBhbmltYXRpb24tZGVsYXk6IDAuMTVzXG5cbiAgLy8gcGF0aDpudGgtY2hpbGQoNylcbiAgLy8gICBhbmltYXRpb24tZGVsYXk6IDAuMTZzXG5cbiAgLy8gcGF0aDpudGgtY2hpbGQoOClcbiAgLy8gICBhbmltYXRpb24tZGVsYXk6IDAuMzdzXG5cbiAgLy8gcGF0aDpudGgtY2hpbGQoOSlcbiAgLy8gICBhbmltYXRpb24tZGVsYXk6IDAuMThzXG5cbiAgLy8gcGF0aDpudGgtY2hpbGQoMTApXG4gIC8vICAgYW5pbWF0aW9uLWRlbGF5OiAwLjE5c1xuXG4gIC8vIHBhdGg6bnRoLWNoaWxkKDExKVxuICAvLyAgIGFuaW1hdGlvbi1kZWxheTogMC4yMHNcblxuICAvLyBwYXRoOm50aC1jaGlsZCgxMilcbiAgLy8gICBhbmltYXRpb24tZGVsYXk6IDAuMjFzXG5cbiAgLy8gcGF0aDpudGgtY2hpbGQoMTMpXG4gIC8vICAgYW5pbWF0aW9uLWRlbGF5OiAwLjEyc1xuXG4gIC8vIHBhdGg6bnRoLWNoaWxkKDE0KVxuICAvLyAgIGFuaW1hdGlvbi1kZWxheTogMC4yM3NcblxuICAvLyBwYXRoOm50aC1jaGlsZCgxNSlcbiAgLy8gICBhbmltYXRpb24tZGVsYXk6IDAuMzRzXG5cbiAgLy8gcGF0aDpudGgtY2hpbGQoMTYpXG4gIC8vICAgYW5pbWF0aW9uLWRlbGF5OiAwLjI1c1xuXG5cbi5uby1jc3NhbmltYXRpb25zIC5sb2dvX19nbG9iZVxuICBwYXRoXG4gICAgZmlsbDogJGdyZWVuXG4gICAgb3BhY2l0eTogMVxuXG4vLyBPdGhlciBjbGFzc2VzIGZvciBhbmltYWl0b24gbWF5YmVcbi8vIC5sb2dvX190ZXh0XG4vL1xuLy8gLmxvZ29fX2NvbW1lcmNlXG4vLyAgIHBhdGgsIHBvbHlnb25cbi8vXG4vL1xuLy8gLmxvZ29fX3RydXN0XG4vLyAgIHBhdGgsIHBvbHlnb25cbi8vXG4vL1xuLy8gLmxvZ29fX3RhZ2xpbmVcbi8vICAgcGF0aCwgcG9seWdvblxuIiwiLy8tIFRoaXMgY29udGFpbmVyIGhvbGQgdGhlIG1haW4gY29udGVudCBvbiBlYWNoIHBhZ2Vcbi8vLSBJdCBpcyBmb3VuZCBvbiBhbGwgaW50ZXJuYWwgcGFnZXNcblxuLy8tIEFsbCBcIk1haW5cIiBjbGFzc2VzIGhhdmUgc2hhcmUgdGhlc2UgcnVsZXNcbiVtYWluXG4gIGRpc3BsYXk6IHRhYmxlXG4gIHBhZGRpbmc6IDFyZW0gMnJlbVxuXG4ubWFpbi1zdGFuZGFyZFxuICBAZXh0ZW5kICVtYWluXG4gIHBhZGRpbmctYm90dG9tOiA1cmVtXG5cbiAgJl9fY29udGVudFxuXG4gICAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICAgIHRleHQtYWxpZ246IGxlZnRcblxuICAgICYuY29sLTctMTJcbiAgICAgIHBhZGRpbmctdG9wOiAxLjVyZW1cbiAgICAgIHZlcnRpY2FsLWFsaWduOiB0b3BcblxuICAmX190ZXh0XG5cbiAgICAqICsgKlxuICAgICAgbWFyZ2luLXRvcDogMXJlbVxuXG4gICAgaDJcbiAgICAgICtzdGFuZGFyZC1oZWFkaW5nKClcbiAgICAgICt2ZXJ0LXBhZGRpbmcoMSwwKVxuXG4gICAgLy8gRGVmYXVsdCB1bm9yZGVyZWQgbGlzdHMgaW4gY29udGVudCBhcmVhc1xuICAgIHVsXG4gICAgICBwYWRkaW5nLWxlZnQ6IDJyZW1cbiAgICAgIGxpc3Qtc3R5bGU6IGRpc2NcblxuICAgICAgbGlcbiAgICAgICAgbWFyZ2luLXRvcDogMC41cmVtXG5cbiAgICAvLyBEZWZhdWx0IG9yZGVyZWQgbGlzdHMgaW4gY29udGVudCBhcmVhc1xuICAgIG9sXG4gICAgICBwYWRkaW5nLWxlZnQ6IDJyZW1cbiAgICAgIC8vbGlzdC1zdHlsZS10eXBlOiB1cHBlci1yb21hblxuXG4gICAgLy8gS2VlcCBzbWFsbCBpbWFnZXMgZnJvbSBnZXR0aW5nIGdpYW50XG4gICAgaW1nXG4gICAgICB3aWR0aDogMTAwJVxuXG5cbi8vIE1haW4gY29udGVudCBibG9jayBvbiBMZWFkZXJzaGlwIHBhZ2Vcbi5tYWluLWJpb3NcbiAgZGlzcGxheTogdGFibGVcbiAgcGFkZGluZzogMnJlbVxuXG5cbi8vIE1haW4gY29udGVudCBibG9jayBvbiBOZXdzIHBhZ2Vcbi5tYWluLW5ld3NcbiAgQGV4dGVuZCAlbWFpblxuXG4vL01haW4gY29udGVudCBsb2NhdGlvbnMgdGFibGVcbi5jaXR5LWNvbHVtblxuICB3aWR0aDoxMzVweFxuLmFkZHJlc3MtY29sdW1uXG4gIHdpZHRoOjMzNXB4XG4ucGhvbmUtY29sdW1uXG5cbi5sb2NhdGlvbi1waG9uZVxuICBjb2xvcjokbmlnaHRncmVlblxuICAmOmhvdmVyXG4gICAgY29sb3I6JGdyZWVuXG5cblxuLy8gTWFpbiBjb250ZW50IGJsb2NrIG9uIEJsb2cgUG9zdCBwYWdlXG4ubWFpbi1wb3N0XG4gIEBleHRlbmQgJW1haW5cblxuICAmX190ZXh0XG5cbiAgICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgICAgdGV4dC1hbGlnbjogbGVmdFxuXG4gICAgKiArICpcbiAgICAgIG1hcmdpbi10b3A6IDFyZW1cblxuICAgIGgyXG4gICAgICArc3RhbmRhcmQtaGVhZGluZygpXG5cbiAgICBoM1xuICAgICAgK21pbm9yLWhlYWRpbmcoKVxuXG4gICAgZmlnY2FwdGlvblxuICAgICAgY29sb3I6ICRncmFwaGl0ZVxuICAgICAgZm9udC1zaXplOiAuNzVyZW1cbiAgICAgIG1hcmdpbi10b3A6IDBcblxuICAgIGJsb2NrcXVvdGVcbiAgICAgICtibG9ja3F1b3RlKClcblxuXG4uYnJlYWRjcnVtYlxuICBwYWRkaW5nLWJvdHRvbTogMS41cmVtXG4gIGZvbnQtc2l6ZToxNHB4XG5cbiAgYVxuICAgIGNvbG9yOiRncmVlblxuICAgICY6aG92ZXJcbiAgICAgIGNvbG9yOiRuaWdodGdyZWVuXG4gIHNwYW5cbiAgICBjb2xvcjokc3RvbmVcbiIsIi5mb3JtLXN0YW5kYXJkXG4gIG1hcmdpbi10b3A6IDJyZW1cblxuICBpbnB1dCxcbiAgaW5wdXRbdHlwZT1cImVtYWlsXCJdLFxuICBpbnB1dFt0eXBlPVwibnVtYmVyXCJdLFxuICBpbnB1dFt0eXBlPVwicGFzc3dvcmRcIl0sXG4gIGlucHV0W3R5cGU9XCJzZWFyY2hcIl0sXG4gIGlucHV0W3R5cGU9XCJ0ZWxcIl0sXG4gIGlucHV0W3R5cGU9XCJ0ZXh0XCJdLFxuICBpbnB1dFt0eXBlPVwidXJsXCJdLFxuICBpbnB1dFt0eXBlPVwiY29sb3JcIl0sXG4gIGlucHV0W3R5cGU9XCJkYXRlXCJdLFxuICBpbnB1dFt0eXBlPVwibmFtZVwiXSxcbiAgaW5wdXRbdHlwZT1cImRhdGV0aW1lXCJdLFxuICBpbnB1dFt0eXBlPVwiZGF0ZXRpbWUtbG9jYWxcIl0sXG4gIGlucHV0W3R5cGU9XCJtb250aFwiXSxcbiAgaW5wdXRbdHlwZT1cInRpbWVcIl0sXG4gIGlucHV0W3R5cGU9XCJ3ZWVrXCJdLFxuICB0ZXh0YXJlYVxuICBcdGNvbG9yOiAkc2l0ZS10ZXh0LWNvbG9yXG4gIFx0Ym9yZGVyOiAxcHggc29saWQgJGJvcmRlckNvbG9yXG4gICAgYm94LXNpemluZzogY29udGVudC1ib3hcbiAgXHRib3JkZXItcmFkaXVzOiAwXG4gICAgZm9udC1zaXplOiAxcmVtXG4gIFx0cGFkZGluZzogMXJlbVxuICBcdGRpc3BsYXk6IGJsb2NrXG4gIFx0d2lkdGg6IDEwMCVcblxuXG4gIGxhYmVsXG4gICAgZGlzcGxheTogYmxvY2tcblxuICBpbnB1dFt0eXBlPVwiYnV0dG9uXCJdLFxuICBpbnB1dFt0eXBlPVwicmVzZXRcIl0sXG4gIGlucHV0W3R5cGU9XCJzdWJtaXRcIl1cbiAgICAvLyBhbnkgZGVmYXVsdCBidXR0b24gc3R5bGVzIHRoYXQgbmVlZCB0byBiZSBkaWZmZXJlbnQgb24gZm9ybXMgZ28gaGVyZVxuICAgIGRpc3BsYXk6IGJsb2NrXG5cblxuICAmX19jaGVja2JveFxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgIGZsb2F0OiBsZWZ0ICFpbXBvcnRhbnRcbiAgICB3aWR0aDogYXV0byAhaW1wb3J0YW50XG5cbiAgJl9fY2hlY2tib3ggKyBsYWJlbFxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgIGZsb2F0OiBsZWZ0ICFpbXBvcnRhbnRcbiAgICBtYXJnaW46IDEwcHggMTBweCAyMHB4IDEwcHggIWltcG9ydGFudFxuXG4gIC5zZWxlY3Rib3hcbiAgICBiYWNrZ3JvdW5kOiAkd2hpdGVcbiAgICBib3JkZXItcmFkaXVzOiAwXG4gICAgY3Vyc29yOiBwb2ludGVyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlXG4gICAgaGVpZ2h0OiA0OHB4XG5cbiAgICAmOjphZnRlclxuICAgICAgY29sb3I6ICNjY2NcbiAgICAgIGNvbnRlbnQ6ICfilr4nXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgICAgIHRvcDogMXJlbVxuICAgICAgcmlnaHQ6IC41cmVtXG4gICAgICB3aWR0aDogMXJlbVxuICAgICAgaGVpZ2h0OiAxcmVtXG5cblxuICBzZWxlY3RcbiAgICBiYWNrZ3JvdW5kOiAkd2hpdGVcbiAgICBib3gtc2hhZG93OiBub25lXG4gICAgYm9yZGVyLXJhZGl1czogMFxuICAgIGJvcmRlcjogMXB4IHNvbGlkICRib3JkZXJDb2xvclxuICAgIGNvbG9yOiAkc3RvbmVcbiAgICBjdXJzb3I6IHBvaW50ZXJcbiAgICBkaXNwbGF5OiBibG9ja1xuICAgIGZvbnQtc2l6ZTogMXJlbVxuICAgIGhlaWdodDogNjBweFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZVxuXG4gICAgcGFkZGluZy1sZWZ0OiAxcmVtXG4gICAgd2lkdGg6IDEwMCVcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6bm9uZVxuICAgIC1tb3otYXBwZWFyYW5jZTogbm9uZVxuICAgIGFwcGVhcmFuY2U6IG5vbmVcblxuXG4uY29udGFjdC11c19fYnV0dG9uXG4gIGJhY2tncm91bmQtY29sb3I6ICRzbGF0ZVxuICBtYXgtd2lkdGg6MTgzcHhcbiAgY2xlYXI6Ym90aFxuXG5cbi8vIElFOSBvdmVycmlkZVxuLy8gVXNpbmcgbW9kZXJuaXpyIGZvciBmZWF0dXJlIGRldGVjdGlvblxuLm5vLWNzc2dyYWRpZW50cyAuc2VsZWN0Ym94OjphZnRlclxuICB6LWluZGV4OiAtM1xuIl19 */