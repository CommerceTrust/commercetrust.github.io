@charset "UTF-8";
article, aside, details, figcaption, figure, footer, header, hgroup, nav, section, summary {
  display: block; }

audio, canvas, video {
  display: inline-block; }

audio:not([controls]) {
  display: none;
  height: 0; }

[hidden], template {
  display: none; }

html {
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%; }

body {
  margin: 0; }

a {
  background: transparent; }
  a:hover, a:active {
    outline: 0; }

/* @if \$normalize_headings == true {
    h1 {
        font-size: \$h1_font_size;
        margin: \$h1_margin;
    }

    h2 {
        font-size: \$h2_font_size;
        margin: \$h2_margin;
    }

    h3 {
        font-size: \$h3_font_size;
        margin: \$h3_margin;
    }

    h4 {
        font-size: \$h4_font_size;
        margin: \$h4_margin;
    }

    h5 {
        font-size: \$h5_font_size;
        margin: \$h5_margin;
    }

    h6 {
        font-size: \$h6_font_size;
        margin: \$h6_margin;
    }
} */
abbr[title] {
  border-bottom: 1px dotted; }

b, strong {
  font-weight: bold; }

dfn {
  font-style: italic; }

mark {
  background: #ff0;
  color: #000; }

code, kbd, pre, samp {
  font-family: monospace, serif;
  font-size: 1em; }

pre {
  white-space: pre;
  white-space: pre-wrap;
  word-wrap: break-word; }

q {
  quotes: "\201C" "\201D" "\2018" "\2019"; }

q:before, q:after {
  content: '';
  content: none; }

/* /small {
    font-size: 80%;
} */
sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

img {
  border: 0; }

svg:not(:root) {
  overflow: hidden; }

figure {
  margin: 0; }

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

legend {
  border: 0;
  padding: 0;
  white-space: normal; }

button, input, select, textarea {
  font-family: inherit;
  font-size: 100%;
  margin: 0;
  vertical-align: baseline; }

button, input {
  line-height: normal; }

button, select {
  text-transform: none; }

button, html input[type="button"], input[type="reset"], input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer; }

button[disabled], input[disabled] {
  cursor: default; }

button::-moz-focus-inner, input::-moz-focus-inner {
  border: 0;
  padding: 0; }

textarea {
  overflow: auto;
  vertical-align: top; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

input[type="search"] {
  -webkit-appearance: textfield;
  -moz-box-sizing: content-box;
  box-sizing: content-box; }
  input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration {
    -webkit-appearance: none; }
input[type="checkbox"], input[type="radio"] {
  -moz-box-sizing: border-box;
       box-sizing: border-box;
  padding: 0; }

html {
  font-size: 16px;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased; }

body {
  color: #333;
  line-height: 1.5;
  font-family: News Cycle, sans-serif;
  -moz-background-size: auto 24px;
       background-size: auto 24px;
  margin: 0; }

[class*='__heading'] {
  color: #267e64;
  font-family: Playfair Display, serif;
  font-size: 40px;
  font-size: 2.5rem;
  font-weight: 400;
  line-height: 1;
  margin-bottom: 32px;
  margin-bottom: 2rem; }

[class*=__button], input[type="button"], input[type="reset"] {
  border: 1px solid #267e64;
  cursor: pointer;
  display: inline-block;
  font-family: Playfair Display, serif;
  font-size: 19px;
  font-size: 1.2rem;
  font-style: italic;
  text-align: center;
  padding: 12px 48px;
  padding: .75rem 3rem;
  text-decoration: none;
  /*Items for transition */
  background-color: transparent;
  color: #267e64;
  /*Transition settings */
  -webkit-transition: all .2s ease;
     -moz-transition: all .2s ease;
       -o-transition: all .2s ease;
          transition: all .2s ease; }
  [class*=__button]:hover, input[type="button"]:hover, input[type="reset"]:hover {
    /*These will transition on hover */
    background-color: #267e64;
    color: #fff;
    text-decoration: none; }

.loader__button.disabled {
  background-color: #e5e6e7;
  color: #267e64;
  cursor: default;
  opacity: .3;
  filter: alpha(opacity=30); }

.clearfix:after {
  content: "";
  display: table;
  clear: both; }

img, iframe, embed {
  width: 100%; }

.container {
  background-color: #fff;
  border-left: 1px solid #ccc;
  border-right: 1px solid #ccc;
  margin: 0 auto;
  max-width: 1200px; }

[class*='col-'] {
  display: table-cell;
  vertical-align: middle; }

.col-2-12 {
  width: 16.66667%; }

.col-3-12 {
  width: 25%; }

.col-4-12 {
  width: 33.33333%; }

.col-5-12 {
  width: 41.66667%; }

.col-6-12 {
  width: 50%; }

.col-7-12 {
  width: 58.33333%; }

.col-8-12 {
  width: 66.66667%; }

.col-9-12 {
  width: 75%; }

.col-10-12 {
  width: 83.33333%; }

.col-11-12 {
  width: 91.66667%; }

* {
  margin: 0;
  padding: 0;
  -moz-box-sizing: border-box;
       box-sizing: border-box; }
  *:after, *:before {
    -moz-box-sizing: border-box;
         box-sizing: border-box; }

body {
  background-color: #eceee6;
  padding: 0; }

a {
  text-decoration: none;
  color: #267e64; }
  a:hover {
    color: #455652;
    text-decoration: underline; }

table {
  margin: 0 0 1.5em;
  width: 100%; }

tr {
  border-bottom: 1px solid #e5e6e7; }
  tr:nth-child(even) {
    background-color: #f8f8f8; }

td {
  vertical-align: top;
  padding: 10px 5px; }

thead {
  background-color: #e5e6e7; }
  thead th {
    font-weight: 600;
    text-align: left;
    padding: 5px; }

.nav-minor {
  display: block;
  text-align: right; }
  .nav-minor__container {
    background-color: #fff;
    border-left: 1px solid #ccc;
    border-right: 1px solid #ccc;
    margin: 0 auto;
    padding: 16px 24px;
    padding: 1rem 1.5rem;
    max-width: 1200px; }
  .nav-minor li {
    display: inline-block; }
    .nav-minor li:after {
      display: inline-block;
      content: ' | ';
      color: #267e64;
      margin: 0 2px 0 4px;
      margin: 0 2px 0 .3rem; }
    .nav-minor li:nth-child(3):after {
      content: ' '; }
    .nav-minor li:last-child a {
      font-weight: bold;
      margin-right: 10px; }
  .nav-minor__link {
    color: #333;
    display: inline-block;
    padding: 0 4px 0;
    padding: 0 .3rem 0; }
    .nav-minor__link:hover {
      color: #267e64; }

.site-map a {
  color: #333; }
  .site-map a:hover {
    color: #267e64; }

a.cd-nav-item:hover img {
  opacity: .7 !important;
  filter: alpha(opacity=70); }
a.cd-nav-item:hover h3 {
  color: #455652 !important; }

input[type="search"]::-ms-clear {
  display: none; }

input[type="search"]::-webkit-search-decoration, input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-results-button, input[type="search"]::-webkit-search-results-decoration {
  display: none; }

/* --------------------------------
 *
 *Main components
 *
 *--------------------------------* */
.cd-main-content, .cd-main-header {
  /* Force Hardware Acceleration in WebKit */
  -webkit-transform: translateZ(0);
     -moz-transform: translateZ(0);
          transform: translateZ(0);
  will-change: transform; }
  .cd-main-content ul, .cd-main-header ul {
    list-style: none; }

.cd-main-content {
  position: relative;
  -webkit-transition: -webkit-transform 0.3s;
     -moz-transition: -moz-transform 0.3s;
       -o-transition: -o-transform 0.3s;
          transition: transform 0.3s; }

.cd-main-header {
  font-family: Playfair Display, serif;
  position: relative;
  -webkit-transition: -webkit-transform 0.3s;
     -moz-transition: -moz-transform 0.3s;
       -o-transition: -o-transform 0.3s;
          transition: transform 0.3s; }

.cd-main-content {
  min-height: 100vh;
  z-index: 2; }

.cd-main-header {
  height: 50px;
  background: #fff;
  z-index: 3;
  border-bottom: 1px solid #e5e6e7; }
  .nav-is-fixed .cd-main-header {
    /* add .nav-is-fixed class to body if you want a fixed navigation on > 1024px */
    position: fixed;
    top: 0;
    left: 0;
    width: 100%; }

.cd-logo {
  position: absolute;
  top: 12px;
  left: 5%; }
  .cd-logo img {
    display: block; }

.cd-header-buttons {
  position: absolute;
  display: inline-block;
  top: 3px;
  right: 5%; }
  .cd-header-buttons li {
    display: inline-block; }

.cd-search-trigger, .cd-nav-trigger {
  position: relative;
  display: block;
  width: 44px;
  height: 44px;
  overflow: hidden;
  white-space: nowrap;
  /* hide text */
  color: transparent;
  z-index: 3; }

.cd-search-trigger:before, .cd-search-trigger:after {
  /* search icon */
  content: '';
  position: absolute;
  -webkit-transition: opacity 0.3s;
     -moz-transition: opacity 0.3s;
       -o-transition: opacity 0.3s;
          transition: opacity 0.3s;
  /* Force Hardware Acceleration in WebKit */
  -webkit-transform: translateZ(0);
     -moz-transform: translateZ(0);
          transform: translateZ(0);
  -webkit-backface-visibility: hidden;
     -moz-backface-visibility: hidden;
          backface-visibility: hidden; }
.cd-search-trigger:before {
  /* lens */
  top: 11px;
  left: 11px;
  width: 18px;
  height: 18px;
  -moz-border-radius: 50%;
       border-radius: 50%;
  border: 3px solid #455652; }
.cd-search-trigger:after {
  /* handle */
  height: 3px;
  width: 8px;
  background: #455652;
  bottom: 14px;
  right: 11px;
  -webkit-transform: rotate(45deg);
     -moz-transform: rotate(45deg);
      -ms-transform: rotate(45deg);
       -o-transform: rotate(45deg);
          transform: rotate(45deg); }
.cd-search-trigger span {
  /* container for the X icon */
  position: absolute;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0; }
.cd-search-trigger span:before, .cd-search-trigger span:after {
  /* close icon */
  content: '';
  position: absolute;
  display: inline-block;
  height: 3px;
  width: 22px;
  top: 50%;
  margin-top: -2px;
  left: 50%;
  margin-left: -11px;
  background: #455652;
  opacity: 0;
  filter: alpha(opacity=0);
  /* Force Hardware Acceleration in WebKit */
  -webkit-transform: translateZ(0);
     -moz-transform: translateZ(0);
          transform: translateZ(0);
  -webkit-backface-visibility: hidden;
     -moz-backface-visibility: hidden;
          backface-visibility: hidden;
  -webkit-transition: opacity 0.3s, -webkit-transform 0.3s;
     -moz-transition: opacity 0.3s, -moz-transform 0.3s;
       -o-transition: opacity 0.3s, -o-transform 0.3s;
          transition: opacity 0.3s, transform 0.3s; }
.cd-search-trigger span:before {
  -webkit-transform: rotate(45deg);
     -moz-transform: rotate(45deg);
      -ms-transform: rotate(45deg);
       -o-transform: rotate(45deg);
          transform: rotate(45deg); }
.cd-search-trigger span:after {
  -webkit-transform: rotate(-45deg);
     -moz-transform: rotate(-45deg);
      -ms-transform: rotate(-45deg);
       -o-transform: rotate(-45deg);
          transform: rotate(-45deg); }
.cd-search-trigger.search-is-visible:before, .cd-search-trigger.search-is-visible:after {
  /* hide search icon */
  opacity: 0;
  filter: alpha(opacity=0); }
.cd-search-trigger.search-is-visible span:before, .cd-search-trigger.search-is-visible span:after {
  /* show close icon */
  opacity: 1;
  filter: alpha(opacity=100); }
.cd-search-trigger.search-is-visible span:before {
  -webkit-transform: rotate(135deg);
     -moz-transform: rotate(135deg);
      -ms-transform: rotate(135deg);
       -o-transform: rotate(135deg);
          transform: rotate(135deg); }
.cd-search-trigger.search-is-visible span:after {
  -webkit-transform: rotate(45deg);
     -moz-transform: rotate(45deg);
      -ms-transform: rotate(45deg);
       -o-transform: rotate(45deg);
          transform: rotate(45deg); }

.cd-nav-trigger:hover {
  color: transparent; }
.cd-nav-trigger span, .cd-nav-trigger span:before, .cd-nav-trigger span:after {
  /* hamburger icon in CSS */
  position: absolute;
  display: inline-block;
  height: 3px;
  width: 24px;
  background: #455652; }
.cd-nav-trigger span {
  /* line in the center */
  position: absolute;
  top: 50%;
  right: 10px;
  margin-top: -2px;
  -webkit-transition: background 0.3s 0.3s;
     -moz-transition: background 0.3s 0.3s;
       -o-transition: background 0.3s 0.3s;
          transition: background 0.3s 0.3s; }
.cd-nav-trigger span:before, .cd-nav-trigger span:after {
  /* other 2 lines */
  content: '';
  right: 0;
  /* Force Hardware Acceleration in WebKit */
  -webkit-transform: translateZ(0);
     -moz-transform: translateZ(0);
          transform: translateZ(0);
  -webkit-backface-visibility: hidden;
     -moz-backface-visibility: hidden;
          backface-visibility: hidden;
  -webkit-transform-origin: 0% 50%;
     -moz-transform-origin: 0% 50%;
      -ms-transform-origin: 0% 50%;
       -o-transform-origin: 0% 50%;
          transform-origin: 0% 50%;
  -webkit-transition: -webkit-transform 0.3s 0.3s;
     -moz-transition: -moz-transform 0.3s 0.3s;
       -o-transition: -o-transform 0.3s 0.3s;
          transition: transform 0.3s 0.3s; }
.cd-nav-trigger span:before {
  /* menu icon top line */
  top: -6px; }
.cd-nav-trigger span:after {
  /* menu icon bottom line */
  top: 6px; }
.cd-nav-trigger.nav-is-visible span {
  /* hide line in the center */
  background: rgba(69, 86, 82, 0); }
.cd-nav-trigger.nav-is-visible span:before, .cd-nav-trigger.nav-is-visible span:after {
  /* keep visible other 2 lines */
  background: #455652; }
.cd-nav-trigger.nav-is-visible span:before {
  -webkit-transform: translateX(4px) translateY(-3px) rotate(45deg);
     -moz-transform: translateX(4px) translateY(-3px) rotate(45deg);
      -ms-transform: translateX(4px) translateY(-3px) rotate(45deg);
       -o-transform: translateX(4px) translateY(-3px) rotate(45deg);
          transform: translateX(4px) translateY(-3px) rotate(45deg); }
.cd-nav-trigger.nav-is-visible span:after {
  -webkit-transform: translateX(4px) translateY(2px) rotate(-45deg);
     -moz-transform: translateX(4px) translateY(2px) rotate(-45deg);
      -ms-transform: translateX(4px) translateY(2px) rotate(-45deg);
       -o-transform: translateX(4px) translateY(2px) rotate(-45deg);
          transform: translateX(4px) translateY(2px) rotate(-45deg); }

.cd-primary-nav {
  right: 0; }

.cd-primary-nav ul {
  right: 20px; }

.cd-primary-nav, .cd-primary-nav ul {
  position: fixed;
  top: 0;
  height: 100%;
  width: 260px;
  background: #455652;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  z-index: 1;
  /* Force Hardware Acceleration in WebKit */
  -webkit-transform: translateZ(0);
     -moz-transform: translateZ(0);
          transform: translateZ(0);
  -webkit-transform: translateX(0);
     -moz-transform: translateX(0);
      -ms-transform: translateX(0);
       -o-transform: translateX(0);
          transform: translateX(0);
  -webkit-transition: -webkit-transform 0.3s;
     -moz-transition: -moz-transform 0.3s;
       -o-transition: -o-transform 0.3s;
          transition: transform 0.3s; }
  .cd-primary-nav a, .cd-primary-nav ul a {
    display: block;
    font-size: 19px;
    font-size: 1.2rem;
    height: 50px;
    line-height: 50px;
    padding: 0 20px;
    color: #fff;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    border-bottom: 1px solid #50645f;
    -webkit-transform: translateZ(0);
       -moz-transform: translateZ(0);
            transform: translateZ(0);
    will-change: transform, opacity;
    -webkit-transition: -webkit-transform 0.3s, opacity 0.3s;
       -moz-transition: -moz-transform 0.3s, opacity 0.3s;
         -o-transition: -o-transform 0.3s, opacity 0.3s;
            transition: transform 0.3s, opacity 0.3s; }
  .cd-primary-nav.is-hidden, .cd-primary-nav ul.is-hidden {
    /* secondary navigations hidden by default */
    -webkit-transform: translateX(100%);
       -moz-transform: translateX(100%);
        -ms-transform: translateX(100%);
         -o-transform: translateX(100%);
            transform: translateX(100%); }
  .cd-primary-nav.moves-out > li > a, .cd-primary-nav ul.moves-out > li > a {
    /* push the navigation items to the left - and lower down opacity - when secondary nav slides in */
    -webkit-transform: translateX(-100%);
       -moz-transform: translateX(-100%);
        -ms-transform: translateX(-100%);
         -o-transform: translateX(-100%);
            transform: translateX(-100%);
    opacity: 0;
    filter: alpha(opacity=0); }

.cd-primary-nav .see-all a {
  /* different style for the See all button on mobile and tablet */
  color: #267e64; }
.cd-primary-nav .cd-nav-gallery .cd-nav-item, .cd-primary-nav .cd-nav-icons .cd-nav-item {
  /* items with picture (or icon) and title */
  height: 80px;
  line-height: 80px; }
  .cd-primary-nav .cd-nav-gallery .cd-nav-item h3, .cd-primary-nav .cd-nav-icons .cd-nav-item h3 {
    overflow: hidden;
    text-overflow: ellipsis; }
.cd-primary-nav .cd-nav-gallery .cd-nav-item img {
  position: absolute;
  display: block;
  height: 40px;
  width: auto;
  left: 20px;
  top: 50%;
  margin-top: -20px; }
.cd-primary-nav .cd-nav-icons .cd-nav-item {
  padding-left: 75px; }
  .cd-primary-nav .cd-nav-icons .cd-nav-item p {
    color: #455652;
    font-size: 20px;
    font-size: 1.3rem;
    /* hide description on small devices */
    display: none; }
  .cd-primary-nav .cd-nav-icons .cd-nav-item:before {
    /* item icon */
    content: '';
    display: block;
    position: absolute;
    left: 20px;
    top: 50%;
    margin-top: -20px;
    width: 40px;
    height: 40px;
    background-repeat: no-repeat;
    background-position: center center;
    -moz-background-size: 40px 40px;
         background-size: 40px 40px; }
  .cd-primary-nav .cd-nav-icons .cd-nav-item.item-1:before {
    background-image: url("/images/line-icon-1.svg"); }
  .cd-primary-nav .cd-nav-icons .cd-nav-item.item-2:before {
    background-image: url("/images/line-icon-2.svg"); }
  .cd-primary-nav .cd-nav-icons .cd-nav-item.item-3:before {
    background-image: url("/images/line-icon-3.svg"); }
  .cd-primary-nav .cd-nav-icons .cd-nav-item.item-4:before {
    background-image: url("/images/line-icon-4.svg"); }
  .cd-primary-nav .cd-nav-icons .cd-nav-item.item-5:before {
    background-image: url("/images/line-icon-5.svg"); }
  .cd-primary-nav .cd-nav-icons .cd-nav-item.item-6:before {
    background-image: url("/images/line-icon-6.svg"); }
  .cd-primary-nav .cd-nav-icons .cd-nav-item.item-7:before {
    background-image: url("/images/line-icon-7.svg"); }
  .cd-primary-nav .cd-nav-icons .cd-nav-item.item-8:before {
    background-image: url("/images/line-icon-8.svg"); }

.has-children > a, .go-back a {
  position: relative; }
  .has-children > a:before, .has-children > a:after, .go-back a:before, .go-back a:after {
    /* arrow icon in CSS - for element with nested unordered lists */
    content: '';
    position: absolute;
    top: 50%;
    margin-top: -1px;
    display: inline-block;
    height: 2px;
    width: 10px;
    background: #5c726d;
    -webkit-backface-visibility: hidden;
       -moz-backface-visibility: hidden;
            backface-visibility: hidden; }
  .has-children > a:before, .go-back a:before {
    -webkit-transform: rotate(45deg);
       -moz-transform: rotate(45deg);
        -ms-transform: rotate(45deg);
         -o-transform: rotate(45deg);
            transform: rotate(45deg); }
  .has-children > a:after, .go-back a:after {
    -webkit-transform: rotate(-45deg);
       -moz-transform: rotate(-45deg);
        -ms-transform: rotate(-45deg);
         -o-transform: rotate(-45deg);
            transform: rotate(-45deg); }

.has-children > a {
  padding-right: 40px; }
  .has-children > a:before, .has-children > a:after {
    /* arrow goes on the right side - children navigation */
    right: 20px;
    -webkit-transform-origin: 9px 50%;
       -moz-transform-origin: 9px 50%;
        -ms-transform-origin: 9px 50%;
         -o-transform-origin: 9px 50%;
            transform-origin: 9px 50%; }

.cd-primary-nav .go-back a {
  padding-left: 40px; }
  .cd-primary-nav .go-back a:before, .cd-primary-nav .go-back a:after {
    /* arrow goes on the left side - go back button */
    left: 20px;
    -webkit-transform-origin: 1px 50%;
       -moz-transform-origin: 1px 50%;
        -ms-transform-origin: 1px 50%;
         -o-transform-origin: 1px 50%;
            transform-origin: 1px 50%; }

.cd-search {
  float: right;
  margin: 20px;
  margin: 1.25rem; }
  .cd-search form {
    position: relative; }
  .cd-search input[type="submit"] {
    background-image: url("/images/search-icon.png");
    background-repeat: no-repeat;
    background-color: transparent;
    display: inline-block;
    text-indent: -99999px;
    height: 22px;
    width: 22px;
    -webkit-appearance: none;
    border: 0;
    position: absolute;
    top: 6px;
    right: 3px;
    -moz-background-size: 75%;
         background-size: 75%; }
  .cd-search input[type="search"] {
    text-indent: 16px;
    text-indent: 1rem;
    appearance: none;
    border: 1px solid #ccc; }
    .cd-search input[type="search"]::-webkit-input-placeholder, .cd-search input[type="search"]::-moz-placeholder, .cd-search input[type="search"]:-ms-input-placeholder {
      color: #cacdcf; }
    .cd-search input[type="search"]:focus {
      outline: none; }
  .cd-search.is-visible {
    opacity: 1;
    filter: alpha(opacity=100);
    visibility: visible;
    -webkit-transition: opacity .3s 0s, visibility 0s 0s;
       -moz-transition: opacity .3s 0s, visibility 0s 0s;
         -o-transition: opacity .3s 0s, visibility 0s 0s;
            transition: opacity .3s 0s, visibility 0s 0s; }
  .nav-is-fixed .cd-search {
    position: fixed; }

.cd-overlay {
  /* shadow layer visible when navigation is active */
  position: fixed;
  z-index: 2;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
  cursor: pointer;
  visibility: hidden;
  opacity: 0;
  filter: alpha(opacity=0);
  -webkit-backface-visibility: hidden;
     -moz-backface-visibility: hidden;
          backface-visibility: hidden;
  -webkit-transition: opacity 0.3s 0s, visibility 0s 0.3s, -webkit-transform 0.3s 0s;
     -moz-transition: opacity 0.3s 0s, visibility 0s 0.3s, -moz-transform 0.3s 0s;
       -o-transition: opacity 0.3s 0s, visibility 0s 0.3s, -o-transform 0.3s 0s;
          transition: opacity 0.3s 0s, visibility 0s 0.3s, transform 0.3s 0s; }
  .cd-overlay.is-visible {
    opacity: 1;
    filter: alpha(opacity=100);
    visibility: visible;
    -webkit-transition: opacity 0.3s 0s, visibility 0s 0s, -webkit-transform 0.3s 0s;
       -moz-transition: opacity 0.3s 0s, visibility 0s 0s, -moz-transform 0.3s 0s;
         -o-transition: opacity 0.3s 0s, visibility 0s 0s, -o-transform 0.3s 0s;
            transition: opacity 0.3s 0s, visibility 0s 0s, transform 0.3s 0s; }

/* --------------------------------
 *
 *support for no js
 *
 *-------------------------------- */
.no-js .cd-primary-nav {
  position: relative;
  height: auto;
  width: 100%;
  overflow: visible;
  visibility: visible;
  z-index: 2; }

.no-js .cd-search {
  position: relative;
  top: 0;
  opacity: 1;
  filter: alpha(opacity=100);
  visibility: visible; }

.nav-footer {
  padding: 30px 20px 20px;
  text-align: left; }
  .nav-footer__heading {
    font-family: News Cycle, sans-serif;
    font-size: 16px;
    font-size: 1rem;
    font-weight: 700;
    margin-bottom: 16px;
    margin-bottom: 1rem; }
    .nav-footer__heading a {
      color: #333; }
      .nav-footer__heading a:hover {
        color: #267e64; }
  .nav-footer__link {
    font-size: 14px; }
  .nav-footer__box {
    padding: 0 10px;
    vertical-align: top; }
  .nav-footer__box-narrow {
    padding: 0 10px;
    vertical-align: top; }
  .nav-footer__button {
    border-width: 1px;
    color: #267e64;
    font-size: 14px;
    font-size: .9rem;
    margin-bottom: 16px;
    margin-bottom: 1rem;
    padding: 8px 16px;
    padding: .5rem 1rem;
    width: 100%; }
  .nav-footer__sub-links {
    font-size: 14px; }
    .nav-footer__sub-links li:nth-child(1) {
      font-family: News Cycle, sans-serif;
      font-size: 16px;
      font-size: 1rem;
      font-weight: 700;
      margin-bottom: 8px;
      margin-bottom: .5rem; }
      .nav-footer__sub-links li:nth-child(1) a {
        color: #333; }
        .nav-footer__sub-links li:nth-child(1) a:hover {
          color: #267e64; }

.banner-tall {
  background-image: url(images/index_hero-2.jpg);
  background-position: center;
  -moz-background-size: cover;
       background-size: cover;
  height: 200px;
  position: relative; }
  .banner-tall__headline {
    bottom: 48px;
    bottom: 3rem;
    color: #fff;
    font-family: serif;
    font-size: 64px;
    font-size: 4rem;
    font-weight: 800;
    left: 32px;
    left: 2rem;
    line-height: 1;
    position: absolute;
    margin: 0 0 16px 16px;
    margin: 0 0 1rem 1rem;
    text-shadow: 2px 2px 2px #333; }
    .banner-tall__headline sup {
      font-size: 28px;
      font-size: 1.75rem; }

.banner-standard {
  background: #267e64;
  color: #fff;
  display: table;
  height: auto; }
  .banner-standard img {
    display: block; }
  .banner-standard__box {
    padding: 16px 32px;
    padding: 1rem 2rem; }
  .banner-standard__heading {
    color: #fff; }
  .banner-standard__media {
    background-color: #eceee6; }

.banner-panorama {
  background-image: url(../images/trees.jpg);
  background-position: center;
  -moz-background-size: cover;
       background-size: cover;
  height: 255px; }

.card-diptic {
  display: table;
  border-top: 1px solid #ccc;
  border-bottom: 1px solid #ccc; }
  .card-diptic__box {
    display: table-cell;
    vertical-align: middle;
    padding: 32px 16px;
    padding: 2rem 1rem; }
  .card-diptic__heading {
    text-align: center; }
  .card-diptic__media {
    margin-bottom: 32px;
    margin-bottom: 2rem; }
  .card-diptic__text {
    text-align: center;
    margin-bottom: 32px;
    margin-bottom: 2rem; }
  .card-diptic ul {
    list-style: none;
    text-align: center; }
    .card-diptic ul li {
      display: inline-block;
      padding: 8px;
      padding: .5rem;
      width: 47%; }
  .card-diptic__link {
    color: #267e64;
    display: inline-block;
    font-family: Playfair Display, serif;
    padding: 0 6px;
    padding: 0 .4rem;
    vertical-align: middle; }
    .card-diptic__link:hover {
      color: #455652; }

.card-bio {
  padding-bottom: 32px;
  padding-bottom: 2rem; }
  .card-bio__media {
    vertical-align: top; }
  .card-bio__box {
    padding-left: 32px;
    padding-left: 2rem;
    padding-top: 0;
    vertical-align: top; }
  .card-bio__heading {
    color: #267e64;
    font-family: Playfair Display, serif;
    font-size: 32px;
    font-size: 2rem;
    font-weight: 400;
    line-height: 1;
    margin-bottom: 16px;
    margin-bottom: 1rem; }
  .card-bio__subtitle {
    color: #7f7e7e;
    margin-bottom: 8px; }
    .card-bio__subtitle h3 {
      display: inline-block; }
    .card-bio__subtitle a {
      color: #267e64;
      margin-left: 10px; }
      .card-bio__subtitle a i {
        border: 1px solid #267e64;
        padding: 2px; }
  .card-bio__text * + * {
    margin-top: 16px;
    margin-top: 1rem; }

.card-article__box {
  -moz-box-shadow: 0 1px 0 #267e64;
       box-shadow: 0 1px 0 #267e64;
  display: none;
  padding-top: 24px;
  padding-bottom: 24px; }
  .card-article__box * + * {
    margin-top: 16px;
    margin-top: 1rem; }
.card-article a:hover {
  text-decoration: none; }
.card-article h2 {
  color: #267e64;
  font-family: Playfair Display, serif;
  font-size: 32px;
  font-size: 2rem;
  font-weight: 400;
  line-height: 1; }
  .card-article h2:hover {
    color: #455652; }
.card-article small {
  color: #666;
  font-size: 12px;
  font-size: .75rem; }

.loader__nav {
  display: table-cell;
  padding-top: 20px;
  padding-top: 1.25rem; }

.card-triptic {
  display: table;
  border-top: 1px solid #ccc;
  border-bottom: 1px solid #ccc; }
  .card-triptic__box {
    padding: 32px;
    padding: 2rem;
    vertical-align: top; }
  .card-triptic__media {
    height: 150px;
    overflow: hidden;
    margin-bottom: 32px;
    margin-bottom: 2rem; }
  .card-triptic__heading-link {
    color: #267e64;
    font-family: Playfair Display, serif;
    font-size: 22px;
    font-size: 1.375rem;
    font-weight: 400;
    line-height: 1;
    color: #267e64;
    display: inline-block;
    text-align: center; }
    .card-triptic__heading-link:hover {
      color: #455652; }
  .card-triptic__text {
    text-align: center; }

.cta-contact {
  background-color: #eceee6;
  display: table;
  width: 100%; }
  .cta-contact__box {
    padding: 32px;
    padding: 2rem; }
  .cta-contact__box:nth-child(2) {
    padding: 32px 0;
    padding: 2rem 0; }
  .cta-contact__text {
    margin: 0;
    padding: 0 56px 0 32px;
    padding: 0 3.5rem 0 2rem; }
  .cta-contact__button {
    display: inline-block;
    margin: 0 32px 0 0;
    margin: 0 2rem 0 0; }

.cta-teaser {
  display: table;
  padding: 16px 32px;
  padding: 1rem 2rem; }
  .cta-teaser video {
    width: 100%;
    height: 100%; }
  .cta-teaser__box {
    padding-right: 32px;
    padding-right: 2rem; }
  .cta-teaser__text {
    margin-bottom: 32px;
    margin-bottom: 2rem; }
  .cta-teaser__media {
    height: 300px;
    overflow: hidden; }

.cta-center {
  padding: 32px;
  padding: 2rem;
  text-align: center; }
  .cta-center__text {
    padding: 0 128px;
    padding: 0 8rem;
    margin-bottom: 32px;
    margin-bottom: 2rem; }

.cta-subscribe {
  background-color: #267e64;
  color: #fff;
  padding-top: 24px;
  padding-bottom: 36px; }
  .cta-subscribe__heading {
    color: #fff;
    text-align: center; }
  .cta-subscribe__box {
    display: table;
    margin: 0 auto;
    width: 75%; }
  .cta-subscribe__input {
    padding: 14px;
    padding: .9rem;
    width: 100%; }
  .cta-subscribe__button {
    border: 1px solid #fff;
    color: #fff;
    font-size: 24px;
    font-size: 1.5rem;
    margin-left: 16px;
    margin-left: 1rem;
    width: 100%;
    -webkit-transition: all .2s ease;
       -moz-transition: all .2s ease;
         -o-transition: all .2s ease;
            transition: all .2s ease; }
    .cta-subscribe__button:hover {
      /*These will transition on hover */
      background-color: #fff;
      color: #267e64; }
  .cta-subscribe__message {
    display: none;
    padding-top: 40px;
    padding-top: 2.5rem; }
  .cta-subscribe__error {
    display: none;
    padding-top: 16px;
    padding-top: 1rem; }
    .cta-subscribe__error-msg {
      text-align: center; }

.cta-sidebar {
  padding: 16px 0 0 80px;
  padding: 1rem 0 0 5rem;
  vertical-align: top; }
  .cta-sidebar__heading {
    font-size: 20px;
    font-size: 1.25rem;
    margin-top: 12px;
    margin-bottom: 12px; }
  .cta-sidebar__button {
    margin-top: 16px;
    margin-top: 1rem; }

.cta-sidebar__button + .cta-sidebar__heading, .cta-sidebar__text + .cta-sidebar__heading {
  margin-top: 32px;
  margin-top: 2rem; }

.cta-social {
  padding-left: 16px;
  padding-left: 1rem; }
  .cta-social .icon {
    fill: #267e64; }
    .cta-social .icon:hover {
      fill: #ccc; }
  .cta-social a:hover {
    text-decoration: none; }

footer {
  padding-bottom: 80px;
  padding-bottom: 5rem; }

.footer-copyright {
  border-top: 1px solid #e5e6e7;
  display: table;
  padding: 32px;
  padding: 2rem;
  width: 100%; }
  .footer-copyright__logo-box {
    width: 450px; }
  .footer-copyright__box {
    text-align: right; }
    .footer-copyright__box small {
      display: block;
      font-size: 14px;
      padding-right: 8px;
      padding-right: .5rem; }
    .footer-copyright__box .nav-minor li a {
      font-size: 14px; }

.footer-disclaimer {
  text-align: center;
  width: 100%; }
  .footer-disclaimer__box {
    border: 1px solid #455652;
    display: inline-block;
    text-align: center;
    padding: 20px;
    margin: 50px auto 10px; }
  .footer-disclaimer ul {
    display: table;
    margin: 0 auto; }
    .footer-disclaimer ul li {
      display: table-cell;
      border: 1px solid #CCCCCC;
      border-right: none;
      border-left-style: dashed;
      margin: 0 10px;
      padding: 8px;
      padding: .5rem; }
      .footer-disclaimer ul li:last-child {
        border-right: 1px #CCC solid; }
      .footer-disclaimer ul li:first-child {
        border-left-style: solid; }
  .footer-disclaimer h6, .footer-disclaimer p, .footer-disclaimer ul {
    font-size: 14px;
    margin-bottom: 16px;
    margin-bottom: 1rem; }

@-webkit-keyframes fadeIn {
  from {
    opacity: 0;
    filter: alpha(opacity=0); }

  to {
    opacity: 1;
    filter: alpha(opacity=100); } }

@-moz-keyframes fadeIn {
  from {
    opacity: 0;
    filter: alpha(opacity=0); }

  to {
    opacity: 1;
    filter: alpha(opacity=100); } }

@-o-keyframes fadeIn {
  from {
    opacity: 0;
    filter: alpha(opacity=0); }

  to {
    opacity: 1;
    filter: alpha(opacity=100); } }

@keyframes fadeIn {
  from {
    opacity: 0;
    filter: alpha(opacity=0); }

  to {
    opacity: 1;
    filter: alpha(opacity=100); } }

.header__logo-box {
  background-color: #fff;
  border-left: 1px solid #ccc;
  border-right: 1px solid #ccc;
  margin: 0 auto;
  max-width: 1200px; }

.no-cssanimations .header__logo-box {
  padding-top: 0; }

.header__logo {
  background: #fff; }

.logo {
  display: block;
  padding: 0px 0 0px 32px;
  padding: 0rem 0 0rem 2rem;
  width: 600px; }

.no-cssanimations .logo {
  height: 68px;
  padding: 0 16px;
  padding: 0 1rem; }

svg path, svg polygon {
  fill: #267e64; }
svg:hover path, svg:hover polygon {
  opacity: .7;
  filter: alpha(opacity=70);
  -webkit-transition: fill 0.2s ease;
     -moz-transition: fill 0.2s ease;
       -o-transition: fill 0.2s ease;
          transition: fill 0.2s ease;
  fill-opacity: 0.7; }

.logo__stretched {
  display: block; }

.logo__stacked {
  display: none; }

.no-cssanimations .logo__globe path {
  fill: #267e64;
  opacity: 1;
  filter: alpha(opacity=100); }

.main-standard, .main-news, .main-post {
  display: table;
  padding: 16px 32px;
  padding: 1rem 2rem; }

.main-standard {
  padding-bottom: 80px;
  padding-bottom: 5rem; }
  .main-standard__content.col-7-12 {
    padding-top: 24px;
    padding-top: 1.5rem;
    vertical-align: top; }
  .main-standard__text * + * {
    margin-top: 16px;
    margin-top: 1rem; }
  .main-standard__text h2 {
    color: #267e64;
    font-family: Playfair Display, serif;
    font-size: 32px;
    font-size: 2rem;
    font-weight: 400;
    line-height: 1;
    padding-top: 24px;
    padding-bottom: 0px; }
  .main-standard__text ul {
    padding-left: 32px;
    padding-left: 2rem;
    list-style: disc; }
    .main-standard__text ul li {
      margin-top: 8px;
      margin-top: 0.5rem; }
  .main-standard__text ol {
    padding-left: 32px;
    padding-left: 2rem; }
  .main-standard__text img {
    height: auto;
    width: 100%; }
    .main-standard__text img.auto {
      width: auto; }

.main-bios {
  display: table;
  padding: 32px;
  padding: 2rem; }

.city-column {
  width: 135px; }

.address-column {
  width: 335px; }

.location-phone {
  color: #455652; }
  .location-phone:hover {
    color: #267e64; }
.main-post__text * + * {
  margin-top: 16px;
  margin-top: 1rem; }
.main-post__text h2 {
  color: #267e64;
  font-family: Playfair Display, serif;
  font-size: 32px;
  font-size: 2rem;
  font-weight: 400;
  line-height: 1; }
.main-post__text h3 {
  color: #455652;
  font-family: Playfair Display, serif;
  font-size: 20px;
  font-size: 1.25rem;
  font-weight: 700;
  line-height: 1;
  text-transform: uppercase;
  margin-top: 36px;
  margin-bottom: 0px; }
.main-post__text figcaption {
  color: #ccc;
  font-size: 12px;
  font-size: .75rem;
  margin-top: 0; }
.main-post__text blockquote {
  color: #267e64;
  font-family: Playfair Display, serif;
  font-size: 24px;
  font-size: 1.5rem;
  font-style: italic;
  font-weight: 700;
  margin-top: 36px;
  margin-bottom: 36px; }

.breadcrumb {
  padding-bottom: 24px;
  padding-bottom: 1.5rem;
  font-size: 14px; }
  .breadcrumb a {
    color: #267e64; }
    .breadcrumb a:hover {
      color: #455652; }
  .breadcrumb span {
    color: #7f7e7e; }

.form-standard {
  margin-top: 32px;
  margin-top: 2rem; }
  .form-standard input, .form-standard input[type="email"], .form-standard input[type="number"], .form-standard input[type="password"], .form-standard input[type="search"], .form-standard input[type="tel"], .form-standard input[type="text"], .form-standard input[type="url"], .form-standard input[type="color"], .form-standard input[type="date"], .form-standard input[type="name"], .form-standard input[type="datetime"], .form-standard input[type="datetime-local"], .form-standard input[type="month"], .form-standard input[type="time"], .form-standard input[type="week"], .form-standard textarea {
    color: #333;
    border: 1px solid #ccc;
    border-box-sizing: content-box;
    -moz-border-radius: 0;
         border-radius: 0;
    border-radius-font-size: 1rem;
    padding: 16px;
    padding: 1rem;
    display: block;
    width: 100%; }
  .form-standard label {
    display: block; }
  .form-standard input[type="button"], .form-standard input[type="reset"], .form-standard input[type="submit"] {
    display: block; }
  .form-standard__checkbox {
    display: inline-block;
    float: left !important;
    width: auto !important; }
  .form-standard__checkbox + label {
    display: inline-block;
    float: left !important;
    margin: 10px 10px 20px 10px !important; }
  .form-standard .selectbox {
    background: #fff;
    -moz-border-radius: 0;
         border-radius: 0;
    cursor: pointer;
    position: relative;
    height: 48px; }
    .form-standard .selectbox:after {
      color: #ccc;
      content: '▾';
      position: absolute;
      top: 16px;
      top: 1rem;
      right: 8px;
      right: .5rem;
      width: 16px;
      width: 1rem;
      height: 16px;
      height: 1rem; }
  .form-standard select {
    background: #fff;
    -moz-box-shadow: none;
         box-shadow: none;
    -moz-border-radius: 0;
         border-radius: 0;
    border: 1px solid #ccc;
    color: #7f7e7e;
    cursor: pointer;
    display: block;
    font-size: 16px;
    font-size: 1rem;
    height: 60px;
    position: relative;
    padding-left: 16px;
    padding-left: 1rem;
    width: 100%;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none; }

.contact-us__button {
  background-color: #eceee6;
  max-width: 183px;
  clear: both; }

.no-cssgradients .selectbox:after {
  z-index: -3; }


@media (max-width: 480px){
  sup{
    top: -.25em; }
  .nav-minor li:last-child a{
    margin-right: 0; }
  .nav-minor__link{
    font-size: .8rem; }
  .cd-search{
    float: none;
    margin: 1rem auto 0;
    width: 100%; }
  .banner-tall{
    background-position: left;
    height: 265px; } }


@media (max-width: 768px){
  [class*='col-']{
    display: inline-block;
    text-align: center; }
  .col-2-12{
    width: 100%; }
  .col-3-12{
    width: 100%; }
  .col-4-12{
    width: 100%; }
  .col-5-12{
    width: 100%; }
  .col-6-12{
    width: 100%; }
  .col-7-12{
    width: 100%; }
  .col-8-12{
    width: 100%; }
  .col-9-12{
    width: 100%; }
  .col-10-12{
    width: 100%; }
  .col-11-12{
    width: 100%; }
  .nav-minor__container{
    text-align: center; }
  .cd-search input[type="search"]{
    width: 100%; }
  .nav-footer{
    display: none; }
  .card-diptic{
    -webkit-flex-flow: column;
        -ms-flex-flow: column;
            flex-flow: column; }
  .card-bio{
    border-bottom: 1px solid #e5e6e7;
    margin-bottom: 2rem; }
  .card-bio__media{
    margin-bottom: 1rem;
    text-align: center; }
  .card-bio__media img{
    display: inline-block;
    width: 33%; }
  .card-bio__box{
    padding: 0; }
  .card-bio__text{
    text-align: left; }
  .cta-contact__text{
    padding: 0; }
  .cta-contact__button{
    margin: 0; }
  .cta-teaser{
    -webkit-flex-flow: column;
        -ms-flex-flow: column;
            flex-flow: column; }
  .cta-teaser__box{
    padding: 0; }
  .cta-teaser__media{
    height: auto;
    margin-top: 2rem; }
  .cta-center__text{
    padding: 0; }
  .cta-subscribe__button{
    margin: 1rem 0 0 0; }
  .cta-sidebar{
    padding: 3rem 2rem; }
  footer{
    padding: 0; }
  .footer-copyright{
    padding: 2rem 0 0 0;
    display: block; }
  .footer-copyright__logo-box{
    display: inline-block;
    width: auto; }
  .footer-copyright__logo-box .logo__stacked{
    display: inline-block;
    width: 250px; }
  .main-standard__content{
    text-align: left; }
  .main-post__text{
    text-align: left; } }


@media (max-width: 700px){
  tr{
    margin-top: 0 !important; }
  tr:first-child{
    border-top: 1px solid #e5e6e7; }
  td{
    margin-top: 0 !important;
    position: relative;
    padding-left: 40%; }
  td:before{
    position: absolute;
    top: 6px;
    left: 6px;
    width: 40%;
    padding-right: 10px;
    white-space: nowrap;
    font-weight: 600; }
  td:nth-of-type(1):before{
    content: "City: "; }
  td:nth-of-type(2):before{
    content: "Address: "; }
  td:nth-of-type(3):before{
    content: "Phone: "; }
  thead tr{
    position: absolute;
    top: -9999px;
    left: -9999px; }
  table, thead, tbody, th, td, tr{
    display: block; } }


@media (max-width: 1022px){
  body.nav-on-left.overflow-hidden{
    overflow: hidden; }
  .cd-main-content.nav-is-visible{
    -webkit-transform: translateX(-260px);
       -moz-transform: translateX(-260px);
        -ms-transform: translateX(-260px);
         -o-transform: translateX(-260px);
            transform: translateX(-260px); }
  .nav-on-left .cd-main-content.nav-is-visible{
    -webkit-transform: translateX(260px);
       -moz-transform: translateX(260px);
        -ms-transform: translateX(260px);
         -o-transform: translateX(260px);
            transform: translateX(260px); }
  .cd-main-header.nav-is-visible{
    -webkit-transform: translateX(0);
       -moz-transform: translateX(0);
        -ms-transform: translateX(0);
         -o-transform: translateX(0);
            transform: translateX(0); }
  .nav-on-left .cd-main-header.nav-is-visible{
    -webkit-transform: translateX(260px);
       -moz-transform: translateX(260px);
        -ms-transform: translateX(260px);
         -o-transform: translateX(260px);
            transform: translateX(260px); }
  .nav-on-left .cd-logo{
    left: auto;
    right: 5%; }
  .nav-on-left .cd-header-buttons{
    right: auto;
    left: 5%; }
  .nav-on-left .cd-header-buttons li{
    float: right; }
  .nav-on-left .cd-primary-nav, .nav-on-left .cd-primary-nav ul{
    right: auto;
    left: 0; }
  .cd-primary-nav .cd-nav-gallery .cd-nav-item img{
    display: none; }
  .cd-primary-nav{

    /* by default .cd-primary-nav is hidden - trick for iOS devices where you can see the navigation if you pull down */
    visibility: hidden;
    -webkit-transition: visibility 0s 0.3s;
       -moz-transition: visibility 0s 0.3s;
         -o-transition: visibility 0s 0.3s;
            transition: visibility 0s 0.3s; }
  .cd-primary-nav.nav-is-visible{
    visibility: visible;
    -webkit-transition: visibility 0s 0s;
       -moz-transition: visibility 0s 0s;
         -o-transition: visibility 0s 0s;
            transition: visibility 0s 0s; }
  .cd-overlay.is-visible{
    -webkit-transform: translateX(0);
       -moz-transform: translateX(0);
        -ms-transform: translateX(0);
         -o-transform: translateX(0);
            transform: translateX(0); }
  .nav-on-left .cd-overlay.is-visible{
    -webkit-transform: translateX(260px);
       -moz-transform: translateX(260px);
        -ms-transform: translateX(260px);
         -o-transform: translateX(260px);
            transform: translateX(260px); }
  .cd-overlay.is-visible.search-is-visible, .nav-on-left .cd-overlay.is-visible.search-is-visible{
    -webkit-transform: translateX(0);
       -moz-transform: translateX(0);
        -ms-transform: translateX(0);
         -o-transform: translateX(0);
            transform: translateX(0); } }


@media (min-width: 1024px){
  .cd-main-header{
    height: 80px; }
  .cd-main-header:after{
    content: "";
    display: table;
    clear: both; }
  .cd-logo{
    top: 26px;
    left: 4em; }
  .cd-header-buttons{
    top: 1rem;
    right: 1rem; }
  .cd-nav-trigger{
    display: none; }
  .cd-primary-nav{
    position: static;
    padding: 0 50px 0 0;
    margin-left: 20px;
    height: auto;
    width: 100%;
    overflow: visible;
    background: transparent; }
  .cd-primary-nav:after{
    content: "";
    display: table;
    clear: both; }
  .cd-primary-nav.moves-out > li > a{

    /* reset mobile style */
    -webkit-transform: translateX(0);
       -moz-transform: translateX(0);
        -ms-transform: translateX(0);
         -o-transform: translateX(0);
            transform: translateX(0);
    opacity: 1;
    filter: alpha(opacity=100); }
  .cd-primary-nav ul{
    position: static;
    height: auto;
    width: auto;
    background: transparent;
    overflow: visible;
    text-align: left;
    z-index: 3; }
  .cd-primary-nav ul.is-hidden{

    /* reset mobile style */
    -webkit-transform: translateX(0);
       -moz-transform: translateX(0);
        -ms-transform: translateX(0);
         -o-transform: translateX(0);
            transform: translateX(0); }
  .cd-primary-nav ul.moves-out > li > a{

    /* reset mobile style */
    -webkit-transform: translateX(0);
       -moz-transform: translateX(0);
        -ms-transform: translateX(0);
         -o-transform: translateX(0);
            transform: translateX(0);
    opacity: 1;
    filter: alpha(opacity=100); }
  .cd-primary-nav > li{
    display: inline-block;
    margin-left: .5rem; }
  .cd-primary-nav > li > a{

    /* main navigation buttons style */
    position: relative;
    display: inline-block;
    height: 80px;
    line-height: 80px;
    padding: 0;
    color: #455652;
    overflow: visible;
    border-bottom: none;
    -webkit-transition: color 0.3s, box-shadow 0.3s;
       -moz-transition: color 0.3s, -moz-box-shadow 0.3s;
         -o-transition: color 0.3s, box-shadow 0.3s;
            transition: color 0.3s, box-shadow 0.3s; }
  .cd-primary-nav > li > a:hover{
    color: #267e64;
    text-decoration: none; }
  .cd-primary-nav > li > a.selected{
    color: #267e64;
    -moz-box-shadow: inset 0 -2px 0 #267e64;
         box-shadow: inset 0 -2px 0 #267e64; }
  .cd-primary-nav .go-back, .cd-primary-nav .see-all{
    display: none; }
  .cd-primary-nav .cd-secondary-nav, .cd-primary-nav .cd-nav-gallery, .cd-primary-nav .cd-nav-icons{

    /* dropdown menu style */
    position: absolute;
    top: 80px;
    width: 100%;
    background: #fff;
    padding: 2rem;
    -moz-box-shadow: inset 0 1px 0 #e5e6e7, 0 3px 6px rgba(0, 0, 0, 0.05);
         box-shadow: inset 0 1px 0 #e5e6e7, 0 3px 6px rgba(0, 0, 0, 0.05);
    -webkit-transform: translateX(0);
       -moz-transform: translateX(0);
        -ms-transform: translateX(0);
         -o-transform: translateX(0);
            transform: translateX(0);
    -webkit-transition: opacity .3s 0s, visibility 0s 0s;
       -moz-transition: opacity .3s 0s, visibility 0s 0s;
         -o-transition: opacity .3s 0s, visibility 0s 0s;
            transition: opacity .3s 0s, visibility 0s 0s; }
  .cd-primary-nav .cd-secondary-nav:after, .cd-primary-nav .cd-nav-gallery:after, .cd-primary-nav .cd-nav-icons:after{
    content: "";
    display: table;
    clear: both; }
  .cd-primary-nav .cd-secondary-nav.is-hidden, .cd-primary-nav .cd-nav-gallery.is-hidden, .cd-primary-nav .cd-nav-icons.is-hidden{
    opacity: 0;
    filter: alpha(opacity=0);
    visibility: hidden;
    -webkit-transition: opacity .3s 0s, visibility 0s .3s;
       -moz-transition: opacity .3s 0s, visibility 0s .3s;
         -o-transition: opacity .3s 0s, visibility 0s .3s;
            transition: opacity .3s 0s, visibility 0s .3s; }
  .cd-primary-nav .cd-secondary-nav > .see-all, .cd-primary-nav .cd-nav-gallery > .see-all, .cd-primary-nav .cd-nav-icons > .see-all{

    /* this is the BIG See all button at the bottom of the dropdown menu */
    display: block;
    position: absolute;
    left: 0;
    bottom: 0;
    height: 80px;
    width: 100%;
    overflow: hidden;

    /* reset some inherited style */
    margin: 0;
    padding: 0; }
  .cd-primary-nav .cd-secondary-nav > .see-all a, .cd-primary-nav .cd-nav-gallery > .see-all a, .cd-primary-nav .cd-nav-icons > .see-all a{
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    font-size: 2.2rem;
    font-weight: bold;
    text-align: center;
    line-height: 80px;
    border-top: 1px solid #e5e6e7;

    /* reset some inherited style */
    border-bottom: none;
    margin: 0;
    padding: 0;
    -webkit-transition: color 0.2s, background 0.2s, border 0.2s;
       -moz-transition: color 0.2s, background 0.2s, border 0.2s;
         -o-transition: color 0.2s, background 0.2s, border 0.2s;
            transition: color 0.2s, background 0.2s, border 0.2s; }
  .cd-primary-nav .cd-secondary-nav > .see-all a:hover, .cd-primary-nav .cd-nav-gallery > .see-all a:hover, .cd-primary-nav .cd-nav-icons > .see-all a:hover{
    background: #455652;
    border-color: #455652;
    color: #fff; }
  .cd-primary-nav .cd-secondary-nav > li{

    /* change the height according to your needs - you can even set height: auto */
    height: 340px;

    /* here you set the number of columns - use width percentage */
    width: 23%;
    float: left;
    margin-right: 2.66%;
    border-right: 1px solid #e5e6e7;
    overflow: hidden;
    overflow-x: hidden;
    overflow-y: auto;
    -webkit-overflow-scrolling: touch; }
  .cd-primary-nav .cd-secondary-nav > li:nth-child(4n+2){

    /* +2 because we have 2 list items with display:none */
    margin-right: 0;
    border-right: none; }
  .cd-primary-nav .cd-secondary-nav > li > a{

    /* secondary nav title */
    color: #267e64;
    font-weight: bold;
    font-size: 1.6rem;
    margin-bottom: .6em; }
  .cd-primary-nav .cd-secondary-nav a{
    height: 30px;
    line-height: 30px;
    padding: 0 18% 0 0;
    color: #455652;
    border-bottom: none;
    font-size: 1.4rem; }
  .cd-primary-nav .cd-secondary-nav a:hover{
    color: #267e64; }
  .cd-primary-nav .cd-secondary-nav ul{

    /* Force Hardware Acceleration in WebKit */
    -webkit-transform: translateZ(0);
       -moz-transform: translateZ(0);
            transform: translateZ(0); }
  .cd-primary-nav .cd-secondary-nav ul ul{

    /* tertiary navigation */
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%; }
  .cd-primary-nav .cd-secondary-nav ul ul.is-hidden{
    -webkit-transform: translateX(100%);
       -moz-transform: translateX(100%);
        -ms-transform: translateX(100%);
         -o-transform: translateX(100%);
            transform: translateX(100%); }
  .cd-primary-nav .cd-secondary-nav ul ul .go-back{
    display: block; }
  .cd-primary-nav .cd-secondary-nav ul ul .go-back a{
    color: transparent; }
  .cd-primary-nav .cd-secondary-nav ul ul .see-all{
    display: block; }
  .cd-primary-nav .cd-secondary-nav .moves-out > li > a{

    /* push the navigation items to the left - and lower down opacity - when tertiary nav slides in */
    -webkit-transform: translateX(-100%);
       -moz-transform: translateX(-100%);
        -ms-transform: translateX(-100%);
         -o-transform: translateX(-100%);
            transform: translateX(-100%); }
  .cd-primary-nav .cd-nav-gallery{
    -moz-box-shadow: 0 5px 5px rgba(100, 100, 100, 0.3);
         box-shadow: 0 5px 5px rgba(100, 100, 100, 0.3); }
  .cd-primary-nav .cd-nav-gallery li{

    /* set here number of columns - use width percentage */
    float: left;
    width: 25%;
    padding: 1rem; }
  .cd-primary-nav .cd-nav-gallery li:nth-child(4n+2){

    /* +2 because we have two additional list items with display:none */ }
  .cd-primary-nav .cd-nav-gallery .cd-nav-item{
    border-bottom: none;
    padding: 0;
    height: auto;
    line-height: 1.2; }
  .cd-primary-nav .cd-nav-gallery .cd-nav-item img{
    position: static;
    margin-top: 0;
    height: auto;
    width: 100%;
    margin-bottom: .6rem; }
  .cd-primary-nav .cd-nav-gallery .cd-nav-item h3{
    color: #267e64;
    font-size: .9rem;
    padding: 0 .4rem;
    font-weight: normal; }
  .cd-primary-nav .cd-nav-icons li{

    /* set here number of columns - use width percentage */
    width: 32%;
    float: left;
    margin: 0 2% 20px 0; }
  .cd-primary-nav .cd-nav-icons li:nth-child(3n+2){

    /* +2 because we have two additional list items with display:none */
    margin-right: 0; }
  .cd-primary-nav .cd-nav-icons .cd-nav-item{
    border-bottom: none;
    height: 80px;
    line-height: 1.2;
    padding: 24px 0 0 85px; }
  .cd-primary-nav .cd-nav-icons .cd-nav-item:hover{
    background: #fafafb; }
  .cd-primary-nav .cd-nav-icons .cd-nav-item h3{
    color: #267e64;
    font-weight: bold; }
  .cd-primary-nav .cd-nav-icons .cd-nav-item p{
    display: block; }
  .cd-primary-nav .cd-nav-icons .cd-nav-item:before{
    left: 25px; }
  .has-children > a:before, .has-children > a:after, .go-back a:before, .go-back a:after{
    background: #cacdcf; }
  .has-children > a:hover:before, .has-children > a:hover:after, .go-back a:hover:before, .go-back a:hover:after{
    background: #267e64; }
  .has-children > a:before, .has-children > a:after{
    right: 15%; }
  .cd-primary-nav > .has-children > a{

    /* main navigation arrows on larger devices */
    padding-right: 30px !important; }
  .cd-primary-nav > .has-children > a:before, .cd-primary-nav > .has-children > a:after{
    width: 9px;
    -webkit-transform-origin: 50% 50%;
       -moz-transform-origin: 50% 50%;
        -ms-transform-origin: 50% 50%;
         -o-transform-origin: 50% 50%;
            transform-origin: 50% 50%;
    background: #cacdcf;
    -webkit-backface-visibility: hidden;
       -moz-backface-visibility: hidden;
            backface-visibility: hidden;
    -webkit-transition: width 0.3s, -webkit-transform 0.3s;
       -moz-transition: width 0.3s, -moz-transform 0.3s;
         -o-transition: width 0.3s, -o-transform 0.3s;
            transition: width 0.3s, transform 0.3s; }
  .cd-primary-nav > .has-children > a:before{
    right: 12px; }
  .cd-primary-nav > .has-children > a:after{
    right: 7px; }
  .cd-primary-nav > .has-children > a.selected:before, .cd-primary-nav > .has-children > a.selected:after{
    width: 14px; }
  .cd-primary-nav > .has-children > a.selected:before{
    -webkit-transform: translateX(5px) rotate(-45deg);
       -moz-transform: translateX(5px) rotate(-45deg);
        -ms-transform: translateX(5px) rotate(-45deg);
         -o-transform: translateX(5px) rotate(-45deg);
            transform: translateX(5px) rotate(-45deg); }
  .cd-primary-nav > .has-children > a.selected:after{
    -webkit-transform: rotate(45deg);
       -moz-transform: rotate(45deg);
        -ms-transform: rotate(45deg);
         -o-transform: rotate(45deg);
            transform: rotate(45deg); }
  .cd-secondary-nav > .has-children > a:before, .cd-secondary-nav > .has-children > a:after{

    /* remove arrows on secondary nav titles */
    display: none; }
  .cd-primary-nav .go-back a{
    padding-left: 20px; }
  .cd-primary-nav .go-back a:before, .cd-primary-nav .go-back a:after{
    left: 1px; }
  .no-js .cd-primary-nav{
    position: absolute;
    z-index: 3;
    display: inline-block;
    width: auto;
    top: 0;
    right: 150px;
    padding: 0; }
  .no-js .nav-is-fixed .cd-primary-nav{
    position: fixed; } }


@media (min-width: 769px){
  .banner-tall{
    height: 465px; }
  .card-diptic__box{
    padding: 2rem 1rem 2rem 2rem; }
  .card-diptic__box:nth-child(2){
    border-left: 1px solid #ccc;
    padding: 2rem 2rem 2rem 1rem; }
  .card-triptic__box:nth-child(2){
    border-left: 1px solid #ccc; }
  .card-triptic__box:nth-child(3){
    border-left: 1px solid #ccc; } }


@media (max-width: 767px){
  .banner-tall__headline{
    position: static;
    font-size: 2rem;
    padding: 2rem; } }


@media (min-width: 768px) and (min-width: 1023px){
  .footer-copyright__box{
    text-align: right; }
  .footer-copyright__box small{
    font-size: 12px;
    display: inline-block; }
  .footer-copyright__box small:before{
    content: '|'; }
  .footer-copyright__box small:nth-child(1):before{
    content: ''; }
  .footer-copyright__box .nav-minor li a{
    font-size: 12px; }
  .footer-disclaimer h6, .footer-disclaimer p, .footer-disclaimer ul{
    font-size: 12px; } }


@media (min-width: 1023px){
  .footer-disclaimer__box{
    padding: 20px 100px; } }


@media (max-width: 899px){
  .logo{
    width: 400px; }
  .logo__stretched{
    display: none; }
  .logo__stacked{
    display: block; } }


@media (max-width: 499px){
  .logo{
    padding: 1rem;
    width: 300px; } }


/*# sourceMappingURL=data:application/json;base64, */
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9zb3VyY2UvdmVuZG9yL19ub3JtYWxpemUuc2NzcyIsInN0eWxlLmNzcyIsIi9zb3VyY2UvYmFzZS9fdHlwb2dyYXBoeS5zYXNzIiwiL3NvdXJjZS9iYXNlL19jb2xvcnMuc2FzcyIsIi9zb3VyY2UvYmFzZS9fY2xlYXItZml4LnNhc3MiLCIvc291cmNlL2Jhc2UvX2xheW91dC5zYXNzIiwiL3NvdXJjZS9iYXNlL19pbmNsdWRlLW1lZGlhLnNhc3MiLCIvc291cmNlL2Jhc2UvX2dsb2JhbC5zYXNzIiwiL3NvdXJjZS9iYXNlL190YWJsZXMuc2FzcyIsIi9zb3VyY2UvbW9kdWxlcy9uYXYvX25hdi1taW5vci5zYXNzIiwiL3NvdXJjZS9tb2R1bGVzL25hdi9fbmF2LW1lZ2Euc2FzcyIsIi9zb3VyY2UvbW9kdWxlcy9uYXYvX25hdi1mb290ZXIuc2FzcyIsIi9zb3VyY2UvbW9kdWxlcy9iYW5uZXIvX19iYW5uZXIuc2FzcyIsIi9zb3VyY2UvbW9kdWxlcy9jYXJkcy9fX2NhcmRzLnNhc3MiLCIvc291cmNlL21vZHVsZXMvY3RhL19fY3RhLnNhc3MiLCIvc291cmNlL21vZHVsZXMvZm9vdGVyL19mb290ZXIuc2FzcyIsIi9zb3VyY2UvbW9kdWxlcy9oZWFkZXIvX2hlYWRlci5zYXNzIiwiL3NvdXJjZS9tb2R1bGVzL21haW4vX21haW4uc2FzcyIsIi9zb3VyY2UvbW9kdWxlcy9mb3JtL19mb3JtLnNhc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNEM2QyxrQkFBc0M7QUMzQ25GO0VBQ0UsZ0JBQWUsRUFBRTs7QUFFbkI7RUFDRSx1QkFBc0IsRUFBRTs7QUFFMUI7RURvRUksZUFBUTtFQ2xFVixXQUFVLEVBQUU7O0FBRWQ7RUFDRSxlQUFjLEVBQUU7O0FBRWxCO0VEeUZJLGdDQUFzQjtFQ3ZGeEIsNEJBQTJCLEVBQUU7O0FBRS9CO0VBQ0UsV0FBVSxFQUFFOztBQUVkO0VEMkhDLHlCQUFTLEVBQUE7RUN6SFI7SUFDRSxZQUFXLEVBQUU7O0FBRWpCOzs7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QUEsRUFBQSxFQUFBOzs7QWQyOUNqQjtFQUNFO0lLMS9DRixjQUFBLEVBQUE7RUwrZ0RFO0lBQ0UsZUFBYyxFQUFFO0VBS2xCO0lBQ0UsZ0JBQWUsRUFBRSxFS3RoRHJCOzs7QUw0L0NBO0VBQ0U7SWUzZ0RBLGVBQU87SWY2Z0RMLGNBQWEsRUFBRSxFQUFFOzs7QUF5THZCLGtrOEdBQWlrOEciLCJmaWxlIjoiPG5vLW91dHB1dD4iLCJzb3VyY2VzQ29udGVudCI6WyIvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gTm9ybWFsaXplLnNjc3MgYmFzZWQgb24gTmljb2xhcyBHYWxsYWdoZXIgYW5kIEpvbmF0aGFuIE5lYWwnc1xuLy8gbm9ybWFsaXplLmNzcyB2Mi4xLjMgfCBNSVQgTGljZW5zZSB8IGdpdC5pby9ub3JtYWxpemVcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBOb3JtYWxpemUuc2NzcyBzZXR0aW5nc1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuXG4vLyBTZXQgdG8gdHJ1ZSBpZiB5b3Ugd2FudCB0byBhZGQgc3VwcG9ydCBmb3IgSUU2IGFuZCBJRTdcbi8vIE5vdGljZTogc2V0dGluZyB0byB0cnVlIG1pZ2h0IHJlbmRlciBzb21lIGVsZW1lbnRzXG4vLyBzbGlnaHRseSBkaWZmZXJlbnRseSB0aGFuIHdoZW4gc2V0IHRvIGZhbHNlXG4kbGVnYWN5X3N1cHBvcnRfZm9yX2llOiBmYWxzZSAhZGVmYXVsdDsgLy8gVXNlZCBhbHNvIGluIENvbXBhc3NcblxuXG4vLyBTZXQgdGhlIGRlZmF1bHQgZm9udCBmYW1pbHkgaGVyZSBzbyB5b3UgZG9uJ3QgaGF2ZSB0byBvdmVycmlkZSBpdCBsYXRlclxuJG5vcm1hbGl6ZWRfZm9udF9mYW1pbHk6IHNhbnMtc2VyaWYgIWRlZmF1bHQ7XG5cbiRub3JtYWxpemVfaGVhZGluZ3M6IHRydWUgIWRlZmF1bHQ7XG5cbiRoMV9mb250X3NpemU6IDJlbSAhZGVmYXVsdDtcbiRoMl9mb250X3NpemU6IDEuNWVtICFkZWZhdWx0O1xuJGgzX2ZvbnRfc2l6ZTogMS4xN2VtICFkZWZhdWx0O1xuJGg0X2ZvbnRfc2l6ZTogMWVtICFkZWZhdWx0O1xuJGg1X2ZvbnRfc2l6ZTogMC44M2VtICFkZWZhdWx0O1xuJGg2X2ZvbnRfc2l6ZTogMC43NWVtICFkZWZhdWx0O1xuXG4kaDFfbWFyZ2luOiAwLjY3ZW0gMCAhZGVmYXVsdDtcbiRoMl9tYXJnaW46IDAuODNlbSAwICFkZWZhdWx0O1xuJGgzX21hcmdpbjogMWVtIDAgIWRlZmF1bHQ7XG4kaDRfbWFyZ2luOiAxLjMzZW0gMCAhZGVmYXVsdDtcbiRoNV9tYXJnaW46IDEuNjdlbSAwICFkZWZhdWx0O1xuJGg2X21hcmdpbjogMi4zM2VtIDAgIWRlZmF1bHQ7XG5cbiRiYWNrZ3JvdW5kOiAjZmZmICFkZWZhdWx0O1xuJGNvbG9yOiAjMDAwICFkZWZhdWx0O1xuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gSFRNTDUgZGlzcGxheSBkZWZpbml0aW9uc1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gQ29ycmVjdHMgYmxvY2sgZGlzcGxheSBub3QgZGVmaW5lZCBpbiBJRTYvNy84LzkgJiBGRjNcblxuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5oZ3JvdXAsXG5uYXYsXG5zZWN0aW9uLFxuc3VtbWFyeSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8vIENvcnJlY3RzIGlubGluZS1ibG9jayBkaXNwbGF5IG5vdCBkZWZpbmVkIGluIElFNi83LzgvOSAmIEZGM1xuXG5hdWRpbyxcbmNhbnZhcyxcbnZpZGVvIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgQGlmICRsZWdhY3lfc3VwcG9ydF9mb3JfaWUge1xuICAgICAgICAqZGlzcGxheTogaW5saW5lO1xuICAgICAgICAqem9vbTogMTtcbiAgICB9XG59XG5cbi8vIDEuIFByZXZlbnRzIG1vZGVybiBicm93c2VycyBmcm9tIGRpc3BsYXlpbmcgJ2F1ZGlvJyB3aXRob3V0IGNvbnRyb2xzXG4vLyAyLiBSZW1vdmUgZXhjZXNzIGhlaWdodCBpbiBpT1M1IGRldmljZXNcblxuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgICBkaXNwbGF5OiBub25lOyAvLyAxXG4gICAgaGVpZ2h0OiAwOyAvLyAyXG59XG5cbi8vXG4vLyBBZGRyZXNzIGBbaGlkZGVuXWAgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkuXG4vLyBIaWRlIHRoZSBgdGVtcGxhdGVgIGVsZW1lbnQgaW4gSUUsIFNhZmFyaSwgYW5kIEZpcmVmb3ggPCAyMi5cbi8vXG5cbltoaWRkZW5dLCB0ZW1wbGF0ZSB7XG4gICAgZGlzcGxheTogbm9uZTtcbn1cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIEJhc2Vcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIDEuIENvcnJlY3RzIHRleHQgcmVzaXppbmcgb2RkbHkgaW4gSUU2Lzcgd2hlbiBib2R5IGZvbnQtc2l6ZSBpcyBzZXQgdXNpbmcgZW0gdW5pdHNcbi8vICAgIGh0dHA6Ly9jbGFnbnV0LmNvbS9ibG9nLzM0OC8jYzc5MFxuLy8gMi4gUHJldmVudHMgaU9TIHRleHQgc2l6ZSBhZGp1c3QgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlLCB3aXRob3V0IGRpc2FibGluZyB1c2VyIHpvb21cbi8vICAgIHd3dy40NTZiZXJlYXN0cmVldC5jb20vYXJjaGl2ZS8yMDEwMTIvY29udHJvbGxpbmdfdGV4dF9zaXplX2luX3NhZmFyaV9mb3JfaW9zX3dpdGhvdXRfZGlzYWJsaW5nX3VzZXJfem9vbS9cblxuaHRtbCB7XG4gICAgQGlmICRsZWdhY3lfc3VwcG9ydF9mb3JfaWUge1xuICAgICAgICBmb250LXNpemU6IDEwMCU7IC8vIDFcbiAgICB9XG5cdFx0Ly9iYWNrZ3JvdW5kOiAkYmFja2dyb3VuZDtcblx0XHQvL2NvbG9yOiAkY29sb3I7XG4gICAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvLyAyXG4gICAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8vIDJcbn1cblxuLy8gQWRkcmVzc2VzIGZvbnQtZmFtaWx5IGluY29uc2lzdGVuY3kgYmV0d2VlbiAndGV4dGFyZWEnIGFuZCBvdGhlciBmb3JtIGVsZW1lbnRzLlxuXG5odG1sLFxuYnV0dG9uLFxuaW5wdXQsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gICAgLy9mb250LWZhbWlseTogJG5vcm1hbGl6ZWRfZm9udF9mYW1pbHk7XG59XG5cbi8vIEFkZHJlc3NlcyBtYXJnaW5zIGhhbmRsZWQgaW5jb3JyZWN0bHkgaW4gSUU2LzdcblxuYm9keSB7XG4gICAgbWFyZ2luOiAwO1xufVxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gTGlua3Ncbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIDEuIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIGNvbG9yIGZyb20gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuLy8gMi4gQWRkcmVzc2VzIG91dGxpbmUgZGlzcGxheWVkIG9kZGx5IGluIENocm9tZVxuLy8gMy4gSW1wcm92ZXMgcmVhZGFiaWxpdHkgd2hlbiBmb2N1c2VkIGFuZCBhbHNvIG1vdXNlIGhvdmVyZWQgaW4gYWxsIGJyb3dzZXJzXG4vLyAgICBwZW9wbGUub3BlcmEuY29tL3BhdHJpY2tsL2V4cGVyaW1lbnRzL2tleWJvYXJkL3Rlc3RcblxuYSB7XG4gICAgLy8gMVxuXG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG5cbiAgICAvLyAyXG5cbiAgICAmOmZvY3VzIHtcbiAgICAgICAgLy9vdXRsaW5lOiB0aGluIGRvdHRlZDtcbiAgICB9XG5cbiAgICAvLyAzXG5cbiAgICAmOmhvdmVyLFxuICAgICY6YWN0aXZlIHtcbiAgICAgICAgb3V0bGluZTogMDtcbiAgICB9XG59XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBUeXBvZ3JhcGh5XG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyBBZGRyZXNzZXMgZm9udCBzaXplcyBhbmQgbWFyZ2lucyBzZXQgZGlmZmVyZW50bHkgaW4gSUU2Lzdcbi8vIEFkZHJlc3NlcyBmb250IHNpemVzIHdpdGhpbiAnc2VjdGlvbicgYW5kICdhcnRpY2xlJyBpbiBGRjQrLCBDaHJvbWUsIFM1XG5cbi8qIEBpZiBcXCRub3JtYWxpemVfaGVhZGluZ3MgPT0gdHJ1ZSB7XG4gICAgaDEge1xuICAgICAgICBmb250LXNpemU6IFxcJGgxX2ZvbnRfc2l6ZTtcbiAgICAgICAgbWFyZ2luOiBcXCRoMV9tYXJnaW47XG4gICAgfVxuXG4gICAgaDIge1xuICAgICAgICBmb250LXNpemU6IFxcJGgyX2ZvbnRfc2l6ZTtcbiAgICAgICAgbWFyZ2luOiBcXCRoMl9tYXJnaW47XG4gICAgfVxuXG4gICAgaDMge1xuICAgICAgICBmb250LXNpemU6IFxcJGgzX2ZvbnRfc2l6ZTtcbiAgICAgICAgbWFyZ2luOiBcXCRoM19tYXJnaW47XG4gICAgfVxuXG4gICAgaDQge1xuICAgICAgICBmb250LXNpemU6IFxcJGg0X2ZvbnRfc2l6ZTtcbiAgICAgICAgbWFyZ2luOiBcXCRoNF9tYXJnaW47XG4gICAgfVxuXG4gICAgaDUge1xuICAgICAgICBmb250LXNpemU6IFxcJGg1X2ZvbnRfc2l6ZTtcbiAgICAgICAgbWFyZ2luOiBcXCRoNV9tYXJnaW47XG4gICAgfVxuXG4gICAgaDYge1xuICAgICAgICBmb250LXNpemU6IFxcJGg2X2ZvbnRfc2l6ZTtcbiAgICAgICAgbWFyZ2luOiBcXCRoNl9tYXJnaW47XG4gICAgfVxufSAqL1xuXG4vLyBBZGRyZXNzZXMgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzksIFM1LCBDaHJvbWVcblxuYWJiclt0aXRsZV0ge1xuICAgIGJvcmRlci1ib3R0b206IDFweCBkb3R0ZWQ7XG59XG5cbi8vIEFkZHJlc3NlcyBzdHlsZSBzZXQgdG8gJ2JvbGRlcicgaW4gRkYzKywgUzQvNSwgQ2hyb21lXG5cbmIsXG5zdHJvbmcge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG5AaWYgJGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZSB7XG4gICAgYmxvY2txdW90ZSB7XG4gICAgICAgIG1hcmdpbjogMWVtIDQwcHg7XG4gICAgfVxufVxuXG4vLyBBZGRyZXNzZXMgc3R5bGluZyBub3QgcHJlc2VudCBpbiBTNSwgQ2hyb21lXG5cbmRmbiB7XG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4vLyBBZGRyZXNzZXMgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRTYvNy84LzlcblxubWFyayB7XG4gICAgYmFja2dyb3VuZDogI2ZmMDtcbiAgICBjb2xvcjogIzAwMDtcbn1cblxuLy8gQWRkcmVzc2VzIG1hcmdpbnMgc2V0IGRpZmZlcmVudGx5IGluIElFNi83XG5AaWYgJGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZSB7XG4gICAgcCxcbiAgICBwcmUge1xuICAgICAgICBtYXJnaW46IDFlbSAwO1xuICAgIH1cbn1cblxuLy8gQ29ycmVjdHMgZm9udCBmYW1pbHkgc2V0IG9kZGx5IGluIElFNiwgUzQvNSwgQ2hyb21lXG4vLyBlbi53aWtpcGVkaWEub3JnL3dpa2kvVXNlcjpEYXZpZGdvdGhiZXJnL1Rlc3Q1OVxuXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gICAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgc2VyaWY7XG4gICAgQGlmICRsZWdhY3lfc3VwcG9ydF9mb3JfaWUge1xuICAgICAgICBfZm9udC1mYW1pbHk6ICdjb3VyaWVyIG5ldycsIG1vbm9zcGFjZTtcbiAgICB9XG4gICAgZm9udC1zaXplOiAxZW07XG59XG5cbi8vIEltcHJvdmVzIHJlYWRhYmlsaXR5IG9mIHByZS1mb3JtYXR0ZWQgdGV4dCBpbiBhbGwgYnJvd3NlcnNcblxucHJlIHtcbiAgICB3aGl0ZS1zcGFjZTogcHJlO1xuICAgIHdoaXRlLXNwYWNlOiBwcmUtd3JhcDtcbiAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG59XG5cbi8vIFNldCBjb25zaXN0ZW50IHF1b3RlIHR5cGVzLlxuXG5xIHtcbiAgICBxdW90ZXM6IFwiXFwyMDFDXCIgXCJcXDIwMURcIiBcIlxcMjAxOFwiIFwiXFwyMDE5XCI7XG59XG5cbi8vIDEuIEFkZHJlc3NlcyBDU1MgcXVvdGVzIG5vdCBzdXBwb3J0ZWQgaW4gSUU2Lzdcbi8vIDIuIEFkZHJlc3NlcyBxdW90ZSBwcm9wZXJ0eSBub3Qgc3VwcG9ydGVkIGluIFM0XG5cbi8vIDFcbkBpZiAkbGVnYWN5X3N1cHBvcnRfZm9yX2llIHtcbiAgICBxIHtcbiAgICAgICAgcXVvdGVzOiBub25lO1xuICAgIH1cbn1cblxuLy8gMlxucSB7XG4gICAgJjpiZWZvcmUsXG4gICAgJjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICBjb250ZW50OiBub25lO1xuICAgIH1cbn1cblxuLy8gQWRkcmVzcyBpbmNvbnNpc3RlbnQgYW5kIHZhcmlhYmxlIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG5cbi8qIC9zbWFsbCB7XG4gICAgZm9udC1zaXplOiA4MCU7XG59ICovXG5cbi8vIFByZXZlbnRzIHN1YiBhbmQgc3VwIGFmZmVjdGluZyBsaW5lLWhlaWdodCBpbiBhbGwgYnJvd3NlcnNcbi8vIGdpc3QuZ2l0aHViLmNvbS80MTM5MzBcblxuc3ViLFxuc3VwIHtcbiAgICBmb250LXNpemU6IDc1JTtcbiAgICBsaW5lLWhlaWdodDogMDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdXAge1xuICAgIHRvcDogLTAuNWVtO1xufVxuXG5zdWIge1xuICAgIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIExpc3RzXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyBBZGRyZXNzZXMgbWFyZ2lucyBzZXQgZGlmZmVyZW50bHkgaW4gSUU2LzdcbkBpZiAkbGVnYWN5X3N1cHBvcnRfZm9yX2llIHtcbiAgICBkbCxcbiAgICBtZW51LFxuICAgIG9sLFxuICAgIHVsIHtcbiAgICAgICAgLy9tYXJnaW46IDFlbSAwO1xuICAgIH1cbn1cblxuQGlmICRsZWdhY3lfc3VwcG9ydF9mb3JfaWUge1xuICAgIGRkIHtcbiAgICAgICAgbWFyZ2luOiAwIDAgMCA0MHB4O1xuICAgIH1cbn1cblxuLy8gQWRkcmVzc2VzIHBhZGRpbmdzIHNldCBkaWZmZXJlbnRseSBpbiBJRTYvN1xuQGlmICRsZWdhY3lfc3VwcG9ydF9mb3JfaWUge1xuICAgIG1lbnUsXG4gICAgb2wsXG4gICAgdWwge1xuICAgICAgICAvL3BhZGRpbmc6IDAgMCAwIDQwcHg7XG4gICAgfVxufVxuXG4vLyBDb3JyZWN0cyBsaXN0IGltYWdlcyBoYW5kbGVkIGluY29ycmVjdGx5IGluIElFN1xuXG5uYXYge1xuICAgIHVsLFxuICAgIG9sIHtcbiAgICAgICAgQGlmICRsZWdhY3lfc3VwcG9ydF9mb3JfaWUge1xuICAgICAgICAgICAgLy9saXN0LXN0eWxlLWltYWdlOiBub25lO1xuICAgICAgICB9XG4gICAgfVxufVxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gRW1iZWRkZWQgY29udGVudFxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gMS4gUmVtb3ZlcyBib3JkZXIgd2hlbiBpbnNpZGUgJ2EnIGVsZW1lbnQgaW4gSUU2LzcvOC85LCBGRjNcbi8vIDIuIEltcHJvdmVzIGltYWdlIHF1YWxpdHkgd2hlbiBzY2FsZWQgaW4gSUU3XG4vLyAgICBjb2RlLmZsaWNrci5jb20vYmxvZy8yMDA4LzExLzEyL29uLXVpLXF1YWxpdHktdGhlLWxpdHRsZS10aGluZ3MtY2xpZW50LXNpZGUtaW1hZ2UtcmVzaXppbmcvXG5cbmltZyB7XG4gICAgYm9yZGVyOiAwOyAvLyAxXG4gICAgQGlmICRsZWdhY3lfc3VwcG9ydF9mb3JfaWUge1xuICAgICAgICAtbXMtaW50ZXJwb2xhdGlvbi1tb2RlOiBiaWN1YmljOyAvLyAyXG4gICAgfVxufVxuXG4vLyBDb3JyZWN0cyBvdmVyZmxvdyBkaXNwbGF5ZWQgb2RkbHkgaW4gSUU5XG5cbnN2Zzpub3QoOnJvb3QpIHtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gRmlndXJlc1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gQWRkcmVzc2VzIG1hcmdpbiBub3QgcHJlc2VudCBpbiBJRTYvNy84LzksIFM1LCBPMTFcblxuZmlndXJlIHtcbiAgICBtYXJnaW46IDA7XG59XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBGb3Jtc1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gQ29ycmVjdHMgbWFyZ2luIGRpc3BsYXllZCBvZGRseSBpbiBJRTYvN1xuQGlmICRsZWdhY3lfc3VwcG9ydF9mb3JfaWUge1xuICAgIGZvcm0ge1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgfVxufVxuXG4vLyBEZWZpbmUgY29uc2lzdGVudCBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmdcblxuZmllbGRzZXQge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gICAgbWFyZ2luOiAwIDJweDtcbiAgICBwYWRkaW5nOiAwLjM1ZW0gMC42MjVlbSAwLjc1ZW07XG59XG5cbi8vIDEuIENvcnJlY3RzIGNvbG9yIG5vdCBiZWluZyBpbmhlcml0ZWQgaW4gSUU2LzcvOC85XG4vLyAyLiBSZW1vdmUgcGFkZGluZyBzbyBwZW9wbGUgYXJlbid0IGNhdWdodCBvdXQgaWYgdGhleSB6ZXJvIG91dCBmaWVsZHNldHMuXG4vLyAzLiBDb3JyZWN0cyB0ZXh0IG5vdCB3cmFwcGluZyBpbiBGRjNcbi8vIDQuIENvcnJlY3RzIGFsaWdubWVudCBkaXNwbGF5ZWQgb2RkbHkgaW4gSUU2LzdcblxubGVnZW5kIHtcbiAgICBib3JkZXI6IDA7IC8vIDFcbiAgICBwYWRkaW5nOiAwOyAvLyAyXG4gICAgd2hpdGUtc3BhY2U6IG5vcm1hbDsgLy8gM1xuICAgIEBpZiAkbGVnYWN5X3N1cHBvcnRfZm9yX2llIHtcbiAgICAgICAgKm1hcmdpbi1sZWZ0OiAtN3B4OyAvLyA0XG4gICAgfVxufVxuXG4vLyAxLiBDb3JyZWN0IGZvbnQgZmFtaWx5IG5vdCBiZWluZyBpbmhlcml0ZWQgaW4gYWxsIGJyb3dzZXJzLlxuLy8gMi4gQ29ycmVjdHMgZm9udCBzaXplIG5vdCBiZWluZyBpbmhlcml0ZWQgaW4gYWxsIGJyb3dzZXJzXG4vLyAzLiBBZGRyZXNzZXMgbWFyZ2lucyBzZXQgZGlmZmVyZW50bHkgaW4gSUU2LzcsIEZGMyssIFM1LCBDaHJvbWVcbi8vIDQuIEltcHJvdmVzIGFwcGVhcmFuY2UgYW5kIGNvbnNpc3RlbmN5IGluIGFsbCBicm93c2Vyc1xuXG5idXR0b24sXG5pbnB1dCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDsgLy8gMVxuICAgIGZvbnQtc2l6ZTogMTAwJTsgLy8gMlxuICAgIG1hcmdpbjogMDsgLy8gM1xuICAgIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgLy8gNFxuICAgIEBpZiAkbGVnYWN5X3N1cHBvcnRfZm9yX2llIHtcbiAgICAgICAgKnZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IC8vIDRcbiAgICB9XG59XG5cbi8vIEFkZHJlc3NlcyBGRjMvNCBzZXR0aW5nIGxpbmUtaGVpZ2h0IG9uICdpbnB1dCcgdXNpbmcgIWltcG9ydGFudCBpbiB0aGUgVUEgc3R5bGVzaGVldFxuXG5idXR0b24sIGlucHV0IHtcbiAgICBsaW5lLWhlaWdodDogbm9ybWFsO1xufVxuXG4vLyBBZGRyZXNzIGluY29uc2lzdGVudCBgdGV4dC10cmFuc2Zvcm1gIGluaGVyaXRhbmNlIGZvciBgYnV0dG9uYCBhbmQgYHNlbGVjdGAuXG4vLyBBbGwgb3RoZXIgZm9ybSBjb250cm9sIGVsZW1lbnRzIGRvIG5vdCBpbmhlcml0IGB0ZXh0LXRyYW5zZm9ybWAgdmFsdWVzLlxuLy8gQ29ycmVjdCBgYnV0dG9uYCBzdHlsZSBpbmhlcml0YW5jZSBpbiBDaHJvbWUsIFNhZmFyaSA1KywgYW5kIElFIDgrLlxuLy8gQ29ycmVjdCBgc2VsZWN0YCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94IDQrIGFuZCBPcGVyYS5cblxuYnV0dG9uLFxuc2VsZWN0IHtcbiAgICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLy8gMS4gQXZvaWQgdGhlIFdlYktpdCBidWcgaW4gQW5kcm9pZCA0LjAuKiB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2Bcbi8vICAgIGFuZCBgdmlkZW9gIGNvbnRyb2xzXG4vLyAyLiBDb3JyZWN0cyBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlICdpbnB1dCcgdHlwZXMgaW4gaU9TXG4vLyAzLiBJbXByb3ZlcyB1c2FiaWxpdHkgYW5kIGNvbnNpc3RlbmN5IG9mIGN1cnNvciBzdHlsZSBiZXR3ZWVuIGltYWdlLXR5cGVcbi8vICAgICdpbnB1dCcgYW5kIG90aGVyc1xuLy8gNC4gUmVtb3ZlcyBpbm5lciBzcGFjaW5nIGluIElFNyB3aXRob3V0IGFmZmVjdGluZyBub3JtYWwgdGV4dCBpbnB1dHNcbi8vICAgIEtub3duIGlzc3VlOiBpbm5lciBzcGFjaW5nIHJlbWFpbnMgaW4gSUU2XG5cbmJ1dHRvbixcbmh0bWwgaW5wdXRbdHlwZT1cImJ1dHRvblwiXSwgLy8gMVxuaW5wdXRbdHlwZT1cInJlc2V0XCJdLFxuaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8vIDJcbiAgICBjdXJzb3I6IHBvaW50ZXI7IC8vIDNcbiAgICBAaWYgJGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZSB7XG4gICAgICAgICpvdmVyZmxvdzogdmlzaWJsZTsgIC8vIDRcbiAgICB9XG59XG5cbi8vIFJlLXNldCBkZWZhdWx0IGN1cnNvciBmb3IgZGlzYWJsZWQgZWxlbWVudHNcblxuYnV0dG9uW2Rpc2FibGVkXSxcbmlucHV0W2Rpc2FibGVkXSB7XG4gICAgY3Vyc29yOiBkZWZhdWx0O1xufVxuXG4vLyBSZW1vdmVzIGlubmVyIHBhZGRpbmcgYW5kIGJvcmRlciBpbiBGRjMrXG4vLyB3d3cuc2l0ZXBlbi5jb20vYmxvZy8yMDA4LzA1LzE0L3RoZS1kZXZpbHMtaW4tdGhlLWRldGFpbHMtZml4aW5nLWRvam9zLXRvb2xiYXItYnV0dG9ucy9cblxuYnV0dG9uLCBpbnB1dCB7XG4gICAgJjo6LW1vei1mb2N1cy1pbm5lciB7XG4gICAgICAgIGJvcmRlcjogMDtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICB9XG59XG5cbi8vIDEuIFJlbW92ZXMgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUU2LzcvOC85XG4vLyAyLiBJbXByb3ZlcyByZWFkYWJpbGl0eSBhbmQgYWxpZ25tZW50IGluIGFsbCBicm93c2Vyc1xuXG50ZXh0YXJlYSB7XG4gICAgb3ZlcmZsb3c6IGF1dG87IC8vIDFcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wOyAvLyAyXG59XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBUYWJsZXNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIFJlbW92ZSBtb3N0IHNwYWNpbmcgYmV0d2VlbiB0YWJsZSBjZWxsc1xuXG50YWJsZSB7XG4gICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgICBib3JkZXItc3BhY2luZzogMDtcbn1cblxuaW5wdXQge1xuICAgIC8vIDEuIEFkZHJlc3NlcyBhcHBlYXJhbmNlIHNldCB0byBzZWFyY2hmaWVsZCBpbiBTNSwgQ2hyb21lXG4gICAgLy8gMi4gQWRkcmVzc2VzIGJveC1zaXppbmcgc2V0IHRvIGJvcmRlci1ib3ggaW4gUzUsIENocm9tZSAoaW5jbHVkZSAtbW96IHRvIGZ1dHVyZS1wcm9vZilcbiAgICAmW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAgICAgICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLy8gMVxuICAgICAgICAtbW96LWJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAgICAgICAtd2Via2l0LWJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvLyAyXG4gICAgICAgIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuXG4gICAgXHQvLyBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgc2VhcmNoIGNhbmNlbCBidXR0b24gaW4gU2FmYXJpIDUgYW5kIENocm9tZVxuICAgICAgICAvLyBvbiBPUyBYLlxuICAgICAgICAmOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuICAgICAgICAmOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgICAgICAgICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIDEuIEFkZHJlc3MgYm94IHNpemluZyBzZXQgdG8gYGNvbnRlbnQtYm94YCBpbiBJRSA4LzkvMTAuXG4gICAgLy8gMi4gUmVtb3ZlIGV4Y2VzcyBwYWRkaW5nIGluIElFIDgvOS8xMC5cbiAgICAvLyAzLiBSZW1vdmVzIGV4Y2VzcyBwYWRkaW5nIGluIElFN1xuICAgIC8vICAgIEtub3duIGlzc3VlOiBleGNlc3MgcGFkZGluZyByZW1haW5zIGluIElFNlxuICAgICZbdHlwZT1cImNoZWNrYm94XCJdLFxuICAgICZbdHlwZT1cInJhZGlvXCJdIHtcbiAgICBcdGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8vIDFcbiAgICBcdHBhZGRpbmc6IDA7IC8vIDJcbiAgICBcdEBpZiAkbGVnYWN5X3N1cHBvcnRfZm9yX2llIHtcbiAgICAgICAgXHQqaGVpZ2h0OiAxM3B4OyAvLyAzXG4gICAgICAgIFx0KndpZHRoOiAxM3B4OyAvLyAzXG4gICAgXHR9XG4gICAgfVxufVxuIiwiQGNoYXJzZXQgXCJVVEYtOFwiO1xuYXJ0aWNsZSwgYXNpZGUsIGRldGFpbHMsIGZpZ2NhcHRpb24sIGZpZ3VyZSwgZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgbmF2LCBzZWN0aW9uLCBzdW1tYXJ5IHtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuYXVkaW8sIGNhbnZhcywgdmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cblxuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwOyB9XG5cbltoaWRkZW5dLCB0ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuaHRtbCB7XG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IH1cblxuYm9keSB7XG4gIG1hcmdpbjogMDsgfVxuXG5hIHtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7IH1cbiAgYTpob3ZlciwgYTphY3RpdmUge1xuICAgIG91dGxpbmU6IDA7IH1cblxuLyogQGlmIFxcJG5vcm1hbGl6ZV9oZWFkaW5ncyA9PSB0cnVlIHtcbiAgICBoMSB7XG4gICAgICAgIGZvbnQtc2l6ZTogXFwkaDFfZm9udF9zaXplO1xuICAgICAgICBtYXJnaW46IFxcJGgxX21hcmdpbjtcbiAgICB9XG5cbiAgICBoMiB7XG4gICAgICAgIGZvbnQtc2l6ZTogXFwkaDJfZm9udF9zaXplO1xuICAgICAgICBtYXJnaW46IFxcJGgyX21hcmdpbjtcbiAgICB9XG5cbiAgICBoMyB7XG4gICAgICAgIGZvbnQtc2l6ZTogXFwkaDNfZm9udF9zaXplO1xuICAgICAgICBtYXJnaW46IFxcJGgzX21hcmdpbjtcbiAgICB9XG5cbiAgICBoNCB7XG4gICAgICAgIGZvbnQtc2l6ZTogXFwkaDRfZm9udF9zaXplO1xuICAgICAgICBtYXJnaW46IFxcJGg0X21hcmdpbjtcbiAgICB9XG5cbiAgICBoNSB7XG4gICAgICAgIGZvbnQtc2l6ZTogXFwkaDVfZm9udF9zaXplO1xuICAgICAgICBtYXJnaW46IFxcJGg1X21hcmdpbjtcbiAgICB9XG5cbiAgICBoNiB7XG4gICAgICAgIGZvbnQtc2l6ZTogXFwkaDZfZm9udF9zaXplO1xuICAgICAgICBtYXJnaW46IFxcJGg2X21hcmdpbjtcbiAgICB9XG59ICovXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IDFweCBkb3R0ZWQ7IH1cblxuYiwgc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cblxuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljOyB9XG5cbm1hcmsge1xuICBiYWNrZ3JvdW5kOiAjZmYwO1xuICBjb2xvcjogIzAwMDsgfVxuXG5jb2RlLCBrYmQsIHByZSwgc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIHNlcmlmO1xuICBmb250LXNpemU6IDFlbTsgfVxuXG5wcmUge1xuICB3aGl0ZS1zcGFjZTogcHJlO1xuICB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7XG4gIHdvcmQtd3JhcDogYnJlYWstd29yZDsgfVxuXG5xIHtcbiAgcXVvdGVzOiBcIlxcMjAxQ1wiIFwiXFwyMDFEXCIgXCJcXDIwMThcIiBcIlxcMjAxOVwiOyB9XG5cbnE6YmVmb3JlLCBxOmFmdGVyIHtcbiAgY29udGVudDogJyc7XG4gIGNvbnRlbnQ6IG5vbmU7IH1cblxuLyogL3NtYWxsIHtcbiAgICBmb250LXNpemU6IDgwJTtcbn0gKi9cbnN1Yiwgc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTsgfVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07IH1cblxuaW1nIHtcbiAgYm9yZGVyOiAwOyB9XG5cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuXG5maWd1cmUge1xuICBtYXJnaW46IDA7IH1cblxuZmllbGRzZXQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuICBtYXJnaW46IDAgMnB4O1xuICBwYWRkaW5nOiAwLjM1ZW0gMC42MjVlbSAwLjc1ZW07IH1cblxubGVnZW5kIHtcbiAgYm9yZGVyOiAwO1xuICBwYWRkaW5nOiAwO1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsOyB9XG5cbmJ1dHRvbiwgaW5wdXQsIHNlbGVjdCwgdGV4dGFyZWEge1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgZm9udC1zaXplOiAxMDAlO1xuICBtYXJnaW46IDA7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG5idXR0b24sIGlucHV0IHtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDsgfVxuXG5idXR0b24sIHNlbGVjdCB7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lOyB9XG5cbmJ1dHRvbiwgaHRtbCBpbnB1dFt0eXBlPVwiYnV0dG9uXCJdLCBpbnB1dFt0eXBlPVwicmVzZXRcIl0sIGlucHV0W3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgY3Vyc29yOiBwb2ludGVyOyB9XG5cbmJ1dHRvbltkaXNhYmxlZF0sIGlucHV0W2Rpc2FibGVkXSB7XG4gIGN1cnNvcjogZGVmYXVsdDsgfVxuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsIGlucHV0OjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyOiAwO1xuICBwYWRkaW5nOiAwOyB9XG5cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7IH1cblxudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDsgfVxuXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XG4gIC1tb3otYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC13ZWJraXQtYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyB9XG4gIGlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sIGlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsgfVxuaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdLCBpbnB1dFt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBwYWRkaW5nOiAwOyB9XG5cbmh0bWwge1xuICBmb250LXNpemU6IDE2cHg7XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkOyB9XG5cbmJvZHkge1xuICBjb2xvcjogIzMzMztcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgZm9udC1mYW1pbHk6IE5ld3MgQ3ljbGUsIHNhbnMtc2VyaWY7XG4gIGJhY2tncm91bmQtc2l6ZTogYXV0byAyNHB4O1xuICBtYXJnaW46IDA7IH1cblxuW2NsYXNzKj0nX19oZWFkaW5nJ10ge1xuICBjb2xvcjogIzI2N2U2NDtcbiAgZm9udC1mYW1pbHk6IFBsYXlmYWlyIERpc3BsYXksIHNlcmlmO1xuICBmb250LXNpemU6IDIuNXJlbTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIG1hcmdpbi1ib3R0b206IDJyZW07IH1cblxuW2NsYXNzKj1fX2J1dHRvbl0sIGlucHV0W3R5cGU9XCJidXR0b25cIl0sIGlucHV0W3R5cGU9XCJyZXNldFwiXSB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICMyNjdlNjQ7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBmb250LWZhbWlseTogUGxheWZhaXIgRGlzcGxheSwgc2VyaWY7XG4gIGZvbnQtc2l6ZTogMS4ycmVtO1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcGFkZGluZzogLjc1cmVtIDNyZW07XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgLypJdGVtcyBmb3IgdHJhbnNpdGlvbiAqL1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgY29sb3I6ICMyNjdlNjQ7XG4gIC8qVHJhbnNpdGlvbiBzZXR0aW5ncyAqL1xuICB0cmFuc2l0aW9uOiBhbGwgLjJzIGVhc2U7IH1cbiAgW2NsYXNzKj1fX2J1dHRvbl06aG92ZXIsIGlucHV0W3R5cGU9XCJidXR0b25cIl06aG92ZXIsIGlucHV0W3R5cGU9XCJyZXNldFwiXTpob3ZlciB7XG4gICAgLypUaGVzZSB3aWxsIHRyYW5zaXRpb24gb24gaG92ZXIgKi9cbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjY3ZTY0O1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuXG4ubG9hZGVyX19idXR0b24uZGlzYWJsZWQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTVlNmU3O1xuICBjb2xvcjogIzI2N2U2NDtcbiAgY3Vyc29yOiBkZWZhdWx0O1xuICBvcGFjaXR5OiAuMzsgfVxuXG5AbWVkaWEgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgc3VwIHtcbiAgICB0b3A6IC0uMjVlbTsgfSB9XG5cbi5jbGVhcmZpeDphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBjbGVhcjogYm90aDsgfVxuXG5pbWcsIGlmcmFtZSwgZW1iZWQge1xuICB3aWR0aDogMTAwJTsgfVxuXG4uY29udGFpbmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjY2NjO1xuICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjY2NjO1xuICBtYXJnaW46IDAgYXV0bztcbiAgbWF4LXdpZHRoOiAxMjAwcHg7IH1cblxuW2NsYXNzKj0nY29sLSddIHtcbiAgZGlzcGxheTogdGFibGUtY2VsbDtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICBbY2xhc3MqPSdjb2wtJ10ge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyOyB9IH1cblxuLmNvbC0yLTEyIHtcbiAgd2lkdGg6IDE2LjY2NjY3JTsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAuY29sLTItMTIge1xuICAgICAgd2lkdGg6IDEwMCU7IH0gfVxuXG4uY29sLTMtMTIge1xuICB3aWR0aDogMjUlOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5jb2wtMy0xMiB7XG4gICAgICB3aWR0aDogMTAwJTsgfSB9XG5cbi5jb2wtNC0xMiB7XG4gIHdpZHRoOiAzMy4zMzMzMyU7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmNvbC00LTEyIHtcbiAgICAgIHdpZHRoOiAxMDAlOyB9IH1cblxuLmNvbC01LTEyIHtcbiAgd2lkdGg6IDQxLjY2NjY3JTsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAuY29sLTUtMTIge1xuICAgICAgd2lkdGg6IDEwMCU7IH0gfVxuXG4uY29sLTYtMTIge1xuICB3aWR0aDogNTAlOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5jb2wtNi0xMiB7XG4gICAgICB3aWR0aDogMTAwJTsgfSB9XG5cbi5jb2wtNy0xMiB7XG4gIHdpZHRoOiA1OC4zMzMzMyU7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmNvbC03LTEyIHtcbiAgICAgIHdpZHRoOiAxMDAlOyB9IH1cblxuLmNvbC04LTEyIHtcbiAgd2lkdGg6IDY2LjY2NjY3JTsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAuY29sLTgtMTIge1xuICAgICAgd2lkdGg6IDEwMCU7IH0gfVxuXG4uY29sLTktMTIge1xuICB3aWR0aDogNzUlOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5jb2wtOS0xMiB7XG4gICAgICB3aWR0aDogMTAwJTsgfSB9XG5cbi5jb2wtMTAtMTIge1xuICB3aWR0aDogODMuMzMzMzMlOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5jb2wtMTAtMTIge1xuICAgICAgd2lkdGg6IDEwMCU7IH0gfVxuXG4uY29sLTExLTEyIHtcbiAgd2lkdGg6IDkxLjY2NjY3JTsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAuY29sLTExLTEyIHtcbiAgICAgIHdpZHRoOiAxMDAlOyB9IH1cblxuKiB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxuICAqOjphZnRlciwgKjo6YmVmb3JlIHtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG5cbmJvZHkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWNlZWU2O1xuICBwYWRkaW5nOiAwOyB9XG5cbmEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiAjMjY3ZTY0OyB9XG4gIGE6aG92ZXIge1xuICAgIGNvbG9yOiAjNDU1NjUyO1xuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyB9XG5cbnRhYmxlIHtcbiAgbWFyZ2luOiAwIDAgMS41ZW07XG4gIHdpZHRoOiAxMDAlOyB9XG5cbnRyIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlNWU2ZTc7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDcwMHB4KSB7XG4gICAgdHIge1xuICAgICAgbWFyZ2luLXRvcDogMCAhaW1wb3J0YW50OyB9XG4gICAgICB0cjpmaXJzdC1jaGlsZCB7XG4gICAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTVlNmU3OyB9IH1cbiAgdHI6bnRoLWNoaWxkKGV2ZW4pIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmOGY4OyB9XG5cbnRkIHtcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgcGFkZGluZzogMTBweCA1cHg7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDcwMHB4KSB7XG4gICAgdGQge1xuICAgICAgbWFyZ2luLXRvcDogMCAhaW1wb3J0YW50O1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgcGFkZGluZy1sZWZ0OiA0MCU7IH1cbiAgICAgIHRkOmJlZm9yZSB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiA2cHg7XG4gICAgICAgIGxlZnQ6IDZweDtcbiAgICAgICAgd2lkdGg6IDQwJTtcbiAgICAgICAgcGFkZGluZy1yaWdodDogMTBweDtcbiAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDsgfVxuICAgICAgdGQ6bnRoLW9mLXR5cGUoMSk6YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogXCJDaXR5OiBcIjsgfVxuICAgICAgdGQ6bnRoLW9mLXR5cGUoMik6YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogXCJBZGRyZXNzOiBcIjsgfVxuICAgICAgdGQ6bnRoLW9mLXR5cGUoMyk6YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogXCJQaG9uZTogXCI7IH0gfVxuXG50aGVhZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlNWU2ZTc7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDcwMHB4KSB7XG4gICAgdGhlYWQgdHIge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAtOTk5OXB4O1xuICAgICAgbGVmdDogLTk5OTlweDsgfSB9XG4gIHRoZWFkIHRoIHtcbiAgICBmb250LXdlaWdodDogNjAwO1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgcGFkZGluZzogNXB4OyB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3MDBweCkge1xuICB0YWJsZSwgdGhlYWQsIHRib2R5LCB0aCwgdGQsIHRyIHtcbiAgICBkaXNwbGF5OiBibG9jazsgfSB9XG5cbi5uYXYtbWlub3Ige1xuICBkaXNwbGF5OiBibG9jaztcbiAgdGV4dC1hbGlnbjogcmlnaHQ7IH1cbiAgLm5hdi1taW5vcl9fY29udGFpbmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2NjYztcbiAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjY2NjO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIHBhZGRpbmc6IDFyZW0gMS41cmVtO1xuICAgIG1heC13aWR0aDogMTIwMHB4OyB9XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAubmF2LW1pbm9yX19jb250YWluZXIge1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH0gfVxuICAubmF2LW1pbm9yIGxpIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cbiAgICAubmF2LW1pbm9yIGxpOmFmdGVyIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIGNvbnRlbnQ6ICcgfCAnO1xuICAgICAgY29sb3I6ICMyNjdlNjQ7XG4gICAgICBtYXJnaW46IDAgMnB4IDAgLjNyZW07IH1cbiAgICAubmF2LW1pbm9yIGxpOm50aC1jaGlsZCgzKTphZnRlciB7XG4gICAgICBjb250ZW50OiAnICc7IH1cbiAgICAubmF2LW1pbm9yIGxpOmxhc3QtY2hpbGQgYSB7XG4gICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgIG1hcmdpbi1yaWdodDogMTBweDsgfVxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgICAgIC5uYXYtbWlub3IgbGk6bGFzdC1jaGlsZCBhIHtcbiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7IH0gfVxuICAubmF2LW1pbm9yX19saW5rIHtcbiAgICBjb2xvcjogIzMzMztcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgcGFkZGluZzogMCAuM3JlbSAwOyB9XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgICAubmF2LW1pbm9yX19saW5rIHtcbiAgICAgICAgZm9udC1zaXplOiAuOHJlbTsgfSB9XG4gICAgLm5hdi1taW5vcl9fbGluazpob3ZlciB7XG4gICAgICBjb2xvcjogIzI2N2U2NDsgfVxuXG4uc2l0ZS1tYXAgYSB7XG4gIGNvbG9yOiAjMzMzOyB9XG4gIC5zaXRlLW1hcCBhOmhvdmVyIHtcbiAgICBjb2xvcjogIzI2N2U2NDsgfVxuXG5hLmNkLW5hdi1pdGVtOmhvdmVyIGltZyB7XG4gIG9wYWNpdHk6IC43ICFpbXBvcnRhbnQ7IH1cbmEuY2QtbmF2LWl0ZW06aG92ZXIgaDMge1xuICBjb2xvcjogIzQ1NTY1MiAhaW1wb3J0YW50OyB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDIycHgpIHtcbiAgYm9keS5uYXYtb24tbGVmdC5vdmVyZmxvdy1oaWRkZW4ge1xuICAgIG92ZXJmbG93OiBoaWRkZW47IH0gfVxuXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotbXMtY2xlYXIge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24sIGlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sIGlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLXJlc3VsdHMtYnV0dG9uLCBpbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1yZXN1bHRzLWRlY29yYXRpb24ge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKlxuICpNYWluIGNvbXBvbmVudHNcbiAqXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKiAqL1xuLmNkLW1haW4tY29udGVudCwgLmNkLW1haW4taGVhZGVyIHtcbiAgLyogRm9yY2UgSGFyZHdhcmUgQWNjZWxlcmF0aW9uIGluIFdlYktpdCAqL1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVooMCk7XG4gIHdpbGwtY2hhbmdlOiB0cmFuc2Zvcm07IH1cbiAgLmNkLW1haW4tY29udGVudCB1bCwgLmNkLW1haW4taGVhZGVyIHVsIHtcbiAgICBsaXN0LXN0eWxlOiBub25lOyB9XG5cbi5jZC1tYWluLWNvbnRlbnQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAxMDIycHgpIHtcbiAgICAuY2QtbWFpbi1jb250ZW50Lm5hdi1pcy12aXNpYmxlIHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjYwcHgpOyB9XG4gICAgLm5hdi1vbi1sZWZ0IC5jZC1tYWluLWNvbnRlbnQubmF2LWlzLXZpc2libGUge1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDI2MHB4KTsgfSB9XG5cbi5jZC1tYWluLWhlYWRlciB7XG4gIGZvbnQtZmFtaWx5OiBQbGF5ZmFpciBEaXNwbGF5LCBzZXJpZjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zczsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogMTAyMnB4KSB7XG4gICAgLmNkLW1haW4taGVhZGVyLm5hdi1pcy12aXNpYmxlIHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTsgfVxuICAgIC5uYXYtb24tbGVmdCAuY2QtbWFpbi1oZWFkZXIubmF2LWlzLXZpc2libGUge1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDI2MHB4KTsgfSB9XG5cbi5jZC1tYWluLWNvbnRlbnQge1xuICBtaW4taGVpZ2h0OiAxMDB2aDtcbiAgei1pbmRleDogMjsgfVxuXG4uY2QtbWFpbi1oZWFkZXIge1xuICBoZWlnaHQ6IDUwcHg7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIHotaW5kZXg6IDM7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZTVlNmU3OyB9XG4gIC5uYXYtaXMtZml4ZWQgLmNkLW1haW4taGVhZGVyIHtcbiAgICAvKiBhZGQgLm5hdi1pcy1maXhlZCBjbGFzcyB0byBib2R5IGlmIHlvdSB3YW50IGEgZml4ZWQgbmF2aWdhdGlvbiBvbiA+IDEwMjRweCAqL1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICB3aWR0aDogMTAwJTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgLmNkLW1haW4taGVhZGVyIHtcbiAgICAgIGhlaWdodDogODBweDsgfVxuICAgICAgLmNkLW1haW4taGVhZGVyOmFmdGVyIHtcbiAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgZGlzcGxheTogdGFibGU7XG4gICAgICAgIGNsZWFyOiBib3RoOyB9IH1cblxuLmNkLWxvZ28ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMTJweDtcbiAgbGVmdDogNSU7IH1cbiAgLmNkLWxvZ28gaW1nIHtcbiAgICBkaXNwbGF5OiBibG9jazsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogMTAyMnB4KSB7XG4gICAgLm5hdi1vbi1sZWZ0IC5jZC1sb2dvIHtcbiAgICAgIGxlZnQ6IGF1dG87XG4gICAgICByaWdodDogNSU7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgLmNkLWxvZ28ge1xuICAgICAgdG9wOiAyNnB4O1xuICAgICAgbGVmdDogNGVtOyB9IH1cblxuLmNkLWhlYWRlci1idXR0b25zIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHRvcDogM3B4O1xuICByaWdodDogNSU7IH1cbiAgLmNkLWhlYWRlci1idXR0b25zIGxpIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMjJweCkge1xuICAgIC5uYXYtb24tbGVmdCAuY2QtaGVhZGVyLWJ1dHRvbnMge1xuICAgICAgcmlnaHQ6IGF1dG87XG4gICAgICBsZWZ0OiA1JTsgfVxuICAgICAgLm5hdi1vbi1sZWZ0IC5jZC1oZWFkZXItYnV0dG9ucyBsaSB7XG4gICAgICAgIGZsb2F0OiByaWdodDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAuY2QtaGVhZGVyLWJ1dHRvbnMge1xuICAgICAgdG9wOiAxcmVtO1xuICAgICAgcmlnaHQ6IDFyZW07IH0gfVxuXG4uY2Qtc2VhcmNoLXRyaWdnZXIsIC5jZC1uYXYtdHJpZ2dlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiA0NHB4O1xuICBoZWlnaHQ6IDQ0cHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIC8qIGhpZGUgdGV4dCAqL1xuICBjb2xvcjogdHJhbnNwYXJlbnQ7XG4gIHotaW5kZXg6IDM7IH1cblxuLmNkLXNlYXJjaC10cmlnZ2VyOjpiZWZvcmUsIC5jZC1zZWFyY2gtdHJpZ2dlcjo6YWZ0ZXIge1xuICAvKiBzZWFyY2ggaWNvbiAqL1xuICBjb250ZW50OiAnJztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3M7XG4gIC8qIEZvcmNlIEhhcmR3YXJlIEFjY2VsZXJhdGlvbiBpbiBXZWJLaXQgKi9cbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApO1xuICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47IH1cbi5jZC1zZWFyY2gtdHJpZ2dlcjo6YmVmb3JlIHtcbiAgLyogbGVucyAqL1xuICB0b3A6IDExcHg7XG4gIGxlZnQ6IDExcHg7XG4gIHdpZHRoOiAxOHB4O1xuICBoZWlnaHQ6IDE4cHg7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYm9yZGVyOiAzcHggc29saWQgIzQ1NTY1MjsgfVxuLmNkLXNlYXJjaC10cmlnZ2VyOjphZnRlciB7XG4gIC8qIGhhbmRsZSAqL1xuICBoZWlnaHQ6IDNweDtcbiAgd2lkdGg6IDhweDtcbiAgYmFja2dyb3VuZDogIzQ1NTY1MjtcbiAgYm90dG9tOiAxNHB4O1xuICByaWdodDogMTFweDtcbiAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpOyB9XG4uY2Qtc2VhcmNoLXRyaWdnZXIgc3BhbiB7XG4gIC8qIGNvbnRhaW5lciBmb3IgdGhlIFggaWNvbiAqL1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDsgfVxuLmNkLXNlYXJjaC10cmlnZ2VyIHNwYW46OmJlZm9yZSwgLmNkLXNlYXJjaC10cmlnZ2VyIHNwYW46OmFmdGVyIHtcbiAgLyogY2xvc2UgaWNvbiAqL1xuICBjb250ZW50OiAnJztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGhlaWdodDogM3B4O1xuICB3aWR0aDogMjJweDtcbiAgdG9wOiA1MCU7XG4gIG1hcmdpbi10b3A6IC0ycHg7XG4gIGxlZnQ6IDUwJTtcbiAgbWFyZ2luLWxlZnQ6IC0xMXB4O1xuICBiYWNrZ3JvdW5kOiAjNDU1NjUyO1xuICBvcGFjaXR5OiAwO1xuICAvKiBGb3JjZSBIYXJkd2FyZSBBY2NlbGVyYXRpb24gaW4gV2ViS2l0ICovXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKTtcbiAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3MsIHRyYW5zZm9ybSAwLjNzOyB9XG4uY2Qtc2VhcmNoLXRyaWdnZXIgc3Bhbjo6YmVmb3JlIHtcbiAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpOyB9XG4uY2Qtc2VhcmNoLXRyaWdnZXIgc3Bhbjo6YWZ0ZXIge1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpOyB9XG4uY2Qtc2VhcmNoLXRyaWdnZXIuc2VhcmNoLWlzLXZpc2libGU6OmJlZm9yZSwgLmNkLXNlYXJjaC10cmlnZ2VyLnNlYXJjaC1pcy12aXNpYmxlOjphZnRlciB7XG4gIC8qIGhpZGUgc2VhcmNoIGljb24gKi9cbiAgb3BhY2l0eTogMDsgfVxuLmNkLXNlYXJjaC10cmlnZ2VyLnNlYXJjaC1pcy12aXNpYmxlIHNwYW46OmJlZm9yZSwgLmNkLXNlYXJjaC10cmlnZ2VyLnNlYXJjaC1pcy12aXNpYmxlIHNwYW46OmFmdGVyIHtcbiAgLyogc2hvdyBjbG9zZSBpY29uICovXG4gIG9wYWNpdHk6IDE7IH1cbi5jZC1zZWFyY2gtdHJpZ2dlci5zZWFyY2gtaXMtdmlzaWJsZSBzcGFuOjpiZWZvcmUge1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgxMzVkZWcpOyB9XG4uY2Qtc2VhcmNoLXRyaWdnZXIuc2VhcmNoLWlzLXZpc2libGUgc3Bhbjo6YWZ0ZXIge1xuICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7IH1cblxuLmNkLW5hdi10cmlnZ2VyOmhvdmVyIHtcbiAgY29sb3I6IHRyYW5zcGFyZW50OyB9XG4uY2QtbmF2LXRyaWdnZXIgc3BhbiwgLmNkLW5hdi10cmlnZ2VyIHNwYW46OmJlZm9yZSwgLmNkLW5hdi10cmlnZ2VyIHNwYW46OmFmdGVyIHtcbiAgLyogaGFtYnVyZ2VyIGljb24gaW4gQ1NTICovXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBoZWlnaHQ6IDNweDtcbiAgd2lkdGg6IDI0cHg7XG4gIGJhY2tncm91bmQ6ICM0NTU2NTI7IH1cbi5jZC1uYXYtdHJpZ2dlciBzcGFuIHtcbiAgLyogbGluZSBpbiB0aGUgY2VudGVyICovXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIHJpZ2h0OiAxMHB4O1xuICBtYXJnaW4tdG9wOiAtMnB4O1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDAuM3MgMC4zczsgfVxuLmNkLW5hdi10cmlnZ2VyIHNwYW46OmJlZm9yZSwgLmNkLW5hdi10cmlnZ2VyIHNwYW46OmFmdGVyIHtcbiAgLyogb3RoZXIgMiBsaW5lcyAqL1xuICBjb250ZW50OiAnJztcbiAgcmlnaHQ6IDA7XG4gIC8qIEZvcmNlIEhhcmR3YXJlIEFjY2VsZXJhdGlvbiBpbiBXZWJLaXQgKi9cbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApO1xuICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gIHRyYW5zZm9ybS1vcmlnaW46IDAlIDUwJTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MgMC4zczsgfVxuLmNkLW5hdi10cmlnZ2VyIHNwYW46OmJlZm9yZSB7XG4gIC8qIG1lbnUgaWNvbiB0b3AgbGluZSAqL1xuICB0b3A6IC02cHg7IH1cbi5jZC1uYXYtdHJpZ2dlciBzcGFuOjphZnRlciB7XG4gIC8qIG1lbnUgaWNvbiBib3R0b20gbGluZSAqL1xuICB0b3A6IDZweDsgfVxuLmNkLW5hdi10cmlnZ2VyLm5hdi1pcy12aXNpYmxlIHNwYW4ge1xuICAvKiBoaWRlIGxpbmUgaW4gdGhlIGNlbnRlciAqL1xuICBiYWNrZ3JvdW5kOiByZ2JhKDY5LCA4NiwgODIsIDApOyB9XG4uY2QtbmF2LXRyaWdnZXIubmF2LWlzLXZpc2libGUgc3Bhbjo6YmVmb3JlLCAuY2QtbmF2LXRyaWdnZXIubmF2LWlzLXZpc2libGUgc3Bhbjo6YWZ0ZXIge1xuICAvKiBrZWVwIHZpc2libGUgb3RoZXIgMiBsaW5lcyAqL1xuICBiYWNrZ3JvdW5kOiAjNDU1NjUyOyB9XG4uY2QtbmF2LXRyaWdnZXIubmF2LWlzLXZpc2libGUgc3Bhbjo6YmVmb3JlIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDRweCkgdHJhbnNsYXRlWSgtM3B4KSByb3RhdGUoNDVkZWcpOyB9XG4uY2QtbmF2LXRyaWdnZXIubmF2LWlzLXZpc2libGUgc3Bhbjo6YWZ0ZXIge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNHB4KSB0cmFuc2xhdGVZKDJweCkgcm90YXRlKC00NWRlZyk7IH1cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLmNkLW5hdi10cmlnZ2VyIHtcbiAgICBkaXNwbGF5OiBub25lOyB9IH1cblxuLmNkLXByaW1hcnktbmF2IHtcbiAgcmlnaHQ6IDA7IH1cblxuLmNkLXByaW1hcnktbmF2IHVsIHtcbiAgcmlnaHQ6IDIwcHg7IH1cblxuLmNkLXByaW1hcnktbmF2LCAuY2QtcHJpbWFyeS1uYXYgdWwge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMjYwcHg7XG4gIGJhY2tncm91bmQ6ICM0NTU2NTI7XG4gIG92ZXJmbG93OiBhdXRvO1xuICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7XG4gIHotaW5kZXg6IDE7XG4gIC8qIEZvcmNlIEhhcmR3YXJlIEFjY2VsZXJhdGlvbiBpbiBXZWJLaXQgKi9cbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzOyB9XG4gIC5jZC1wcmltYXJ5LW5hdiBhLCAuY2QtcHJpbWFyeS1uYXYgdWwgYSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZm9udC1zaXplOiAxLjJyZW07XG4gICAgaGVpZ2h0OiA1MHB4O1xuICAgIGxpbmUtaGVpZ2h0OiA1MHB4O1xuICAgIHBhZGRpbmc6IDAgMjBweDtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzUwNjQ1ZjtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVooMCk7XG4gICAgd2lsbC1jaGFuZ2U6IHRyYW5zZm9ybSwgb3BhY2l0eTtcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcywgb3BhY2l0eSAwLjNzOyB9XG4gIC5jZC1wcmltYXJ5LW5hdi5pcy1oaWRkZW4sIC5jZC1wcmltYXJ5LW5hdiB1bC5pcy1oaWRkZW4ge1xuICAgIC8qIHNlY29uZGFyeSBuYXZpZ2F0aW9ucyBoaWRkZW4gYnkgZGVmYXVsdCAqL1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMDAlKTsgfVxuICAuY2QtcHJpbWFyeS1uYXYubW92ZXMtb3V0ID4gbGkgPiBhLCAuY2QtcHJpbWFyeS1uYXYgdWwubW92ZXMtb3V0ID4gbGkgPiBhIHtcbiAgICAvKiBwdXNoIHRoZSBuYXZpZ2F0aW9uIGl0ZW1zIHRvIHRoZSBsZWZ0IC0gYW5kIGxvd2VyIGRvd24gb3BhY2l0eSAtIHdoZW4gc2Vjb25kYXJ5IG5hdiBzbGlkZXMgaW4gKi9cbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMCUpO1xuICAgIG9wYWNpdHk6IDA7IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjJweCkge1xuICAubmF2LW9uLWxlZnQgLmNkLXByaW1hcnktbmF2LCAubmF2LW9uLWxlZnQgLmNkLXByaW1hcnktbmF2IHVsIHtcbiAgICByaWdodDogYXV0bztcbiAgICBsZWZ0OiAwOyB9IH1cblxuLmNkLXByaW1hcnktbmF2IC5zZWUtYWxsIGEge1xuICAvKiBkaWZmZXJlbnQgc3R5bGUgZm9yIHRoZSBTZWUgYWxsIGJ1dHRvbiBvbiBtb2JpbGUgYW5kIHRhYmxldCAqL1xuICBjb2xvcjogIzI2N2U2NDsgfVxuLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtZ2FsbGVyeSAuY2QtbmF2LWl0ZW0sIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWljb25zIC5jZC1uYXYtaXRlbSB7XG4gIC8qIGl0ZW1zIHdpdGggcGljdHVyZSAob3IgaWNvbikgYW5kIHRpdGxlICovXG4gIGhlaWdodDogODBweDtcbiAgbGluZS1oZWlnaHQ6IDgwcHg7IH1cbiAgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtZ2FsbGVyeSAuY2QtbmF2LWl0ZW0gaDMsIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWljb25zIC5jZC1uYXYtaXRlbSBoMyB7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpczsgfVxuLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtZ2FsbGVyeSAuY2QtbmF2LWl0ZW0gaW1nIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBkaXNwbGF5OiBibG9jaztcbiAgaGVpZ2h0OiA0MHB4O1xuICB3aWR0aDogYXV0bztcbiAgbGVmdDogMjBweDtcbiAgdG9wOiA1MCU7XG4gIG1hcmdpbi10b3A6IC0yMHB4OyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAxMDIycHgpIHtcbiAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1nYWxsZXJ5IC5jZC1uYXYtaXRlbSBpbWcge1xuICAgICAgZGlzcGxheTogbm9uZTsgfSB9XG4uY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyAuY2QtbmF2LWl0ZW0ge1xuICBwYWRkaW5nLWxlZnQ6IDc1cHg7IH1cbiAgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtaWNvbnMgLmNkLW5hdi1pdGVtIHAge1xuICAgIGNvbG9yOiAjNDU1NjUyO1xuICAgIGZvbnQtc2l6ZTogMS4zcmVtO1xuICAgIC8qIGhpZGUgZGVzY3JpcHRpb24gb24gc21hbGwgZGV2aWNlcyAqL1xuICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtaWNvbnMgLmNkLW5hdi1pdGVtOjpiZWZvcmUge1xuICAgIC8qIGl0ZW0gaWNvbiAqL1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAyMHB4O1xuICAgIHRvcDogNTAlO1xuICAgIG1hcmdpbi10b3A6IC0yMHB4O1xuICAgIHdpZHRoOiA0MHB4O1xuICAgIGhlaWdodDogNDBweDtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1zaXplOiA0MHB4IDQwcHg7IH1cbiAgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtaWNvbnMgLmNkLW5hdi1pdGVtLml0ZW0tMTo6YmVmb3JlIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIvaW1hZ2VzL2xpbmUtaWNvbi0xLnN2Z1wiKTsgfVxuICAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyAuY2QtbmF2LWl0ZW0uaXRlbS0yOjpiZWZvcmUge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi9pbWFnZXMvbGluZS1pY29uLTIuc3ZnXCIpOyB9XG4gIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWljb25zIC5jZC1uYXYtaXRlbS5pdGVtLTM6OmJlZm9yZSB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiL2ltYWdlcy9saW5lLWljb24tMy5zdmdcIik7IH1cbiAgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtaWNvbnMgLmNkLW5hdi1pdGVtLml0ZW0tNDo6YmVmb3JlIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIvaW1hZ2VzL2xpbmUtaWNvbi00LnN2Z1wiKTsgfVxuICAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyAuY2QtbmF2LWl0ZW0uaXRlbS01OjpiZWZvcmUge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi9pbWFnZXMvbGluZS1pY29uLTUuc3ZnXCIpOyB9XG4gIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWljb25zIC5jZC1uYXYtaXRlbS5pdGVtLTY6OmJlZm9yZSB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiL2ltYWdlcy9saW5lLWljb24tNi5zdmdcIik7IH1cbiAgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtaWNvbnMgLmNkLW5hdi1pdGVtLml0ZW0tNzo6YmVmb3JlIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIvaW1hZ2VzL2xpbmUtaWNvbi03LnN2Z1wiKTsgfVxuICAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyAuY2QtbmF2LWl0ZW0uaXRlbS04OjpiZWZvcmUge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi9pbWFnZXMvbGluZS1pY29uLTguc3ZnXCIpOyB9XG5AbWVkaWEgKG1heC13aWR0aDogMTAyMnB4KSB7XG4gIC5jZC1wcmltYXJ5LW5hdiB7XG4gICAgLyogYnkgZGVmYXVsdCAuY2QtcHJpbWFyeS1uYXYgaXMgaGlkZGVuIC0gdHJpY2sgZm9yIGlPUyBkZXZpY2VzIHdoZXJlIHlvdSBjYW4gc2VlIHRoZSBuYXZpZ2F0aW9uIGlmIHlvdSBwdWxsIGRvd24gKi9cbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gICAgdHJhbnNpdGlvbjogdmlzaWJpbGl0eSAwcyAwLjNzOyB9XG4gICAgLmNkLXByaW1hcnktbmF2Lm5hdi1pcy12aXNpYmxlIHtcbiAgICAgIHZpc2liaWxpdHk6IHZpc2libGU7XG4gICAgICB0cmFuc2l0aW9uOiB2aXNpYmlsaXR5IDBzIDBzOyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAuY2QtcHJpbWFyeS1uYXYge1xuICAgIHBvc2l0aW9uOiBzdGF0aWM7XG4gICAgcGFkZGluZzogMCA1MHB4IDAgMDtcbiAgICBtYXJnaW4tbGVmdDogMjBweDtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgb3ZlcmZsb3c6IHZpc2libGU7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7IH1cbiAgICAuY2QtcHJpbWFyeS1uYXY6YWZ0ZXIge1xuICAgICAgY29udGVudDogXCJcIjtcbiAgICAgIGRpc3BsYXk6IHRhYmxlO1xuICAgICAgY2xlYXI6IGJvdGg7IH1cbiAgICAuY2QtcHJpbWFyeS1uYXYubW92ZXMtb3V0ID4gbGkgPiBhIHtcbiAgICAgIC8qIHJlc2V0IG1vYmlsZSBzdHlsZSAqL1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgICAgb3BhY2l0eTogMTsgfVxuICAgIC5jZC1wcmltYXJ5LW5hdiB1bCB7XG4gICAgICBwb3NpdGlvbjogc3RhdGljO1xuICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgICAgd2lkdGg6IGF1dG87XG4gICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgIHotaW5kZXg6IDM7IH1cbiAgICAgIC5jZC1wcmltYXJ5LW5hdiB1bC5pcy1oaWRkZW4ge1xuICAgICAgICAvKiByZXNldCBtb2JpbGUgc3R5bGUgKi9cbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApOyB9XG4gICAgICAuY2QtcHJpbWFyeS1uYXYgdWwubW92ZXMtb3V0ID4gbGkgPiBhIHtcbiAgICAgICAgLyogcmVzZXQgbW9iaWxlIHN0eWxlICovXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAgICAgb3BhY2l0eTogMTsgfVxuICAgIC5jZC1wcmltYXJ5LW5hdiA+IGxpIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIG1hcmdpbi1sZWZ0OiAuNXJlbTsgfVxuICAgIC5jZC1wcmltYXJ5LW5hdiA+IGxpID4gYSB7XG4gICAgICAvKiBtYWluIG5hdmlnYXRpb24gYnV0dG9ucyBzdHlsZSAqL1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgaGVpZ2h0OiA4MHB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDgwcHg7XG4gICAgICBwYWRkaW5nOiAwO1xuICAgICAgY29sb3I6ICM0NTU2NTI7XG4gICAgICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgICAgIGJvcmRlci1ib3R0b206IG5vbmU7XG4gICAgICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzLCBib3gtc2hhZG93IDAuM3M7IH1cbiAgICAgIC5jZC1wcmltYXJ5LW5hdiA+IGxpID4gYTpob3ZlciB7XG4gICAgICAgIGNvbG9yOiAjMjY3ZTY0O1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cbiAgICAgIC5jZC1wcmltYXJ5LW5hdiA+IGxpID4gYS5zZWxlY3RlZCB7XG4gICAgICAgIGNvbG9yOiAjMjY3ZTY0O1xuICAgICAgICBib3gtc2hhZG93OiBpbnNldCAwIC0ycHggMCAjMjY3ZTY0OyB9XG4gICAgLmNkLXByaW1hcnktbmF2IC5nby1iYWNrLCAuY2QtcHJpbWFyeS1uYXYgLnNlZS1hbGwge1xuICAgICAgZGlzcGxheTogbm9uZTsgfVxuICAgIC5jZC1wcmltYXJ5LW5hdiAuY2Qtc2Vjb25kYXJ5LW5hdiwgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtZ2FsbGVyeSwgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtaWNvbnMge1xuICAgICAgLyogZHJvcGRvd24gbWVudSBzdHlsZSAqL1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiA4MHB4O1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgICAgcGFkZGluZzogMnJlbTtcbiAgICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDAgI2U1ZTZlNywgMCAzcHggNnB4IHJnYmEoMCwgMCwgMCwgMC4wNSk7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IC4zcyAwcywgdmlzaWJpbGl0eSAwcyAwczsgfVxuICAgICAgLmNkLXByaW1hcnktbmF2IC5jZC1zZWNvbmRhcnktbmF2OmFmdGVyLCAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1nYWxsZXJ5OmFmdGVyLCAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29uczphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIGRpc3BsYXk6IHRhYmxlO1xuICAgICAgICBjbGVhcjogYm90aDsgfVxuICAgICAgLmNkLXByaW1hcnktbmF2IC5jZC1zZWNvbmRhcnktbmF2LmlzLWhpZGRlbiwgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtZ2FsbGVyeS5pcy1oaWRkZW4sIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWljb25zLmlzLWhpZGRlbiB7XG4gICAgICAgIG9wYWNpdHk6IDA7XG4gICAgICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAuM3MgMHMsIHZpc2liaWxpdHkgMHMgLjNzOyB9XG4gICAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLXNlY29uZGFyeS1uYXYgPiAuc2VlLWFsbCwgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtZ2FsbGVyeSA+IC5zZWUtYWxsLCAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyA+IC5zZWUtYWxsIHtcbiAgICAgICAgLyogdGhpcyBpcyB0aGUgQklHIFNlZSBhbGwgYnV0dG9uIGF0IHRoZSBib3R0b20gb2YgdGhlIGRyb3Bkb3duIG1lbnUgKi9cbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICBoZWlnaHQ6IDgwcHg7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICAvKiByZXNldCBzb21lIGluaGVyaXRlZCBzdHlsZSAqL1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIHBhZGRpbmc6IDA7IH1cbiAgICAgICAgLmNkLXByaW1hcnktbmF2IC5jZC1zZWNvbmRhcnktbmF2ID4gLnNlZS1hbGwgYSwgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtZ2FsbGVyeSA+IC5zZWUtYWxsIGEsIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWljb25zID4gLnNlZS1hbGwgYSB7XG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICB0b3A6IDA7XG4gICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICBmb250LXNpemU6IDIuMnJlbTtcbiAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgbGluZS1oZWlnaHQ6IDgwcHg7XG4gICAgICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlNWU2ZTc7XG4gICAgICAgICAgLyogcmVzZXQgc29tZSBpbmhlcml0ZWQgc3R5bGUgKi9cbiAgICAgICAgICBib3JkZXItYm90dG9tOiBub25lO1xuICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICAgIHRyYW5zaXRpb246IGNvbG9yIDAuMnMsIGJhY2tncm91bmQgMC4ycywgYm9yZGVyIDAuMnM7IH1cbiAgICAgICAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLXNlY29uZGFyeS1uYXYgPiAuc2VlLWFsbCBhOmhvdmVyLCAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1nYWxsZXJ5ID4gLnNlZS1hbGwgYTpob3ZlciwgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtaWNvbnMgPiAuc2VlLWFsbCBhOmhvdmVyIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICM0NTU2NTI7XG4gICAgICAgICAgICBib3JkZXItY29sb3I6ICM0NTU2NTI7XG4gICAgICAgICAgICBjb2xvcjogI2ZmZjsgfVxuICAgIC5jZC1wcmltYXJ5LW5hdiAuY2Qtc2Vjb25kYXJ5LW5hdiA+IGxpIHtcbiAgICAgIC8qIGNoYW5nZSB0aGUgaGVpZ2h0IGFjY29yZGluZyB0byB5b3VyIG5lZWRzIC0geW91IGNhbiBldmVuIHNldCBoZWlnaHQ6IGF1dG8gKi9cbiAgICAgIGhlaWdodDogMzQwcHg7XG4gICAgICAvKiBoZXJlIHlvdSBzZXQgdGhlIG51bWJlciBvZiBjb2x1bW5zIC0gdXNlIHdpZHRoIHBlcmNlbnRhZ2UgKi9cbiAgICAgIHdpZHRoOiAyMyU7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIG1hcmdpbi1yaWdodDogMi42NiU7XG4gICAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjZTVlNmU3O1xuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgIG92ZXJmbG93LXg6IGhpZGRlbjtcbiAgICAgIG92ZXJmbG93LXk6IGF1dG87XG4gICAgICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7IH1cbiAgICAgIC5jZC1wcmltYXJ5LW5hdiAuY2Qtc2Vjb25kYXJ5LW5hdiA+IGxpOm50aC1jaGlsZCg0bisyKSB7XG4gICAgICAgIC8qICsyIGJlY2F1c2Ugd2UgaGF2ZSAyIGxpc3QgaXRlbXMgd2l0aCBkaXNwbGF5Om5vbmUgKi9cbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgICAgICBib3JkZXItcmlnaHQ6IG5vbmU7IH1cbiAgICAgIC5jZC1wcmltYXJ5LW5hdiAuY2Qtc2Vjb25kYXJ5LW5hdiA+IGxpID4gYSB7XG4gICAgICAgIC8qIHNlY29uZGFyeSBuYXYgdGl0bGUgKi9cbiAgICAgICAgY29sb3I6ICMyNjdlNjQ7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgICBmb250LXNpemU6IDEuNnJlbTtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogLjZlbTsgfVxuICAgIC5jZC1wcmltYXJ5LW5hdiAuY2Qtc2Vjb25kYXJ5LW5hdiBhIHtcbiAgICAgIGhlaWdodDogMzBweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAzMHB4O1xuICAgICAgcGFkZGluZzogMCAxOCUgMCAwO1xuICAgICAgY29sb3I6ICM0NTU2NTI7XG4gICAgICBib3JkZXItYm90dG9tOiBub25lO1xuICAgICAgZm9udC1zaXplOiAxLjRyZW07IH1cbiAgICAgIC5jZC1wcmltYXJ5LW5hdiAuY2Qtc2Vjb25kYXJ5LW5hdiBhOmhvdmVyIHtcbiAgICAgICAgY29sb3I6ICMyNjdlNjQ7IH1cbiAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLXNlY29uZGFyeS1uYXYgdWwge1xuICAgICAgLyogRm9yY2UgSGFyZHdhcmUgQWNjZWxlcmF0aW9uIGluIFdlYktpdCAqL1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApOyB9XG4gICAgLmNkLXByaW1hcnktbmF2IC5jZC1zZWNvbmRhcnktbmF2IHVsIHVsIHtcbiAgICAgIC8qIHRlcnRpYXJ5IG5hdmlnYXRpb24gKi9cbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogMDtcbiAgICAgIGxlZnQ6IDA7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICB3aWR0aDogMTAwJTsgfVxuICAgICAgLmNkLXByaW1hcnktbmF2IC5jZC1zZWNvbmRhcnktbmF2IHVsIHVsLmlzLWhpZGRlbiB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMDAlKTsgfVxuICAgICAgLmNkLXByaW1hcnktbmF2IC5jZC1zZWNvbmRhcnktbmF2IHVsIHVsIC5nby1iYWNrIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7IH1cbiAgICAgICAgLmNkLXByaW1hcnktbmF2IC5jZC1zZWNvbmRhcnktbmF2IHVsIHVsIC5nby1iYWNrIGEge1xuICAgICAgICAgIGNvbG9yOiB0cmFuc3BhcmVudDsgfVxuICAgICAgLmNkLXByaW1hcnktbmF2IC5jZC1zZWNvbmRhcnktbmF2IHVsIHVsIC5zZWUtYWxsIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7IH1cbiAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLXNlY29uZGFyeS1uYXYgLm1vdmVzLW91dCA+IGxpID4gYSB7XG4gICAgICAvKiBwdXNoIHRoZSBuYXZpZ2F0aW9uIGl0ZW1zIHRvIHRoZSBsZWZ0IC0gYW5kIGxvd2VyIGRvd24gb3BhY2l0eSAtIHdoZW4gdGVydGlhcnkgbmF2IHNsaWRlcyBpbiAqL1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKTsgfVxuICAgIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWdhbGxlcnkge1xuICAgICAgYm94LXNoYWRvdzogMCA1cHggNXB4IHJnYmEoMTAwLCAxMDAsIDEwMCwgMC4zKTsgfVxuICAgICAgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtZ2FsbGVyeSBsaSB7XG4gICAgICAgIC8qIHNldCBoZXJlIG51bWJlciBvZiBjb2x1bW5zIC0gdXNlIHdpZHRoIHBlcmNlbnRhZ2UgKi9cbiAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgIHdpZHRoOiAyNSU7XG4gICAgICAgIHBhZGRpbmc6IDFyZW07IH1cbiAgICAgICAgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtZ2FsbGVyeSBsaTpudGgtY2hpbGQoNG4rMikge1xuICAgICAgICAgIC8qICsyIGJlY2F1c2Ugd2UgaGF2ZSB0d28gYWRkaXRpb25hbCBsaXN0IGl0ZW1zIHdpdGggZGlzcGxheTpub25lICovIH1cbiAgICAgIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWdhbGxlcnkgLmNkLW5hdi1pdGVtIHtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgICAgICBsaW5lLWhlaWdodDogMS4yOyB9XG4gICAgICAgIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWdhbGxlcnkgLmNkLW5hdi1pdGVtIGltZyB7XG4gICAgICAgICAgcG9zaXRpb246IHN0YXRpYztcbiAgICAgICAgICBtYXJnaW4tdG9wOiAwO1xuICAgICAgICAgIGhlaWdodDogYXV0bztcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAuNnJlbTsgfVxuICAgICAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1nYWxsZXJ5IC5jZC1uYXYtaXRlbSBoMyB7XG4gICAgICAgICAgY29sb3I6ICMyNjdlNjQ7XG4gICAgICAgICAgZm9udC1zaXplOiAuOXJlbTtcbiAgICAgICAgICBwYWRkaW5nOiAwIC40cmVtO1xuICAgICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7IH1cbiAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyBsaSB7XG4gICAgICAvKiBzZXQgaGVyZSBudW1iZXIgb2YgY29sdW1ucyAtIHVzZSB3aWR0aCBwZXJjZW50YWdlICovXG4gICAgICB3aWR0aDogMzIlO1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBtYXJnaW46IDAgMiUgMjBweCAwOyB9XG4gICAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyBsaTpudGgtY2hpbGQoM24rMikge1xuICAgICAgICAvKiArMiBiZWNhdXNlIHdlIGhhdmUgdHdvIGFkZGl0aW9uYWwgbGlzdCBpdGVtcyB3aXRoIGRpc3BsYXk6bm9uZSAqL1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7IH1cbiAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyAuY2QtbmF2LWl0ZW0ge1xuICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgICAgIGhlaWdodDogODBweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjI7XG4gICAgICBwYWRkaW5nOiAyNHB4IDAgMCA4NXB4OyB9XG4gICAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyAuY2QtbmF2LWl0ZW06aG92ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kOiAjZmFmYWZiOyB9XG4gICAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyAuY2QtbmF2LWl0ZW0gaDMge1xuICAgICAgICBjb2xvcjogIzI2N2U2NDtcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cbiAgICAgIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWljb25zIC5jZC1uYXYtaXRlbSBwIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7IH1cbiAgICAgIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWljb25zIC5jZC1uYXYtaXRlbTo6YmVmb3JlIHtcbiAgICAgICAgbGVmdDogMjVweDsgfSB9XG5cbi5oYXMtY2hpbGRyZW4gPiBhLCAuZ28tYmFjayBhIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC5oYXMtY2hpbGRyZW4gPiBhOjpiZWZvcmUsIC5oYXMtY2hpbGRyZW4gPiBhOjphZnRlciwgLmdvLWJhY2sgYTo6YmVmb3JlLCAuZ28tYmFjayBhOjphZnRlciB7XG4gICAgLyogYXJyb3cgaWNvbiBpbiBDU1MgLSBmb3IgZWxlbWVudCB3aXRoIG5lc3RlZCB1bm9yZGVyZWQgbGlzdHMgKi9cbiAgICBjb250ZW50OiAnJztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1MCU7XG4gICAgbWFyZ2luLXRvcDogLTFweDtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgaGVpZ2h0OiAycHg7XG4gICAgd2lkdGg6IDEwcHg7XG4gICAgYmFja2dyb3VuZDogIzVjNzI2ZDtcbiAgICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47IH1cbiAgLmhhcy1jaGlsZHJlbiA+IGE6OmJlZm9yZSwgLmdvLWJhY2sgYTo6YmVmb3JlIHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7IH1cbiAgLmhhcy1jaGlsZHJlbiA+IGE6OmFmdGVyLCAuZ28tYmFjayBhOjphZnRlciB7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgLmhhcy1jaGlsZHJlbiA+IGE6OmJlZm9yZSwgLmhhcy1jaGlsZHJlbiA+IGE6OmFmdGVyLCAuZ28tYmFjayBhOjpiZWZvcmUsIC5nby1iYWNrIGE6OmFmdGVyIHtcbiAgICAgIGJhY2tncm91bmQ6ICNjYWNkY2Y7IH1cbiAgICAuaGFzLWNoaWxkcmVuID4gYTpob3Zlcjo6YmVmb3JlLCAuaGFzLWNoaWxkcmVuID4gYTpob3Zlcjo6YWZ0ZXIsIC5nby1iYWNrIGE6aG92ZXI6OmJlZm9yZSwgLmdvLWJhY2sgYTpob3Zlcjo6YWZ0ZXIge1xuICAgICAgYmFja2dyb3VuZDogIzI2N2U2NDsgfSB9XG5cbi5oYXMtY2hpbGRyZW4gPiBhIHtcbiAgcGFkZGluZy1yaWdodDogNDBweDsgfVxuICAuaGFzLWNoaWxkcmVuID4gYTo6YmVmb3JlLCAuaGFzLWNoaWxkcmVuID4gYTo6YWZ0ZXIge1xuICAgIC8qIGFycm93IGdvZXMgb24gdGhlIHJpZ2h0IHNpZGUgLSBjaGlsZHJlbiBuYXZpZ2F0aW9uICovXG4gICAgcmlnaHQ6IDIwcHg7XG4gICAgdHJhbnNmb3JtLW9yaWdpbjogOXB4IDUwJTsgfVxuXG4uY2QtcHJpbWFyeS1uYXYgLmdvLWJhY2sgYSB7XG4gIHBhZGRpbmctbGVmdDogNDBweDsgfVxuICAuY2QtcHJpbWFyeS1uYXYgLmdvLWJhY2sgYTo6YmVmb3JlLCAuY2QtcHJpbWFyeS1uYXYgLmdvLWJhY2sgYTo6YWZ0ZXIge1xuICAgIC8qIGFycm93IGdvZXMgb24gdGhlIGxlZnQgc2lkZSAtIGdvIGJhY2sgYnV0dG9uICovXG4gICAgbGVmdDogMjBweDtcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiAxcHggNTAlOyB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLmhhcy1jaGlsZHJlbiA+IGE6OmJlZm9yZSwgLmhhcy1jaGlsZHJlbiA+IGE6OmFmdGVyIHtcbiAgICByaWdodDogMTUlOyB9XG4gIC5jZC1wcmltYXJ5LW5hdiA+IC5oYXMtY2hpbGRyZW4gPiBhIHtcbiAgICAvKiBtYWluIG5hdmlnYXRpb24gYXJyb3dzIG9uIGxhcmdlciBkZXZpY2VzICovXG4gICAgcGFkZGluZy1yaWdodDogMzBweCAhaW1wb3J0YW50OyB9XG4gICAgLmNkLXByaW1hcnktbmF2ID4gLmhhcy1jaGlsZHJlbiA+IGE6OmJlZm9yZSwgLmNkLXByaW1hcnktbmF2ID4gLmhhcy1jaGlsZHJlbiA+IGE6OmFmdGVyIHtcbiAgICAgIHdpZHRoOiA5cHg7XG4gICAgICB0cmFuc2Zvcm0tb3JpZ2luOiA1MCUgNTAlO1xuICAgICAgYmFja2dyb3VuZDogI2NhY2RjZjtcbiAgICAgIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICAgIHRyYW5zaXRpb246IHdpZHRoIDAuM3MsIHRyYW5zZm9ybSAwLjNzOyB9XG4gICAgLmNkLXByaW1hcnktbmF2ID4gLmhhcy1jaGlsZHJlbiA+IGE6OmJlZm9yZSB7XG4gICAgICByaWdodDogMTJweDsgfVxuICAgIC5jZC1wcmltYXJ5LW5hdiA+IC5oYXMtY2hpbGRyZW4gPiBhOjphZnRlciB7XG4gICAgICByaWdodDogN3B4OyB9XG4gICAgLmNkLXByaW1hcnktbmF2ID4gLmhhcy1jaGlsZHJlbiA+IGEuc2VsZWN0ZWQ6OmJlZm9yZSwgLmNkLXByaW1hcnktbmF2ID4gLmhhcy1jaGlsZHJlbiA+IGEuc2VsZWN0ZWQ6OmFmdGVyIHtcbiAgICAgIHdpZHRoOiAxNHB4OyB9XG4gICAgLmNkLXByaW1hcnktbmF2ID4gLmhhcy1jaGlsZHJlbiA+IGEuc2VsZWN0ZWQ6OmJlZm9yZSB7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNXB4KSByb3RhdGUoLTQ1ZGVnKTsgfVxuICAgIC5jZC1wcmltYXJ5LW5hdiA+IC5oYXMtY2hpbGRyZW4gPiBhLnNlbGVjdGVkOjphZnRlciB7XG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7IH1cbiAgLmNkLXNlY29uZGFyeS1uYXYgPiAuaGFzLWNoaWxkcmVuID4gYTo6YmVmb3JlLCAuY2Qtc2Vjb25kYXJ5LW5hdiA+IC5oYXMtY2hpbGRyZW4gPiBhOjphZnRlciB7XG4gICAgLyogcmVtb3ZlIGFycm93cyBvbiBzZWNvbmRhcnkgbmF2IHRpdGxlcyAqL1xuICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgLmNkLXByaW1hcnktbmF2IC5nby1iYWNrIGEge1xuICAgIHBhZGRpbmctbGVmdDogMjBweDsgfVxuICAgIC5jZC1wcmltYXJ5LW5hdiAuZ28tYmFjayBhOjpiZWZvcmUsIC5jZC1wcmltYXJ5LW5hdiAuZ28tYmFjayBhOjphZnRlciB7XG4gICAgICBsZWZ0OiAxcHg7IH0gfVxuXG4uY2Qtc2VhcmNoIHtcbiAgZmxvYXQ6IHJpZ2h0O1xuICBtYXJnaW46IDEuMjVyZW07IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgLmNkLXNlYXJjaCB7XG4gICAgICBmbG9hdDogbm9uZTtcbiAgICAgIG1hcmdpbjogMXJlbSBhdXRvIDA7XG4gICAgICB3aWR0aDogMTAwJTsgfSB9XG4gIC5jZC1zZWFyY2ggZm9ybSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC5jZC1zZWFyY2ggaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiL2ltYWdlcy9zZWFyY2gtaWNvbi5wbmdcIik7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgdGV4dC1pbmRlbnQ6IC05OTk5OXB4O1xuICAgIGhlaWdodDogMjJweDtcbiAgICB3aWR0aDogMjJweDtcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gICAgYm9yZGVyOiAwO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDZweDtcbiAgICByaWdodDogM3B4O1xuICAgIGJhY2tncm91bmQtc2l6ZTogNzUlOyB9XG4gIC5jZC1zZWFyY2ggaW5wdXRbdHlwZT1cInNlYXJjaFwiXSB7XG4gICAgdGV4dC1pbmRlbnQ6IDFyZW07XG4gICAgYXBwZWFyYW5jZTogbm9uZTtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjOyB9XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAuY2Qtc2VhcmNoIGlucHV0W3R5cGU9XCJzZWFyY2hcIl0ge1xuICAgICAgICB3aWR0aDogMTAwJTsgfSB9XG4gICAgLmNkLXNlYXJjaCBpbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyLCAuY2Qtc2VhcmNoIGlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi1tb3otcGxhY2Vob2xkZXIsIC5jZC1zZWFyY2ggaW5wdXRbdHlwZT1cInNlYXJjaFwiXTotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgICAgY29sb3I6ICNjYWNkY2Y7IH1cbiAgICAuY2Qtc2VhcmNoIGlucHV0W3R5cGU9XCJzZWFyY2hcIl06Zm9jdXMge1xuICAgICAgb3V0bGluZTogbm9uZTsgfVxuICAuY2Qtc2VhcmNoLmlzLXZpc2libGUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IC4zcyAwcywgdmlzaWJpbGl0eSAwcyAwczsgfVxuICAubmF2LWlzLWZpeGVkIC5jZC1zZWFyY2gge1xuICAgIHBvc2l0aW9uOiBmaXhlZDsgfVxuXG4uY2Qtb3ZlcmxheSB7XG4gIC8qIHNoYWRvdyBsYXllciB2aXNpYmxlIHdoZW4gbmF2aWdhdGlvbiBpcyBhY3RpdmUgKi9cbiAgcG9zaXRpb246IGZpeGVkO1xuICB6LWluZGV4OiAyO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICBvcGFjaXR5OiAwO1xuICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyAwcywgdmlzaWJpbGl0eSAwcyAwLjNzLCB0cmFuc2Zvcm0gMC4zcyAwczsgfVxuICAuY2Qtb3ZlcmxheS5pcy12aXNpYmxlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHZpc2liaWxpdHk6IHZpc2libGU7XG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzIDBzLCB2aXNpYmlsaXR5IDBzIDBzLCB0cmFuc2Zvcm0gMC4zcyAwczsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogMTAyMnB4KSB7XG4gICAgLmNkLW92ZXJsYXkuaXMtdmlzaWJsZSB7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7IH1cbiAgICAubmF2LW9uLWxlZnQgLmNkLW92ZXJsYXkuaXMtdmlzaWJsZSB7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjYwcHgpOyB9XG4gICAgLmNkLW92ZXJsYXkuaXMtdmlzaWJsZS5zZWFyY2gtaXMtdmlzaWJsZSwgLm5hdi1vbi1sZWZ0IC5jZC1vdmVybGF5LmlzLXZpc2libGUuc2VhcmNoLWlzLXZpc2libGUge1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApOyB9IH1cblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqXG4gKnN1cHBvcnQgZm9yIG5vIGpzXG4gKlxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLm5vLWpzIC5jZC1wcmltYXJ5LW5hdiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaGVpZ2h0OiBhdXRvO1xuICB3aWR0aDogMTAwJTtcbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIHZpc2liaWxpdHk6IHZpc2libGU7XG4gIHotaW5kZXg6IDI7IH1cblxuLm5vLWpzIC5jZC1zZWFyY2gge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogMDtcbiAgb3BhY2l0eTogMTtcbiAgdmlzaWJpbGl0eTogdmlzaWJsZTsgfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5uby1qcyAuY2QtcHJpbWFyeS1uYXYge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB6LWluZGV4OiAzO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB3aWR0aDogYXV0bztcbiAgICB0b3A6IDA7XG4gICAgcmlnaHQ6IDE1MHB4O1xuICAgIHBhZGRpbmc6IDA7IH1cbiAgLm5vLWpzIC5uYXYtaXMtZml4ZWQgLmNkLXByaW1hcnktbmF2IHtcbiAgICBwb3NpdGlvbjogZml4ZWQ7IH0gfVxuXG4ubmF2LWZvb3RlciB7XG4gIHBhZGRpbmc6IDMwcHggMjBweCAyMHB4O1xuICB0ZXh0LWFsaWduOiBsZWZ0OyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5uYXYtZm9vdGVyIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuICAubmF2LWZvb3Rlcl9faGVhZGluZyB7XG4gICAgZm9udC1mYW1pbHk6IE5ld3MgQ3ljbGUsIHNhbnMtc2VyaWY7XG4gICAgZm9udC1zaXplOiAxcmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgbWFyZ2luLWJvdHRvbTogMXJlbTsgfVxuICAgIC5uYXYtZm9vdGVyX19oZWFkaW5nIGEge1xuICAgICAgY29sb3I6ICMzMzM7IH1cbiAgICAgIC5uYXYtZm9vdGVyX19oZWFkaW5nIGE6aG92ZXIge1xuICAgICAgICBjb2xvcjogIzI2N2U2NDsgfVxuICAubmF2LWZvb3Rlcl9fbGluayB7XG4gICAgZm9udC1zaXplOiAxNHB4OyB9XG4gIC5uYXYtZm9vdGVyX19ib3gge1xuICAgIHBhZGRpbmc6IDAgMTBweDtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wOyB9XG4gIC5uYXYtZm9vdGVyX19ib3gtbmFycm93IHtcbiAgICBwYWRkaW5nOiAwIDEwcHg7XG4gICAgdmVydGljYWwtYWxpZ246IHRvcDsgfVxuICAubmF2LWZvb3Rlcl9fYnV0dG9uIHtcbiAgICBib3JkZXItd2lkdGg6IDFweDtcbiAgICBjb2xvcjogIzI2N2U2NDtcbiAgICBmb250LXNpemU6IC45cmVtO1xuICAgIG1hcmdpbi1ib3R0b206IDFyZW07XG4gICAgcGFkZGluZzogLjVyZW0gMXJlbTtcbiAgICB3aWR0aDogMTAwJTsgfVxuICAubmF2LWZvb3Rlcl9fc3ViLWxpbmtzIHtcbiAgICBmb250LXNpemU6IDE0cHg7IH1cbiAgICAubmF2LWZvb3Rlcl9fc3ViLWxpbmtzIGxpOm50aC1jaGlsZCgxKSB7XG4gICAgICBmb250LWZhbWlseTogTmV3cyBDeWNsZSwgc2Fucy1zZXJpZjtcbiAgICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgICBtYXJnaW4tYm90dG9tOiAuNXJlbTsgfVxuICAgICAgLm5hdi1mb290ZXJfX3N1Yi1saW5rcyBsaTpudGgtY2hpbGQoMSkgYSB7XG4gICAgICAgIGNvbG9yOiAjMzMzOyB9XG4gICAgICAgIC5uYXYtZm9vdGVyX19zdWItbGlua3MgbGk6bnRoLWNoaWxkKDEpIGE6aG92ZXIge1xuICAgICAgICAgIGNvbG9yOiAjMjY3ZTY0OyB9XG5cbi5iYW5uZXItdGFsbCB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChpbWFnZXMvaW5kZXhfaGVyby0yLmpwZyk7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgaGVpZ2h0OiAyMDBweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3NjlweCkge1xuICAgIC5iYW5uZXItdGFsbCB7XG4gICAgICBoZWlnaHQ6IDQ2NXB4OyB9IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgLmJhbm5lci10YWxsIHtcbiAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGxlZnQ7XG4gICAgICBoZWlnaHQ6IDI2NXB4OyB9IH1cbiAgLmJhbm5lci10YWxsX19oZWFkbGluZSB7XG4gICAgYm90dG9tOiAzcmVtO1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGZvbnQtZmFtaWx5OiBzZXJpZjtcbiAgICBmb250LXNpemU6IDRyZW07XG4gICAgZm9udC13ZWlnaHQ6IDgwMDtcbiAgICBsZWZ0OiAycmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBtYXJnaW46IDAgMCAxcmVtIDFyZW07XG4gICAgdGV4dC1zaGFkb3c6IDJweCAycHggMnB4ICMzMzM7IH1cbiAgICAuYmFubmVyLXRhbGxfX2hlYWRsaW5lIHN1cCB7XG4gICAgICBmb250LXNpemU6IDEuNzVyZW07IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgICAgIC5iYW5uZXItdGFsbF9faGVhZGxpbmUge1xuICAgICAgICBwb3NpdGlvbjogc3RhdGljO1xuICAgICAgICBmb250LXNpemU6IDJyZW07XG4gICAgICAgIHBhZGRpbmc6IDJyZW07IH0gfVxuXG4uYmFubmVyLXN0YW5kYXJkIHtcbiAgYmFja2dyb3VuZDogIzI2N2U2NDtcbiAgY29sb3I6ICNmZmY7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBoZWlnaHQ6IGF1dG87IH1cbiAgLmJhbm5lci1zdGFuZGFyZCBpbWcge1xuICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gIC5iYW5uZXItc3RhbmRhcmRfX2JveCB7XG4gICAgcGFkZGluZzogMXJlbSAycmVtOyB9XG4gIC5iYW5uZXItc3RhbmRhcmRfX2hlYWRpbmcge1xuICAgIGNvbG9yOiAjZmZmOyB9XG4gIC5iYW5uZXItc3RhbmRhcmRfX21lZGlhIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWNlZWU2OyB9XG5cbi5iYW5uZXItcGFub3JhbWEge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1hZ2VzL3RyZWVzLmpwZyk7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgaGVpZ2h0OiAyNTVweDsgfVxuXG4uY2FyZC1kaXB0aWMge1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNjY2M7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjY2NjOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5jYXJkLWRpcHRpYyB7XG4gICAgICBmbGV4LWZsb3c6IGNvbHVtbjsgfSB9XG4gIC5jYXJkLWRpcHRpY19fYm94IHtcbiAgICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgcGFkZGluZzogMnJlbSAxcmVtOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDc2OXB4KSB7XG4gICAgICAuY2FyZC1kaXB0aWNfX2JveCB7XG4gICAgICAgIHBhZGRpbmc6IDJyZW0gMXJlbSAycmVtIDJyZW07IH0gfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjlweCkge1xuICAgICAgLmNhcmQtZGlwdGljX19ib3g6bnRoLWNoaWxkKDIpIHtcbiAgICAgICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjY2NjO1xuICAgICAgICBwYWRkaW5nOiAycmVtIDJyZW0gMnJlbSAxcmVtOyB9IH1cbiAgLmNhcmQtZGlwdGljX19oZWFkaW5nIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgLmNhcmQtZGlwdGljX19tZWRpYSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMnJlbTsgfVxuICAuY2FyZC1kaXB0aWNfX3RleHQge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW4tYm90dG9tOiAycmVtOyB9XG4gIC5jYXJkLWRpcHRpYyB1bCB7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgICAuY2FyZC1kaXB0aWMgdWwgbGkge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgcGFkZGluZzogLjVyZW07XG4gICAgICB3aWR0aDogNDclOyB9XG4gIC5jYXJkLWRpcHRpY19fbGluayB7XG4gICAgY29sb3I6ICMyNjdlNjQ7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGZvbnQtZmFtaWx5OiBQbGF5ZmFpciBEaXNwbGF5LCBzZXJpZjtcbiAgICBwYWRkaW5nOiAwIC40cmVtO1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IH1cbiAgICAuY2FyZC1kaXB0aWNfX2xpbms6aG92ZXIge1xuICAgICAgY29sb3I6ICM0NTU2NTI7IH1cblxuLmNhcmQtYmlvIHtcbiAgcGFkZGluZy1ib3R0b206IDJyZW07IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmNhcmQtYmlvIHtcbiAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZTVlNmU3O1xuICAgICAgbWFyZ2luLWJvdHRvbTogMnJlbTsgfSB9XG4gIC5jYXJkLWJpb19fbWVkaWEge1xuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgIC5jYXJkLWJpb19fbWVkaWEge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAxcmVtO1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH0gfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgLmNhcmQtYmlvX19tZWRpYSBpbWcge1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIHdpZHRoOiAzMyU7IH0gfVxuICAuY2FyZC1iaW9fX2JveCB7XG4gICAgcGFkZGluZy1sZWZ0OiAycmVtO1xuICAgIHBhZGRpbmctdG9wOiAwO1xuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgIC5jYXJkLWJpb19fYm94IHtcbiAgICAgICAgcGFkZGluZzogMDsgfSB9XG4gIC5jYXJkLWJpb19faGVhZGluZyB7XG4gICAgY29sb3I6ICMyNjdlNjQ7XG4gICAgZm9udC1mYW1pbHk6IFBsYXlmYWlyIERpc3BsYXksIHNlcmlmO1xuICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgIG1hcmdpbi1ib3R0b206IDFyZW07IH1cbiAgLmNhcmQtYmlvX19zdWJ0aXRsZSB7XG4gICAgY29sb3I6ICM3ZjdlN2U7XG4gICAgbWFyZ2luLWJvdHRvbTogOHB4OyB9XG4gICAgLmNhcmQtYmlvX19zdWJ0aXRsZSBoMyB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cbiAgICAuY2FyZC1iaW9fX3N1YnRpdGxlIGEge1xuICAgICAgY29sb3I6ICMyNjdlNjQ7XG4gICAgICBtYXJnaW4tbGVmdDogMTBweDsgfVxuICAgICAgLmNhcmQtYmlvX19zdWJ0aXRsZSBhIGkge1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjMjY3ZTY0O1xuICAgICAgICBwYWRkaW5nOiAycHg7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmNhcmQtYmlvX190ZXh0IHtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7IH0gfVxuICAuY2FyZC1iaW9fX3RleHQgKiArICoge1xuICAgIG1hcmdpbi10b3A6IDFyZW07IH1cblxuLmNhcmQtYXJ0aWNsZV9fYm94IHtcbiAgYm94LXNoYWRvdzogMCAxcHggMCAjMjY3ZTY0O1xuICBkaXNwbGF5OiBub25lO1xuICBwYWRkaW5nLXRvcDogMjRweDtcbiAgcGFkZGluZy1ib3R0b206IDI0cHg7IH1cbiAgLmNhcmQtYXJ0aWNsZV9fYm94ICogKyAqIHtcbiAgICBtYXJnaW4tdG9wOiAxcmVtOyB9XG4uY2FyZC1hcnRpY2xlIGE6aG92ZXIge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cbi5jYXJkLWFydGljbGUgaDIge1xuICBjb2xvcjogIzI2N2U2NDtcbiAgZm9udC1mYW1pbHk6IFBsYXlmYWlyIERpc3BsYXksIHNlcmlmO1xuICBmb250LXNpemU6IDJyZW07XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiAxOyB9XG4gIC5jYXJkLWFydGljbGUgaDI6aG92ZXIge1xuICAgIGNvbG9yOiAjNDU1NjUyOyB9XG4uY2FyZC1hcnRpY2xlIHNtYWxsIHtcbiAgY29sb3I6ICM2NjY7XG4gIGZvbnQtc2l6ZTogLjc1cmVtOyB9XG5cbi5sb2FkZXJfX25hdiB7XG4gIGRpc3BsYXk6IHRhYmxlLWNlbGw7XG4gIHBhZGRpbmctdG9wOiAxLjI1cmVtOyB9XG5cbi5jYXJkLXRyaXB0aWMge1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNjY2M7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjY2NjOyB9XG4gIC5jYXJkLXRyaXB0aWNfX2JveCB7XG4gICAgcGFkZGluZzogMnJlbTtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDc2OXB4KSB7XG4gICAgICAuY2FyZC10cmlwdGljX19ib3g6bnRoLWNoaWxkKDIpIHtcbiAgICAgICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjY2NjOyB9IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY5cHgpIHtcbiAgICAgIC5jYXJkLXRyaXB0aWNfX2JveDpudGgtY2hpbGQoMykge1xuICAgICAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICNjY2M7IH0gfVxuICAuY2FyZC10cmlwdGljX19tZWRpYSB7XG4gICAgaGVpZ2h0OiAxNTBweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIG1hcmdpbi1ib3R0b206IDJyZW07IH1cbiAgLmNhcmQtdHJpcHRpY19faGVhZGluZy1saW5rIHtcbiAgICBjb2xvcjogIzI2N2U2NDtcbiAgICBmb250LWZhbWlseTogUGxheWZhaXIgRGlzcGxheSwgc2VyaWY7XG4gICAgZm9udC1zaXplOiAxLjM3NXJlbTtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgIGNvbG9yOiAjMjY3ZTY0O1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgICAuY2FyZC10cmlwdGljX19oZWFkaW5nLWxpbms6aG92ZXIge1xuICAgICAgY29sb3I6ICM0NTU2NTI7IH1cbiAgLmNhcmQtdHJpcHRpY19fdGV4dCB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG5cbi5jdGEtY29udGFjdCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlY2VlZTY7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICB3aWR0aDogMTAwJTsgfVxuICAuY3RhLWNvbnRhY3RfX2JveCB7XG4gICAgcGFkZGluZzogMnJlbTsgfVxuICAuY3RhLWNvbnRhY3RfX2JveDpudGgtY2hpbGQoMikge1xuICAgIHBhZGRpbmc6IDJyZW0gMDsgfVxuICAuY3RhLWNvbnRhY3RfX3RleHQge1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwIDMuNXJlbSAwIDJyZW07IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgIC5jdGEtY29udGFjdF9fdGV4dCB7XG4gICAgICAgIHBhZGRpbmc6IDA7IH0gfVxuICAuY3RhLWNvbnRhY3RfX2J1dHRvbiB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIG1hcmdpbjogMCAycmVtIDAgMDsgfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgLmN0YS1jb250YWN0X19idXR0b24ge1xuICAgICAgICBtYXJnaW46IDA7IH0gfVxuXG4uY3RhLXRlYXNlciB7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBwYWRkaW5nOiAxcmVtIDJyZW07IH1cbiAgLmN0YS10ZWFzZXIgdmlkZW8ge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAuY3RhLXRlYXNlciB7XG4gICAgICBmbGV4LWZsb3c6IGNvbHVtbjsgfSB9XG4gIC5jdGEtdGVhc2VyX19ib3gge1xuICAgIHBhZGRpbmctcmlnaHQ6IDJyZW07IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgIC5jdGEtdGVhc2VyX19ib3gge1xuICAgICAgICBwYWRkaW5nOiAwOyB9IH1cbiAgLmN0YS10ZWFzZXJfX3RleHQge1xuICAgIG1hcmdpbi1ib3R0b206IDJyZW07IH1cbiAgLmN0YS10ZWFzZXJfX21lZGlhIHtcbiAgICBoZWlnaHQ6IDMwMHB4O1xuICAgIG92ZXJmbG93OiBoaWRkZW47IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgIC5jdGEtdGVhc2VyX19tZWRpYSB7XG4gICAgICAgIGhlaWdodDogYXV0bztcbiAgICAgICAgbWFyZ2luLXRvcDogMnJlbTsgfSB9XG5cbi5jdGEtY2VudGVyIHtcbiAgcGFkZGluZzogMnJlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gIC5jdGEtY2VudGVyX190ZXh0IHtcbiAgICBwYWRkaW5nOiAwIDhyZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMnJlbTsgfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgLmN0YS1jZW50ZXJfX3RleHQge1xuICAgICAgICBwYWRkaW5nOiAwOyB9IH1cblxuLmN0YS1zdWJzY3JpYmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjY3ZTY0O1xuICBjb2xvcjogI2ZmZjtcbiAgcGFkZGluZy10b3A6IDI0cHg7XG4gIHBhZGRpbmctYm90dG9tOiAzNnB4OyB9XG4gIC5jdGEtc3Vic2NyaWJlX19oZWFkaW5nIHtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgLmN0YS1zdWJzY3JpYmVfX2JveCB7XG4gICAgZGlzcGxheTogdGFibGU7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgd2lkdGg6IDc1JTsgfVxuICAuY3RhLXN1YnNjcmliZV9faW5wdXQge1xuICAgIHBhZGRpbmc6IC45cmVtO1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gIC5jdGEtc3Vic2NyaWJlX19idXR0b24ge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNmZmY7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgZm9udC1zaXplOiAxLjVyZW07XG4gICAgbWFyZ2luLWxlZnQ6IDFyZW07XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgdHJhbnNpdGlvbjogYWxsIC4ycyBlYXNlOyB9XG4gICAgLmN0YS1zdWJzY3JpYmVfX2J1dHRvbjpob3ZlciB7XG4gICAgICAvKlRoZXNlIHdpbGwgdHJhbnNpdGlvbiBvbiBob3ZlciAqL1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICAgIGNvbG9yOiAjMjY3ZTY0OyB9XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAuY3RhLXN1YnNjcmliZV9fYnV0dG9uIHtcbiAgICAgICAgbWFyZ2luOiAxcmVtIDAgMCAwOyB9IH1cbiAgLmN0YS1zdWJzY3JpYmVfX21lc3NhZ2Uge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgcGFkZGluZy10b3A6IDIuNXJlbTsgfVxuICAuY3RhLXN1YnNjcmliZV9fZXJyb3Ige1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgcGFkZGluZy10b3A6IDFyZW07IH1cbiAgICAuY3RhLXN1YnNjcmliZV9fZXJyb3ItbXNnIHtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuXG4uY3RhLXNpZGViYXIge1xuICBwYWRkaW5nOiAxcmVtIDAgMCA1cmVtO1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5jdGEtc2lkZWJhciB7XG4gICAgICBwYWRkaW5nOiAzcmVtIDJyZW07IH0gfVxuICAuY3RhLXNpZGViYXJfX2hlYWRpbmcge1xuICAgIGZvbnQtc2l6ZTogMS4yNXJlbTtcbiAgICBtYXJnaW4tdG9wOiAxMnB4O1xuICAgIG1hcmdpbi1ib3R0b206IDEycHg7IH1cbiAgLmN0YS1zaWRlYmFyX19idXR0b24ge1xuICAgIG1hcmdpbi10b3A6IDFyZW07IH1cblxuLmN0YS1zaWRlYmFyX19idXR0b24gKyAuY3RhLXNpZGViYXJfX2hlYWRpbmcsIC5jdGEtc2lkZWJhcl9fdGV4dCArIC5jdGEtc2lkZWJhcl9faGVhZGluZyB7XG4gIG1hcmdpbi10b3A6IDJyZW07IH1cblxuLmN0YS1zb2NpYWwge1xuICBwYWRkaW5nLWxlZnQ6IDFyZW07IH1cbiAgLmN0YS1zb2NpYWwgLmljb24ge1xuICAgIGZpbGw6ICMyNjdlNjQ7IH1cbiAgICAuY3RhLXNvY2lhbCAuaWNvbjpob3ZlciB7XG4gICAgICBmaWxsOiAjY2NjOyB9XG4gIC5jdGEtc29jaWFsIGE6aG92ZXIge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuXG5mb290ZXIge1xuICBwYWRkaW5nLWJvdHRvbTogNXJlbTsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICBmb290ZXIge1xuICAgICAgcGFkZGluZzogMDsgfSB9XG5cbi5mb290ZXItY29weXJpZ2h0IHtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlNWU2ZTc7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBwYWRkaW5nOiAycmVtO1xuICB3aWR0aDogMTAwJTsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAuZm9vdGVyLWNvcHlyaWdodCB7XG4gICAgICBwYWRkaW5nOiAycmVtIDAgMCAwO1xuICAgICAgZGlzcGxheTogYmxvY2s7IH0gfVxuICAuZm9vdGVyLWNvcHlyaWdodF9fbG9nby1ib3gge1xuICAgIHdpZHRoOiA0NTBweDsgfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgLmZvb3Rlci1jb3B5cmlnaHRfX2xvZ28tYm94IHtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICB3aWR0aDogYXV0bzsgfVxuICAgICAgICAuZm9vdGVyLWNvcHlyaWdodF9fbG9nby1ib3ggLmxvZ29fX3N0YWNrZWQge1xuICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICB3aWR0aDogMjUwcHg7IH0gfVxuICAuZm9vdGVyLWNvcHlyaWdodF9fYm94IHtcbiAgICB0ZXh0LWFsaWduOiByaWdodDsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtaW4td2lkdGg6IDEwMjNweCkge1xuICAgICAgLmZvb3Rlci1jb3B5cmlnaHRfX2JveCB7XG4gICAgICAgIHRleHQtYWxpZ246IHJpZ2h0OyB9IH1cbiAgICAuZm9vdGVyLWNvcHlyaWdodF9fYm94IHNtYWxsIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgcGFkZGluZy1yaWdodDogLjVyZW07IH1cbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtaW4td2lkdGg6IDEwMjNweCkge1xuICAgICAgICAuZm9vdGVyLWNvcHlyaWdodF9fYm94IHNtYWxsIHtcbiAgICAgICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG4gICAgICAgICAgLmZvb3Rlci1jb3B5cmlnaHRfX2JveCBzbWFsbDo6YmVmb3JlIHtcbiAgICAgICAgICAgIGNvbnRlbnQ6ICd8JzsgfVxuICAgICAgICAgIC5mb290ZXItY29weXJpZ2h0X19ib3ggc21hbGw6bnRoLWNoaWxkKDEpOjpiZWZvcmUge1xuICAgICAgICAgICAgY29udGVudDogJyc7IH0gfVxuICAgIC5mb290ZXItY29weXJpZ2h0X19ib3ggLm5hdi1taW5vciBsaSBhIHtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDsgfVxuICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1pbi13aWR0aDogMTAyM3B4KSB7XG4gICAgICAgIC5mb290ZXItY29weXJpZ2h0X19ib3ggLm5hdi1taW5vciBsaSBhIHtcbiAgICAgICAgICBmb250LXNpemU6IDEycHg7IH0gfVxuXG4uZm9vdGVyLWRpc2NsYWltZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlOyB9XG4gIC5mb290ZXItZGlzY2xhaW1lcl9fYm94IHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjNDU1NjUyO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgcGFkZGluZzogMjBweDtcbiAgICBtYXJnaW46IDUwcHggYXV0byAxMHB4OyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjNweCkge1xuICAgICAgLmZvb3Rlci1kaXNjbGFpbWVyX19ib3gge1xuICAgICAgICBwYWRkaW5nOiAyMHB4IDEwMHB4OyB9IH1cbiAgLmZvb3Rlci1kaXNjbGFpbWVyIHVsIHtcbiAgICBkaXNwbGF5OiB0YWJsZTtcbiAgICBtYXJnaW46IDAgYXV0bzsgfVxuICAgIC5mb290ZXItZGlzY2xhaW1lciB1bCBsaSB7XG4gICAgICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgI0NDQ0NDQztcbiAgICAgIGJvcmRlci1yaWdodDogbm9uZTtcbiAgICAgIGJvcmRlci1sZWZ0LXN0eWxlOiBkYXNoZWQ7XG4gICAgICBtYXJnaW46IDAgMTBweDtcbiAgICAgIHBhZGRpbmc6IC41cmVtOyB9XG4gICAgICAuZm9vdGVyLWRpc2NsYWltZXIgdWwgbGk6bGFzdC1jaGlsZCB7XG4gICAgICAgIGJvcmRlci1yaWdodDogMXB4ICNDQ0Mgc29saWQ7IH1cbiAgICAgIC5mb290ZXItZGlzY2xhaW1lciB1bCBsaTpmaXJzdC1jaGlsZCB7XG4gICAgICAgIGJvcmRlci1sZWZ0LXN0eWxlOiBzb2xpZDsgfVxuICAuZm9vdGVyLWRpc2NsYWltZXIgaDYsIC5mb290ZXItZGlzY2xhaW1lciBwLCAuZm9vdGVyLWRpc2NsYWltZXIgdWwge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBtYXJnaW4tYm90dG9tOiAxcmVtOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1pbi13aWR0aDogMTAyM3B4KSB7XG4gICAgICAuZm9vdGVyLWRpc2NsYWltZXIgaDYsIC5mb290ZXItZGlzY2xhaW1lciBwLCAuZm9vdGVyLWRpc2NsYWltZXIgdWwge1xuICAgICAgICBmb250LXNpemU6IDEycHg7IH0gfVxuXG5Aa2V5ZnJhbWVzIGZhZGVJbiB7XG4gIGZyb20ge1xuICAgIG9wYWNpdHk6IDA7IH1cblxuICB0byB7XG4gICAgb3BhY2l0eTogMTsgfSB9XG5cbi5oZWFkZXJfX2xvZ28tYm94IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjY2NjO1xuICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjY2NjO1xuICBtYXJnaW46IDAgYXV0bztcbiAgbWF4LXdpZHRoOiAxMjAwcHg7IH1cblxuLm5vLWNzc2FuaW1hdGlvbnMgLmhlYWRlcl9fbG9nby1ib3gge1xuICBwYWRkaW5nLXRvcDogMDsgfVxuXG4uaGVhZGVyX19sb2dvIHtcbiAgYmFja2dyb3VuZDogI2ZmZjsgfVxuXG4ubG9nbyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwYWRkaW5nOiAwcmVtIDAgMHJlbSAycmVtO1xuICB3aWR0aDogNjAwcHg7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDg5OXB4KSB7XG4gICAgLmxvZ28ge1xuICAgICAgd2lkdGg6IDQwMHB4OyB9IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDQ5OXB4KSB7XG4gICAgLmxvZ28ge1xuICAgICAgcGFkZGluZzogMXJlbTtcbiAgICAgIHdpZHRoOiAzMDBweDsgfSB9XG5cbi5uby1jc3NhbmltYXRpb25zIC5sb2dvIHtcbiAgaGVpZ2h0OiA2OHB4O1xuICBwYWRkaW5nOiAwIDFyZW07IH1cblxuc3ZnIHBhdGgsIHN2ZyBwb2x5Z29uIHtcbiAgZmlsbDogIzI2N2U2NDsgfVxuc3ZnOmhvdmVyIHBhdGgsIHN2Zzpob3ZlciBwb2x5Z29uIHtcbiAgb3BhY2l0eTogLjc7XG4gIHRyYW5zaXRpb246IGZpbGwgMC4ycyBlYXNlO1xuICBmaWxsLW9wYWNpdHk6IDAuNzsgfVxuXG4ubG9nb19fc3RyZXRjaGVkIHtcbiAgZGlzcGxheTogYmxvY2s7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDg5OXB4KSB7XG4gICAgLmxvZ29fX3N0cmV0Y2hlZCB7XG4gICAgICBkaXNwbGF5OiBub25lOyB9IH1cblxuLmxvZ29fX3N0YWNrZWQge1xuICBkaXNwbGF5OiBub25lOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA4OTlweCkge1xuICAgIC5sb2dvX19zdGFja2VkIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrOyB9IH1cblxuLm5vLWNzc2FuaW1hdGlvbnMgLmxvZ29fX2dsb2JlIHBhdGgge1xuICBmaWxsOiAjMjY3ZTY0O1xuICBvcGFjaXR5OiAxOyB9XG5cbi5tYWluLXN0YW5kYXJkLCAubWFpbi1uZXdzLCAubWFpbi1wb3N0IHtcbiAgZGlzcGxheTogdGFibGU7XG4gIHBhZGRpbmc6IDFyZW0gMnJlbTsgfVxuXG4ubWFpbi1zdGFuZGFyZCB7XG4gIHBhZGRpbmctYm90dG9tOiA1cmVtOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5tYWluLXN0YW5kYXJkX19jb250ZW50IHtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7IH0gfVxuICAubWFpbi1zdGFuZGFyZF9fY29udGVudC5jb2wtNy0xMiB7XG4gICAgcGFkZGluZy10b3A6IDEuNXJlbTtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wOyB9XG4gIC5tYWluLXN0YW5kYXJkX190ZXh0ICogKyAqIHtcbiAgICBtYXJnaW4tdG9wOiAxcmVtOyB9XG4gIC5tYWluLXN0YW5kYXJkX190ZXh0IGgyIHtcbiAgICBjb2xvcjogIzI2N2U2NDtcbiAgICBmb250LWZhbWlseTogUGxheWZhaXIgRGlzcGxheSwgc2VyaWY7XG4gICAgZm9udC1zaXplOiAycmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgbGluZS1oZWlnaHQ6IDE7XG4gICAgcGFkZGluZy10b3A6IDI0cHg7XG4gICAgcGFkZGluZy1ib3R0b206IDBweDsgfVxuICAubWFpbi1zdGFuZGFyZF9fdGV4dCB1bCB7XG4gICAgcGFkZGluZy1sZWZ0OiAycmVtO1xuICAgIGxpc3Qtc3R5bGU6IGRpc2M7IH1cbiAgICAubWFpbi1zdGFuZGFyZF9fdGV4dCB1bCBsaSB7XG4gICAgICBtYXJnaW4tdG9wOiAwLjVyZW07IH1cbiAgLm1haW4tc3RhbmRhcmRfX3RleHQgb2wge1xuICAgIHBhZGRpbmctbGVmdDogMnJlbTsgfVxuICAubWFpbi1zdGFuZGFyZF9fdGV4dCBpbWcge1xuICAgIGhlaWdodDogYXV0bztcbiAgICB3aWR0aDogMTAwJTsgfVxuICAgIC5tYWluLXN0YW5kYXJkX190ZXh0IGltZy5hdXRvIHtcbiAgICAgIHdpZHRoOiBhdXRvOyB9XG5cbi5tYWluLWJpb3Mge1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgcGFkZGluZzogMnJlbTsgfVxuXG4uY2l0eS1jb2x1bW4ge1xuICB3aWR0aDogMTM1cHg7IH1cblxuLmFkZHJlc3MtY29sdW1uIHtcbiAgd2lkdGg6IDMzNXB4OyB9XG5cbi5sb2NhdGlvbi1waG9uZSB7XG4gIGNvbG9yOiAjNDU1NjUyOyB9XG4gIC5sb2NhdGlvbi1waG9uZTpob3ZlciB7XG4gICAgY29sb3I6ICMyNjdlNjQ7IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5tYWluLXBvc3RfX3RleHQge1xuICAgIHRleHQtYWxpZ246IGxlZnQ7IH0gfVxuLm1haW4tcG9zdF9fdGV4dCAqICsgKiB7XG4gIG1hcmdpbi10b3A6IDFyZW07IH1cbi5tYWluLXBvc3RfX3RleHQgaDIge1xuICBjb2xvcjogIzI2N2U2NDtcbiAgZm9udC1mYW1pbHk6IFBsYXlmYWlyIERpc3BsYXksIHNlcmlmO1xuICBmb250LXNpemU6IDJyZW07XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiAxOyB9XG4ubWFpbi1wb3N0X190ZXh0IGgzIHtcbiAgY29sb3I6ICM0NTU2NTI7XG4gIGZvbnQtZmFtaWx5OiBQbGF5ZmFpciBEaXNwbGF5LCBzZXJpZjtcbiAgZm9udC1zaXplOiAxLjI1cmVtO1xuICBmb250LXdlaWdodDogNzAwO1xuICBsaW5lLWhlaWdodDogMTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgbWFyZ2luLXRvcDogMzZweDtcbiAgbWFyZ2luLWJvdHRvbTogMHB4OyB9XG4ubWFpbi1wb3N0X190ZXh0IGZpZ2NhcHRpb24ge1xuICBjb2xvcjogI2NjYztcbiAgZm9udC1zaXplOiAuNzVyZW07XG4gIG1hcmdpbi10b3A6IDA7IH1cbi5tYWluLXBvc3RfX3RleHQgYmxvY2txdW90ZSB7XG4gIGNvbG9yOiAjMjY3ZTY0O1xuICBmb250LWZhbWlseTogUGxheWZhaXIgRGlzcGxheSwgc2VyaWY7XG4gIGZvbnQtc2l6ZTogMS41cmVtO1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIG1hcmdpbi10b3A6IDM2cHg7XG4gIG1hcmdpbi1ib3R0b206IDM2cHg7IH1cblxuLmJyZWFkY3J1bWIge1xuICBwYWRkaW5nLWJvdHRvbTogMS41cmVtO1xuICBmb250LXNpemU6IDE0cHg7IH1cbiAgLmJyZWFkY3J1bWIgYSB7XG4gICAgY29sb3I6ICMyNjdlNjQ7IH1cbiAgICAuYnJlYWRjcnVtYiBhOmhvdmVyIHtcbiAgICAgIGNvbG9yOiAjNDU1NjUyOyB9XG4gIC5icmVhZGNydW1iIHNwYW4ge1xuICAgIGNvbG9yOiAjN2Y3ZTdlOyB9XG5cbi5mb3JtLXN0YW5kYXJkIHtcbiAgbWFyZ2luLXRvcDogMnJlbTsgfVxuICAuZm9ybS1zdGFuZGFyZCBpbnB1dCwgLmZvcm0tc3RhbmRhcmQgaW5wdXRbdHlwZT1cImVtYWlsXCJdLCAuZm9ybS1zdGFuZGFyZCBpbnB1dFt0eXBlPVwibnVtYmVyXCJdLCAuZm9ybS1zdGFuZGFyZCBpbnB1dFt0eXBlPVwicGFzc3dvcmRcIl0sIC5mb3JtLXN0YW5kYXJkIGlucHV0W3R5cGU9XCJzZWFyY2hcIl0sIC5mb3JtLXN0YW5kYXJkIGlucHV0W3R5cGU9XCJ0ZWxcIl0sIC5mb3JtLXN0YW5kYXJkIGlucHV0W3R5cGU9XCJ0ZXh0XCJdLCAuZm9ybS1zdGFuZGFyZCBpbnB1dFt0eXBlPVwidXJsXCJdLCAuZm9ybS1zdGFuZGFyZCBpbnB1dFt0eXBlPVwiY29sb3JcIl0sIC5mb3JtLXN0YW5kYXJkIGlucHV0W3R5cGU9XCJkYXRlXCJdLCAuZm9ybS1zdGFuZGFyZCBpbnB1dFt0eXBlPVwibmFtZVwiXSwgLmZvcm0tc3RhbmRhcmQgaW5wdXRbdHlwZT1cImRhdGV0aW1lXCJdLCAuZm9ybS1zdGFuZGFyZCBpbnB1dFt0eXBlPVwiZGF0ZXRpbWUtbG9jYWxcIl0sIC5mb3JtLXN0YW5kYXJkIGlucHV0W3R5cGU9XCJtb250aFwiXSwgLmZvcm0tc3RhbmRhcmQgaW5wdXRbdHlwZT1cInRpbWVcIl0sIC5mb3JtLXN0YW5kYXJkIGlucHV0W3R5cGU9XCJ3ZWVrXCJdLCAuZm9ybS1zdGFuZGFyZCB0ZXh0YXJlYSB7XG4gICAgY29sb3I6ICMzMzM7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgICBib3JkZXItYm94LXNpemluZzogY29udGVudC1ib3g7XG4gICAgYm9yZGVyLXJhZGl1czogMDtcbiAgICBib3JkZXItcmFkaXVzLWZvbnQtc2l6ZTogMXJlbTtcbiAgICBwYWRkaW5nOiAxcmVtO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gIC5mb3JtLXN0YW5kYXJkIGxhYmVsIHtcbiAgICBkaXNwbGF5OiBibG9jazsgfVxuICAuZm9ybS1zdGFuZGFyZCBpbnB1dFt0eXBlPVwiYnV0dG9uXCJdLCAuZm9ybS1zdGFuZGFyZCBpbnB1dFt0eXBlPVwicmVzZXRcIl0sIC5mb3JtLXN0YW5kYXJkIGlucHV0W3R5cGU9XCJzdWJtaXRcIl0ge1xuICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gIC5mb3JtLXN0YW5kYXJkX19jaGVja2JveCB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGZsb2F0OiBsZWZ0ICFpbXBvcnRhbnQ7XG4gICAgd2lkdGg6IGF1dG8gIWltcG9ydGFudDsgfVxuICAuZm9ybS1zdGFuZGFyZF9fY2hlY2tib3ggKyBsYWJlbCB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGZsb2F0OiBsZWZ0ICFpbXBvcnRhbnQ7XG4gICAgbWFyZ2luOiAxMHB4IDEwcHggMjBweCAxMHB4ICFpbXBvcnRhbnQ7IH1cbiAgLmZvcm0tc3RhbmRhcmQgLnNlbGVjdGJveCB7XG4gICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICBib3JkZXItcmFkaXVzOiAwO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgaGVpZ2h0OiA0OHB4OyB9XG4gICAgLmZvcm0tc3RhbmRhcmQgLnNlbGVjdGJveDo6YWZ0ZXIge1xuICAgICAgY29sb3I6ICNjY2M7XG4gICAgICBjb250ZW50OiAn4pa+JztcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogMXJlbTtcbiAgICAgIHJpZ2h0OiAuNXJlbTtcbiAgICAgIHdpZHRoOiAxcmVtO1xuICAgICAgaGVpZ2h0OiAxcmVtOyB9XG4gIC5mb3JtLXN0YW5kYXJkIHNlbGVjdCB7XG4gICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICBib3gtc2hhZG93OiBub25lO1xuICAgIGJvcmRlci1yYWRpdXM6IDA7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgICBjb2xvcjogIzdmN2U3ZTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZm9udC1zaXplOiAxcmVtO1xuICAgIGhlaWdodDogNjBweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgcGFkZGluZy1sZWZ0OiAxcmVtO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgICAtbW96LWFwcGVhcmFuY2U6IG5vbmU7XG4gICAgYXBwZWFyYW5jZTogbm9uZTsgfVxuXG4uY29udGFjdC11c19fYnV0dG9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VjZWVlNjtcbiAgbWF4LXdpZHRoOiAxODNweDtcbiAgY2xlYXI6IGJvdGg7IH1cblxuLm5vLWNzc2dyYWRpZW50cyAuc2VsZWN0Ym94OjphZnRlciB7XG4gIHotaW5kZXg6IC0zOyB9XG5cblxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkluWmxibVJ2Y2k5ZmJtOXliV0ZzYVhwbExuTmpjM01pTENKaVlYTmxMMTkwZVhCdlozSmhjR2g1TG5OaGMzTWlMQ0ppWVhObEwxOWpiMnh2Y25NdWMyRnpjeUlzSW1KaGMyVXZYMmx1WTJ4MVpHVXRiV1ZrYVdFdWMyRnpjeUlzSW1KaGMyVXZYMk5zWldGeUxXWnBlQzV6WVhOeklpd2lZbUZ6WlM5ZmFXMWhaMlZ6TG5OaGMzTWlMQ0ppWVhObEwxOXNZWGx2ZFhRdWMyRnpjeUlzSW1KaGMyVXZYMmRzYjJKaGJDNXpZWE56SWl3aVltRnpaUzlmZEdGaWJHVnpMbk5oYzNNaUxDSnRiMlIxYkdWekwyNWhkaTlmYm1GMkxXMXBibTl5TG5OaGMzTWlMQ0p0YjJSMWJHVnpMMjVoZGk5ZmJtRjJMVzFsWjJFdWMyRnpjeUlzSW0xdlpIVnNaWE12Ym1GMkwxOXVZWFl0Wm05dmRHVnlMbk5oYzNNaUxDSnRiMlIxYkdWekwySmhibTVsY2k5ZlgySmhibTVsY2k1ellYTnpJaXdpYlc5a2RXeGxjeTlqWVhKa2N5OWZYMk5oY21SekxuTmhjM01pTENKdGIyUjFiR1Z6TDJOMFlTOWZYMk4wWVM1ellYTnpJaXdpYlc5a2RXeGxjeTltYjI5MFpYSXZYMlp2YjNSbGNpNXpZWE56SWl3aWJXOWtkV3hsY3k5b1pXRmtaWEl2WDJobFlXUmxjaTV6WVhOeklpd2liVzlrZFd4bGN5OXRZV2x1TDE5dFlXbHVMbk5oYzNNaUxDSnRiMlIxYkdWekwyWnZjbTB2WDJadmNtMHVjMkZ6Y3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pUVVFMFEwRXNRVUZCVXl4QlFVRlBMRUZCUVZNc1FVRkJXU3hCUVVGUkxFRkJRVkVzUVVGQlVTeEJRVUZSTEVGQlFVc3NRVUZCVXp0RlFWY3ZSU3hCUVVGVE96dEJRVXRpTEVGQlFVOHNRVUZCVVR0RlFVZFlMRUZCUVZNN08wRkJWV0lzUVVGQlN5eEJRVUZMTzBWQlEwNHNRVUZCVXp0RlFVTlVMRUZCUVZFN08wRkJVVm9zUVVGQlZUdEZRVU5PTEVGQlFWTTdPMEZCV1dJN1JVRk5TU3hCUVVFd1FqdEZRVU14UWl4QlFVRnpRanM3UVVGbE1VSTdSVUZEU1N4QlFVRlJPenRCUVZsYU8wVkJSMGtzUVVGQldUdEZRVlZvUWl4QlFVRkRMRUZCUVZFc1FVRkJRenRKUVVWR0xFRkJRVk03T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096dEJRVFpEYWtJc1FVRkJTVHRGUVVOQkxFRkJRV1U3TzBGQlMyNUNMRUZCUVVjN1JVRkZReXhCUVVGaE96dEJRVmRxUWp0RlFVTkpMRUZCUVZrN08wRkJTMmhDTzBWQlEwa3NRVUZCV1R0RlFVTmFMRUZCUVU4N08wRkJZMWdzUVVGQlRTeEJRVUZMTEVGQlFVczdSVUZKV2l4QlFVRmhPMFZCU1dJc1FVRkJWenM3UVVGTFpqdEZRVU5KTEVGQlFXRTdSVUZEWWl4QlFVRmhPMFZCUTJJc1FVRkJWenM3UVVGTFpqdEZRVU5KTEVGQlFWRTdPMEZCWlZvc1FVRkJReXhCUVVGVExFRkJRVU03UlVGRlNDeEJRVUZUTzBWQlExUXNRVUZCVXpzN096czdRVUZoYWtJc1FVRkJTenRGUVVWRUxFRkJRVmM3UlVGRFdDeEJRVUZoTzBWQlEySXNRVUZCVlR0RlFVTldMRUZCUVdkQ096dEJRVWR3UWp0RlFVTkpMRUZCUVVzN08wRkJSMVE3UlVGRFNTeEJRVUZST3p0QlFXMUVXanRGUVVOSkxFRkJRVkU3TzBGQlVWb3NRVUZCUnl4QlFVRkxPMFZCUTBvc1FVRkJWVHM3UVVGVFpEdEZRVU5KTEVGQlFWRTdPMEZCWjBKYU8wVkJRMGtzUVVGQlVUdEZRVU5TTEVGQlFWRTdSVUZEVWl4QlFVRlRPenRCUVZGaU8wVkJRMGtzUVVGQlVUdEZRVU5TTEVGQlFWTTdSVUZEVkN4QlFVRmhPenRCUVZkcVFpeEJRVUZSTEVGQlFVOHNRVUZCVVR0RlFVbHVRaXhCUVVGaE8wVkJRMklzUVVGQlZ6dEZRVU5ZTEVGQlFWRTdSVUZEVWl4QlFVRm5RanM3UVVGUmNFSXNRVUZCVVR0RlFVTktMRUZCUVdFN08wRkJVV3BDTEVGQlFWRTdSVUZGU2l4QlFVRm5RanM3UVVGWGNFSXNRVUZCVVN4QlFVRkxMRUZCUVVzc1FVRkJhVUlzUVVGQlN5eEJRVUZuUWl4QlFVRkxPMFZCU1hwRUxFRkJRVzlDTzBWQlEzQkNMRUZCUVZFN08wRkJVVm9zUVVGQlRTeEJRVUZaTEVGQlFVczdSVUZGYmtJc1FVRkJVVHM3UVVGUFdpeEJRVUZOTEVGQlFXOUNMRUZCUVVzN1JVRkRka0lzUVVGQlVUdEZRVU5TTEVGQlFWTTdPMEZCVDJwQ08wVkJRMGtzUVVGQlZUdEZRVU5XTEVGQlFXZENPenRCUVZOd1FqdEZRVU5KTEVGQlFXbENPMFZCUTJwQ0xFRkJRV2RDT3p0QlFVMXdRaXhCUVVGTE8wVkJRMGNzUVVGQmIwSTdSVUZEY0VJc1FVRkJhVUk3UlVGRGFrSXNRVUZCYjBJN1JVRkRjRUlzUVVGQldUdEZRVWx3UWl4QlFVRkxMRUZCUVdVc1FVRkJaME1zUVVGQlN5eEJRVUZsTzBsQlJUVkVMRUZCUVc5Q08wRkJVV2hETEVGQlFVc3NRVUZCYlVJc1FVRkJTenRGUVVWNFFpeEJRVUZaTzBWQlExb3NRVUZCVXpzN1FVTTFaV1E3UlVFeFFtbENMRUZCTWtKbU8wVkJRMEVzUVVGQmVVSTdSVUZEZWtJc1FVRkJkMEk3TzBGQlJURkNPMFZEY2tKWExFRkVjMEpVTzBWQlEwRXNRVUZCWVR0RlFUbENTQ3hCUVN0Q1ZqdEZRVU5CTEVGQlFXbENPMFZCUTJwQ0xFRkJRVkU3TzBGQlNWWTdSVU40UTFFc1FVUjVRMDQ3UlVGeVEyVXNRVUZ6UTJZN1JVRkRRU3hCUVVGWE8wVkJia05LTEVGQmIwTlFPMFZCUTBFc1FVRkJZVHRGUVVOaUxFRkJRV1U3TzBGQmMwTnFRaXhCUVVGdFFpeEJRVUZMTEVGQlFXbENMRUZCUVVzN1JVRkhOVU1zUVVGQlVUdEZRVU5TTEVGQlFWRTdSVUZEVWl4QlFVRlRPMFZCY2taTkxFRkJjMFptTzBWQlEwRXNRVUZCVnp0RlFVTllMRUZCUVZrN1JVRkRXaXhCUVVGWk8wVkJRMW9zUVVGQlV6dEZRVU5VTEVGQlFXbENPenRGUVVWcVFpeEJRVUZyUWp0RlEycEhXaXhCUkd0SFRqczdSVUZGUVN4QlFVRlpPMFZCUldRc1FVRkJhVUlzUVVGQlVTeEJRVUZMTEVGQlFXVXNRVUZCVVN4QlFVRkxMRUZCUVdNN08wbERkRWRvUlN4QlJIZEhTanRKUTNCSFNTeEJSSEZIU2p0SlFVTkJMRUZCUVdsQ096dEJRWE5DY2tJc1FVRkJaVHRGUXpGSVVDeEJSREpJVGp0RlEycEpUU3hCUkd0SlRqdEZRVU5CTEVGQlFWRTdSVUZEVWl4QlFVRlRPenRCUlhaR1ZEdEZSakJHUmp0SlFVVkpMRUZCUVVzN08wRkhla2xVTEVGQlFWTTdSVUZEVUN4QlFVRlRPMFZCUTFRc1FVRkJVenRGUVVOVUxFRkJRVTg3TzBGRFNGUXNRVUZCU3l4QlFVRlJPMFZCUTFnc1FVRkJUenM3UVVORVZEdEZRVU5GTEVGQlFXdENPMFZCUTJ4Q0xFRkJRV0U3UlVGRFlpeEJRVUZqTzBWQlEyUXNRVUZCVVR0RlFVTlNMRUZCUVZjN08wRkJSMkk3UlVGRFJTeEJRVUZUTzBWQlExUXNRVUZCWjBJN1JVaHRRMmhDTzBsSGNrTkdPMDFCUzBrc1FVRkJVenROUVVOVUxFRkJRVms3TzBGQlJXaENPMFZCUTBVc1FVRkJUenRGU0RSQ1VEdEpSemRDUmp0TlFVbEpMRUZCUVU4N08wRkJSVmc3UlVGRFJTeEJRVUZQTzBWSWMwSlFPMGxIZGtKR08wMUJTVWtzUVVGQlR6czdRVUZGV0R0RlFVTkZMRUZCUVU4N1JVaG5RbEE3U1VkcVFrWTdUVUZKU1N4QlFVRlBPenRCUVVkWU8wVkJRMFVzUVVGQlR6dEZTRk5RTzBsSFZrWTdUVUZKU1N4QlFVRlBPenRCUVVkWU8wVkJRMFVzUVVGQlR6dEZTRVZRTzBsSFNFWTdUVUZKU1N4QlFVRlBPenRCUVVkWU8wVkJRMFVzUVVGQlR6dEZTRXhRTzBsSFNVWTdUVUZKU1N4QlFVRlBPenRCUVVkWU8wVkJRMFVzUVVGQlR6dEZTRnBRTzBsSFYwWTdUVUZKU1N4QlFVRlBPenRCUVVkWU8wVkJRMFVzUVVGQlR6dEZTRzVDVUR0SlIydENSanROUVVsSkxFRkJRVTg3TzBGQlIxZzdSVUZEUlN4QlFVRlBPMFZJTVVKUU8wbEhlVUpHTzAxQlNVa3NRVUZCVHpzN1FVRkZXRHRGUVVORkxFRkJRVTg3UlVob1ExQTdTVWNyUWtZN1RVRkpTU3hCUVVGUE96dEJRMmhHV0R0RlFVTkZMRUZCUVZFN1JVRkRVaXhCUVVGVE8wVkJRMVFzUVVGQldUdEZRVVZrTEVGQlFVTXNRVUZCVXl4QlFVRkRPMGxCUTFBc1FVRkJXVHM3UVVGRmFFSTdSVXhPVVN4QlMwOU9PMFZCUTBFc1FVRkJVenM3UVVGRldEdEZRVU5GTEVGQlFXbENPMFZNWWxnc1FVdGpUanRGUVVOR0xFRkJRVU03U1V4a1dTeEJTMlZVTzBsQlEwRXNRVUZCYVVJN08wRkRabkpDTzBWQlEwTXNRVUZCVVR0RlFVTlNMRUZCUVU4N08wRkJSVkk3UlVGRFJTeEJRVUZsTzBWTWMwTm1PMGxMZGtOR08wMUJTVWtzUVVGQldUdE5RVVZvUWl4QlFVRkZPMUZCUTBrc1FVRkJXVHRGUVVWc1FpeEJRVUZGTzBsT1ZrMHNRVTFYU2pzN1FVRkZTanRGUVVORkxFRkJRV2RDTzBWQlEyaENMRUZCUVZNN1JVeDVRbFE3U1VzelFrWTdUVUZMU1N4QlFVRlpPMDFCUTFvc1FVRkJWVHROUVVOV0xFRkJRV003VFVGRmJFSXNRVUZCUlR0UlFVTkpMRUZCUVZVN1VVRkRWaXhCUVVGTE8xRkJRMHdzUVVGQlRUdFJRVU5PTEVGQlFVODdVVUZEVUN4QlFVRmxPMUZCUTJZc1FVRkJZVHRSUVVOaUxFRlFla0pMTzAxUE5rSllMRUZCUVVVc1FVRkJaVHRSUVVOVUxFRkJRVk03VFVGRmFrSXNRVUZCUlN4QlFVRmxPMUZCUTFRc1FVRkJVenROUVVWcVFpeEJRVUZGTEVGQlFXVTdVVUZEVkN4QlFVRlRPenRCUVVWcVFqdEZUbnBEVVN4QlRUQkRUanRGVEVoQk8wbExTMFlzUVVGQlRUdE5RVWRCTEVGQlFWVTdUVUZEVml4QlFVRkxPMDFCUTB3c1FVRkJUVHRGUVVWYUxFRkJRVTA3U1VGRFJpeEJVR3BFVHp0SlQydEVVQ3hCUVVGWk8wbEJRMW9zUVVGQlV6czdRVXhtV0R0RlMybENSaXhCUVVGUExFRkJRVThzUVVGQlR5eEJRVUZKTEVGQlFVazdTVUZGZWtJc1FVRkJVenM3UVVOb1JXSTdSVUZEUlN4QlFVRlRPMFZCUTFRc1FVRkJXVHRGUVVWa08wbFFRVkVzUVU5RFNqdEpRVU5CTEVGQlFXRTdTVUZEWWl4QlFVRmpPMGxCUTJRc1FVRkJVVHRKUVVOU0xFRkJRVk03U1VGRFZDeEJRVUZYTzBsT2JVTmlPMDFOZWtOR08xRkJVMDBzUVVGQldUdEZRVVZzUWl4QlFVRlhPMGxCUTFBc1FVRkJVenRKUVVWaUxFRkJRVmNzUVVGQlJUdE5RVU5RTEVGQlFWTTdUVUZEVkN4QlFVRlRPMDFRY0VKUUxFRlBjVUpHTzAxQlEwRXNRVUZCVVR0SlFVbGtMRUZCUVZjc1FVRkJSU3hCUVVGaE8wMUJRMnhDTEVGQlFWTTdTVUZIYWtJc1FVRkJWeXhCUVVGRkxFRkJRVms3VFVGRGFrSXNRVUZCV1R0TlFVTmFMRUZCUVdNN1RVNWhjRUk3VVUxbVJpeEJRVUZYTEVGQlFVVXNRVUZCV1R0VlFVdG1MRUZCUVdNN1JVRkZlRUk3U1ZBelFsY3NRVTgwUWxBN1NVRkRRU3hCUVVGVE8wbEJRMVFzUVVGQlV6dEpUa3RZTzAxTlVrWTdVVUZOVFN4QlFVRlhPMGxCUjJwQ0xFRkJRV2RDTzAxUU9VTlNMRUZQSzBOR096dEJRVWRPTEVGQlFWVTdSVkI0UTBNc1FVOTVRMUE3UlVGRFNpeEJRVUZWTEVGQlFVTTdTVkJ3UkVnc1FVOXhSRVk3TzBGRGNrSk9MRUZCUVVNc1FVRkJXU3hCUVVGUE8wVkJRMlFzUVVGQlV6dEJRVU5tTEVGQlFVTXNRVUZCV1N4QlFVRlBPMFZCUTJRc1FVRkJUenM3UVZCVldEdEZUMGhHTEVGQlFVa3NRVUZCV1R0SlFVTldMRUZCUVZVN08wRkJSV2hDTEVGQlFVc3NRVUZCWlR0RlFVTnNRaXhCUVVGVE96dEJRVVZZTEVGQlFVc3NRVUZCWlN4QlFVRTJRaXhCUVVGTExFRkJRV1VzUVVGQlowTXNRVUZCU3l4QlFVRmxMRUZCUVdsRExFRkJRVXNzUVVGQlpUdEZRVWsxU3l4QlFVRlRPenM3T3pzN08wRkJVVmdzUVVGQmEwSTdPMFZCUjJoQ0xFRkJRVmM3UlVGRFdDeEJRVUZoTzBWQlJXWXNRVUZCYVVJc1FVRkJTU3hCUVVGblFqdEpRVU5xUXl4QlFVRlpPenRCUVVWb1FqdEZRVU5GTEVGQlFWVTdSVUZEVml4QlFVRlpPMFZRTVVKYU8wbFBOa0pHTEVGQlFXZENPMDFCUTFZc1FVRkJWenRKUVVWcVFpeEJRVUZoTEVGQlFXZENPMDFCUTNaQ0xFRkJRVmM3TzBGQlJXcENPMFZVTlVWcFFpeEJVelpGWmp0RlFVTkJMRUZCUVZVN1JVRkRWaXhCUVVGWk8wVlFkRU5hTzBsUGVVTkdMRUZCUVdVN1RVRkRWQ3hCUVVGWE8wbEJSV3BDTEVGQlFXRXNRVUZCWlR0TlFVTjBRaXhCUVVGWE96dEJRVVZxUWp0RlFVTkZMRUZCUVZrN1JVRndSa29zUVVGeFJsSTdPMEZCUlVZN1JVRm9SMnRDTEVGQmFVZG9RanRGVWpkR1RTeEJVVGhHVGp0RlFYaEdZeXhCUVhsR1pEdEZRVVZCTEVGQlFXVTdSVUZGYWtJc1FVRkJZenM3U1VGRlZpeEJRVUZWTzBsQlExWXNRVUZCU3p0SlFVTk1MRUZCUVUwN1NVRkRUaXhCUVVGUE8wVlFMMFJVTzBsUGJVUkdPMDFCTDBaclFpeEJRVGhIWkR0TlFYUkdTaXhCUVVGbE8xRkJRMWdzUVVGQlV6dFJRVU5VTEVGQlFWTTdVVUZEVkN4QlFVRlBPenRCUVhOR1dEdEZRVU5GTEVGQlFWVTdSVUZEVml4QlFVRkxPMFZCUTB3c1FVRkJUVHRGUVVWU0xFRkJRVk03U1VGRFRDeEJRVUZUTzBWUU0wVllPMGxQT0VWR0xFRkJRV0U3VFVGRFVDeEJRVUZOTzAxQlEwNHNRVUZCVHp0RlVHaEdXRHRKVDNGRlJqdE5RV05KTEVGQlFVczdUVUZEVEN4QlFVRk5PenRCUVVWV08wVkJRMFVzUVVGQlZUdEZRVU5XTEVGQlFWTTdSVUZEVkN4QlFVRkxPMFZCUTB3c1FVRkJUenRGUVVWVUxFRkJRVzFDTzBsQlEyWXNRVUZCVXp0RlVEZEdXRHRKVDJkSFJpeEJRVUZoTzAxQlExQXNRVUZCVHp0TlFVTlFMRUZCUVUwN1RVRkRXaXhCUVVGaExFRkJRVzFDTzFGQlEzaENMRUZCUVU4N1JWQndSMkk3U1U5elJrWTdUVUZwUWtrc1FVRkJTenROUVVOTUxFRkJRVTg3TzBGQlJWZ3NRVUZCYjBJN1JVRkZiRUlzUVVGQlZUdEZRVU5XTEVGQlFWTTdSVUZEVkN4QlFVRlBPMFZCUTFBc1FVRkJVVHRGUVVOU0xFRkJRVlU3UlVGRFZpeEJRVUZoT3p0RlFVVmlMRUZCUVU4N1JVRjBTazhzUVVGMVNtUTdPMEZCUjBZc1FVRkJhMElzUVVGQlZTeEJRVUZyUWpzN1JVRkZNVU1zUVVGQlV6dEZRVU5VTEVGQlFWVTdSVUZEVml4QlFVRlpPenRGUVVWYUxFRkJRVmM3UlVGRFdDeEJRVUZ4UWp0QlFVVjZRaXhCUVVGclFqczdSVUZGWkN4QlFVRkxPMFZCUTB3c1FVRkJUVHRGUVVOT0xFRkJRVTg3UlVGRFVDeEJRVUZSTzBWQlExSXNRVUZCWlR0RlFVTm1MRUZCUVZFN1FVRkZXaXhCUVVGclFqczdSVUZGWkN4QlFVRlJPMFZCUTFJc1FVRkJUenRGVW5oTVJTeEJVWGxNVkR0RlFVTkJMRUZCUVZFN1JVRkRVaXhCUVVGUE8wVkJRMUFzUVVGQlZ6dEJRVU5tTEVGQlFXMUNPenRGUVVWbUxFRkJRVlU3UlVGRFZpeEJRVUZSTzBWQlExSXNRVUZCVHp0RlFVTlFMRUZCUVVzN1JVRkRUQ3hCUVVGTk8wRkJRMVlzUVVGQmJVSXNRVUZCU1N4QlFVRlZMRUZCUVcxQ0xFRkJRVWs3TzBWQlJYQkVMRUZCUVZNN1JVRkRWQ3hCUVVGVk8wVkJRMVlzUVVGQlV6dEZRVU5VTEVGQlFWRTdSVUZEVWl4QlFVRlBPMFZCUTFBc1FVRkJTenRGUVVOTUxFRkJRVms3UlVGRFdpeEJRVUZOTzBWQlEwNHNRVUZCWVR0RlVqbE5TaXhCVVN0TlZEdEZRVU5CTEVGQlFWTTdPMFZCUlZRc1FVRkJWenRGUVVOWUxFRkJRWEZDTzBWQlEzSkNMRUZCUVc5Q08wRkJSWGhDTEVGQlFXMUNMRUZCUVVrN1JVRkRia0lzUVVGQlZ6dEJRVVZtTEVGQlFXMUNMRUZCUVVrN1JVRkRia0lzUVVGQlZ6dEJRVWRtTEVGQlFXdENMRUZCUVd0Q0xFRkJRVlVzUVVGQmEwSXNRVUZCYTBJN08wVkJSVFZGTEVGQlFWTTdRVUZEWml4QlFVRnJRaXhCUVVGdFFpeEJRVUZKTEVGQlFWVXNRVUZCYTBJc1FVRkJiVUlzUVVGQlNUczdSVUZGZEVZc1FVRkJVenRCUVVObUxFRkJRV3RDTEVGQlFXMUNMRUZCUVVrN1JVRkRia01zUVVGQlZ6dEJRVU5xUWl4QlFVRnJRaXhCUVVGdFFpeEJRVUZKTzBWQlEyNURMRUZCUVZjN08wRkJSMnBDTEVGQlFXVTdSVUZEV0N4QlFVRlBPMEZCUTFnc1FVRkJaMElzUVVGQlRTeEJRVUZuUWl4QlFVRkpMRUZCUVZVc1FVRkJaMElzUVVGQlNUczdSVUZGY0VVc1FVRkJWVHRGUVVOV0xFRkJRVk03UlVGRFZDeEJRVUZSTzBWQlExSXNRVUZCVHp0RlVtaFFSU3hCVVdsUVZEdEJRVU5LTEVGQlFXZENPenRGUVVWYUxFRkJRVlU3UlVGRFZpeEJRVUZMTzBWQlEwd3NRVUZCVHp0RlFVTlFMRUZCUVZrN1JVRkRXaXhCUVVGWk8wRkJRMmhDTEVGQlFXZENMRUZCUVVrc1FVRkJWU3hCUVVGblFpeEJRVUZKT3p0RlFVVTVReXhCUVVGVE8wVkJRMVFzUVVGQlR6czdSVUZGVUN4QlFVRlhPMFZCUTFnc1FVRkJjVUk3UlVGRGNrSXNRVUZCYTBJN1JVRkRiRUlzUVVGQldUdEJRVU5vUWl4QlFVRm5RaXhCUVVGSk96dEZRVVZvUWl4QlFVRkxPMEZCUTFRc1FVRkJaMElzUVVGQlNUczdSVUZGYUVJc1FVRkJTenRCUVVWVUxFRkJRV1VzUVVGQlowSTdPMFZCUlhwQ0xFRkJRVms3UVVGRGJFSXNRVUZCWlN4QlFVRm5RaXhCUVVGSkxFRkJRVlVzUVVGQlpTeEJRVUZuUWl4QlFVRkpPenRGUVVVeFJTeEJRVUZaTzBGQlEyeENMRUZCUVdVc1FVRkJaMElzUVVGQlNUdEZRVU0zUWl4QlFVRjVRanRCUVVNdlFpeEJRVUZsTEVGQlFXZENMRUZCUVVrN1JVRkROMElzUVVGQmVVSTdRVkIwVHpkQ08wVlBORXhHTzBsQk5FTkpMRUZCUVZNN08wRkJSMkk3UlVGRFJTeEJRVUZQT3p0QlFVVlVMRUZCUVdkQ08wVkJRMlFzUVVGQlR6czdRVUZGVkN4QlFVRnBRaXhCUVVGblFqdEZRVVV2UWl4QlFVRlZPMFZCUTFZc1FVRkJTenRGUVVOTUxFRkJRVkU3UlVFdlVra3NRVUZuVTFvN1JWSnNVMWNzUVZGdFUxZzdSVUZEUVN4QlFVRlZPMFZCUTFZc1FVRkJORUk3UlVFNVVtUXNRVUVyVW1RN08wVkJSMEVzUVVGQlZ6dEZRVU5ZTEVGQlFWYzdSVUZEV0N4QlFVRlpPMFZCUldRc1FVRkJaMElzUVVGQlJ5eEJRVUZuUWl4QlFVRkhPMGxCUTJ4RExFRkJRVk03U1VGRFZDeEJRVUZYTzBsQlExZ3NRVUZCVVR0SlFVTlNMRUZCUVdFN1NVRkRZaXhCUVVGVE8wbFNMMU5NTEVGUloxUktPMGxCUTBFc1FVRkJkMEk3U1VGRGVFSXNRVUZCZVVJN1NVRkRla0lzUVVGQlZUdEpRVU5XTEVGQlFXVTdTVUZEWml4QlFVRmhPMGxCUTJJc1FVRkJaVHRKUVVObUxFRkJRVmM3U1VGRFdDeEJRVUZoTzBsQlEySXNRVUZCYzBJN1JVRkZNVUlzUVVGQlpTeEJRVUZaTEVGQlFXZENMRUZCUVVVN08wbEJSWHBETEVGQlFWYzdSVUZGWml4QlFVRmxMRUZCUVdFc1FVRkJTeXhCUVVGSExFRkJRV2RDTEVGQlFVVXNRVUZCWVN4QlFVRkxPenRKUVVWd1JTeEJRVUZYTzBsQlExZ3NRVUZCVXpzN1FWQjZVbGc3UlU4MFVrWXNRVUZCWVN4QlFVRnBRaXhCUVVGaExFRkJRV2RDTzBsQlJYWkVMRUZCUVU4N1NVRkRVQ3hCUVVGTk96dEJRVWxXTEVGQlFXZENMRUZCUVZNN08wVlNhRlpxUWl4QlVXdFdTanRCUVVWS0xFRkJRV2RDTEVGQlFXZENMRUZCUVdNc1FVRkJaMElzUVVGQll6czdSVUZIZUVVc1FVRkJVVHRGUVVOU0xFRkJRV0U3UlVGRmFrSXNRVUZCWjBJc1FVRkJaMElzUVVGQllTeEJRVUZKTEVGQlFXZENMRUZCUVdNc1FVRkJZVHRKUVVOMFJpeEJRVUZWTzBsQlExWXNRVUZCWlR0QlFVbHlRaXhCUVVGblFpeEJRVUZuUWl4QlFVRmhPMFZCUTNaRExFRkJRVlU3UlVGRFZpeEJRVUZUTzBWQlExUXNRVUZCVVR0RlFVTlNMRUZCUVU4N1JVRkRVQ3hCUVVGTk8wVkJRMDRzUVVGQlN6dEZRVU5NTEVGQlFWazdSVkF4VkdoQ08wbFBiVlJHTEVGQlFXZENMRUZCUVdkQ0xFRkJRV0U3VFVGVmNrTXNRVUZCVXp0QlFVVnFRaXhCUVVGblFpeEJRVUZqTzBWQlF6RkNMRUZCUVdNN1JVRkZiRUlzUVVGQlowSXNRVUZCWXl4QlFVRmhPMGxTT1ZjNVFpeEJVU3RYVUR0SlFVTkJMRUZCUVZjN08wbEJSVmdzUVVGQlV6dEZRVVZtTEVGQlFXZENMRUZCUVdNc1FVRkJXVHM3U1VGRmNFTXNRVUZCVXp0SlFVTlVMRUZCUVZNN1NVRkRWQ3hCUVVGVk8wbEJRMVlzUVVGQlRUdEpRVU5PTEVGQlFVczdTVUZEVEN4QlFVRlpPMGxCUTFvc1FVRkJUenRKUVVOUUxFRkJRVkU3U1VGRFVpeEJRVUZ0UWp0SlFVTnVRaXhCUVVGeFFqdEpRVU55UWl4QlFVRnBRanRGUVVWMlFpeEJRVUZuUWl4QlFVRmpMRUZCUVZrc1FVRkJUenRKUVVNelF5eEJRVUZyUWp0RlFVTjRRaXhCUVVGblFpeEJRVUZqTEVGQlFWa3NRVUZCVHp0SlFVTXpReXhCUVVGclFqdEZRVU40UWl4QlFVRm5RaXhCUVVGakxFRkJRVmtzUVVGQlR6dEpRVU16UXl4QlFVRnJRanRGUVVONFFpeEJRVUZuUWl4QlFVRmpMRUZCUVZrc1FVRkJUenRKUVVNelF5eEJRVUZyUWp0RlFVTjRRaXhCUVVGblFpeEJRVUZqTEVGQlFWa3NRVUZCVHp0SlFVTXpReXhCUVVGclFqdEZRVU40UWl4QlFVRm5RaXhCUVVGakxFRkJRVmtzUVVGQlR6dEpRVU16UXl4QlFVRnJRanRGUVVONFFpeEJRVUZuUWl4QlFVRmpMRUZCUVZrc1FVRkJUenRKUVVNelF5eEJRVUZyUWp0RlFVTjRRaXhCUVVGblFpeEJRVUZqTEVGQlFWa3NRVUZCVHp0SlFVTXpReXhCUVVGclFqdEJVSEpYZEVJN1JVOXJVMFk3TzBsQmRVVkpMRUZCUVZrN1NVRkRXaXhCUVVGWk8wbEJRMmhDTEVGQlFXVTdUVUZEVkN4QlFVRlpPMDFCUTFvc1FVRkJXVHM3UVZBM1YyaENPMFZQYVZoR08wbEJRMGtzUVVGQlZUdEpRVU5XTEVGQlFWTTdTVUZEVkN4QlFVRmhPMGxCUTJJc1FVRkJVVHRKUVVOU0xFRkJRVTg3U1VGRFVDeEJRVUZWTzBsQlExWXNRVUZCV1R0SlFUVlphRUlzUVVGQlpUdE5RVU5ZTEVGQlFWTTdUVUZEVkN4QlFVRlRPMDFCUTFRc1FVRkJUenRKUVRaWldDeEJRVUZsTEVGQlFXRXNRVUZCU3pzN1RVRkZNMElzUVVGQlZ6dE5RVU5ZTEVGQlFWTTdTVUZGWml4QlFVRm5RanROUVVOV0xFRkJRVlU3VFVGRFZpeEJRVUZSTzAxQlExSXNRVUZCVHp0TlFVTlFMRUZCUVZrN1RVRkRXaXhCUVVGVk8wMUJRMVlzUVVGQldUdE5RVEZoUml4QlFUSmhWanROUVVWT0xFRkJRV2RDTEVGQlFVVTdPMUZCUlZZc1FVRkJWenROUVVWdVFpeEJRVUZuUWl4QlFVRkZMRUZCUVdFc1FVRkJTenM3VVVGRk5VSXNRVUZCVnp0UlFVTllMRUZCUVZNN1NVRkZha0lzUVVGQmEwSTdUVUZEV2l4QlFVRlRPMDFCUTFRc1FVRkJZVHRKUVVWdVFpeEJRVUZyUWl4QlFVRkxPenROUVVWcVFpeEJRVUZWTzAxQlExWXNRVUZCVXp0TlFYUmpSeXhCUVhWaldqdE5RWFpqV1N4QlFYZGpXanROUVVOQkxFRkJRVk03VFZKNlkwWXNRVkV3WTFBN1RVRkRRU3hCUVVGVk8wMUJRMVlzUVVGQlpUdE5RVU5tTEVGQlFXdENPMDFCUlhoQ0xFRkJRV3RDTEVGQlFVc3NRVUZCUXp0UlVtaGthRUlzUVZGcFpFRTdVVUZEUVN4QlFVRnBRanROUVVONlFpeEJRVUZyUWl4QlFVRkxMRUZCUVVNN1VWSnVaR2hDTEVGUmIyUkJPMUZCUTBFc1FVRkJXVHRKUVVWd1FpeEJRVUZuUWl4QlFVRlZMRUZCUVdkQ08wMUJRM0JETEVGQlFWTTdTVUZGWml4QlFVRm5RaXhCUVVGdFFpeEJRVUZuUWl4QlFVRnBRaXhCUVVGblFqczdUVUZKT1VVc1FVRkJWVHROUVRka1JTeEJRVGhrV2p0TlFVTkJMRUZCUVU4N1RWSTFaRXdzUVZFMlpFWTdUVUZEUVN4QlFVRlRPMDFCUTFRc1FVRkJNRUk3VFVGRE1VSXNRVUZCVnp0TlFVZFlMRUZCUVhkQ08wMUJPV001UWl4QlFVRm5RaXhCUVVGcFFpeEJRVUZSTEVGQlFXZENMRUZCUVdVc1FVRkJVU3hCUVVGblFpeEJRVUZoTzFGQlEzcEhMRUZCUVZNN1VVRkRWQ3hCUVVGVE8xRkJRMVFzUVVGQlR6dE5RVFpqV0N4QlFVRm5RaXhCUVVGcFFpeEJRVUZaTEVGQlFXZENMRUZCUVdVc1FVRkJXU3hCUVVGblFpeEJRVUZoTzFGQlF6ZEhMRUZCUVZNN1VVRkRWQ3hCUVVGWk8xRkJRMW9zUVVGQmQwSTdUVUZGYUVNc1FVRkJaMElzUVVGQmIwSXNRVUZCVlN4QlFVRm5RaXhCUVVGclFpeEJRVUZWTEVGQlFXZENMRUZCUVdkQ096dFJRVVZzU0N4QlFVRlRPMUZCUTFRc1FVRkJWVHRSUVVOV0xFRkJRVTA3VVVGRFRpeEJRVUZSTzFGQlExSXNRVUZCVVR0UlFVTlNMRUZCUVU4N1VVRkRVQ3hCUVVGVk96dFJRVVZXTEVGQlFWRTdVVUZEVWl4QlFVRlRPMUZCUldwQ0xFRkJRV2RDTEVGQlFXOUNMRUZCUVZNc1FVRkJSeXhCUVVGblFpeEJRVUZyUWl4QlFVRlRMRUZCUVVjc1FVRkJaMElzUVVGQlowSXNRVUZCVXp0VlFVTTNTQ3hCUVVGVk8xVkJRMVlzUVVGQlR6dFZRVU5RTEVGQlFWRTdWVUZEVWl4QlFVRkxPMVZCUTB3c1FVRkJUVHRWUVVOT0xFRkJRVmM3VlVGRFdDeEJRVUZoTzFWQlEySXNRVUZCV1R0VlFVTmFMRUZCUVdFN1ZVRkRZaXhCUVVGWk96dFZRVVZhTEVGQlFXVTdWVUZEWml4QlFVRlJPMVZCUTFJc1FVRkJVenRWUVVOVUxFRkJRV3RDTzFWQlJUVkNMRUZCUVdkQ0xFRkJRVzlDTEVGQlFWTXNRVUZCUXl4QlFVRlJMRUZCUVdkQ0xFRkJRV3RDTEVGQlFWTXNRVUZCUXl4QlFVRlJMRUZCUVdkQ0xFRkJRV2RDTEVGQlFWTXNRVUZCUXp0WlVqTm5RblpKTEVGUk5HZENSRHRaVWpWblFrTXNRVkUyWjBKRU8xbFNNV2RDU2l4QlVUSm5Ra2s3U1VGSldpeEJRVUZuUWl4QlFVRnZRanM3VFVGRk5VSXNRVUZCVVRzN1RVRm9aMEprTEVGQlFVODdUVUZFYjBNc1FVRkZNME03VFVGclowSk5MRUZCUVdNN1RVRkRaQ3hCUVVGak8wMUJRMlFzUVVGQlZUdE5RVU5XTEVGQlFWazdUVUZEV2l4QlFVRlpPMDFCUTFvc1FVRkJORUk3VFVGRmNFTXNRVUZCWjBJc1FVRkJiMElzUVVGQlJUczdVVUZGTlVJc1FVRkJZenRSUVVOa0xFRkJRV003VFVGRmVFSXNRVUZCWjBJc1FVRkJiMElzUVVGQlN6czdVVkp3YVVKcVF5eEJVWE5wUWtVN1VVRkRRU3hCUVVGaE8xRkJRMklzUVVGQlZ6dFJRVU5ZTEVGQlFXVTdTVUZGZWtJc1FVRkJaMElzUVVGQmEwSTdUVUZETVVJc1FVRkJVVHROUVVOU0xFRkJRV0U3VFVGRFlpeEJRVUZUTzAxU04ybENTaXhCVVRocFFrdzdUVUZEUVN4QlFVRmxPMDFCUTJZc1FVRkJWenROUVVWdVFpeEJRVUZuUWl4QlFVRnJRaXhCUVVGRE8xRlNibXBDTTBJc1FWRnZha0pGTzBsQlJWWXNRVUZCWjBJc1FVRkJhMEk3TzAxQlJURkNMRUZCUVZjN1NVRkZia0lzUVVGQlowSXNRVUZCYTBJc1FVRkJSenM3VFVGRk4wSXNRVUZCVlR0TlFVTldMRUZCUVVzN1RVRkRUQ3hCUVVGTk8wMUJRMDRzUVVGQlVUdE5RVU5TTEVGQlFVODdUVUZGWml4QlFVRm5RaXhCUVVGclFpeEJRVUZITEVGQlFVVTdVVUZETjBJc1FVRkJWenROUVVWeVFpeEJRVUZuUWl4QlFVRnJRaXhCUVVGSExFRkJRVWM3VVVGRE9VSXNRVUZCVXp0UlFVVnVRaXhCUVVGblFpeEJRVUZyUWl4QlFVRkhMRUZCUVVjc1FVRkJVenRWUVVOeVF5eEJRVUZQTzAxQlJXNUNMRUZCUVdkQ0xFRkJRV3RDTEVGQlFVY3NRVUZCUnp0UlFVTTVRaXhCUVVGVE8wbEJSVzVDTEVGQlFXZENMRUZCUVd0Q0xFRkJRV0VzUVVGQlN6czdUVUZGTlVNc1FVRkJWenRKUVVWdVFpeEJRVUZuUWp0TlFVTldMRUZCUVZrN1RVRkZiRUlzUVVGQlowSXNRVUZCWjBJN08xRkJSM2hDTEVGQlFVODdVVUZEVUN4QlFVRlBPMUZCUTFBc1FVRkJVenRSUVVWcVFpeEJRVUZuUWl4QlFVRm5RaXhCUVVGRk96dE5RVWRzUXl4QlFVRm5RaXhCUVVGblFqdFJRVU40UWl4QlFVRmxPMUZCUTJZc1FVRkJVenRSUVVOVUxFRkJRVkU3VVVGRFVpeEJRVUZoTzFGQlJYSkNMRUZCUVdkQ0xFRkJRV2RDTEVGQlFXRTdWVUZEYmtNc1FVRkJWVHRWUVVOV0xFRkJRVms3VlVGRFdpeEJRVUZSTzFWQlExSXNRVUZCVHp0VlFVTlFMRUZCUVdVN1VVRkZla0lzUVVGQlowSXNRVUZCWjBJc1FVRkJZVHRWVWpWdFFuSkRMRUZSTm0xQ1JUdFZRVU5CTEVGQlFWYzdWVUZEV0N4QlFVRlRPMVZCUTFRc1FVRkJZVHRKUVVsMlFpeEJRVUZuUWl4QlFVRmpPenROUVM5c1FqVkNMRUZCUVU4N1RVRkViME1zUVVGRk0wTTdUVUZwYlVKTkxFRkJRVkU3VFVGRGFFSXNRVUZCWjBJc1FVRkJZeXhCUVVGRk96dFJRVVYwUWl4QlFVRmpPMGxCUTNoQ0xFRkJRV2RDTEVGQlFXTTdUVUZEZEVJc1FVRkJaVHROUVVObUxFRkJRVkU3VFVGRFVpeEJRVUZoTzAxQlEySXNRVUZCVXp0TlFVTnFRaXhCUVVGblFpeEJRVUZqTEVGQlFWazdVVUZEYUVNc1FVRkJXVHROUVVOMFFpeEJRVUZuUWl4QlFVRmpMRUZCUVdFN1VWSnNiMEp1UXl4QlVXMXZRa1U3VVVGRFFTeEJRVUZoTzAxQlEzWkNMRUZCUVdkQ0xFRkJRV01zUVVGQllUdFJRVU5xUXl4QlFVRlRPMDFCUTI1Q0xFRkJRV2RDTEVGQlFXTXNRVUZCV1R0UlFVTm9ReXhCUVVGTk96dEJRVWRvUWl4QlFVRm5RaXhCUVVGSExFRkJRVk03UlVGRE1VSXNRVUZCVlR0RlFVTmFMRUZCUVdkQ0xFRkJRVU1zUVVGQlZTeEJRVUZuUWl4QlFVRkRMRUZCUVZNc1FVRkJVeXhCUVVGRExFRkJRVlVzUVVGQlV5eEJRVUZET3p0SlFVVXZSU3hCUVVGVE8wbEJRMVFzUVVGQlZUdEpRVU5XTEVGQlFVczdTVUZEVEN4QlFVRlpPMGxCUTFvc1FVRkJVenRKUVVOVUxFRkJRVkU3U1VGRFVpeEJRVUZQTzBsQlExQXNRVUZCV1R0SlFVVmFMRUZCUVhGQ08wVkJRM3BDTEVGQlFXZENMRUZCUVVNc1FVRkJWU3hCUVVGVExFRkJRVU03U1VGRGFrTXNRVUZCVnp0RlFVTm1MRUZCUVdkQ0xFRkJRVU1zUVVGQlV5eEJRVUZUTEVGQlFVTTdTVUZEYUVNc1FVRkJWenRGVUM5dFFtSTdTVTlwYmtKR0xFRkJRV2RDTEVGQlFVTXNRVUZCVlN4QlFVRm5RaXhCUVVGRExFRkJRVk1zUVVGQlV5eEJRVUZETEVGQlFWVXNRVUZCVXl4QlFVRkRPMDFCUXpkRkxFRkJRVms3U1VGRGJFSXNRVUZCWjBJc1FVRkJReXhCUVVGTkxFRkJRVlVzUVVGQlowSXNRVUZCUXl4QlFVRk5MRUZCUVZNc1FVRkJVeXhCUVVGRExFRkJRVTBzUVVGQlZTeEJRVUZUTEVGQlFVTXNRVUZCVFR0TlVtaHhRbTVITEVGUmFYRkNSanM3UVVGRlRpeEJRVUZuUWp0RlFVTmtMRUZCUVdVN1JVRkRha0lzUVVGQlowSXNRVUZCUXl4QlFVRlZMRUZCUVdkQ0xFRkJRVU03TzBsQlJYaERMRUZCUVU4N1NVRkRVQ3hCUVVGclFqczdRVUZGZEVJc1FVRkJaMElzUVVGQlV6dEZRVU4yUWl4QlFVRmpPMFZCUTJoQ0xFRkJRV2RDTEVGQlFWTXNRVUZCUXl4QlFVRlZMRUZCUVdkQ0xFRkJRVk1zUVVGQlF6czdTVUZGTVVRc1FVRkJUVHRKUVVOT0xFRkJRV3RDT3p0QlVHeHZRbkJDTzBWUGMyOUNSaXhCUVVGblFpeEJRVUZETEVGQlFWVXNRVUZCWjBJc1FVRkJRenRKUVVOMFF5eEJRVUZQTzBWQlEySXNRVUZCYTBJc1FVRkJaMEk3TzBsQlJUbENMRUZCUVdVN1NVRkRia0lzUVVGQmEwSXNRVUZCWjBJc1FVRkJReXhCUVVGVkxFRkJRV3RDTEVGQlFXZENMRUZCUVVNN1RVRkRNVVVzUVVGQlR6dE5RVU5RTEVGQlFXdENPMDFCUTJ4Q0xFRkJRVms3VFVGRldpeEJRVUZ4UWp0TlFVTnlRaXhCUVVGclFqdEpRVU40UWl4QlFVRnJRaXhCUVVGblFpeEJRVUZETzAxQlF6ZENMRUZCUVU4N1NVRkRZaXhCUVVGclFpeEJRVUZuUWl4QlFVRkRPMDFCUXpkQ0xFRkJRVTg3U1VGRFlpeEJRVUZyUWl4QlFVRm5RaXhCUVVGRExFRkJRVk1zUVVGQlZTeEJRVUZyUWl4QlFVRm5RaXhCUVVGRExFRkJRVk03VFVGRE5VWXNRVUZCVHp0SlFVTmlMRUZCUVd0Q0xFRkJRV2RDTEVGQlFVTXNRVUZCVXp0TlFVTjBReXhCUVVGNVFqdEpRVU12UWl4QlFVRnJRaXhCUVVGblFpeEJRVUZETEVGQlFWTTdUVUZEZEVNc1FVRkJWenRGUVVOcVFpeEJRVUZ2UWl4QlFVRm5RaXhCUVVGRExFRkJRVlVzUVVGQmIwSXNRVUZCWjBJc1FVRkJRenM3U1VGRmFFWXNRVUZCVXp0RlFVTmlMRUZCUVdkQ0xFRkJRVk03U1VGRGNrSXNRVUZCWXp0SlFVTnNRaXhCUVVGblFpeEJRVUZUTEVGQlFVTXNRVUZCVlN4QlFVRm5RaXhCUVVGVExFRkJRVU03VFVGRGVFUXNRVUZCVFRzN1FVRkxXanRGUVVORkxFRkJRVTA3UlVGRFRpeEJRVUZSTzBWUWVuRkNVanRKVDNWeFFrWTdUVUZMU1N4QlFVRlBPMDFCUTFBc1FVRkJVVHROUVVOU0xFRkJRVTg3UlVGRldDeEJRVUZYTzBsQlExQXNRVUZCVXp0RlFVVmlMRUZCUVZjc1FVRkJTenRKUVVOYUxFRkJRV3RDTzBsQlEyeENMRUZCUVcxQ08wbEJRMjVDTEVGQlFXdENPMGxCUTJ4Q0xFRkJRVk03U1VGRFZDeEJRVUZoTzBsQlEySXNRVUZCVVR0SlFVTlNMRUZCUVU4N1NVRkRVQ3hCUVVGdlFqdEpRVU53UWl4QlFVRlJPMGxCUTFJc1FVRkJWVHRKUVVOV0xFRkJRVXM3U1VGRFRDeEJRVUZQTzBsQlExQXNRVUZCYVVJN1JVRkZja0lzUVVGQlZ5eEJRVUZMTzBsQlExb3NRVUZCV1R0SlFVTmFMRUZCUVZrN1NVRkRXaXhCUVVGUk8wbFFjbk5DVmp0TlQydHpRa1lzUVVGQlZ5eEJRVUZMTzFGQlRWWXNRVUZCVHp0SlFVVmlMRUZCUVZjc1FVRkJTeXhCUVVGbExFRkJRVFpDTEVGQlFWY3NRVUZCU3l4QlFVRmxMRUZCUVc5Q0xFRkJRVmNzUVVGQlN5eEJRVUZsTzAxQlIzaEpMRUZCUVU4N1NVRkZZaXhCUVVGWExFRkJRVXNzUVVGQlpUdE5RVU42UWl4QlFVRlRPMFZCUldZc1FVRkJWVHRKUVVOT0xFRkJRVk03U1VGRFZDeEJRVUZaTzBsQlExb3NRVUZCZDBJN1JVRkZOVUlzUVVGQll6dEpRVU5XTEVGQlFWVTdPMEZCVTJRN08wVkJSVVVzUVVGQlZUdEZRVU5XTEVGQlFWTTdSVUZEVkN4QlFVRlJPMFZCUTFJc1FVRkJUenRGUVVOUUxFRkJRVXM3UlVGRFRDeEJRVUZOTzBWQlEwNHNRVUZCVVR0RlFVTlNMRUZCUVZrN1JVRkRXaXhCUVVGVE8wVkJRMVFzUVVGQmNVSTdSVUZEY2tJc1FVRkJlVUk3UlVGRk0wSXNRVUZCVnp0SlFVTlFMRUZCUVZNN1NVRkRWQ3hCUVVGWk8wbEJRMW9zUVVGQmVVSTdSVkJzZGtJelFqdEpUM0YyUWtZc1FVRkJWenROUVVOTUxFRkJRVmM3U1VGRmFrSXNRVUZCWVN4QlFVRlhPMDFCUTJ4Q0xFRkJRVmM3U1VGRmFrSXNRVUZCVnl4QlFVRlhMRUZCUVc5Q0xFRkJRV0VzUVVGQlZ5eEJRVUZYTzAxQlJYWkZMRUZCUVZjN096czdPenM3UVVGUmFrSXNRVUZCVHp0RlFVTk1MRUZCUVZVN1JVRkRWaXhCUVVGUk8wVkJRMUlzUVVGQlR6dEZRVU5RTEVGQlFWVTdSVUZEVml4QlFVRlpPMFZCT1hsQ1NpeEJRU3Q1UWxJN08wRkJSVVlzUVVGQlR6dEZRVU5NTEVGQlFWVTdSVUZEVml4QlFVRkxPMFZCUTB3c1FVRkJVenRGUVVOVUxFRkJRVms3TzBGUWFuaENXanRGVDI5NFFrWXNRVUZCVHp0SlFVTklMRUZCUVZVN1NVRjRla0pGTEVGQmVYcENXanRKUVVOQkxFRkJRVk03U1VGRFZDeEJRVUZQTzBsQlExQXNRVUZCU3p0SlFVTk1MRUZCUVU4N1NVRkRVQ3hCUVVGVE8wVkJRMklzUVVGQlR5eEJRVUZqTzBsQlEycENMRUZCUVZVN08wRkRNVEJDWkR0RlFVTkRMRUZCUVZNN1JVRkRWQ3hCUVVGWk8wVlNNa05ZTzBsUk4wTkdPMDFCUzBVc1FVRkJVenRGUVVWWU8wbFdTbGtzUVZWTFZqdEpRVU5CTEVGQlFWYzdTVlpEVGl4QlZVRk1PMGxCUTBFc1FVRkJaVHRKUVVWcVFpeEJRVUZ4UWp0TlZFaFdMRUZUU1ZJN1RVRkRTQ3hCUVVGeFFpeEJRVUZETzFGVVptUXNRVk5uUWtvN1JVRkZTanRKUVVORkxFRkJRVmM3UlVGRllqdEpRVU5GTEVGQlFWTTdTVUZEVkN4QlFVRm5RanRGUVVWc1FqdEpRVU5GTEVGQlFWTTdTVUZEVkN4QlFVRm5RanRGUVVWc1FqdEpRVU5GTEVGQlFXTTdTVlE1UWxJc1FWTXJRazQ3U1VGRFFTeEJRVUZYTzBsQlExZ3NRVUZCWlR0SlFVTm1MRUZCUVZNN1NVRkRWQ3hCUVVGUE8wVkJSMVE3U1VGRFJTeEJRVUZYTzBsQlJXSXNRVUZCZFVJc1FVRkJSVHROVm5SRFlpeEJWWFZEVkR0TlFVTkJMRUZCUVZjN1RWWnFRMUFzUVZWclEwbzdUVUZEUVN4QlFVRmxPMDFCUld4Q0xFRkJRWFZDTEVGQlFVVXNRVUZCWXp0UlZISkROVUlzUVZOelEwNDdVVUZEVEN4QlFVRjFRaXhCUVVGRkxFRkJRV01zUVVGQlF6dFZWR3BFYUVNc1FWTnJSRVE3TzBGRGJFUlFPMFZCUTBVc1FVRkJhMEk3UlVGRGJFSXNRVUZCY1VJN1JVRkRja0lzUVVGQmFVSTdSVUZEYWtJc1FVRkJVVHRGUVVOU0xFRkJRVlU3UlZSM1ExWTdTVk0zUTBZN1RVRlJTU3hCUVVGUk8wVlVjVU5XTzBsVE4wTkdPMDFCVjBrc1FVRkJjVUk3VFVGRGNrSXNRVUZCVVR0RlFVZGFPMGxCUTBrc1FVRkJVVHRKVmxwS0xFRlZZVW83U1VGRFFTeEJRVUZoTzBsQlEySXNRVUZCVnp0SlFVTllMRUZCUVdFN1NVRkRZaXhCUVVGTk8wbEJRMDRzUVVGQllUdEpRVU5pTEVGQlFWVTdTVUZEVml4QlFVRlJPMGxCUTFJc1FVRkJZVHRKUVVWcVFpeEJRVUYxUWp0TlFVTnFRaXhCUVVGVk8wbFVhVUprTzAxVE9VSkdPMUZCWjBKTkxFRkJRVlU3VVVGRFZpeEJRVUZYTzFGQlExZ3NRVUZCVXpzN1FVRkZaanRGVm01RFVTeEJWVzlEVGp0RlZtaERUU3hCVldsRFRqdEZRVU5CTEVGQlFWTTdSVUZEVkN4QlFVRlJPMFZCUlZZc1FVRkJhVUk3U1VGRFlpeEJRVUZUTzBWQlJXSTdTVUZEU1N4QlFVRlRPMFZCUldJN1NWWXpRMUVzUVZVMFEwbzdSVUZKU2p0SlZteEVVU3hCVlcxRVNqczdRVUZSU2p0RlFVTkZMRUZCUVd0Q08wVkJRMnhDTEVGQlFYRkNPMFZCUTNKQ0xFRkJRV2xDTzBWQlEycENMRUZCUVZFN08wRkRha1ZXTzBWQlEwVXNRVUZCVXp0RlFVTlVMRUZCUVZrN1JVRkRXaXhCUVVGbE8wVldNRU5tTzBsVk4wTkdPMDFPY1VKSkxFRkJRVmM3UlUxa1pqdEpRVU5KTEVGQlFWTTdTVUZEVkN4QlFVRm5RanRKUVVWb1FpeEJRVUZUTzBsV2EwTllPMDFWZEVOR08xRkJUMDBzUVVGQlV6dEpWaXRDWWp0TlZUZENSaXhCUVVGcFFqdFJRVVZVTEVGQlFXRTdVVUZEWWl4QlFVRlRPMFZCUldwQ08wbEJRMGtzUVVGQldUdEZRVVZvUWp0SlFVTkpMRUZCUVdVN1JVRkZia0k3U1VGRFNTeEJRVUZaTzBsQlExb3NRVUZCWlR0RlFVVnVRaXhCUVVGaE8wbEJRMVFzUVVGQldUdEpRVU5hTEVGQlFWazdTVUZGYUVJc1FVRkJZU3hCUVVGSE8wMUJRMVlzUVVGQlV6dE5RVU5VTEVGQlFWTTdUVUZEVkN4QlFVRlBPMFZCUjJJN1NWaDZRMUVzUVZjd1EwbzdTVUZEUVN4QlFVRlRPMGxhZGtOSkxFRlpkME5pTzBsQlEwRXNRVUZCVXp0SlFVTlVMRUZCUVdkQ08wbEJRM0JDTEVGQlFXdENPMDFZTTBKWExFRlhORUoyUWpzN1FVRkhUanRGUVVORkxFRkJRV2RDTzBWV1VHaENPMGxWVFVZN1RVRkpTU3hCUVVGbE8wMUJRMllzUVVGQlpUdEZRVVZ1UWp0SlFVTkpMRUZCUVdkQ08wbFdaR3hDTzAxVllVWTdVVUZKVFN4QlFVRmxPMUZCUTJZc1FVRkJXVHRKVm14Q2FFSTdUVlZ2UWtZc1FVRkJhVUk3VVVGRlZDeEJRVUZUTzFGQlExUXNRVUZCVHp0RlFVVm1PMGxCUTBrc1FVRkJZenRKUVVOa0xFRkJRV0U3U1VGRFlpeEJRVUZuUWp0SlZqVkNiRUk3VFZWNVFrWTdVVUZOVFN4QlFVRlRPMFZCUldZN1NWZzVSVkVzUVVScFJFNDdTVUUzUTJVc1FVRTRRMlk3U1VGRFFTeEJRVUZYTzBsQk0wTktMRUZCTkVOUU8wbEJRMEVzUVVGQllUdEpXVEpDV0N4QlFVRmpPMFZCUld4Q08wbFlNVVZSTEVGWE1rVktPMGxCUTBFc1FVRkJaVHRKUVVWdVFpeEJRVUZ2UWp0TlFVTmtMRUZCUVZNN1NVRkRaaXhCUVVGdlFqdE5XSGhHV2l4QlYzbEdSanROUVVOQkxFRkJRV0U3VFVGRGJrSXNRVUZCYjBJc1FVRkJSVHRSUVVOa0xFRkJRVTg3VVVGRFVDeEJRVUZUTzBWV2FFUm1PMGxWYTBSR08wMUJSMDBzUVVGQldUdEZRVVZzUWl4QlFVRm5RaXhCUVVGSk8wbEJRMlFzUVVGQldUczdRVUZOYkVJN1JVRkRTU3hCUVVGWk8wVkJRMW9zUVVGQlV6dEZXblpHV0N4QlFVRmhPMFZCUTJJc1FVRkJaMEk3UlZsNVJteENMRUZCUVcxQ0xFRkJRVWs3U1VGRGFrSXNRVUZCV1R0QlFVZHNRaXhCUVVGakxFRkJRVU03UlVGRFZDeEJRVUZwUWp0QlFVVjJRaXhCUVVGak8wVllka2hPTEVGRWFVUk9PMFZCTjBObExFRkJPRU5tTzBWQlEwRXNRVUZCVnp0RlFUTkRTaXhCUVRSRFVEdEZRVU5CTEVGQlFXRTdSVmx2UldZc1FVRkJZeXhCUVVGRk8wbFllRWhJTEVGWGVVaFFPMEZCUlU0c1FVRkJZenRGUVVOV0xFRkJRVTg3UlVGRFVDeEJRVUZYT3p0QlFVbG1PMFZCUTBVc1FVRkJVenRGUVVOVUxFRkJRV0U3TzBGQlIyWTdSVUZEUlN4QlFVRlRPMFZCUTFRc1FVRkJXVHRGUVVOYUxFRkJRV1U3UlVGRmFrSTdTVUZEU1N4QlFVRlRPMGxCUTFRc1FVRkJaMEk3U1ZacVIyeENPMDFWYlVkR0xFRkJRV3RDTzFGQlJWWXNRVUZCWVR0SlZuSkhia0k3VFZWMVIwWXNRVUZCYTBJN1VVRkZWaXhCUVVGaE8wVkJSWEpDTzBsQlEwa3NRVUZCVVR0SlFVTlNMRUZCUVZVN1NVRkRWaXhCUVVGbE8wVkJTVzVDTzBsWUwwcFJMRUZFYlVWT08wbEJMMFJsTEVGQlowVm1PMGxCUTBFc1FVRkJWenRKUVRkRVNpeEJRVGhFVUR0SlFVTkJMRUZCUVdFN1NVTjJSVkFzUVZkcFMwbzdTVUZEUVN4QlFVRlRPMGxCUTFRc1FVRkJXVHRKUVVWb1FpeEJRVUV5UWp0TldHcEtSU3hCVjJ0S2RrSTdSVUZGVGp0SlFVTkpMRUZCUVZrN08wRkRlRXRvUWp0RldrTlJMRUZaUVU0N1JVRkRRU3hCUVVGVE8wVkJRMVFzUVVGQlR6dEZRVVZVTzBsQlEwa3NRVUZCVXp0RlFVVmlMRUZCUVdsQ08wbEJRMklzUVVGQlV6dEZRVWRpTzBsQlEwa3NRVUZCVVR0SlFVTlNMRUZCUVZNN1NWZzRRbGc3VFZkb1EwWTdVVUZMVFN4QlFVRlRPMFZCUldZN1NVRkRTU3hCUVVGVE8wbEJRMVFzUVVGQlVUdEpXSFZDVmp0TlYzcENSanRSUVV0TkxFRkJRVkU3TzBGQlIyUTdSVUZEUlN4QlFVRlRPMFZCUTFRc1FVRkJVenRGUVVWWUxFRkJRVms3U1VGRFVpeEJRVUZQTzBsQlExQXNRVUZCVVR0RldGZFdPMGxYYWtKR08wMUJVMGtzUVVGQlZ6dEZRVVZtTzBsQlEwa3NRVUZCWlR0SldFdHFRanROVjA1R08xRkJTVTBzUVVGQlV6dEZRVWxtTzBsQlEwa3NRVUZCWlR0RlFVZHVRanRKUVVOSkxFRkJRVkU3U1VGRFVpeEJRVUZWTzBsWVVsbzdUVmROUmp0UlFVdE5MRUZCUVZFN1VVRkRVaXhCUVVGWk96dEJRVWRzUWp0RlFVTkZMRUZCUVZNN1JVRkRWQ3hCUVVGWk8wVkJTV1E3U1VGRFNTeEJRVUZUTzBsQlExUXNRVUZCWlR0SldIWkNha0k3VFZkeFFrWTdVVUZMVFN4QlFVRlRPenRCUVUxbU8wVmFOMFZSTEVGWk9FVk9PMFZhTVVWTkxFRlpNa1ZPTzBWaWVrUkJMRUZCUVdFN1JVRkRZaXhCUVVGblFqdEZZVEpFYkVJN1NWbzVSVkVzUVZrclJVbzdTVUZEUVN4QlFVRlpPMFZCUldoQ08wbEJRMGtzUVVGQlV6dEpRVU5VTEVGQlFWRTdTVUZEVWl4QlFVRlBPMFZCUzFnN1NVRkRTU3hCUVVGVE8wbEJRMVFzUVVGQlR6dEZRVVZZTzBsQlEwa3NRVUZCVVR0SldpOUdTaXhCV1dkSFNqdEpRVU5CTEVGQlFWYzdTVUZEV0N4QlFVRmhPMGxCUTJJc1FVRkJUenRKUVVOUUxFRkJRVms3U1VGRmFFSXNRVUZCYzBJN08wMWFkRWRrTEVGWmQwZEdPMDFhTlVkRkxFRlpOa2RHTzBsWWFFVktPMDFYY1VSR08xRkJZMDBzUVVGQlVUdEZRVVZrTzBsQlEwa3NRVUZCVXp0SlFVTlVMRUZCUVdFN1JVRkZha0k3U1VGRFNTeEJRVUZUTzBsQlExUXNRVUZCWVR0SlFVVnFRanROUVVOTkxFRkJRVms3TzBGQlIyeENPMFZCUTBVc1FVRkJVenRGUVVOVUxFRkJRV2RDTzBWWWJrWm9RanRKVjJsR1JqdE5RVXRKTEVGQlFWTTdSVUZUWWp0SlFVTkpMRUZCUVZjN1NXSXpTR0lzUVVGQldUdEpRVU5hTEVGQlFXVTdSV0VyU0dwQ08wbEJRMGtzUVVGQldUczdRVUZGYUVJc1FVRkJkVUlzUVVGQmRVSXNRVUZCY1VJN1JVRkZha1VzUVVGQldUczdRVUZKWkR0RlFVTkZMRUZCUVdNN1JVRkZhRUlzUVVGQldUdEpXamxLU2l4QldTdEtTanRKUVVWS0xFRkJRVmtzUVVGQlN6dE5XakZLVGl4QldUSktURHRGUVVkT0xFRkJRVmtzUVVGQlF6dEpRVU5RTEVGQlFXbENPenRCUTNCTGRrSTdSVUZEUXl4QlFVRm5RanRGV2pCRFpqdEpXVE5EUmp0TlFVbEZMRUZCUVZNN08wRkJSMWc3UlVGRFF5eEJRVUZaTzBWQlExb3NRVUZCVXp0RlFVTlVMRUZCUVZNN1JVRkRWQ3hCUVVGUE8wVmFaME5PTzBsWmNFTkdPMDFCVDBVc1FVRkJVenROUVVOVUxFRkJRVk03UlVGRldEdEpRVU5GTEVGQlFVODdTVnA1UWxBN1RWa3hRa1k3VVVGSlJ5eEJRVUZUTzFGQlExUXNRVUZCVHp0UlFVVldMRUZCUVRSQ08xVkJRM2hDTEVGQlFWTTdWVUZEVkN4QlFVRlBPMFZCUjFnN1NVRkRSU3hCUVVGWk8wbGFZVm83VFZsa1JqdFJRVWxITEVGQlFWazdTVUZGWml4QlFVRjFRanROUVVOd1FpeEJRVUZUTzAxQlExUXNRVUZCVnp0TlFVTllMRUZCUVdVN1RWcExhRUk3VVZsU1JpeEJRVUYxUWp0VlFVOXVRaXhCUVVGWE8xVkJRMWdzUVVGQlV6dFZRVVZpTEVGQlFYVkNMRUZCUVVzN1dVRkRkRUlzUVVGQlV6dFZRVWRtTEVGQlFYVkNMRUZCUVVzc1FVRkJZVHRaUVVOcVF5eEJRVUZUTzBsQlNXcENMRUZCUVhWQ0xFRkJRVmNzUVVGQlJ6dE5RVU01UWl4QlFVRlhPMDFhV21oQ08xRlpWMFlzUVVGQmRVSXNRVUZCVnl4QlFVRkhPMVZCUnpWQ0xFRkJRVmM3TzBGQlJYQkNPMFZCUTBNc1FVRkJXVHRGUVVOYUxFRkJRVTg3UlVGRlVqdEpRVU5GTEVGQlFWRTdTVUZEVWl4QlFVRlRPMGxCUTFRc1FVRkJXVHRKUVVOYUxFRkJRVk03U1VGRFZDeEJRVUZSTzBsYWVrSlNPMDFaYjBKR08xRkJVVWtzUVVGQlV6dEZRVVZpTEVGQlFXMUNPMGxCUldwQ0xFRkJRVk03U1VGRFZDeEJRVUZSTzBsQlJWWXNRVUZCYlVJc1FVRkJSenROUVVOdVFpeEJRVUZUTzAxQlExUXNRVUZCVVR0TlFVTlNMRUZCUVdNN1RVRkRaQ3hCUVVGdFFqdE5RVU51UWl4QlFVRlJPMDFCUTFJc1FVRkJVenROUVVOYUxFRkJRVzFDTEVGQlFVY3NRVUZCUlR0UlFVTnVRaXhCUVVGak8wMUJRMjVDTEVGQlFXMUNMRUZCUVVjc1FVRkJSVHRSUVVOdVFpeEJRVUZ0UWp0RlFVVjRRaXhCUVVGdFFpeEJRVUZKTEVGQlFXMUNMRUZCUVVjc1FVRkJiVUk3U1VGRE9VUXNRVUZCVnp0SlFVTllMRUZCUVdVN1NWcHFSR1k3VFZrclEwWXNRVUZCYlVJc1FVRkJTU3hCUVVGdFFpeEJRVUZITEVGQlFXMUNPMUZCU3pkRUxFRkJRVmM3TzFkRGFFZElPMFZCUTFnN1NVRkRTU3hCUVVGVE96dEZRVU5pTzBsQlEwa3NRVUZCVXpzN1FVRkZZanRGWkVoUkxFRmpTVTQ3UlVGRFFTeEJRVUZoTzBWQlEySXNRVUZCWXp0RlFVTmtMRUZCUVZFN1JVRkRVaXhCUVVGWE96dEJRVVZpTEVGQlFXdENPMFZCUTJoQ0xFRkJRV0U3TzBGQlJXWTdSV1JpVVN4QlkyTk9PenRCUVVkR08wVkJRMFVzUVVGQlV6dEZRVU5VTEVGQlFWTTdSVUZEVkN4QlFVRlBPMFZpY1VKUU8wbGhlRUpHTzAxQlRVa3NRVUZCVHp0RlltdENWRHRKWVhoQ1JqdE5RVk5KTEVGQlFWTTdUVUZEVkN4QlFVRlBPenRCUVVWWUxFRkJRV3RDTzBWQlEyaENMRUZCUVZFN1JVRkRVaXhCUVVGVE96dEJRVXRZTEVGQlFVa3NRVUZCVFN4QlFVRkpPMFZrZUVOT0xFRmplVU5LTzBGQlJVb3NRVUZCUnl4QlFVRlBMRUZCUVUwc1FVRkJSeXhCUVVGUE8wVkJSWFJDTEVGQlFWTTdSVUZEVkN4QlFVRlpPMFZCUTFvc1FVRkJZenM3UVVGRmJFSTdSVUZEUlN4QlFVRlRPMFZpVEZRN1NXRkpSanROUVVsSkxFRkJRVk03TzBGQlJXSTdSVUZEUlN4QlFVRlRPMFZpV0ZRN1NXRlZSanROUVVsSkxFRkJRVk03TzBGQmQwSmlMRUZCUVd0Q0xFRkJRV0U3UldSdVJuWkNMRUZqYjBaS08wVkJRMEVzUVVGQlV6czdRVU53Ums0c1FVRkJaMElzUVVGQldUdEZRVU5xUXl4QlFVRlRPMFZCUTFRc1FVRkJVenM3UVVGRldEdEZRVVZGTEVGQlFXZENPMFZrYzBOb1FqdEpZM0JEUmp0TlFVZE5MRUZCUVZrN1JVRkZiRUlzUVVGQmRVSTdTVUZEYWtJc1FVRkJZVHRKUVVOaUxFRkJRV2RDTzBWQlNYUkNMRUZCUVhGQ0xFRkJRVWs3U1VGRGJrSXNRVUZCV1R0RlFVVnNRaXhCUVVGeFFqdEpablpDWWl4QlJHbEVUanRKUVRkRFpTeEJRVGhEWmp0SlFVTkJMRUZCUVZjN1NVRXpRMG9zUVVFMFExQTdTVUZEUVN4QlFVRmhPMGxCTDBKaUxFRkJRV0U3U1VGRFlpeEJRVUZuUWp0RlowSkpiRUlzUVVGQmNVSTdTVUZEWml4QlFVRmpPMGxCUTJRc1FVRkJXVHRKUVVWc1FpeEJRVUZ4UWl4QlFVRkhPMDFCUTJoQ0xFRkJRVms3UlVGRmNFSXNRVUZCY1VJN1NVRkRaaXhCUVVGak8wVkJSWEJDTEVGQlFYRkNPMGxCUTJZc1FVRkJVVHRKUVVOU0xFRkJRVTg3U1VGRllpeEJRVUZ4UWl4QlFVRkhPMDFCUTJoQ0xFRkJRVTg3TzBGQlIyWTdSVUZEUlN4QlFVRlRPMFZCUTFRc1FVRkJVenM3UVVGTldEdEZRVU5GTEVGQlFVMDdPMEZCUTFJN1JVRkRSU3hCUVVGTk96dEJRVWRTTzBWbU1VUmhMRUZsTWtSWU8wVkJRMFlzUVVGQlpUdEpaamRFVUN4QlpUaEVTanM3UVdScVFrWTdSV04xUWtZN1NVRkhUU3hCUVVGWk8wRkJSV3hDTEVGQlFXbENMRUZCUVVrN1JVRkRaaXhCUVVGWk8wRkJSV3hDTEVGQlFXbENPMFZtTlVWVUxFRkVhVVJPTzBWQk4wTmxMRUZCT0VObU8wVkJRMEVzUVVGQlZ6dEZRVE5EU2l4QlFUUkRVRHRGUVVOQkxFRkJRV0U3UVdkQ01FSm1MRUZCUVdsQ08wVm1PVVZLTEVGRWQwUllPMFZCY2tSbExFRkJjMFJtTzBWQlEwRXNRVUZCVnp0RlFXcEVUaXhCUVd0RVREdEZRVU5CTEVGQlFXRTdSVUZEWWl4QlFVRm5RanRGUVRWRGFFSXNRVUZCV1R0RlFVTmFMRUZCUVdVN1FXZENLMFJxUWl4QlFVRnBRanRGWmpORlRpeEJaVFJGVER0RlFVTkJMRUZCUVZjN1JVRkRXQ3hCUVVGWk8wRkJSV3hDTEVGQlFXbENPMFZtZGtaVUxFRkVNa1ZPTzBWQmRrVmxMRUZCZDBWbU8wVkJRMEVzUVVGQlZ6dEZRVU5ZTEVGQlFWazdSVUZ3UlZBc1FVRnhSVXc3UlVFM1JFRXNRVUZCV1R0RlFVTmFMRUZCUVdVN08wRm5RbmRGYWtJN1JVRkRSU3hCUVVGblFqdEZRVU5vUWl4QlFVRlZPMFZCUlZvc1FVRkJXVHRKWmk5R1NpeEJaV2RIU2p0SlFVTktMRUZCUVZrc1FVRkJRenROWm1oSFFTeEJaV2xIVUR0RlFVTk9MRUZCUVZrN1NXWXpSa29zUVdVMFJrbzdPMEZEY0VkS08wVkJRMFVzUVVGQldUdEZRVVZrTEVGQlFXVXNRVUZCVHl4QlFVRmxMRUZCUVVzc1FVRkJaMElzUVVGQlpTeEJRVUZMTEVGQlFXbENMRUZCUVdVc1FVRkJTeXhCUVVGdFFpeEJRVUZsTEVGQlFVc3NRVUZCYVVJc1FVRkJaU3hCUVVGTExFRkJRV01zUVVGQlpTeEJRVUZMTEVGQlFXVXNRVUZCWlN4QlFVRkxMRUZCUVdNc1FVRkJaU3hCUVVGTExFRkJRV2RDTEVGQlFXVXNRVUZCU3l4QlFVRmxMRUZCUVdVc1FVRkJTeXhCUVVGbExFRkJRV1VzUVVGQlN5eEJRVUZ0UWl4QlFVRmxMRUZCUVVzc1FVRkJlVUlzUVVGQlpTeEJRVUZMTEVGQlFXZENMRUZCUVdVc1FVRkJTeXhCUVVGbExFRkJRV1VzUVVGQlN5eEJRVUZsTEVGQlFXVTdTV2hDVHpscVFpeEJaMEpWVWp0SlFVTkJMRUZCUVZFN1NVRkJWU3hCUVVOTU8wbEJRMklzUVVGQlpUdEpRVUZCTEVGQlEwZzdTVUZEV2l4QlFVRlRPMGxCUTFRc1FVRkJVenRKUVVOVUxFRkJRVTg3UlVGSFZpeEJRVUZsTzBsQlExZ3NRVUZCVXp0RlFVVmlMRUZCUVdVc1FVRkJTeXhCUVVGcFFpeEJRVUZsTEVGQlFVc3NRVUZCWjBJc1FVRkJaU3hCUVVGTE8wbEJSM3BHTEVGQlFWTTdSVUZIWWp0SlFVTkpMRUZCUVZNN1NVRkRWQ3hCUVVGUE8wbEJRMUFzUVVGQlR6dEZRVVZZTEVGQlFUSkNPMGxCUTNaQ0xFRkJRVk03U1VGRFZDeEJRVUZQTzBsQlExQXNRVUZCVVR0RlFVVmFMRUZCUVdVN1NXaENOME5RTEVGblFqaERTanRKUVVOQkxFRkJRV1U3U1VGRFppeEJRVUZSTzBsQlExSXNRVUZCVlR0SlFVTldMRUZCUVZFN1NVRkZXaXhCUVVGbExFRkJRVlU3VFVGRGJrSXNRVUZCVHp0TlFVTlFMRUZCUVZNN1RVRkRWQ3hCUVVGVk8wMUJRMVlzUVVGQlN6dE5RVU5NTEVGQlFVODdUVUZEVUN4QlFVRlBPMDFCUTFBc1FVRkJVVHRGUVVka0xFRkJRV1U3U1doQ09VUlFMRUZuUWl0RVNqdEpRVU5CTEVGQlFWazdTVUZEV2l4QlFVRmxPMGxCUTJZc1FVRkJVVHRKYUVJNVJFb3NRV2RDSzBSS08wbEJRMEVzUVVGQlVUdEpRVU5TTEVGQlFWTTdTVUZEVkN4QlFVRlhPMGxCUTFnc1FVRkJVVHRKUVVOU0xFRkJRVlU3U1VGRlZpeEJRVUZqTzBsQlEyUXNRVUZCVHp0SlFVTlFMRUZCUVcxQ08wbEJRMjVDTEVGQlFXbENPMGxCUTJwQ0xFRkJRVms3TzBGQlIyaENPMFZvUW01R1VTeEJaMEp2Ums0N1JVRkRRU3hCUVVGVk8wVkJRMVlzUVVGQlRUczdRVUZIVWl4QlFVRnBRaXhCUVVGVk8wVkJRM3BDTEVGQlFWTWlMQ0ptYVd4bElqb2ljM1I1YkdVdVkzTnpJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpTHk4Z1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDFjYmk4dklFNXZjbTFoYkdsNlpTNXpZM056SUdKaGMyVmtJRzl1SUU1cFkyOXNZWE1nUjJGc2JHRm5hR1Z5SUdGdVpDQktiMjVoZEdoaGJpQk9aV0ZzSjNOY2JpOHZJRzV2Y20xaGJHbDZaUzVqYzNNZ2RqSXVNUzR6SUh3Z1RVbFVJRXhwWTJWdWMyVWdmQ0JuYVhRdWFXOHZibTl5YldGc2FYcGxYRzR2THlBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVnh1WEc0dkx5QTlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFZ4dUx5OGdUbTl5YldGc2FYcGxMbk5qYzNNZ2MyVjBkR2x1WjNOY2JpOHZJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVhHNWNibHh1THk4Z1UyVjBJSFJ2SUhSeWRXVWdhV1lnZVc5MUlIZGhiblFnZEc4Z1lXUmtJSE4xY0hCdmNuUWdabTl5SUVsRk5pQmhibVFnU1VVM1hHNHZMeUJPYjNScFkyVTZJSE5sZEhScGJtY2dkRzhnZEhKMVpTQnRhV2RvZENCeVpXNWtaWElnYzI5dFpTQmxiR1Z0Wlc1MGMxeHVMeThnYzJ4cFoyaDBiSGtnWkdsbVptVnlaVzUwYkhrZ2RHaGhiaUIzYUdWdUlITmxkQ0IwYnlCbVlXeHpaVnh1Skd4bFoyRmplVjl6ZFhCd2IzSjBYMlp2Y2w5cFpUb2dabUZzYzJVZ0lXUmxabUYxYkhRN0lDOHZJRlZ6WldRZ1lXeHpieUJwYmlCRGIyMXdZWE56WEc1Y2JseHVMeThnVTJWMElIUm9aU0JrWldaaGRXeDBJR1p2Ym5RZ1ptRnRhV3g1SUdobGNtVWdjMjhnZVc5MUlHUnZiaWQwSUdoaGRtVWdkRzhnYjNabGNuSnBaR1VnYVhRZ2JHRjBaWEpjYmlSdWIzSnRZV3hwZW1Wa1gyWnZiblJmWm1GdGFXeDVPaUJ6WVc1ekxYTmxjbWxtSUNGa1pXWmhkV3gwTzF4dVhHNGtibTl5YldGc2FYcGxYMmhsWVdScGJtZHpPaUIwY25WbElDRmtaV1poZFd4ME8xeHVYRzRrYURGZlptOXVkRjl6YVhwbE9pQXlaVzBnSVdSbFptRjFiSFE3WEc0a2FESmZabTl1ZEY5emFYcGxPaUF4TGpWbGJTQWhaR1ZtWVhWc2REdGNiaVJvTTE5bWIyNTBYM05wZW1VNklERXVNVGRsYlNBaFpHVm1ZWFZzZER0Y2JpUm9ORjltYjI1MFgzTnBlbVU2SURGbGJTQWhaR1ZtWVhWc2REdGNiaVJvTlY5bWIyNTBYM05wZW1VNklEQXVPRE5sYlNBaFpHVm1ZWFZzZER0Y2JpUm9ObDltYjI1MFgzTnBlbVU2SURBdU56VmxiU0FoWkdWbVlYVnNkRHRjYmx4dUpHZ3hYMjFoY21kcGJqb2dNQzQyTjJWdElEQWdJV1JsWm1GMWJIUTdYRzRrYURKZmJXRnlaMmx1T2lBd0xqZ3paVzBnTUNBaFpHVm1ZWFZzZER0Y2JpUm9NMTl0WVhKbmFXNDZJREZsYlNBd0lDRmtaV1poZFd4ME8xeHVKR2cwWDIxaGNtZHBiam9nTVM0ek0yVnRJREFnSVdSbFptRjFiSFE3WEc0a2FEVmZiV0Z5WjJsdU9pQXhMalkzWlcwZ01DQWhaR1ZtWVhWc2REdGNiaVJvTmw5dFlYSm5hVzQ2SURJdU16TmxiU0F3SUNGa1pXWmhkV3gwTzF4dVhHNGtZbUZqYTJkeWIzVnVaRG9nSTJabVppQWhaR1ZtWVhWc2REdGNiaVJqYjJ4dmNqb2dJekF3TUNBaFpHVm1ZWFZzZER0Y2JseHVMeThnUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMWNiaTh2SUVoVVRVdzFJR1JwYzNCc1lYa2daR1ZtYVc1cGRHbHZibk5jYmk4dklEMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5WEc1Y2JpOHZJRU52Y25KbFkzUnpJR0pzYjJOcklHUnBjM0JzWVhrZ2JtOTBJR1JsWm1sdVpXUWdhVzRnU1VVMkx6Y3ZPQzg1SUNZZ1JrWXpYRzVjYm1GeWRHbGpiR1VzWEc1aGMybGtaU3hjYm1SbGRHRnBiSE1zWEc1bWFXZGpZWEIwYVc5dUxGeHVabWxuZFhKbExGeHVabTl2ZEdWeUxGeHVhR1ZoWkdWeUxGeHVhR2R5YjNWd0xGeHVibUYyTEZ4dWMyVmpkR2x2Yml4Y2JuTjFiVzFoY25rZ2UxeHVJQ0FnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh1ZlZ4dVhHNHZMeUJEYjNKeVpXTjBjeUJwYm14cGJtVXRZbXh2WTJzZ1pHbHpjR3hoZVNCdWIzUWdaR1ZtYVc1bFpDQnBiaUJKUlRZdk55ODRMemtnSmlCR1JqTmNibHh1WVhWa2FXOHNYRzVqWVc1MllYTXNYRzUyYVdSbGJ5QjdYRzRnSUNBZ1pHbHpjR3hoZVRvZ2FXNXNhVzVsTFdKc2IyTnJPMXh1SUNBZ0lFQnBaaUFrYkdWbllXTjVYM04xY0hCdmNuUmZabTl5WDJsbElIdGNiaUFnSUNBZ0lDQWdLbVJwYzNCc1lYazZJR2x1YkdsdVpUdGNiaUFnSUNBZ0lDQWdLbnB2YjIwNklERTdYRzRnSUNBZ2ZWeHVmVnh1WEc0dkx5QXhMaUJRY21WMlpXNTBjeUJ0YjJSbGNtNGdZbkp2ZDNObGNuTWdabkp2YlNCa2FYTndiR0Y1YVc1bklDZGhkV1JwYnljZ2QybDBhRzkxZENCamIyNTBjbTlzYzF4dUx5OGdNaTRnVW1WdGIzWmxJR1Y0WTJWemN5Qm9aV2xuYUhRZ2FXNGdhVTlUTlNCa1pYWnBZMlZ6WEc1Y2JtRjFaR2x2T201dmRDaGJZMjl1ZEhKdmJITmRLU0I3WEc0Z0lDQWdaR2x6Y0d4aGVUb2dibTl1WlRzZ0x5OGdNVnh1SUNBZ0lHaGxhV2RvZERvZ01Ec2dMeThnTWx4dWZWeHVYRzR2TDF4dUx5OGdRV1JrY21WemN5QmdXMmhwWkdSbGJsMWdJSE4wZVd4cGJtY2dibTkwSUhCeVpYTmxiblFnYVc0Z1NVVWdPQzg1TGx4dUx5OGdTR2xrWlNCMGFHVWdZSFJsYlhCc1lYUmxZQ0JsYkdWdFpXNTBJR2x1SUVsRkxDQlRZV1poY21rc0lHRnVaQ0JHYVhKbFptOTRJRHdnTWpJdVhHNHZMMXh1WEc1YmFHbGtaR1Z1WFN3Z2RHVnRjR3hoZEdVZ2UxeHVJQ0FnSUdScGMzQnNZWGs2SUc1dmJtVTdYRzU5WEc1Y2JpOHZJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVhHNHZMeUJDWVhObFhHNHZMeUE5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBWeHVYRzR2THlBeExpQkRiM0p5WldOMGN5QjBaWGgwSUhKbGMybDZhVzVuSUc5a1pHeDVJR2x1SUVsRk5pODNJSGRvWlc0Z1ltOWtlU0JtYjI1MExYTnBlbVVnYVhNZ2MyVjBJSFZ6YVc1bklHVnRJSFZ1YVhSelhHNHZMeUFnSUNCb2RIUndPaTh2WTJ4aFoyNTFkQzVqYjIwdllteHZaeTh6TkRndkkyTTNPVEJjYmk4dklESXVJRkJ5WlhabGJuUnpJR2xQVXlCMFpYaDBJSE5wZW1VZ1lXUnFkWE4wSUdGbWRHVnlJRzl5YVdWdWRHRjBhVzl1SUdOb1lXNW5aU3dnZDJsMGFHOTFkQ0JrYVhOaFlteHBibWNnZFhObGNpQjZiMjl0WEc0dkx5QWdJQ0IzZDNjdU5EVTJZbVZ5WldGemRISmxaWFF1WTI5dEwyRnlZMmhwZG1Vdk1qQXhNREV5TDJOdmJuUnliMnhzYVc1blgzUmxlSFJmYzJsNlpWOXBibDl6WVdaaGNtbGZabTl5WDJsdmMxOTNhWFJvYjNWMFgyUnBjMkZpYkdsdVoxOTFjMlZ5WDNwdmIyMHZYRzVjYm1oMGJXd2dlMXh1SUNBZ0lFQnBaaUFrYkdWbllXTjVYM04xY0hCdmNuUmZabTl5WDJsbElIdGNiaUFnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF4TURBbE95QXZMeUF4WEc0Z0lDQWdmVnh1WEhSY2RDOHZZbUZqYTJkeWIzVnVaRG9nSkdKaFkydG5jbTkxYm1RN1hHNWNkRngwTHk5amIyeHZjam9nSkdOdmJHOXlPMXh1SUNBZ0lDMTNaV0pyYVhRdGRHVjRkQzF6YVhwbExXRmthblZ6ZERvZ01UQXdKVHNnTHk4Z01seHVJQ0FnSUMxdGN5MTBaWGgwTFhOcGVtVXRZV1JxZFhOME9pQXhNREFsT3lBdkx5QXlYRzU5WEc1Y2JpOHZJRUZrWkhKbGMzTmxjeUJtYjI1MExXWmhiV2xzZVNCcGJtTnZibk5wYzNSbGJtTjVJR0psZEhkbFpXNGdKM1JsZUhSaGNtVmhKeUJoYm1RZ2IzUm9aWElnWm05eWJTQmxiR1Z0Wlc1MGN5NWNibHh1YUhSdGJDeGNibUoxZEhSdmJpeGNibWx1Y0hWMExGeHVjMlZzWldOMExGeHVkR1Y0ZEdGeVpXRWdlMXh1SUNBZ0lDOHZabTl1ZEMxbVlXMXBiSGs2SUNSdWIzSnRZV3hwZW1Wa1gyWnZiblJmWm1GdGFXeDVPMXh1ZlZ4dVhHNHZMeUJCWkdSeVpYTnpaWE1nYldGeVoybHVjeUJvWVc1a2JHVmtJR2x1WTI5eWNtVmpkR3g1SUdsdUlFbEZOaTgzWEc1Y2JtSnZaSGtnZTF4dUlDQWdJRzFoY21kcGJqb2dNRHRjYm4xY2JseHVMeThnUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMWNiaTh2SUV4cGJtdHpYRzR2THlBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVnh1WEc0dkx5QXhMaUJTWlcxdmRtVWdkR2hsSUdkeVlYa2dZbUZqYTJkeWIzVnVaQ0JqYjJ4dmNpQm1jbTl0SUdGamRHbDJaU0JzYVc1cmN5QnBiaUJKUlNBeE1DNWNiaTh2SURJdUlFRmtaSEpsYzNObGN5QnZkWFJzYVc1bElHUnBjM0JzWVhsbFpDQnZaR1JzZVNCcGJpQkRhSEp2YldWY2JpOHZJRE11SUVsdGNISnZkbVZ6SUhKbFlXUmhZbWxzYVhSNUlIZG9aVzRnWm05amRYTmxaQ0JoYm1RZ1lXeHpieUJ0YjNWelpTQm9iM1psY21Wa0lHbHVJR0ZzYkNCaWNtOTNjMlZ5YzF4dUx5OGdJQ0FnY0dWdmNHeGxMbTl3WlhKaExtTnZiUzl3WVhSeWFXTnJiQzlsZUhCbGNtbHRaVzUwY3k5clpYbGliMkZ5WkM5MFpYTjBYRzVjYm1FZ2UxeHVJQ0FnSUM4dklERmNibHh1SUNBZ0lHSmhZMnRuY205MWJtUTZJSFJ5WVc1emNHRnlaVzUwTzF4dVhHNGdJQ0FnTHk4Z01seHVYRzRnSUNBZ0pqcG1iMk4xY3lCN1hHNGdJQ0FnSUNBZ0lDOHZiM1YwYkdsdVpUb2dkR2hwYmlCa2IzUjBaV1E3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdMeThnTTF4dVhHNGdJQ0FnSmpwb2IzWmxjaXhjYmlBZ0lDQW1PbUZqZEdsMlpTQjdYRzRnSUNBZ0lDQWdJRzkxZEd4cGJtVTZJREE3WEc0Z0lDQWdmVnh1ZlZ4dVhHNHZMeUE5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBWeHVMeThnVkhsd2IyZHlZWEJvZVZ4dUx5OGdQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQxY2JseHVMeThnUVdSa2NtVnpjMlZ6SUdadmJuUWdjMmw2WlhNZ1lXNWtJRzFoY21kcGJuTWdjMlYwSUdScFptWmxjbVZ1ZEd4NUlHbHVJRWxGTmk4M1hHNHZMeUJCWkdSeVpYTnpaWE1nWm05dWRDQnphWHBsY3lCM2FYUm9hVzRnSjNObFkzUnBiMjRuSUdGdVpDQW5ZWEowYVdOc1pTY2dhVzRnUmtZMEt5d2dRMmh5YjIxbExDQlROVnh1WEc0dktpQkFhV1lnWEZ3a2JtOXliV0ZzYVhwbFgyaGxZV1JwYm1keklEMDlJSFJ5ZFdVZ2UxeHVJQ0FnSUdneElIdGNiaUFnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUJjWENSb01WOW1iMjUwWDNOcGVtVTdYRzRnSUNBZ0lDQWdJRzFoY21kcGJqb2dYRndrYURGZmJXRnlaMmx1TzF4dUlDQWdJSDFjYmx4dUlDQWdJR2d5SUh0Y2JpQWdJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQmNYQ1JvTWw5bWIyNTBYM05wZW1VN1hHNGdJQ0FnSUNBZ0lHMWhjbWRwYmpvZ1hGd2thREpmYldGeVoybHVPMXh1SUNBZ0lIMWNibHh1SUNBZ0lHZ3pJSHRjYmlBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lCY1hDUm9NMTltYjI1MFgzTnBlbVU3WEc0Z0lDQWdJQ0FnSUcxaGNtZHBiam9nWEZ3a2FETmZiV0Z5WjJsdU8xeHVJQ0FnSUgxY2JseHVJQ0FnSUdnMElIdGNiaUFnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUJjWENSb05GOW1iMjUwWDNOcGVtVTdYRzRnSUNBZ0lDQWdJRzFoY21kcGJqb2dYRndrYURSZmJXRnlaMmx1TzF4dUlDQWdJSDFjYmx4dUlDQWdJR2cxSUh0Y2JpQWdJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQmNYQ1JvTlY5bWIyNTBYM05wZW1VN1hHNGdJQ0FnSUNBZ0lHMWhjbWRwYmpvZ1hGd2thRFZmYldGeVoybHVPMXh1SUNBZ0lIMWNibHh1SUNBZ0lHZzJJSHRjYmlBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lCY1hDUm9ObDltYjI1MFgzTnBlbVU3WEc0Z0lDQWdJQ0FnSUcxaGNtZHBiam9nWEZ3a2FEWmZiV0Z5WjJsdU8xeHVJQ0FnSUgxY2JuMGdLaTljYmx4dUx5OGdRV1JrY21WemMyVnpJSE4wZVd4cGJtY2dibTkwSUhCeVpYTmxiblFnYVc0Z1NVVWdPQzg1TENCVE5Td2dRMmh5YjIxbFhHNWNibUZpWW5KYmRHbDBiR1ZkSUh0Y2JpQWdJQ0JpYjNKa1pYSXRZbTkwZEc5dE9pQXhjSGdnWkc5MGRHVmtPMXh1ZlZ4dVhHNHZMeUJCWkdSeVpYTnpaWE1nYzNSNWJHVWdjMlYwSUhSdklDZGliMnhrWlhJbklHbHVJRVpHTXlzc0lGTTBMelVzSUVOb2NtOXRaVnh1WEc1aUxGeHVjM1J5YjI1bklIdGNiaUFnSUNCbWIyNTBMWGRsYVdkb2REb2dZbTlzWkR0Y2JuMWNibHh1UUdsbUlDUnNaV2RoWTNsZmMzVndjRzl5ZEY5bWIzSmZhV1VnZTF4dUlDQWdJR0pzYjJOcmNYVnZkR1VnZTF4dUlDQWdJQ0FnSUNCdFlYSm5hVzQ2SURGbGJTQTBNSEI0TzF4dUlDQWdJSDFjYm4xY2JseHVMeThnUVdSa2NtVnpjMlZ6SUhOMGVXeHBibWNnYm05MElIQnlaWE5sYm5RZ2FXNGdVelVzSUVOb2NtOXRaVnh1WEc1a1ptNGdlMXh1SUNBZ0lHWnZiblF0YzNSNWJHVTZJR2wwWVd4cFl6dGNibjFjYmx4dUx5OGdRV1JrY21WemMyVnpJSE4wZVd4cGJtY2dibTkwSUhCeVpYTmxiblFnYVc0Z1NVVTJMemN2T0M4NVhHNWNibTFoY21zZ2UxeHVJQ0FnSUdKaFkydG5jbTkxYm1RNklDTm1aakE3WEc0Z0lDQWdZMjlzYjNJNklDTXdNREE3WEc1OVhHNWNiaTh2SUVGa1pISmxjM05sY3lCdFlYSm5hVzV6SUhObGRDQmthV1ptWlhKbGJuUnNlU0JwYmlCSlJUWXZOMXh1UUdsbUlDUnNaV2RoWTNsZmMzVndjRzl5ZEY5bWIzSmZhV1VnZTF4dUlDQWdJSEFzWEc0Z0lDQWdjSEpsSUh0Y2JpQWdJQ0FnSUNBZ2JXRnlaMmx1T2lBeFpXMGdNRHRjYmlBZ0lDQjlYRzU5WEc1Y2JpOHZJRU52Y25KbFkzUnpJR1p2Ym5RZ1ptRnRhV3g1SUhObGRDQnZaR1JzZVNCcGJpQkpSVFlzSUZNMEx6VXNJRU5vY205dFpWeHVMeThnWlc0dWQybHJhWEJsWkdsaExtOXlaeTkzYVd0cEwxVnpaWEk2UkdGMmFXUm5iM1JvWW1WeVp5OVVaWE4wTlRsY2JseHVZMjlrWlN4Y2JtdGlaQ3hjYm5CeVpTeGNibk5oYlhBZ2UxeHVJQ0FnSUdadmJuUXRabUZ0YVd4NU9pQnRiMjV2YzNCaFkyVXNJSE5sY21sbU8xeHVJQ0FnSUVCcFppQWtiR1ZuWVdONVgzTjFjSEJ2Y25SZlptOXlYMmxsSUh0Y2JpQWdJQ0FnSUNBZ1gyWnZiblF0Wm1GdGFXeDVPaUFuWTI5MWNtbGxjaUJ1WlhjbkxDQnRiMjV2YzNCaFkyVTdYRzRnSUNBZ2ZWeHVJQ0FnSUdadmJuUXRjMmw2WlRvZ01XVnRPMXh1ZlZ4dVhHNHZMeUJKYlhCeWIzWmxjeUJ5WldGa1lXSnBiR2wwZVNCdlppQndjbVV0Wm05eWJXRjBkR1ZrSUhSbGVIUWdhVzRnWVd4c0lHSnliM2R6WlhKelhHNWNibkJ5WlNCN1hHNGdJQ0FnZDJocGRHVXRjM0JoWTJVNklIQnlaVHRjYmlBZ0lDQjNhR2wwWlMxemNHRmpaVG9nY0hKbExYZHlZWEE3WEc0Z0lDQWdkMjl5WkMxM2NtRndPaUJpY21WaGF5MTNiM0prTzF4dWZWeHVYRzR2THlCVFpYUWdZMjl1YzJsemRHVnVkQ0J4ZFc5MFpTQjBlWEJsY3k1Y2JseHVjU0I3WEc0Z0lDQWdjWFZ2ZEdWek9pQmNJbHhjTWpBeFExd2lJRndpWEZ3eU1ERkVYQ0lnWENKY1hESXdNVGhjSWlCY0lseGNNakF4T1Z3aU8xeHVmVnh1WEc0dkx5QXhMaUJCWkdSeVpYTnpaWE1nUTFOVElIRjFiM1JsY3lCdWIzUWdjM1Z3Y0c5eWRHVmtJR2x1SUVsRk5pODNYRzR2THlBeUxpQkJaR1J5WlhOelpYTWdjWFZ2ZEdVZ2NISnZjR1Z5ZEhrZ2JtOTBJSE4xY0hCdmNuUmxaQ0JwYmlCVE5GeHVYRzR2THlBeFhHNUFhV1lnSkd4bFoyRmplVjl6ZFhCd2IzSjBYMlp2Y2w5cFpTQjdYRzRnSUNBZ2NTQjdYRzRnSUNBZ0lDQWdJSEYxYjNSbGN6b2dibTl1WlR0Y2JpQWdJQ0I5WEc1OVhHNWNiaTh2SURKY2JuRWdlMXh1SUNBZ0lDWTZZbVZtYjNKbExGeHVJQ0FnSUNZNllXWjBaWElnZTF4dUlDQWdJQ0FnSUNCamIyNTBaVzUwT2lBbkp6dGNiaUFnSUNBZ0lDQWdZMjl1ZEdWdWREb2dibTl1WlR0Y2JpQWdJQ0I5WEc1OVhHNWNiaTh2SUVGa1pISmxjM01nYVc1amIyNXphWE4wWlc1MElHRnVaQ0IyWVhKcFlXSnNaU0JtYjI1MElITnBlbVVnYVc0Z1lXeHNJR0p5YjNkelpYSnpMbHh1WEc0dktpQXZjMjFoYkd3Z2UxeHVJQ0FnSUdadmJuUXRjMmw2WlRvZ09EQWxPMXh1ZlNBcUwxeHVYRzR2THlCUWNtVjJaVzUwY3lCemRXSWdZVzVrSUhOMWNDQmhabVpsWTNScGJtY2diR2x1WlMxb1pXbG5hSFFnYVc0Z1lXeHNJR0p5YjNkelpYSnpYRzR2THlCbmFYTjBMbWRwZEdoMVlpNWpiMjB2TkRFek9UTXdYRzVjYm5OMVlpeGNibk4xY0NCN1hHNGdJQ0FnWm05dWRDMXphWHBsT2lBM05TVTdYRzRnSUNBZ2JHbHVaUzFvWldsbmFIUTZJREE3WEc0Z0lDQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1SUNBZ0lIWmxjblJwWTJGc0xXRnNhV2R1T2lCaVlYTmxiR2x1WlR0Y2JuMWNibHh1YzNWd0lIdGNiaUFnSUNCMGIzQTZJQzB3TGpWbGJUdGNibjFjYmx4dWMzVmlJSHRjYmlBZ0lDQmliM1IwYjIwNklDMHdMakkxWlcwN1hHNTlYRzVjYmk4dklEMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5WEc0dkx5Qk1hWE4wYzF4dUx5OGdQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQxY2JseHVMeThnUVdSa2NtVnpjMlZ6SUcxaGNtZHBibk1nYzJWMElHUnBabVpsY21WdWRHeDVJR2x1SUVsRk5pODNYRzVBYVdZZ0pHeGxaMkZqZVY5emRYQndiM0owWDJadmNsOXBaU0I3WEc0Z0lDQWdaR3dzWEc0Z0lDQWdiV1Z1ZFN4Y2JpQWdJQ0J2YkN4Y2JpQWdJQ0IxYkNCN1hHNGdJQ0FnSUNBZ0lDOHZiV0Z5WjJsdU9pQXhaVzBnTUR0Y2JpQWdJQ0I5WEc1OVhHNWNia0JwWmlBa2JHVm5ZV041WDNOMWNIQnZjblJmWm05eVgybGxJSHRjYmlBZ0lDQmtaQ0I3WEc0Z0lDQWdJQ0FnSUcxaGNtZHBiam9nTUNBd0lEQWdOREJ3ZUR0Y2JpQWdJQ0I5WEc1OVhHNWNiaTh2SUVGa1pISmxjM05sY3lCd1lXUmthVzVuY3lCelpYUWdaR2xtWm1WeVpXNTBiSGtnYVc0Z1NVVTJMemRjYmtCcFppQWtiR1ZuWVdONVgzTjFjSEJ2Y25SZlptOXlYMmxsSUh0Y2JpQWdJQ0J0Wlc1MUxGeHVJQ0FnSUc5c0xGeHVJQ0FnSUhWc0lIdGNiaUFnSUNBZ0lDQWdMeTl3WVdSa2FXNW5PaUF3SURBZ01DQTBNSEI0TzF4dUlDQWdJSDFjYm4xY2JseHVMeThnUTI5eWNtVmpkSE1nYkdsemRDQnBiV0ZuWlhNZ2FHRnVaR3hsWkNCcGJtTnZjbkpsWTNSc2VTQnBiaUJKUlRkY2JseHVibUYySUh0Y2JpQWdJQ0IxYkN4Y2JpQWdJQ0J2YkNCN1hHNGdJQ0FnSUNBZ0lFQnBaaUFrYkdWbllXTjVYM04xY0hCdmNuUmZabTl5WDJsbElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUM4dmJHbHpkQzF6ZEhsc1pTMXBiV0ZuWlRvZ2JtOXVaVHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJSDFjYm4xY2JseHVMeThnUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMWNiaTh2SUVWdFltVmtaR1ZrSUdOdmJuUmxiblJjYmk4dklEMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5WEc1Y2JpOHZJREV1SUZKbGJXOTJaWE1nWW05eVpHVnlJSGRvWlc0Z2FXNXphV1JsSUNkaEp5QmxiR1Z0Wlc1MElHbHVJRWxGTmk4M0x6Z3ZPU3dnUmtZelhHNHZMeUF5TGlCSmJYQnliM1psY3lCcGJXRm5aU0J4ZFdGc2FYUjVJSGRvWlc0Z2MyTmhiR1ZrSUdsdUlFbEZOMXh1THk4Z0lDQWdZMjlrWlM1bWJHbGphM0l1WTI5dEwySnNiMmN2TWpBd09DOHhNUzh4TWk5dmJpMTFhUzF4ZFdGc2FYUjVMWFJvWlMxc2FYUjBiR1V0ZEdocGJtZHpMV05zYVdWdWRDMXphV1JsTFdsdFlXZGxMWEpsYzJsNmFXNW5MMXh1WEc1cGJXY2dlMXh1SUNBZ0lHSnZjbVJsY2pvZ01Ec2dMeThnTVZ4dUlDQWdJRUJwWmlBa2JHVm5ZV041WDNOMWNIQnZjblJmWm05eVgybGxJSHRjYmlBZ0lDQWdJQ0FnTFcxekxXbHVkR1Z5Y0c5c1lYUnBiMjR0Ylc5a1pUb2dZbWxqZFdKcFl6c2dMeThnTWx4dUlDQWdJSDFjYm4xY2JseHVMeThnUTI5eWNtVmpkSE1nYjNabGNtWnNiM2NnWkdsemNHeGhlV1ZrSUc5a1pHeDVJR2x1SUVsRk9WeHVYRzV6ZG1jNmJtOTBLRHB5YjI5MEtTQjdYRzRnSUNBZ2IzWmxjbVpzYjNjNklHaHBaR1JsYmp0Y2JuMWNibHh1THk4Z1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDFjYmk4dklFWnBaM1Z5WlhOY2JpOHZJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVhHNWNiaTh2SUVGa1pISmxjM05sY3lCdFlYSm5hVzRnYm05MElIQnlaWE5sYm5RZ2FXNGdTVVUyTHpjdk9DODVMQ0JUTlN3Z1R6RXhYRzVjYm1acFozVnlaU0I3WEc0Z0lDQWdiV0Z5WjJsdU9pQXdPMXh1ZlZ4dVhHNHZMeUE5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBWeHVMeThnUm05eWJYTmNiaTh2SUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlYRzVjYmk4dklFTnZjbkpsWTNSeklHMWhjbWRwYmlCa2FYTndiR0Y1WldRZ2IyUmtiSGtnYVc0Z1NVVTJMemRjYmtCcFppQWtiR1ZuWVdONVgzTjFjSEJ2Y25SZlptOXlYMmxsSUh0Y2JpQWdJQ0JtYjNKdElIdGNiaUFnSUNBZ0lDQWdiV0Z5WjJsdU9pQXdPMXh1SUNBZ0lIMWNibjFjYmx4dUx5OGdSR1ZtYVc1bElHTnZibk5wYzNSbGJuUWdZbTl5WkdWeUxDQnRZWEpuYVc0c0lHRnVaQ0J3WVdSa2FXNW5YRzVjYm1acFpXeGtjMlYwSUh0Y2JpQWdJQ0JpYjNKa1pYSTZJREZ3ZUNCemIyeHBaQ0FqWXpCak1HTXdPMXh1SUNBZ0lHMWhjbWRwYmpvZ01DQXljSGc3WEc0Z0lDQWdjR0ZrWkdsdVp6b2dNQzR6TldWdElEQXVOakkxWlcwZ01DNDNOV1Z0TzF4dWZWeHVYRzR2THlBeExpQkRiM0p5WldOMGN5QmpiMnh2Y2lCdWIzUWdZbVZwYm1jZ2FXNW9aWEpwZEdWa0lHbHVJRWxGTmk4M0x6Z3ZPVnh1THk4Z01pNGdVbVZ0YjNabElIQmhaR1JwYm1jZ2MyOGdjR1Z2Y0d4bElHRnlaVzRuZENCallYVm5hSFFnYjNWMElHbG1JSFJvWlhrZ2VtVnlieUJ2ZFhRZ1ptbGxiR1J6WlhSekxseHVMeThnTXk0Z1EyOXljbVZqZEhNZ2RHVjRkQ0J1YjNRZ2QzSmhjSEJwYm1jZ2FXNGdSa1l6WEc0dkx5QTBMaUJEYjNKeVpXTjBjeUJoYkdsbmJtMWxiblFnWkdsemNHeGhlV1ZrSUc5a1pHeDVJR2x1SUVsRk5pODNYRzVjYm14bFoyVnVaQ0I3WEc0Z0lDQWdZbTl5WkdWeU9pQXdPeUF2THlBeFhHNGdJQ0FnY0dGa1pHbHVaem9nTURzZ0x5OGdNbHh1SUNBZ0lIZG9hWFJsTFhOd1lXTmxPaUJ1YjNKdFlXdzdJQzh2SUROY2JpQWdJQ0JBYVdZZ0pHeGxaMkZqZVY5emRYQndiM0owWDJadmNsOXBaU0I3WEc0Z0lDQWdJQ0FnSUNwdFlYSm5hVzR0YkdWbWREb2dMVGR3ZURzZ0x5OGdORnh1SUNBZ0lIMWNibjFjYmx4dUx5OGdNUzRnUTI5eWNtVmpkQ0JtYjI1MElHWmhiV2xzZVNCdWIzUWdZbVZwYm1jZ2FXNW9aWEpwZEdWa0lHbHVJR0ZzYkNCaWNtOTNjMlZ5Y3k1Y2JpOHZJREl1SUVOdmNuSmxZM1J6SUdadmJuUWdjMmw2WlNCdWIzUWdZbVZwYm1jZ2FXNW9aWEpwZEdWa0lHbHVJR0ZzYkNCaWNtOTNjMlZ5YzF4dUx5OGdNeTRnUVdSa2NtVnpjMlZ6SUcxaGNtZHBibk1nYzJWMElHUnBabVpsY21WdWRHeDVJR2x1SUVsRk5pODNMQ0JHUmpNckxDQlROU3dnUTJoeWIyMWxYRzR2THlBMExpQkpiWEJ5YjNabGN5QmhjSEJsWVhKaGJtTmxJR0Z1WkNCamIyNXphWE4wWlc1amVTQnBiaUJoYkd3Z1luSnZkM05sY25OY2JseHVZblYwZEc5dUxGeHVhVzV3ZFhRc1hHNXpaV3hsWTNRc1hHNTBaWGgwWVhKbFlTQjdYRzRnSUNBZ1ptOXVkQzFtWVcxcGJIazZJR2x1YUdWeWFYUTdJQzh2SURGY2JpQWdJQ0JtYjI1MExYTnBlbVU2SURFd01DVTdJQzh2SURKY2JpQWdJQ0J0WVhKbmFXNDZJREE3SUM4dklETmNiaUFnSUNCMlpYSjBhV05oYkMxaGJHbG5iam9nWW1GelpXeHBibVU3SUM4dklEUmNiaUFnSUNCQWFXWWdKR3hsWjJGamVWOXpkWEJ3YjNKMFgyWnZjbDlwWlNCN1hHNGdJQ0FnSUNBZ0lDcDJaWEowYVdOaGJDMWhiR2xuYmpvZ2JXbGtaR3hsT3lBdkx5QTBYRzRnSUNBZ2ZWeHVmVnh1WEc0dkx5QkJaR1J5WlhOelpYTWdSa1l6THpRZ2MyVjBkR2x1WnlCc2FXNWxMV2hsYVdkb2RDQnZiaUFuYVc1d2RYUW5JSFZ6YVc1bklDRnBiWEJ2Y25SaGJuUWdhVzRnZEdobElGVkJJSE4wZVd4bGMyaGxaWFJjYmx4dVluVjBkRzl1TENCcGJuQjFkQ0I3WEc0Z0lDQWdiR2x1WlMxb1pXbG5hSFE2SUc1dmNtMWhiRHRjYm4xY2JseHVMeThnUVdSa2NtVnpjeUJwYm1OdmJuTnBjM1JsYm5RZ1lIUmxlSFF0ZEhKaGJuTm1iM0p0WUNCcGJtaGxjbWwwWVc1alpTQm1iM0lnWUdKMWRIUnZibUFnWVc1a0lHQnpaV3hsWTNSZ0xseHVMeThnUVd4c0lHOTBhR1Z5SUdadmNtMGdZMjl1ZEhKdmJDQmxiR1Z0Wlc1MGN5QmtieUJ1YjNRZ2FXNW9aWEpwZENCZ2RHVjRkQzEwY21GdWMyWnZjbTFnSUhaaGJIVmxjeTVjYmk4dklFTnZjbkpsWTNRZ1lHSjFkSFJ2Ym1BZ2MzUjViR1VnYVc1b1pYSnBkR0Z1WTJVZ2FXNGdRMmh5YjIxbExDQlRZV1poY21rZ05Tc3NJR0Z1WkNCSlJTQTRLeTVjYmk4dklFTnZjbkpsWTNRZ1lITmxiR1ZqZEdBZ2MzUjViR1VnYVc1b1pYSnBkR0Z1WTJVZ2FXNGdSbWx5WldadmVDQTBLeUJoYm1RZ1QzQmxjbUV1WEc1Y2JtSjFkSFJ2Yml4Y2JuTmxiR1ZqZENCN1hHNGdJQ0FnZEdWNGRDMTBjbUZ1YzJadmNtMDZJRzV2Ym1VN1hHNTlYRzVjYmk4dklERXVJRUYyYjJsa0lIUm9aU0JYWldKTGFYUWdZblZuSUdsdUlFRnVaSEp2YVdRZ05DNHdMaW9nZDJobGNtVWdLRElwSUdSbGMzUnliM2x6SUc1aGRHbDJaU0JnWVhWa2FXOWdYRzR2THlBZ0lDQmhibVFnWUhacFpHVnZZQ0JqYjI1MGNtOXNjMXh1THk4Z01pNGdRMjl5Y21WamRITWdhVzVoWW1sc2FYUjVJSFJ2SUhOMGVXeGxJR05zYVdOcllXSnNaU0FuYVc1d2RYUW5JSFI1Y0dWeklHbHVJR2xQVTF4dUx5OGdNeTRnU1cxd2NtOTJaWE1nZFhOaFltbHNhWFI1SUdGdVpDQmpiMjV6YVhOMFpXNWplU0J2WmlCamRYSnpiM0lnYzNSNWJHVWdZbVYwZDJWbGJpQnBiV0ZuWlMxMGVYQmxYRzR2THlBZ0lDQW5hVzV3ZFhRbklHRnVaQ0J2ZEdobGNuTmNiaTh2SURRdUlGSmxiVzkyWlhNZ2FXNXVaWElnYzNCaFkybHVaeUJwYmlCSlJUY2dkMmwwYUc5MWRDQmhabVpsWTNScGJtY2dibTl5YldGc0lIUmxlSFFnYVc1d2RYUnpYRzR2THlBZ0lDQkxibTkzYmlCcGMzTjFaVG9nYVc1dVpYSWdjM0JoWTJsdVp5QnlaVzFoYVc1eklHbHVJRWxGTmx4dVhHNWlkWFIwYjI0c1hHNW9kRzFzSUdsdWNIVjBXM1I1Y0dVOVhDSmlkWFIwYjI1Y0lsMHNJQzh2SURGY2JtbHVjSFYwVzNSNWNHVTlYQ0p5WlhObGRGd2lYU3hjYm1sdWNIVjBXM1I1Y0dVOVhDSnpkV0p0YVhSY0lsMGdlMXh1SUNBZ0lDMTNaV0pyYVhRdFlYQndaV0Z5WVc1alpUb2dZblYwZEc5dU95QXZMeUF5WEc0Z0lDQWdZM1Z5YzI5eU9pQndiMmx1ZEdWeU95QXZMeUF6WEc0Z0lDQWdRR2xtSUNSc1pXZGhZM2xmYzNWd2NHOXlkRjltYjNKZmFXVWdlMXh1SUNBZ0lDQWdJQ0FxYjNabGNtWnNiM2M2SUhacGMybGliR1U3SUNBdkx5QTBYRzRnSUNBZ2ZWeHVmVnh1WEc0dkx5QlNaUzF6WlhRZ1pHVm1ZWFZzZENCamRYSnpiM0lnWm05eUlHUnBjMkZpYkdWa0lHVnNaVzFsYm5SelhHNWNibUoxZEhSdmJsdGthWE5oWW14bFpGMHNYRzVwYm5CMWRGdGthWE5oWW14bFpGMGdlMXh1SUNBZ0lHTjFjbk52Y2pvZ1pHVm1ZWFZzZER0Y2JuMWNibHh1THk4Z1VtVnRiM1psY3lCcGJtNWxjaUJ3WVdSa2FXNW5JR0Z1WkNCaWIzSmtaWElnYVc0Z1JrWXpLMXh1THk4Z2QzZDNMbk5wZEdWd1pXNHVZMjl0TDJKc2IyY3ZNakF3T0M4d05TOHhOQzkwYUdVdFpHVjJhV3h6TFdsdUxYUm9aUzFrWlhSaGFXeHpMV1pwZUdsdVp5MWtiMnB2Y3kxMGIyOXNZbUZ5TFdKMWRIUnZibk12WEc1Y2JtSjFkSFJ2Yml3Z2FXNXdkWFFnZTF4dUlDQWdJQ1k2T2kxdGIzb3RabTlqZFhNdGFXNXVaWElnZTF4dUlDQWdJQ0FnSUNCaWIzSmtaWEk2SURBN1hHNGdJQ0FnSUNBZ0lIQmhaR1JwYm1jNklEQTdYRzRnSUNBZ2ZWeHVmVnh1WEc0dkx5QXhMaUJTWlcxdmRtVnpJR1JsWm1GMWJIUWdkbVZ5ZEdsallXd2djMk55YjJ4c1ltRnlJR2x1SUVsRk5pODNMemd2T1Z4dUx5OGdNaTRnU1cxd2NtOTJaWE1nY21WaFpHRmlhV3hwZEhrZ1lXNWtJR0ZzYVdkdWJXVnVkQ0JwYmlCaGJHd2dZbkp2ZDNObGNuTmNibHh1ZEdWNGRHRnlaV0VnZTF4dUlDQWdJRzkyWlhKbWJHOTNPaUJoZFhSdk95QXZMeUF4WEc0Z0lDQWdkbVZ5ZEdsallXd3RZV3hwWjI0NklIUnZjRHNnTHk4Z01seHVmVnh1WEc0dkx5QTlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFZ4dUx5OGdWR0ZpYkdWelhHNHZMeUE5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBWeHVYRzR2THlCU1pXMXZkbVVnYlc5emRDQnpjR0ZqYVc1bklHSmxkSGRsWlc0Z2RHRmliR1VnWTJWc2JITmNibHh1ZEdGaWJHVWdlMXh1SUNBZ0lHSnZjbVJsY2kxamIyeHNZWEJ6WlRvZ1kyOXNiR0Z3YzJVN1hHNGdJQ0FnWW05eVpHVnlMWE53WVdOcGJtYzZJREE3WEc1OVhHNWNibWx1Y0hWMElIdGNiaUFnSUNBdkx5QXhMaUJCWkdSeVpYTnpaWE1nWVhCd1pXRnlZVzVqWlNCelpYUWdkRzhnYzJWaGNtTm9abWxsYkdRZ2FXNGdVelVzSUVOb2NtOXRaVnh1SUNBZ0lDOHZJREl1SUVGa1pISmxjM05sY3lCaWIzZ3RjMmw2YVc1bklITmxkQ0IwYnlCaWIzSmtaWEl0WW05NElHbHVJRk0xTENCRGFISnZiV1VnS0dsdVkyeDFaR1VnTFcxdmVpQjBieUJtZFhSMWNtVXRjSEp2YjJZcFhHNGdJQ0FnSmx0MGVYQmxQVndpYzJWaGNtTm9YQ0pkSUh0Y2JpQWdJQ0FnSUNBZ0xYZGxZbXRwZEMxaGNIQmxZWEpoYm1ObE9pQjBaWGgwWm1sbGJHUTdJQzh2SURGY2JpQWdJQ0FnSUNBZ0xXMXZlaTFpYjNndGMybDZhVzVuT2lCamIyNTBaVzUwTFdKdmVEdGNiaUFnSUNBZ0lDQWdMWGRsWW10cGRDMWliM2d0YzJsNmFXNW5PaUJqYjI1MFpXNTBMV0p2ZURzZ0x5OGdNbHh1SUNBZ0lDQWdJQ0JpYjNndGMybDZhVzVuT2lCamIyNTBaVzUwTFdKdmVEdGNibHh1SUNBZ0lGeDBMeThnVW1WdGIzWmxJR2x1Ym1WeUlIQmhaR1JwYm1jZ1lXNWtJSE5sWVhKamFDQmpZVzVqWld3Z1luVjBkRzl1SUdsdUlGTmhabUZ5YVNBMUlHRnVaQ0JEYUhKdmJXVmNiaUFnSUNBZ0lDQWdMeThnYjI0Z1QxTWdXQzVjYmlBZ0lDQWdJQ0FnSmpvNkxYZGxZbXRwZEMxelpXRnlZMmd0WTJGdVkyVnNMV0oxZEhSdmJpeGNiaUFnSUNBZ0lDQWdKam82TFhkbFltdHBkQzF6WldGeVkyZ3RaR1ZqYjNKaGRHbHZiaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQXRkMlZpYTJsMExXRndjR1ZoY21GdVkyVTZJRzV2Ym1VN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOVhHNWNiaUFnSUNBdkx5QXhMaUJCWkdSeVpYTnpJR0p2ZUNCemFYcHBibWNnYzJWMElIUnZJR0JqYjI1MFpXNTBMV0p2ZUdBZ2FXNGdTVVVnT0M4NUx6RXdMbHh1SUNBZ0lDOHZJREl1SUZKbGJXOTJaU0JsZUdObGMzTWdjR0ZrWkdsdVp5QnBiaUJKUlNBNEx6a3ZNVEF1WEc0Z0lDQWdMeThnTXk0Z1VtVnRiM1psY3lCbGVHTmxjM01nY0dGa1pHbHVaeUJwYmlCSlJUZGNiaUFnSUNBdkx5QWdJQ0JMYm05M2JpQnBjM04xWlRvZ1pYaGpaWE56SUhCaFpHUnBibWNnY21WdFlXbHVjeUJwYmlCSlJUWmNiaUFnSUNBbVczUjVjR1U5WENKamFHVmphMkp2ZUZ3aVhTeGNiaUFnSUNBbVczUjVjR1U5WENKeVlXUnBiMXdpWFNCN1hHNGdJQ0FnWEhSaWIzZ3RjMmw2YVc1bk9pQmliM0prWlhJdFltOTRPeUF2THlBeFhHNGdJQ0FnWEhSd1lXUmthVzVuT2lBd095QXZMeUF5WEc0Z0lDQWdYSFJBYVdZZ0pHeGxaMkZqZVY5emRYQndiM0owWDJadmNsOXBaU0I3WEc0Z0lDQWdJQ0FnSUZ4MEttaGxhV2RvZERvZ01UTndlRHNnTHk4Z00xeHVJQ0FnSUNBZ0lDQmNkQ3AzYVdSMGFEb2dNVE53ZURzZ0x5OGdNMXh1SUNBZ0lGeDBmVnh1SUNBZ0lIMWNibjFjYmlJc0lpOHZJRlpoY25OY2JpUmlZWE5sTFdadmJuUXRjMmw2WlRvZ01UWndlRnh1SkdKaGMyVXRiR2x1WlMxb1pXbG5hSFE2SURFdU5WeHVYRzR2THlCVWVYQmxabUZqWlhOY2JpUnpZVzV6T2lCT1pYZHpJRU41WTJ4bExDQnpZVzV6TFhObGNtbG1YRzRrYzJWeWFXWTZJRkJzWVhsbVlXbHlJRVJwYzNCc1lYa3NJSE5sY21sbVhHNWNiaTh2SUVadmJuUWdkMlZwWjJoMGMxeHVKSGhzYVdkb2REb2dNakF3WEc0a2JHbG5hSFE2SURNd01GeHVKRzV2Y20xaGJEb2dOREF3WEc0a2MyVnRhV0p2YkdRNklEWXdNRnh1SkdKdmJHUTZJRGN3TUZ4dVhHNHZMeUJNYVc1bElHaGxhV2RvZENCbWRXNWpkR2x2Ymx4dVFHWjFibU4wYVc5dUlHeHBibVV0YUdWcFoyaDBLQ2xjYmlBZ1FISmxkSFZ5YmlBa1ltRnpaUzFtYjI1MExYTnBlbVVnS2lBa1ltRnpaUzFzYVc1bExXaGxhV2RvZEZ4dVhHNHZMeUJXWVhJZ2JYVnpkQ0JpWlNCemNHVmphV1pwWldRZ1lXWjBaWElnY21WMGRYSnVhVzVuSUhSb1pTQnNhVzVsTFdobGFXZG9kQ0JtZFc1amRHbHZibHh1SkdOaGJDMXNhVzVsTFdobGFXZG9kRG9nYkdsdVpTMW9aV2xuYUhRb0tWeHVYRzR2THlCTmFYaHBibk5jYmoxMlpYSjBMVzFoY21kcGJpZ2tkRzl3T2lBeExDQWtZbTkwZEc5dE9pQXhLVnh1SUNCdFlYSm5hVzR0ZEc5d09pQWtZMkZzTFd4cGJtVXRhR1ZwWjJoMElDb2dKSFJ2Y0Z4dUlDQnRZWEpuYVc0dFltOTBkRzl0T2lBa1kyRnNMV3hwYm1VdGFHVnBaMmgwSUNvZ0pHSnZkSFJ2YlZ4dVhHNDlkbVZ5ZEMxd1lXUmthVzVuS0NSMGIzQTZJREVzSUNSaWIzUjBiMjA2SURFcFhHNGdJSEJoWkdScGJtY3RkRzl3T2lBa1kyRnNMV3hwYm1VdGFHVnBaMmgwSUNvZ0pIUnZjRnh1SUNCd1lXUmthVzVuTFdKdmRIUnZiVG9nSkdOaGJDMXNhVzVsTFdobGFXZG9kQ0FxSUNSaWIzUjBiMjFjYmx4dVhHNW9kRzFzWEc0Z0lHWnZiblF0YzJsNlpUb2dKR0poYzJVdFptOXVkQzF6YVhwbFhHNGdJQzF0YjNvdGIzTjRMV1p2Ym5RdGMyMXZiM1JvYVc1bk9pQm5jbUY1YzJOaGJHVmNiaUFnTFhkbFltdHBkQzFtYjI1MExYTnRiMjkwYUdsdVp6b2dZVzUwYVdGc2FXRnpaV1JjYmx4dVltOWtlVnh1SUNCamIyeHZjam9nSkdOb1lYSmpiMkZzWEc0Z0lHeHBibVV0YUdWcFoyaDBPaUF4TGpWY2JpQWdabTl1ZEMxbVlXMXBiSGs2SUNSellXNXpYRzRnSUM4dlltRmphMmR5YjNWdVpDMXBiV0ZuWlRvZ2JHbHVaV0Z5TFdkeVlXUnBaVzUwS0hSeVlXNXpjR0Z5Wlc1MExDQjBjbUZ1YzNCaGNtVnVkQ0JzYVc1bExXaGxhV2RvZENncElDMGdNWEI0TENBa1ozSmxaVzRnTVhCNElDd2dkSEpoYm5Od1lYSmxiblFwWEc0Z0lHSmhZMnRuY205MWJtUXRjMmw2WlRvZ1lYVjBieUJzYVc1bExXaGxhV2RvZENncFhHNGdJRzFoY21kcGJqb2dNRnh1WEc0dkwxdGpiR0Z6Y3lvOUoxOWZhR1ZoWkd4cGJtVW5YVnh1WEc1Y2JpOHZJRlZ6WldRZ2FXNGdZWEowYVdOc1pTQm9aV0ZrWlhKeklHbHVJSFJvWlNBdVRXRnBiaUJqYjJ4MWJXNXpYRzViWTJ4aGMzTXFQU2RmWDJobFlXUnBibWNuWFZ4dUlDQmpiMnh2Y2pvZ0pHZHlaV1Z1WEc0Z0lHWnZiblF0Wm1GdGFXeDVPaUFrYzJWeWFXWmNiaUFnWm05dWRDMXphWHBsT2lBeUxqVnlaVzFjYmlBZ1ptOXVkQzEzWldsbmFIUTZJQ1J1YjNKdFlXeGNiaUFnYkdsdVpTMW9aV2xuYUhRNklERmNiaUFnYldGeVoybHVMV0p2ZEhSdmJUb2dNbkpsYlZ4dVhHNDljM1JoYm1SaGNtUXRhR1ZoWkdsdVp5Z3BYRzRnSUdOdmJHOXlPaUFrWjNKbFpXNWNiaUFnWm05dWRDMW1ZVzFwYkhrNklDUnpaWEpwWmx4dUlDQm1iMjUwTFhOcGVtVTZJREp5WlcxY2JpQWdabTl1ZEMxM1pXbG5hSFE2SUNSdWIzSnRZV3hjYmlBZ2JHbHVaUzFvWldsbmFIUTZJREZjYmx4dVhHNHZMeUJHYjNWdVpDQnBiaUIwYUdVZ1RXRnBiaUJDYkc5bklGQnZjM1J6WEc0OWJXbHViM0l0YUdWaFpHbHVaeWdwWEc0Z0lHTnZiRzl5T2lBa2JtbG5hSFJuY21WbGJseHVJQ0JtYjI1MExXWmhiV2xzZVRvZ0pITmxjbWxtWEc0Z0lHWnZiblF0YzJsNlpUb2dNUzR5TlhKbGJWeHVJQ0JtYjI1MExYZGxhV2RvZERvZ0pHSnZiR1JjYmlBZ2JHbHVaUzFvWldsbmFIUTZJREZjYmlBZ2RHVjRkQzEwY21GdWMyWnZjbTA2SUhWd2NHVnlZMkZ6WlZ4dUlDQXJkbVZ5ZEMxdFlYSm5hVzRvTVM0MUxEQXBYRzVjYmx4dUx5OGdWWE5sWkNCcGJpQmhjblJwWTJ4bElHaGxZV1JsY25NZ2FXNGdkR2hsSUM1TllXbHVJR052YkhWdGJuTmNiajF6YldGc2JDMW9aV0ZrYVc1bktDbGNiaUFnWTI5c2IzSTZJQ1JuY21WbGJseHVJQ0JtYjI1MExXWmhiV2xzZVRvZ0pITmxjbWxtWEc0Z0lHWnZiblF0YzJsNlpUb2dNUzR6TnpWeVpXMWNiaUFnWm05dWRDMTNaV2xuYUhRNklDUnViM0p0WVd4Y2JpQWdiR2x1WlMxb1pXbG5hSFE2SURGY2JseHVYRzR2THlCR2IzVnVaQ0JwYmlCMGFHVWdUV0ZwYmlCQ2JHOW5JRkJ2YzNSelhHNDlZbXh2WTJ0eGRXOTBaU2dwWEc0Z0lHTnZiRzl5T2lBa1ozSmxaVzVjYmlBZ1ptOXVkQzFtWVcxcGJIazZJQ1J6WlhKcFpseHVJQ0JtYjI1MExYTnBlbVU2SURFdU5YSmxiVnh1SUNCbWIyNTBMWE4wZVd4bE9pQnBkR0ZzYVdOY2JpQWdabTl1ZEMxM1pXbG5hSFE2SUNSaWIyeGtYRzRnSUN0MlpYSjBMVzFoY21kcGJpZ3hMalVzTVM0MUtWeHVYRzVjYmk4dmFXNXdkWFJiZEhsd1pUMWNJbk4xWW0xcGRGd2lYVnh1WEc1YlkyeGhjM01xUFY5ZlluVjBkRzl1WFN4Y2JtbHVjSFYwVzNSNWNHVTlYQ0ppZFhSMGIyNWNJbDBzWEc1cGJuQjFkRnQwZVhCbFBWd2ljbVZ6WlhSY0lsMWNiaUFnWW05eVpHVnlPaUF4Y0hnZ2MyOXNhV1FnSkdkeVpXVnVYRzRnSUdOMWNuTnZjam9nY0c5cGJuUmxjbHh1SUNCa2FYTndiR0Y1T2lCcGJteHBibVV0WW14dlkydGNiaUFnWm05dWRDMW1ZVzFwYkhrNklDUnpaWEpwWmx4dUlDQm1iMjUwTFhOcGVtVTZJREV1TW5KbGJWeHVJQ0JtYjI1MExYTjBlV3hsT2lCcGRHRnNhV05jYmlBZ2RHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeVhHNGdJSEJoWkdScGJtYzZJQzQzTlhKbGJTQXpjbVZ0WEc0Z0lIUmxlSFF0WkdWamIzSmhkR2x2YmpvZ2JtOXVaVnh1SUNBdktrbDBaVzF6SUdadmNpQjBjbUZ1YzJsMGFXOXVYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUhSeVlXNXpjR0Z5Wlc1MFhHNGdJR052Ykc5eU9pQWtaM0psWlc1Y2JpQWdMeXBVY21GdWMybDBhVzl1SUhObGRIUnBibWR6WEc0Z0lIUnlZVzV6YVhScGIyNDZJR0ZzYkNBdU1uTWdaV0Z6WlZ4dVhHNGdJQ1k2YUc5MlpYSmNiaUFnSUNBdktsUm9aWE5sSUhkcGJHd2dkSEpoYm5OcGRHbHZiaUJ2YmlCb2IzWmxjbHh1SUNBZ0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDUm5jbVZsYmx4dUlDQWdJR052Ykc5eU9pQWtkMmhwZEdWY2JpQWdJQ0IwWlhoMExXUmxZMjl5WVhScGIyNDZJRzV2Ym1WY2JseHVYRzR2THlCcGJpQndjbTluY21WemMxeHVYRzR2THlCTmFYaHBibk5jYmoxaWRYUjBiMjRvSkdKaFkydG5jbTkxYm1Rc0lDUmpiMnh2Y2l3Z0pHSnZjbVJsY2kxamIyeHZjaWxjYmlBZ1ltOXlaR1Z5T2lBeGNIZ2djMjlzYVdRZ0pHSnZjbVJsY2kxamIyeHZjbHh1SUNCbWIyNTBMV1poYldsc2VUb2dKSE5sY21sbVhHNGdJR1p2Ym5RdGMybDZaVG9nTVM0eWNtVnRYRzRnSUdadmJuUXRjM1I1YkdVNklHbDBZV3hwWTF4dUlDQndZV1JrYVc1bk9pQXVOWEpsYlNBeGNtVnRYRzRnSUhSbGVIUXRaR1ZqYjNKaGRHbHZiam9nYm05dVpWeHVJQ0F2S2tsMFpXMXpJR1p2Y2lCMGNtRnVjMmwwYVc5dVhHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJSFJ5WVc1emNHRnlaVzUwWEc0Z0lHTnZiRzl5T2lBa1kyOXNiM0pjYmlBZ0x5cFVjbUZ1YzJsMGFXOXVJSE5sZEhScGJtZHpYRzRnSUhSeVlXNXphWFJwYjI0NklHRnNiQ0F1TW5NZ1pXRnpaVnh1SUNBbU9taHZkbVZ5WEc0Z0lDQWdMeXBVYUdWelpTQjNhV3hzSUhSeVlXNXphWFJwYjI0Z2IyNGdhRzkyWlhKY2JpQWdJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFrWjNKbFpXNWNiaUFnSUNCamIyeHZjam9nSkdOdmJHOXlYRzVjYmx4dUxteHZZV1JsY2w5ZlluVjBkRzl1TG1ScGMyRmliR1ZrWEc0Z0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDUmpiRzkxWkZ4dUlDQmpiMnh2Y2pvZ0pHZHlaV1Z1WEc0Z0lHTjFjbk52Y2pvZ1pHVm1ZWFZzZEZ4dUlDQnZjR0ZqYVhSNU9pQXVNMXh1WEc1Y2JuTjFjRnh1SUNBcmJXVmthV0VvWENJOFBYQm9iMjVsWENJcFhHNGdJQ0FnZEc5d09pQXRMakkxWlcxY2JpQWdJQ0JjYmlJc0lpOHZJRk5wZEdVZ1kyOXNiM0lnY0dGc1pYUjBaVnh1SkdkeVpXVnVPaUFqTWpZM1pUWTBYRzRrYm1sbmFIUm5jbVZsYmpvZ0l6UTFOVFkxTWx4dUpITnNZWFJsT2lBalpXTmxaV1UyWEc1Y2JpOHZJRFV3SUhOb1lXUmxjeUJ2WmlCbmNtRjVYRzRrZDJocGRHVTZJQ05tWm1aY2JpUnpkR1ZoYlRvZ0kyWTRaamhtT0Z4dUpHTnNiM1ZrT2lBalpUVmxObVUzWEc0a1ozSmhjR2hwZEdVNklDTmpZMk5jYmlSemRHOXVaVG9nSXpkbU4yVTNaVnh1Skd4bFlXUTZJQ00yWlRaaU5tTmNiaVJqYUdGeVkyOWhiRG9nSXpNek0xeHVKR0pzWVdOck9pQWpNREF3WEc1Y2JseHVKRzF2WW1sc1pTMXVZWFl0WW5SdU9pQWtjMnhoZEdWY2JseHVMeTlDYjNKa1pYSWdRMjlzYjNKY2JpUmliM0prWlhKRGIyeHZjam9nSkdkeVlYQm9hWFJsWEc1Y2JpOHZJRk5wZEdVZ1ltRnpaU0IwWlhoMElHTnZiRzl5YzF4dUpITnBkR1V0ZEdWNGRDMWpiMnh2Y2pvZ0pHTm9ZWEpqYjJGc1hHNGtjMmwwWlMxMFpYaDBMV052Ykc5eUxXeHBibXM2SUNSbmNtVmxibHh1SkhOcGRHVXRkR1Y0ZEMxamIyeHZjaTFzYVc1ckxXaHZkbVZ5T2lBak5EVTFOalV5WEc1Y2JseHVMeThnUm05dmRHVnlJR052Ykc5eWMxeHVKR1p2YjNSbGNpMTBaWGgwT2lBa2JtbG5hSFJuY21WbGJseHVKR1p2YjNSbGNpMTBaWGgwTFd4cGJtczZJQ1J1YVdkb2RHZHlaV1Z1WEc0a1ptOXZkR1Z5TFhSbGVIUXRiR2x1YXkxb2IzWmxjam9nSkdkeVpXVnVYRzRpTENJdkwxeHVYSFFnWHlBZ0lDQWdJQ0FnSUNBZ0lGOGdJQ0FnSUNBZ0lDQWdJRjhnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JmSUY5Y2JseDBLRjhwSUNBZ0lDQWdJQ0FnSUh3Z2ZDQWdJQ0FnSUNBZ0lId2dmQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjhJQ2hmS1Z4dVhIUWdYeUJmSUY5ZklDQWdYMTlmZkNCOFh5QWdJRjhnSUY5ZmZDQjhJRjlmWHlBZ0lGOGdYMThnWDE5ZklDQWdYMTlmSUNCZlgzd2dmRjhnSUY5ZklGOWNibHgwZkNCOElDZGZJRnhjSUM4Z1gxOThJSHdnZkNCOElId3ZJRjlnSUh3dklGOGdYRndnZkNBblh5QmdJRjhnWEZ3Z0x5QmZJRnhjTHlCZllDQjhJSHd2SUY5Z0lIeGNibHgwZkNCOElId2dmQ0I4SUNoZlgzd2dmQ0I4WDN3Z2ZDQW9YM3dnZkNBZ1gxOHZJSHdnZkNCOElId2dmQ0I4SUNCZlh5OGdLRjk4SUh3Z2ZDQW9YM3dnZkZ4dVhIUjhYM3hmZkNCOFgzeGNYRjlmWDN4ZmZGeGNYMThzWDN4Y1hGOWZMRjk4WEZ4ZlgxOThJSHhmZkNCOFgzd2dmRjk4WEZ4ZlgxOThYRnhmWHl4ZmZGOThYRnhmWHl4ZmZGeHVYRzVjZEZOcGJYQnNaU3dnWld4bFoyRnVkQ0JoYm1RZ2JXRnBiblJoYVc1aFlteGxJRzFsWkdsaElIRjFaWEpwWlhNZ2FXNGdVMkZ6YzF4dVhHNWNkR2gwZEhBNkx5OXBibU5zZFdSbExXMWxaR2xoTG1OdmJWeHVYRzRnSUVGMWRHaHZjam9nUldSMVlYSmtieUJDYjNWallYTWdQRzFoYVd4QVpXUjFZWEprYjJKdmRXTmhjeTVqYjIwK1hHNWNibHh1SUNCRGNtVmhkR1Z6SUdFZ2JHbHpkQ0J2WmlCbmJHOWlZV3dnWW5KbFlXdHdiMmx1ZEhOY2JseHVJQ0JBWVhWMGFHOXlJRVZrZFdGeVpHOGdRbTkxWTJGelhHNWNiaUFnUUdWNFlXMXdiR1VnYzJOemN5QXRJRU55WldGMFpYTWdZU0J6YVc1bmJHVWdZbkpsWVd0d2IybHVkQ0IzYVhSb0lIUm9aU0JzWVdKbGJDQmdjR2h2Ym1WZ1hHNGdJQ1JpY21WaGEzQnZhVzUwY3pvZ0tDZHdhRzl1WlNjNklETXlNSEI0S1R0Y2JseHVKR0p5WldGcmNHOXBiblJ6T2lBb1hDSndhRzl1WlZ3aU9pQTBPREJ3ZUN3Z1hDSjBZV0pzWlhSY0lqb2dOelk0Y0hnc0lGd2laR1Z6YTNSdmNGd2lPaUF4TURJemNIZ3BJQ0ZrWldaaGRXeDBYRzVjYmk4dlhHNGdJRU55WldGMFpYTWdZU0JzYVhOMElHOW1JSE4wWVhScFl5QmxlSEJ5WlhOemFXOXVjeUJ2Y2lCdFpXUnBZU0IwZVhCbGMxeHVYRzRnSUVCaGRYUm9iM0lnUldSMVlYSmtieUJDYjNWallYTmNibHh1SUNCQVpYaGhiWEJzWlNCelkzTnpJQzBnUTNKbFlYUmxjeUJoSUhOcGJtZHNaU0J0WldScFlTQjBlWEJsSUNoelkzSmxaVzRwWEc0Z0lDQWtiV1ZrYVdFdFpYaHdjbVZ6YzJsdmJuTTZJQ2duYzJOeVpXVnVKem9nSjNOamNtVmxiaWNwTzF4dVhHNGdJRUJsZUdGdGNHeGxJSE5qYzNNZ0xTQkRjbVZoZEdWeklHRWdjM1JoZEdsaklHVjRjSEpsYzNOcGIyNGdkMmwwYUNCc2IyZHBZMkZzSUdScGMycDFibU4wYVc5dUlDaFBVaUJ2Y0dWeVlYUnZjaWxjYmlBZ0lDUnRaV1JwWVMxbGVIQnlaWE56YVc5dWN6b2dLRnh1SUNCY2RGeDBKM0psZEdsdVlUSjRKem9nS0Z4dUlDQmNkRngwWEhRbktDMTNaV0pyYVhRdGJXbHVMV1JsZG1salpTMXdhWGhsYkMxeVlYUnBiem9nTWlrbkxGeHVJQ0JjZEZ4MFhIUW5LRzFwYmkxeVpYTnZiSFYwYVc5dU9pQXhPVEprY0drcEoxeHVJQ0JjZEZ4MEtWeHVJQ0JjZENrN1hHNWNiaVJ0WldScFlTMWxlSEJ5WlhOemFXOXVjem9nS0Z3aWMyTnlaV1Z1WENJNklGd2ljMk55WldWdVhDSXNJRndpY0hKcGJuUmNJam9nWENKd2NtbHVkRndpTENCY0ltaGhibVJvWld4a1hDSTZJRndpYUdGdVpHaGxiR1JjSWl3Z1hDSnlaWFJwYm1FeWVGd2lPaUFvWENJb0xYZGxZbXRwZEMxdGFXNHRaR1YyYVdObExYQnBlR1ZzTFhKaGRHbHZPaUF5S1Z3aUxDQmNJaWh0YVc0dGNtVnpiMngxZEdsdmJqb2dNVGt5WkhCcEtWd2lLU3dnWENKeVpYUnBibUV6ZUZ3aU9pQW9YQ0lvTFhkbFltdHBkQzF0YVc0dFpHVjJhV05sTFhCcGVHVnNMWEpoZEdsdk9pQXpLVndpTENCY0lpaHRhVzR0Y21WemIyeDFkR2x2YmpvZ016VXdaSEJwS1Z3aUtTa2dJV1JsWm1GMWJIUmNibHh1THk5Y2JpQWdSR1ZtYVc1bGN5QmhJRzUxYldKbGNpQjBieUJpWlNCaFpHUmxaQ0J2Y2lCemRXSjBjbUZqZEdWa0lHWnliMjBnWldGamFDQjFibWwwSUhkb1pXNGdaR1ZqYkdGeWFXNW5JR0p5WldGcmNHOXBiblJ6SUhkcGRHZ2daWGhqYkhWemFYWmxJR2x1ZEdWeWRtRnNjMXh1WEc0Z0lFQmhkWFJvYjNJZ1JXUjFZWEprYnlCQ2IzVmpZWE5jYmx4dUlDQkFaWGhoYlhCc1pTQnpZM056SUMwZ1NXNTBaWEoyWVd3Z1ptOXlJSEJwZUdWc2N5QnBjeUJrWldacGJtVmtJR0Z6SUdBeFlDQmllU0JrWldaaGRXeDBYRzRnSUNCQWFXNWpiSFZrWlNCdFpXUnBZU2hjSWo0eE1qaHdlRndpS1NCN2ZWeHVYRzRnSUVkbGJtVnlZWFJsY3pwY2JpQWdRRzFsWkdsaElDaHRhVzR0ZDJsa2RHZzZJREV5T1hCNEtTQjdmVnh1WEc0Z0lFQmxlR0Z0Y0d4bElITmpjM01nTFNCSmJuUmxjblpoYkNCbWIzSWdaVzF6SUdseklHUmxabWx1WldRZ1lYTWdZREF1TURGZ0lHSjVJR1JsWm1GMWJIUmNiaUFnSUVCcGJtTnNkV1JsSUcxbFpHbGhLRndpUGpJd1pXMWNJaWtnZTMxY2JseHVJQ0JIWlc1bGNtRjBaWE02WEc0Z0lFQnRaV1JwWVNBb2JXbHVMWGRwWkhSb09pQXlNQzR3TVdWdEtTQjdmVnh1WEc0Z0lFQmxlR0Z0Y0d4bElITmpjM01nTFNCSmJuUmxjblpoYkNCbWIzSWdjbVZ0Y3lCcGN5QmtaV1pwYm1Wa0lHRnpJR0F3TGpGZ0lHSjVJR1JsWm1GMWJIUXNJSFJ2SUdKbElIVnpaV1FnZDJsMGFDQmdabTl1ZEMxemFYcGxPaUEyTWk0MUpUdGdYRzRnSUNCQWFXNWpiSFZrWlNCdFpXUnBZU2hjSWo0eUxqQnlaVzFjSWlrZ2UzMWNibHh1SUNCSFpXNWxjbUYwWlhNNlhHNGdJRUJ0WldScFlTQW9iV2x1TFhkcFpIUm9PaUF5TGpGeVpXMHBJSHQ5WEc1Y2JpUjFibWwwTFdsdWRHVnlkbUZzY3pvZ0tGd2ljSGhjSWpvZ01Td2dYQ0psYlZ3aU9pQXdMakF4TENCY0luSmxiVndpT2lBd0xqRXBJQ0ZrWldaaGRXeDBYRzVjYmk4dlhHNGdJRWRsYm1WeVlYUmxjeUJoSUcxbFpHbGhJSEYxWlhKNUlHSmhjMlZrSUc5dUlHRWdiR2x6ZENCdlppQmpiMjVrYVhScGIyNXpYRzVjYmlBZ1FHRjFkR2h2Y2lCRlpIVmhjbVJ2SUVKdmRXTmhjMXh1WEc0Z0lFQndZWEpoYlNCN1RHbHpkSDBnSUNBa1kyOXVaR2wwYVc5dWN5QWdMU0JOWldScFlTQnhkV1Z5ZVNCamIyNWthWFJwYjI1elhHNWNiaUFnUUdWNFlXMXdiR1VnYzJOemN5QXRJRmRwZEdnZ1lTQnphVzVuYkdVZ2MyVjBJR0p5WldGcmNHOXBiblJjYmlBZ0lFQnBibU5zZFdSbElHMWxaR2xoS0Z3aVBuQm9iMjVsWENJcElIc2dmVnh1WEc0Z0lFQmxlR0Z0Y0d4bElITmpjM01nTFNCWGFYUm9JSFIzYnlCelpYUWdZbkpsWVd0d2IybHVkSE5jYmlBZ0lFQnBibU5zZFdSbElHMWxaR2xoS0Z3aVBuQm9iMjVsWENJc0lGd2lQRDEwWVdKc1pYUmNJaWtnZXlCOVhHNWNiaUFnUUdWNFlXMXdiR1VnYzJOemN5QXRJRmRwZEdnZ1kzVnpkRzl0SUhaaGJIVmxjMXh1SUNBZ1FHbHVZMngxWkdVZ2JXVmthV0VvWENJK1BUTTFPSEI0WENJc0lGd2lQRGcxTUhCNFhDSXBJSHNnZlZ4dVhHNGdJRUJsZUdGdGNHeGxJSE5qYzNNZ0xTQlhhWFJvSUhObGRDQmljbVZoYTNCdmFXNTBjeUIzYVhSb0lHTjFjM1J2YlNCMllXeDFaWE5jYmlBZ0lFQnBibU5zZFdSbElHMWxaR2xoS0Z3aVBtUmxjMnQwYjNCY0lpd2dYQ0k4UFRFek5UQndlRndpS1NCN0lIMWNibHh1SUNCQVpYaGhiWEJzWlNCelkzTnpJQzBnVjJsMGFDQmhJSE4wWVhScFl5QmxlSEJ5WlhOemFXOXVYRzRnSUNCQWFXNWpiSFZrWlNCdFpXUnBZU2hjSW5KbGRHbHVZVEo0WENJcElIc2dmVnh1WEc0Z0lFQmxlR0Z0Y0d4bElITmpjM01nTFNCTmFYaHBibWNnWlhabGNubDBhR2x1WjF4dUlDQWdRR2x1WTJ4MVpHVWdiV1ZrYVdFb1hDSStQVE0xTUhCNFhDSXNJRndpUEhSaFlteGxkRndpTENCY0luSmxkR2x1WVRONFhDSXBJSHNnZlZ4dVhHNWNiajF0WldScFlTZ2tZMjl1WkdsMGFXOXVjeTR1TGlsY2JpQWdRR1p2Y2lBa2FTQm1jbTl0SURFZ2RHaHliM1ZuYUNCc1pXNW5kR2dvSkdOdmJtUnBkR2x2Ym5NcFhHNGdJQ0FnSkdOdmJtUnBkR2x2Ym5NNklITmxkQzF1ZEdnb0pHTnZibVJwZEdsdmJuTXNJQ1JwTENCd1lYSnpaUzFsZUhCeVpYTnphVzl1S0c1MGFDZ2tZMjl1WkdsMGFXOXVjeXdnSkdrcEtTbGNiaUFnSkdKeVlXNWphR1Z6T2lCblpYUXRjWFZsY25rdFluSmhibU5vWlhNb0pHTnZibVJwZEdsdmJuTXBYRzRnSUNSeGRXVnllVG9nWENKY0lseHVJQ0JBWldGamFDQWtZbkpoYm1Ob0lHbHVJQ1JpY21GdVkyaGxjMXh1SUNBZ0lFQnBaaUJ6ZEhJdGJHVnVaM1JvS0NSeGRXVnllU2tnSVQwZ01GeHVJQ0FnSUNBZ0pIRjFaWEo1T2lBa2NYVmxjbmtnS3lCY0lpd2dYQ0pjYmlBZ0lDQWtjWFZsY25rNklDUnhkV1Z5ZVNBcklDUmljbUZ1WTJoY2JpQWdRRzFsWkdsaElDTjdKSEYxWlhKNWZWeHVJQ0FnSUVCamIyNTBaVzUwWEc1Y2JpOHZYRzRnSUZKbFlXUnpJR0VnYkdsemRDQnZaaUJ0WldScFlTQnhkV1Z5ZVNCbGVIQnlaWE56YVc5dWN5QmhibVFnYzJWd1lYSmhkR1Z6SUd4dloybGpZV3dnWkdsemFuVnVZM1JwYjI1eklHbHVkRzhnWkdsbVptVnlaVzUwSUdKeVlXNWphR1Z6WEc1Y2JpQWdRR0YxZEdodmNpQkZaSFZoY21SdklFSnZkV05oYzF4dUlDQkFjR0Z5WVcwZ2UweHBjM1I5SUNBZ0pHVjRjSEpsYzNOcGIyNXpJQ0F0SUd4cGMzUWdiMllnWlhod2NtVnpjMmx2Ym5OY2JpQWdRSFJvY205M2N5QmdKR1Y0Y0hKbGMzTnBiMjVnSUdseklHNXZkQ0JoSUhaaGJHbGtJR1Y0Y0hKbGMzTnBiMjVjYmx4dUlDQkFjbVYwZFhKdUlIdE1hWE4wSUh3Z1RuVnNiSDFjYmx4dVhHNUFablZ1WTNScGIyNGdaMlYwTFhGMVpYSjVMV0p5WVc1amFHVnpLQ1JsZUhCeVpYTnphVzl1Y3lsY2JpQWdKSEpsYzNWc2REb2dYQ0pjSWx4dUlDQWthR0Z6TFdkeWIzVndjem9nWm1Gc2MyVmNiaUFnTHk4Z1IyVjBkR2x1WnlCcGJtbDBhV0ZzSUhOdVlYQnphRzkwSUdGdVpDQnNiMjlyYVc1bklHWnZjaUJuY205MWNITmNiaUFnUUdWaFkyZ2dKR1Y0Y0hKbGMzTnBiMjRnYVc0Z0pHVjRjSEpsYzNOcGIyNXpYRzRnSUNBZ1FHbG1JSE4wY2kxc1pXNW5kR2dvSkhKbGMzVnNkQ2tnSVQwZ01GeHVJQ0FnSUNBZ0pISmxjM1ZzZERvZ0pISmxjM1ZzZENBcklGd2lJR0Z1WkNCY0lseHVJQ0FnSUVCcFppQjBlWEJsTFc5bUtDUmxlSEJ5WlhOemFXOXVLU0E5UFNCY0luTjBjbWx1WjF3aVhHNGdJQ0FnSUNBa2NtVnpkV3gwT2lBa2NtVnpkV3gwSUNzZ0pHVjRjSEpsYzNOcGIyNWNiaUFnSUNCQVpXeHpaU0JwWmlCMGVYQmxMVzltS0NSbGVIQnlaWE56YVc5dUtTQTlQU0JjSW14cGMzUmNJbHh1SUNBZ0lDQWdKSEpsYzNWc2REb2dKSEpsYzNWc2RDQXJJRzUwYUNna1pYaHdjbVZ6YzJsdmJpd2dNU2xjYmlBZ0lDQWdJQ1JvWVhNdFozSnZkWEJ6T2lCMGNuVmxYRzRnSUNBZ1FHVnNjMlZjYmlBZ0lDQWdJRUIzWVhKdUlGd2lJM3NrWlhod2NtVnpjMmx2Ym4wZ2FYTWdibTkwSUdFZ2RtRnNhV1FnWlhod2NtVnpjMmx2Ymk1Y0lseHVJQ0F2THlCSlppQjNaU0JvWVhabElHZHliM1Z3Y3l3Z2QyVWdhR0YyWlNCMGJ5QmpjbVZoZEdVZ1lXeHNJSEJ2YzNOcFlteGxJR052YldKcGJtRjBhVzl1YzF4dUlDQkFhV1lnSkdoaGN5MW5jbTkxY0hOY2JpQWdJQ0JBWldGamFDQWtaWGh3Y21WemMybHZiaUJwYmlBa1pYaHdjbVZ6YzJsdmJuTmNiaUFnSUNBZ0lFQnBaaUIwZVhCbExXOW1LQ1JsZUhCeVpYTnphVzl1S1NBOVBTQmNJbXhwYzNSY0lseHVJQ0FnSUNBZ0lDQWtabWx5YzNRNklHNTBhQ2drWlhod2NtVnpjMmx2Yml3Z01TbGNiaUFnSUNBZ0lDQWdRR1ZoWTJnZ0pHMWxiV0psY2lCcGJpQWtaWGh3Y21WemMybHZibHh1SUNBZ0lDQWdJQ0FnSUVCcFppQWtiV1Z0WW1WeUlDRTlJQ1JtYVhKemRGeHVJQ0FnSUNBZ0lDQWdJQ0FnUUdWaFkyZ2dKSEJoY25ScFlXd2dhVzRnSkhKbGMzVnNkRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWtjbVZ6ZFd4ME9pQnFiMmx1S0NSeVpYTjFiSFFzSUhOMGNpMXlaWEJzWVdObExXWnBjbk4wS0NSbWFYSnpkQ3dnSkcxbGJXSmxjaXdnSkhCaGNuUnBZV3dwS1Z4dUlDQkFjbVYwZFhKdUlDUnlaWE4xYkhSY2JseHVMeTljYmlBZ1VHRnljMlZ6SUdFZ2MzUnlhVzVuSUhSdklHWnZjbTBnWVNCdFpXUnBZU0J4ZFdWeWVTQmxlSEJ5WlhOemFXOXVYRzVjYmlBZ1FHRjFkR2h2Y2lCRlpIVmhjbVJ2SUVKdmRXTmhjMXh1WEc0Z0lFQndZWEpoYlNCN1UzUnlhVzVuZlNBZ0lDUmxlSEJ5WlhOemFXOXVJQ0F0SUdWNGNISmxjM05wYjI0Z0tHbHVJSE4wY21sdVp5bGNiaUFnUUhSb2NtOTNjeUJGZUhCeVpYTnphVzl1SUhkcGRHZ2dkSGx3WlNCZ2RIbHdaUzF2Wmlna1pYaHdjbVZ6YzJsdmJpbGdJR1JsZEdWamRHVmtMQ0J6ZEhKcGJtY2daWGh3WldOMFpXUmNiaUFnUUhSb2NtOTNjeUJnSkdWNGNISmxjM05wYjI1Z0lHbHpJRzFwYzNOcGJtY2dZVzRnYjNCbGNtRjBiM0pjYmlBZ1FIUm9jbTkzY3lCVmJtdHViM2R1SUhWdWFYUTZJR0FrZFc1cGRHQmNibHh1SUNCQWNtVjBkWEp1SUh0VGRISnBibWNnZkNCT2RXeHNmVnh1WEc1Y2JrQm1kVzVqZEdsdmJpQndZWEp6WlMxbGVIQnlaWE56YVc5dUtDUmxlSEJ5WlhOemFXOXVLVnh1SUNBa2IzQmxjbUYwYjNJNklGd2lYQ0pjYmlBZ0pIWmhiSFZsT2lCY0lsd2lYRzRnSUNSbGJHVnRaVzUwT2lCY0lsd2lYRzRnSUNSeVpYTjFiSFE2SUZ3aVhDSmNiaUFnSkdsekxYZHBaSFJvT2lCMGNuVmxYRzRnSUVCcFppQjBlWEJsTFc5bUtDUmxlSEJ5WlhOemFXOXVLU0FoUFNCY0luTjBjbWx1WjF3aVhHNGdJQ0FnUUhkaGNtNGdYQ0pGZUhCeVpYTnphVzl1SUhkcGRHZ2dkSGx3WlNCZ0kzdDBlWEJsTFc5bUtDUmxlSEJ5WlhOemFXOXVLWDFnSUdSbGRHVmpkR1ZrTENCemRISnBibWNnWlhod1pXTjBaV1F1WENKY2JpQWdMeThnVTJWd1lYSmhkR2x1WnlCMGFHVWdiM0JsY21GMGIzSWdabkp2YlNCMGFHVWdjbVZ6ZENCdlppQjBhR1VnWlhod2NtVnpjMmx2Ymx4dUlDQkFhV1lnYzNSeUxYTnNhV05sS0NSbGVIQnlaWE56YVc5dUxDQXlMQ0F5S1NBOVBTQmNJajFjSWx4dUlDQWdJQ1J2Y0dWeVlYUnZjam9nYzNSeUxYTnNhV05sS0NSbGVIQnlaWE56YVc5dUxDQXhMQ0F5S1Z4dUlDQWdJQ1IyWVd4MVpUb2djM1J5TFhOc2FXTmxLQ1JsZUhCeVpYTnphVzl1TENBektWeHVJQ0JBWld4elpWeHVJQ0FnSUNSdmNHVnlZWFJ2Y2pvZ2MzUnlMWE5zYVdObEtDUmxlSEJ5WlhOemFXOXVMQ0F4TENBeEtWeHVJQ0FnSUNSMllXeDFaVG9nYzNSeUxYTnNhV05sS0NSbGVIQnlaWE56YVc5dUxDQXlLVnh1SUNBdkx5QkRhR1ZqYTJsdVp5QjNhR0YwSUhSNWNHVWdiMllnWlhod2NtVnpjMmx2YmlCM1pYSmxJR1JsWVd4cGJtY2dkMmwwYUZ4dUlDQkFhV1lnYldGd0xXaGhjeTFyWlhrb0pHSnlaV0ZyY0c5cGJuUnpMQ0FrZG1Gc2RXVXBYRzRnSUNBZ0pISmxjM1ZzZERvZ2JXRndMV2RsZENna1luSmxZV3R3YjJsdWRITXNJQ1IyWVd4MVpTbGNiaUFnUUdWc2MyVWdhV1lnYldGd0xXaGhjeTFyWlhrb0pHMWxaR2xoTFdWNGNISmxjM05wYjI1ekxDQWtaWGh3Y21WemMybHZiaWxjYmlBZ0lDQWtjbVZ6ZFd4ME9pQnRZWEF0WjJWMEtDUnRaV1JwWVMxbGVIQnlaWE56YVc5dWN5d2dKR1Y0Y0hKbGMzTnBiMjRwWEc0Z0lDQWdKR2x6TFhkcFpIUm9PaUJtWVd4elpWeHVJQ0JBWld4elpWeHVJQ0FnSUNSeVpYTjFiSFE2SUhSdkxXNTFiV0psY2lna2RtRnNkV1VwWEc0Z0lFQnBaaUFrYVhNdGQybGtkR2hjYmlBZ0lDQWtkVzVwZERvZ2RXNXBkQ2drY21WemRXeDBLVnh1SUNBZ0lDUnBiblJsY25aaGJEb2dNRnh1SUNBZ0lFQnBaaUJ0WVhBdGFHRnpMV3RsZVNna2RXNXBkQzFwYm5SbGNuWmhiSE1zSUNSMWJtbDBLVnh1SUNBZ0lDQWdKR2x1ZEdWeWRtRnNPaUJ0WVhBdFoyVjBLQ1IxYm1sMExXbHVkR1Z5ZG1Gc2N5d2dKSFZ1YVhRcFhHNGdJQ0FnUUdWc2MyVmNiaUFnSUNBZ0lFQjNZWEp1SUZ3aVZXNXJibTkzYmlCMWJtbDBPaUFqZXlSMWJtbDBmVndpWEc0Z0lDQWdRR2xtSUNSdmNHVnlZWFJ2Y2lBOVBTQmNJajVjSWx4dUlDQWdJQ0FnSkdWc1pXMWxiblE2SUZ3aUtHMXBiaTEzYVdSMGFEb2dJM3NrY21WemRXeDBJQ3NnSkdsdWRHVnlkbUZzZlNsY0lseHVJQ0FnSUVCbGJITmxJR2xtSUNSdmNHVnlZWFJ2Y2lBOVBTQmNJanhjSWx4dUlDQWdJQ0FnSkdWc1pXMWxiblE2SUZ3aUtHMWhlQzEzYVdSMGFEb2dJM3NrY21WemRXeDBJQzBnSkdsdWRHVnlkbUZzZlNsY0lseHVJQ0FnSUVCbGJITmxJR2xtSUNSdmNHVnlZWFJ2Y2lBOVBTQmNJajQ5WENKY2JpQWdJQ0FnSUNSbGJHVnRaVzUwT2lCY0lpaHRhVzR0ZDJsa2RHZzZJQ043SkhKbGMzVnNkSDBwWENKY2JpQWdJQ0JBWld4elpTQnBaaUFrYjNCbGNtRjBiM0lnUFQwZ1hDSThQVndpWEc0Z0lDQWdJQ0FrWld4bGJXVnVkRG9nWENJb2JXRjRMWGRwWkhSb09pQWpleVJ5WlhOMWJIUjlLVndpWEc0Z0lDQWdRR1ZzYzJWY2JpQWdJQ0FnSUVCM1lYSnVJRndpSTNza1pYaHdjbVZ6YzJsdmJuMGdhWE1nYldsemMybHVaeUJoYmlCdmNHVnlZWFJ2Y2k1Y0lseHVJQ0JBWld4elpWeHVJQ0FnSUNSbGJHVnRaVzUwT2lBa2NtVnpkV3gwWEc0Z0lFQnlaWFIxY200Z0pHVnNaVzFsYm5SY2JseHVMeTljYmlBZ1VtVndiR0ZqWlhNZ2RHaGxJR1pwY25OMElHOWpZM1Z5Wlc1alpTQnZaaUIwYUdVZ2MzUnlhVzVuSUhkcGRHZ2dkR2hsSUhKbGNHeGhZMlZ0Wlc1MElITjBjbWx1WjF4dVhHNGdJRUJoZFhSb2IzSWdSV1IxWVhKa2J5QkNiM1ZqWVhOY2JseHVJQ0JBY0dGeVlXMGdlMU4wY21sdVozMGdJQ0FrYzJWaGNtTm9JQ0F0SUZSb1pTQjJZV3gxWlNCaVpXbHVaeUJ6WldGeVkyaGxaQ0JtYjNKY2JpQWdRSEJoY21GdElIdFRkSEpwYm1kOUlDQWdKSEpsY0d4aFkyVWdJQzBnVkdobElISmxjR3hoWTJWdFpXNTBJSE4wY21sdVoxeHVJQ0JBY0dGeVlXMGdlMU4wY21sdVozMGdJQ0FrYzNWaWFtVmpkQ0FnTFNCVWFHVWdjM1J5YVc1bklHSmxhVzVuSUhKbGNHeGhZMlZrSUc5dVhHNWNiaUFnUUhKbGRIVnliaUI3VTNSeWFXNW5JSHdnVG5Wc2JIMWNibHh1WEc1QVpuVnVZM1JwYjI0Z2MzUnlMWEpsY0d4aFkyVXRabWx5YzNRb0pITmxZWEpqYUN3Z0pISmxjR3hoWTJVc0lDUnpkV0pxWldOMEtWeHVJQ0FrYzJWaGNtTm9MWE4wWVhKME9pQnpkSEl0YVc1a1pYZ29KSE4xWW1wbFkzUXNJQ1J6WldGeVkyZ3BYRzRnSUVCcFppQWtjMlZoY21Ob0xYTjBZWEowSUQwOUlHNTFiR3hjYmlBZ0lDQkFjbVYwZFhKdUlDUnpkV0pxWldOMFhHNGdJQ1J5WlhOMWJIUTZJSE4wY2kxemJHbGpaU2drYzNWaWFtVmpkQ3dnTUN3Z0pITmxZWEpqYUMxemRHRnlkQ0F0SURFcFhHNGdJQ1J5WlhOMWJIUTZJQ1J5WlhOMWJIUWdLeUFrY21Wd2JHRmpaVnh1SUNBa2NtVnpkV3gwT2lBa2NtVnpkV3gwSUNzZ2MzUnlMWE5zYVdObEtDUnpkV0pxWldOMExDQWtjMlZoY21Ob0xYTjBZWEowSUNzZ2MzUnlMV3hsYm1kMGFDZ2tjMlZoY21Ob0tTbGNiaUFnUUhKbGRIVnliaUFrY21WemRXeDBYRzVjYmk4dlhHNGdJRU5oYzNSeklHRWdiblZ0WW1WeUlIUnZJR0VnYzNSeWFXNW5YRzVjYmlBZ1FHRjFkR2h2Y2lCSWRXZHZJRWRwY21GMVpHVnNYRzVjYmlBZ1FIQmhjbUZ0SUh0VGRISnBibWQ5SUNBZ0pITjBjbWx1WnlBZ0xTQk9kVzFpWlhJZ2RHOGdZbVVnY0dGeWMyVmtYRzVjYmlBZ1FISmxkSFZ5YmlCN1RHbHpkQ0I4SUU1MWJHeDlYRzVjYmtCbWRXNWpkR2x2YmlCMGJ5MXVkVzFpWlhJb0pITjBjbWx1WnlsY2JpQWdMeThnVFdGMGNtbGpaWE5jYmlBZ0pITjBjbWx1WjNNNklGd2lNRndpSUZ3aU1Wd2lJRndpTWx3aUlGd2lNMXdpSUZ3aU5Gd2lJRndpTlZ3aUlGd2lObHdpSUZ3aU4xd2lJRndpT0Z3aUlGd2lPVndpWEc0Z0lDUnVkVzFpWlhKek9pQXdJREVnTWlBeklEUWdOU0EySURjZ09DQTVYRzRnSUM4dklGSmxjM1ZzZEZ4dUlDQWtjbVZ6ZFd4ME9pQXdYRzRnSUNSa2FYWnBaR1Z5T2lBd1hHNGdJQ1J0YVc1MWN6b2dabUZzYzJWY2JpQWdMeThnVEc5dmNHbHVaeUIwYUhKdmRXZG9JR0ZzYkNCamFHRnlZV04wWlhKelhHNGdJRUJtYjNJZ0pHa2dabkp2YlNBeElIUm9jbTkxWjJnZ2MzUnlMV3hsYm1kMGFDZ2tjM1J5YVc1bktWeHVJQ0FnSUNSamFHRnlZV04wWlhJNklITjBjaTF6YkdsalpTZ2tjM1J5YVc1bkxDQWthU3dnSkdrcFhHNGdJQ0FnSkdsdVpHVjRPaUJwYm1SbGVDZ2tjM1J5YVc1bmN5d2dKR05vWVhKaFkzUmxjaWxjYmlBZ0lDQkFhV1lnSkdOb1lYSmhZM1JsY2lBOVBTQmNJaTFjSWx4dUlDQWdJQ0FnSkcxcGJuVnpPaUIwY25WbFhHNGdJQ0FnUUdWc2MyVWdhV1lnSkdOb1lYSmhZM1JsY2lBOVBTQmNJaTVjSWx4dUlDQWdJQ0FnSkdScGRtbGtaWEk2SURGY2JpQWdJQ0JBWld4elpWeHVJQ0FnSUNBZ1FHbG1JSFI1Y0dVdGIyWW9KR2x1WkdWNEtTQWhQU0JjSW01MWJXSmxjbHdpWEc0Z0lDQWdJQ0FnSUNSeVpYTjFiSFE2SUdsbUtDUnRhVzUxY3l3Z0pISmxjM1ZzZENBcUlDMHhMQ0FrY21WemRXeDBLVnh1SUNBZ0lDQWdJQ0JBY21WMGRYSnVJRjlzWlc1bmRHZ29KSEpsYzNWc2RDd2djM1J5TFhOc2FXTmxLQ1J6ZEhKcGJtY3NJQ1JwS1NsY2JpQWdJQ0FnSUNSdWRXMWlaWEk2SUc1MGFDZ2tiblZ0WW1WeWN5d2dKR2x1WkdWNEtWeHVJQ0FnSUNBZ1FHbG1JQ1JrYVhacFpHVnlJRDA5SURCY2JpQWdJQ0FnSUNBZ0pISmxjM1ZzZERvZ0pISmxjM1ZzZENBcUlERXdYRzRnSUNBZ0lDQkFaV3h6WlZ4dUlDQWdJQ0FnSUNBdkx5Qk5iM1psSUhSb1pTQmtaV05wYldGc0lHUnZkQ0IwYnlCMGFHVWdiR1ZtZEZ4dUlDQWdJQ0FnSUNBa1pHbDJhV1JsY2pvZ0pHUnBkbWxrWlhJZ0tpQXhNRnh1SUNBZ0lDQWdJQ0FrYm5WdFltVnlPaUFrYm5WdFltVnlJQzhnSkdScGRtbGtaWEpjYmlBZ0lDQWdJQ1J5WlhOMWJIUTZJQ1J5WlhOMWJIUWdLeUFrYm5WdFltVnlYRzRnSUVCeVpYUjFjbTRnYVdZb0pHMXBiblZ6TENBa2NtVnpkV3gwSUNvZ0xURXNJQ1J5WlhOMWJIUXBYRzVjYmtCbWRXNWpkR2x2YmlCZmJHVnVaM1JvS0NSdWRXMWlaWElzSUNSMWJtbDBLVnh1SUNBa2MzUnlhVzVuY3pvZ1hDSndlRndpSUZ3aVkyMWNJaUJjSW0xdFhDSWdYQ0lsWENJZ1hDSmphRndpSUZ3aWNHbGpZVndpSUZ3aWFXNWNJaUJjSW1WdFhDSWdYQ0p5WlcxY0lpQmNJbkIwWENJZ1hDSndZMXdpSUZ3aVpYaGNJaUJjSW5aM1hDSWdYQ0oyYUZ3aUlGd2lkbTFwYmx3aUlGd2lkbTFoZUZ3aVhHNGdJQ1IxYm1sMGN6b2dNWEI0SURGamJTQXhiVzBnTVNVZ01XTm9JREZ3YVdOaElERnBiaUF4WlcwZ01YSmxiU0F4Y0hRZ01YQmpJREZsZUNBeGRuY2dNWFpvSURGMmJXbHVJREYyYldGNFhHNGdJQ1JwYm1SbGVEb2dhVzVrWlhnb0pITjBjbWx1WjNNc0lDUjFibWwwS1Z4dUlDQkFhV1lnZEhsd1pTMXZaaWdrYVc1a1pYZ3BJQ0U5SUZ3aWJuVnRZbVZ5WENKY2JpQWdJQ0JBZDJGeWJpQmNJbFZ1YTI1dmQyNGdkVzVwZENCZ0kzc2tkVzVwZEgxZ0xsd2lYRzRnSUNBZ1FISmxkSFZ5YmlCbVlXeHpaVnh1SUNCQWNtVjBkWEp1SUNSdWRXMWlaWElnS2lCdWRHZ29KSFZ1YVhSekxDQWthVzVrWlhncFhHNGlMQ0l2THlCb2RIUndPaTh2WTNOemJXOXFieTVqYjIwdmJHRjBaWE4wWDI1bGQxOWpiR1ZoY21acGVGOXpiMTltWVhJdlhHNHVZMnhsWVhKbWFYZzZZV1owWlhKY2JpQWdZMjl1ZEdWdWREb2dYQ0pjSWx4dUlDQmthWE53YkdGNU9pQjBZV0pzWlZ4dUlDQmpiR1ZoY2pvZ1ltOTBhRnh1SWl3aUx5OGdVa1ZUVUU5T1UwbFdSU0JKVFVGSFJWTmNibWx0Wnl3Z2FXWnlZVzFsTENCbGJXSmxaRnh1SUNCM2FXUjBhRG9nTVRBd0pWeHVJaXdpTG1OdmJuUmhhVzVsY2x4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWpabVptWEc0Z0lHSnZjbVJsY2kxc1pXWjBPaUF4Y0hnZ2MyOXNhV1FnSkdKdmNtUmxja052Ykc5eVhHNGdJR0p2Y21SbGNpMXlhV2RvZERvZ01YQjRJSE52Ykdsa0lDUmliM0prWlhKRGIyeHZjbHh1SUNCdFlYSm5hVzQ2SURBZ1lYVjBiMXh1SUNCdFlYZ3RkMmxrZEdnNklERXlNREJ3ZUZ4dVhHNWNibHRqYkdGemN5bzlKMk52YkMwblhWeHVJQ0JrYVhOd2JHRjVPaUIwWVdKc1pTMWpaV3hzWEc0Z0lIWmxjblJwWTJGc0xXRnNhV2R1T2lCdGFXUmtiR1ZjYmx4dUlDQXJiV1ZrYVdFb1hDSThQWFJoWW14bGRGd2lLVnh1SUNBZ0lHUnBjM0JzWVhrNklHbHViR2x1WlMxaWJHOWphMXh1SUNBZ0lIUmxlSFF0WVd4cFoyNDZJR05sYm5SbGNseHVYRzR2THpJZ1kyOXNkVzF1Y3lCM2FXUmxYRzR2THlCVWFHbHpJR2x6SUhWelpXUWdhVzRnZEdobElHWnZiM1JsY2lCbWIzSWdibUZ5Y205M1pYSWdZMjlzZFcxdWN5QnZaaUJzYVc1cmMxeHVMbU52YkMweUxURXlYRzRnSUhkcFpIUm9PaUF5THpFeUlDb2dNVEF3SlZ4dVhHNGdJQ3R0WldScFlTaGNJanc5ZEdGaWJHVjBYQ0lwWEc0Z0lDQWdkMmxrZEdnNklERXdNQ1ZjYmx4dUx5OHpJR052YkhWdGJuTWdkMmxrWlZ4dUx5OGdWR2hwY3lCcGN5QjFjMlZrSUdsdUlIUm9aU0JtYjI5MFpYSWdabTl5SUdaaGRIUmxjaUJqYjJ4MWJXNXpJRzltSUd4dmJtZGxjaTEwYVhSc1pXUWdiR2x1YTNOY2JpNWpiMnd0TXkweE1seHVJQ0IzYVdSMGFEb2dNeTh4TWlBcUlERXdNQ1ZjYmx4dUlDQXJiV1ZrYVdFb1hDSThQWFJoWW14bGRGd2lLVnh1SUNBZ0lIZHBaSFJvT2lBeE1EQWxYRzVjYmk4dklEUWdZMjlzZFcxdWN5QjNhV1JsTGx4dUx5OGdWR2hwY3lCcGN5QjFjMlZrSUdsdUlIUm9aU0JNWldGa1pYSnphR2x3SUhCaFoyVXVYRzR1WTI5c0xUUXRNVEpjYmlBZ2QybGtkR2c2SURRdk1USWdLaUF4TURBbFhHNWNiaUFnSzIxbFpHbGhLRndpUEQxMFlXSnNaWFJjSWlsY2JpQWdJQ0IzYVdSMGFEb2dNVEF3SlZ4dVhHNWNiaTh2SURVZ1kyOXNkVzF1Y3lCM2FXUmxMbHh1THk4Z1ZHaHBjeUJwY3lCMWMyVmtJR2x1SUcxdmMzUWdiMllnZEdobElHSmhibTVsY25NdVhHNHZMeUJKZENCcGN5QmhiSE52SUhWelpXUWdhVzRnZEdobElFMWhhVzRnYlc5a2RXeGxJR0Z5WldFZ2RHaGhkQ0JwYm1Oc2RXUmxjeUIwYUdVZ2MybGtaV0poY2k1Y2JpNWpiMnd0TlMweE1seHVJQ0IzYVdSMGFEb2dOUzh4TWlBcUlERXdNQ1ZjYmx4dUlDQXJiV1ZrYVdFb1hDSThQWFJoWW14bGRGd2lLVnh1SUNBZ0lIZHBaSFJvT2lBeE1EQWxYRzVjYmx4dUx5OGdOaUJqYjJ4MWJXNXpJSGRwWkdVdVhHNHZMeUJVYUdseklIZHBiR3dnYzNCaGJpQm9ZV3htSUhSb1pTQmhkbUZwYkdGaWJHVWdkMmxrZEdoY2JpOHZJRlJvWlNCRFlYSmtJRTF2WkhWc1pTQnZiaUIwYUdVZ2FHOXRaWEJoWjJVZ2RYTmxjeUIwYUdselhHNHVZMjlzTFRZdE1USmNiaUFnZDJsa2RHZzZJRFl2TVRJZ0tpQXhNREFsWEc1Y2JpQWdLMjFsWkdsaEtGd2lQRDEwWVdKc1pYUmNJaWxjYmlBZ0lDQjNhV1IwYURvZ01UQXdKVnh1WEc1Y2JpOHZJRGNnWTI5c2RXMXVjeUIzYVdSbExseHVMeThnVkdocGN5QnBjeUIxYzJWa0lHbHVJRzF2YzNRZ2IyWWdkR2hsSUdKaGJtNWxjbk11WEc0dkx5QkpkQ0JwY3lCaGJITnZJSFZ6WldRZ2FXNGdkR2hsSUUxaGFXNGdiVzlrZFd4bElHRnlaV0VnZEdoaGRDQnBibU5zZFdSbGN5QjBhR1VnYzJsa1pXSmhjaTVjYmk4dklGdGpiR0Z6Y3lvOUp5MHRZMjlzTFRjdE1USW5YVnh1TG1OdmJDMDNMVEV5WEc0Z0lIZHBaSFJvT2lBM0x6RXlJQ29nTVRBd0pWeHVYRzRnSUN0dFpXUnBZU2hjSWp3OWRHRmliR1YwWENJcFhHNGdJQ0FnZDJsa2RHZzZJREV3TUNWY2JseHVYRzR2THlBNElHTnZiSFZ0Ym5NZ2QybGtaUzVjYmk4dklGUm9hWE1nYVhNZ2RYTmxaQ0JwYmlCMGFHVWdUR1ZoWkdWeWMyaHBjQ0J3WVdkbExseHVMbU52YkMwNExURXlYRzRnSUhkcFpIUm9PaUE0THpFeUlDb2dNVEF3SlZ4dVhHNGdJQ3R0WldScFlTaGNJanc5ZEdGaWJHVjBYQ0lwWEc0Z0lDQWdkMmxrZEdnNklERXdNQ1ZjYmx4dVhHNHVZMjlzTFRrdE1USmNiaUFnZDJsa2RHZzZJRGt2TVRJZ0tpQXhNREFsWEc1Y2JpQWdLMjFsWkdsaEtGd2lQRDEwWVdKc1pYUmNJaWxjYmlBZ0lDQjNhV1IwYURvZ01UQXdKVnh1WEc1Y2JpNWpiMnd0TVRBdE1USmNiaUFnZDJsa2RHZzZJREV3THpFeUlDb2dNVEF3SlZ4dVhHNGdJQ3R0WldScFlTaGNJanc5ZEdGaWJHVjBYQ0lwWEc0Z0lDQWdkMmxrZEdnNklERXdNQ1ZjYmx4dUxtTnZiQzB4TVMweE1seHVJQ0IzYVdSMGFEb2dNVEV2TVRJZ0tpQXhNREFsWEc1Y2JpQWdLMjFsWkdsaEtGd2lQRDEwWVdKc1pYUmNJaWxjYmlBZ0lDQjNhV1IwYURvZ01UQXdKVnh1SWl3aUtseHVJQ0J0WVhKbmFXNDZJREJjYmlBZ2NHRmtaR2x1WnpvZ01GeHVJQ0JpYjNndGMybDZhVzVuT2lCaWIzSmtaWEl0WW05NFhHNWNiaUFnSmpvNllXWjBaWElzSUNZNk9tSmxabTl5WlZ4dUlDQWdJR0p2ZUMxemFYcHBibWM2SUdKdmNtUmxjaTFpYjNoY2JseHVZbTlrZVZ4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWtjMnhoZEdWY2JpQWdjR0ZrWkdsdVp6b2dNRnh1WEc1aFhHNGdJSFJsZUhRdFpHVmpiM0poZEdsdmJqb2dibTl1WlZ4dUlDQmpiMnh2Y2pva1ozSmxaVzVjYmlBZ0pqcG9iM1psY2x4dUlDQWdJR052Ykc5eU9pUnVhV2RvZEdkeVpXVnVYRzRnSUNBZ2RHVjRkQzFrWldOdmNtRjBhVzl1T2lCMWJtUmxjbXhwYm1WY2JseHVMeTlTWlhObGRDQm1iR1Y0WW05NElITmxkSFJwYm1keklIZG9aVzRnY21WemNHOXVaR2x1WnlCaVpXeHZkeUJrWlhOcmRHOXdYRzQ5Y21WemNHOXVjMmwyWlMxemRHRmphMXh1SUNBcmJXVmthV0VvWENJOFBYUmhZbXhsZEZ3aUtWeHVJQ0FnSUdac1pYZ3RabXh2ZHpvZ1kyOXNkVzF1WEc0aUxDSXZMeUJVYUdVZ2RHRmliR1Z6SUhOMFlYSjBJSFJ2SUd4dmIyc2dablZuYkhrZ1lYUWdZWEp2ZFc1a0lEY3dNSEI0TENCemJ5QnNaWFFuY3lCemRHRnlkQ0J5WlhOd2IyNWthVzVuSUhSb1pYSmxYRzRrZEdGaWJHVXRZbkpsWVdzNklGd2lQRDAzTURCd2VGd2lYRzVjYm5SaFlteGxYRzVjZEcxaGNtZHBiam9nTUNBd0lERXVOV1Z0WEc1Y2RIZHBaSFJvT2lBeE1EQWxYRzVjYm5SeVhHNGdJR0p2Y21SbGNpMWliM1IwYjIwNklERndlQ0J6YjJ4cFpDQWtZMnh2ZFdSY2JseHVJQ0FyYldWa2FXRW9KSFJoWW14bExXSnlaV0ZyS1Z4dUlDQWdJRzFoY21kcGJpMTBiM0E2SURBZ0lXbHRjRzl5ZEdGdWREdGNibHh1SUNBZ0lDWTZabWx5YzNRdFkyaHBiR1JjYmlBZ0lDQWdJR0p2Y21SbGNpMTBiM0E2SURGd2VDQnpiMnhwWkNBa1kyeHZkV1JjYmx4dUlDQW1PbTUwYUMxamFHbHNaQ2hsZG1WdUtWeHVJQ0FnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNSemRHVmhiVnh1WEc1MFpGeHVJQ0IyWlhKMGFXTmhiQzFoYkdsbmJqb2dkRzl3WEc0Z0lIQmhaR1JwYm1jNklERXdjSGdnTlhCNFhHNWNiaUFnSzIxbFpHbGhLQ1IwWVdKc1pTMWljbVZoYXlsY2JpQWdJQ0J0WVhKbmFXNHRkRzl3T2lBd0lDRnBiWEJ2Y25SaGJuUTdYRzRnSUNBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabFhHNGdJQ0FnY0dGa1pHbHVaeTFzWldaME9pQTBNQ1ZjYmx4dUlDQWdJQ1k2WW1WbWIzSmxYRzRnSUNBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVmNiaUFnSUNBZ0lIUnZjRG9nTm5CNFhHNGdJQ0FnSUNCc1pXWjBPaUEyY0hoY2JpQWdJQ0FnSUhkcFpIUm9PaUEwTUNWY2JpQWdJQ0FnSUhCaFpHUnBibWN0Y21sbmFIUTZJREV3Y0hoY2JpQWdJQ0FnSUhkb2FYUmxMWE53WVdObE9pQnViM2R5WVhCY2JpQWdJQ0FnSUdadmJuUXRkMlZwWjJoME9pQWtjMlZ0YVdKdmJHUmNibHh1WEc0Z0lDQWdKanB1ZEdndGIyWXRkSGx3WlNneEtWeHVJQ0FnSUNBZ0pqcGlaV1p2Y21WY2JpQWdJQ0FnSUNBZ1kyOXVkR1Z1ZERvZ1hDSkRhWFI1T2lCY0lseHVJQ0FnSUNZNmJuUm9MVzltTFhSNWNHVW9NaWxjYmlBZ0lDQWdJQ1k2WW1WbWIzSmxYRzRnSUNBZ0lDQWdJR052Ym5SbGJuUTZJRndpUVdSa2NtVnpjem9nWENKY2JpQWdJQ0FtT201MGFDMXZaaTEwZVhCbEtETXBYRzRnSUNBZ0lDQW1PbUpsWm05eVpWeHVJQ0FnSUNBZ0lDQmpiMjUwWlc1ME9pQmNJbEJvYjI1bE9pQmNJbHh1WEc1MGFHVmhaRnh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBa1kyeHZkV1JjYmx4dUlDQjBjbHh1SUNBZ0lDOHZTR2xrWlNCMGFHVWdkR2hsWVdRZ2FXNW1iM0p0WVhScGIyNGdhVzRnWVc0Z1lXTmpaWE56YVdKc1pTQjNZWGxjYmx4dUlDQWdJQ3R0WldScFlTZ2tkR0ZpYkdVdFluSmxZV3NwWEc0Z0lDQWdJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1ZjYmlBZ0lDQWdJSFJ2Y0RvZ0xUazVPVGx3ZUZ4dUlDQWdJQ0FnYkdWbWREb2dMVGs1T1Rsd2VGeHVYRzRnSUhSb1hHNGdJQ0FnWm05dWRDMTNaV2xuYUhRNklDUnpaVzFwWW05c1pGeHVJQ0FnSUhSbGVIUXRZV3hwWjI0NklHeGxablJjYmlBZ0lDQndZV1JrYVc1bk9pQTFjSGhjYmx4dWRHRmliR1VzSUhSb1pXRmtMQ0IwWW05a2VTd2dkR2dzSUhSa0xDQjBjbHh1SUNBcmJXVmthV0VvSkhSaFlteGxMV0p5WldGcktWeHVJQ0FnSUdScGMzQnNZWGs2SUdKc2IyTnJYRzRpTENJdWJtRjJMVzFwYm05eVhHNGdJR1JwYzNCc1lYazZJR0pzYjJOclhHNGdJSFJsZUhRdFlXeHBaMjQ2SUhKcFoyaDBYRzVjYmlBZ0psOWZZMjl1ZEdGcGJtVnlYRzRnSUNBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0pIZG9hWFJsWEc0Z0lDQWdZbTl5WkdWeUxXeGxablE2SURGd2VDQnpiMnhwWkNBa1ltOXlaR1Z5UTI5c2IzSmNiaUFnSUNCaWIzSmtaWEl0Y21sbmFIUTZJREZ3ZUNCemIyeHBaQ0FrWW05eVpHVnlRMjlzYjNKY2JpQWdJQ0J0WVhKbmFXNDZJREFnWVhWMGIxeHVJQ0FnSUhCaFpHUnBibWM2SURGeVpXMGdNUzQxY21WdFhHNGdJQ0FnYldGNExYZHBaSFJvT2lBeE1qQXdjSGhjYmx4dUlDQWdJQ3R0WldScFlTaGNJanc5ZEdGaWJHVjBYQ0lwWEc0Z0lDQWdJQ0F2TDJScGMzQnNZWGs2SUc1dmJtVmNiaUFnSUNBZ0lIUmxlSFF0WVd4cFoyNDZJR05sYm5SbGNseHVYRzRnSUd4cFhHNGdJQ0FnWkdsemNHeGhlVG9nYVc1c2FXNWxMV0pzYjJOclhHNWNiaUFnSUNBbU9tRm1kR1Z5WEc0Z0lDQWdJQ0JrYVhOd2JHRjVPaUJwYm14cGJtVXRZbXh2WTJ0Y2JpQWdJQ0FnSUdOdmJuUmxiblE2SUNjZ2ZDQW5YRzRnSUNBZ0lDQmpiMnh2Y2pvZ0pHZHlaV1Z1WEc0Z0lDQWdJQ0J0WVhKbmFXNDZJREFnTW5CNElEQWdMak55WlcxY2JseHVJQ0FnSUNZNmJuUm9MV05vYVd4a0tETXBYRzVjYmlBZ0lDQWdJQ1k2WVdaMFpYSmNiaUFnSUNBZ0lDQWdZMjl1ZEdWdWREb2dKeUFuWEc1Y2JpQWdJQ0FtT214aGMzUXRZMmhwYkdSY2JpQWdJQ0FnSUdGY2JpQWdJQ0FnSUNBZ1ptOXVkQzEzWldsbmFIUTZZbTlzWkZ4dUlDQWdJQ0FnSUNCdFlYSm5hVzR0Y21sbmFIUTZJREV3Y0hoY2JseHVJQ0FnSUNBZ0lDQXJiV1ZrYVdFb1hDSThQWEJvYjI1bFhDSXBYRzRnSUNBZ0lDQWdJQ0FnYldGeVoybHVMWEpwWjJoME9pQXdYRzVjYmlBZ0psOWZiR2x1YTF4dUlDQWdJR052Ykc5eU9pQWtZMmhoY21OdllXeGNiaUFnSUNCa2FYTndiR0Y1T2lCcGJteHBibVV0WW14dlkydGNiaUFnSUNCd1lXUmthVzVuT2lBd0lDNHpjbVZ0SURCY2JseHVJQ0FnSUN0dFpXUnBZU2hjSWp3OWNHaHZibVZjSWlsY2JpQWdJQ0FnSUdadmJuUXRjMmw2WlRvZ0xqaHlaVzFjYmx4dVhHNGdJQ0FnSmpwb2IzWmxjbHh1SUNBZ0lDQWdZMjlzYjNJNklDUm5jbVZsYmx4dVhHNHVjMmwwWlMxdFlYQmNiaUFnWVZ4dUlDQWdJR052Ykc5eU9pUmphR0Z5WTI5aGJGeHVJQ0FnSUNZNmFHOTJaWEpjYmlBZ0lDQWdJR052Ykc5eU9pQWtaM0psWlc1Y2JpSXNJaTh2SUdobFlXUmxjaUJ6YVhwbFhHNGthR1ZoWkdWeUxXaGxhV2RvZEMxVE9pQTFNSEI0WEc0a2FHVmhaR1Z5TFdobGFXZG9kQzFNT2lBNE1IQjRYRzVjYmk4dklFNWhkbWxuWVhScGIyNGdjMmw2WlZ4dUpHNWhkaTEzYVdSMGFDMVRPaUF5TmpCd2VGeHVYRzR2THlCVFpXRnlZMmdnYzJsNlpWeHVKSE5sWVhKamFDMW9aV2xuYUhRdFV6b2dOVEJ3ZUZ4dUpITmxZWEpqYUMxb1pXbG5hSFF0VERvZ01USXdjSGhjYmx4dUx5OGdlaTFwYm1SbGVGeHVKR0psYkc5M0xXTnZiblJsYm5RNklERmNiaVJqYjI1MFpXNTBPaUF5WEc0a1lXSnZkbVV0WTI5dWRHVnVkRG9nTTF4dVhHNHZMMXh1SUNCY0luQm9iMjVsWENJNklETXlNSEI0TEZ4dUlDQmNJblJoWW14bGRGd2lPaUEzTmpod2VDeGNiaUFnWENKa1pYTnJkRzl3WENJNklERXdNalJ3ZUNsY2JseHVYRzR2THlCaWNtVmhhM0J2YVc1MGMxeHVJQ0FrVXpvZ05EZ3djSGhjYmlBZ0pFMDZJRGMyT0hCNFhHNGdJQ1JNT2lBeE1ESTBjSGhjYmlBZ0pHMWhlRXc2SUNSTUlDMGdNWEI0WEc1Y2JseHVMeTljYmlBZ0swMVJLRzFoZUV3cFhHNGdJQ3R0WldScFlTaGNJanhrWlhOcmRHOXdYQ0lwWEc1Y2JpOHZYRzRnSUN0TlVTaE1LVnh1SUNBcmJXVmthV0VvWENJK1pHVnphM1J2Y0Z3aUtWeHVYRzVjYmk4dklITjFjR1Z5SUd4cFoyaDBJR2R5YVdRZ0xTQnBkQ0IzYjNKcmN5QjNhWFJvSUhSb1pTQXVZMlF0WTI5dWRHRnBibVZ5SUdOc1lYTnpJR2x1YzJsa1pTQnpkSGxzWlM1elkzTnpYRzVjYmoxamIyeDFiVzRvSkhCbGNtTmxiblJoWjJVc0lDUm1iRzloZEMxa2FYSmxZM1JwYjI0NklHeGxablFwWEc0Z0lIZHBaSFJvT2lBeE1EQWxJQ29nSkhCbGNtTmxiblJoWjJWY2JpQWdabXh2WVhRNklDUm1iRzloZEMxa2FYSmxZM1JwYjI1Y2JseHVQV05zWldGeVptbDRYRzRnSUNZNllXWjBaWEpjYmlBZ0lDQmpiMjUwWlc1ME9pQmNJbHdpWEc0Z0lDQWdaR2x6Y0d4aGVUb2dkR0ZpYkdWY2JpQWdJQ0JqYkdWaGNqb2dZbTkwYUZ4dVhHNWhMbU5rTFc1aGRpMXBkR1Z0WEc0Z0lDWTZhRzkyWlhKY2JpQWdJQ0JwYldkY2JpQWdJQ0FnSUc5d1lXTnBkSGs2SUM0M0lDRnBiWEJ2Y25SaGJuUmNiaUFnSUNCb00xeHVJQ0FnSUNBZ1kyOXNiM0k2SUNSdWFXZG9kR2R5WldWdUlDRnBiWEJ2Y25SaGJuUmNibHh1WEc0dkwxQnlhVzFoY25rZ2MzUjViR1ZjYmx4dVhHNWliMlI1WEc0Z0lDdHRaV1JwWVNoY0lqeGtaWE5yZEc5d1hDSXBYRzRnSUNBZ0x5OGdiR0Y1YjNWMElHMXBlR2x1Y3lCcGJuTnBaR1VnY0dGeWRHbGhiSE1nUGlCZmJHRjViM1YwTG5OamMzTmNiaUFnSUNBbUxtNWhkaTF2Ymkxc1pXWjBMbTkyWlhKbWJHOTNMV2hwWkdSbGJseHVJQ0FnSUNBZ2IzWmxjbVpzYjNjNklHaHBaR1JsYmx4dVhHNXBibkIxZEZ0MGVYQmxQVndpYzJWaGNtTm9YQ0pkT2pvdGJYTXRZMnhsWVhKY2JpQWdMeThnY21WdGIzWmxjeUJqYkc5elpTQnBZMjl1SUMwZ1NVVmNiaUFnWkdsemNHeGhlVG9nYm05dVpWeHVYRzVwYm5CMWRGdDBlWEJsUFZ3aWMyVmhjbU5vWENKZE9qb3RkMlZpYTJsMExYTmxZWEpqYUMxa1pXTnZjbUYwYVc5dUxGeHVhVzV3ZFhSYmRIbHdaVDFjSW5ObFlYSmphRndpWFRvNkxYZGxZbXRwZEMxelpXRnlZMmd0WTJGdVkyVnNMV0oxZEhSdmJpeGNibWx1Y0hWMFczUjVjR1U5WENKelpXRnlZMmhjSWwwNk9pMTNaV0pyYVhRdGMyVmhjbU5vTFhKbGMzVnNkSE10WW5WMGRHOXVMRnh1YVc1d2RYUmJkSGx3WlQxY0luTmxZWEpqYUZ3aVhUbzZMWGRsWW10cGRDMXpaV0Z5WTJndGNtVnpkV3gwY3kxa1pXTnZjbUYwYVc5dVhHNGdJR1JwYzNCc1lYazZJRzV2Ym1WY2JseHVMeW9nTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMWNiaUFxWEc0Z0trMWhhVzRnWTI5dGNHOXVaVzUwYzF4dUlDcGNiaUFxTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHFYRzVjYmk1alpDMXRZV2x1TFdOdmJuUmxiblFzWEc0dVkyUXRiV0ZwYmkxb1pXRmtaWEpjYmlBZ0x5b2dSbTl5WTJVZ1NHRnlaSGRoY21VZ1FXTmpaV3hsY21GMGFXOXVJR2x1SUZkbFlrdHBkRnh1SUNCMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpWb29NQ2xjYmlBZ2QybHNiQzFqYUdGdVoyVTZJSFJ5WVc1elptOXliVnh1WEc0Z0lIVnNYRzRnSUNBZ2JHbHpkQzF6ZEhsc1pUb2dibTl1WlZ4dVhHNHVZMlF0YldGcGJpMWpiMjUwWlc1MFhHNGdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVnh1SUNCMGNtRnVjMmwwYVc5dU9pQjBjbUZ1YzJadmNtMGdNQzR6YzF4dVhHNGdJQ3R0WldScFlTaGNJanhrWlhOcmRHOXdYQ0lwWEc0Z0lDQWdKaTV1WVhZdGFYTXRkbWx6YVdKc1pWeHVJQ0FnSUNBZ2RISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVllLQzBrYm1GMkxYZHBaSFJvTFZNcFhHNWNiaUFnSUNBdWJtRjJMVzl1TFd4bFpuUWdKaTV1WVhZdGFYTXRkbWx6YVdKc1pWeHVJQ0FnSUNBZ2RISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVllLQ1J1WVhZdGQybGtkR2d0VXlsY2JseHVMbU5rTFcxaGFXNHRhR1ZoWkdWeVhHNGdJR1p2Ym5RdFptRnRhV3g1T2lBa2MyVnlhV1pjYmlBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabFhHNGdJSFJ5WVc1emFYUnBiMjQ2SUhSeVlXNXpabTl5YlNBd0xqTnpYRzVjYmlBZ0syMWxaR2xoS0Z3aVBHUmxjMnQwYjNCY0lpbGNiaUFnSUNBbUxtNWhkaTFwY3kxMmFYTnBZbXhsWEc0Z0lDQWdJQ0F2TDNSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbFdDZ3RKRzVoZGkxM2FXUjBhQzFUS1Z4dUlDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWWUtEQXBYRzVjYmlBZ0lDQXVibUYyTFc5dUxXeGxablFnSmk1dVlYWXRhWE10ZG1semFXSnNaVnh1SUNBZ0lDQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1ZZS0NSdVlYWXRkMmxrZEdndFV5bGNibHh1TG1Oa0xXMWhhVzR0WTI5dWRHVnVkRnh1SUNBdkwwTklRVTVIUlVSY2JpQWdMeTlpWVdOclozSnZkVzVrT2lBa1kyeHZkV1JjYmlBZ2JXbHVMV2hsYVdkb2REb2dNVEF3ZG1oY2JpQWdlaTFwYm1SbGVEb2dKR052Ym5SbGJuUmNibHh1TG1Oa0xXMWhhVzR0YUdWaFpHVnlYRzRnSUdobGFXZG9kRG9nSkdobFlXUmxjaTFvWldsbmFIUXRVMXh1SUNCaVlXTnJaM0p2ZFc1a09pQWtkMmhwZEdWY2JpQWdlaTFwYm1SbGVEb2dKR0ZpYjNabExXTnZiblJsYm5SY2JseHVJQ0F2TDBOSVFVNUhSVVJjYmlBZ0x5OWliM2d0YzJoaFpHOTNPaUF3SURGd2VDQTFjSGdnY21kaVlTZ3hNREFzTVRBd0xERXdNQ3dnTGpVcFhHNGdJR0p2Y21SbGNpMWliM1IwYjIwNklERndlQ0J6YjJ4cFpDQWtZMnh2ZFdSY2JseHVJQ0F1Ym1GMkxXbHpMV1pwZUdWa0lDWmNiaUFnSUNBdktpQmhaR1FnTG01aGRpMXBjeTFtYVhobFpDQmpiR0Z6Y3lCMGJ5QmliMlI1SUdsbUlIbHZkU0IzWVc1MElHRWdabWw0WldRZ2JtRjJhV2RoZEdsdmJpQnZiaUErSURFd01qUndlRnh1SUNBZ0lIQnZjMmwwYVc5dU9pQm1hWGhsWkZ4dUlDQWdJSFJ2Y0RvZ01GeHVJQ0FnSUd4bFpuUTZJREJjYmlBZ0lDQjNhV1IwYURvZ01UQXdKVnh1WEc0Z0lDdHRaV1JwWVNoY0lqNWtaWE5yZEc5d1hDSXBYRzRnSUNBZ2FHVnBaMmgwT2lBa2FHVmhaR1Z5TFdobGFXZG9kQzFNWEc0Z0lDQWdLMk5zWldGeVptbDRYRzVjYmk1alpDMXNiMmR2WEc0Z0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpWeHVJQ0IwYjNBNklERXljSGhjYmlBZ2JHVm1kRG9nTlNWY2JseHVJQ0JwYldkY2JpQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amExeHVYRzRnSUN0dFpXUnBZU2hjSWp4a1pYTnJkRzl3WENJcFhHNGdJQ0FnTG01aGRpMXZiaTFzWldaMElDWmNiaUFnSUNBZ0lHeGxablE2SUdGMWRHOWNiaUFnSUNBZ0lISnBaMmgwT2lBMUpWeHVYRzRnSUN0dFpXUnBZU2hjSWo1a1pYTnJkRzl3WENJcFhHNGdJQ0FnZEc5d09pQXlObkI0WEc0Z0lDQWdiR1ZtZERvZ05HVnRYRzVjYmk1alpDMW9aV0ZrWlhJdFluVjBkRzl1YzF4dUlDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVmNiaUFnWkdsemNHeGhlVG9nYVc1c2FXNWxMV0pzYjJOclhHNGdJSFJ2Y0RvZ00zQjRYRzRnSUhKcFoyaDBPaUExSlZ4dVhHNGdJR3hwWEc0Z0lDQWdaR2x6Y0d4aGVUb2dhVzVzYVc1bExXSnNiMk5yWEc1Y2JpQWdLMjFsWkdsaEtGd2lQR1JsYzJ0MGIzQmNJaWxjYmlBZ0lDQXVibUYyTFc5dUxXeGxablFnSmx4dUlDQWdJQ0FnY21sbmFIUTZJR0YxZEc5Y2JpQWdJQ0FnSUd4bFpuUTZJRFVsWEc0Z0lDQWdJQ0JzYVZ4dUlDQWdJQ0FnSUNCbWJHOWhkRG9nY21sbmFIUmNibHh1SUNBcmJXVmthV0VvWENJK1pHVnphM1J2Y0Z3aUtWeHVJQ0FnSUhSdmNEb2dNWEpsYlZ4dUlDQWdJSEpwWjJoME9pQXhjbVZ0WEc1Y2JpNWpaQzF6WldGeVkyZ3RkSEpwWjJkbGNpeGNiaTVqWkMxdVlYWXRkSEpwWjJkbGNseHVJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVZjYmlBZ1pHbHpjR3hoZVRvZ1lteHZZMnRjYmlBZ2QybGtkR2c2SURRMGNIaGNiaUFnYUdWcFoyaDBPaUEwTkhCNFhHNGdJRzkyWlhKbWJHOTNPaUJvYVdSa1pXNWNiaUFnZDJocGRHVXRjM0JoWTJVNklHNXZkM0poY0Z4dUlDQXZLaUJvYVdSbElIUmxlSFJjYmlBZ1kyOXNiM0k2SUhSeVlXNXpjR0Z5Wlc1MFhHNGdJSG90YVc1a1pYZzZJQ1JoWW05MlpTMWpiMjUwWlc1MFhHNWNiaTVqWkMxelpXRnlZMmd0ZEhKcFoyZGxjbHh1SUNBbU9qcGlaV1p2Y21Vc0lDWTZPbUZtZEdWeVhHNGdJQ0FnTHlvZ2MyVmhjbU5vSUdsamIyNWNiaUFnSUNCamIyNTBaVzUwT2lBbkoxeHVJQ0FnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlZ4dUlDQWdJSFJ5WVc1emFYUnBiMjQ2SUc5d1lXTnBkSGtnTUM0emMxeHVJQ0FnSUM4cUlFWnZjbU5sSUVoaGNtUjNZWEpsSUVGalkyVnNaWEpoZEdsdmJpQnBiaUJYWldKTGFYUmNiaUFnSUNCMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpWb29NQ2xjYmlBZ0lDQmlZV05yWm1GalpTMTJhWE5wWW1sc2FYUjVPaUJvYVdSa1pXNWNibHh1SUNBbU9qcGlaV1p2Y21WY2JpQWdJQ0F2S2lCc1pXNXpYRzRnSUNBZ2RHOXdPaUF4TVhCNFhHNGdJQ0FnYkdWbWREb2dNVEZ3ZUZ4dUlDQWdJSGRwWkhSb09pQXhPSEI0WEc0Z0lDQWdhR1ZwWjJoME9pQXhPSEI0WEc0Z0lDQWdZbTl5WkdWeUxYSmhaR2wxY3pvZ05UQWxYRzRnSUNBZ1ltOXlaR1Z5T2lBemNIZ2djMjlzYVdRZ0pHNXBaMmgwWjNKbFpXNWNibHh1SUNBbU9qcGhablJsY2x4dUlDQWdJQzhxSUdoaGJtUnNaVnh1SUNBZ0lHaGxhV2RvZERvZ00zQjRYRzRnSUNBZ2QybGtkR2c2SURod2VGeHVJQ0FnSUdKaFkydG5jbTkxYm1RNklDUnVhV2RvZEdkeVpXVnVYRzRnSUNBZ1ltOTBkRzl0T2lBeE5IQjRYRzRnSUNBZ2NtbG5hSFE2SURFeGNIaGNiaUFnSUNCMGNtRnVjMlp2Y20wNklISnZkR0YwWlNnME5XUmxaeWxjYmlBZ2MzQmhibHh1SUNBZ0lDOHFJR052Ym5SaGFXNWxjaUJtYjNJZ2RHaGxJRmdnYVdOdmJseHVJQ0FnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlZ4dUlDQWdJR2hsYVdkb2REb2dNVEF3SlZ4dUlDQWdJSGRwWkhSb09pQXhNREFsWEc0Z0lDQWdkRzl3T2lBd1hHNGdJQ0FnYkdWbWREb2dNRnh1SUNCemNHRnVPanBpWldadmNtVXNJSE53WVc0Nk9tRm1kR1Z5WEc0Z0lDQWdMeW9nWTJ4dmMyVWdhV052Ymx4dUlDQWdJR052Ym5SbGJuUTZJQ2NuWEc0Z0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxYRzRnSUNBZ1pHbHpjR3hoZVRvZ2FXNXNhVzVsTFdKc2IyTnJYRzRnSUNBZ2FHVnBaMmgwT2lBemNIaGNiaUFnSUNCM2FXUjBhRG9nTWpKd2VGeHVJQ0FnSUhSdmNEb2dOVEFsWEc0Z0lDQWdiV0Z5WjJsdUxYUnZjRG9nTFRKd2VGeHVJQ0FnSUd4bFpuUTZJRFV3SlZ4dUlDQWdJRzFoY21kcGJpMXNaV1owT2lBdE1URndlRnh1SUNBZ0lHSmhZMnRuY205MWJtUTZJQ1J1YVdkb2RHZHlaV1Z1WEc0Z0lDQWdiM0JoWTJsMGVUb2dNRnh1SUNBZ0lDOHFJRVp2Y21ObElFaGhjbVIzWVhKbElFRmpZMlZzWlhKaGRHbHZiaUJwYmlCWFpXSkxhWFJjYmlBZ0lDQjBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaVm9vTUNsY2JpQWdJQ0JpWVdOclptRmpaUzEyYVhOcFltbHNhWFI1T2lCb2FXUmtaVzVjYmlBZ0lDQjBjbUZ1YzJsMGFXOXVPaUJ2Y0dGamFYUjVJREF1TTNNc0lIUnlZVzV6Wm05eWJTQXdMak56WEc1Y2JpQWdjM0JoYmpvNlltVm1iM0psWEc0Z0lDQWdkSEpoYm5ObWIzSnRPaUJ5YjNSaGRHVW9ORFZrWldjcFhHNWNiaUFnYzNCaGJqbzZZV1owWlhKY2JpQWdJQ0IwY21GdWMyWnZjbTA2SUhKdmRHRjBaU2d0TkRWa1pXY3BYRzVjYmlBZ0ppNXpaV0Z5WTJndGFYTXRkbWx6YVdKc1pWeHVJQ0FnSUNZNk9tSmxabTl5WlN3Z0pqbzZZV1owWlhKY2JpQWdJQ0FnSUM4cUlHaHBaR1VnYzJWaGNtTm9JR2xqYjI1Y2JpQWdJQ0FnSUc5d1lXTnBkSGs2SURCY2JpQWdJQ0J6Y0dGdU9qcGlaV1p2Y21Vc0lITndZVzQ2T21GbWRHVnlYRzRnSUNBZ0lDQXZLaUJ6YUc5M0lHTnNiM05sSUdsamIyNWNiaUFnSUNBZ0lHOXdZV05wZEhrNklERmNiaUFnSUNCemNHRnVPanBpWldadmNtVmNiaUFnSUNBZ0lIUnlZVzV6Wm05eWJUb2djbTkwWVhSbEtERXpOV1JsWnlsY2JpQWdJQ0J6Y0dGdU9qcGhablJsY2x4dUlDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCeWIzUmhkR1VvTkRWa1pXY3BYRzVjYmk1alpDMXVZWFl0ZEhKcFoyZGxjbHh1SUNBbU9taHZkbVZ5WEc0Z0lDQWdMeTlJYVdSbElDZE5aVzUxSnlCM2IzSmtJR1p2Y2lCaFkyTmxjM05wWW1sc2FYUjVJRWtnYUc5d1pWeHVJQ0FnSUdOdmJHOXlPaUIwY21GdWMzQmhjbVZ1ZEZ4dUlDQnpjR0Z1TENCemNHRnVPanBpWldadmNtVXNJSE53WVc0Nk9tRm1kR1Z5WEc0Z0lDQWdMeW9nYUdGdFluVnlaMlZ5SUdsamIyNGdhVzRnUTFOVFhHNGdJQ0FnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsWEc0Z0lDQWdaR2x6Y0d4aGVUb2dhVzVzYVc1bExXSnNiMk5yWEc0Z0lDQWdhR1ZwWjJoME9pQXpjSGhjYmlBZ0lDQjNhV1IwYURvZ01qUndlRnh1SUNBZ0lHSmhZMnRuY205MWJtUTZJQ1J1YVdkb2RHZHlaV1Z1WEc0Z0lITndZVzVjYmlBZ0lDQXZLaUJzYVc1bElHbHVJSFJvWlNCalpXNTBaWEpjYmlBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVmNiaUFnSUNCMGIzQTZJRFV3SlZ4dUlDQWdJSEpwWjJoME9pQXhNSEI0WEc0Z0lDQWdiV0Z5WjJsdUxYUnZjRG9nTFRKd2VGeHVJQ0FnSUhSeVlXNXphWFJwYjI0NklHSmhZMnRuY205MWJtUWdNQzR6Y3lBd0xqTnpYRzRnSUhOd1lXNDZPbUpsWm05eVpTd2djM0JoYmpvNllXWjBaWEpjYmlBZ0lDQXZLaUJ2ZEdobGNpQXlJR3hwYm1WelhHNGdJQ0FnWTI5dWRHVnVkRG9nSnlkY2JpQWdJQ0J5YVdkb2REb2dNRnh1SUNBZ0lDOHFJRVp2Y21ObElFaGhjbVIzWVhKbElFRmpZMlZzWlhKaGRHbHZiaUJwYmlCWFpXSkxhWFJjYmlBZ0lDQjBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaVm9vTUNsY2JpQWdJQ0JpWVdOclptRmpaUzEyYVhOcFltbHNhWFI1T2lCb2FXUmtaVzVjYmlBZ0lDQjBjbUZ1YzJadmNtMHRiM0pwWjJsdU9pQXdKU0ExTUNWY2JpQWdJQ0IwY21GdWMybDBhVzl1T2lCMGNtRnVjMlp2Y20wZ01DNHpjeUF3TGpOelhHNGdJSE53WVc0Nk9tSmxabTl5WlZ4dUlDQWdJQzhxSUcxbGJuVWdhV052YmlCMGIzQWdiR2x1WlZ4dUlDQWdJSFJ2Y0RvZ0xUWndlRnh1SUNCemNHRnVPanBoWm5SbGNseHVJQ0FnSUM4cUlHMWxiblVnYVdOdmJpQmliM1IwYjIwZ2JHbHVaVnh1SUNBZ0lIUnZjRG9nTm5CNFhHNGdJQ1l1Ym1GMkxXbHpMWFpwYzJsaWJHVmNiaUFnSUNCemNHRnVYRzRnSUNBZ0lDQXZLaUJvYVdSbElHeHBibVVnYVc0Z2RHaGxJR05sYm5SbGNseHVJQ0FnSUNBZ1ltRmphMmR5YjNWdVpEb2djbWRpWVNna2JtbG5hSFJuY21WbGJpd2dNQ2xjYmlBZ0lDQnpjR0Z1T2pwaVpXWnZjbVVzSUhOd1lXNDZPbUZtZEdWeVhHNGdJQ0FnSUNBdktpQnJaV1Z3SUhacGMybGliR1VnYjNSb1pYSWdNaUJzYVc1bGMxeHVJQ0FnSUNBZ1ltRmphMmR5YjNWdVpEb2djbWRpWVNna2JtbG5hSFJuY21WbGJpd2dNU2xjYmlBZ0lDQnpjR0Z1T2pwaVpXWnZjbVZjYmlBZ0lDQWdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsV0NnMGNIZ3BJSFJ5WVc1emJHRjBaVmtvTFROd2VDa2djbTkwWVhSbEtEUTFaR1ZuS1Z4dUlDQWdJSE53WVc0Nk9tRm1kR1Z5WEc0Z0lDQWdJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlZnb05IQjRLU0IwY21GdWMyeGhkR1ZaS0RKd2VDa2djbTkwWVhSbEtDMDBOV1JsWnlsY2JpQWdLMjFsWkdsaEtGd2lQbVJsYzJ0MGIzQmNJaWxjYmlBZ0lDQmthWE53YkdGNU9pQnViMjVsWEc1Y2JseHVMbU5rTFhCeWFXMWhjbmt0Ym1GMlhHNGdJSEpwWjJoME9pQXdYRzVjYmk4dlVtbG5hSFFnWVd4cFoyNXBibWNnZEdobElHMWxiblVnYldWaGJuTWdkMlVnYUdGMlpTQjBieUJpZFcxd0lIUm9aU0JrY205d1pHOTNiaUJpWVdOcklHOTJaWElnZEc4Z2JHbHVaU0IxY0Z4dUxtTmtMWEJ5YVcxaGNua3RibUYySUhWc1hHNGdJSEpwWjJoME9pQXlNSEI0WEc1Y2JpNWpaQzF3Y21sdFlYSjVMVzVoZGl4Y2JpNWpaQzF3Y21sdFlYSjVMVzVoZGlCMWJGeHVJQ0J3YjNOcGRHbHZiam9nWm1sNFpXUmNiaUFnZEc5d09pQXdYRzRnSUM4dmNtbG5hSFE2SURCY2JpQWdhR1ZwWjJoME9pQXhNREFsWEc0Z0lIZHBaSFJvT2lBa2JtRjJMWGRwWkhSb0xWTmNiaUFnWW1GamEyZHliM1Z1WkRvZ0pHNXBaMmgwWjNKbFpXNWNiaUFnYjNabGNtWnNiM2M2SUdGMWRHOWNiaUFnTFhkbFltdHBkQzF2ZG1WeVpteHZkeTF6WTNKdmJHeHBibWM2SUhSdmRXTm9YRzRnSUhvdGFXNWtaWGc2SUNSaVpXeHZkeTFqYjI1MFpXNTBYRzVjYmlBZ0x5b2dSbTl5WTJVZ1NHRnlaSGRoY21VZ1FXTmpaV3hsY21GMGFXOXVJR2x1SUZkbFlrdHBkRnh1SUNCMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpWb29NQ2xjYmlBZ2RISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVllLREFwWEc0Z0lIUnlZVzV6YVhScGIyNDZJSFJ5WVc1elptOXliU0F3TGpOelhHNWNiaUFnWVZ4dUlDQWdJR1JwYzNCc1lYazZJR0pzYjJOclhHNGdJQ0FnWm05dWRDMXphWHBsT2lBeExqSnlaVzFjYmlBZ0lDQm9aV2xuYUhRNklEVXdjSGhjYmlBZ0lDQnNhVzVsTFdobGFXZG9kRG9nTlRCd2VGeHVJQ0FnSUhCaFpHUnBibWM2SURBZ01qQndlRnh1SUNBZ0lHTnZiRzl5T2lBa2QyaHBkR1ZjYmlBZ0lDQXRkMlZpYTJsMExXWnZiblF0YzIxdmIzUm9hVzVuT2lCaGJuUnBZV3hwWVhObFpGeHVJQ0FnSUMxdGIzb3RiM040TFdadmJuUXRjMjF2YjNSb2FXNW5PaUJuY21GNWMyTmhiR1ZjYmlBZ0lDQnZkbVZ5Wm14dmR6b2dhR2xrWkdWdVhHNGdJQ0FnZEdWNGRDMXZkbVZ5Wm14dmR6b2daV3hzYVhCemFYTmNiaUFnSUNCM2FHbDBaUzF6Y0dGalpUb2dibTkzY21Gd1hHNGdJQ0FnWW05eVpHVnlMV0p2ZEhSdmJUb2dNWEI0SUhOdmJHbGtJR3hwWjJoMFpXNG9KRzVwWjJoMFozSmxaVzRzSURVbEtWeHVJQ0FnSUhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbFdpZ3dLVnh1SUNBZ0lIZHBiR3d0WTJoaGJtZGxPaUIwY21GdWMyWnZjbTBzSUc5d1lXTnBkSGxjYmlBZ0lDQjBjbUZ1YzJsMGFXOXVPaUIwY21GdWMyWnZjbTBnTUM0emN5d2diM0JoWTJsMGVTQXdMak56WEc1Y2JpQWdKaTVwY3kxb2FXUmtaVzVjYmlBZ0lDQXZLaUJ6WldOdmJtUmhjbmtnYm1GMmFXZGhkR2x2Ym5NZ2FHbGtaR1Z1SUdKNUlHUmxabUYxYkhSY2JpQWdJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlZnb01UQXdKU2xjYmx4dUlDQW1MbTF2ZG1WekxXOTFkQ0ErSUd4cElENGdZVnh1SUNBZ0lDOHFJSEIxYzJnZ2RHaGxJRzVoZG1sbllYUnBiMjRnYVhSbGJYTWdkRzhnZEdobElHeGxablFnTFNCaGJtUWdiRzkzWlhJZ1pHOTNiaUJ2Y0dGamFYUjVJQzBnZDJobGJpQnpaV052Ym1SaGNua2dibUYySUhOc2FXUmxjeUJwYmx4dUlDQWdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsV0NndE1UQXdKU2xjYmlBZ0lDQnZjR0ZqYVhSNU9pQXdYRzVjYml0dFpXUnBZU2hjSWp4a1pYTnJkRzl3WENJcFhHNGdJQzV1WVhZdGIyNHRiR1ZtZENBdVkyUXRjSEpwYldGeWVTMXVZWFlzWEc0Z0lDNXVZWFl0YjI0dGJHVm1kQ0F1WTJRdGNISnBiV0Z5ZVMxdVlYWWdkV3hjYmlBZ0lDQnlhV2RvZERvZ1lYVjBiMXh1SUNBZ0lHeGxablE2SURCY2JseHVYRzR1WTJRdGNISnBiV0Z5ZVMxdVlYWmNiaUFnTG5ObFpTMWhiR3dnWVZ4dUlDQWdJQzhxSUdScFptWmxjbVZ1ZENCemRIbHNaU0JtYjNJZ2RHaGxJRk5sWlNCaGJHd2dZblYwZEc5dUlHOXVJRzF2WW1sc1pTQmhibVFnZEdGaWJHVjBYRzRnSUNBZ1kyOXNiM0k2SUNSbmNtVmxibHh1WEc0Z0lDNWpaQzF1WVhZdFoyRnNiR1Z5ZVNBdVkyUXRibUYyTFdsMFpXMHNYRzRnSUM1alpDMXVZWFl0YVdOdmJuTWdMbU5rTFc1aGRpMXBkR1Z0WEc0Z0lDQWdMeW9nYVhSbGJYTWdkMmwwYUNCd2FXTjBkWEpsSUNodmNpQnBZMjl1S1NCaGJtUWdkR2wwYkdWY2JpQWdJQ0JvWldsbmFIUTZJRGd3Y0hoY2JpQWdJQ0JzYVc1bExXaGxhV2RvZERvZ09EQndlRnh1WEc0Z0lDQWdhRE5jYmlBZ0lDQWdJRzkyWlhKbWJHOTNPaUJvYVdSa1pXNWNiaUFnSUNBZ0lIUmxlSFF0YjNabGNtWnNiM2M2SUdWc2JHbHdjMmx6WEc1Y2JpQWdMbU5rTFc1aGRpMW5ZV3hzWlhKNUlDNWpaQzF1WVhZdGFYUmxiVnh1SUNBZ0lDOHZjR0ZrWkdsdVp5MXNaV1owT2lBNU1IQjRYRzVjYmlBZ0lDQnBiV2RjYmlBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVnh1SUNBZ0lDQWdaR2x6Y0d4aGVUb2dZbXh2WTJ0Y2JpQWdJQ0FnSUdobGFXZG9kRG9nTkRCd2VGeHVJQ0FnSUNBZ2QybGtkR2c2SUdGMWRHOWNiaUFnSUNBZ0lHeGxablE2SURJd2NIaGNiaUFnSUNBZ0lIUnZjRG9nTlRBbFhHNGdJQ0FnSUNCdFlYSm5hVzR0ZEc5d09pQXRNakJ3ZUZ4dVhHNGdJQ0FnSUNBcmJXVmthV0VvWENJOFpHVnphM1J2Y0Z3aUtWeHVJQ0FnSUNBZ0lDQmthWE53YkdGNU9pQnViMjVsWEc1Y2JpQWdMbU5rTFc1aGRpMXBZMjl1Y3lBdVkyUXRibUYyTFdsMFpXMWNiaUFnSUNCd1lXUmthVzVuTFd4bFpuUTZJRGMxY0hoY2JseHVJQ0FnSUhCY2JpQWdJQ0FnSUdOdmJHOXlPaUFrYm1sbmFIUm5jbVZsYmx4dUlDQWdJQ0FnWm05dWRDMXphWHBsT2lBeExqTnlaVzFjYmlBZ0lDQWdJQzhxSUdocFpHVWdaR1Z6WTNKcGNIUnBiMjRnYjI0Z2MyMWhiR3dnWkdWMmFXTmxjMXh1SUNBZ0lDQWdaR2x6Y0d4aGVUb2dibTl1WlZ4dVhHNGdJQ0FnSmpvNlltVm1iM0psWEc0Z0lDQWdJQ0F2S2lCcGRHVnRJR2xqYjI1Y2JpQWdJQ0FnSUdOdmJuUmxiblE2SUNjblhHNGdJQ0FnSUNCa2FYTndiR0Y1T2lCaWJHOWphMXh1SUNBZ0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxYRzRnSUNBZ0lDQnNaV1owT2lBeU1IQjRYRzRnSUNBZ0lDQjBiM0E2SURVd0pWeHVJQ0FnSUNBZ2JXRnlaMmx1TFhSdmNEb2dMVEl3Y0hoY2JpQWdJQ0FnSUhkcFpIUm9PaUEwTUhCNFhHNGdJQ0FnSUNCb1pXbG5hSFE2SURRd2NIaGNiaUFnSUNBZ0lHSmhZMnRuY205MWJtUXRjbVZ3WldGME9pQnVieTF5WlhCbFlYUmNiaUFnSUNBZ0lHSmhZMnRuY205MWJtUXRjRzl6YVhScGIyNDZJR05sYm5SbGNpQmpaVzUwWlhKY2JpQWdJQ0FnSUdKaFkydG5jbTkxYm1RdGMybDZaVG9nTkRCd2VDQTBNSEI0WEc1Y2JpQWdJQ0FtTG1sMFpXMHRNVG82WW1WbWIzSmxYRzRnSUNBZ0lDQmlZV05yWjNKdmRXNWtMV2x0WVdkbE9pQjFjbXdvWENJdmFXMWhaMlZ6TDJ4cGJtVXRhV052YmkweExuTjJaMXdpS1Z4dUlDQWdJQ1l1YVhSbGJTMHlPanBpWldadmNtVmNiaUFnSUNBZ0lHSmhZMnRuY205MWJtUXRhVzFoWjJVNklIVnliQ2hjSWk5cGJXRm5aWE12YkdsdVpTMXBZMjl1TFRJdWMzWm5YQ0lwWEc0Z0lDQWdKaTVwZEdWdExUTTZPbUpsWm05eVpWeHVJQ0FnSUNBZ1ltRmphMmR5YjNWdVpDMXBiV0ZuWlRvZ2RYSnNLRndpTDJsdFlXZGxjeTlzYVc1bExXbGpiMjR0TXk1emRtZGNJaWxjYmlBZ0lDQW1MbWwwWlcwdE5EbzZZbVZtYjNKbFhHNGdJQ0FnSUNCaVlXTnJaM0p2ZFc1a0xXbHRZV2RsT2lCMWNtd29YQ0l2YVcxaFoyVnpMMnhwYm1VdGFXTnZiaTAwTG5OMloxd2lLVnh1SUNBZ0lDWXVhWFJsYlMwMU9qcGlaV1p2Y21WY2JpQWdJQ0FnSUdKaFkydG5jbTkxYm1RdGFXMWhaMlU2SUhWeWJDaGNJaTlwYldGblpYTXZiR2x1WlMxcFkyOXVMVFV1YzNablhDSXBYRzRnSUNBZ0ppNXBkR1Z0TFRZNk9tSmxabTl5WlZ4dUlDQWdJQ0FnWW1GamEyZHliM1Z1WkMxcGJXRm5aVG9nZFhKc0tGd2lMMmx0WVdkbGN5OXNhVzVsTFdsamIyNHROaTV6ZG1kY0lpbGNiaUFnSUNBbUxtbDBaVzB0TnpvNlltVm1iM0psWEc0Z0lDQWdJQ0JpWVdOclozSnZkVzVrTFdsdFlXZGxPaUIxY213b1hDSXZhVzFoWjJWekwyeHBibVV0YVdOdmJpMDNMbk4yWjF3aUtWeHVJQ0FnSUNZdWFYUmxiUzA0T2pwaVpXWnZjbVZjYmlBZ0lDQWdJR0poWTJ0bmNtOTFibVF0YVcxaFoyVTZJSFZ5YkNoY0lpOXBiV0ZuWlhNdmJHbHVaUzFwWTI5dUxUZ3VjM1puWENJcFhHNWNiaUFnSzIxbFpHbGhLRndpUEdSbGMydDBiM0JjSWlsY2JpQWdJQ0F2S2lCaWVTQmtaV1poZFd4MElDNWpaQzF3Y21sdFlYSjVMVzVoZGlCcGN5Qm9hV1JrWlc0Z0xTQjBjbWxqYXlCbWIzSWdhVTlUSUdSbGRtbGpaWE1nZDJobGNtVWdlVzkxSUdOaGJpQnpaV1VnZEdobElHNWhkbWxuWVhScGIyNGdhV1lnZVc5MUlIQjFiR3dnWkc5M2JseHVJQ0FnSUhacGMybGlhV3hwZEhrNklHaHBaR1JsYmx4dUlDQWdJSFJ5WVc1emFYUnBiMjQ2SUhacGMybGlhV3hwZEhrZ01ITWdNQzR6YzF4dUlDQWdJQ1l1Ym1GMkxXbHpMWFpwYzJsaWJHVmNiaUFnSUNBZ0lIWnBjMmxpYVd4cGRIazZJSFpwYzJsaWJHVmNiaUFnSUNBZ0lIUnlZVzV6YVhScGIyNDZJSFpwYzJsaWFXeHBkSGtnTUhNZ01ITmNibHh1SzIxbFpHbGhLRndpUG1SbGMydDBiM0JjSWlsY2JseHVJQ0F1WTJRdGNISnBiV0Z5ZVMxdVlYWmNiaUFnSUNCd2IzTnBkR2x2YmpvZ2MzUmhkR2xqWEc0Z0lDQWdjR0ZrWkdsdVp6b2dNQ0ExTUhCNElEQWdNRnh1SUNBZ0lHMWhjbWRwYmkxc1pXWjBPaUF5TUhCNFhHNGdJQ0FnYUdWcFoyaDBPaUJoZFhSdlhHNGdJQ0FnZDJsa2RHZzZJREV3TUNWY2JpQWdJQ0F2TDJac2IyRjBPaUJ5YVdkb2RGeHVJQ0FnSUc5MlpYSm1iRzkzT2lCMmFYTnBZbXhsWEc0Z0lDQWdZbUZqYTJkeWIzVnVaRG9nZEhKaGJuTndZWEpsYm5SY2JpQWdJQ0F2TDNSbGVIUXRZV3hwWjI0NklHTmxiblJsY2x4dVhHNGdJQ0FnSzJOc1pXRnlabWw0WEc1Y2JpQWdJQ0FtTG0xdmRtVnpMVzkxZENBK0lHeHBJRDRnWVZ4dUlDQWdJQ0FnTHlvZ2NtVnpaWFFnYlc5aWFXeGxJSE4wZVd4bFhHNGdJQ0FnSUNCMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpWZ29NQ2xjYmlBZ0lDQWdJRzl3WVdOcGRIazZJREZjYmx4dUlDQWdJSFZzWEc0Z0lDQWdJQ0J3YjNOcGRHbHZiam9nYzNSaGRHbGpYRzRnSUNBZ0lDQm9aV2xuYUhRNklHRjFkRzljYmlBZ0lDQWdJSGRwWkhSb09pQmhkWFJ2WEc0Z0lDQWdJQ0JpWVdOclozSnZkVzVrT2lCMGNtRnVjM0JoY21WdWRGeHVJQ0FnSUNBZ2IzWmxjbVpzYjNjNklIWnBjMmxpYkdWY2JpQWdJQ0FnSUhSbGVIUXRZV3hwWjI0NklHeGxablJjYmlBZ0lDQWdJSG90YVc1a1pYZzZJQ1JoWW05MlpTMWpiMjUwWlc1MFhHNWNiaUFnSUNBZ0lDWXVhWE10YUdsa1pHVnVYRzRnSUNBZ0lDQWdJQzhxSUhKbGMyVjBJRzF2WW1sc1pTQnpkSGxzWlZ4dUlDQWdJQ0FnSUNCMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpWZ29NQ2xjYmx4dUlDQWdJQ0FnSmk1dGIzWmxjeTF2ZFhRZ1BpQnNhU0ErSUdGY2JpQWdJQ0FnSUNBZ0x5b2djbVZ6WlhRZ2JXOWlhV3hsSUhOMGVXeGxYRzRnSUNBZ0lDQWdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsV0Nnd0tWeHVJQ0FnSUNBZ0lDQnZjR0ZqYVhSNU9pQXhYRzVjYmlBZ0lDQXZMMVJ2Y0NCdVlYWWdhWFJsYlhOY2JpQWdJQ0ErSUd4cFhHNGdJQ0FnSUNCa2FYTndiR0Y1T2lCcGJteHBibVV0WW14dlkydGNiaUFnSUNBZ0lDOHZabXh2WVhRNklHeGxablJjYmlBZ0lDQWdJRzFoY21kcGJpMXNaV1owT2lBdU5YSmxiVnh1WEc0Z0lDQWdQaUJzYVNBK0lHRmNiaUFnSUNBZ0lDOHFJRzFoYVc0Z2JtRjJhV2RoZEdsdmJpQmlkWFIwYjI1eklITjBlV3hsWEc0Z0lDQWdJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVZjYmlBZ0lDQWdJR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYTF4dUlDQWdJQ0FnYUdWcFoyaDBPaUFrYUdWaFpHVnlMV2hsYVdkb2RDMU1YRzRnSUNBZ0lDQnNhVzVsTFdobGFXZG9kRG9nSkdobFlXUmxjaTFvWldsbmFIUXRURnh1SUNBZ0lDQWdjR0ZrWkdsdVp6b2dNRnh1SUNBZ0lDQWdZMjlzYjNJNklDUnVhV2RvZEdkeVpXVnVYRzRnSUNBZ0lDQnZkbVZ5Wm14dmR6b2dkbWx6YVdKc1pWeHVJQ0FnSUNBZ1ltOXlaR1Z5TFdKdmRIUnZiVG9nYm05dVpWeHVJQ0FnSUNBZ2RISmhibk5wZEdsdmJqb2dZMjlzYjNJZ01DNHpjeXdnWW05NExYTm9ZV1J2ZHlBd0xqTnpYRzVjYmlBZ0lDQWdJQ1k2YUc5MlpYSmNiaUFnSUNBZ0lDQWdZMjlzYjNJNklDUm5jbVZsYmx4dUlDQWdJQ0FnSUNCMFpYaDBMV1JsWTI5eVlYUnBiMjQ2SUc1dmJtVmNiaUFnSUNBZ0lDWXVjMlZzWldOMFpXUmNiaUFnSUNBZ0lDQWdZMjlzYjNJNklDUm5jbVZsYmx4dUlDQWdJQ0FnSUNCaWIzZ3RjMmhoWkc5M09pQnBibk5sZENBd0lDMHljSGdnTUNBa1ozSmxaVzVjYmx4dUlDQWdJQzVuYnkxaVlXTnJMQ0F1YzJWbExXRnNiRnh1SUNBZ0lDQWdaR2x6Y0d4aGVUb2dibTl1WlZ4dVhHNGdJQ0FnTG1Oa0xYTmxZMjl1WkdGeWVTMXVZWFlzWEc0Z0lDQWdMbU5rTFc1aGRpMW5ZV3hzWlhKNUxGeHVJQ0FnSUM1alpDMXVZWFl0YVdOdmJuTmNiaUFnSUNBZ0lDOHFJR1J5YjNCa2IzZHVJRzFsYm5VZ2MzUjViR1ZjYmlBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVnh1SUNBZ0lDQWdkRzl3T2lBa2FHVmhaR1Z5TFdobGFXZG9kQzFNWEc0Z0lDQWdJQ0F2TDNkcFpIUm9PaUF4TURCMmQxeHVJQ0FnSUNBZ2QybGtkR2c2SURFd01DVmNiaUFnSUNBZ0lHSmhZMnRuY205MWJtUTZJQ1IzYUdsMFpWeHVJQ0FnSUNBZ0x5OURTRUZPUjBWRVhHNGdJQ0FnSUNBdkwzQmhaR1JwYm1jNklEUTRjSGdnTmpSd2VDQXhNekJ3ZUZ4dUlDQWdJQ0FnY0dGa1pHbHVaem9nTW5KbGJWeHVJQ0FnSUNBZ1ltOTRMWE5vWVdSdmR6b2dhVzV6WlhRZ01DQXhjSGdnTUNBa1kyeHZkV1FzSURBZ00zQjRJRFp3ZUNCeVoySmhLQ013TURBc0lEQXVNRFVwWEc0Z0lDQWdJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlZnb01DbGNiaUFnSUNBZ0lDdGpiR1ZoY21acGVGeHVYRzRnSUNBZ0lDQjBjbUZ1YzJsMGFXOXVPaUJ2Y0dGamFYUjVJQzR6Y3lBd2N5d2dkbWx6YVdKcGJHbDBlU0F3Y3lBd2MxeHVYRzRnSUNBZ0lDQW1MbWx6TFdocFpHUmxibHh1SUNBZ0lDQWdJQ0J2Y0dGamFYUjVPaUF3WEc0Z0lDQWdJQ0FnSUhacGMybGlhV3hwZEhrNklHaHBaR1JsYmx4dUlDQWdJQ0FnSUNCMGNtRnVjMmwwYVc5dU9pQnZjR0ZqYVhSNUlDNHpjeUF3Y3l3Z2RtbHphV0pwYkdsMGVTQXdjeUF1TTNOY2JseHVJQ0FnSUNBZ1BpQXVjMlZsTFdGc2JGeHVJQ0FnSUNBZ0lDQXZLaUIwYUdseklHbHpJSFJvWlNCQ1NVY2dVMlZsSUdGc2JDQmlkWFIwYjI0Z1lYUWdkR2hsSUdKdmRIUnZiU0J2WmlCMGFHVWdaSEp2Y0dSdmQyNGdiV1Z1ZFZ4dUlDQWdJQ0FnSUNCa2FYTndiR0Y1T2lCaWJHOWphMXh1SUNBZ0lDQWdJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1ZjYmlBZ0lDQWdJQ0FnYkdWbWREb2dNRnh1SUNBZ0lDQWdJQ0JpYjNSMGIyMDZJREJjYmlBZ0lDQWdJQ0FnYUdWcFoyaDBPaUE0TUhCNFhHNGdJQ0FnSUNBZ0lIZHBaSFJvT2lBeE1EQWxYRzRnSUNBZ0lDQWdJRzkyWlhKbWJHOTNPaUJvYVdSa1pXNWNiaUFnSUNBZ0lDQWdMeW9nY21WelpYUWdjMjl0WlNCcGJtaGxjbWwwWldRZ2MzUjViR1ZjYmlBZ0lDQWdJQ0FnYldGeVoybHVPaUF3WEc0Z0lDQWdJQ0FnSUhCaFpHUnBibWM2SURCY2JseHVJQ0FnSUNBZ0lDQmhYRzRnSUNBZ0lDQWdJQ0FnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsWEc0Z0lDQWdJQ0FnSUNBZ2QybGtkR2c2SURFd01DVmNiaUFnSUNBZ0lDQWdJQ0JvWldsbmFIUTZJREV3TUNWY2JpQWdJQ0FnSUNBZ0lDQjBiM0E2SURCY2JpQWdJQ0FnSUNBZ0lDQnNaV1owT2lBd1hHNGdJQ0FnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF5TGpKeVpXMWNiaUFnSUNBZ0lDQWdJQ0JtYjI1MExYZGxhV2RvZERvZ1ltOXNaRnh1SUNBZ0lDQWdJQ0FnSUhSbGVIUXRZV3hwWjI0NklHTmxiblJsY2x4dUlDQWdJQ0FnSUNBZ0lHeHBibVV0YUdWcFoyaDBPaUE0TUhCNFhHNGdJQ0FnSUNBZ0lDQWdZbTl5WkdWeUxYUnZjRG9nTVhCNElITnZiR2xrSUNSamJHOTFaRnh1SUNBZ0lDQWdJQ0FnSUM4cUlISmxjMlYwSUhOdmJXVWdhVzVvWlhKcGRHVmtJSE4wZVd4bFhHNGdJQ0FnSUNBZ0lDQWdZbTl5WkdWeUxXSnZkSFJ2YlRvZ2JtOXVaVnh1SUNBZ0lDQWdJQ0FnSUcxaGNtZHBiam9nTUZ4dUlDQWdJQ0FnSUNBZ0lIQmhaR1JwYm1jNklEQmNiaUFnSUNBZ0lDQWdJQ0IwY21GdWMybDBhVzl1T2lCamIyeHZjaUF3TGpKekxDQmlZV05yWjNKdmRXNWtJREF1TW5Nc0lHSnZjbVJsY2lBd0xqSnpYRzVjYmlBZ0lDQWdJQ0FnSUNBbU9taHZkbVZ5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmlZV05yWjNKdmRXNWtPaUFrYm1sbmFIUm5jbVZsYmx4dUlDQWdJQ0FnSUNBZ0lDQWdZbTl5WkdWeUxXTnZiRzl5T2lBa2JtbG5hSFJuY21WbGJseHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5c2IzSTZJQ1IzYUdsMFpWeHVYRzRnSUNBZ0xtTmtMWE5sWTI5dVpHRnllUzF1WVhaY2JseHVJQ0FnSUNBZ1BpQnNhVnh1SUNBZ0lDQWdJQ0F2S2lCamFHRnVaMlVnZEdobElHaGxhV2RvZENCaFkyTnZjbVJwYm1jZ2RHOGdlVzkxY2lCdVpXVmtjeUF0SUhsdmRTQmpZVzRnWlhabGJpQnpaWFFnYUdWcFoyaDBPaUJoZFhSdlhHNGdJQ0FnSUNBZ0lHaGxhV2RvZERvZ016UXdjSGhjYmlBZ0lDQWdJQ0FnTHlvZ2FHVnlaU0I1YjNVZ2MyVjBJSFJvWlNCdWRXMWlaWElnYjJZZ1kyOXNkVzF1Y3lBdElIVnpaU0IzYVdSMGFDQndaWEpqWlc1MFlXZGxYRzRnSUNBZ0lDQWdJQ3RqYjJ4MWJXNG9NQzR5TXlsY2JpQWdJQ0FnSUNBZ0x5OGdjMlZsSUhCaGNuUnBZV3h6SUQ0Z1gyeGhlVzkxZEM1elkzTnpYRzRnSUNBZ0lDQWdJRzFoY21kcGJpMXlhV2RvZERvZ01pNDJOaVZjYmlBZ0lDQWdJQ0FnWW05eVpHVnlMWEpwWjJoME9pQXhjSGdnYzI5c2FXUWdKR05zYjNWa1hHNGdJQ0FnSUNBZ0lHOTJaWEptYkc5M09pQm9hV1JrWlc1Y2JpQWdJQ0FnSUNBZ2IzWmxjbVpzYjNjdGVEb2dhR2xrWkdWdVhHNGdJQ0FnSUNBZ0lHOTJaWEptYkc5M0xYazZJR0YxZEc5Y2JpQWdJQ0FnSUNBZ0xYZGxZbXRwZEMxdmRtVnlabXh2ZHkxelkzSnZiR3hwYm1jNklIUnZkV05vWEc1Y2JpQWdJQ0FnSUNBZ0pqcHVkR2d0WTJocGJHUW9ORzRyTWlsY2JpQWdJQ0FnSUNBZ0lDQXZLaUFyTWlCaVpXTmhkWE5sSUhkbElHaGhkbVVnTWlCc2FYTjBJR2wwWlcxeklIZHBkR2dnWkdsemNHeGhlVHB1YjI1bFhHNGdJQ0FnSUNBZ0lDQWdiV0Z5WjJsdUxYSnBaMmgwT2lBd1hHNGdJQ0FnSUNBZ0lDQWdZbTl5WkdWeUxYSnBaMmgwT2lCdWIyNWxYRzVjYmlBZ0lDQWdJQ0FnUGlCaFhHNGdJQ0FnSUNBZ0lDQWdMeW9nYzJWamIyNWtZWEo1SUc1aGRpQjBhWFJzWlZ4dUlDQWdJQ0FnSUNBZ0lHTnZiRzl5T2lBa1ozSmxaVzVjYmlBZ0lDQWdJQ0FnSUNCbWIyNTBMWGRsYVdkb2REb2dZbTlzWkZ4dUlDQWdJQ0FnSUNBZ0lHWnZiblF0YzJsNlpUb2dNUzQyY21WdFhHNGdJQ0FnSUNBZ0lDQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ0xqWmxiVnh1WEc0Z0lDQWdJQ0JoWEc0Z0lDQWdJQ0FnSUdobGFXZG9kRG9nTXpCd2VGeHVJQ0FnSUNBZ0lDQnNhVzVsTFdobGFXZG9kRG9nTXpCd2VGeHVJQ0FnSUNBZ0lDQndZV1JrYVc1bk9pQXdJREU0SlNBd0lEQmNiaUFnSUNBZ0lDQWdZMjlzYjNJNklDUnVhV2RvZEdkeVpXVnVYRzRnSUNBZ0lDQWdJR0p2Y21SbGNpMWliM1IwYjIwNklHNXZibVZjYmlBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lBeExqUnlaVzFjYmx4dUlDQWdJQ0FnSUNBbU9taHZkbVZ5WEc0Z0lDQWdJQ0FnSUNBZ1kyOXNiM0k2SUNSbmNtVmxibHh1WEc0Z0lDQWdJQ0IxYkZ4dUlDQWdJQ0FnSUNBdktpQkdiM0pqWlNCSVlYSmtkMkZ5WlNCQlkyTmxiR1Z5WVhScGIyNGdhVzRnVjJWaVMybDBYRzRnSUNBZ0lDQWdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsV2lnd0tWeHVYRzRnSUNBZ0lDQjFiQ0IxYkZ4dUlDQWdJQ0FnSUNBdktpQjBaWEowYVdGeWVTQnVZWFpwWjJGMGFXOXVYRzRnSUNBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVnh1SUNBZ0lDQWdJQ0IwYjNBNklEQmNiaUFnSUNBZ0lDQWdiR1ZtZERvZ01GeHVJQ0FnSUNBZ0lDQm9aV2xuYUhRNklERXdNQ1ZjYmlBZ0lDQWdJQ0FnZDJsa2RHZzZJREV3TUNWY2JseHVJQ0FnSUNBZ0lDQW1MbWx6TFdocFpHUmxibHh1SUNBZ0lDQWdJQ0FnSUhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbFdDZ3hNREFsS1Z4dVhHNGdJQ0FnSUNBZ0lDNW5ieTFpWVdOclhHNGdJQ0FnSUNBZ0lDQWdaR2x6Y0d4aGVUb2dZbXh2WTJ0Y2JseHVJQ0FnSUNBZ0lDQWdJR0ZjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZiRzl5T2lCMGNtRnVjM0JoY21WdWRGeHVYRzRnSUNBZ0lDQWdJQzV6WldVdFlXeHNYRzRnSUNBZ0lDQWdJQ0FnWkdsemNHeGhlVG9nWW14dlkydGNibHh1SUNBZ0lDQWdMbTF2ZG1WekxXOTFkQ0ErSUd4cElENGdZVnh1SUNBZ0lDQWdJQ0F2S2lCd2RYTm9JSFJvWlNCdVlYWnBaMkYwYVc5dUlHbDBaVzF6SUhSdklIUm9aU0JzWldaMElDMGdZVzVrSUd4dmQyVnlJR1J2ZDI0Z2IzQmhZMmwwZVNBdElIZG9aVzRnZEdWeWRHbGhjbmtnYm1GMklITnNhV1JsY3lCcGJseHVJQ0FnSUNBZ0lDQjBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaVmdvTFRFd01DVXBYRzVjYmlBZ0lDQXVZMlF0Ym1GMkxXZGhiR3hsY25sY2JpQWdJQ0FnSUdKdmVDMXphR0ZrYjNjNklEQWdOWEI0SURWd2VDQnlaMkpoS0RFd01Dd3hNREFzTVRBd0xDNHpLVnh1WEc0Z0lDQWdJQ0JzYVZ4dUlDQWdJQ0FnSUNBdktpQnpaWFFnYUdWeVpTQnVkVzFpWlhJZ2IyWWdZMjlzZFcxdWN5QXRJSFZ6WlNCM2FXUjBhQ0J3WlhKalpXNTBZV2RsWEc0Z0lDQWdJQ0FnSUM4dksyTnZiSFZ0Ymlnd0xqSXlLVnh1SUNBZ0lDQWdJQ0F2TDIxaGNtZHBiam9nTUNBMEpTQTBNSEI0SURCY2JseHVJQ0FnSUNBZ0lDQm1iRzloZERvZ2JHVm1kRnh1SUNBZ0lDQWdJQ0IzYVdSMGFEb2dNalVsWEc0Z0lDQWdJQ0FnSUhCaFpHUnBibWM2SURGeVpXMWNibHh1SUNBZ0lDQWdJQ0FtT201MGFDMWphR2xzWkNnMGJpc3lLVnh1SUNBZ0lDQWdJQ0FnSUM4cUlDc3lJR0psWTJGMWMyVWdkMlVnYUdGMlpTQjBkMjhnWVdSa2FYUnBiMjVoYkNCc2FYTjBJR2wwWlcxeklIZHBkR2dnWkdsemNHeGhlVHB1YjI1bFhHNGdJQ0FnSUNBZ0lDQWdMeTl0WVhKbmFXNHRjbWxuYUhRNklEQmNibHh1SUNBZ0lDQWdMbU5rTFc1aGRpMXBkR1Z0WEc0Z0lDQWdJQ0FnSUdKdmNtUmxjaTFpYjNSMGIyMDZJRzV2Ym1WY2JpQWdJQ0FnSUNBZ2NHRmtaR2x1WnpvZ01GeHVJQ0FnSUNBZ0lDQm9aV2xuYUhRNklHRjFkRzljYmlBZ0lDQWdJQ0FnYkdsdVpTMW9aV2xuYUhRNklERXVNbHh1WEc0Z0lDQWdJQ0FnSUdsdFoxeHVJQ0FnSUNBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJ6ZEdGMGFXTmNiaUFnSUNBZ0lDQWdJQ0J0WVhKbmFXNHRkRzl3T2lBd1hHNGdJQ0FnSUNBZ0lDQWdhR1ZwWjJoME9pQmhkWFJ2WEc0Z0lDQWdJQ0FnSUNBZ2QybGtkR2c2SURFd01DVmNiaUFnSUNBZ0lDQWdJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXVObkpsYlZ4dVhHNGdJQ0FnSUNBZ0lHZ3pYRzRnSUNBZ0lDQWdJQ0FnWTI5c2IzSTZJQ1JuY21WbGJseHVJQ0FnSUNBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTGpseVpXMWNiaUFnSUNBZ0lDQWdJQ0J3WVdSa2FXNW5PaUF3SUM0MGNtVnRYRzRnSUNBZ0lDQWdJQ0FnWm05dWRDMTNaV2xuYUhRNklHNXZjbTFoYkZ4dVhHNGdJQ0FnTG1Oa0xXNWhkaTFwWTI5dWMxeHVYRzRnSUNBZ0lDQnNhVnh1SUNBZ0lDQWdJQ0F2S2lCelpYUWdhR1Z5WlNCdWRXMWlaWElnYjJZZ1kyOXNkVzF1Y3lBdElIVnpaU0IzYVdSMGFDQndaWEpqWlc1MFlXZGxYRzRnSUNBZ0lDQWdJQ3RqYjJ4MWJXNG9NQzR6TWlsY2JpQWdJQ0FnSUNBZ2JXRnlaMmx1T2lBd0lESWxJREl3Y0hnZ01GeHVJQ0FnSUNBZ0lDQW1PbTUwYUMxamFHbHNaQ2d6YmlzeUtWeHVJQ0FnSUNBZ0lDQWdJQzhxSUNzeUlHSmxZMkYxYzJVZ2QyVWdhR0YyWlNCMGQyOGdZV1JrYVhScGIyNWhiQ0JzYVhOMElHbDBaVzF6SUhkcGRHZ2daR2x6Y0d4aGVUcHViMjVsWEc0Z0lDQWdJQ0FnSUNBZ2JXRnlaMmx1TFhKcFoyaDBPaUF3WEc0Z0lDQWdJQ0F1WTJRdGJtRjJMV2wwWlcxY2JpQWdJQ0FnSUNBZ1ltOXlaR1Z5TFdKdmRIUnZiVG9nYm05dVpWeHVJQ0FnSUNBZ0lDQm9aV2xuYUhRNklEZ3djSGhjYmlBZ0lDQWdJQ0FnYkdsdVpTMW9aV2xuYUhRNklERXVNbHh1SUNBZ0lDQWdJQ0J3WVdSa2FXNW5PaUF5TkhCNElEQWdNQ0E0TlhCNFhHNGdJQ0FnSUNBZ0lDWTZhRzkyWlhKY2JpQWdJQ0FnSUNBZ0lDQmlZV05yWjNKdmRXNWtPaUJzYVdkb2RHVnVLQ1JqYkc5MVpDd2dPQ1VwWEc0Z0lDQWdJQ0FnSUdnelhHNGdJQ0FnSUNBZ0lDQWdZMjlzYjNJNklDUm5jbVZsYmx4dUlDQWdJQ0FnSUNBZ0lHWnZiblF0ZDJWcFoyaDBPaUJpYjJ4a1hHNGdJQ0FnSUNBZ0lIQmNiaUFnSUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amExeHVJQ0FnSUNBZ0lDQW1PanBpWldadmNtVmNiaUFnSUNBZ0lDQWdJQ0JzWldaME9pQXlOWEI0WEc1Y2JseHVMbWhoY3kxamFHbHNaSEpsYmlBK0lHRXNJQzVuYnkxaVlXTnJJR0ZjYmlBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabFhHNGdJQ1k2T21KbFptOXlaU3dnSmpvNllXWjBaWEpjYmlBZ0lDQXZLaUJoY25KdmR5QnBZMjl1SUdsdUlFTlRVeUF0SUdadmNpQmxiR1Z0Wlc1MElIZHBkR2dnYm1WemRHVmtJSFZ1YjNKa1pYSmxaQ0JzYVhOMGMxeHVJQ0FnSUdOdmJuUmxiblE2SUNjblhHNGdJQ0FnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsWEc0Z0lDQWdkRzl3T2lBMU1DVmNiaUFnSUNCdFlYSm5hVzR0ZEc5d09pQXRNWEI0WEc0Z0lDQWdaR2x6Y0d4aGVUb2dhVzVzYVc1bExXSnNiMk5yWEc0Z0lDQWdhR1ZwWjJoME9pQXljSGhjYmlBZ0lDQjNhV1IwYURvZ01UQndlRnh1SUNBZ0lHSmhZMnRuY205MWJtUTZJR3hwWjJoMFpXNG9KRzVwWjJoMFozSmxaVzRzSURFd0pTbGNibHh1SUNBZ0lHSmhZMnRtWVdObExYWnBjMmxpYVd4cGRIazZJR2hwWkdSbGJseHVJQ0FtT2pwaVpXWnZjbVZjYmlBZ0lDQjBjbUZ1YzJadmNtMDZJSEp2ZEdGMFpTZzBOV1JsWnlsY2JpQWdKam82WVdaMFpYSmNiaUFnSUNCMGNtRnVjMlp2Y20wNklISnZkR0YwWlNndE5EVmtaV2NwWEc0Z0lDdHRaV1JwWVNoY0lqNWtaWE5yZEc5d1hDSXBYRzRnSUNBZ0pqbzZZbVZtYjNKbExDQW1PanBoWm5SbGNseHVJQ0FnSUNBZ1ltRmphMmR5YjNWdVpEb2daR0Z5YTJWdUtDUmpiRzkxWkN3Z01UQWxLVnh1SUNBZ0lDWTZhRzkyWlhJNk9tSmxabTl5WlN3Z0pqcG9iM1psY2pvNllXWjBaWEpjYmlBZ0lDQWdJR0poWTJ0bmNtOTFibVE2SUNSbmNtVmxibHh1WEc0dWFHRnpMV05vYVd4a2NtVnVJRDRnWVZ4dUlDQndZV1JrYVc1bkxYSnBaMmgwT2lBME1IQjRYRzRnSUNZNk9tSmxabTl5WlN3Z0pqbzZZV1owWlhKY2JpQWdJQ0F2S2lCaGNuSnZkeUJuYjJWeklHOXVJSFJvWlNCeWFXZG9kQ0J6YVdSbElDMGdZMmhwYkdSeVpXNGdibUYyYVdkaGRHbHZibHh1SUNBZ0lISnBaMmgwT2lBeU1IQjRYRzRnSUNBZ2RISmhibk5tYjNKdExXOXlhV2RwYmpvZ09YQjRJRFV3SlZ4dVhHNHVZMlF0Y0hKcGJXRnllUzF1WVhZZ0xtZHZMV0poWTJzZ1lWeHVJQ0J3WVdSa2FXNW5MV3hsWm5RNklEUXdjSGhjYmlBZ0pqbzZZbVZtYjNKbExDQW1PanBoWm5SbGNseHVJQ0FnSUM4cUlHRnljbTkzSUdkdlpYTWdiMjRnZEdobElHeGxablFnYzJsa1pTQXRJR2R2SUdKaFkyc2dZblYwZEc5dVhHNGdJQ0FnYkdWbWREb2dNakJ3ZUZ4dUlDQWdJSFJ5WVc1elptOXliUzF2Y21sbmFXNDZJREZ3ZUNBMU1DVmNibHh1SzIxbFpHbGhLRndpUG1SbGMydDBiM0JjSWlsY2JpQWdMbWhoY3kxamFHbHNaSEpsYmlBK0lHRmNiaUFnSUNBbU9qcGlaV1p2Y21Vc0lDWTZPbUZtZEdWeVhHNGdJQ0FnSUNCeWFXZG9kRG9nTVRVbFhHNGdJQzVqWkMxd2NtbHRZWEo1TFc1aGRpQStJQzVvWVhNdFkyaHBiR1J5Wlc0Z1BpQmhYRzRnSUNBZ0x5b2diV0ZwYmlCdVlYWnBaMkYwYVc5dUlHRnljbTkzY3lCdmJpQnNZWEpuWlhJZ1pHVjJhV05sYzF4dUlDQWdJSEJoWkdScGJtY3RjbWxuYUhRNklETXdjSGdnSVdsdGNHOXlkR0Z1ZEZ4dUlDQWdJQ1k2T21KbFptOXlaU3dnSmpvNllXWjBaWEpjYmlBZ0lDQWdJSGRwWkhSb09pQTVjSGhjYmlBZ0lDQWdJSFJ5WVc1elptOXliUzF2Y21sbmFXNDZJRFV3SlNBMU1DVmNiaUFnSUNBZ0lHSmhZMnRuY205MWJtUTZJR1JoY210bGJpZ2tZMnh2ZFdRc0lERXdKU2xjYmx4dUlDQWdJQ0FnWW1GamEyWmhZMlV0ZG1semFXSnBiR2wwZVRvZ2FHbGtaR1Z1WEc0Z0lDQWdJQ0IwY21GdWMybDBhVzl1T2lCM2FXUjBhQ0F3TGpOekxDQjBjbUZ1YzJadmNtMGdNQzR6YzF4dUlDQWdJQ1k2T21KbFptOXlaVnh1SUNBZ0lDQWdjbWxuYUhRNklERXljSGhjYmlBZ0lDQW1PanBoWm5SbGNseHVJQ0FnSUNBZ2NtbG5hSFE2SURkd2VGeHVJQ0FnSUNZdWMyVnNaV04wWldRNk9tSmxabTl5WlN3Z0ppNXpaV3hsWTNSbFpEbzZZV1owWlhKY2JpQWdJQ0FnSUhkcFpIUm9PaUF4TkhCNFhHNGdJQ0FnSmk1elpXeGxZM1JsWkRvNlltVm1iM0psWEc0Z0lDQWdJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlZnb05YQjRLU0J5YjNSaGRHVW9MVFExWkdWbktWeHVJQ0FnSUNZdWMyVnNaV04wWldRNk9tRm1kR1Z5WEc0Z0lDQWdJQ0IwY21GdWMyWnZjbTA2SUhKdmRHRjBaU2cwTldSbFp5bGNiaUFnTG1Oa0xYTmxZMjl1WkdGeWVTMXVZWFlnUGlBdWFHRnpMV05vYVd4a2NtVnVJRDRnWVRvNlltVm1iM0psTENBdVkyUXRjMlZqYjI1a1lYSjVMVzVoZGlBK0lDNW9ZWE10WTJocGJHUnlaVzRnUGlCaE9qcGhablJsY2x4dUlDQWdJQzhxSUhKbGJXOTJaU0JoY25KdmQzTWdiMjRnYzJWamIyNWtZWEo1SUc1aGRpQjBhWFJzWlhOY2JpQWdJQ0JrYVhOd2JHRjVPaUJ1YjI1bFhHNGdJQzVqWkMxd2NtbHRZWEo1TFc1aGRpQXVaMjh0WW1GamF5QmhYRzRnSUNBZ2NHRmtaR2x1Wnkxc1pXWjBPaUF5TUhCNFhHNGdJQ0FnSmpvNlltVm1iM0psTENBbU9qcGhablJsY2x4dUlDQWdJQ0FnYkdWbWREb2dNWEI0WEc1Y2JseHVYRzVjYmk1alpDMXpaV0Z5WTJoY2JpQWdabXh2WVhRNmNtbG5hSFJjYmlBZ2JXRnlaMmx1T2lBeExqSTFjbVZ0WEc1Y2JpQWdLMjFsWkdsaEtGd2lQRDF3YUc5dVpWd2lLVnh1SUNBZ0lHWnNiMkYwT2lCdWIyNWxYRzRnSUNBZ2JXRnlaMmx1T2lBeGNtVnRJR0YxZEc4Z01GeHVJQ0FnSUhkcFpIUm9PaUF4TURBbFhHNWNiaUFnWm05eWJWeHVJQ0FnSUhCdmMybDBhVzl1T25KbGJHRjBhWFpsWEc1Y2JpQWdhVzV3ZFhSYmRIbHdaVDFjSW5OMVltMXBkRndpWFZ4dUlDQWdJR0poWTJ0bmNtOTFibVF0YVcxaFoyVTZJSFZ5YkNoY0lpOXBiV0ZuWlhNdmMyVmhjbU5vTFdsamIyNHVjRzVuWENJcFhHNGdJQ0FnWW1GamEyZHliM1Z1WkMxeVpYQmxZWFE2SUc1dkxYSmxjR1ZoZEZ4dUlDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJSFJ5WVc1emNHRnlaVzUwWEc0Z0lDQWdaR2x6Y0d4aGVUb2dhVzVzYVc1bExXSnNiMk5yWEc0Z0lDQWdkR1Y0ZEMxcGJtUmxiblE2SUMwNU9UazVPWEI0WEc0Z0lDQWdhR1ZwWjJoME9pQXlNbkI0WEc0Z0lDQWdkMmxrZEdnNklESXljSGhjYmlBZ0lDQXRkMlZpYTJsMExXRndjR1ZoY21GdVkyVTZJRzV2Ym1WY2JpQWdJQ0JpYjNKa1pYSTZJREJjYmlBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVmNiaUFnSUNCMGIzQTZJRFp3ZUZ4dUlDQWdJSEpwWjJoME9pQXpjSGhjYmlBZ0lDQmlZV05yWjNKdmRXNWtMWE5wZW1VNklEYzFKVnh1WEc0Z0lHbHVjSFYwVzNSNWNHVTlYQ0p6WldGeVkyaGNJbDFjYmlBZ0lDQjBaWGgwTFdsdVpHVnVkRG94Y21WdFhHNGdJQ0FnTHk5aWIzZ3RjMmhoWkc5M09pQnBibk5sZENBd0lERndlQ0F3SUNSamJHOTFaQ3dnTUNBemNIZ2dObkI0SUhKblltRW9JekF3TUN3Z01DNHdOU2xjYmlBZ0lDQmhjSEJsWVhKaGJtTmxPaUJ1YjI1bFhHNGdJQ0FnWW05eVpHVnlPaUF4Y0hnZ2MyOXNhV1FnSkdkeVlYQm9hWFJsWEc1Y2JpQWdJQ0FyYldWa2FXRW9YQ0k4UFhSaFlteGxkRndpS1Z4dUlDQWdJQ0FnZDJsa2RHZzZJREV3TUNWY2JseHVJQ0FnSUNZNk9pMTNaV0pyYVhRdGFXNXdkWFF0Y0d4aFkyVm9iMnhrWlhJc1hHNGdJQ0FnSmpvNkxXMXZlaTF3YkdGalpXaHZiR1JsY2l4Y2JpQWdJQ0FtT2kxdGN5MXBibkIxZEMxd2JHRmpaV2h2YkdSbGNseHVJQ0FnSUNBZ1kyOXNiM0k2SUdSaGNtdGxiaWdrWTJ4dmRXUXNJREV3SlNsY2JseHVJQ0FnSUNZNlptOWpkWE5jYmlBZ0lDQWdJRzkxZEd4cGJtVTZJRzV2Ym1WY2JseHVJQ0FtTG1sekxYWnBjMmxpYkdWY2JpQWdJQ0J2Y0dGamFYUjVPaUF4WEc0Z0lDQWdkbWx6YVdKcGJHbDBlVG9nZG1semFXSnNaVnh1SUNBZ0lIUnlZVzV6YVhScGIyNDZJRzl3WVdOcGRIa2dMak56SURCekxDQjJhWE5wWW1sc2FYUjVJREJ6SURCelhHNGdJQ0FnTHk5aWIzZ3RjMmhoWkc5M09pQXhjSGdnTVhCNElEVndlQ0J5WjJKaEtERXdNQ3d4TURBc01UQXdMQ0F1TlNsY2JseHVJQ0F1Ym1GMkxXbHpMV1pwZUdWa0lDWmNiaUFnSUNCd2IzTnBkR2x2YmpvZ1ptbDRaV1JjYmx4dUlDQXJiV1ZrYVdFb1hDSStaR1Z6YTNSdmNGd2lLVnh1WEc1Y2JpQWdJQ0JwYm5CMWRGeHVYRzVjYmx4dUxtTmtMVzkyWlhKc1lYbGNiaUFnTHlvZ2MyaGhaRzkzSUd4aGVXVnlJSFpwYzJsaWJHVWdkMmhsYmlCdVlYWnBaMkYwYVc5dUlHbHpJR0ZqZEdsMlpWeHVJQ0J3YjNOcGRHbHZiam9nWm1sNFpXUmNiaUFnZWkxcGJtUmxlRG9nTWx4dUlDQm9aV2xuYUhRNklERXdNQ1ZjYmlBZ2QybGtkR2c2SURFd01DVmNiaUFnZEc5d09pQXdYRzRnSUd4bFpuUTZJREJjYmlBZ1kzVnljMjl5T2lCd2IybHVkR1Z5WEc0Z0lDOHZZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2djbWRpWVNna1ozSmxaVzRzSURBdU9DbGNiaUFnZG1semFXSnBiR2wwZVRvZ2FHbGtaR1Z1WEc0Z0lHOXdZV05wZEhrNklEQmNiaUFnWW1GamEyWmhZMlV0ZG1semFXSnBiR2wwZVRvZ2FHbGtaR1Z1WEc0Z0lIUnlZVzV6YVhScGIyNDZJRzl3WVdOcGRIa2dNQzR6Y3lBd2N5d2dkbWx6YVdKcGJHbDBlU0F3Y3lBd0xqTnpMQ0IwY21GdWMyWnZjbTBnTUM0emN5QXdjMXh1WEc0Z0lDWXVhWE10ZG1semFXSnNaVnh1SUNBZ0lHOXdZV05wZEhrNklERmNiaUFnSUNCMmFYTnBZbWxzYVhSNU9pQjJhWE5wWW14bFhHNGdJQ0FnZEhKaGJuTnBkR2x2YmpvZ2IzQmhZMmwwZVNBd0xqTnpJREJ6TENCMmFYTnBZbWxzYVhSNUlEQnpJREJ6TENCMGNtRnVjMlp2Y20wZ01DNHpjeUF3YzF4dVhHNGdJQ3R0WldScFlTaGNJanhrWlhOcmRHOXdYQ0lwWEc0Z0lDQWdKaTVwY3kxMmFYTnBZbXhsWEc0Z0lDQWdJQ0F2TDNSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbFdDZ3RKRzVoZGkxM2FXUjBhQzFUS1Z4dUlDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWWUtEQXBYRzVjYmlBZ0lDQXVibUYyTFc5dUxXeGxablFnSmk1cGN5MTJhWE5wWW14bFhHNGdJQ0FnSUNCMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpWZ29KRzVoZGkxM2FXUjBhQzFUS1Z4dVhHNGdJQ0FnSmk1cGN5MTJhWE5wWW14bExuTmxZWEpqYUMxcGN5MTJhWE5wWW14bExGeHVJQ0FnSUM1dVlYWXRiMjR0YkdWbWRDQW1MbWx6TFhacGMybGliR1V1YzJWaGNtTm9MV2x6TFhacGMybGliR1ZjYmlBZ0lDQWdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsV0Nnd0tWeHVYRzR2S2lBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMVnh1SUNwY2JpQXFjM1Z3Y0c5eWRDQm1iM0lnYm04Z2FuTmNiaUFxWEc0Z0tpMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0WEc1Y2JpNXVieTFxY3lBdVkyUXRjSEpwYldGeWVTMXVZWFpjYmlBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabFhHNGdJR2hsYVdkb2REb2dZWFYwYjF4dUlDQjNhV1IwYURvZ01UQXdKVnh1SUNCdmRtVnlabXh2ZHpvZ2RtbHphV0pzWlZ4dUlDQjJhWE5wWW1sc2FYUjVPaUIyYVhOcFlteGxYRzRnSUhvdGFXNWtaWGc2SUNSamIyNTBaVzUwWEc1Y2JpNXVieTFxY3lBdVkyUXRjMlZoY21Ob1hHNGdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVnh1SUNCMGIzQTZJREJjYmlBZ2IzQmhZMmwwZVRvZ01WeHVJQ0IyYVhOcFltbHNhWFI1T2lCMmFYTnBZbXhsWEc1Y2JpdHRaV1JwWVNoY0lqNWtaWE5yZEc5d1hDSXBYRzRnSUM1dWJ5MXFjeUF1WTJRdGNISnBiV0Z5ZVMxdVlYWmNiaUFnSUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdWY2JpQWdJQ0I2TFdsdVpHVjRPaUFrWVdKdmRtVXRZMjl1ZEdWdWRGeHVJQ0FnSUdScGMzQnNZWGs2SUdsdWJHbHVaUzFpYkc5amExeHVJQ0FnSUhkcFpIUm9PaUJoZFhSdlhHNGdJQ0FnZEc5d09pQXdYRzRnSUNBZ2NtbG5hSFE2SURFMU1IQjRYRzRnSUNBZ2NHRmtaR2x1WnpvZ01GeHVJQ0F1Ym04dGFuTWdMbTVoZGkxcGN5MW1hWGhsWkNBdVkyUXRjSEpwYldGeWVTMXVZWFpjYmlBZ0lDQndiM05wZEdsdmJqb2dabWw0WldSY2JpSXNJaTV1WVhZdFptOXZkR1Z5WEc1Y2RIQmhaR1JwYm1jNklETXdjSGdnTWpCd2VDQXlNSEI0WEc1Y2RIUmxlSFF0WVd4cFoyNDZJR3hsWm5SY2JseHVYSFFyYldWa2FXRW9YQ0k4UFhSaFlteGxkRndpS1Z4dVhIUmNkR1JwYzNCc1lYazZJRzV2Ym1WY2JseHVYSFFtWDE5b1pXRmthVzVuWEc1Y2RGeDBabTl1ZEMxbVlXMXBiSGs2SUNSellXNXpYRzVjZEZ4MFptOXVkQzF6YVhwbE9pQXhjbVZ0WEc1Y2RGeDBabTl1ZEMxM1pXbG5hSFE2SUNSaWIyeGtYRzVjZEZ4MGJXRnlaMmx1TFdKdmRIUnZiVG9nTVhKbGJWeHVYRzVjZEZ4MFlWeHVYSFJjZEZ4MFkyOXNiM0k2SUNSamFHRnlZMjloYkZ4dVhIUmNkRngwSmpwb2IzWmxjbHh1WEhSY2RGeDBYSFJqYjJ4dmNqb2dKR2R5WldWdVhHNWNibHgwSmw5ZmJHbHVhMXh1WEhSY2RHWnZiblF0YzJsNlpUb2dNVFJ3ZUZ4dVhHNWNkQ1pmWDJKdmVGeHVYSFJjZEhCaFpHUnBibWM2SURBZ01UQndlRnh1WEhSY2RIWmxjblJwWTJGc0xXRnNhV2R1T2lCMGIzQmNibHh1WEhRbVgxOWliM2d0Ym1GeWNtOTNYRzVjZEZ4MGNHRmtaR2x1WnpvZ01DQXhNSEI0WEc1Y2RGeDBkbVZ5ZEdsallXd3RZV3hwWjI0NklIUnZjRnh1WEc1Y2RDWmZYMkoxZEhSdmJseHVYSFJjZEdKdmNtUmxjaTEzYVdSMGFEb2dNWEI0WEc1Y2RGeDBZMjlzYjNJNklDUm5jbVZsYmx4dVhIUmNkR1p2Ym5RdGMybDZaVG9nTGpseVpXMWNibHgwWEhSdFlYSm5hVzR0WW05MGRHOXRPaUF4Y21WdFhHNWNkRngwY0dGa1pHbHVaem9nTGpWeVpXMGdNWEpsYlZ4dVhIUmNkSGRwWkhSb09pQXhNREFsWEc1Y2JseHVYSFF2THlCVGRXSXRibUYyYVdkaGRHbHZiaXdnZDJocFkyZ2dhR2xrWlhNZ2IyNGdjMjFoYkd3Z2MybDZaWE5jYmx4MEpsOWZjM1ZpTFd4cGJtdHpYRzVjZEZ4MFptOXVkQzF6YVhwbE9pQXhOSEI0WEc1Y2JseDBYSFJzYVRwdWRHZ3RZMmhwYkdRb01TbGNibHgwWEhSY2RHWnZiblF0Wm1GdGFXeDVPaUFrYzJGdWMxeHVYSFJjZEZ4MFptOXVkQzF6YVhwbE9pQXhjbVZ0WEc1Y2RGeDBYSFJtYjI1MExYZGxhV2RvZERvZ0pHSnZiR1JjYmx4MFhIUmNkRzFoY21kcGJpMWliM1IwYjIwNklDNDFjbVZ0WEc1Y2JseDBYSFJjZEdGY2JseDBYSFJjZENBZ1kyOXNiM0k2SUNSamFHRnlZMjloYkZ4dVhIUmNkRngwSUNBbU9taHZkbVZ5WEc1Y2RGeDBYSFFnSUNBZ1kyOXNiM0k2SUNSbmNtVmxibHh1SWl3aUx5OUNZVzV1WlhJZ1ZHRnNiQ0F0SUZSb2FYTWdhWE1nWm05MWJtUWdiMjRnZEdobElHaHZiV1Z3WVdkbElHOXViSGxjYmk1aVlXNXVaWEl0ZEdGc2JGeHVJQ0JpWVdOclozSnZkVzVrTFdsdFlXZGxPaUIxY213b2FXMWhaMlZ6TDJsdVpHVjRYMmhsY204dE1pNXFjR2NwWEc0Z0lHSmhZMnRuY205MWJtUXRjRzl6YVhScGIyNDZJR05sYm5SbGNseHVJQ0JpWVdOclozSnZkVzVrTFhOcGVtVTZJR052ZG1WeVhHNGdJR2hsYVdkb2REb2dNakF3Y0hoY2JpQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxYRzVjYmlBZ0syMWxaR2xoS0Z3aVBuUmhZbXhsZEZ3aUtWeHVJQ0FnSUdobGFXZG9kRG9nTkRZMWNIaGNibHh1SUNBcmJXVmthV0VvWENJOFBYQm9iMjVsWENJcFhHNGdJQ0FnWW1GamEyZHliM1Z1WkMxd2IzTnBkR2x2YmpvZ2JHVm1kRnh1SUNBZ0lHaGxhV2RvZERvZ01qWTFjSGhjYmx4dVhHNGdJQ1pmWDJobFlXUnNhVzVsWEc0Z0lDQWdZbTkwZEc5dE9pQXpjbVZ0WEc0Z0lDQWdZMjlzYjNJNklDUjNhR2wwWlZ4dUlDQWdJR1p2Ym5RdFptRnRhV3g1T2lCelpYSnBabHh1SUNBZ0lHWnZiblF0YzJsNlpUb2dOSEpsYlZ4dUlDQWdJR1p2Ym5RdGQyVnBaMmgwT2lBNE1EQmNiaUFnSUNCc1pXWjBPaUF5Y21WdFhHNGdJQ0FnYkdsdVpTMW9aV2xuYUhRNklERmNiaUFnSUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdWY2JpQWdJQ0J0WVhKbmFXNDZJREFnTUNBeGNtVnRJREZ5WlcxY2JpQWdJQ0IwWlhoMExYTm9ZV1J2ZHpvZ01uQjRJREp3ZUNBeWNIZ2dKR05vWVhKamIyRnNYRzVjYmlBZ0lDQnpkWEJjYmlBZ0lDQWdJR1p2Ym5RdGMybDZaVG94TGpjMWNtVnRYRzVjYmlBZ0lDQXJiV1ZrYVdFb1hDSThkR0ZpYkdWMFhDSXBYRzRnSUNBZ0lDQndiM05wZEdsdmJqb2djM1JoZEdsalhHNGdJQ0FnSUNCbWIyNTBMWE5wZW1VNklESnlaVzFjYmlBZ0lDQWdJSEJoWkdScGJtYzZJREp5WlcxY2JseHVMeThnUW1GdWJtVnlJRk4wWVc1a1lYSmtJQzBnVkdocGN5QnBjeUJtYjNWdVpDQnZiaUIwYUdVZ2JXRnFiM0pwZEhrZ2IyWWdkR2hsSUdsdWRHVnlibUZzSUhCaFoyVnpYRzR1WW1GdWJtVnlMWE4wWVc1a1lYSmtYRzRnSUdKaFkydG5jbTkxYm1RNklDUm5jbVZsYmx4dUlDQmpiMnh2Y2pvZ0pIZG9hWFJsWEc0Z0lHUnBjM0JzWVhrNklIUmhZbXhsWEc0Z0lHaGxhV2RvZERvZ1lYVjBiMXh1WEc0Z0lDOHZJRWRsZENCeWFXUWdiMllnZDJWcGNtUWdjM0JoWTJVZ1ltVnNiM2NnYVcxaFoyVWdhVzRnZEdobElHSmhibTVsY25OY2JpQWdhVzFuWEc0Z0lDQWdaR2x6Y0d4aGVUb2dZbXh2WTJ0Y2JseHVJQ0FtWDE5aWIzaGNiaUFnSUNCd1lXUmthVzVuT2lBeGNtVnRJREp5WlcxY2JseHVJQ0FtWDE5b1pXRmthVzVuWEc0Z0lDQWdZMjlzYjNJNklDUjNhR2wwWlZ4dVhHNGdJQ1pmWDNSbGVIUmNibHh1SUNBbVgxOXRaV1JwWVZ4dUlDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ1J6YkdGMFpWeHVYRzRnSUM4dklGUm9hWE1nYVhNZ1ptOTFibVFnYjI0Z2RHaGxJRUZ3Y0hKdllXTm9JRkJoWjJWY2JpQWdKbDlmYldWa2FXRXRZWEJ3Y205aFkyaGNiaUFnSUM4dklHSmhZMnRuY205MWJtUXRhVzFoWjJVNklIVnliQ2d1TGk5cGJXRm5aWE12YldWbGRHbHVaeTVxY0djcFhHNGdJQ0F2THlCaVlXTnJaM0p2ZFc1a0xYQnZjMmwwYVc5dU9pQmpaVzUwWlhKY2JpQWdJQzh2SUdKaFkydG5jbTkxYm1RdGMybDZaVG9nWTI5MlpYSmNibHh1SUNBZ0lDdHRaV1JwWVNoY0lqdzlkR0ZpYkdWMFhDSXBYRzRnSUNBZ0lDQm9aV2xuYUhRNklETXdNSEI0WEc1Y2JpQWdMeThnVkdocGN5QnBjeUJtYjNWdVpDQnZiaUIwYUdVZ1RHVmhaR1Z5YzJocGNDQndZV2RsWEc0Z0lDWmZYMjFsWkdsaExXeGxZV1JsY25Ob2FYQmNiaUFnSUM4dklHSmhZMnRuY205MWJtUXRhVzFoWjJVNklIVnliQ2d1TGk5cGJXRm5aWE12Y0dWdmNHeGxMbXB3WnlsY2JpQWdJQzh2SUdKaFkydG5jbTkxYm1RdGNHOXphWFJwYjI0NklHTmxiblJsY2x4dUlDQWdMeThnWW1GamEyZHliM1Z1WkMxemFYcGxPaUJqYjNabGNseHVYRzRnSUNBZ0syMWxaR2xoS0Z3aVBEMTBZV0pzWlhSY0lpbGNiaUFnSUNBZ0lHaGxhV2RvZERvZ016QXdjSGhjYmx4dUx5OGdRbUZ1Ym1WeUlGQmhibTl5WVcxaElDMGdWR2hwY3lCcGN5Qm1iM1Z1WkNCdmJpQjBhR1VnVG1WM2N5QndZV2RsWEc0dVltRnVibVZ5TFhCaGJtOXlZVzFoWEc0Z0lHSmhZMnRuY205MWJtUXRhVzFoWjJVNklIVnliQ2d1TGk5cGJXRm5aWE12ZEhKbFpYTXVhbkJuS1Z4dUlDQmlZV05yWjNKdmRXNWtMWEJ2YzJsMGFXOXVPaUJqWlc1MFpYSmNiaUFnWW1GamEyZHliM1Z1WkMxemFYcGxPaUJqYjNabGNseHVJQ0JvWldsbmFIUTZJREkxTlhCNFhHNGlMQ0l1WTJGeVpDMWthWEIwYVdOY2JpQWdaR2x6Y0d4aGVUb2dkR0ZpYkdWY2JpQWdZbTl5WkdWeUxYUnZjRG9nTVhCNElITnZiR2xrSUNSaWIzSmtaWEpEYjJ4dmNseHVJQ0JpYjNKa1pYSXRZbTkwZEc5dE9pQXhjSGdnYzI5c2FXUWdKR0p2Y21SbGNrTnZiRzl5WEc1Y2JpQWdLM0psYzNCdmJuTnBkbVV0YzNSaFkydGNibHh1SUNBbVgxOWliM2hjYmlBZ0lDQmthWE53YkdGNU9pQjBZV0pzWlMxalpXeHNYRzRnSUNBZ2RtVnlkR2xqWVd3dFlXeHBaMjQ2SUcxcFpHUnNaVnh1WEc0Z0lDQWdjR0ZrWkdsdVp6b2dNbkpsYlNBeGNtVnRYRzVjYmlBZ0lDQXJiV1ZrYVdFb1hDSStkR0ZpYkdWMFhDSXBYRzRnSUNBZ0lDQndZV1JrYVc1bk9pQXljbVZ0SURGeVpXMGdNbkpsYlNBeWNtVnRYRzVjYmlBZ0lDQW1PbTUwYUMxamFHbHNaQ2d5S1Z4dUlDQWdJQ0FnSzIxbFpHbGhLRndpUG5SaFlteGxkRndpS1Z4dUlDQWdJQ0FnSUNCaWIzSmtaWEl0YkdWbWREb2dNWEI0SUhOdmJHbGtJQ1JpYjNKa1pYSkRiMnh2Y2x4dUlDQWdJQ0FnSUNCd1lXUmthVzVuT2lBeWNtVnRJREp5WlcwZ01uSmxiU0F4Y21WdFhHNWNiaUFnSmw5ZmFHVmhaR2x1WjF4dUlDQWdJSFJsZUhRdFlXeHBaMjQ2SUdObGJuUmxjbHh1WEc0Z0lDWmZYMjFsWkdsaFhHNGdJQ0FnYldGeVoybHVMV0p2ZEhSdmJUb2dNbkpsYlZ4dVhHNGdJQ1pmWDNSbGVIUmNiaUFnSUNCMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhKY2JpQWdJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXljbVZ0WEc1Y2JpQWdkV3hjYmlBZ0lDQnNhWE4wTFhOMGVXeGxPaUJ1YjI1bFhHNGdJQ0FnZEdWNGRDMWhiR2xuYmpvZ1kyVnVkR1Z5WEc1Y2JpQWdJQ0JzYVZ4dUlDQWdJQ0FnWkdsemNHeGhlVG9nYVc1c2FXNWxMV0pzYjJOclhHNGdJQ0FnSUNCd1lXUmthVzVuT2lBdU5YSmxiVnh1SUNBZ0lDQWdkMmxrZEdnNklEUTNKVnh1WEc1Y2JpQWdKbDlmYkdsdWExeHVJQ0FnSUdOdmJHOXlPaUFrYzJsMFpTMTBaWGgwTFdOdmJHOXlMV3hwYm10Y2JpQWdJQ0JrYVhOd2JHRjVPaUJwYm14cGJtVXRZbXh2WTJ0Y2JpQWdJQ0JtYjI1MExXWmhiV2xzZVRvZ0pITmxjbWxtWEc0Z0lDQWdjR0ZrWkdsdVp6b2dNQ0F1TkhKbGJWeHVJQ0FnSUhabGNuUnBZMkZzTFdGc2FXZHVPaUJ0YVdSa2JHVmNiaUFnSUNBbU9taHZkbVZ5WEc0Z0lDQWdJQ0JqYjJ4dmNqb2dKSE5wZEdVdGRHVjRkQzFqYjJ4dmNpMXNhVzVyTFdodmRtVnlYRzVjYmx4dUx5OGdRMkZ5WkNCQ2FXOGdMU0JVYUdWelpTQmhjbVVnWm05MWJtUWdiMjRnZEdobElFeGxZV1JsY25Ob2FYQWdjR0ZuWlZ4dUxtTmhjbVF0WW1sdlhHNGdJSEJoWkdScGJtY3RZbTkwZEc5dE9pQXljbVZ0WEc1Y2JpQWdLMjFsWkdsaEtGd2lQRDEwWVdKc1pYUmNJaWxjYmlBZ0lDQmliM0prWlhJdFltOTBkRzl0T2lBeGNIZ2djMjlzYVdRZ0pHTnNiM1ZrWEc0Z0lDQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ01uSmxiVnh1WEc0Z0lDWmZYMjFsWkdsaFhHNGdJQ0FnZG1WeWRHbGpZV3d0WVd4cFoyNDZJSFJ2Y0Z4dVhHNGdJQ0FnSzIxbFpHbGhLRndpUEQxMFlXSnNaWFJjSWlsY2JpQWdJQ0FnSUcxaGNtZHBiaTFpYjNSMGIyMDZJREZ5WlcxY2JpQWdJQ0FnSUhSbGVIUXRZV3hwWjI0NklHTmxiblJsY2x4dVhHNGdJQ0FnYVcxblhHNGdJQ0FnSUNBcmJXVmthV0VvWENJOFBYUmhZbXhsZEZ3aUtWeHVJQ0FnSUNBZ0lDQmthWE53YkdGNU9pQnBibXhwYm1VdFlteHZZMnRjYmlBZ0lDQWdJQ0FnZDJsa2RHZzZJRE16SlZ4dVhHNGdJQ1pmWDJKdmVGeHVJQ0FnSUhCaFpHUnBibWN0YkdWbWREb2dNbkpsYlZ4dUlDQWdJSEJoWkdScGJtY3RkRzl3T2lBd1hHNGdJQ0FnZG1WeWRHbGpZV3d0WVd4cFoyNDZJSFJ2Y0Z4dVhHNGdJQ0FnSzIxbFpHbGhLRndpUEQxMFlXSnNaWFJjSWlsY2JpQWdJQ0FnSUhCaFpHUnBibWM2SURCY2JseHVJQ0FtWDE5b1pXRmthVzVuWEc0Z0lDQWdMeTlOYVhocGJpQmpZVzRnWW1VZ1ptOTFibVFnYVc0Z2RIbHdiMmR5WVhCb2VWeHVJQ0FnSUN0emRHRnVaR0Z5WkMxb1pXRmthVzVuS0NsY2JpQWdJQ0J0WVhKbmFXNHRZbTkwZEc5dE9qRnlaVzA3WEc1Y2JpQWdKbDlmYzNWaWRHbDBiR1ZjYmlBZ0lDQmpiMnh2Y2pvZ0pITjBiMjVsWEc0Z0lDQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ09IQjRYRzVjYmlBZ0lDQm9NMXh1SUNBZ0lDQWdaR2x6Y0d4aGVUb2dhVzVzYVc1bExXSnNiMk5yWEc0Z0lDQWdZVnh1SUNBZ0lDQWdZMjlzYjNJNklDUm5jbVZsYmx4dUlDQWdJQ0FnYldGeVoybHVMV3hsWm5RNklERXdjSGhjYmlBZ0lDQWdJR2xjYmlBZ0lDQWdJQ0FnWW05eVpHVnlPakZ3ZUNCemIyeHBaQ0FrWjNKbFpXNWNiaUFnSUNBZ0lDQWdjR0ZrWkdsdVp6b2dNbkI0WEc1Y2JpQWdKbDlmZEdWNGRGeHVYRzRnSUNBZ0syMWxaR2xoS0Z3aVBEMTBZV0pzWlhSY0lpbGNiaUFnSUNBZ0lIUmxlSFF0WVd4cFoyNDZJR3hsWm5SY2JseHVJQ0FnSUNvZ0t5QXFYRzRnSUNBZ0lDQnRZWEpuYVc0dGRHOXdPaUF4Y21WdFhHNWNibHh1THk4Z1EyRnlaQ0JoY25ScFkyeGxJQzBnVkdobGMyVWdZWEpsSUdadmRXNWtJRzl1SUhSb1pTQk9aWGR6SUdGdVpDQkpibk5wWjJoMGN5QndZV2RsWEc0dVkyRnlaQzFoY25ScFkyeGxYRzVjYmx4dUlDQW1YMTlpYjNoY2JpQWdJQ0JpYjNndGMyaGhaRzkzT2lBd0lERndlQ0F3SUNSbmNtVmxibHh1SUNBZ0lHUnBjM0JzWVhrNklHNXZibVZjYmlBZ0lDQXJkbVZ5ZEMxd1lXUmthVzVuS0RFc01TbGNibHh1SUNBZ0lDb2dLeUFxWEc0Z0lDQWdJQ0J0WVhKbmFXNHRkRzl3T2lBeGNtVnRYRzVjYmlBZ1lWeHVJQ0FnSUNZNmFHOTJaWEpjYmlBZ0lDQWdJSFJsZUhRdFpHVmpiM0poZEdsdmJqb2dibTl1WlZ4dVhHNGdJR2d5WEc0Z0lDQWdLM04wWVc1a1lYSmtMV2hsWVdScGJtY29LU0F2TDAxcGVHbHVJR05oYmlCaVpTQm1iM1Z1WkNCcGJpQjBlWEJ2WjNKaGNHaDVYRzRnSUNBZ0pqcG9iM1psY2x4dUlDQWdJQ0FnWTI5c2IzSTZKRzVwWjJoMFozSmxaVzVjYmx4dUlDQnpiV0ZzYkZ4dUlDQWdJR052Ykc5eU9pQWpOalkyWEc0Z0lDQWdabTl1ZEMxemFYcGxPaUF1TnpWeVpXMWNibHh1SUNCd1hHNWNiaTVzYjJGa1pYSmZYMjVoZGx4dUlDQmthWE53YkdGNU9pQjBZV0pzWlMxalpXeHNYRzRnSUhCaFpHUnBibWN0ZEc5d09pQXhMakkxY21WdFhHNWNibHh1TG1OaGNtUXRkSEpwY0hScFkxeHVJQ0JrYVhOd2JHRjVPaUIwWVdKc1pWeHVJQ0JpYjNKa1pYSXRkRzl3T2lBeGNIZ2djMjlzYVdRZ0pHSnZjbVJsY2tOdmJHOXlYRzRnSUdKdmNtUmxjaTFpYjNSMGIyMDZJREZ3ZUNCemIyeHBaQ0FrWW05eVpHVnlRMjlzYjNKY2JseHVJQ0FtWDE5aWIzaGNiaUFnSUNCd1lXUmthVzVuT2lBeWNtVnRYRzRnSUNBZ2RtVnlkR2xqWVd3dFlXeHBaMjQ2SUhSdmNGeHVYRzRnSUNBZ0pqcHVkR2d0WTJocGJHUW9NaWxjYmlBZ0lDQWdJQ3R0WldScFlTaGNJajUwWVdKc1pYUmNJaWxjYmlBZ0lDQWdJQ0FnWW05eVpHVnlMV3hsWm5RNklERndlQ0J6YjJ4cFpDQWtZbTl5WkdWeVEyOXNiM0pjYmlBZ0lDQWdJQ0FnTHk5d1lXUmthVzVuT2lBeWNtVnRJREZ5WlcwZ01uSmxiU0F4Y21WdFhHNWNiaUFnSUNBbU9tNTBhQzFqYUdsc1pDZ3pLVnh1SUNBZ0lDQWdLMjFsWkdsaEtGd2lQblJoWW14bGRGd2lLVnh1SUNBZ0lDQWdJQ0JpYjNKa1pYSXRiR1ZtZERvZ01YQjRJSE52Ykdsa0lDUmliM0prWlhKRGIyeHZjbHh1SUNBZ0lDQWdJQ0F2TDNCaFpHUnBibWM2SURKeVpXMGdNbkpsYlNBeWNtVnRJREZ5WlcxY2JseHVJQ0FtWDE5dFpXUnBZVnh1SUNBZ0lDOHZZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dKR2R5WldWdVhHNGdJQ0FnYUdWcFoyaDBPaUF4TlRCd2VGeHVJQ0FnSUc5MlpYSm1iRzkzT2lCb2FXUmtaVzVjYmlBZ0lDQnRZWEpuYVc0dFltOTBkRzl0T2lBeWNtVnRYRzVjYmlBZ0lDQnBiV2RjYmx4dUlDQW1YMTlvWldGa2FXNW5MV3hwYm10Y2JpQWdJQ0FyYzIxaGJHd3RhR1ZoWkdsdVp5Z3BYRzRnSUNBZ1kyOXNiM0k2SUNSemFYUmxMWFJsZUhRdFkyOXNiM0l0YkdsdWExeHVJQ0FnSUdScGMzQnNZWGs2SUdsdWJHbHVaUzFpYkc5amExeHVJQ0FnSUhSbGVIUXRZV3hwWjI0NklHTmxiblJsY2x4dVhHNGdJQ0FnSmpwb2IzWmxjbHh1SUNBZ0lDQWdZMjlzYjNJNklDUnphWFJsTFhSbGVIUXRZMjlzYjNJdGJHbHVheTFvYjNabGNseHVYRzRnSUNaZlgzUmxlSFJjYmlBZ0lDQjBaWGgwTFdGc2FXZHVPaUJqWlc1MFpYSmNiaUlzSWk4dlhHNHZMME5VUVhNZ0xTQkRZV3hzSUhSdklFRmpkR2x2YmlCdGIyUjFiR1Z6WEc0dkwxeHVYRzR2TDBOdmJuUmhZM1FnUTFSQlhHNHZMMVJvYVhNZ2FYTWdabTkxYm1RZ2IyNGdkR2hsSUdodmJXVndZV2RsSUc5dWJIa2djbWxuYUhRZ2JtOTNYRzR1WTNSaExXTnZiblJoWTNSY2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dKSE5zWVhSbFhHNGdJR1JwYzNCc1lYazZJSFJoWW14bFhHNGdJSGRwWkhSb09pQXhNREFsTzF4dVhHNGdJQ1pmWDJKdmVGeHVJQ0FnSUhCaFpHUnBibWM2SURKeVpXMWNibHh1SUNBbVgxOWliM2c2Ym5Sb0xXTm9hV3hrS0RJcFhHNGdJQ0FnY0dGa1pHbHVaem9nTW5KbGJTQXdYRzVjYmx4dUlDQW1YMTkwWlhoMFhHNGdJQ0FnYldGeVoybHVPaUF3WEc0Z0lDQWdjR0ZrWkdsdVp6b2dNQ0F6TGpWeVpXMGdNQ0F5Y21WdFhHNWNiaUFnSUNBcmJXVmthV0VvWENJOFBYUmhZbXhsZEZ3aUtWeHVJQ0FnSUNBZ2NHRmtaR2x1WnpvZ01GeHVYRzRnSUNaZlgySjFkSFJ2Ymx4dUlDQWdJR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYTF4dUlDQWdJRzFoY21kcGJqb2dNQ0F5Y21WdElEQWdNRnh1WEc0Z0lDQWdLMjFsWkdsaEtGd2lQRDEwWVdKc1pYUmNJaWxjYmlBZ0lDQWdJRzFoY21kcGJqb2dNRnh1WEc1Y2JpOHZWbWxrWlc4Z2RHVmhjMlZ5SUVOVVFWeHVMeTlVYUdseklHbHpJR1p2ZFc1a0lHOXVJSFJvWlNCb2IyMWxjR0ZuWlNCdmJteDVJSEpwWjJoMElHNXZkMXh1TG1OMFlTMTBaV0Z6WlhKY2JpQWdaR2x6Y0d4aGVUb2dkR0ZpYkdWY2JpQWdjR0ZrWkdsdVp6b2dNWEpsYlNBeWNtVnRYRzVjYmlBZ2RtbGtaVzljYmlBZ0lDQjNhV1IwYURvZ01UQXdKVnh1SUNBZ0lHaGxhV2RvZERvZ01UQXdKVnh1WEc0Z0lDdHRaV1JwWVNoY0lqdzlkR0ZpYkdWMFhDSXBYRzRnSUNBZ1pteGxlQzFtYkc5M09pQmpiMngxYlc1Y2JseHVJQ0FtWDE5aWIzaGNiaUFnSUNCd1lXUmthVzVuTFhKcFoyaDBPaUF5Y21WdFhHNWNiaUFnSUNBcmJXVmthV0VvWENJOFBYUmhZbXhsZEZ3aUtWeHVJQ0FnSUNBZ2NHRmtaR2x1WnpvZ01GeHVYRzRnSUNaZlgyaGxZV1JwYm1kY2JseHVJQ0FtWDE5MFpYaDBYRzRnSUNBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTW5KbGJWeHVYRzVjYmlBZ0psOWZiV1ZrYVdGY2JpQWdJQ0JvWldsbmFIUTZJRE13TUhCNFhHNGdJQ0FnYjNabGNtWnNiM2M2SUdocFpHUmxibHh1WEc0Z0lDQWdLMjFsWkdsaEtGd2lQRDEwWVdKc1pYUmNJaWxjYmlBZ0lDQWdJR2hsYVdkb2REb2dZWFYwYjF4dUlDQWdJQ0FnYldGeVoybHVMWFJ2Y0RvZ01uSmxiVnh1WEc1Y2JpOHZRMlZ1ZEdWeVpXUWdRMVJCWEc0dkwxUm9hWE1nYVhNZ1ptOTFibVFnYjI0Z2RHaGxJR2h2YldWd1lXZGxJRzl1YkhrZ2NtbG5hSFFnYm05M1hHNHVZM1JoTFdObGJuUmxjbHh1SUNCd1lXUmthVzVuT2lBeWNtVnRYRzRnSUhSbGVIUXRZV3hwWjI0NklHTmxiblJsY2x4dVhHNGdJQ1pmWDJobFlXUnBibWRjYmx4dUlDQW1YMTkwWlhoMFhHNGdJQ0FnY0dGa1pHbHVaem9nTUNBNGNtVnRYRzRnSUNBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTW5KbGJWeHVYRzRnSUNBZ0syMWxaR2xoS0Z3aVBEMTBZV0pzWlhSY0lpbGNiaUFnSUNBZ0lIQmhaR1JwYm1jNklEQmNibHh1SUNBbVgxOWlkWFIwYjI1Y2JseHVYRzVjYmk4dlUzVmljMk55YVdKbElFTlVRU0F0SUZSb2FYTWdhWE1nWm05MWJtUWdZWFFnZEdobElIUnZjQ0J2WmlCMGFHVWdabTl2ZEdWeVhHNHVZM1JoTFhOMVluTmpjbWxpWlZ4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWtaM0psWlc1Y2JpQWdZMjlzYjNJNklDUjNhR2wwWlZ4dUlDQXJkbVZ5ZEMxd1lXUmthVzVuS0RFc01TNDFLVnh1WEc0Z0lDWmZYMmhsWVdScGJtZGNiaUFnSUNCamIyeHZjam9nSkhkb2FYUmxYRzRnSUNBZ2RHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeVhHNWNiaUFnSmw5ZlltOTRYRzRnSUNBZ1pHbHpjR3hoZVRvZ2RHRmliR1ZjYmlBZ0lDQnRZWEpuYVc0NklEQWdZWFYwYjF4dUlDQWdJSGRwWkhSb09pQTNOU1ZjYmx4dUlDQXZMeUJVVDBSUElIVnpaU0JqYjJ3Z1kyeGhjM01nYVc1emRHVmhaQ0JtYjNJZ2QybGtkR2hjYmlBZ0psOWZhVzV3ZFhRdFlXUmtMVzl1WEc1Y2JseHVJQ0FtWDE5cGJuQjFkRnh1SUNBZ0lIQmhaR1JwYm1jNklDNDVjbVZ0WEc0Z0lDQWdkMmxrZEdnNklERXdNQ1ZjYmx4dUlDQW1YMTlpZFhSMGIyNWNiaUFnSUNCaWIzSmtaWEk2SURGd2VDQnpiMnhwWkNBa2QyaHBkR1ZjYmlBZ0lDQmpiMnh2Y2pvZ0pIZG9hWFJsWEc0Z0lDQWdabTl1ZEMxemFYcGxPaUF4TGpWeVpXMWNiaUFnSUNCdFlYSm5hVzR0YkdWbWREb2dNWEpsYlZ4dUlDQWdJSGRwWkhSb09pQXhNREFsWEc0Z0lDQWdkSEpoYm5OcGRHbHZiam9nWVd4c0lDNHljeUJsWVhObFhHNWNiaUFnSUNBbU9taHZkbVZ5WEc0Z0lDQWdJQ0F2S2xSb1pYTmxJSGRwYkd3Z2RISmhibk5wZEdsdmJpQnZiaUJvYjNabGNseHVJQ0FnSUNBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0pIZG9hWFJsWEc0Z0lDQWdJQ0JqYjJ4dmNqb2dKR2R5WldWdVhHNWNiaUFnSUNBcmJXVmthV0VvWENJOFBYUmhZbXhsZEZ3aUtWeHVJQ0FnSUNBZ2JXRnlaMmx1T2lBeGNtVnRJREFnTUNBd1hHNWNiaUFnSmw5ZmJXVnpjMkZuWlZ4dUlDQWdJR1JwYzNCc1lYazZJRzV2Ym1WY2JpQWdJQ0J3WVdSa2FXNW5MWFJ2Y0RvZ01pNDFjbVZ0WEc1Y2JpQWdKbDlmWlhKeWIzSmNiaUFnSUNCa2FYTndiR0Y1T2lCdWIyNWxYRzRnSUNBZ2NHRmtaR2x1WnkxMGIzQTZJREZ5WlcxY2JseHVJQ0FnSUNZdGJYTm5YRzRnSUNBZ0lDQjBaWGgwTFdGc2FXZHVPaUJqWlc1MFpYSmNibHh1WEc0dkwxTnBaR1ZpWVhJZ1ExUkJJQzBnVkdocGN5QnBjeUJtYjNWdVpDQnZiaUJwYm5SbGNtNWhiQ0J3WVdkbGN5QnZibXg1WEc0dVkzUmhMWE5wWkdWaVlYSmNiaUFnY0dGa1pHbHVaem9nTVhKbGJTQXdJREFnTlhKbGJWeHVJQ0IyWlhKMGFXTmhiQzFoYkdsbmJqb2dkRzl3WEc1Y2JpQWdLMjFsWkdsaEtGd2lQRDEwWVdKc1pYUmNJaWxjYmlBZ0lDQndZV1JrYVc1bk9pQXpjbVZ0SURKeVpXMWNibHh1SUNBbVgxOXRaV1JwWVZ4dUlDQWdJQzh2YUdWcFoyaDBPaUF4T0RCd2VGeHVJQ0FnSUM4dmIzWmxjbVpzYjNjNklHaHBaR1JsYmx4dVhHNGdJQ0FnSzIxbFpHbGhLRndpUEQxMFlXSnNaWFJjSWlsY2JseHVYRzRnSUNBZ2FXMW5YRzVjYmlBZ0psOWZhR1ZoWkdsdVoxeHVJQ0FnSUdadmJuUXRjMmw2WlRvZ01TNHlOWEpsYlZ4dUlDQWdJQ3QyWlhKMExXMWhjbWRwYmlndU5Td3VOU2xjYmx4dUlDQW1YMTkwWlhoMFhHNWNiaUFnSmw5ZlluVjBkRzl1WEc0Z0lDQWdiV0Z5WjJsdUxYUnZjRG9nTVhKbGJWeHVYRzR2TDBGa1pDQnpiMjFsSUhOd1lXTnBibWNnZDJobGJpQjBhR1Z5WlNkeklHMTFiSFJwY0d4bElITnBaR1ZpWVhJZ2FYUmxiWE5jYmk1amRHRXRjMmxrWldKaGNsOWZZblYwZEc5dUlDc2dMbU4wWVMxemFXUmxZbUZ5WDE5b1pXRmthVzVuTEZ4dUxtTjBZUzF6YVdSbFltRnlYMTkwWlhoMElDc2dMbU4wWVMxemFXUmxZbUZ5WDE5b1pXRmthVzVuWEc0Z0lHMWhjbWRwYmkxMGIzQTZJREp5WlcxY2JseHVYRzVjYmk4dlUyOWphV0ZzSUVOVVFTQXRJRlJvWlhObElHRnlaU0JqZFhKeVpXNTBiSGtnWm05MWJtUWdZWFFnZEdobElHSnZkSFJ2YlNCdlppQjBhR1VnWW14dlp5QndiM04wYzF4dUxtTjBZUzF6YjJOcFlXeGNiaUFnY0dGa1pHbHVaeTFzWldaME9pQXhjbVZ0WEc1Y2JpQWdMbWxqYjI1Y2JpQWdJQ0JtYVd4c09pQWtaM0psWlc1Y2JseHVJQ0FnSUNZNmFHOTJaWEpjYmlBZ0lDQWdJR1pwYkd3NklDUm5jbUZ3YUdsMFpWeHVYRzRnSUdGY2JpQWdJQ0FtT21odmRtVnlYRzRnSUNBZ0lDQjBaWGgwTFdSbFkyOXlZWFJwYjI0NklHNXZibVZjYmlJc0lpOHZSbTl2ZEdWeVhHNGtabTl2ZEdWeUxXaGxZV1JsY2kxdVlYWTZJRlJ5WldKMVkyaGxkQ0JOVTF4dVhHNW1iMjkwWlhKY2JseDBjR0ZrWkdsdVp5MWliM1IwYjIwNklEVnlaVzFjYmx4dVhIUXJiV1ZrYVdFb1hDSThQWFJoWW14bGRGd2lLVnh1WEhSY2RIQmhaR1JwYm1jNklEQmNibHh1WEc0dVptOXZkR1Z5TFdOdmNIbHlhV2RvZEZ4dVhIUmliM0prWlhJdGRHOXdPaUF4Y0hnZ2MyOXNhV1FnSkdOc2IzVmtYRzVjZEdScGMzQnNZWGs2SUhSaFlteGxYRzVjZEhCaFpHUnBibWM2SURKeVpXMWNibHgwZDJsa2RHZzZJREV3TUNWY2JseHVYSFFyYldWa2FXRW9YQ0k4UFhSaFlteGxkRndpS1Z4dVhIUmNkSEJoWkdScGJtYzZJREp5WlcwZ01DQXdJREJjYmx4MFhIUmthWE53YkdGNU9pQmliRzlqYTF4dVhHNWNkQ1pmWDJ4dloyOHRZbTk0WEc1Y2RGeDBkMmxrZEdnNklEUTFNSEI0WEc1Y2JseDBYSFFyYldWa2FXRW9YQ0k4UFhSaFlteGxkRndpS1Z4dVhIUmNkRngwWkdsemNHeGhlVG9nYVc1c2FXNWxMV0pzYjJOclhHNWNkRngwWEhSM2FXUjBhRG9nWVhWMGIxeHVYRzVjZEZ4MFhIUXViRzluYjE5ZmMzUmhZMnRsWkZ4dVhIUmNkRngwWEhSa2FYTndiR0Y1T2lCcGJteHBibVV0WW14dlkydGNibHgwWEhSY2RGeDBkMmxrZEdnNklESTFNSEI0WEc1Y2JseHVYSFFtWDE5aWIzaGNibHgwWEhSMFpYaDBMV0ZzYVdkdU9pQnlhV2RvZEZ4dVhHNWNkRngwSzIxbFpHbGhLRndpUGoxMFlXSnNaWFJjSWl3Z1hDSStQV1JsYzJ0MGIzQmNJaWxjYmx4MFhIUmNkSFJsZUhRdFlXeHBaMjQ2SUhKcFoyaDBYRzVjYmx4MFhIUnpiV0ZzYkZ4dVhIUmNkRngwWkdsemNHeGhlVG9nWW14dlkydGNibHgwWEhSY2RHWnZiblF0YzJsNlpUb2dNVFJ3ZUZ4dVhIUmNkRngwY0dGa1pHbHVaeTF5YVdkb2REb2dMalZ5WlcxY2JseHVYRzVjZEZ4MFhIUXJiV1ZrYVdFb1hDSStQWFJoWW14bGRGd2lMQ0JjSWo0OVpHVnphM1J2Y0Z3aUtWeHVYSFJjZEZ4MFhIUm1iMjUwTFhOcGVtVTZJREV5Y0hoY2JseDBYSFJjZEZ4MFpHbHpjR3hoZVRvZ2FXNXNhVzVsTFdKc2IyTnJYRzVjYmx4MFhIUmNkRngwSmpvNlltVm1iM0psWEc1Y2RGeDBYSFJjZENBZ1kyOXVkR1Z1ZERvZ0ozd25YRzVjYmx4MFhIUmNkRngwSmpwdWRHZ3RZMmhwYkdRb01TbGNibHgwWEhSY2RGeDBJQ0FtT2pwaVpXWnZjbVZjYmx4MFhIUmNkRngwSUNBZ0lHTnZiblJsYm5RNklDY25YRzVjYmx4MFhIUXVibUYyTFcxcGJtOXlYRzVjZEZ4MFhIUnNhVnh1WEhSY2RGeDBJQ0JoWEc1Y2RGeDBYSFFnSUNBZ1ptOXVkQzF6YVhwbE9pQXhOSEI0WEc1Y2RGeDBYSFFnSUNBZ0syMWxaR2xoS0Z3aVBqMTBZV0pzWlhSY0lpd2dYQ0krUFdSbGMydDBiM0JjSWlsY2JseDBYSFJjZENBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTVRKd2VGeHVYRzR1Wm05dmRHVnlMV1JwYzJOc1lXbHRaWEpjYmx4MGRHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeVhHNWNkSGRwWkhSb09pQXhNREFsWEc1Y2JseDBKbDlmWW05NFhHNWNkRngwWW05eVpHVnlPaUF4Y0hnZ2MyOXNhV1FnSkdadmIzUmxjaTEwWlhoMFhHNWNkRngwWkdsemNHeGhlVG9nYVc1c2FXNWxMV0pzYjJOclhHNWNkRngwZEdWNGRDMWhiR2xuYmpvZ1kyVnVkR1Z5WEc1Y2RGeDBjR0ZrWkdsdVp6b2dNakJ3ZUZ4dVhIUmNkRzFoY21kcGJqb2dOVEJ3ZUNCaGRYUnZJREV3Y0hoY2JseHVYSFJjZEN0dFpXUnBZU2hjSWo0OVpHVnphM1J2Y0Z3aUtWeHVYSFJjZENBZ2NHRmtaR2x1WnpvZ01qQndlQ0F4TURCd2VGeHVYRzVjZEhWc1hHNWNkRngwUUdWNGRHVnVaQ0FsYldWdWRWeHVYSFJjZEdScGMzQnNZWGs2SUhSaFlteGxYRzVjZEZ4MGJXRnlaMmx1T2lBd0lHRjFkRzljYmx4dVhIUmNkR3hwWEc1Y2RGeDBYSFJrYVhOd2JHRjVPaUIwWVdKc1pTMWpaV3hzWEc1Y2RGeDBYSFJpYjNKa1pYSTZJREZ3ZUNCemIyeHBaQ0FqUTBORFEwTkRYRzVjZEZ4MFhIUmliM0prWlhJdGNtbG5hSFE2SUc1dmJtVmNibHgwWEhSY2RHSnZjbVJsY2kxc1pXWjBMWE4wZVd4bE9pQmtZWE5vWldSY2JseDBYSFJjZEcxaGNtZHBiam9nTUNBeE1IQjRYRzVjZEZ4MFhIUndZV1JrYVc1bk9pQXVOWEpsYlZ4dVhIUmNkRngwSmpwc1lYTjBMV05vYVd4a1hHNWNkRngwWEhRZ0lHSnZjbVJsY2kxeWFXZG9kRG9nTVhCNElDTkRRME1nYzI5c2FXUmNibHgwWEhSY2RDWTZabWx5YzNRdFkyaHBiR1JjYmx4MFhIUmNkQ0FnWW05eVpHVnlMV3hsWm5RdGMzUjViR1U2SUhOdmJHbGtYRzVjYmx4MGFEWXNJSEFzSUhWc1hHNWNkRngwWm05dWRDMXphWHBsT2lBeE5IQjRYRzVjZEZ4MGJXRnlaMmx1TFdKdmRIUnZiVG9nTVhKbGJWeHVYRzVjZEZ4MEsyMWxaR2xoS0Z3aVBqMTBZV0pzWlhSY0lpd2dYQ0krUFdSbGMydDBiM0JjSWlsY2JseDBYSFJjZEdadmJuUXRjMmw2WlRvZ01USndlRnh1SWl3aVhHNUFhMlY1Wm5KaGJXVnpJR1poWkdWSmJseHVJQ0JtY205dFhHNGdJQ0FnYjNCaFkybDBlVG9nTUZ4dUlDQjBiMXh1SUNBZ0lHOXdZV05wZEhrNklERmNibHh1TG1obFlXUmxjbDlmYkc5bmJ5MWliM2hjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0pIZG9hWFJsWEc0Z0lHSnZjbVJsY2kxc1pXWjBPaUF4Y0hnZ2MyOXNhV1FnSkdKdmNtUmxja052Ykc5eVhHNGdJR0p2Y21SbGNpMXlhV2RvZERvZ01YQjRJSE52Ykdsa0lDUmliM0prWlhKRGIyeHZjbHh1SUNCdFlYSm5hVzQ2SURBZ1lYVjBiMXh1SUNCdFlYZ3RkMmxrZEdnNklERXlNREJ3ZUZ4dVhHNHZMeUJHYjNJZ1NVVTVYRzR1Ym04dFkzTnpZVzVwYldGMGFXOXVjeUF1YUdWaFpHVnlYMTlzYjJkdkxXSnZlRnh1SUNCd1lXUmthVzVuTFhSdmNEb2dNRnh1WEc0dWFHVmhaR1Z5WDE5c2IyZHZYRzRnSUdKaFkydG5jbTkxYm1RNklDUjNhR2wwWlZ4dVhHNWNiaTVzYjJkdlhHNGdJR1JwYzNCc1lYazZJR0pzYjJOclhHNGdJSEJoWkdScGJtYzZJREJ5WlcwZ01DQXdjbVZ0SURKeVpXMWNiaUFnZDJsa2RHZzZJRFl3TUhCNFhHNWNiaUFnSzIxbFpHbGhLRndpUERrd01IQjRYQ0lwWEc0Z0lDQWdkMmxrZEdnNklEUXdNSEI0WEc1Y2JpQWdLMjFsWkdsaEtGd2lQRFV3TUhCNFhDSXBYRzRnSUNBZ2NHRmtaR2x1WnpvZ01YSmxiVnh1SUNBZ0lIZHBaSFJvT2lBek1EQndlRnh1WEc0dkx5QkdiM0lnU1VVNVhHNHVibTh0WTNOellXNXBiV0YwYVc5dWN5QXViRzluYjF4dUlDQm9aV2xuYUhRNklEWTRjSGhjYmlBZ2NHRmtaR2x1WnpvZ01DQXhjbVZ0WEc1Y2JseHVjM1puWEc1Y2JpQWdjR0YwYUN3Z2NHOXNlV2R2Ymx4dUlDQWdJR1pwYkd3NklDUm5jbVZsYmx4dVhHNGdJQ1k2YUc5MlpYSWdjR0YwYUN4Y2JpQWdKanBvYjNabGNpQndiMng1WjI5dVhHNGdJQ0FnYjNCaFkybDBlVG9nTGpkY2JpQWdJQ0IwY21GdWMybDBhVzl1T2lCbWFXeHNJREF1TW5NZ1pXRnpaVnh1SUNBZ0lHWnBiR3d0YjNCaFkybDBlVG9nTUM0M1hHNWNiaTVzYjJkdlgxOXpkSEpsZEdOb1pXUmNiaUFnWkdsemNHeGhlVG9nWW14dlkydGNibHh1SUNBcmJXVmthV0VvWENJOE9UQXdjSGhjSWlsY2JpQWdJQ0JrYVhOd2JHRjVPaUJ1YjI1bFhHNWNiaTVzYjJkdlgxOXpkR0ZqYTJWa1hHNGdJR1JwYzNCc1lYazZJRzV2Ym1WY2JseHVJQ0FyYldWa2FXRW9YQ0k4T1RBd2NIaGNJaWxjYmlBZ0lDQmthWE53YkdGNU9pQmliRzlqYTF4dVhHNWNiaTh2SURJMUlIQnBaV05sYzF4dUxteHZaMjlmWDJkc2IySmxYRzRnSUhCaGRHaGNiaUFnTHk5TWIyZHZJRXh2WVdRZ1FXNXBiV0YwYVc5dVhHNGdJQzh2SUNBZ2IzQmhZMmwwZVRvZ01GeHVJQ0F2THlBZ0lHRnVhVzFoZEdsdmJqb2dabUZrWlVsdUlHVmhjMlV0YVc0Z01WeHVJQ0F2THlBZ0lHRnVhVzFoZEdsdmJpMW1hV3hzTFcxdlpHVTZJR1p2Y25kaGNtUnpYRzRnSUM4dklDQWdZVzVwYldGMGFXOXVMV1IxY21GMGFXOXVPaUF1TlhOY2JseHVJQ0F2THlCd1lYUm9PbTUwYUMxamFHbHNaQ2d4S1Z4dUlDQXZMeUFnSUdGdWFXMWhkR2x2Ymkxa1pXeGhlVG9nTUM0eGMxeHVYRzRnSUM4dklIQmhkR2c2Ym5Sb0xXTm9hV3hrS0RJcFhHNGdJQzh2SUNBZ1lXNXBiV0YwYVc5dUxXUmxiR0Y1T2lBd0xqRXhjMXh1WEc0Z0lDOHZJSEJoZEdnNmJuUm9MV05vYVd4a0tETXBYRzRnSUM4dklDQWdZVzVwYldGMGFXOXVMV1JsYkdGNU9pQXdMakl5YzF4dVhHNGdJQzh2SUhCaGRHZzZiblJvTFdOb2FXeGtLRFFwWEc0Z0lDOHZJQ0FnWVc1cGJXRjBhVzl1TFdSbGJHRjVPaUF3TGpFemMxeHVYRzRnSUM4dklIQmhkR2c2Ym5Sb0xXTm9hV3hrS0RVcFhHNGdJQzh2SUNBZ1lXNXBiV0YwYVc5dUxXUmxiR0Y1T2lBd0xqRTBjMXh1WEc0Z0lDOHZJSEJoZEdnNmJuUm9MV05vYVd4a0tEWXBYRzRnSUM4dklDQWdZVzVwYldGMGFXOXVMV1JsYkdGNU9pQXdMakUxYzF4dVhHNGdJQzh2SUhCaGRHZzZiblJvTFdOb2FXeGtLRGNwWEc0Z0lDOHZJQ0FnWVc1cGJXRjBhVzl1TFdSbGJHRjVPaUF3TGpFMmMxeHVYRzRnSUM4dklIQmhkR2c2Ym5Sb0xXTm9hV3hrS0RncFhHNGdJQzh2SUNBZ1lXNXBiV0YwYVc5dUxXUmxiR0Y1T2lBd0xqTTNjMXh1WEc0Z0lDOHZJSEJoZEdnNmJuUm9MV05vYVd4a0tEa3BYRzRnSUM4dklDQWdZVzVwYldGMGFXOXVMV1JsYkdGNU9pQXdMakU0YzF4dVhHNGdJQzh2SUhCaGRHZzZiblJvTFdOb2FXeGtLREV3S1Z4dUlDQXZMeUFnSUdGdWFXMWhkR2x2Ymkxa1pXeGhlVG9nTUM0eE9YTmNibHh1SUNBdkx5QndZWFJvT201MGFDMWphR2xzWkNneE1TbGNiaUFnTHk4Z0lDQmhibWx0WVhScGIyNHRaR1ZzWVhrNklEQXVNakJ6WEc1Y2JpQWdMeThnY0dGMGFEcHVkR2d0WTJocGJHUW9NVElwWEc0Z0lDOHZJQ0FnWVc1cGJXRjBhVzl1TFdSbGJHRjVPaUF3TGpJeGMxeHVYRzRnSUM4dklIQmhkR2c2Ym5Sb0xXTm9hV3hrS0RFektWeHVJQ0F2THlBZ0lHRnVhVzFoZEdsdmJpMWtaV3hoZVRvZ01DNHhNbk5jYmx4dUlDQXZMeUJ3WVhSb09tNTBhQzFqYUdsc1pDZ3hOQ2xjYmlBZ0x5OGdJQ0JoYm1sdFlYUnBiMjR0WkdWc1lYazZJREF1TWpOelhHNWNiaUFnTHk4Z2NHRjBhRHB1ZEdndFkyaHBiR1FvTVRVcFhHNGdJQzh2SUNBZ1lXNXBiV0YwYVc5dUxXUmxiR0Y1T2lBd0xqTTBjMXh1WEc0Z0lDOHZJSEJoZEdnNmJuUm9MV05vYVd4a0tERTJLVnh1SUNBdkx5QWdJR0Z1YVcxaGRHbHZiaTFrWld4aGVUb2dNQzR5TlhOY2JseHVYRzR1Ym04dFkzTnpZVzVwYldGMGFXOXVjeUF1Ykc5bmIxOWZaMnh2WW1WY2JpQWdjR0YwYUZ4dUlDQWdJR1pwYkd3NklDUm5jbVZsYmx4dUlDQWdJRzl3WVdOcGRIazZJREZjYmx4dUx5OGdUM1JvWlhJZ1kyeGhjM05sY3lCbWIzSWdZVzVwYldGcGRHOXVJRzFoZVdKbFhHNHZMeUF1Ykc5bmIxOWZkR1Y0ZEZ4dUx5OWNiaTh2SUM1c2IyZHZYMTlqYjIxdFpYSmpaVnh1THk4Z0lDQndZWFJvTENCd2IyeDVaMjl1WEc0dkwxeHVMeTljYmk4dklDNXNiMmR2WDE5MGNuVnpkRnh1THk4Z0lDQndZWFJvTENCd2IyeDVaMjl1WEc0dkwxeHVMeTljYmk4dklDNXNiMmR2WDE5MFlXZHNhVzVsWEc0dkx5QWdJSEJoZEdnc0lIQnZiSGxuYjI1Y2JpSXNJaTh2TFNCVWFHbHpJR052Ym5SaGFXNWxjaUJvYjJ4a0lIUm9aU0J0WVdsdUlHTnZiblJsYm5RZ2IyNGdaV0ZqYUNCd1lXZGxYRzR2THkwZ1NYUWdhWE1nWm05MWJtUWdiMjRnWVd4c0lHbHVkR1Z5Ym1Gc0lIQmhaMlZ6WEc1Y2JpOHZMU0JCYkd3Z1hDSk5ZV2x1WENJZ1kyeGhjM05sY3lCb1lYWmxJSE5vWVhKbElIUm9aWE5sSUhKMWJHVnpYRzRsYldGcGJseHVJQ0JrYVhOd2JHRjVPaUIwWVdKc1pWeHVJQ0J3WVdSa2FXNW5PaUF4Y21WdElESnlaVzFjYmx4dUxtMWhhVzR0YzNSaGJtUmhjbVJjYmlBZ1FHVjRkR1Z1WkNBbGJXRnBibHh1SUNCd1lXUmthVzVuTFdKdmRIUnZiVG9nTlhKbGJWeHVYRzRnSUNaZlgyTnZiblJsYm5SY2JseHVJQ0FnSUN0dFpXUnBZU2hjSWp3OWRHRmliR1YwWENJcFhHNGdJQ0FnSUNCMFpYaDBMV0ZzYVdkdU9pQnNaV1owWEc1Y2JpQWdJQ0FtTG1OdmJDMDNMVEV5WEc0Z0lDQWdJQ0J3WVdSa2FXNW5MWFJ2Y0RvZ01TNDFjbVZ0WEc0Z0lDQWdJQ0IyWlhKMGFXTmhiQzFoYkdsbmJqb2dkRzl3WEc1Y2JpQWdKbDlmZEdWNGRGeHVYRzRnSUNBZ0tpQXJJQ3BjYmlBZ0lDQWdJRzFoY21kcGJpMTBiM0E2SURGeVpXMWNibHh1SUNBZ0lHZ3lYRzRnSUNBZ0lDQXJjM1JoYm1SaGNtUXRhR1ZoWkdsdVp5Z3BYRzRnSUNBZ0lDQXJkbVZ5ZEMxd1lXUmthVzVuS0RFc01DbGNibHh1SUNBZ0lDOHZJRVJsWm1GMWJIUWdkVzV2Y21SbGNtVmtJR3hwYzNSeklHbHVJR052Ym5SbGJuUWdZWEpsWVhOY2JpQWdJQ0IxYkZ4dUlDQWdJQ0FnY0dGa1pHbHVaeTFzWldaME9pQXljbVZ0WEc0Z0lDQWdJQ0JzYVhOMExYTjBlV3hsT2lCa2FYTmpYRzVjYmlBZ0lDQWdJR3hwWEc0Z0lDQWdJQ0FnSUcxaGNtZHBiaTEwYjNBNklEQXVOWEpsYlZ4dVhHNGdJQ0FnTHk4Z1JHVm1ZWFZzZENCdmNtUmxjbVZrSUd4cGMzUnpJR2x1SUdOdmJuUmxiblFnWVhKbFlYTmNiaUFnSUNCdmJGeHVJQ0FnSUNBZ2NHRmtaR2x1Wnkxc1pXWjBPaUF5Y21WdFhHNGdJQ0FnSUNBdkwyeHBjM1F0YzNSNWJHVXRkSGx3WlRvZ2RYQndaWEl0Y205dFlXNWNibHh1SUNBZ0lDOHZJRXRsWlhBZ2MyMWhiR3dnYVcxaFoyVnpJR1p5YjIwZ1oyVjBkR2x1WnlCbmFXRnVkRnh1SUNBZ0lHbHRaMXh1SUNBZ0lDQWdhR1ZwWjJoME9pQmhkWFJ2WEc0Z0lDQWdJQ0IzYVdSMGFEb2dNVEF3SlZ4dVhHNGdJQ0FnSUNBdkx5QkhhWFpsSUhOdFlXeHNJR2x0WVdkbGN5QmhJR05zWVhOeklHOW1JQzVoZFhSdklITnZJSFJvWlhrZ1ptbDBJR052Y25KbFkzUnNlUzVjYmlBZ0lDQWdJQ1l1WVhWMGIxeHVJQ0FnSUNBZ0lDQjNhV1IwYURvZ1lYVjBiMXh1WEc1Y2JpOHZJRTFoYVc0Z1kyOXVkR1Z1ZENCaWJHOWpheUJ2YmlCTVpXRmtaWEp6YUdsd0lIQmhaMlZjYmk1dFlXbHVMV0pwYjNOY2JpQWdaR2x6Y0d4aGVUb2dkR0ZpYkdWY2JpQWdjR0ZrWkdsdVp6b2dNbkpsYlZ4dVhHNWNiaTh2SUUxaGFXNGdZMjl1ZEdWdWRDQmliRzlqYXlCdmJpQk9aWGR6SUhCaFoyVmNiaTV0WVdsdUxXNWxkM05jYmlBZ1FHVjRkR1Z1WkNBbGJXRnBibHh1WEc0dkwwMWhhVzRnWTI5dWRHVnVkQ0JzYjJOaGRHbHZibk1nZEdGaWJHVmNiaTVqYVhSNUxXTnZiSFZ0Ymx4dUlDQjNhV1IwYURveE16VndlRnh1TG1Ga1pISmxjM010WTI5c2RXMXVYRzRnSUhkcFpIUm9Pak16TlhCNFhHNHVjR2h2Ym1VdFkyOXNkVzF1WEc1Y2JpNXNiMk5oZEdsdmJpMXdhRzl1WlZ4dUlDQmpiMnh2Y2pva2JtbG5hSFJuY21WbGJseHVJQ0FtT21odmRtVnlYRzRnSUNBZ1kyOXNiM0k2SkdkeVpXVnVYRzVjYmx4dUx5OGdUV0ZwYmlCamIyNTBaVzUwSUdKc2IyTnJJRzl1SUVKc2IyY2dVRzl6ZENCd1lXZGxYRzR1YldGcGJpMXdiM04wWEc0Z0lFQmxlSFJsYm1RZ0pXMWhhVzVjYmx4dUlDQW1YMTkwWlhoMFhHNWNiaUFnSUNBcmJXVmthV0VvWENJOFBYUmhZbXhsZEZ3aUtWeHVJQ0FnSUNBZ2RHVjRkQzFoYkdsbmJqb2diR1ZtZEZ4dVhHNGdJQ0FnS2lBcklDcGNiaUFnSUNBZ0lHMWhjbWRwYmkxMGIzQTZJREZ5WlcxY2JseHVJQ0FnSUdneVhHNGdJQ0FnSUNBcmMzUmhibVJoY21RdGFHVmhaR2x1WnlncFhHNWNiaUFnSUNCb00xeHVJQ0FnSUNBZ0syMXBibTl5TFdobFlXUnBibWNvS1Z4dVhHNGdJQ0FnWm1sblkyRndkR2x2Ymx4dUlDQWdJQ0FnWTI5c2IzSTZJQ1JuY21Gd2FHbDBaVnh1SUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF1TnpWeVpXMWNiaUFnSUNBZ0lHMWhjbWRwYmkxMGIzQTZJREJjYmx4dUlDQWdJR0pzYjJOcmNYVnZkR1ZjYmlBZ0lDQWdJQ3RpYkc5amEzRjFiM1JsS0NsY2JseHVYRzR1WW5KbFlXUmpjblZ0WWx4dUlDQndZV1JrYVc1bkxXSnZkSFJ2YlRvZ01TNDFjbVZ0WEc0Z0lHWnZiblF0YzJsNlpUb3hOSEI0WEc1Y2JpQWdZVnh1SUNBZ0lHTnZiRzl5T2lSbmNtVmxibHh1SUNBZ0lDWTZhRzkyWlhKY2JpQWdJQ0FnSUdOdmJHOXlPaVJ1YVdkb2RHZHlaV1Z1WEc0Z0lITndZVzVjYmlBZ0lDQmpiMnh2Y2pva2MzUnZibVZjYmlJc0lpNW1iM0p0TFhOMFlXNWtZWEprWEc0Z0lHMWhjbWRwYmkxMGIzQTZJREp5WlcxY2JseHVJQ0JwYm5CMWRDeGNiaUFnYVc1d2RYUmJkSGx3WlQxY0ltVnRZV2xzWENKZExGeHVJQ0JwYm5CMWRGdDBlWEJsUFZ3aWJuVnRZbVZ5WENKZExGeHVJQ0JwYm5CMWRGdDBlWEJsUFZ3aWNHRnpjM2R2Y21SY0lsMHNYRzRnSUdsdWNIVjBXM1I1Y0dVOVhDSnpaV0Z5WTJoY0lsMHNYRzRnSUdsdWNIVjBXM1I1Y0dVOVhDSjBaV3hjSWwwc1hHNGdJR2x1Y0hWMFczUjVjR1U5WENKMFpYaDBYQ0pkTEZ4dUlDQnBibkIxZEZ0MGVYQmxQVndpZFhKc1hDSmRMRnh1SUNCcGJuQjFkRnQwZVhCbFBWd2lZMjlzYjNKY0lsMHNYRzRnSUdsdWNIVjBXM1I1Y0dVOVhDSmtZWFJsWENKZExGeHVJQ0JwYm5CMWRGdDBlWEJsUFZ3aWJtRnRaVndpWFN4Y2JpQWdhVzV3ZFhSYmRIbHdaVDFjSW1SaGRHVjBhVzFsWENKZExGeHVJQ0JwYm5CMWRGdDBlWEJsUFZ3aVpHRjBaWFJwYldVdGJHOWpZV3hjSWwwc1hHNGdJR2x1Y0hWMFczUjVjR1U5WENKdGIyNTBhRndpWFN4Y2JpQWdhVzV3ZFhSYmRIbHdaVDFjSW5ScGJXVmNJbDBzWEc0Z0lHbHVjSFYwVzNSNWNHVTlYQ0ozWldWclhDSmRMRnh1SUNCMFpYaDBZWEpsWVZ4dUlDQmNkR052Ykc5eU9pQWtjMmwwWlMxMFpYaDBMV052Ykc5eVhHNGdJRngwWW05eVpHVnlPaUF4Y0hnZ2MyOXNhV1FnSkdKdmNtUmxja052Ykc5eVhHNGdJQ0FnWW05NExYTnBlbWx1WnpvZ1kyOXVkR1Z1ZEMxaWIzaGNiaUFnWEhSaWIzSmtaWEl0Y21Ga2FYVnpPaUF3WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUF4Y21WdFhHNGdJRngwY0dGa1pHbHVaem9nTVhKbGJWeHVJQ0JjZEdScGMzQnNZWGs2SUdKc2IyTnJYRzRnSUZ4MGQybGtkR2c2SURFd01DVmNibHh1WEc0Z0lHeGhZbVZzWEc0Z0lDQWdaR2x6Y0d4aGVUb2dZbXh2WTJ0Y2JseHVJQ0JwYm5CMWRGdDBlWEJsUFZ3aVluVjBkRzl1WENKZExGeHVJQ0JwYm5CMWRGdDBlWEJsUFZ3aWNtVnpaWFJjSWwwc1hHNGdJR2x1Y0hWMFczUjVjR1U5WENKemRXSnRhWFJjSWwxY2JpQWdJQ0F2THlCaGJua2daR1ZtWVhWc2RDQmlkWFIwYjI0Z2MzUjViR1Z6SUhSb1lYUWdibVZsWkNCMGJ5QmlaU0JrYVdabVpYSmxiblFnYjI0Z1ptOXliWE1nWjI4Z2FHVnlaVnh1SUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yWEc1Y2JseHVJQ0FtWDE5amFHVmphMkp2ZUZ4dUlDQWdJR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYTF4dUlDQWdJR1pzYjJGME9pQnNaV1owSUNGcGJYQnZjblJoYm5SY2JpQWdJQ0IzYVdSMGFEb2dZWFYwYnlBaGFXMXdiM0owWVc1MFhHNWNiaUFnSmw5ZlkyaGxZMnRpYjNnZ0t5QnNZV0psYkZ4dUlDQWdJR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYTF4dUlDQWdJR1pzYjJGME9pQnNaV1owSUNGcGJYQnZjblJoYm5SY2JpQWdJQ0J0WVhKbmFXNDZJREV3Y0hnZ01UQndlQ0F5TUhCNElERXdjSGdnSVdsdGNHOXlkR0Z1ZEZ4dVhHNGdJQzV6Wld4bFkzUmliM2hjYmlBZ0lDQmlZV05yWjNKdmRXNWtPaUFrZDJocGRHVmNiaUFnSUNCaWIzSmtaWEl0Y21Ga2FYVnpPaUF3WEc0Z0lDQWdZM1Z5YzI5eU9pQndiMmx1ZEdWeVhHNGdJQ0FnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsWEc0Z0lDQWdhR1ZwWjJoME9pQTBPSEI0WEc1Y2JpQWdJQ0FtT2pwaFpuUmxjbHh1SUNBZ0lDQWdZMjlzYjNJNklDTmpZMk5jYmlBZ0lDQWdJR052Ym5SbGJuUTZJQ2ZpbHI0blhHNGdJQ0FnSUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdWY2JpQWdJQ0FnSUhSdmNEb2dNWEpsYlZ4dUlDQWdJQ0FnY21sbmFIUTZJQzQxY21WdFhHNGdJQ0FnSUNCM2FXUjBhRG9nTVhKbGJWeHVJQ0FnSUNBZ2FHVnBaMmgwT2lBeGNtVnRYRzVjYmx4dUlDQnpaV3hsWTNSY2JpQWdJQ0JpWVdOclozSnZkVzVrT2lBa2QyaHBkR1ZjYmlBZ0lDQmliM2d0YzJoaFpHOTNPaUJ1YjI1bFhHNGdJQ0FnWW05eVpHVnlMWEpoWkdsMWN6b2dNRnh1SUNBZ0lHSnZjbVJsY2pvZ01YQjRJSE52Ykdsa0lDUmliM0prWlhKRGIyeHZjbHh1SUNBZ0lHTnZiRzl5T2lBa2MzUnZibVZjYmlBZ0lDQmpkWEp6YjNJNklIQnZhVzUwWlhKY2JpQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amExeHVJQ0FnSUdadmJuUXRjMmw2WlRvZ01YSmxiVnh1SUNBZ0lHaGxhV2RvZERvZ05qQndlRnh1SUNBZ0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpWeHVYRzRnSUNBZ2NHRmtaR2x1Wnkxc1pXWjBPaUF4Y21WdFhHNGdJQ0FnZDJsa2RHZzZJREV3TUNWY2JpQWdJQ0F0ZDJWaWEybDBMV0Z3Y0dWaGNtRnVZMlU2Ym05dVpWeHVJQ0FnSUMxdGIzb3RZWEJ3WldGeVlXNWpaVG9nYm05dVpWeHVJQ0FnSUdGd2NHVmhjbUZ1WTJVNklHNXZibVZjYmx4dVhHNHVZMjl1ZEdGamRDMTFjMTlmWW5WMGRHOXVYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNSemJHRjBaVnh1SUNCdFlYZ3RkMmxrZEdnNk1UZ3pjSGhjYmlBZ1kyeGxZWEk2WW05MGFGeHVYRzVjYmk4dklFbEZPU0J2ZG1WeWNtbGtaVnh1THk4Z1ZYTnBibWNnYlc5a1pYSnVhWHB5SUdadmNpQm1aV0YwZFhKbElHUmxkR1ZqZEdsdmJseHVMbTV2TFdOemMyZHlZV1JwWlc1MGN5QXVjMlZzWldOMFltOTRPanBoWm5SbGNseHVJQ0I2TFdsdVpHVjRPaUF0TTF4dUlsMHNJbk52ZFhKalpWSnZiM1FpT2lJdmMyOTFjbU5sTHlKOSAqLyIsIi8vIFZhcnNcbiRiYXNlLWZvbnQtc2l6ZTogMTZweFxuJGJhc2UtbGluZS1oZWlnaHQ6IDEuNVxuXG4vLyBUeXBlZmFjZXNcbiRzYW5zOiBOZXdzIEN5Y2xlLCBzYW5zLXNlcmlmXG4kc2VyaWY6IFBsYXlmYWlyIERpc3BsYXksIHNlcmlmXG5cbi8vIEZvbnQgd2VpZ2h0c1xuJHhsaWdodDogMjAwXG4kbGlnaHQ6IDMwMFxuJG5vcm1hbDogNDAwXG4kc2VtaWJvbGQ6IDYwMFxuJGJvbGQ6IDcwMFxuXG4vLyBMaW5lIGhlaWdodCBmdW5jdGlvblxuQGZ1bmN0aW9uIGxpbmUtaGVpZ2h0KClcbiAgQHJldHVybiAkYmFzZS1mb250LXNpemUgKiAkYmFzZS1saW5lLWhlaWdodFxuXG4vLyBWYXIgbXVzdCBiZSBzcGVjaWZpZWQgYWZ0ZXIgcmV0dXJuaW5nIHRoZSBsaW5lLWhlaWdodCBmdW5jdGlvblxuJGNhbC1saW5lLWhlaWdodDogbGluZS1oZWlnaHQoKVxuXG4vLyBNaXhpbnNcbj12ZXJ0LW1hcmdpbigkdG9wOiAxLCAkYm90dG9tOiAxKVxuICBtYXJnaW4tdG9wOiAkY2FsLWxpbmUtaGVpZ2h0ICogJHRvcFxuICBtYXJnaW4tYm90dG9tOiAkY2FsLWxpbmUtaGVpZ2h0ICogJGJvdHRvbVxuXG49dmVydC1wYWRkaW5nKCR0b3A6IDEsICRib3R0b206IDEpXG4gIHBhZGRpbmctdG9wOiAkY2FsLWxpbmUtaGVpZ2h0ICogJHRvcFxuICBwYWRkaW5nLWJvdHRvbTogJGNhbC1saW5lLWhlaWdodCAqICRib3R0b21cblxuXG5odG1sXG4gIGZvbnQtc2l6ZTogJGJhc2UtZm9udC1zaXplXG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGVcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWRcblxuYm9keVxuICBjb2xvcjogJGNoYXJjb2FsXG4gIGxpbmUtaGVpZ2h0OiAxLjVcbiAgZm9udC1mYW1pbHk6ICRzYW5zXG4gIC8vYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRyYW5zcGFyZW50LCB0cmFuc3BhcmVudCBsaW5lLWhlaWdodCgpIC0gMXB4LCAkZ3JlZW4gMXB4ICwgdHJhbnNwYXJlbnQpXG4gIGJhY2tncm91bmQtc2l6ZTogYXV0byBsaW5lLWhlaWdodCgpXG4gIG1hcmdpbjogMFxuXG4vL1tjbGFzcyo9J19faGVhZGxpbmUnXVxuXG5cbi8vIFVzZWQgaW4gYXJ0aWNsZSBoZWFkZXJzIGluIHRoZSAuTWFpbiBjb2x1bW5zXG5bY2xhc3MqPSdfX2hlYWRpbmcnXVxuICBjb2xvcjogJGdyZWVuXG4gIGZvbnQtZmFtaWx5OiAkc2VyaWZcbiAgZm9udC1zaXplOiAyLjVyZW1cbiAgZm9udC13ZWlnaHQ6ICRub3JtYWxcbiAgbGluZS1oZWlnaHQ6IDFcbiAgbWFyZ2luLWJvdHRvbTogMnJlbVxuXG49c3RhbmRhcmQtaGVhZGluZygpXG4gIGNvbG9yOiAkZ3JlZW5cbiAgZm9udC1mYW1pbHk6ICRzZXJpZlxuICBmb250LXNpemU6IDJyZW1cbiAgZm9udC13ZWlnaHQ6ICRub3JtYWxcbiAgbGluZS1oZWlnaHQ6IDFcblxuXG4vLyBGb3VuZCBpbiB0aGUgTWFpbiBCbG9nIFBvc3RzXG49bWlub3ItaGVhZGluZygpXG4gIGNvbG9yOiAkbmlnaHRncmVlblxuICBmb250LWZhbWlseTogJHNlcmlmXG4gIGZvbnQtc2l6ZTogMS4yNXJlbVxuICBmb250LXdlaWdodDogJGJvbGRcbiAgbGluZS1oZWlnaHQ6IDFcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZVxuICArdmVydC1tYXJnaW4oMS41LDApXG5cblxuLy8gVXNlZCBpbiBhcnRpY2xlIGhlYWRlcnMgaW4gdGhlIC5NYWluIGNvbHVtbnNcbj1zbWFsbC1oZWFkaW5nKClcbiAgY29sb3I6ICRncmVlblxuICBmb250LWZhbWlseTogJHNlcmlmXG4gIGZvbnQtc2l6ZTogMS4zNzVyZW1cbiAgZm9udC13ZWlnaHQ6ICRub3JtYWxcbiAgbGluZS1oZWlnaHQ6IDFcblxuXG4vLyBGb3VuZCBpbiB0aGUgTWFpbiBCbG9nIFBvc3RzXG49YmxvY2txdW90ZSgpXG4gIGNvbG9yOiAkZ3JlZW5cbiAgZm9udC1mYW1pbHk6ICRzZXJpZlxuICBmb250LXNpemU6IDEuNXJlbVxuICBmb250LXN0eWxlOiBpdGFsaWNcbiAgZm9udC13ZWlnaHQ6ICRib2xkXG4gICt2ZXJ0LW1hcmdpbigxLjUsMS41KVxuXG5cbi8vaW5wdXRbdHlwZT1cInN1Ym1pdFwiXVxuXG5bY2xhc3MqPV9fYnV0dG9uXSxcbmlucHV0W3R5cGU9XCJidXR0b25cIl0sXG5pbnB1dFt0eXBlPVwicmVzZXRcIl1cbiAgYm9yZGVyOiAxcHggc29saWQgJGdyZWVuXG4gIGN1cnNvcjogcG9pbnRlclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgZm9udC1mYW1pbHk6ICRzZXJpZlxuICBmb250LXNpemU6IDEuMnJlbVxuICBmb250LXN0eWxlOiBpdGFsaWNcbiAgdGV4dC1hbGlnbjogY2VudGVyXG4gIHBhZGRpbmc6IC43NXJlbSAzcmVtXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZVxuICAvKkl0ZW1zIGZvciB0cmFuc2l0aW9uXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50XG4gIGNvbG9yOiAkZ3JlZW5cbiAgLypUcmFuc2l0aW9uIHNldHRpbmdzXG4gIHRyYW5zaXRpb246IGFsbCAuMnMgZWFzZVxuXG4gICY6aG92ZXJcbiAgICAvKlRoZXNlIHdpbGwgdHJhbnNpdGlvbiBvbiBob3ZlclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRncmVlblxuICAgIGNvbG9yOiAkd2hpdGVcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmVcblxuXG4vLyBpbiBwcm9ncmVzc1xuXG4vLyBNaXhpbnNcbj1idXR0b24oJGJhY2tncm91bmQsICRjb2xvciwgJGJvcmRlci1jb2xvcilcbiAgYm9yZGVyOiAxcHggc29saWQgJGJvcmRlci1jb2xvclxuICBmb250LWZhbWlseTogJHNlcmlmXG4gIGZvbnQtc2l6ZTogMS4ycmVtXG4gIGZvbnQtc3R5bGU6IGl0YWxpY1xuICBwYWRkaW5nOiAuNXJlbSAxcmVtXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZVxuICAvKkl0ZW1zIGZvciB0cmFuc2l0aW9uXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50XG4gIGNvbG9yOiAkY29sb3JcbiAgLypUcmFuc2l0aW9uIHNldHRpbmdzXG4gIHRyYW5zaXRpb246IGFsbCAuMnMgZWFzZVxuICAmOmhvdmVyXG4gICAgLypUaGVzZSB3aWxsIHRyYW5zaXRpb24gb24gaG92ZXJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JlZW5cbiAgICBjb2xvcjogJGNvbG9yXG5cblxuLmxvYWRlcl9fYnV0dG9uLmRpc2FibGVkXG4gIGJhY2tncm91bmQtY29sb3I6ICRjbG91ZFxuICBjb2xvcjogJGdyZWVuXG4gIGN1cnNvcjogZGVmYXVsdFxuICBvcGFjaXR5OiAuM1xuXG5cbnN1cFxuICArbWVkaWEoXCI8PXBob25lXCIpXG4gICAgdG9wOiAtLjI1ZW1cbiAgICBcbiIsIi8vIFNpdGUgY29sb3IgcGFsZXR0ZVxuJGdyZWVuOiAjMjY3ZTY0XG4kbmlnaHRncmVlbjogIzQ1NTY1MlxuJHNsYXRlOiAjZWNlZWU2XG5cbi8vIDUwIHNoYWRlcyBvZiBncmF5XG4kd2hpdGU6ICNmZmZcbiRzdGVhbTogI2Y4ZjhmOFxuJGNsb3VkOiAjZTVlNmU3XG4kZ3JhcGhpdGU6ICNjY2NcbiRzdG9uZTogIzdmN2U3ZVxuJGxlYWQ6ICM2ZTZiNmNcbiRjaGFyY29hbDogIzMzM1xuJGJsYWNrOiAjMDAwXG5cblxuJG1vYmlsZS1uYXYtYnRuOiAkc2xhdGVcblxuLy9Cb3JkZXIgQ29sb3JcbiRib3JkZXJDb2xvcjogJGdyYXBoaXRlXG5cbi8vIFNpdGUgYmFzZSB0ZXh0IGNvbG9yc1xuJHNpdGUtdGV4dC1jb2xvcjogJGNoYXJjb2FsXG4kc2l0ZS10ZXh0LWNvbG9yLWxpbms6ICRncmVlblxuJHNpdGUtdGV4dC1jb2xvci1saW5rLWhvdmVyOiAjNDU1NjUyXG5cblxuLy8gRm9vdGVyIGNvbG9yc1xuJGZvb3Rlci10ZXh0OiAkbmlnaHRncmVlblxuJGZvb3Rlci10ZXh0LWxpbms6ICRuaWdodGdyZWVuXG4kZm9vdGVyLXRleHQtbGluay1ob3ZlcjogJGdyZWVuXG4iLCIvLyBodHRwOi8vY3NzbW9qby5jb20vbGF0ZXN0X25ld19jbGVhcmZpeF9zb19mYXIvXG4uY2xlYXJmaXg6YWZ0ZXJcbiAgY29udGVudDogXCJcIlxuICBkaXNwbGF5OiB0YWJsZVxuICBjbGVhcjogYm90aFxuIiwiLmNvbnRhaW5lclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmXG4gIGJvcmRlci1sZWZ0OiAxcHggc29saWQgJGJvcmRlckNvbG9yXG4gIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICRib3JkZXJDb2xvclxuICBtYXJnaW46IDAgYXV0b1xuICBtYXgtd2lkdGg6IDEyMDBweFxuXG5cbltjbGFzcyo9J2NvbC0nXVxuICBkaXNwbGF5OiB0YWJsZS1jZWxsXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGVcblxuICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgIHRleHQtYWxpZ246IGNlbnRlclxuXG4vLzIgY29sdW1ucyB3aWRlXG4vLyBUaGlzIGlzIHVzZWQgaW4gdGhlIGZvb3RlciBmb3IgbmFycm93ZXIgY29sdW1ucyBvZiBsaW5rc1xuLmNvbC0yLTEyXG4gIHdpZHRoOiAyLzEyICogMTAwJVxuXG4gICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgd2lkdGg6IDEwMCVcblxuLy8zIGNvbHVtbnMgd2lkZVxuLy8gVGhpcyBpcyB1c2VkIGluIHRoZSBmb290ZXIgZm9yIGZhdHRlciBjb2x1bW5zIG9mIGxvbmdlci10aXRsZWQgbGlua3Ncbi5jb2wtMy0xMlxuICB3aWR0aDogMy8xMiAqIDEwMCVcblxuICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgIHdpZHRoOiAxMDAlXG5cbi8vIDQgY29sdW1ucyB3aWRlLlxuLy8gVGhpcyBpcyB1c2VkIGluIHRoZSBMZWFkZXJzaGlwIHBhZ2UuXG4uY29sLTQtMTJcbiAgd2lkdGg6IDQvMTIgKiAxMDAlXG5cbiAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICB3aWR0aDogMTAwJVxuXG5cbi8vIDUgY29sdW1ucyB3aWRlLlxuLy8gVGhpcyBpcyB1c2VkIGluIG1vc3Qgb2YgdGhlIGJhbm5lcnMuXG4vLyBJdCBpcyBhbHNvIHVzZWQgaW4gdGhlIE1haW4gbW9kdWxlIGFyZWEgdGhhdCBpbmNsdWRlcyB0aGUgc2lkZWJhci5cbi5jb2wtNS0xMlxuICB3aWR0aDogNS8xMiAqIDEwMCVcblxuICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgIHdpZHRoOiAxMDAlXG5cblxuLy8gNiBjb2x1bW5zIHdpZGUuXG4vLyBUaGlzIHdpbGwgc3BhbiBoYWxmIHRoZSBhdmFpbGFibGUgd2lkdGhcbi8vIFRoZSBDYXJkIE1vZHVsZSBvbiB0aGUgaG9tZXBhZ2UgdXNlcyB0aGlzXG4uY29sLTYtMTJcbiAgd2lkdGg6IDYvMTIgKiAxMDAlXG5cbiAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICB3aWR0aDogMTAwJVxuXG5cbi8vIDcgY29sdW1ucyB3aWRlLlxuLy8gVGhpcyBpcyB1c2VkIGluIG1vc3Qgb2YgdGhlIGJhbm5lcnMuXG4vLyBJdCBpcyBhbHNvIHVzZWQgaW4gdGhlIE1haW4gbW9kdWxlIGFyZWEgdGhhdCBpbmNsdWRlcyB0aGUgc2lkZWJhci5cbi8vIFtjbGFzcyo9Jy0tY29sLTctMTInXVxuLmNvbC03LTEyXG4gIHdpZHRoOiA3LzEyICogMTAwJVxuXG4gICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgd2lkdGg6IDEwMCVcblxuXG4vLyA4IGNvbHVtbnMgd2lkZS5cbi8vIFRoaXMgaXMgdXNlZCBpbiB0aGUgTGVhZGVyc2hpcCBwYWdlLlxuLmNvbC04LTEyXG4gIHdpZHRoOiA4LzEyICogMTAwJVxuXG4gICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgd2lkdGg6IDEwMCVcblxuXG4uY29sLTktMTJcbiAgd2lkdGg6IDkvMTIgKiAxMDAlXG5cbiAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICB3aWR0aDogMTAwJVxuXG5cbi5jb2wtMTAtMTJcbiAgd2lkdGg6IDEwLzEyICogMTAwJVxuXG4gICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgd2lkdGg6IDEwMCVcblxuLmNvbC0xMS0xMlxuICB3aWR0aDogMTEvMTIgKiAxMDAlXG5cbiAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICB3aWR0aDogMTAwJVxuIiwiLy9cblx0IF8gICAgICAgICAgICBfICAgICAgICAgICBfICAgICAgICAgICAgICAgICAgICAgICAgICAgXyBfXG5cdChfKSAgICAgICAgICB8IHwgICAgICAgICB8IHwgICAgICAgICAgICAgICAgICAgICAgICAgfCAoXylcblx0IF8gXyBfXyAgIF9fX3wgfF8gICBfICBfX3wgfCBfX18gICBfIF9fIF9fXyAgIF9fXyAgX198IHxfICBfXyBfXG5cdHwgfCAnXyBcXCAvIF9ffCB8IHwgfCB8LyBfYCB8LyBfIFxcIHwgJ18gYCBfIFxcIC8gXyBcXC8gX2AgfCB8LyBfYCB8XG5cdHwgfCB8IHwgfCAoX198IHwgfF98IHwgKF98IHwgIF9fLyB8IHwgfCB8IHwgfCAgX18vIChffCB8IHwgKF98IHxcblx0fF98X3wgfF98XFxfX198X3xcXF9fLF98XFxfXyxffFxcX19ffCB8X3wgfF98IHxffFxcX19ffFxcX18sX3xffFxcX18sX3xcblxuXHRTaW1wbGUsIGVsZWdhbnQgYW5kIG1haW50YWluYWJsZSBtZWRpYSBxdWVyaWVzIGluIFNhc3NcblxuXHRodHRwOi8vaW5jbHVkZS1tZWRpYS5jb21cblxuICBBdXRob3I6IEVkdWFyZG8gQm91Y2FzIDxtYWlsQGVkdWFyZG9ib3VjYXMuY29tPlxuXG5cbiAgQ3JlYXRlcyBhIGxpc3Qgb2YgZ2xvYmFsIGJyZWFrcG9pbnRzXG5cbiAgQGF1dGhvciBFZHVhcmRvIEJvdWNhc1xuXG4gIEBleGFtcGxlIHNjc3MgLSBDcmVhdGVzIGEgc2luZ2xlIGJyZWFrcG9pbnQgd2l0aCB0aGUgbGFiZWwgYHBob25lYFxuICAkYnJlYWtwb2ludHM6ICgncGhvbmUnOiAzMjBweCk7XG5cbiRicmVha3BvaW50czogKFwicGhvbmVcIjogNDgwcHgsIFwidGFibGV0XCI6IDc2OHB4LCBcImRlc2t0b3BcIjogMTAyM3B4KSAhZGVmYXVsdFxuXG4vL1xuICBDcmVhdGVzIGEgbGlzdCBvZiBzdGF0aWMgZXhwcmVzc2lvbnMgb3IgbWVkaWEgdHlwZXNcblxuICBAYXV0aG9yIEVkdWFyZG8gQm91Y2FzXG5cbiAgQGV4YW1wbGUgc2NzcyAtIENyZWF0ZXMgYSBzaW5nbGUgbWVkaWEgdHlwZSAoc2NyZWVuKVxuICAgJG1lZGlhLWV4cHJlc3Npb25zOiAoJ3NjcmVlbic6ICdzY3JlZW4nKTtcblxuICBAZXhhbXBsZSBzY3NzIC0gQ3JlYXRlcyBhIHN0YXRpYyBleHByZXNzaW9uIHdpdGggbG9naWNhbCBkaXNqdW5jdGlvbiAoT1Igb3BlcmF0b3IpXG4gICAkbWVkaWEtZXhwcmVzc2lvbnM6IChcbiAgXHRcdCdyZXRpbmEyeCc6IChcbiAgXHRcdFx0Jygtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpJyxcbiAgXHRcdFx0JyhtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSdcbiAgXHRcdClcbiAgXHQpO1xuXG4kbWVkaWEtZXhwcmVzc2lvbnM6IChcInNjcmVlblwiOiBcInNjcmVlblwiLCBcInByaW50XCI6IFwicHJpbnRcIiwgXCJoYW5kaGVsZFwiOiBcImhhbmRoZWxkXCIsIFwicmV0aW5hMnhcIjogKFwiKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMilcIiwgXCIobWluLXJlc29sdXRpb246IDE5MmRwaSlcIiksIFwicmV0aW5hM3hcIjogKFwiKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMylcIiwgXCIobWluLXJlc29sdXRpb246IDM1MGRwaSlcIikpICFkZWZhdWx0XG5cbi8vXG4gIERlZmluZXMgYSBudW1iZXIgdG8gYmUgYWRkZWQgb3Igc3VidHJhY3RlZCBmcm9tIGVhY2ggdW5pdCB3aGVuIGRlY2xhcmluZyBicmVha3BvaW50cyB3aXRoIGV4Y2x1c2l2ZSBpbnRlcnZhbHNcblxuICBAYXV0aG9yIEVkdWFyZG8gQm91Y2FzXG5cbiAgQGV4YW1wbGUgc2NzcyAtIEludGVydmFsIGZvciBwaXhlbHMgaXMgZGVmaW5lZCBhcyBgMWAgYnkgZGVmYXVsdFxuICAgQGluY2x1ZGUgbWVkaWEoXCI+MTI4cHhcIikge31cblxuICBHZW5lcmF0ZXM6XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMjlweCkge31cblxuICBAZXhhbXBsZSBzY3NzIC0gSW50ZXJ2YWwgZm9yIGVtcyBpcyBkZWZpbmVkIGFzIGAwLjAxYCBieSBkZWZhdWx0XG4gICBAaW5jbHVkZSBtZWRpYShcIj4yMGVtXCIpIHt9XG5cbiAgR2VuZXJhdGVzOlxuICBAbWVkaWEgKG1pbi13aWR0aDogMjAuMDFlbSkge31cblxuICBAZXhhbXBsZSBzY3NzIC0gSW50ZXJ2YWwgZm9yIHJlbXMgaXMgZGVmaW5lZCBhcyBgMC4xYCBieSBkZWZhdWx0LCB0byBiZSB1c2VkIHdpdGggYGZvbnQtc2l6ZTogNjIuNSU7YFxuICAgQGluY2x1ZGUgbWVkaWEoXCI+Mi4wcmVtXCIpIHt9XG5cbiAgR2VuZXJhdGVzOlxuICBAbWVkaWEgKG1pbi13aWR0aDogMi4xcmVtKSB7fVxuXG4kdW5pdC1pbnRlcnZhbHM6IChcInB4XCI6IDEsIFwiZW1cIjogMC4wMSwgXCJyZW1cIjogMC4xKSAhZGVmYXVsdFxuXG4vL1xuICBHZW5lcmF0ZXMgYSBtZWRpYSBxdWVyeSBiYXNlZCBvbiBhIGxpc3Qgb2YgY29uZGl0aW9uc1xuXG4gIEBhdXRob3IgRWR1YXJkbyBCb3VjYXNcblxuICBAcGFyYW0ge0xpc3R9ICAgJGNvbmRpdGlvbnMgIC0gTWVkaWEgcXVlcnkgY29uZGl0aW9uc1xuXG4gIEBleGFtcGxlIHNjc3MgLSBXaXRoIGEgc2luZ2xlIHNldCBicmVha3BvaW50XG4gICBAaW5jbHVkZSBtZWRpYShcIj5waG9uZVwiKSB7IH1cblxuICBAZXhhbXBsZSBzY3NzIC0gV2l0aCB0d28gc2V0IGJyZWFrcG9pbnRzXG4gICBAaW5jbHVkZSBtZWRpYShcIj5waG9uZVwiLCBcIjw9dGFibGV0XCIpIHsgfVxuXG4gIEBleGFtcGxlIHNjc3MgLSBXaXRoIGN1c3RvbSB2YWx1ZXNcbiAgIEBpbmNsdWRlIG1lZGlhKFwiPj0zNThweFwiLCBcIjw4NTBweFwiKSB7IH1cblxuICBAZXhhbXBsZSBzY3NzIC0gV2l0aCBzZXQgYnJlYWtwb2ludHMgd2l0aCBjdXN0b20gdmFsdWVzXG4gICBAaW5jbHVkZSBtZWRpYShcIj5kZXNrdG9wXCIsIFwiPD0xMzUwcHhcIikgeyB9XG5cbiAgQGV4YW1wbGUgc2NzcyAtIFdpdGggYSBzdGF0aWMgZXhwcmVzc2lvblxuICAgQGluY2x1ZGUgbWVkaWEoXCJyZXRpbmEyeFwiKSB7IH1cblxuICBAZXhhbXBsZSBzY3NzIC0gTWl4aW5nIGV2ZXJ5dGhpbmdcbiAgIEBpbmNsdWRlIG1lZGlhKFwiPj0zNTBweFwiLCBcIjx0YWJsZXRcIiwgXCJyZXRpbmEzeFwiKSB7IH1cblxuXG49bWVkaWEoJGNvbmRpdGlvbnMuLi4pXG4gIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggbGVuZ3RoKCRjb25kaXRpb25zKVxuICAgICRjb25kaXRpb25zOiBzZXQtbnRoKCRjb25kaXRpb25zLCAkaSwgcGFyc2UtZXhwcmVzc2lvbihudGgoJGNvbmRpdGlvbnMsICRpKSkpXG4gICRicmFuY2hlczogZ2V0LXF1ZXJ5LWJyYW5jaGVzKCRjb25kaXRpb25zKVxuICAkcXVlcnk6IFwiXCJcbiAgQGVhY2ggJGJyYW5jaCBpbiAkYnJhbmNoZXNcbiAgICBAaWYgc3RyLWxlbmd0aCgkcXVlcnkpICE9IDBcbiAgICAgICRxdWVyeTogJHF1ZXJ5ICsgXCIsIFwiXG4gICAgJHF1ZXJ5OiAkcXVlcnkgKyAkYnJhbmNoXG4gIEBtZWRpYSAjeyRxdWVyeX1cbiAgICBAY29udGVudFxuXG4vL1xuICBSZWFkcyBhIGxpc3Qgb2YgbWVkaWEgcXVlcnkgZXhwcmVzc2lvbnMgYW5kIHNlcGFyYXRlcyBsb2dpY2FsIGRpc2p1bmN0aW9ucyBpbnRvIGRpZmZlcmVudCBicmFuY2hlc1xuXG4gIEBhdXRob3IgRWR1YXJkbyBCb3VjYXNcbiAgQHBhcmFtIHtMaXN0fSAgICRleHByZXNzaW9ucyAgLSBsaXN0IG9mIGV4cHJlc3Npb25zXG4gIEB0aHJvd3MgYCRleHByZXNzaW9uYCBpcyBub3QgYSB2YWxpZCBleHByZXNzaW9uXG5cbiAgQHJldHVybiB7TGlzdCB8IE51bGx9XG5cblxuQGZ1bmN0aW9uIGdldC1xdWVyeS1icmFuY2hlcygkZXhwcmVzc2lvbnMpXG4gICRyZXN1bHQ6IFwiXCJcbiAgJGhhcy1ncm91cHM6IGZhbHNlXG4gIC8vIEdldHRpbmcgaW5pdGlhbCBzbmFwc2hvdCBhbmQgbG9va2luZyBmb3IgZ3JvdXBzXG4gIEBlYWNoICRleHByZXNzaW9uIGluICRleHByZXNzaW9uc1xuICAgIEBpZiBzdHItbGVuZ3RoKCRyZXN1bHQpICE9IDBcbiAgICAgICRyZXN1bHQ6ICRyZXN1bHQgKyBcIiBhbmQgXCJcbiAgICBAaWYgdHlwZS1vZigkZXhwcmVzc2lvbikgPT0gXCJzdHJpbmdcIlxuICAgICAgJHJlc3VsdDogJHJlc3VsdCArICRleHByZXNzaW9uXG4gICAgQGVsc2UgaWYgdHlwZS1vZigkZXhwcmVzc2lvbikgPT0gXCJsaXN0XCJcbiAgICAgICRyZXN1bHQ6ICRyZXN1bHQgKyBudGgoJGV4cHJlc3Npb24sIDEpXG4gICAgICAkaGFzLWdyb3VwczogdHJ1ZVxuICAgIEBlbHNlXG4gICAgICBAd2FybiBcIiN7JGV4cHJlc3Npb259IGlzIG5vdCBhIHZhbGlkIGV4cHJlc3Npb24uXCJcbiAgLy8gSWYgd2UgaGF2ZSBncm91cHMsIHdlIGhhdmUgdG8gY3JlYXRlIGFsbCBwb3NzaWJsZSBjb21iaW5hdGlvbnNcbiAgQGlmICRoYXMtZ3JvdXBzXG4gICAgQGVhY2ggJGV4cHJlc3Npb24gaW4gJGV4cHJlc3Npb25zXG4gICAgICBAaWYgdHlwZS1vZigkZXhwcmVzc2lvbikgPT0gXCJsaXN0XCJcbiAgICAgICAgJGZpcnN0OiBudGgoJGV4cHJlc3Npb24sIDEpXG4gICAgICAgIEBlYWNoICRtZW1iZXIgaW4gJGV4cHJlc3Npb25cbiAgICAgICAgICBAaWYgJG1lbWJlciAhPSAkZmlyc3RcbiAgICAgICAgICAgIEBlYWNoICRwYXJ0aWFsIGluICRyZXN1bHRcbiAgICAgICAgICAgICAgJHJlc3VsdDogam9pbigkcmVzdWx0LCBzdHItcmVwbGFjZS1maXJzdCgkZmlyc3QsICRtZW1iZXIsICRwYXJ0aWFsKSlcbiAgQHJldHVybiAkcmVzdWx0XG5cbi8vXG4gIFBhcnNlcyBhIHN0cmluZyB0byBmb3JtIGEgbWVkaWEgcXVlcnkgZXhwcmVzc2lvblxuXG4gIEBhdXRob3IgRWR1YXJkbyBCb3VjYXNcblxuICBAcGFyYW0ge1N0cmluZ30gICAkZXhwcmVzc2lvbiAgLSBleHByZXNzaW9uIChpbiBzdHJpbmcpXG4gIEB0aHJvd3MgRXhwcmVzc2lvbiB3aXRoIHR5cGUgYHR5cGUtb2YoJGV4cHJlc3Npb24pYCBkZXRlY3RlZCwgc3RyaW5nIGV4cGVjdGVkXG4gIEB0aHJvd3MgYCRleHByZXNzaW9uYCBpcyBtaXNzaW5nIGFuIG9wZXJhdG9yXG4gIEB0aHJvd3MgVW5rbm93biB1bml0OiBgJHVuaXRgXG5cbiAgQHJldHVybiB7U3RyaW5nIHwgTnVsbH1cblxuXG5AZnVuY3Rpb24gcGFyc2UtZXhwcmVzc2lvbigkZXhwcmVzc2lvbilcbiAgJG9wZXJhdG9yOiBcIlwiXG4gICR2YWx1ZTogXCJcIlxuICAkZWxlbWVudDogXCJcIlxuICAkcmVzdWx0OiBcIlwiXG4gICRpcy13aWR0aDogdHJ1ZVxuICBAaWYgdHlwZS1vZigkZXhwcmVzc2lvbikgIT0gXCJzdHJpbmdcIlxuICAgIEB3YXJuIFwiRXhwcmVzc2lvbiB3aXRoIHR5cGUgYCN7dHlwZS1vZigkZXhwcmVzc2lvbil9YCBkZXRlY3RlZCwgc3RyaW5nIGV4cGVjdGVkLlwiXG4gIC8vIFNlcGFyYXRpbmcgdGhlIG9wZXJhdG9yIGZyb20gdGhlIHJlc3Qgb2YgdGhlIGV4cHJlc3Npb25cbiAgQGlmIHN0ci1zbGljZSgkZXhwcmVzc2lvbiwgMiwgMikgPT0gXCI9XCJcbiAgICAkb3BlcmF0b3I6IHN0ci1zbGljZSgkZXhwcmVzc2lvbiwgMSwgMilcbiAgICAkdmFsdWU6IHN0ci1zbGljZSgkZXhwcmVzc2lvbiwgMylcbiAgQGVsc2VcbiAgICAkb3BlcmF0b3I6IHN0ci1zbGljZSgkZXhwcmVzc2lvbiwgMSwgMSlcbiAgICAkdmFsdWU6IHN0ci1zbGljZSgkZXhwcmVzc2lvbiwgMilcbiAgLy8gQ2hlY2tpbmcgd2hhdCB0eXBlIG9mIGV4cHJlc3Npb24gd2VyZSBkZWFsaW5nIHdpdGhcbiAgQGlmIG1hcC1oYXMta2V5KCRicmVha3BvaW50cywgJHZhbHVlKVxuICAgICRyZXN1bHQ6IG1hcC1nZXQoJGJyZWFrcG9pbnRzLCAkdmFsdWUpXG4gIEBlbHNlIGlmIG1hcC1oYXMta2V5KCRtZWRpYS1leHByZXNzaW9ucywgJGV4cHJlc3Npb24pXG4gICAgJHJlc3VsdDogbWFwLWdldCgkbWVkaWEtZXhwcmVzc2lvbnMsICRleHByZXNzaW9uKVxuICAgICRpcy13aWR0aDogZmFsc2VcbiAgQGVsc2VcbiAgICAkcmVzdWx0OiB0by1udW1iZXIoJHZhbHVlKVxuICBAaWYgJGlzLXdpZHRoXG4gICAgJHVuaXQ6IHVuaXQoJHJlc3VsdClcbiAgICAkaW50ZXJ2YWw6IDBcbiAgICBAaWYgbWFwLWhhcy1rZXkoJHVuaXQtaW50ZXJ2YWxzLCAkdW5pdClcbiAgICAgICRpbnRlcnZhbDogbWFwLWdldCgkdW5pdC1pbnRlcnZhbHMsICR1bml0KVxuICAgIEBlbHNlXG4gICAgICBAd2FybiBcIlVua25vd24gdW5pdDogI3skdW5pdH1cIlxuICAgIEBpZiAkb3BlcmF0b3IgPT0gXCI+XCJcbiAgICAgICRlbGVtZW50OiBcIihtaW4td2lkdGg6ICN7JHJlc3VsdCArICRpbnRlcnZhbH0pXCJcbiAgICBAZWxzZSBpZiAkb3BlcmF0b3IgPT0gXCI8XCJcbiAgICAgICRlbGVtZW50OiBcIihtYXgtd2lkdGg6ICN7JHJlc3VsdCAtICRpbnRlcnZhbH0pXCJcbiAgICBAZWxzZSBpZiAkb3BlcmF0b3IgPT0gXCI+PVwiXG4gICAgICAkZWxlbWVudDogXCIobWluLXdpZHRoOiAjeyRyZXN1bHR9KVwiXG4gICAgQGVsc2UgaWYgJG9wZXJhdG9yID09IFwiPD1cIlxuICAgICAgJGVsZW1lbnQ6IFwiKG1heC13aWR0aDogI3skcmVzdWx0fSlcIlxuICAgIEBlbHNlXG4gICAgICBAd2FybiBcIiN7JGV4cHJlc3Npb259IGlzIG1pc3NpbmcgYW4gb3BlcmF0b3IuXCJcbiAgQGVsc2VcbiAgICAkZWxlbWVudDogJHJlc3VsdFxuICBAcmV0dXJuICRlbGVtZW50XG5cbi8vXG4gIFJlcGxhY2VzIHRoZSBmaXJzdCBvY2N1cmVuY2Ugb2YgdGhlIHN0cmluZyB3aXRoIHRoZSByZXBsYWNlbWVudCBzdHJpbmdcblxuICBAYXV0aG9yIEVkdWFyZG8gQm91Y2FzXG5cbiAgQHBhcmFtIHtTdHJpbmd9ICAgJHNlYXJjaCAgLSBUaGUgdmFsdWUgYmVpbmcgc2VhcmNoZWQgZm9yXG4gIEBwYXJhbSB7U3RyaW5nfSAgICRyZXBsYWNlICAtIFRoZSByZXBsYWNlbWVudCBzdHJpbmdcbiAgQHBhcmFtIHtTdHJpbmd9ICAgJHN1YmplY3QgIC0gVGhlIHN0cmluZyBiZWluZyByZXBsYWNlZCBvblxuXG4gIEByZXR1cm4ge1N0cmluZyB8IE51bGx9XG5cblxuQGZ1bmN0aW9uIHN0ci1yZXBsYWNlLWZpcnN0KCRzZWFyY2gsICRyZXBsYWNlLCAkc3ViamVjdClcbiAgJHNlYXJjaC1zdGFydDogc3RyLWluZGV4KCRzdWJqZWN0LCAkc2VhcmNoKVxuICBAaWYgJHNlYXJjaC1zdGFydCA9PSBudWxsXG4gICAgQHJldHVybiAkc3ViamVjdFxuICAkcmVzdWx0OiBzdHItc2xpY2UoJHN1YmplY3QsIDAsICRzZWFyY2gtc3RhcnQgLSAxKVxuICAkcmVzdWx0OiAkcmVzdWx0ICsgJHJlcGxhY2VcbiAgJHJlc3VsdDogJHJlc3VsdCArIHN0ci1zbGljZSgkc3ViamVjdCwgJHNlYXJjaC1zdGFydCArIHN0ci1sZW5ndGgoJHNlYXJjaCkpXG4gIEByZXR1cm4gJHJlc3VsdFxuXG4vL1xuICBDYXN0cyBhIG51bWJlciB0byBhIHN0cmluZ1xuXG4gIEBhdXRob3IgSHVnbyBHaXJhdWRlbFxuXG4gIEBwYXJhbSB7U3RyaW5nfSAgICRzdHJpbmcgIC0gTnVtYmVyIHRvIGJlIHBhcnNlZFxuXG4gIEByZXR1cm4ge0xpc3QgfCBOdWxsfVxuXG5AZnVuY3Rpb24gdG8tbnVtYmVyKCRzdHJpbmcpXG4gIC8vIE1hdHJpY2VzXG4gICRzdHJpbmdzOiBcIjBcIiBcIjFcIiBcIjJcIiBcIjNcIiBcIjRcIiBcIjVcIiBcIjZcIiBcIjdcIiBcIjhcIiBcIjlcIlxuICAkbnVtYmVyczogMCAxIDIgMyA0IDUgNiA3IDggOVxuICAvLyBSZXN1bHRcbiAgJHJlc3VsdDogMFxuICAkZGl2aWRlcjogMFxuICAkbWludXM6IGZhbHNlXG4gIC8vIExvb3BpbmcgdGhyb3VnaCBhbGwgY2hhcmFjdGVyc1xuICBAZm9yICRpIGZyb20gMSB0aHJvdWdoIHN0ci1sZW5ndGgoJHN0cmluZylcbiAgICAkY2hhcmFjdGVyOiBzdHItc2xpY2UoJHN0cmluZywgJGksICRpKVxuICAgICRpbmRleDogaW5kZXgoJHN0cmluZ3MsICRjaGFyYWN0ZXIpXG4gICAgQGlmICRjaGFyYWN0ZXIgPT0gXCItXCJcbiAgICAgICRtaW51czogdHJ1ZVxuICAgIEBlbHNlIGlmICRjaGFyYWN0ZXIgPT0gXCIuXCJcbiAgICAgICRkaXZpZGVyOiAxXG4gICAgQGVsc2VcbiAgICAgIEBpZiB0eXBlLW9mKCRpbmRleCkgIT0gXCJudW1iZXJcIlxuICAgICAgICAkcmVzdWx0OiBpZigkbWludXMsICRyZXN1bHQgKiAtMSwgJHJlc3VsdClcbiAgICAgICAgQHJldHVybiBfbGVuZ3RoKCRyZXN1bHQsIHN0ci1zbGljZSgkc3RyaW5nLCAkaSkpXG4gICAgICAkbnVtYmVyOiBudGgoJG51bWJlcnMsICRpbmRleClcbiAgICAgIEBpZiAkZGl2aWRlciA9PSAwXG4gICAgICAgICRyZXN1bHQ6ICRyZXN1bHQgKiAxMFxuICAgICAgQGVsc2VcbiAgICAgICAgLy8gTW92ZSB0aGUgZGVjaW1hbCBkb3QgdG8gdGhlIGxlZnRcbiAgICAgICAgJGRpdmlkZXI6ICRkaXZpZGVyICogMTBcbiAgICAgICAgJG51bWJlcjogJG51bWJlciAvICRkaXZpZGVyXG4gICAgICAkcmVzdWx0OiAkcmVzdWx0ICsgJG51bWJlclxuICBAcmV0dXJuIGlmKCRtaW51cywgJHJlc3VsdCAqIC0xLCAkcmVzdWx0KVxuXG5AZnVuY3Rpb24gX2xlbmd0aCgkbnVtYmVyLCAkdW5pdClcbiAgJHN0cmluZ3M6IFwicHhcIiBcImNtXCIgXCJtbVwiIFwiJVwiIFwiY2hcIiBcInBpY2FcIiBcImluXCIgXCJlbVwiIFwicmVtXCIgXCJwdFwiIFwicGNcIiBcImV4XCIgXCJ2d1wiIFwidmhcIiBcInZtaW5cIiBcInZtYXhcIlxuICAkdW5pdHM6IDFweCAxY20gMW1tIDElIDFjaCAxcGljYSAxaW4gMWVtIDFyZW0gMXB0IDFwYyAxZXggMXZ3IDF2aCAxdm1pbiAxdm1heFxuICAkaW5kZXg6IGluZGV4KCRzdHJpbmdzLCAkdW5pdClcbiAgQGlmIHR5cGUtb2YoJGluZGV4KSAhPSBcIm51bWJlclwiXG4gICAgQHdhcm4gXCJVbmtub3duIHVuaXQgYCN7JHVuaXR9YC5cIlxuICAgIEByZXR1cm4gZmFsc2VcbiAgQHJldHVybiAkbnVtYmVyICogbnRoKCR1bml0cywgJGluZGV4KVxuIiwiKlxuICBtYXJnaW46IDBcbiAgcGFkZGluZzogMFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94XG5cbiAgJjo6YWZ0ZXIsICY6OmJlZm9yZVxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3hcblxuYm9keVxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2xhdGVcbiAgcGFkZGluZzogMFxuXG5hXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZVxuICBjb2xvcjokZ3JlZW5cbiAgJjpob3ZlclxuICAgIGNvbG9yOiRuaWdodGdyZWVuXG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmVcblxuLy9SZXNldCBmbGV4Ym94IHNldHRpbmdzIHdoZW4gcmVzcG9uZGluZyBiZWxvdyBkZXNrdG9wXG49cmVzcG9uc2l2ZS1zdGFja1xuICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgIGZsZXgtZmxvdzogY29sdW1uXG4iLCIvLyBUaGUgdGFibGVzIHN0YXJ0IHRvIGxvb2sgZnVnbHkgYXQgYXJvdW5kIDcwMHB4LCBzbyBsZXQncyBzdGFydCByZXNwb25kaW5nIHRoZXJlXG4kdGFibGUtYnJlYWs6IFwiPD03MDBweFwiXG5cbnRhYmxlXG5cdG1hcmdpbjogMCAwIDEuNWVtXG5cdHdpZHRoOiAxMDAlXG5cbnRyXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkY2xvdWRcblxuICArbWVkaWEoJHRhYmxlLWJyZWFrKVxuICAgIG1hcmdpbi10b3A6IDAgIWltcG9ydGFudDtcblxuICAgICY6Zmlyc3QtY2hpbGRcbiAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAkY2xvdWRcblxuICAmOm50aC1jaGlsZChldmVuKVxuICAgIGJhY2tncm91bmQtY29sb3I6ICRzdGVhbVxuXG50ZFxuICB2ZXJ0aWNhbC1hbGlnbjogdG9wXG4gIHBhZGRpbmc6IDEwcHggNXB4XG5cbiAgK21lZGlhKCR0YWJsZS1icmVhaylcbiAgICBtYXJnaW4tdG9wOiAwICFpbXBvcnRhbnQ7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlXG4gICAgcGFkZGluZy1sZWZ0OiA0MCVcblxuICAgICY6YmVmb3JlXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgICAgIHRvcDogNnB4XG4gICAgICBsZWZ0OiA2cHhcbiAgICAgIHdpZHRoOiA0MCVcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDEwcHhcbiAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXBcbiAgICAgIGZvbnQtd2VpZ2h0OiAkc2VtaWJvbGRcblxuXG4gICAgJjpudGgtb2YtdHlwZSgxKVxuICAgICAgJjpiZWZvcmVcbiAgICAgICAgY29udGVudDogXCJDaXR5OiBcIlxuICAgICY6bnRoLW9mLXR5cGUoMilcbiAgICAgICY6YmVmb3JlXG4gICAgICAgIGNvbnRlbnQ6IFwiQWRkcmVzczogXCJcbiAgICAmOm50aC1vZi10eXBlKDMpXG4gICAgICAmOmJlZm9yZVxuICAgICAgICBjb250ZW50OiBcIlBob25lOiBcIlxuXG50aGVhZFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkY2xvdWRcblxuICB0clxuICAgIC8vSGlkZSB0aGUgdGhlYWQgaW5mb3JtYXRpb24gaW4gYW4gYWNjZXNzaWJsZSB3YXlcblxuICAgICttZWRpYSgkdGFibGUtYnJlYWspXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgICAgIHRvcDogLTk5OTlweFxuICAgICAgbGVmdDogLTk5OTlweFxuXG4gIHRoXG4gICAgZm9udC13ZWlnaHQ6ICRzZW1pYm9sZFxuICAgIHRleHQtYWxpZ246IGxlZnRcbiAgICBwYWRkaW5nOiA1cHhcblxudGFibGUsIHRoZWFkLCB0Ym9keSwgdGgsIHRkLCB0clxuICArbWVkaWEoJHRhYmxlLWJyZWFrKVxuICAgIGRpc3BsYXk6IGJsb2NrXG4iLCIubmF2LW1pbm9yXG4gIGRpc3BsYXk6IGJsb2NrXG4gIHRleHQtYWxpZ246IHJpZ2h0XG5cbiAgJl9fY29udGFpbmVyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlXG4gICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAkYm9yZGVyQ29sb3JcbiAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAkYm9yZGVyQ29sb3JcbiAgICBtYXJnaW46IDAgYXV0b1xuICAgIHBhZGRpbmc6IDFyZW0gMS41cmVtXG4gICAgbWF4LXdpZHRoOiAxMjAwcHhcblxuICAgICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgICAvL2Rpc3BsYXk6IG5vbmVcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlclxuXG4gIGxpXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrXG5cbiAgICAmOmFmdGVyXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgICAgIGNvbnRlbnQ6ICcgfCAnXG4gICAgICBjb2xvcjogJGdyZWVuXG4gICAgICBtYXJnaW46IDAgMnB4IDAgLjNyZW1cblxuICAgICY6bnRoLWNoaWxkKDMpXG5cbiAgICAgICY6YWZ0ZXJcbiAgICAgICAgY29udGVudDogJyAnXG5cbiAgICAmOmxhc3QtY2hpbGRcbiAgICAgIGFcbiAgICAgICAgZm9udC13ZWlnaHQ6Ym9sZFxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwcHhcblxuICAgICAgICArbWVkaWEoXCI8PXBob25lXCIpXG4gICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwXG5cbiAgJl9fbGlua1xuICAgIGNvbG9yOiAkY2hhcmNvYWxcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgICBwYWRkaW5nOiAwIC4zcmVtIDBcblxuICAgICttZWRpYShcIjw9cGhvbmVcIilcbiAgICAgIGZvbnQtc2l6ZTogLjhyZW1cblxuXG4gICAgJjpob3ZlclxuICAgICAgY29sb3I6ICRncmVlblxuXG4uc2l0ZS1tYXBcbiAgYVxuICAgIGNvbG9yOiRjaGFyY29hbFxuICAgICY6aG92ZXJcbiAgICAgIGNvbG9yOiAkZ3JlZW5cbiIsIi8vIGhlYWRlciBzaXplXG4kaGVhZGVyLWhlaWdodC1TOiA1MHB4XG4kaGVhZGVyLWhlaWdodC1MOiA4MHB4XG5cbi8vIE5hdmlnYXRpb24gc2l6ZVxuJG5hdi13aWR0aC1TOiAyNjBweFxuXG4vLyBTZWFyY2ggc2l6ZVxuJHNlYXJjaC1oZWlnaHQtUzogNTBweFxuJHNlYXJjaC1oZWlnaHQtTDogMTIwcHhcblxuLy8gei1pbmRleFxuJGJlbG93LWNvbnRlbnQ6IDFcbiRjb250ZW50OiAyXG4kYWJvdmUtY29udGVudDogM1xuXG4vL1xuICBcInBob25lXCI6IDMyMHB4LFxuICBcInRhYmxldFwiOiA3NjhweCxcbiAgXCJkZXNrdG9wXCI6IDEwMjRweClcblxuXG4vLyBicmVha3BvaW50c1xuICAkUzogNDgwcHhcbiAgJE06IDc2OHB4XG4gICRMOiAxMDI0cHhcbiAgJG1heEw6ICRMIC0gMXB4XG5cblxuLy9cbiAgK01RKG1heEwpXG4gICttZWRpYShcIjxkZXNrdG9wXCIpXG5cbi8vXG4gICtNUShMKVxuICArbWVkaWEoXCI+ZGVza3RvcFwiKVxuXG5cbi8vIHN1cGVyIGxpZ2h0IGdyaWQgLSBpdCB3b3JrcyB3aXRoIHRoZSAuY2QtY29udGFpbmVyIGNsYXNzIGluc2lkZSBzdHlsZS5zY3NzXG5cbj1jb2x1bW4oJHBlcmNlbnRhZ2UsICRmbG9hdC1kaXJlY3Rpb246IGxlZnQpXG4gIHdpZHRoOiAxMDAlICogJHBlcmNlbnRhZ2VcbiAgZmxvYXQ6ICRmbG9hdC1kaXJlY3Rpb25cblxuPWNsZWFyZml4XG4gICY6YWZ0ZXJcbiAgICBjb250ZW50OiBcIlwiXG4gICAgZGlzcGxheTogdGFibGVcbiAgICBjbGVhcjogYm90aFxuXG5hLmNkLW5hdi1pdGVtXG4gICY6aG92ZXJcbiAgICBpbWdcbiAgICAgIG9wYWNpdHk6IC43ICFpbXBvcnRhbnRcbiAgICBoM1xuICAgICAgY29sb3I6ICRuaWdodGdyZWVuICFpbXBvcnRhbnRcblxuXG4vL1ByaW1hcnkgc3R5bGVcblxuXG5ib2R5XG4gICttZWRpYShcIjxkZXNrdG9wXCIpXG4gICAgLy8gbGF5b3V0IG1peGlucyBpbnNpZGUgcGFydGlhbHMgPiBfbGF5b3V0LnNjc3NcbiAgICAmLm5hdi1vbi1sZWZ0Lm92ZXJmbG93LWhpZGRlblxuICAgICAgb3ZlcmZsb3c6IGhpZGRlblxuXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotbXMtY2xlYXJcbiAgLy8gcmVtb3ZlcyBjbG9zZSBpY29uIC0gSUVcbiAgZGlzcGxheTogbm9uZVxuXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uLFxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLXJlc3VsdHMtYnV0dG9uLFxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtcmVzdWx0cy1kZWNvcmF0aW9uXG4gIGRpc3BsYXk6IG5vbmVcblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqXG4gKk1haW4gY29tcG9uZW50c1xuICpcbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXG5cbi5jZC1tYWluLWNvbnRlbnQsXG4uY2QtbWFpbi1oZWFkZXJcbiAgLyogRm9yY2UgSGFyZHdhcmUgQWNjZWxlcmF0aW9uIGluIFdlYktpdFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVooMClcbiAgd2lsbC1jaGFuZ2U6IHRyYW5zZm9ybVxuXG4gIHVsXG4gICAgbGlzdC1zdHlsZTogbm9uZVxuXG4uY2QtbWFpbi1jb250ZW50XG4gIHBvc2l0aW9uOiByZWxhdGl2ZVxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zc1xuXG4gICttZWRpYShcIjxkZXNrdG9wXCIpXG4gICAgJi5uYXYtaXMtdmlzaWJsZVxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0kbmF2LXdpZHRoLVMpXG5cbiAgICAubmF2LW9uLWxlZnQgJi5uYXYtaXMtdmlzaWJsZVxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKCRuYXYtd2lkdGgtUylcblxuLmNkLW1haW4taGVhZGVyXG4gIGZvbnQtZmFtaWx5OiAkc2VyaWZcbiAgcG9zaXRpb246IHJlbGF0aXZlXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzXG5cbiAgK21lZGlhKFwiPGRlc2t0b3BcIilcbiAgICAmLm5hdi1pcy12aXNpYmxlXG4gICAgICAvL3RyYW5zZm9ybTogdHJhbnNsYXRlWCgtJG5hdi13aWR0aC1TKVxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApXG5cbiAgICAubmF2LW9uLWxlZnQgJi5uYXYtaXMtdmlzaWJsZVxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKCRuYXYtd2lkdGgtUylcblxuLmNkLW1haW4tY29udGVudFxuICAvL0NIQU5HRURcbiAgLy9iYWNrZ3JvdW5kOiAkY2xvdWRcbiAgbWluLWhlaWdodDogMTAwdmhcbiAgei1pbmRleDogJGNvbnRlbnRcblxuLmNkLW1haW4taGVhZGVyXG4gIGhlaWdodDogJGhlYWRlci1oZWlnaHQtU1xuICBiYWNrZ3JvdW5kOiAkd2hpdGVcbiAgei1pbmRleDogJGFib3ZlLWNvbnRlbnRcblxuICAvL0NIQU5HRURcbiAgLy9ib3gtc2hhZG93OiAwIDFweCA1cHggcmdiYSgxMDAsMTAwLDEwMCwgLjUpXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkY2xvdWRcblxuICAubmF2LWlzLWZpeGVkICZcbiAgICAvKiBhZGQgLm5hdi1pcy1maXhlZCBjbGFzcyB0byBib2R5IGlmIHlvdSB3YW50IGEgZml4ZWQgbmF2aWdhdGlvbiBvbiA+IDEwMjRweFxuICAgIHBvc2l0aW9uOiBmaXhlZFxuICAgIHRvcDogMFxuICAgIGxlZnQ6IDBcbiAgICB3aWR0aDogMTAwJVxuXG4gICttZWRpYShcIj5kZXNrdG9wXCIpXG4gICAgaGVpZ2h0OiAkaGVhZGVyLWhlaWdodC1MXG4gICAgK2NsZWFyZml4XG5cbi5jZC1sb2dvXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZVxuICB0b3A6IDEycHhcbiAgbGVmdDogNSVcblxuICBpbWdcbiAgICBkaXNwbGF5OiBibG9ja1xuXG4gICttZWRpYShcIjxkZXNrdG9wXCIpXG4gICAgLm5hdi1vbi1sZWZ0ICZcbiAgICAgIGxlZnQ6IGF1dG9cbiAgICAgIHJpZ2h0OiA1JVxuXG4gICttZWRpYShcIj5kZXNrdG9wXCIpXG4gICAgdG9wOiAyNnB4XG4gICAgbGVmdDogNGVtXG5cbi5jZC1oZWFkZXItYnV0dG9uc1xuICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrXG4gIHRvcDogM3B4XG4gIHJpZ2h0OiA1JVxuXG4gIGxpXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrXG5cbiAgK21lZGlhKFwiPGRlc2t0b3BcIilcbiAgICAubmF2LW9uLWxlZnQgJlxuICAgICAgcmlnaHQ6IGF1dG9cbiAgICAgIGxlZnQ6IDUlXG4gICAgICBsaVxuICAgICAgICBmbG9hdDogcmlnaHRcblxuICArbWVkaWEoXCI+ZGVza3RvcFwiKVxuICAgIHRvcDogMXJlbVxuICAgIHJpZ2h0OiAxcmVtXG5cbi5jZC1zZWFyY2gtdHJpZ2dlcixcbi5jZC1uYXYtdHJpZ2dlclxuICBwb3NpdGlvbjogcmVsYXRpdmVcbiAgZGlzcGxheTogYmxvY2tcbiAgd2lkdGg6IDQ0cHhcbiAgaGVpZ2h0OiA0NHB4XG4gIG92ZXJmbG93OiBoaWRkZW5cbiAgd2hpdGUtc3BhY2U6IG5vd3JhcFxuICAvKiBoaWRlIHRleHRcbiAgY29sb3I6IHRyYW5zcGFyZW50XG4gIHotaW5kZXg6ICRhYm92ZS1jb250ZW50XG5cbi5jZC1zZWFyY2gtdHJpZ2dlclxuICAmOjpiZWZvcmUsICY6OmFmdGVyXG4gICAgLyogc2VhcmNoIGljb25cbiAgICBjb250ZW50OiAnJ1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZVxuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zc1xuICAgIC8qIEZvcmNlIEhhcmR3YXJlIEFjY2VsZXJhdGlvbiBpbiBXZWJLaXRcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVooMClcbiAgICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW5cblxuICAmOjpiZWZvcmVcbiAgICAvKiBsZW5zXG4gICAgdG9wOiAxMXB4XG4gICAgbGVmdDogMTFweFxuICAgIHdpZHRoOiAxOHB4XG4gICAgaGVpZ2h0OiAxOHB4XG4gICAgYm9yZGVyLXJhZGl1czogNTAlXG4gICAgYm9yZGVyOiAzcHggc29saWQgJG5pZ2h0Z3JlZW5cblxuICAmOjphZnRlclxuICAgIC8qIGhhbmRsZVxuICAgIGhlaWdodDogM3B4XG4gICAgd2lkdGg6IDhweFxuICAgIGJhY2tncm91bmQ6ICRuaWdodGdyZWVuXG4gICAgYm90dG9tOiAxNHB4XG4gICAgcmlnaHQ6IDExcHhcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZylcbiAgc3BhblxuICAgIC8qIGNvbnRhaW5lciBmb3IgdGhlIFggaWNvblxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZVxuICAgIGhlaWdodDogMTAwJVxuICAgIHdpZHRoOiAxMDAlXG4gICAgdG9wOiAwXG4gICAgbGVmdDogMFxuICBzcGFuOjpiZWZvcmUsIHNwYW46OmFmdGVyXG4gICAgLyogY2xvc2UgaWNvblxuICAgIGNvbnRlbnQ6ICcnXG4gICAgcG9zaXRpb246IGFic29sdXRlXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrXG4gICAgaGVpZ2h0OiAzcHhcbiAgICB3aWR0aDogMjJweFxuICAgIHRvcDogNTAlXG4gICAgbWFyZ2luLXRvcDogLTJweFxuICAgIGxlZnQ6IDUwJVxuICAgIG1hcmdpbi1sZWZ0OiAtMTFweFxuICAgIGJhY2tncm91bmQ6ICRuaWdodGdyZWVuXG4gICAgb3BhY2l0eTogMFxuICAgIC8qIEZvcmNlIEhhcmR3YXJlIEFjY2VsZXJhdGlvbiBpbiBXZWJLaXRcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVooMClcbiAgICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW5cbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3MsIHRyYW5zZm9ybSAwLjNzXG5cbiAgc3Bhbjo6YmVmb3JlXG4gICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpXG5cbiAgc3Bhbjo6YWZ0ZXJcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpXG5cbiAgJi5zZWFyY2gtaXMtdmlzaWJsZVxuICAgICY6OmJlZm9yZSwgJjo6YWZ0ZXJcbiAgICAgIC8qIGhpZGUgc2VhcmNoIGljb25cbiAgICAgIG9wYWNpdHk6IDBcbiAgICBzcGFuOjpiZWZvcmUsIHNwYW46OmFmdGVyXG4gICAgICAvKiBzaG93IGNsb3NlIGljb25cbiAgICAgIG9wYWNpdHk6IDFcbiAgICBzcGFuOjpiZWZvcmVcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKDEzNWRlZylcbiAgICBzcGFuOjphZnRlclxuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpXG5cbi5jZC1uYXYtdHJpZ2dlclxuICAmOmhvdmVyXG4gICAgLy9IaWRlICdNZW51JyB3b3JkIGZvciBhY2Nlc3NpYmlsaXR5IEkgaG9wZVxuICAgIGNvbG9yOiB0cmFuc3BhcmVudFxuICBzcGFuLCBzcGFuOjpiZWZvcmUsIHNwYW46OmFmdGVyXG4gICAgLyogaGFtYnVyZ2VyIGljb24gaW4gQ1NTXG4gICAgcG9zaXRpb246IGFic29sdXRlXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrXG4gICAgaGVpZ2h0OiAzcHhcbiAgICB3aWR0aDogMjRweFxuICAgIGJhY2tncm91bmQ6ICRuaWdodGdyZWVuXG4gIHNwYW5cbiAgICAvKiBsaW5lIGluIHRoZSBjZW50ZXJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgICB0b3A6IDUwJVxuICAgIHJpZ2h0OiAxMHB4XG4gICAgbWFyZ2luLXRvcDogLTJweFxuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQgMC4zcyAwLjNzXG4gIHNwYW46OmJlZm9yZSwgc3Bhbjo6YWZ0ZXJcbiAgICAvKiBvdGhlciAyIGxpbmVzXG4gICAgY29udGVudDogJydcbiAgICByaWdodDogMFxuICAgIC8qIEZvcmNlIEhhcmR3YXJlIEFjY2VsZXJhdGlvbiBpbiBXZWJLaXRcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVooMClcbiAgICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW5cbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiAwJSA1MCVcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyAwLjNzXG4gIHNwYW46OmJlZm9yZVxuICAgIC8qIG1lbnUgaWNvbiB0b3AgbGluZVxuICAgIHRvcDogLTZweFxuICBzcGFuOjphZnRlclxuICAgIC8qIG1lbnUgaWNvbiBib3R0b20gbGluZVxuICAgIHRvcDogNnB4XG4gICYubmF2LWlzLXZpc2libGVcbiAgICBzcGFuXG4gICAgICAvKiBoaWRlIGxpbmUgaW4gdGhlIGNlbnRlclxuICAgICAgYmFja2dyb3VuZDogcmdiYSgkbmlnaHRncmVlbiwgMClcbiAgICBzcGFuOjpiZWZvcmUsIHNwYW46OmFmdGVyXG4gICAgICAvKiBrZWVwIHZpc2libGUgb3RoZXIgMiBsaW5lc1xuICAgICAgYmFja2dyb3VuZDogcmdiYSgkbmlnaHRncmVlbiwgMSlcbiAgICBzcGFuOjpiZWZvcmVcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg0cHgpIHRyYW5zbGF0ZVkoLTNweCkgcm90YXRlKDQ1ZGVnKVxuICAgIHNwYW46OmFmdGVyXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNHB4KSB0cmFuc2xhdGVZKDJweCkgcm90YXRlKC00NWRlZylcbiAgK21lZGlhKFwiPmRlc2t0b3BcIilcbiAgICBkaXNwbGF5OiBub25lXG5cblxuLmNkLXByaW1hcnktbmF2XG4gIHJpZ2h0OiAwXG5cbi8vUmlnaHQgYWxpZ25pbmcgdGhlIG1lbnUgbWVhbnMgd2UgaGF2ZSB0byBidW1wIHRoZSBkcm9wZG93biBiYWNrIG92ZXIgdG8gbGluZSB1cFxuLmNkLXByaW1hcnktbmF2IHVsXG4gIHJpZ2h0OiAyMHB4XG5cbi5jZC1wcmltYXJ5LW5hdixcbi5jZC1wcmltYXJ5LW5hdiB1bFxuICBwb3NpdGlvbjogZml4ZWRcbiAgdG9wOiAwXG4gIC8vcmlnaHQ6IDBcbiAgaGVpZ2h0OiAxMDAlXG4gIHdpZHRoOiAkbmF2LXdpZHRoLVNcbiAgYmFja2dyb3VuZDogJG5pZ2h0Z3JlZW5cbiAgb3ZlcmZsb3c6IGF1dG9cbiAgLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6IHRvdWNoXG4gIHotaW5kZXg6ICRiZWxvdy1jb250ZW50XG5cbiAgLyogRm9yY2UgSGFyZHdhcmUgQWNjZWxlcmF0aW9uIGluIFdlYktpdFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVooMClcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzXG5cbiAgYVxuICAgIGRpc3BsYXk6IGJsb2NrXG4gICAgZm9udC1zaXplOiAxLjJyZW1cbiAgICBoZWlnaHQ6IDUwcHhcbiAgICBsaW5lLWhlaWdodDogNTBweFxuICAgIHBhZGRpbmc6IDAgMjBweFxuICAgIGNvbG9yOiAkd2hpdGVcbiAgICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZFxuICAgIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGVcbiAgICBvdmVyZmxvdzogaGlkZGVuXG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXNcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGxpZ2h0ZW4oJG5pZ2h0Z3JlZW4sIDUlKVxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKVxuICAgIHdpbGwtY2hhbmdlOiB0cmFuc2Zvcm0sIG9wYWNpdHlcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcywgb3BhY2l0eSAwLjNzXG5cbiAgJi5pcy1oaWRkZW5cbiAgICAvKiBzZWNvbmRhcnkgbmF2aWdhdGlvbnMgaGlkZGVuIGJ5IGRlZmF1bHRcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTAwJSlcblxuICAmLm1vdmVzLW91dCA+IGxpID4gYVxuICAgIC8qIHB1c2ggdGhlIG5hdmlnYXRpb24gaXRlbXMgdG8gdGhlIGxlZnQgLSBhbmQgbG93ZXIgZG93biBvcGFjaXR5IC0gd2hlbiBzZWNvbmRhcnkgbmF2IHNsaWRlcyBpblxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSlcbiAgICBvcGFjaXR5OiAwXG5cbittZWRpYShcIjxkZXNrdG9wXCIpXG4gIC5uYXYtb24tbGVmdCAuY2QtcHJpbWFyeS1uYXYsXG4gIC5uYXYtb24tbGVmdCAuY2QtcHJpbWFyeS1uYXYgdWxcbiAgICByaWdodDogYXV0b1xuICAgIGxlZnQ6IDBcblxuXG4uY2QtcHJpbWFyeS1uYXZcbiAgLnNlZS1hbGwgYVxuICAgIC8qIGRpZmZlcmVudCBzdHlsZSBmb3IgdGhlIFNlZSBhbGwgYnV0dG9uIG9uIG1vYmlsZSBhbmQgdGFibGV0XG4gICAgY29sb3I6ICRncmVlblxuXG4gIC5jZC1uYXYtZ2FsbGVyeSAuY2QtbmF2LWl0ZW0sXG4gIC5jZC1uYXYtaWNvbnMgLmNkLW5hdi1pdGVtXG4gICAgLyogaXRlbXMgd2l0aCBwaWN0dXJlIChvciBpY29uKSBhbmQgdGl0bGVcbiAgICBoZWlnaHQ6IDgwcHhcbiAgICBsaW5lLWhlaWdodDogODBweFxuXG4gICAgaDNcbiAgICAgIG92ZXJmbG93OiBoaWRkZW5cbiAgICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzXG5cbiAgLmNkLW5hdi1nYWxsZXJ5IC5jZC1uYXYtaXRlbVxuICAgIC8vcGFkZGluZy1sZWZ0OiA5MHB4XG5cbiAgICBpbWdcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZVxuICAgICAgZGlzcGxheTogYmxvY2tcbiAgICAgIGhlaWdodDogNDBweFxuICAgICAgd2lkdGg6IGF1dG9cbiAgICAgIGxlZnQ6IDIwcHhcbiAgICAgIHRvcDogNTAlXG4gICAgICBtYXJnaW4tdG9wOiAtMjBweFxuXG4gICAgICArbWVkaWEoXCI8ZGVza3RvcFwiKVxuICAgICAgICBkaXNwbGF5OiBub25lXG5cbiAgLmNkLW5hdi1pY29ucyAuY2QtbmF2LWl0ZW1cbiAgICBwYWRkaW5nLWxlZnQ6IDc1cHhcblxuICAgIHBcbiAgICAgIGNvbG9yOiAkbmlnaHRncmVlblxuICAgICAgZm9udC1zaXplOiAxLjNyZW1cbiAgICAgIC8qIGhpZGUgZGVzY3JpcHRpb24gb24gc21hbGwgZGV2aWNlc1xuICAgICAgZGlzcGxheTogbm9uZVxuXG4gICAgJjo6YmVmb3JlXG4gICAgICAvKiBpdGVtIGljb25cbiAgICAgIGNvbnRlbnQ6ICcnXG4gICAgICBkaXNwbGF5OiBibG9ja1xuICAgICAgcG9zaXRpb246IGFic29sdXRlXG4gICAgICBsZWZ0OiAyMHB4XG4gICAgICB0b3A6IDUwJVxuICAgICAgbWFyZ2luLXRvcDogLTIwcHhcbiAgICAgIHdpZHRoOiA0MHB4XG4gICAgICBoZWlnaHQ6IDQwcHhcbiAgICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXRcbiAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXJcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogNDBweCA0MHB4XG5cbiAgICAmLml0ZW0tMTo6YmVmb3JlXG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIvaW1hZ2VzL2xpbmUtaWNvbi0xLnN2Z1wiKVxuICAgICYuaXRlbS0yOjpiZWZvcmVcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi9pbWFnZXMvbGluZS1pY29uLTIuc3ZnXCIpXG4gICAgJi5pdGVtLTM6OmJlZm9yZVxuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiL2ltYWdlcy9saW5lLWljb24tMy5zdmdcIilcbiAgICAmLml0ZW0tNDo6YmVmb3JlXG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIvaW1hZ2VzL2xpbmUtaWNvbi00LnN2Z1wiKVxuICAgICYuaXRlbS01OjpiZWZvcmVcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi9pbWFnZXMvbGluZS1pY29uLTUuc3ZnXCIpXG4gICAgJi5pdGVtLTY6OmJlZm9yZVxuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiL2ltYWdlcy9saW5lLWljb24tNi5zdmdcIilcbiAgICAmLml0ZW0tNzo6YmVmb3JlXG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIvaW1hZ2VzL2xpbmUtaWNvbi03LnN2Z1wiKVxuICAgICYuaXRlbS04OjpiZWZvcmVcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi9pbWFnZXMvbGluZS1pY29uLTguc3ZnXCIpXG5cbiAgK21lZGlhKFwiPGRlc2t0b3BcIilcbiAgICAvKiBieSBkZWZhdWx0IC5jZC1wcmltYXJ5LW5hdiBpcyBoaWRkZW4gLSB0cmljayBmb3IgaU9TIGRldmljZXMgd2hlcmUgeW91IGNhbiBzZWUgdGhlIG5hdmlnYXRpb24gaWYgeW91IHB1bGwgZG93blxuICAgIHZpc2liaWxpdHk6IGhpZGRlblxuICAgIHRyYW5zaXRpb246IHZpc2liaWxpdHkgMHMgMC4zc1xuICAgICYubmF2LWlzLXZpc2libGVcbiAgICAgIHZpc2liaWxpdHk6IHZpc2libGVcbiAgICAgIHRyYW5zaXRpb246IHZpc2liaWxpdHkgMHMgMHNcblxuK21lZGlhKFwiPmRlc2t0b3BcIilcblxuICAuY2QtcHJpbWFyeS1uYXZcbiAgICBwb3NpdGlvbjogc3RhdGljXG4gICAgcGFkZGluZzogMCA1MHB4IDAgMFxuICAgIG1hcmdpbi1sZWZ0OiAyMHB4XG4gICAgaGVpZ2h0OiBhdXRvXG4gICAgd2lkdGg6IDEwMCVcbiAgICAvL2Zsb2F0OiByaWdodFxuICAgIG92ZXJmbG93OiB2aXNpYmxlXG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnRcbiAgICAvL3RleHQtYWxpZ246IGNlbnRlclxuXG4gICAgK2NsZWFyZml4XG5cbiAgICAmLm1vdmVzLW91dCA+IGxpID4gYVxuICAgICAgLyogcmVzZXQgbW9iaWxlIHN0eWxlXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMClcbiAgICAgIG9wYWNpdHk6IDFcblxuICAgIHVsXG4gICAgICBwb3NpdGlvbjogc3RhdGljXG4gICAgICBoZWlnaHQ6IGF1dG9cbiAgICAgIHdpZHRoOiBhdXRvXG4gICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudFxuICAgICAgb3ZlcmZsb3c6IHZpc2libGVcbiAgICAgIHRleHQtYWxpZ246IGxlZnRcbiAgICAgIHotaW5kZXg6ICRhYm92ZS1jb250ZW50XG5cbiAgICAgICYuaXMtaGlkZGVuXG4gICAgICAgIC8qIHJlc2V0IG1vYmlsZSBzdHlsZVxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMClcblxuICAgICAgJi5tb3Zlcy1vdXQgPiBsaSA+IGFcbiAgICAgICAgLyogcmVzZXQgbW9iaWxlIHN0eWxlXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKVxuICAgICAgICBvcGFjaXR5OiAxXG5cbiAgICAvL1RvcCBuYXYgaXRlbXNcbiAgICA+IGxpXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgICAgIC8vZmxvYXQ6IGxlZnRcbiAgICAgIG1hcmdpbi1sZWZ0OiAuNXJlbVxuXG4gICAgPiBsaSA+IGFcbiAgICAgIC8qIG1haW4gbmF2aWdhdGlvbiBidXR0b25zIHN0eWxlXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmVcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgICAgaGVpZ2h0OiAkaGVhZGVyLWhlaWdodC1MXG4gICAgICBsaW5lLWhlaWdodDogJGhlYWRlci1oZWlnaHQtTFxuICAgICAgcGFkZGluZzogMFxuICAgICAgY29sb3I6ICRuaWdodGdyZWVuXG4gICAgICBvdmVyZmxvdzogdmlzaWJsZVxuICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZVxuICAgICAgdHJhbnNpdGlvbjogY29sb3IgMC4zcywgYm94LXNoYWRvdyAwLjNzXG5cbiAgICAgICY6aG92ZXJcbiAgICAgICAgY29sb3I6ICRncmVlblxuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmVcbiAgICAgICYuc2VsZWN0ZWRcbiAgICAgICAgY29sb3I6ICRncmVlblxuICAgICAgICBib3gtc2hhZG93OiBpbnNldCAwIC0ycHggMCAkZ3JlZW5cblxuICAgIC5nby1iYWNrLCAuc2VlLWFsbFxuICAgICAgZGlzcGxheTogbm9uZVxuXG4gICAgLmNkLXNlY29uZGFyeS1uYXYsXG4gICAgLmNkLW5hdi1nYWxsZXJ5LFxuICAgIC5jZC1uYXYtaWNvbnNcbiAgICAgIC8qIGRyb3Bkb3duIG1lbnUgc3R5bGVcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZVxuICAgICAgdG9wOiAkaGVhZGVyLWhlaWdodC1MXG4gICAgICAvL3dpZHRoOiAxMDB2d1xuICAgICAgd2lkdGg6IDEwMCVcbiAgICAgIGJhY2tncm91bmQ6ICR3aGl0ZVxuICAgICAgLy9DSEFOR0VEXG4gICAgICAvL3BhZGRpbmc6IDQ4cHggNjRweCAxMzBweFxuICAgICAgcGFkZGluZzogMnJlbVxuICAgICAgYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMCAkY2xvdWQsIDAgM3B4IDZweCByZ2JhKCMwMDAsIDAuMDUpXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMClcbiAgICAgICtjbGVhcmZpeFxuXG4gICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IC4zcyAwcywgdmlzaWJpbGl0eSAwcyAwc1xuXG4gICAgICAmLmlzLWhpZGRlblxuICAgICAgICBvcGFjaXR5OiAwXG4gICAgICAgIHZpc2liaWxpdHk6IGhpZGRlblxuICAgICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IC4zcyAwcywgdmlzaWJpbGl0eSAwcyAuM3NcblxuICAgICAgPiAuc2VlLWFsbFxuICAgICAgICAvKiB0aGlzIGlzIHRoZSBCSUcgU2VlIGFsbCBidXR0b24gYXQgdGhlIGJvdHRvbSBvZiB0aGUgZHJvcGRvd24gbWVudVxuICAgICAgICBkaXNwbGF5OiBibG9ja1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgICAgICAgbGVmdDogMFxuICAgICAgICBib3R0b206IDBcbiAgICAgICAgaGVpZ2h0OiA4MHB4XG4gICAgICAgIHdpZHRoOiAxMDAlXG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW5cbiAgICAgICAgLyogcmVzZXQgc29tZSBpbmhlcml0ZWQgc3R5bGVcbiAgICAgICAgbWFyZ2luOiAwXG4gICAgICAgIHBhZGRpbmc6IDBcblxuICAgICAgICBhXG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlXG4gICAgICAgICAgd2lkdGg6IDEwMCVcbiAgICAgICAgICBoZWlnaHQ6IDEwMCVcbiAgICAgICAgICB0b3A6IDBcbiAgICAgICAgICBsZWZ0OiAwXG4gICAgICAgICAgZm9udC1zaXplOiAyLjJyZW1cbiAgICAgICAgICBmb250LXdlaWdodDogYm9sZFxuICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlclxuICAgICAgICAgIGxpbmUtaGVpZ2h0OiA4MHB4XG4gICAgICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICRjbG91ZFxuICAgICAgICAgIC8qIHJlc2V0IHNvbWUgaW5oZXJpdGVkIHN0eWxlXG4gICAgICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZVxuICAgICAgICAgIG1hcmdpbjogMFxuICAgICAgICAgIHBhZGRpbmc6IDBcbiAgICAgICAgICB0cmFuc2l0aW9uOiBjb2xvciAwLjJzLCBiYWNrZ3JvdW5kIDAuMnMsIGJvcmRlciAwLjJzXG5cbiAgICAgICAgICAmOmhvdmVyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAkbmlnaHRncmVlblxuICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiAkbmlnaHRncmVlblxuICAgICAgICAgICAgY29sb3I6ICR3aGl0ZVxuXG4gICAgLmNkLXNlY29uZGFyeS1uYXZcblxuICAgICAgPiBsaVxuICAgICAgICAvKiBjaGFuZ2UgdGhlIGhlaWdodCBhY2NvcmRpbmcgdG8geW91ciBuZWVkcyAtIHlvdSBjYW4gZXZlbiBzZXQgaGVpZ2h0OiBhdXRvXG4gICAgICAgIGhlaWdodDogMzQwcHhcbiAgICAgICAgLyogaGVyZSB5b3Ugc2V0IHRoZSBudW1iZXIgb2YgY29sdW1ucyAtIHVzZSB3aWR0aCBwZXJjZW50YWdlXG4gICAgICAgICtjb2x1bW4oMC4yMylcbiAgICAgICAgLy8gc2VlIHBhcnRpYWxzID4gX2xheW91dC5zY3NzXG4gICAgICAgIG1hcmdpbi1yaWdodDogMi42NiVcbiAgICAgICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgJGNsb3VkXG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW5cbiAgICAgICAgb3ZlcmZsb3cteDogaGlkZGVuXG4gICAgICAgIG92ZXJmbG93LXk6IGF1dG9cbiAgICAgICAgLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6IHRvdWNoXG5cbiAgICAgICAgJjpudGgtY2hpbGQoNG4rMilcbiAgICAgICAgICAvKiArMiBiZWNhdXNlIHdlIGhhdmUgMiBsaXN0IGl0ZW1zIHdpdGggZGlzcGxheTpub25lXG4gICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwXG4gICAgICAgICAgYm9yZGVyLXJpZ2h0OiBub25lXG5cbiAgICAgICAgPiBhXG4gICAgICAgICAgLyogc2Vjb25kYXJ5IG5hdiB0aXRsZVxuICAgICAgICAgIGNvbG9yOiAkZ3JlZW5cbiAgICAgICAgICBmb250LXdlaWdodDogYm9sZFxuICAgICAgICAgIGZvbnQtc2l6ZTogMS42cmVtXG4gICAgICAgICAgbWFyZ2luLWJvdHRvbTogLjZlbVxuXG4gICAgICBhXG4gICAgICAgIGhlaWdodDogMzBweFxuICAgICAgICBsaW5lLWhlaWdodDogMzBweFxuICAgICAgICBwYWRkaW5nOiAwIDE4JSAwIDBcbiAgICAgICAgY29sb3I6ICRuaWdodGdyZWVuXG4gICAgICAgIGJvcmRlci1ib3R0b206IG5vbmVcbiAgICAgICAgZm9udC1zaXplOiAxLjRyZW1cblxuICAgICAgICAmOmhvdmVyXG4gICAgICAgICAgY29sb3I6ICRncmVlblxuXG4gICAgICB1bFxuICAgICAgICAvKiBGb3JjZSBIYXJkd2FyZSBBY2NlbGVyYXRpb24gaW4gV2ViS2l0XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKVxuXG4gICAgICB1bCB1bFxuICAgICAgICAvKiB0ZXJ0aWFyeSBuYXZpZ2F0aW9uXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZVxuICAgICAgICB0b3A6IDBcbiAgICAgICAgbGVmdDogMFxuICAgICAgICBoZWlnaHQ6IDEwMCVcbiAgICAgICAgd2lkdGg6IDEwMCVcblxuICAgICAgICAmLmlzLWhpZGRlblxuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMDAlKVxuXG4gICAgICAgIC5nby1iYWNrXG4gICAgICAgICAgZGlzcGxheTogYmxvY2tcblxuICAgICAgICAgIGFcbiAgICAgICAgICAgIGNvbG9yOiB0cmFuc3BhcmVudFxuXG4gICAgICAgIC5zZWUtYWxsXG4gICAgICAgICAgZGlzcGxheTogYmxvY2tcblxuICAgICAgLm1vdmVzLW91dCA+IGxpID4gYVxuICAgICAgICAvKiBwdXNoIHRoZSBuYXZpZ2F0aW9uIGl0ZW1zIHRvIHRoZSBsZWZ0IC0gYW5kIGxvd2VyIGRvd24gb3BhY2l0eSAtIHdoZW4gdGVydGlhcnkgbmF2IHNsaWRlcyBpblxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMCUpXG5cbiAgICAuY2QtbmF2LWdhbGxlcnlcbiAgICAgIGJveC1zaGFkb3c6IDAgNXB4IDVweCByZ2JhKDEwMCwxMDAsMTAwLC4zKVxuXG4gICAgICBsaVxuICAgICAgICAvKiBzZXQgaGVyZSBudW1iZXIgb2YgY29sdW1ucyAtIHVzZSB3aWR0aCBwZXJjZW50YWdlXG4gICAgICAgIC8vK2NvbHVtbigwLjIyKVxuICAgICAgICAvL21hcmdpbjogMCA0JSA0MHB4IDBcblxuICAgICAgICBmbG9hdDogbGVmdFxuICAgICAgICB3aWR0aDogMjUlXG4gICAgICAgIHBhZGRpbmc6IDFyZW1cblxuICAgICAgICAmOm50aC1jaGlsZCg0bisyKVxuICAgICAgICAgIC8qICsyIGJlY2F1c2Ugd2UgaGF2ZSB0d28gYWRkaXRpb25hbCBsaXN0IGl0ZW1zIHdpdGggZGlzcGxheTpub25lXG4gICAgICAgICAgLy9tYXJnaW4tcmlnaHQ6IDBcblxuICAgICAgLmNkLW5hdi1pdGVtXG4gICAgICAgIGJvcmRlci1ib3R0b206IG5vbmVcbiAgICAgICAgcGFkZGluZzogMFxuICAgICAgICBoZWlnaHQ6IGF1dG9cbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuMlxuXG4gICAgICAgIGltZ1xuICAgICAgICAgIHBvc2l0aW9uOiBzdGF0aWNcbiAgICAgICAgICBtYXJnaW4tdG9wOiAwXG4gICAgICAgICAgaGVpZ2h0OiBhdXRvXG4gICAgICAgICAgd2lkdGg6IDEwMCVcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAuNnJlbVxuXG4gICAgICAgIGgzXG4gICAgICAgICAgY29sb3I6ICRncmVlblxuICAgICAgICAgIGZvbnQtc2l6ZTogLjlyZW1cbiAgICAgICAgICBwYWRkaW5nOiAwIC40cmVtXG4gICAgICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbFxuXG4gICAgLmNkLW5hdi1pY29uc1xuXG4gICAgICBsaVxuICAgICAgICAvKiBzZXQgaGVyZSBudW1iZXIgb2YgY29sdW1ucyAtIHVzZSB3aWR0aCBwZXJjZW50YWdlXG4gICAgICAgICtjb2x1bW4oMC4zMilcbiAgICAgICAgbWFyZ2luOiAwIDIlIDIwcHggMFxuICAgICAgICAmOm50aC1jaGlsZCgzbisyKVxuICAgICAgICAgIC8qICsyIGJlY2F1c2Ugd2UgaGF2ZSB0d28gYWRkaXRpb25hbCBsaXN0IGl0ZW1zIHdpdGggZGlzcGxheTpub25lXG4gICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwXG4gICAgICAuY2QtbmF2LWl0ZW1cbiAgICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZVxuICAgICAgICBoZWlnaHQ6IDgwcHhcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuMlxuICAgICAgICBwYWRkaW5nOiAyNHB4IDAgMCA4NXB4XG4gICAgICAgICY6aG92ZXJcbiAgICAgICAgICBiYWNrZ3JvdW5kOiBsaWdodGVuKCRjbG91ZCwgOCUpXG4gICAgICAgIGgzXG4gICAgICAgICAgY29sb3I6ICRncmVlblxuICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkXG4gICAgICAgIHBcbiAgICAgICAgICBkaXNwbGF5OiBibG9ja1xuICAgICAgICAmOjpiZWZvcmVcbiAgICAgICAgICBsZWZ0OiAyNXB4XG5cblxuLmhhcy1jaGlsZHJlbiA+IGEsIC5nby1iYWNrIGFcbiAgcG9zaXRpb246IHJlbGF0aXZlXG4gICY6OmJlZm9yZSwgJjo6YWZ0ZXJcbiAgICAvKiBhcnJvdyBpY29uIGluIENTUyAtIGZvciBlbGVtZW50IHdpdGggbmVzdGVkIHVub3JkZXJlZCBsaXN0c1xuICAgIGNvbnRlbnQ6ICcnXG4gICAgcG9zaXRpb246IGFic29sdXRlXG4gICAgdG9wOiA1MCVcbiAgICBtYXJnaW4tdG9wOiAtMXB4XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrXG4gICAgaGVpZ2h0OiAycHhcbiAgICB3aWR0aDogMTBweFxuICAgIGJhY2tncm91bmQ6IGxpZ2h0ZW4oJG5pZ2h0Z3JlZW4sIDEwJSlcblxuICAgIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlblxuICAmOjpiZWZvcmVcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZylcbiAgJjo6YWZ0ZXJcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpXG4gICttZWRpYShcIj5kZXNrdG9wXCIpXG4gICAgJjo6YmVmb3JlLCAmOjphZnRlclxuICAgICAgYmFja2dyb3VuZDogZGFya2VuKCRjbG91ZCwgMTAlKVxuICAgICY6aG92ZXI6OmJlZm9yZSwgJjpob3Zlcjo6YWZ0ZXJcbiAgICAgIGJhY2tncm91bmQ6ICRncmVlblxuXG4uaGFzLWNoaWxkcmVuID4gYVxuICBwYWRkaW5nLXJpZ2h0OiA0MHB4XG4gICY6OmJlZm9yZSwgJjo6YWZ0ZXJcbiAgICAvKiBhcnJvdyBnb2VzIG9uIHRoZSByaWdodCBzaWRlIC0gY2hpbGRyZW4gbmF2aWdhdGlvblxuICAgIHJpZ2h0OiAyMHB4XG4gICAgdHJhbnNmb3JtLW9yaWdpbjogOXB4IDUwJVxuXG4uY2QtcHJpbWFyeS1uYXYgLmdvLWJhY2sgYVxuICBwYWRkaW5nLWxlZnQ6IDQwcHhcbiAgJjo6YmVmb3JlLCAmOjphZnRlclxuICAgIC8qIGFycm93IGdvZXMgb24gdGhlIGxlZnQgc2lkZSAtIGdvIGJhY2sgYnV0dG9uXG4gICAgbGVmdDogMjBweFxuICAgIHRyYW5zZm9ybS1vcmlnaW46IDFweCA1MCVcblxuK21lZGlhKFwiPmRlc2t0b3BcIilcbiAgLmhhcy1jaGlsZHJlbiA+IGFcbiAgICAmOjpiZWZvcmUsICY6OmFmdGVyXG4gICAgICByaWdodDogMTUlXG4gIC5jZC1wcmltYXJ5LW5hdiA+IC5oYXMtY2hpbGRyZW4gPiBhXG4gICAgLyogbWFpbiBuYXZpZ2F0aW9uIGFycm93cyBvbiBsYXJnZXIgZGV2aWNlc1xuICAgIHBhZGRpbmctcmlnaHQ6IDMwcHggIWltcG9ydGFudFxuICAgICY6OmJlZm9yZSwgJjo6YWZ0ZXJcbiAgICAgIHdpZHRoOiA5cHhcbiAgICAgIHRyYW5zZm9ybS1vcmlnaW46IDUwJSA1MCVcbiAgICAgIGJhY2tncm91bmQ6IGRhcmtlbigkY2xvdWQsIDEwJSlcblxuICAgICAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuXG4gICAgICB0cmFuc2l0aW9uOiB3aWR0aCAwLjNzLCB0cmFuc2Zvcm0gMC4zc1xuICAgICY6OmJlZm9yZVxuICAgICAgcmlnaHQ6IDEycHhcbiAgICAmOjphZnRlclxuICAgICAgcmlnaHQ6IDdweFxuICAgICYuc2VsZWN0ZWQ6OmJlZm9yZSwgJi5zZWxlY3RlZDo6YWZ0ZXJcbiAgICAgIHdpZHRoOiAxNHB4XG4gICAgJi5zZWxlY3RlZDo6YmVmb3JlXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNXB4KSByb3RhdGUoLTQ1ZGVnKVxuICAgICYuc2VsZWN0ZWQ6OmFmdGVyXG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZylcbiAgLmNkLXNlY29uZGFyeS1uYXYgPiAuaGFzLWNoaWxkcmVuID4gYTo6YmVmb3JlLCAuY2Qtc2Vjb25kYXJ5LW5hdiA+IC5oYXMtY2hpbGRyZW4gPiBhOjphZnRlclxuICAgIC8qIHJlbW92ZSBhcnJvd3Mgb24gc2Vjb25kYXJ5IG5hdiB0aXRsZXNcbiAgICBkaXNwbGF5OiBub25lXG4gIC5jZC1wcmltYXJ5LW5hdiAuZ28tYmFjayBhXG4gICAgcGFkZGluZy1sZWZ0OiAyMHB4XG4gICAgJjo6YmVmb3JlLCAmOjphZnRlclxuICAgICAgbGVmdDogMXB4XG5cblxuXG5cbi5jZC1zZWFyY2hcbiAgZmxvYXQ6cmlnaHRcbiAgbWFyZ2luOiAxLjI1cmVtXG5cbiAgK21lZGlhKFwiPD1waG9uZVwiKVxuICAgIGZsb2F0OiBub25lXG4gICAgbWFyZ2luOiAxcmVtIGF1dG8gMFxuICAgIHdpZHRoOiAxMDAlXG5cbiAgZm9ybVxuICAgIHBvc2l0aW9uOnJlbGF0aXZlXG5cbiAgaW5wdXRbdHlwZT1cInN1Ym1pdFwiXVxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi9pbWFnZXMvc2VhcmNoLWljb24ucG5nXCIpXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdFxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrXG4gICAgdGV4dC1pbmRlbnQ6IC05OTk5OXB4XG4gICAgaGVpZ2h0OiAyMnB4XG4gICAgd2lkdGg6IDIycHhcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmVcbiAgICBib3JkZXI6IDBcbiAgICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgICB0b3A6IDZweFxuICAgIHJpZ2h0OiAzcHhcbiAgICBiYWNrZ3JvdW5kLXNpemU6IDc1JVxuXG4gIGlucHV0W3R5cGU9XCJzZWFyY2hcIl1cbiAgICB0ZXh0LWluZGVudDoxcmVtXG4gICAgLy9ib3gtc2hhZG93OiBpbnNldCAwIDFweCAwICRjbG91ZCwgMCAzcHggNnB4IHJnYmEoIzAwMCwgMC4wNSlcbiAgICBhcHBlYXJhbmNlOiBub25lXG4gICAgYm9yZGVyOiAxcHggc29saWQgJGdyYXBoaXRlXG5cbiAgICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgICAgd2lkdGg6IDEwMCVcblxuICAgICY6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIsXG4gICAgJjo6LW1vei1wbGFjZWhvbGRlcixcbiAgICAmOi1tcy1pbnB1dC1wbGFjZWhvbGRlclxuICAgICAgY29sb3I6IGRhcmtlbigkY2xvdWQsIDEwJSlcblxuICAgICY6Zm9jdXNcbiAgICAgIG91dGxpbmU6IG5vbmVcblxuICAmLmlzLXZpc2libGVcbiAgICBvcGFjaXR5OiAxXG4gICAgdmlzaWJpbGl0eTogdmlzaWJsZVxuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgLjNzIDBzLCB2aXNpYmlsaXR5IDBzIDBzXG4gICAgLy9ib3gtc2hhZG93OiAxcHggMXB4IDVweCByZ2JhKDEwMCwxMDAsMTAwLCAuNSlcblxuICAubmF2LWlzLWZpeGVkICZcbiAgICBwb3NpdGlvbjogZml4ZWRcblxuICArbWVkaWEoXCI+ZGVza3RvcFwiKVxuXG5cbiAgICBpbnB1dFxuXG5cblxuLmNkLW92ZXJsYXlcbiAgLyogc2hhZG93IGxheWVyIHZpc2libGUgd2hlbiBuYXZpZ2F0aW9uIGlzIGFjdGl2ZVxuICBwb3NpdGlvbjogZml4ZWRcbiAgei1pbmRleDogMlxuICBoZWlnaHQ6IDEwMCVcbiAgd2lkdGg6IDEwMCVcbiAgdG9wOiAwXG4gIGxlZnQ6IDBcbiAgY3Vyc29yOiBwb2ludGVyXG4gIC8vYmFja2dyb3VuZC1jb2xvcjogcmdiYSgkZ3JlZW4sIDAuOClcbiAgdmlzaWJpbGl0eTogaGlkZGVuXG4gIG9wYWNpdHk6IDBcbiAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuXG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyAwcywgdmlzaWJpbGl0eSAwcyAwLjNzLCB0cmFuc2Zvcm0gMC4zcyAwc1xuXG4gICYuaXMtdmlzaWJsZVxuICAgIG9wYWNpdHk6IDFcbiAgICB2aXNpYmlsaXR5OiB2aXNpYmxlXG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzIDBzLCB2aXNpYmlsaXR5IDBzIDBzLCB0cmFuc2Zvcm0gMC4zcyAwc1xuXG4gICttZWRpYShcIjxkZXNrdG9wXCIpXG4gICAgJi5pcy12aXNpYmxlXG4gICAgICAvL3RyYW5zZm9ybTogdHJhbnNsYXRlWCgtJG5hdi13aWR0aC1TKVxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApXG5cbiAgICAubmF2LW9uLWxlZnQgJi5pcy12aXNpYmxlXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoJG5hdi13aWR0aC1TKVxuXG4gICAgJi5pcy12aXNpYmxlLnNlYXJjaC1pcy12aXNpYmxlLFxuICAgIC5uYXYtb24tbGVmdCAmLmlzLXZpc2libGUuc2VhcmNoLWlzLXZpc2libGVcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKVxuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICpcbiAqc3VwcG9ydCBmb3Igbm8ganNcbiAqXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi5uby1qcyAuY2QtcHJpbWFyeS1uYXZcbiAgcG9zaXRpb246IHJlbGF0aXZlXG4gIGhlaWdodDogYXV0b1xuICB3aWR0aDogMTAwJVxuICBvdmVyZmxvdzogdmlzaWJsZVxuICB2aXNpYmlsaXR5OiB2aXNpYmxlXG4gIHotaW5kZXg6ICRjb250ZW50XG5cbi5uby1qcyAuY2Qtc2VhcmNoXG4gIHBvc2l0aW9uOiByZWxhdGl2ZVxuICB0b3A6IDBcbiAgb3BhY2l0eTogMVxuICB2aXNpYmlsaXR5OiB2aXNpYmxlXG5cbittZWRpYShcIj5kZXNrdG9wXCIpXG4gIC5uby1qcyAuY2QtcHJpbWFyeS1uYXZcbiAgICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgICB6LWluZGV4OiAkYWJvdmUtY29udGVudFxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgIHdpZHRoOiBhdXRvXG4gICAgdG9wOiAwXG4gICAgcmlnaHQ6IDE1MHB4XG4gICAgcGFkZGluZzogMFxuICAubm8tanMgLm5hdi1pcy1maXhlZCAuY2QtcHJpbWFyeS1uYXZcbiAgICBwb3NpdGlvbjogZml4ZWRcbiIsIi5uYXYtZm9vdGVyXG5cdHBhZGRpbmc6IDMwcHggMjBweCAyMHB4XG5cdHRleHQtYWxpZ246IGxlZnRcblxuXHQrbWVkaWEoXCI8PXRhYmxldFwiKVxuXHRcdGRpc3BsYXk6IG5vbmVcblxuXHQmX19oZWFkaW5nXG5cdFx0Zm9udC1mYW1pbHk6ICRzYW5zXG5cdFx0Zm9udC1zaXplOiAxcmVtXG5cdFx0Zm9udC13ZWlnaHQ6ICRib2xkXG5cdFx0bWFyZ2luLWJvdHRvbTogMXJlbVxuXG5cdFx0YVxuXHRcdFx0Y29sb3I6ICRjaGFyY29hbFxuXHRcdFx0Jjpob3ZlclxuXHRcdFx0XHRjb2xvcjogJGdyZWVuXG5cblx0Jl9fbGlua1xuXHRcdGZvbnQtc2l6ZTogMTRweFxuXG5cdCZfX2JveFxuXHRcdHBhZGRpbmc6IDAgMTBweFxuXHRcdHZlcnRpY2FsLWFsaWduOiB0b3BcblxuXHQmX19ib3gtbmFycm93XG5cdFx0cGFkZGluZzogMCAxMHB4XG5cdFx0dmVydGljYWwtYWxpZ246IHRvcFxuXG5cdCZfX2J1dHRvblxuXHRcdGJvcmRlci13aWR0aDogMXB4XG5cdFx0Y29sb3I6ICRncmVlblxuXHRcdGZvbnQtc2l6ZTogLjlyZW1cblx0XHRtYXJnaW4tYm90dG9tOiAxcmVtXG5cdFx0cGFkZGluZzogLjVyZW0gMXJlbVxuXHRcdHdpZHRoOiAxMDAlXG5cblxuXHQvLyBTdWItbmF2aWdhdGlvbiwgd2hpY2ggaGlkZXMgb24gc21hbGwgc2l6ZXNcblx0Jl9fc3ViLWxpbmtzXG5cdFx0Zm9udC1zaXplOiAxNHB4XG5cblx0XHRsaTpudGgtY2hpbGQoMSlcblx0XHRcdGZvbnQtZmFtaWx5OiAkc2Fuc1xuXHRcdFx0Zm9udC1zaXplOiAxcmVtXG5cdFx0XHRmb250LXdlaWdodDogJGJvbGRcblx0XHRcdG1hcmdpbi1ib3R0b206IC41cmVtXG5cblx0XHRcdGFcblx0XHRcdCAgY29sb3I6ICRjaGFyY29hbFxuXHRcdFx0ICAmOmhvdmVyXG5cdFx0XHQgICAgY29sb3I6ICRncmVlblxuIiwiLy9CYW5uZXIgVGFsbCAtIFRoaXMgaXMgZm91bmQgb24gdGhlIGhvbWVwYWdlIG9ubHlcbi5iYW5uZXItdGFsbFxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoaW1hZ2VzL2luZGV4X2hlcm8tMi5qcGcpXG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlclxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyXG4gIGhlaWdodDogMjAwcHhcbiAgcG9zaXRpb246IHJlbGF0aXZlXG5cbiAgK21lZGlhKFwiPnRhYmxldFwiKVxuICAgIGhlaWdodDogNDY1cHhcblxuICArbWVkaWEoXCI8PXBob25lXCIpXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogbGVmdFxuICAgIGhlaWdodDogMjY1cHhcblxuXG4gICZfX2hlYWRsaW5lXG4gICAgYm90dG9tOiAzcmVtXG4gICAgY29sb3I6ICR3aGl0ZVxuICAgIGZvbnQtZmFtaWx5OiBzZXJpZlxuICAgIGZvbnQtc2l6ZTogNHJlbVxuICAgIGZvbnQtd2VpZ2h0OiA4MDBcbiAgICBsZWZ0OiAycmVtXG4gICAgbGluZS1oZWlnaHQ6IDFcbiAgICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgICBtYXJnaW46IDAgMCAxcmVtIDFyZW1cbiAgICB0ZXh0LXNoYWRvdzogMnB4IDJweCAycHggJGNoYXJjb2FsXG5cbiAgICBzdXBcbiAgICAgIGZvbnQtc2l6ZToxLjc1cmVtXG5cbiAgICArbWVkaWEoXCI8dGFibGV0XCIpXG4gICAgICBwb3NpdGlvbjogc3RhdGljXG4gICAgICBmb250LXNpemU6IDJyZW1cbiAgICAgIHBhZGRpbmc6IDJyZW1cblxuLy8gQmFubmVyIFN0YW5kYXJkIC0gVGhpcyBpcyBmb3VuZCBvbiB0aGUgbWFqb3JpdHkgb2YgdGhlIGludGVybmFsIHBhZ2VzXG4uYmFubmVyLXN0YW5kYXJkXG4gIGJhY2tncm91bmQ6ICRncmVlblxuICBjb2xvcjogJHdoaXRlXG4gIGRpc3BsYXk6IHRhYmxlXG4gIGhlaWdodDogYXV0b1xuXG4gIC8vIEdldCByaWQgb2Ygd2VpcmQgc3BhY2UgYmVsb3cgaW1hZ2UgaW4gdGhlIGJhbm5lcnNcbiAgaW1nXG4gICAgZGlzcGxheTogYmxvY2tcblxuICAmX19ib3hcbiAgICBwYWRkaW5nOiAxcmVtIDJyZW1cblxuICAmX19oZWFkaW5nXG4gICAgY29sb3I6ICR3aGl0ZVxuXG4gICZfX3RleHRcblxuICAmX19tZWRpYVxuICAgIGJhY2tncm91bmQtY29sb3I6ICRzbGF0ZVxuXG4gIC8vIFRoaXMgaXMgZm91bmQgb24gdGhlIEFwcHJvYWNoIFBhZ2VcbiAgJl9fbWVkaWEtYXBwcm9hY2hcbiAgIC8vIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZXMvbWVldGluZy5qcGcpXG4gICAvLyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXJcbiAgIC8vIGJhY2tncm91bmQtc2l6ZTogY292ZXJcblxuICAgICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgICBoZWlnaHQ6IDMwMHB4XG5cbiAgLy8gVGhpcyBpcyBmb3VuZCBvbiB0aGUgTGVhZGVyc2hpcCBwYWdlXG4gICZfX21lZGlhLWxlYWRlcnNoaXBcbiAgIC8vIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZXMvcGVvcGxlLmpwZylcbiAgIC8vIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlclxuICAgLy8gYmFja2dyb3VuZC1zaXplOiBjb3ZlclxuXG4gICAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICAgIGhlaWdodDogMzAwcHhcblxuLy8gQmFubmVyIFBhbm9yYW1hIC0gVGhpcyBpcyBmb3VuZCBvbiB0aGUgTmV3cyBwYWdlXG4uYmFubmVyLXBhbm9yYW1hXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZXMvdHJlZXMuanBnKVxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXJcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlclxuICBoZWlnaHQ6IDI1NXB4XG4iLCIuY2FyZC1kaXB0aWNcbiAgZGlzcGxheTogdGFibGVcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICRib3JkZXJDb2xvclxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJGJvcmRlckNvbG9yXG5cbiAgK3Jlc3BvbnNpdmUtc3RhY2tcblxuICAmX19ib3hcbiAgICBkaXNwbGF5OiB0YWJsZS1jZWxsXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZVxuXG4gICAgcGFkZGluZzogMnJlbSAxcmVtXG5cbiAgICArbWVkaWEoXCI+dGFibGV0XCIpXG4gICAgICBwYWRkaW5nOiAycmVtIDFyZW0gMnJlbSAycmVtXG5cbiAgICAmOm50aC1jaGlsZCgyKVxuICAgICAgK21lZGlhKFwiPnRhYmxldFwiKVxuICAgICAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICRib3JkZXJDb2xvclxuICAgICAgICBwYWRkaW5nOiAycmVtIDJyZW0gMnJlbSAxcmVtXG5cbiAgJl9faGVhZGluZ1xuICAgIHRleHQtYWxpZ246IGNlbnRlclxuXG4gICZfX21lZGlhXG4gICAgbWFyZ2luLWJvdHRvbTogMnJlbVxuXG4gICZfX3RleHRcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXJcbiAgICBtYXJnaW4tYm90dG9tOiAycmVtXG5cbiAgdWxcbiAgICBsaXN0LXN0eWxlOiBub25lXG4gICAgdGV4dC1hbGlnbjogY2VudGVyXG5cbiAgICBsaVxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrXG4gICAgICBwYWRkaW5nOiAuNXJlbVxuICAgICAgd2lkdGg6IDQ3JVxuXG5cbiAgJl9fbGlua1xuICAgIGNvbG9yOiAkc2l0ZS10ZXh0LWNvbG9yLWxpbmtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgICBmb250LWZhbWlseTogJHNlcmlmXG4gICAgcGFkZGluZzogMCAuNHJlbVxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGVcbiAgICAmOmhvdmVyXG4gICAgICBjb2xvcjogJHNpdGUtdGV4dC1jb2xvci1saW5rLWhvdmVyXG5cblxuLy8gQ2FyZCBCaW8gLSBUaGVzZSBhcmUgZm91bmQgb24gdGhlIExlYWRlcnNoaXAgcGFnZVxuLmNhcmQtYmlvXG4gIHBhZGRpbmctYm90dG9tOiAycmVtXG5cbiAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJGNsb3VkXG4gICAgbWFyZ2luLWJvdHRvbTogMnJlbVxuXG4gICZfX21lZGlhXG4gICAgdmVydGljYWwtYWxpZ246IHRvcFxuXG4gICAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICAgIG1hcmdpbi1ib3R0b206IDFyZW1cbiAgICAgIHRleHQtYWxpZ246IGNlbnRlclxuXG4gICAgaW1nXG4gICAgICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgICAgICAgd2lkdGg6IDMzJVxuXG4gICZfX2JveFxuICAgIHBhZGRpbmctbGVmdDogMnJlbVxuICAgIHBhZGRpbmctdG9wOiAwXG4gICAgdmVydGljYWwtYWxpZ246IHRvcFxuXG4gICAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICAgIHBhZGRpbmc6IDBcblxuICAmX19oZWFkaW5nXG4gICAgLy9NaXhpbiBjYW4gYmUgZm91bmQgaW4gdHlwb2dyYXBoeVxuICAgICtzdGFuZGFyZC1oZWFkaW5nKClcbiAgICBtYXJnaW4tYm90dG9tOjFyZW07XG5cbiAgJl9fc3VidGl0bGVcbiAgICBjb2xvcjogJHN0b25lXG4gICAgbWFyZ2luLWJvdHRvbTogOHB4XG5cbiAgICBoM1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrXG4gICAgYVxuICAgICAgY29sb3I6ICRncmVlblxuICAgICAgbWFyZ2luLWxlZnQ6IDEwcHhcbiAgICAgIGlcbiAgICAgICAgYm9yZGVyOjFweCBzb2xpZCAkZ3JlZW5cbiAgICAgICAgcGFkZGluZzogMnB4XG5cbiAgJl9fdGV4dFxuXG4gICAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICAgIHRleHQtYWxpZ246IGxlZnRcblxuICAgICogKyAqXG4gICAgICBtYXJnaW4tdG9wOiAxcmVtXG5cblxuLy8gQ2FyZCBhcnRpY2xlIC0gVGhlc2UgYXJlIGZvdW5kIG9uIHRoZSBOZXdzIGFuZCBJbnNpZ2h0cyBwYWdlXG4uY2FyZC1hcnRpY2xlXG5cblxuICAmX19ib3hcbiAgICBib3gtc2hhZG93OiAwIDFweCAwICRncmVlblxuICAgIGRpc3BsYXk6IG5vbmVcbiAgICArdmVydC1wYWRkaW5nKDEsMSlcblxuICAgICogKyAqXG4gICAgICBtYXJnaW4tdG9wOiAxcmVtXG5cbiAgYVxuICAgICY6aG92ZXJcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZVxuXG4gIGgyXG4gICAgK3N0YW5kYXJkLWhlYWRpbmcoKSAvL01peGluIGNhbiBiZSBmb3VuZCBpbiB0eXBvZ3JhcGh5XG4gICAgJjpob3ZlclxuICAgICAgY29sb3I6JG5pZ2h0Z3JlZW5cblxuICBzbWFsbFxuICAgIGNvbG9yOiAjNjY2XG4gICAgZm9udC1zaXplOiAuNzVyZW1cblxuICBwXG5cbi5sb2FkZXJfX25hdlxuICBkaXNwbGF5OiB0YWJsZS1jZWxsXG4gIHBhZGRpbmctdG9wOiAxLjI1cmVtXG5cblxuLmNhcmQtdHJpcHRpY1xuICBkaXNwbGF5OiB0YWJsZVxuICBib3JkZXItdG9wOiAxcHggc29saWQgJGJvcmRlckNvbG9yXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkYm9yZGVyQ29sb3JcblxuICAmX19ib3hcbiAgICBwYWRkaW5nOiAycmVtXG4gICAgdmVydGljYWwtYWxpZ246IHRvcFxuXG4gICAgJjpudGgtY2hpbGQoMilcbiAgICAgICttZWRpYShcIj50YWJsZXRcIilcbiAgICAgICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAkYm9yZGVyQ29sb3JcbiAgICAgICAgLy9wYWRkaW5nOiAycmVtIDFyZW0gMnJlbSAxcmVtXG5cbiAgICAmOm50aC1jaGlsZCgzKVxuICAgICAgK21lZGlhKFwiPnRhYmxldFwiKVxuICAgICAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICRib3JkZXJDb2xvclxuICAgICAgICAvL3BhZGRpbmc6IDJyZW0gMnJlbSAycmVtIDFyZW1cblxuICAmX19tZWRpYVxuICAgIC8vYmFja2dyb3VuZC1jb2xvcjogJGdyZWVuXG4gICAgaGVpZ2h0OiAxNTBweFxuICAgIG92ZXJmbG93OiBoaWRkZW5cbiAgICBtYXJnaW4tYm90dG9tOiAycmVtXG5cbiAgICBpbWdcblxuICAmX19oZWFkaW5nLWxpbmtcbiAgICArc21hbGwtaGVhZGluZygpXG4gICAgY29sb3I6ICRzaXRlLXRleHQtY29sb3ItbGlua1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgIHRleHQtYWxpZ246IGNlbnRlclxuXG4gICAgJjpob3ZlclxuICAgICAgY29sb3I6ICRzaXRlLXRleHQtY29sb3ItbGluay1ob3ZlclxuXG4gICZfX3RleHRcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXJcbiIsIi8vXG4vL0NUQXMgLSBDYWxsIHRvIEFjdGlvbiBtb2R1bGVzXG4vL1xuXG4vL0NvbnRhY3QgQ1RBXG4vL1RoaXMgaXMgZm91bmQgb24gdGhlIGhvbWVwYWdlIG9ubHkgcmlnaHQgbm93XG4uY3RhLWNvbnRhY3RcbiAgYmFja2dyb3VuZC1jb2xvcjogJHNsYXRlXG4gIGRpc3BsYXk6IHRhYmxlXG4gIHdpZHRoOiAxMDAlO1xuXG4gICZfX2JveFxuICAgIHBhZGRpbmc6IDJyZW1cblxuICAmX19ib3g6bnRoLWNoaWxkKDIpXG4gICAgcGFkZGluZzogMnJlbSAwXG5cblxuICAmX190ZXh0XG4gICAgbWFyZ2luOiAwXG4gICAgcGFkZGluZzogMCAzLjVyZW0gMCAycmVtXG5cbiAgICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgICAgcGFkZGluZzogMFxuXG4gICZfX2J1dHRvblxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgIG1hcmdpbjogMCAycmVtIDAgMFxuXG4gICAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICAgIG1hcmdpbjogMFxuXG5cbi8vVmlkZW8gdGVhc2VyIENUQVxuLy9UaGlzIGlzIGZvdW5kIG9uIHRoZSBob21lcGFnZSBvbmx5IHJpZ2h0IG5vd1xuLmN0YS10ZWFzZXJcbiAgZGlzcGxheTogdGFibGVcbiAgcGFkZGluZzogMXJlbSAycmVtXG5cbiAgdmlkZW9cbiAgICB3aWR0aDogMTAwJVxuICAgIGhlaWdodDogMTAwJVxuXG4gICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgZmxleC1mbG93OiBjb2x1bW5cblxuICAmX19ib3hcbiAgICBwYWRkaW5nLXJpZ2h0OiAycmVtXG5cbiAgICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgICAgcGFkZGluZzogMFxuXG4gICZfX2hlYWRpbmdcblxuICAmX190ZXh0XG4gICAgbWFyZ2luLWJvdHRvbTogMnJlbVxuXG5cbiAgJl9fbWVkaWFcbiAgICBoZWlnaHQ6IDMwMHB4XG4gICAgb3ZlcmZsb3c6IGhpZGRlblxuXG4gICAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICAgIGhlaWdodDogYXV0b1xuICAgICAgbWFyZ2luLXRvcDogMnJlbVxuXG5cbi8vQ2VudGVyZWQgQ1RBXG4vL1RoaXMgaXMgZm91bmQgb24gdGhlIGhvbWVwYWdlIG9ubHkgcmlnaHQgbm93XG4uY3RhLWNlbnRlclxuICBwYWRkaW5nOiAycmVtXG4gIHRleHQtYWxpZ246IGNlbnRlclxuXG4gICZfX2hlYWRpbmdcblxuICAmX190ZXh0XG4gICAgcGFkZGluZzogMCA4cmVtXG4gICAgbWFyZ2luLWJvdHRvbTogMnJlbVxuXG4gICAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICAgIHBhZGRpbmc6IDBcblxuICAmX19idXR0b25cblxuXG5cbi8vU3Vic2NyaWJlIENUQSAtIFRoaXMgaXMgZm91bmQgYXQgdGhlIHRvcCBvZiB0aGUgZm9vdGVyXG4uY3RhLXN1YnNjcmliZVxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JlZW5cbiAgY29sb3I6ICR3aGl0ZVxuICArdmVydC1wYWRkaW5nKDEsMS41KVxuXG4gICZfX2hlYWRpbmdcbiAgICBjb2xvcjogJHdoaXRlXG4gICAgdGV4dC1hbGlnbjogY2VudGVyXG5cbiAgJl9fYm94XG4gICAgZGlzcGxheTogdGFibGVcbiAgICBtYXJnaW46IDAgYXV0b1xuICAgIHdpZHRoOiA3NSVcblxuICAvLyBUT0RPIHVzZSBjb2wgY2xhc3MgaW5zdGVhZCBmb3Igd2lkdGhcbiAgJl9faW5wdXQtYWRkLW9uXG5cblxuICAmX19pbnB1dFxuICAgIHBhZGRpbmc6IC45cmVtXG4gICAgd2lkdGg6IDEwMCVcblxuICAmX19idXR0b25cbiAgICBib3JkZXI6IDFweCBzb2xpZCAkd2hpdGVcbiAgICBjb2xvcjogJHdoaXRlXG4gICAgZm9udC1zaXplOiAxLjVyZW1cbiAgICBtYXJnaW4tbGVmdDogMXJlbVxuICAgIHdpZHRoOiAxMDAlXG4gICAgdHJhbnNpdGlvbjogYWxsIC4ycyBlYXNlXG5cbiAgICAmOmhvdmVyXG4gICAgICAvKlRoZXNlIHdpbGwgdHJhbnNpdGlvbiBvbiBob3ZlclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlXG4gICAgICBjb2xvcjogJGdyZWVuXG5cbiAgICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgICAgbWFyZ2luOiAxcmVtIDAgMCAwXG5cbiAgJl9fbWVzc2FnZVxuICAgIGRpc3BsYXk6IG5vbmVcbiAgICBwYWRkaW5nLXRvcDogMi41cmVtXG5cbiAgJl9fZXJyb3JcbiAgICBkaXNwbGF5OiBub25lXG4gICAgcGFkZGluZy10b3A6IDFyZW1cblxuICAgICYtbXNnXG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXJcblxuXG4vL1NpZGViYXIgQ1RBIC0gVGhpcyBpcyBmb3VuZCBvbiBpbnRlcm5hbCBwYWdlcyBvbmx5XG4uY3RhLXNpZGViYXJcbiAgcGFkZGluZzogMXJlbSAwIDAgNXJlbVxuICB2ZXJ0aWNhbC1hbGlnbjogdG9wXG5cbiAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICBwYWRkaW5nOiAzcmVtIDJyZW1cblxuICAmX19tZWRpYVxuICAgIC8vaGVpZ2h0OiAxODBweFxuICAgIC8vb3ZlcmZsb3c6IGhpZGRlblxuXG4gICAgK21lZGlhKFwiPD10YWJsZXRcIilcblxuXG4gICAgaW1nXG5cbiAgJl9faGVhZGluZ1xuICAgIGZvbnQtc2l6ZTogMS4yNXJlbVxuICAgICt2ZXJ0LW1hcmdpbiguNSwuNSlcblxuICAmX190ZXh0XG5cbiAgJl9fYnV0dG9uXG4gICAgbWFyZ2luLXRvcDogMXJlbVxuXG4vL0FkZCBzb21lIHNwYWNpbmcgd2hlbiB0aGVyZSdzIG11bHRpcGxlIHNpZGViYXIgaXRlbXNcbi5jdGEtc2lkZWJhcl9fYnV0dG9uICsgLmN0YS1zaWRlYmFyX19oZWFkaW5nLFxuLmN0YS1zaWRlYmFyX190ZXh0ICsgLmN0YS1zaWRlYmFyX19oZWFkaW5nXG4gIG1hcmdpbi10b3A6IDJyZW1cblxuXG5cbi8vU29jaWFsIENUQSAtIFRoZXNlIGFyZSBjdXJyZW50bHkgZm91bmQgYXQgdGhlIGJvdHRvbSBvZiB0aGUgYmxvZyBwb3N0c1xuLmN0YS1zb2NpYWxcbiAgcGFkZGluZy1sZWZ0OiAxcmVtXG5cbiAgLmljb25cbiAgICBmaWxsOiAkZ3JlZW5cblxuICAgICY6aG92ZXJcbiAgICAgIGZpbGw6ICRncmFwaGl0ZVxuXG4gIGFcbiAgICAmOmhvdmVyXG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmVcbiIsIi8vRm9vdGVyXG4kZm9vdGVyLWhlYWRlci1uYXY6IFRyZWJ1Y2hldCBNU1xuXG5mb290ZXJcblx0cGFkZGluZy1ib3R0b206IDVyZW1cblxuXHQrbWVkaWEoXCI8PXRhYmxldFwiKVxuXHRcdHBhZGRpbmc6IDBcblxuXG4uZm9vdGVyLWNvcHlyaWdodFxuXHRib3JkZXItdG9wOiAxcHggc29saWQgJGNsb3VkXG5cdGRpc3BsYXk6IHRhYmxlXG5cdHBhZGRpbmc6IDJyZW1cblx0d2lkdGg6IDEwMCVcblxuXHQrbWVkaWEoXCI8PXRhYmxldFwiKVxuXHRcdHBhZGRpbmc6IDJyZW0gMCAwIDBcblx0XHRkaXNwbGF5OiBibG9ja1xuXG5cdCZfX2xvZ28tYm94XG5cdFx0d2lkdGg6IDQ1MHB4XG5cblx0XHQrbWVkaWEoXCI8PXRhYmxldFwiKVxuXHRcdFx0ZGlzcGxheTogaW5saW5lLWJsb2NrXG5cdFx0XHR3aWR0aDogYXV0b1xuXG5cdFx0XHQubG9nb19fc3RhY2tlZFxuXHRcdFx0XHRkaXNwbGF5OiBpbmxpbmUtYmxvY2tcblx0XHRcdFx0d2lkdGg6IDI1MHB4XG5cblxuXHQmX19ib3hcblx0XHR0ZXh0LWFsaWduOiByaWdodFxuXG5cdFx0K21lZGlhKFwiPj10YWJsZXRcIiwgXCI+PWRlc2t0b3BcIilcblx0XHRcdHRleHQtYWxpZ246IHJpZ2h0XG5cblx0XHRzbWFsbFxuXHRcdFx0ZGlzcGxheTogYmxvY2tcblx0XHRcdGZvbnQtc2l6ZTogMTRweFxuXHRcdFx0cGFkZGluZy1yaWdodDogLjVyZW1cblxuXG5cdFx0XHQrbWVkaWEoXCI+PXRhYmxldFwiLCBcIj49ZGVza3RvcFwiKVxuXHRcdFx0XHRmb250LXNpemU6IDEycHhcblx0XHRcdFx0ZGlzcGxheTogaW5saW5lLWJsb2NrXG5cblx0XHRcdFx0Jjo6YmVmb3JlXG5cdFx0XHRcdCAgY29udGVudDogJ3wnXG5cblx0XHRcdFx0JjpudGgtY2hpbGQoMSlcblx0XHRcdFx0ICAmOjpiZWZvcmVcblx0XHRcdFx0ICAgIGNvbnRlbnQ6ICcnXG5cblx0XHQubmF2LW1pbm9yXG5cdFx0XHRsaVxuXHRcdFx0ICBhXG5cdFx0XHQgICAgZm9udC1zaXplOiAxNHB4XG5cdFx0XHQgICAgK21lZGlhKFwiPj10YWJsZXRcIiwgXCI+PWRlc2t0b3BcIilcblx0XHRcdCAgICAgIGZvbnQtc2l6ZTogMTJweFxuXG4uZm9vdGVyLWRpc2NsYWltZXJcblx0dGV4dC1hbGlnbjogY2VudGVyXG5cdHdpZHRoOiAxMDAlXG5cblx0Jl9fYm94XG5cdFx0Ym9yZGVyOiAxcHggc29saWQgJGZvb3Rlci10ZXh0XG5cdFx0ZGlzcGxheTogaW5saW5lLWJsb2NrXG5cdFx0dGV4dC1hbGlnbjogY2VudGVyXG5cdFx0cGFkZGluZzogMjBweFxuXHRcdG1hcmdpbjogNTBweCBhdXRvIDEwcHhcblxuXHRcdCttZWRpYShcIj49ZGVza3RvcFwiKVxuXHRcdCAgcGFkZGluZzogMjBweCAxMDBweFxuXG5cdHVsXG5cdFx0QGV4dGVuZCAlbWVudVxuXHRcdGRpc3BsYXk6IHRhYmxlXG5cdFx0bWFyZ2luOiAwIGF1dG9cblxuXHRcdGxpXG5cdFx0XHRkaXNwbGF5OiB0YWJsZS1jZWxsXG5cdFx0XHRib3JkZXI6IDFweCBzb2xpZCAjQ0NDQ0NDXG5cdFx0XHRib3JkZXItcmlnaHQ6IG5vbmVcblx0XHRcdGJvcmRlci1sZWZ0LXN0eWxlOiBkYXNoZWRcblx0XHRcdG1hcmdpbjogMCAxMHB4XG5cdFx0XHRwYWRkaW5nOiAuNXJlbVxuXHRcdFx0JjpsYXN0LWNoaWxkXG5cdFx0XHQgIGJvcmRlci1yaWdodDogMXB4ICNDQ0Mgc29saWRcblx0XHRcdCY6Zmlyc3QtY2hpbGRcblx0XHRcdCAgYm9yZGVyLWxlZnQtc3R5bGU6IHNvbGlkXG5cblx0aDYsIHAsIHVsXG5cdFx0Zm9udC1zaXplOiAxNHB4XG5cdFx0bWFyZ2luLWJvdHRvbTogMXJlbVxuXG5cdFx0K21lZGlhKFwiPj10YWJsZXRcIiwgXCI+PWRlc2t0b3BcIilcblx0XHRcdGZvbnQtc2l6ZTogMTJweFxuIiwiXG5Aa2V5ZnJhbWVzIGZhZGVJblxuICBmcm9tXG4gICAgb3BhY2l0eTogMFxuICB0b1xuICAgIG9wYWNpdHk6IDFcblxuLmhlYWRlcl9fbG9nby1ib3hcbiAgYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlXG4gIGJvcmRlci1sZWZ0OiAxcHggc29saWQgJGJvcmRlckNvbG9yXG4gIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICRib3JkZXJDb2xvclxuICBtYXJnaW46IDAgYXV0b1xuICBtYXgtd2lkdGg6IDEyMDBweFxuXG4vLyBGb3IgSUU5XG4ubm8tY3NzYW5pbWF0aW9ucyAuaGVhZGVyX19sb2dvLWJveFxuICBwYWRkaW5nLXRvcDogMFxuXG4uaGVhZGVyX19sb2dvXG4gIGJhY2tncm91bmQ6ICR3aGl0ZVxuXG5cbi5sb2dvXG4gIGRpc3BsYXk6IGJsb2NrXG4gIHBhZGRpbmc6IDByZW0gMCAwcmVtIDJyZW1cbiAgd2lkdGg6IDYwMHB4XG5cbiAgK21lZGlhKFwiPDkwMHB4XCIpXG4gICAgd2lkdGg6IDQwMHB4XG5cbiAgK21lZGlhKFwiPDUwMHB4XCIpXG4gICAgcGFkZGluZzogMXJlbVxuICAgIHdpZHRoOiAzMDBweFxuXG4vLyBGb3IgSUU5XG4ubm8tY3NzYW5pbWF0aW9ucyAubG9nb1xuICBoZWlnaHQ6IDY4cHhcbiAgcGFkZGluZzogMCAxcmVtXG5cblxuc3ZnXG5cbiAgcGF0aCwgcG9seWdvblxuICAgIGZpbGw6ICRncmVlblxuXG4gICY6aG92ZXIgcGF0aCxcbiAgJjpob3ZlciBwb2x5Z29uXG4gICAgb3BhY2l0eTogLjdcbiAgICB0cmFuc2l0aW9uOiBmaWxsIDAuMnMgZWFzZVxuICAgIGZpbGwtb3BhY2l0eTogMC43XG5cbi5sb2dvX19zdHJldGNoZWRcbiAgZGlzcGxheTogYmxvY2tcblxuICArbWVkaWEoXCI8OTAwcHhcIilcbiAgICBkaXNwbGF5OiBub25lXG5cbi5sb2dvX19zdGFja2VkXG4gIGRpc3BsYXk6IG5vbmVcblxuICArbWVkaWEoXCI8OTAwcHhcIilcbiAgICBkaXNwbGF5OiBibG9ja1xuXG5cbi8vIDI1IHBpZWNlc1xuLmxvZ29fX2dsb2JlXG4gIHBhdGhcbiAgLy9Mb2dvIExvYWQgQW5pbWF0aW9uXG4gIC8vICAgb3BhY2l0eTogMFxuICAvLyAgIGFuaW1hdGlvbjogZmFkZUluIGVhc2UtaW4gMVxuICAvLyAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzXG4gIC8vICAgYW5pbWF0aW9uLWR1cmF0aW9uOiAuNXNcblxuICAvLyBwYXRoOm50aC1jaGlsZCgxKVxuICAvLyAgIGFuaW1hdGlvbi1kZWxheTogMC4xc1xuXG4gIC8vIHBhdGg6bnRoLWNoaWxkKDIpXG4gIC8vICAgYW5pbWF0aW9uLWRlbGF5OiAwLjExc1xuXG4gIC8vIHBhdGg6bnRoLWNoaWxkKDMpXG4gIC8vICAgYW5pbWF0aW9uLWRlbGF5OiAwLjIyc1xuXG4gIC8vIHBhdGg6bnRoLWNoaWxkKDQpXG4gIC8vICAgYW5pbWF0aW9uLWRlbGF5OiAwLjEzc1xuXG4gIC8vIHBhdGg6bnRoLWNoaWxkKDUpXG4gIC8vICAgYW5pbWF0aW9uLWRlbGF5OiAwLjE0c1xuXG4gIC8vIHBhdGg6bnRoLWNoaWxkKDYpXG4gIC8vICAgYW5pbWF0aW9uLWRlbGF5OiAwLjE1c1xuXG4gIC8vIHBhdGg6bnRoLWNoaWxkKDcpXG4gIC8vICAgYW5pbWF0aW9uLWRlbGF5OiAwLjE2c1xuXG4gIC8vIHBhdGg6bnRoLWNoaWxkKDgpXG4gIC8vICAgYW5pbWF0aW9uLWRlbGF5OiAwLjM3c1xuXG4gIC8vIHBhdGg6bnRoLWNoaWxkKDkpXG4gIC8vICAgYW5pbWF0aW9uLWRlbGF5OiAwLjE4c1xuXG4gIC8vIHBhdGg6bnRoLWNoaWxkKDEwKVxuICAvLyAgIGFuaW1hdGlvbi1kZWxheTogMC4xOXNcblxuICAvLyBwYXRoOm50aC1jaGlsZCgxMSlcbiAgLy8gICBhbmltYXRpb24tZGVsYXk6IDAuMjBzXG5cbiAgLy8gcGF0aDpudGgtY2hpbGQoMTIpXG4gIC8vICAgYW5pbWF0aW9uLWRlbGF5OiAwLjIxc1xuXG4gIC8vIHBhdGg6bnRoLWNoaWxkKDEzKVxuICAvLyAgIGFuaW1hdGlvbi1kZWxheTogMC4xMnNcblxuICAvLyBwYXRoOm50aC1jaGlsZCgxNClcbiAgLy8gICBhbmltYXRpb24tZGVsYXk6IDAuMjNzXG5cbiAgLy8gcGF0aDpudGgtY2hpbGQoMTUpXG4gIC8vICAgYW5pbWF0aW9uLWRlbGF5OiAwLjM0c1xuXG4gIC8vIHBhdGg6bnRoLWNoaWxkKDE2KVxuICAvLyAgIGFuaW1hdGlvbi1kZWxheTogMC4yNXNcblxuXG4ubm8tY3NzYW5pbWF0aW9ucyAubG9nb19fZ2xvYmVcbiAgcGF0aFxuICAgIGZpbGw6ICRncmVlblxuICAgIG9wYWNpdHk6IDFcblxuLy8gT3RoZXIgY2xhc3NlcyBmb3IgYW5pbWFpdG9uIG1heWJlXG4vLyAubG9nb19fdGV4dFxuLy9cbi8vIC5sb2dvX19jb21tZXJjZVxuLy8gICBwYXRoLCBwb2x5Z29uXG4vL1xuLy9cbi8vIC5sb2dvX190cnVzdFxuLy8gICBwYXRoLCBwb2x5Z29uXG4vL1xuLy9cbi8vIC5sb2dvX190YWdsaW5lXG4vLyAgIHBhdGgsIHBvbHlnb25cbiIsIi8vLSBUaGlzIGNvbnRhaW5lciBob2xkIHRoZSBtYWluIGNvbnRlbnQgb24gZWFjaCBwYWdlXG4vLy0gSXQgaXMgZm91bmQgb24gYWxsIGludGVybmFsIHBhZ2VzXG5cbi8vLSBBbGwgXCJNYWluXCIgY2xhc3NlcyBoYXZlIHNoYXJlIHRoZXNlIHJ1bGVzXG4lbWFpblxuICBkaXNwbGF5OiB0YWJsZVxuICBwYWRkaW5nOiAxcmVtIDJyZW1cblxuLm1haW4tc3RhbmRhcmRcbiAgQGV4dGVuZCAlbWFpblxuICBwYWRkaW5nLWJvdHRvbTogNXJlbVxuXG4gICZfX2NvbnRlbnRcblxuICAgICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgICB0ZXh0LWFsaWduOiBsZWZ0XG5cbiAgICAmLmNvbC03LTEyXG4gICAgICBwYWRkaW5nLXRvcDogMS41cmVtXG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wXG5cbiAgJl9fdGV4dFxuXG4gICAgKiArICpcbiAgICAgIG1hcmdpbi10b3A6IDFyZW1cblxuICAgIGgyXG4gICAgICArc3RhbmRhcmQtaGVhZGluZygpXG4gICAgICArdmVydC1wYWRkaW5nKDEsMClcblxuICAgIC8vIERlZmF1bHQgdW5vcmRlcmVkIGxpc3RzIGluIGNvbnRlbnQgYXJlYXNcbiAgICB1bFxuICAgICAgcGFkZGluZy1sZWZ0OiAycmVtXG4gICAgICBsaXN0LXN0eWxlOiBkaXNjXG5cbiAgICAgIGxpXG4gICAgICAgIG1hcmdpbi10b3A6IDAuNXJlbVxuXG4gICAgLy8gRGVmYXVsdCBvcmRlcmVkIGxpc3RzIGluIGNvbnRlbnQgYXJlYXNcbiAgICBvbFxuICAgICAgcGFkZGluZy1sZWZ0OiAycmVtXG4gICAgICAvL2xpc3Qtc3R5bGUtdHlwZTogdXBwZXItcm9tYW5cblxuICAgIC8vIEtlZXAgc21hbGwgaW1hZ2VzIGZyb20gZ2V0dGluZyBnaWFudFxuICAgIGltZ1xuICAgICAgaGVpZ2h0OiBhdXRvXG4gICAgICB3aWR0aDogMTAwJVxuXG4gICAgICAvLyBHaXZlIHNtYWxsIGltYWdlcyBhIGNsYXNzIG9mIC5hdXRvIHNvIHRoZXkgZml0IGNvcnJlY3RseS5cbiAgICAgICYuYXV0b1xuICAgICAgICB3aWR0aDogYXV0b1xuXG5cbi8vIE1haW4gY29udGVudCBibG9jayBvbiBMZWFkZXJzaGlwIHBhZ2Vcbi5tYWluLWJpb3NcbiAgZGlzcGxheTogdGFibGVcbiAgcGFkZGluZzogMnJlbVxuXG5cbi8vIE1haW4gY29udGVudCBibG9jayBvbiBOZXdzIHBhZ2Vcbi5tYWluLW5ld3NcbiAgQGV4dGVuZCAlbWFpblxuXG4vL01haW4gY29udGVudCBsb2NhdGlvbnMgdGFibGVcbi5jaXR5LWNvbHVtblxuICB3aWR0aDoxMzVweFxuLmFkZHJlc3MtY29sdW1uXG4gIHdpZHRoOjMzNXB4XG4ucGhvbmUtY29sdW1uXG5cbi5sb2NhdGlvbi1waG9uZVxuICBjb2xvcjokbmlnaHRncmVlblxuICAmOmhvdmVyXG4gICAgY29sb3I6JGdyZWVuXG5cblxuLy8gTWFpbiBjb250ZW50IGJsb2NrIG9uIEJsb2cgUG9zdCBwYWdlXG4ubWFpbi1wb3N0XG4gIEBleHRlbmQgJW1haW5cblxuICAmX190ZXh0XG5cbiAgICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgICAgdGV4dC1hbGlnbjogbGVmdFxuXG4gICAgKiArICpcbiAgICAgIG1hcmdpbi10b3A6IDFyZW1cblxuICAgIGgyXG4gICAgICArc3RhbmRhcmQtaGVhZGluZygpXG5cbiAgICBoM1xuICAgICAgK21pbm9yLWhlYWRpbmcoKVxuXG4gICAgZmlnY2FwdGlvblxuICAgICAgY29sb3I6ICRncmFwaGl0ZVxuICAgICAgZm9udC1zaXplOiAuNzVyZW1cbiAgICAgIG1hcmdpbi10b3A6IDBcblxuICAgIGJsb2NrcXVvdGVcbiAgICAgICtibG9ja3F1b3RlKClcblxuXG4uYnJlYWRjcnVtYlxuICBwYWRkaW5nLWJvdHRvbTogMS41cmVtXG4gIGZvbnQtc2l6ZToxNHB4XG5cbiAgYVxuICAgIGNvbG9yOiRncmVlblxuICAgICY6aG92ZXJcbiAgICAgIGNvbG9yOiRuaWdodGdyZWVuXG4gIHNwYW5cbiAgICBjb2xvcjokc3RvbmVcbiIsIi5mb3JtLXN0YW5kYXJkXG4gIG1hcmdpbi10b3A6IDJyZW1cblxuICBpbnB1dCxcbiAgaW5wdXRbdHlwZT1cImVtYWlsXCJdLFxuICBpbnB1dFt0eXBlPVwibnVtYmVyXCJdLFxuICBpbnB1dFt0eXBlPVwicGFzc3dvcmRcIl0sXG4gIGlucHV0W3R5cGU9XCJzZWFyY2hcIl0sXG4gIGlucHV0W3R5cGU9XCJ0ZWxcIl0sXG4gIGlucHV0W3R5cGU9XCJ0ZXh0XCJdLFxuICBpbnB1dFt0eXBlPVwidXJsXCJdLFxuICBpbnB1dFt0eXBlPVwiY29sb3JcIl0sXG4gIGlucHV0W3R5cGU9XCJkYXRlXCJdLFxuICBpbnB1dFt0eXBlPVwibmFtZVwiXSxcbiAgaW5wdXRbdHlwZT1cImRhdGV0aW1lXCJdLFxuICBpbnB1dFt0eXBlPVwiZGF0ZXRpbWUtbG9jYWxcIl0sXG4gIGlucHV0W3R5cGU9XCJtb250aFwiXSxcbiAgaW5wdXRbdHlwZT1cInRpbWVcIl0sXG4gIGlucHV0W3R5cGU9XCJ3ZWVrXCJdLFxuICB0ZXh0YXJlYVxuICBcdGNvbG9yOiAkc2l0ZS10ZXh0LWNvbG9yXG4gIFx0Ym9yZGVyOiAxcHggc29saWQgJGJvcmRlckNvbG9yXG4gICAgYm94LXNpemluZzogY29udGVudC1ib3hcbiAgXHRib3JkZXItcmFkaXVzOiAwXG4gICAgZm9udC1zaXplOiAxcmVtXG4gIFx0cGFkZGluZzogMXJlbVxuICBcdGRpc3BsYXk6IGJsb2NrXG4gIFx0d2lkdGg6IDEwMCVcblxuXG4gIGxhYmVsXG4gICAgZGlzcGxheTogYmxvY2tcblxuICBpbnB1dFt0eXBlPVwiYnV0dG9uXCJdLFxuICBpbnB1dFt0eXBlPVwicmVzZXRcIl0sXG4gIGlucHV0W3R5cGU9XCJzdWJtaXRcIl1cbiAgICAvLyBhbnkgZGVmYXVsdCBidXR0b24gc3R5bGVzIHRoYXQgbmVlZCB0byBiZSBkaWZmZXJlbnQgb24gZm9ybXMgZ28gaGVyZVxuICAgIGRpc3BsYXk6IGJsb2NrXG5cblxuICAmX19jaGVja2JveFxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgIGZsb2F0OiBsZWZ0ICFpbXBvcnRhbnRcbiAgICB3aWR0aDogYXV0byAhaW1wb3J0YW50XG5cbiAgJl9fY2hlY2tib3ggKyBsYWJlbFxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgIGZsb2F0OiBsZWZ0ICFpbXBvcnRhbnRcbiAgICBtYXJnaW46IDEwcHggMTBweCAyMHB4IDEwcHggIWltcG9ydGFudFxuXG4gIC5zZWxlY3Rib3hcbiAgICBiYWNrZ3JvdW5kOiAkd2hpdGVcbiAgICBib3JkZXItcmFkaXVzOiAwXG4gICAgY3Vyc29yOiBwb2ludGVyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlXG4gICAgaGVpZ2h0OiA0OHB4XG5cbiAgICAmOjphZnRlclxuICAgICAgY29sb3I6ICNjY2NcbiAgICAgIGNvbnRlbnQ6ICfilr4nXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgICAgIHRvcDogMXJlbVxuICAgICAgcmlnaHQ6IC41cmVtXG4gICAgICB3aWR0aDogMXJlbVxuICAgICAgaGVpZ2h0OiAxcmVtXG5cblxuICBzZWxlY3RcbiAgICBiYWNrZ3JvdW5kOiAkd2hpdGVcbiAgICBib3gtc2hhZG93OiBub25lXG4gICAgYm9yZGVyLXJhZGl1czogMFxuICAgIGJvcmRlcjogMXB4IHNvbGlkICRib3JkZXJDb2xvclxuICAgIGNvbG9yOiAkc3RvbmVcbiAgICBjdXJzb3I6IHBvaW50ZXJcbiAgICBkaXNwbGF5OiBibG9ja1xuICAgIGZvbnQtc2l6ZTogMXJlbVxuICAgIGhlaWdodDogNjBweFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZVxuXG4gICAgcGFkZGluZy1sZWZ0OiAxcmVtXG4gICAgd2lkdGg6IDEwMCVcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6bm9uZVxuICAgIC1tb3otYXBwZWFyYW5jZTogbm9uZVxuICAgIGFwcGVhcmFuY2U6IG5vbmVcblxuXG4uY29udGFjdC11c19fYnV0dG9uXG4gIGJhY2tncm91bmQtY29sb3I6ICRzbGF0ZVxuICBtYXgtd2lkdGg6MTgzcHhcbiAgY2xlYXI6Ym90aFxuXG5cbi8vIElFOSBvdmVycmlkZVxuLy8gVXNpbmcgbW9kZXJuaXpyIGZvciBmZWF0dXJlIGRldGVjdGlvblxuLm5vLWNzc2dyYWRpZW50cyAuc2VsZWN0Ym94OjphZnRlclxuICB6LWluZGV4OiAtM1xuIl19 */