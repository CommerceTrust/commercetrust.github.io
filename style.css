article, aside, details, figcaption, figure, footer, header, hgroup, nav, section, summary {
  display: block; }

audio, canvas, video {
  display: inline-block; }

audio:not([controls]) {
  display: none;
  height: 0; }

[hidden], template {
  display: none; }

html {
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%; }

body {
  margin: 0; }

a {
  background: transparent; }
  a:hover, a:active {
    outline: 0; }

/* @if \$normalize_headings == true {
    h1 {
        font-size: \$h1_font_size;
        margin: \$h1_margin;
    }

    h2 {
        font-size: \$h2_font_size;
        margin: \$h2_margin;
    }

    h3 {
        font-size: \$h3_font_size;
        margin: \$h3_margin;
    }

    h4 {
        font-size: \$h4_font_size;
        margin: \$h4_margin;
    }

    h5 {
        font-size: \$h5_font_size;
        margin: \$h5_margin;
    }

    h6 {
        font-size: \$h6_font_size;
        margin: \$h6_margin;
    }
} */
abbr[title] {
  border-bottom: 1px dotted; }

b, strong {
  font-weight: bold; }

dfn {
  font-style: italic; }

mark {
  background: #ff0;
  color: #000; }

code, kbd, pre, samp {
  font-family: monospace, serif;
  font-size: 1em; }

pre {
  white-space: pre;
  white-space: pre-wrap;
  word-wrap: break-word; }

q {
  quotes: "\201C" "\201D" "\2018" "\2019"; }

q:before, q:after {
  content: '';
  content: none; }

/* /small {
    font-size: 80%;
} */
sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

img {
  border: 0; }

svg:not(:root) {
  overflow: hidden; }

figure {
  margin: 0; }

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

legend {
  border: 0;
  padding: 0;
  white-space: normal; }

button, input, select, textarea {
  font-family: inherit;
  font-size: 100%;
  margin: 0;
  vertical-align: baseline; }

button, input {
  line-height: normal; }

button, select {
  text-transform: none; }

button, html input[type="button"], input[type="reset"], input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer; }

button[disabled], input[disabled] {
  cursor: default; }

button::-moz-focus-inner, input::-moz-focus-inner {
  border: 0;
  padding: 0; }

textarea {
  overflow: auto;
  vertical-align: top; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

input[type="search"] {
  -webkit-appearance: textfield;
  -moz-box-sizing: content-box;
  box-sizing: content-box; }
  input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration {
    -webkit-appearance: none; }
input[type="checkbox"], input[type="radio"] {
  -moz-box-sizing: border-box;
       box-sizing: border-box;
  padding: 0; }

html {
  -moz-box-sizing: border-box;
       box-sizing: border-box;
  font-size: 16px;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased; }

*, *:before, *:after {
  -moz-box-sizing: inherit;
       box-sizing: inherit; }

body {
  color: #333;
  line-height: 1.5;
  font-family: News Cycle, sans-serif;
  -moz-background-size: auto 24px;
       background-size: auto 24px;
  margin: 0; }

.clearfix:after {
  content: "";
  display: table;
  clear: both; }

img, iframe, embed {
  width: 100%; }

.container {
  background-color: #fff;
  border-left: 1px solid #ccc;
  border-right: 1px solid #ccc;
  margin: 0 auto;
  max-width: 1200px; }

.col-2-12 {
  width: 16.66667%; }

.col-3-12 {
  width: 25%; }

.col-4-12 {
  width: 33.33333%; }

.col-5-12 {
  width: 41.66667%; }

.col-6-12 {
  width: 50%; }

.col-7-12 {
  width: 58.33333%; }

.col-8-12 {
  width: 66.66667%; }

* {
  margin: 0;
  padding: 0; }

body {
  background-color: #edeeeb;
  padding: 0; }

a {
  text-decoration: none; }

[class*=__button], input[type="button"], input[type="reset"], input[type="submit"] {
  border: 2px solid #267e64;
  display: inline-block;
  font-family: Playfair Display, serif;
  font-size: 19px;
  font-size: 1.2rem;
  font-style: italic;
  text-align: center;
  padding: 8px 16px;
  padding: .5rem 1rem;
  text-decoration: none;
  /*Items for transition */
  background-color: transparent;
  color: #267e64;
  /*Transition settings */
  -webkit-transition: all .2s ease;
     -moz-transition: all .2s ease;
       -o-transition: all .2s ease;
          transition: all .2s ease; }
  [class*=__button]:hover, input[type="button"]:hover, input[type="reset"]:hover, input[type="submit"]:hover {
    /*These will transition on hover */
    background-color: #267e64;
    color: #fff; }

table {
  margin: 0 0 1.5em;
  width: 100%; }

tr {
  border-bottom: 1px solid #e5e6e7; }
  tr:nth-child(even) {
    background-color: #f8f8f8; }

td {
  vertical-align: top;
  padding: 10px 5px; }

thead {
  background-color: #e5e6e7; }
  thead th {
    font-weight: 600;
    text-align: left;
    padding: 5px; }

.nav-minor {
  display: none; }
  .nav-minor li {
    display: inline-block; }
    .nav-minor li:after {
      display: inline-block;
      content: '|';
      color: #267e64;
      margin: 0 2px; }
    .nav-minor li:last-child:after {
      display: none; }
  .nav-minor__link {
    color: #333;
    display: inline-block; }
    .nav-minor__link:hover {
      color: #267e64; }

.nav-major {
  display: none; }
  .nav-major li {
    text-align: center;
    position: relative; }
    .nav-major li a {
      color: #333;
      font-family: Playfair Display, serif;
      font-size: 20px;
      font-size: 1.3rem;
      display: block;
      padding: 8px 0;
      padding: .5rem 0; }
      .nav-major li a:hover {
        background-color: #fff;
        color: #267e64; }
    .nav-major li ul {
      display: none;
      width: 100%;
      position: absolute;
      list-style-type: none; }
    .nav-major li:hover > ul {
      background-color: #fff;
      display: block; }

#mobile-menu {
  display: none !important; }

a.meanmenu-reveal {
  display: none; }

.mean-container .mean-bar {
  width: 100%;
  padding: 4px 0;
  min-height: 42px;
  z-index: 999999;
  position: absolute; }

.mean-container a.meanmenu-reveal {
  width: 22px;
  height: 22px;
  padding: 13px 13px 11px 13px;
  position: absolute;
  top: 0;
  right: 0;
  cursor: pointer;
  color: #267e64;
  text-decoration: none;
  font-size: 18px;
  text-indent: -9999em;
  line-height: 22px;
  font-size: 1px;
  display: block;
  font-family: Arial, Helvetica, sans-serif;
  font-weight: 700; }

.mean-container a.meanmenu-reveal span {
  display: block;
  background: #267e64;
  height: 3px;
  margin-top: 3px; }

.mean-container .mean-nav {
  float: left;
  width: 100%;
  background: #fff;
  margin-top: 44px; }

.mean-container .mean-nav ul {
  padding: 0;
  margin: 0;
  width: 100%;
  list-style-type: none; }

.mean-container .mean-nav ul li {
  position: relative;
  float: left;
  width: 100%; }

.mean-container .mean-nav ul li a {
  display: block;
  float: left;
  width: 90%;
  padding: 0.75em 5%;
  margin: 0;
  text-align: left;
  color: #333;
  border-top: solid 1px #e5e6e7;
  text-decoration: none;
  font-family: Playfair Display, serif; }
  .mean-container .mean-nav ul li a:active {
    color: #267e64; }
  .mean-container .mean-nav ul li a.mean-clicked {
    background: #267e64 !important;
    color: #fff; }

.mean-container .mean-nav ul li li a {
  width: 80%;
  padding: 1em 10%;
  border-top: solid 1px #e5e6e7;
  text-shadow: none !important;
  visibility: visible; }

.mean-container .mean-nav ul li.mean-last a {
  border-bottom: solid 1px #e5e6e7;
  margin-bottom: 0; }

.mean-container .mean-nav ul li li li a {
  width: 70%;
  padding: 1em 15%; }

.mean-container .mean-nav ul li li li li a {
  width: 60%;
  padding: 1em 20%; }

.mean-container .mean-nav ul li li li li li a {
  width: 50%;
  padding: 1em 25%; }

.mean-container .mean-nav ul li a:hover {
  background: #252525;
  background: rgba(255, 255, 255, 0.1); }

.mean-container .mean-nav ul li a.mean-expand {
  width: 26px;
  height: 28px;
  padding: 10px !important;
  text-align: center;
  position: absolute;
  right: 0;
  top: 0;
  z-index: 2;
  font-weight: 700;
  background: #edeeeb; }

.mean-container .mean-nav ul li a.mean-expand:hover {
  background: #267e64;
  color: #fff; }

.mean-container .mean-push {
  float: left;
  width: 100%;
  padding: 0;
  margin: 0;
  clear: both; }

.mean-nav .wrapper {
  width: 100%;
  padding: 0;
  margin: 0; }

.mean-container .mean-bar, .mean-container .mean-bar * {
  -moz-box-sizing: content-box;
  box-sizing: content-box; }

.mean-remove {
  display: none !important; }

/* --------------------------------
 *
 *Primary style
 *
 *-------------------------------- */

input {
  font-size: 25px;
  font-size: 1.6rem; }
  input[type="search"]::-ms-clear {
    /* removes close icon - IE */
    display: none; }
  input[type="search"]::-webkit-search-decoration, input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-results-button, input[type="search"]::-webkit-search-results-decoration {
    display: none; }

/* --------------------------------
 *
 *Main components
 *
 *-------------------------------- */
.cd-main-content, .cd-main-header {
  /* Force Hardware Acceleration in WebKit */
  -webkit-transform: translateZ(0);
     -moz-transform: translateZ(0);
          transform: translateZ(0);
  will-change: transform; }

.cd-main-content, .cd-main-header {
  position: relative;
  -webkit-transition: -webkit-transform 0.3s;
     -moz-transition: -moz-transform 0.3s;
       -o-transition: -o-transform 0.3s;
          transition: transform 0.3s; }

.cd-main-content {
  background: #e2e3df;
  min-height: 100vh;
  z-index: 2; }

.cd-main-header {
  height: 50px;
  background: #ffffff;
  z-index: 3; }

.nav-is-fixed .cd-main-header {
  /* add .nav-is-fixed class to body if you want a fixed navigation on > 1170px */
  position: fixed;
  top: 0;
  left: 0;
  width: 100%; }

.cd-logo {
  position: absolute;
  top: 12px;
  left: 5%; }
  .cd-logo img {
    display: block; }

.cd-header-buttons {
  position: absolute;
  display: inline-block;
  top: 3px;
  right: 5%; }
  .cd-header-buttons li {
    display: inline-block; }

.cd-search-trigger, .cd-nav-trigger {
  position: relative;
  display: block;
  width: 44px;
  height: 44px;
  overflow: hidden;
  white-space: nowrap;
  /* hide text */
  color: transparent;
  z-index: 3; }

.cd-search-trigger:before, .cd-search-trigger:after {
  /* search icon */
  content: '';
  position: absolute;
  -webkit-transition: opacity 0.3s;
     -moz-transition: opacity 0.3s;
       -o-transition: opacity 0.3s;
          transition: opacity 0.3s;
  /* Force Hardware Acceleration in WebKit */
  -webkit-transform: translateZ(0);
     -moz-transform: translateZ(0);
          transform: translateZ(0);
  -webkit-backface-visibility: hidden;
     -moz-backface-visibility: hidden;
          backface-visibility: hidden; }
.cd-search-trigger:before {
  /* lens */
  top: 11px;
  left: 11px;
  width: 18px;
  height: 18px;
  -moz-border-radius: 50%;
       border-radius: 50%;
  border: 3px solid #2e3233; }
.cd-search-trigger:after {
  /* handle */
  height: 3px;
  width: 8px;
  background: #2e3233;
  bottom: 14px;
  right: 11px;
  -webkit-transform: rotate(45deg);
     -moz-transform: rotate(45deg);
      -ms-transform: rotate(45deg);
       -o-transform: rotate(45deg);
          transform: rotate(45deg); }
.cd-search-trigger span {
  /* container for the X icon */
  position: absolute;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0; }
  .cd-search-trigger span:before, .cd-search-trigger span:after {
    /* close icon */
    content: '';
    position: absolute;
    display: inline-block;
    height: 3px;
    width: 22px;
    top: 50%;
    margin-top: -2px;
    left: 50%;
    margin-left: -11px;
    background: #2e3233;
    opacity: 0;
    filter: alpha(opacity=0);
    /* Force Hardware Acceleration in WebKit */
    -webkit-transform: translateZ(0);
       -moz-transform: translateZ(0);
            transform: translateZ(0);
    -webkit-backface-visibility: hidden;
       -moz-backface-visibility: hidden;
            backface-visibility: hidden;
    -webkit-transition: opacity 0.3s, -webkit-transform 0.3s;
       -moz-transition: opacity 0.3s, -moz-transform 0.3s;
         -o-transition: opacity 0.3s, -o-transform 0.3s;
            transition: opacity 0.3s, transform 0.3s; }
  .cd-search-trigger span:before {
    -webkit-transform: rotate(45deg);
       -moz-transform: rotate(45deg);
        -ms-transform: rotate(45deg);
         -o-transform: rotate(45deg);
            transform: rotate(45deg); }
  .cd-search-trigger span:after {
    -webkit-transform: rotate(-45deg);
       -moz-transform: rotate(-45deg);
        -ms-transform: rotate(-45deg);
         -o-transform: rotate(-45deg);
            transform: rotate(-45deg); }
.cd-search-trigger.search-is-visible:before, .cd-search-trigger.search-is-visible:after {
  /* hide search icon */
  opacity: 0;
  filter: alpha(opacity=0); }
.cd-search-trigger.search-is-visible span:before, .cd-search-trigger.search-is-visible span:after {
  /* show close icon */
  opacity: 1;
  filter: alpha(opacity=100); }
.cd-search-trigger.search-is-visible span:before {
  -webkit-transform: rotate(135deg);
     -moz-transform: rotate(135deg);
      -ms-transform: rotate(135deg);
       -o-transform: rotate(135deg);
          transform: rotate(135deg); }
.cd-search-trigger.search-is-visible span:after {
  -webkit-transform: rotate(45deg);
     -moz-transform: rotate(45deg);
      -ms-transform: rotate(45deg);
       -o-transform: rotate(45deg);
          transform: rotate(45deg); }

.cd-nav-trigger span {
  /* hamburger icon in CSS */
  position: absolute;
  display: inline-block;
  height: 3px;
  width: 24px;
  background: #2e3233;
  /* line in the center */
  position: absolute;
  top: 50%;
  right: 10px;
  margin-top: -2px;
  -webkit-transition: background 0.3s 0.3s;
     -moz-transition: background 0.3s 0.3s;
       -o-transition: background 0.3s 0.3s;
          transition: background 0.3s 0.3s; }
  .cd-nav-trigger span:before, .cd-nav-trigger span:after {
    /* hamburger icon in CSS */
    position: absolute;
    display: inline-block;
    height: 3px;
    width: 24px;
    background: #2e3233; }
  .cd-nav-trigger span:before, .cd-nav-trigger span:after {
    /* other 2 lines */
    content: '';
    right: 0;
    /* Force Hardware Acceleration in WebKit */
    -webkit-transform: translateZ(0);
       -moz-transform: translateZ(0);
            transform: translateZ(0);
    -webkit-backface-visibility: hidden;
       -moz-backface-visibility: hidden;
            backface-visibility: hidden;
    -webkit-transform-origin: 0% 50%;
       -moz-transform-origin: 0% 50%;
        -ms-transform-origin: 0% 50%;
         -o-transform-origin: 0% 50%;
            transform-origin: 0% 50%;
    -webkit-transition: -webkit-transform 0.3s 0.3s;
       -moz-transition: -moz-transform 0.3s 0.3s;
         -o-transition: -o-transform 0.3s 0.3s;
            transition: transform 0.3s 0.3s; }
  .cd-nav-trigger span:before {
    /* menu icon top line */
    top: -6px; }
  .cd-nav-trigger span:after {
    /* menu icon bottom line */
    top: 6px; }
.cd-nav-trigger.nav-is-visible span {
  /* hide line in the center */
  background: rgba(46, 50, 51, 0); }
  .cd-nav-trigger.nav-is-visible span:before, .cd-nav-trigger.nav-is-visible span:after {
    /* keep visible other 2 lines */
    background: #2e3233; }
  .cd-nav-trigger.nav-is-visible span:before {
    -webkit-transform: translateX(4px) translateY(-3px) rotate(45deg);
       -moz-transform: translateX(4px) translateY(-3px) rotate(45deg);
        -ms-transform: translateX(4px) translateY(-3px) rotate(45deg);
         -o-transform: translateX(4px) translateY(-3px) rotate(45deg);
            transform: translateX(4px) translateY(-3px) rotate(45deg); }
  .cd-nav-trigger.nav-is-visible span:after {
    -webkit-transform: translateX(4px) translateY(2px) rotate(-45deg);
       -moz-transform: translateX(4px) translateY(2px) rotate(-45deg);
        -ms-transform: translateX(4px) translateY(2px) rotate(-45deg);
         -o-transform: translateX(4px) translateY(2px) rotate(-45deg);
            transform: translateX(4px) translateY(2px) rotate(-45deg); }

.cd-primary-nav {
  position: fixed;
  top: 0;
  right: 0;
  height: 100%;
  width: 260px;
  background: #2e3233;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  z-index: 1;
  /* Force Hardware Acceleration in WebKit */
  -webkit-transform: translateZ(0);
     -moz-transform: translateZ(0);
          transform: translateZ(0);
  -webkit-transform: translateX(0);
     -moz-transform: translateX(0);
      -ms-transform: translateX(0);
       -o-transform: translateX(0);
          transform: translateX(0);
  -webkit-transition: -webkit-transform 0.3s;
     -moz-transition: -moz-transform 0.3s;
       -o-transition: -o-transform 0.3s;
          transition: transform 0.3s; }
  .cd-primary-nav ul {
    position: fixed;
    top: 0;
    right: 0;
    height: 100%;
    width: 260px;
    background: #2e3233;
    overflow: auto;
    -webkit-overflow-scrolling: touch;
    z-index: 1;
    /* Force Hardware Acceleration in WebKit */
    -webkit-transform: translateZ(0);
       -moz-transform: translateZ(0);
            transform: translateZ(0);
    -webkit-transform: translateX(0);
       -moz-transform: translateX(0);
        -ms-transform: translateX(0);
         -o-transform: translateX(0);
            transform: translateX(0);
    -webkit-transition: -webkit-transform 0.3s;
       -moz-transition: -moz-transform 0.3s;
         -o-transition: -o-transform 0.3s;
            transition: transform 0.3s; }
  .cd-primary-nav a, .cd-primary-nav ul a {
    display: block;
    height: 50px;
    line-height: 50px;
    padding: 0 20px;
    color: #ffffff;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    border-bottom: 1px solid #3a3f40;
    -webkit-transform: translateZ(0);
       -moz-transform: translateZ(0);
            transform: translateZ(0);
    will-change: transform, opacity;
    -webkit-transition: -webkit-transform 0.3s, opacity 0.3s;
       -moz-transition: -moz-transform 0.3s, opacity 0.3s;
         -o-transition: -o-transform 0.3s, opacity 0.3s;
            transition: transform 0.3s, opacity 0.3s; }
  .cd-primary-nav.is-hidden, .cd-primary-nav ul.is-hidden {
    /* secondary navigations hidden by default */
    -webkit-transform: translateX(100%);
       -moz-transform: translateX(100%);
        -ms-transform: translateX(100%);
         -o-transform: translateX(100%);
            transform: translateX(100%); }
  .cd-primary-nav.moves-out > li > a, .cd-primary-nav ul.moves-out > li > a {
    /* push the navigation items to the left - and lower down opacity - when secondary nav slides in */
    -webkit-transform: translateX(-100%);
       -moz-transform: translateX(-100%);
        -ms-transform: translateX(-100%);
         -o-transform: translateX(-100%);
            transform: translateX(-100%);
    opacity: 0;
    filter: alpha(opacity=0); }
  .cd-primary-nav .see-all a {
    /* different style for the See all button on mobile and tablet */
    color: #69aa6f; }
  .cd-primary-nav .cd-nav-gallery .cd-nav-item, .cd-primary-nav .cd-nav-icons .cd-nav-item {
    /* items with picture (or icon) and title */
    height: 80px;
    line-height: 80px; }
  .cd-primary-nav .cd-nav-gallery .cd-nav-item h3, .cd-primary-nav .cd-nav-icons .cd-nav-item h3 {
    overflow: hidden;
    text-overflow: ellipsis; }
  .cd-primary-nav .cd-nav-gallery .cd-nav-item {
    padding-left: 90px; }
    .cd-primary-nav .cd-nav-gallery .cd-nav-item img {
      position: absolute;
      display: block;
      height: 40px;
      width: auto;
      left: 20px;
      top: 50%;
      margin-top: -20px; }
  .cd-primary-nav .cd-nav-icons .cd-nav-item {
    padding-left: 75px; }
    .cd-primary-nav .cd-nav-icons .cd-nav-item p {
      color: #2e3233;
      font-size: 20px;
      font-size: 1.3rem;
      /* hide description on small devices */
      display: none; }
    .cd-primary-nav .cd-nav-icons .cd-nav-item:before {
      /* item icon */
      content: '';
      display: block;
      position: absolute;
      left: 20px;
      top: 50%;
      margin-top: -20px;
      width: 40px;
      height: 40px;
      background-repeat: no-repeat;
      background-position: center center;
      -moz-background-size: 40px 40px;
           background-size: 40px 40px; }
    .cd-primary-nav .cd-nav-icons .cd-nav-item.item-1:before {
      background-image: url("../img/line-icon-1.svg"); }
    .cd-primary-nav .cd-nav-icons .cd-nav-item.item-2:before {
      background-image: url("../img/line-icon-2.svg"); }
    .cd-primary-nav .cd-nav-icons .cd-nav-item.item-3:before {
      background-image: url("../img/line-icon-3.svg"); }
    .cd-primary-nav .cd-nav-icons .cd-nav-item.item-4:before {
      background-image: url("../img/line-icon-4.svg"); }
    .cd-primary-nav .cd-nav-icons .cd-nav-item.item-5:before {
      background-image: url("../img/line-icon-5.svg"); }
    .cd-primary-nav .cd-nav-icons .cd-nav-item.item-6:before {
      background-image: url("../img/line-icon-6.svg"); }
    .cd-primary-nav .cd-nav-icons .cd-nav-item.item-7:before {
      background-image: url("../img/line-icon-7.svg"); }
    .cd-primary-nav .cd-nav-icons .cd-nav-item.item-8:before {
      background-image: url("../img/line-icon-8.svg"); }

.has-children > a, .go-back a {
  position: relative; }

.has-children > a:before, .has-children > a:after {
  /* arrow icon in CSS - for element with nested unordered lists */
  content: '';
  position: absolute;
  top: 50%;
  margin-top: -1px;
  display: inline-block;
  height: 2px;
  width: 10px;
  background: #464c4e;
  -webkit-backface-visibility: hidden;
     -moz-backface-visibility: hidden;
          backface-visibility: hidden; }

.go-back a:before, .go-back a:after {
  /* arrow icon in CSS - for element with nested unordered lists */
  content: '';
  position: absolute;
  top: 50%;
  margin-top: -1px;
  display: inline-block;
  height: 2px;
  width: 10px;
  background: #464c4e;
  -webkit-backface-visibility: hidden;
     -moz-backface-visibility: hidden;
          backface-visibility: hidden; }

.has-children > a:before, .go-back a:before {
  -webkit-transform: rotate(45deg);
     -moz-transform: rotate(45deg);
      -ms-transform: rotate(45deg);
       -o-transform: rotate(45deg);
          transform: rotate(45deg); }

.has-children > a:after, .go-back a:after {
  -webkit-transform: rotate(-45deg);
     -moz-transform: rotate(-45deg);
      -ms-transform: rotate(-45deg);
       -o-transform: rotate(-45deg);
          transform: rotate(-45deg); }

.has-children > a {
  padding-right: 40px; }
  .has-children > a:before, .has-children > a:after {
    /* arrow goes on the right side - children navigation */
    right: 20px;
    -webkit-transform-origin: 9px 50%;
       -moz-transform-origin: 9px 50%;
        -ms-transform-origin: 9px 50%;
         -o-transform-origin: 9px 50%;
            transform-origin: 9px 50%; }

.cd-primary-nav .go-back a {
  padding-left: 40px; }
  .cd-primary-nav .go-back a:before, .cd-primary-nav .go-back a:after {
    /* arrow goes on the left side - go back button */
    left: 20px;
    -webkit-transform-origin: 1px 50%;
       -moz-transform-origin: 1px 50%;
        -ms-transform-origin: 1px 50%;
         -o-transform-origin: 1px 50%;
            transform-origin: 1px 50%; }

.cd-search {
  position: absolute;
  height: 50px;
  width: 100%;
  top: 50px;
  left: 0;
  z-index: 3;
  opacity: 0;
  filter: alpha(opacity=0);
  visibility: hidden;
  -webkit-transition: opacity .3s 0s, visibility 0s .3s;
     -moz-transition: opacity .3s 0s, visibility 0s .3s;
       -o-transition: opacity .3s 0s, visibility 0s .3s;
          transition: opacity .3s 0s, visibility 0s .3s; }
  .cd-search form {
    height: 100%;
    width: 100%; }
  .cd-search input {
    -moz-border-radius: 0;
         border-radius: 0;
    border: none;
    background: #ffffff;
    height: 100%;
    width: 100%;
    padding: 0 5%;
    -moz-box-shadow: inset 0 1px 0 #e2e3df, 0 3px 6px rgba(0, 0, 0, 0.05);
         box-shadow: inset 0 1px 0 #e2e3df, 0 3px 6px rgba(0, 0, 0, 0.05);
    appearance: none; }
    .cd-search input::-webkit-input-placeholder, .cd-search input::-moz-placeholder, .cd-search input:-moz-placeholder, .cd-search input:-ms-input-placeholder {
      color: #c9cbc4; }
    .cd-search input:focus {
      outline: none; }
  .cd-search.is-visible {
    opacity: 1;
    filter: alpha(opacity=100);
    visibility: visible;
    -webkit-transition: opacity .3s 0s, visibility 0s 0s;
       -moz-transition: opacity .3s 0s, visibility 0s 0s;
         -o-transition: opacity .3s 0s, visibility 0s 0s;
            transition: opacity .3s 0s, visibility 0s 0s; }

.nav-is-fixed .cd-search {
  position: fixed; }

.cd-overlay {
  /* shadow layer visible when navigation is active */
  position: fixed;
  z-index: 2;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
  cursor: pointer;
  background-color: rgba(105, 170, 111, 0.8);
  visibility: hidden;
  opacity: 0;
  filter: alpha(opacity=0);
  -webkit-backface-visibility: hidden;
     -moz-backface-visibility: hidden;
          backface-visibility: hidden;
  -webkit-transition: opacity 0.3s 0s, visibility 0s 0.3s, -webkit-transform 0.3s 0s;
     -moz-transition: opacity 0.3s 0s, visibility 0s 0.3s, -moz-transform 0.3s 0s;
       -o-transition: opacity 0.3s 0s, visibility 0s 0.3s, -o-transform 0.3s 0s;
          transition: opacity 0.3s 0s, visibility 0s 0.3s, transform 0.3s 0s; }
  .cd-overlay.is-visible {
    opacity: 1;
    filter: alpha(opacity=100);
    visibility: visible;
    -webkit-transition: opacity 0.3s 0s, visibility 0s 0s, -webkit-transform 0.3s 0s;
       -moz-transition: opacity 0.3s 0s, visibility 0s 0s, -moz-transform 0.3s 0s;
         -o-transition: opacity 0.3s 0s, visibility 0s 0s, -o-transform 0.3s 0s;
            transition: opacity 0.3s 0s, visibility 0s 0s, transform 0.3s 0s; }

/* --------------------------------
 *
 *support for no js
 *
 *-------------------------------- */
.no-js .cd-primary-nav {
  position: relative;
  height: auto;
  width: 100%;
  overflow: visible;
  visibility: visible;
  z-index: 2; }
.no-js .cd-search {
  position: relative;
  top: 0;
  opacity: 1;
  filter: alpha(opacity=100);
  visibility: visible; }

.banner-tall {
  background-image: url(images/boat.jpg);
  background-position: center;
  -moz-background-size: cover;
       background-size: cover;
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-box;
  display: -ms-flexbox;
  display: flex;
  height: 200px; }
  .banner-tall__title {
    -webkit-align-self: center;
        -ms-flex-item-align: center;
            align-self: center;
    color: #fff;
    font-family: serif;
    font-size: 32px;
    font-size: 2rem;
    font-weight: 400;
    line-height: 1;
    margin: 0 0 16px 16px;
    margin: 0 0 1rem 1rem;
    text-shadow: 2px 2px 2px #333; }

.banner-standard {
  background: #267e64;
  color: #fff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-flow: row wrap;
      -ms-flex-flow: row wrap;
          flex-flow: row wrap;
  -webkit-justify-content: space-around;
      -ms-flex-pack: distribute;
          justify-content: space-around;
  -webkit-box-align: stretch;
  -webkit-align-items: stretch;
     -moz-box-align: stretch;
      -ms-flex-align: stretch;
          align-items: stretch; }
  .banner-standard__box {
    padding: 16px 32px;
    padding: 1rem 2rem; }
  .banner-standard__title {
    font-family: Playfair Display, serif;
    font-size: 32px;
    font-size: 2rem;
    font-weight: 400; }
  .banner-standard__media {
    background-color: #edeeeb; }
  .banner-standard__media-approach {
    background-image: url(../images/meeting.jpg);
    background-position: center;
    -moz-background-size: cover;
         background-size: cover; }
  .banner-standard__media-leadership {
    background-image: url(../images/people.jpg);
    background-position: center;
    -moz-background-size: cover;
         background-size: cover; }

.banner-panorama {
  background-image: url(../images/trees.jpg);
  background-position: center;
  -moz-background-size: cover;
       background-size: cover;
  height: 255px; }

.card-diptic {
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-box;
  display: -ms-flexbox;
  display: flex;
  border-top: 1px solid #ccc;
  border-bottom: 1px solid #ccc; }
  .card-diptic__box {
    padding: 32px 16px;
    padding: 2rem 1rem; }
  .card-diptic__title {
    color: #267e64;
    font-family: Playfair Display, serif;
    font-size: 32px;
    font-size: 2rem;
    font-weight: 400;
    line-height: 1;
    text-align: center; }
  .card-diptic__media {
    background-color: #267e64;
    height: 150px; }
  .card-diptic__text {
    text-align: center; }
  .card-diptic ul {
    text-align: center; }
    .card-diptic ul li {
      display: inline-block;
      list-style: none; }
  .card-diptic__link {
    color: #267e64;
    display: inline-block;
    font-family: Playfair Display, serif;
    padding: 0 6px;
    padding: 0 .4rem; }
    .card-diptic__link:hover {
      color: #455652; }

.card-bio {
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-box;
  display: -ms-flexbox;
  display: flex;
  padding-bottom: 32px;
  padding-bottom: 2rem; }
  .card-bio__media {
    background-color: #267e64;
    height: 355px; }
  .card-bio__box {
    -webkit-box-flex: 4;
    -webkit-flex: 4;
       -moz-box-flex: 4;
        -ms-flex: 4;
            flex: 4;
    padding-top: 16px;
    padding-top: 1rem; }
  .card-bio__title {
    color: #267e64;
    font-family: Playfair Display, serif;
    font-size: 32px;
    font-size: 2rem;
    font-weight: 400;
    line-height: 1; }
  .card-bio__subtitle {
    color: #ccc; }
  .card-bio__text * + * {
    margin-top: 16px;
    margin-top: 1rem; }

.card-article__box {
  -moz-box-shadow: 0 1px 0 #267e64;
       box-shadow: 0 1px 0 #267e64;
  padding-top: 24px;
  padding-bottom: 24px; }
  .card-article__box * + * {
    margin-top: 16px;
    margin-top: 1rem; }
.card-article h2 {
  color: #267e64;
  font-family: Playfair Display, serif;
  font-size: 32px;
  font-size: 2rem;
  font-weight: 400;
  line-height: 1; }
.card-article small {
  color: #ccc;
  font-size: 12px;
  font-size: .75rem; }

.card-triptic {
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-box;
  display: -ms-flexbox;
  display: flex;
  border-top: 1px solid #ccc;
  border-bottom: 1px solid #ccc; }
  .card-triptic__box {
    padding: 32px;
    padding: 2rem; }
  .card-triptic__media {
    height: 150px;
    overflow: hidden; }
  .card-triptic__title-link {
    color: #267e64;
    font-family: Playfair Display, serif;
    font-size: 22px;
    font-size: 1.375rem;
    font-weight: 400;
    line-height: 1;
    color: #267e64;
    display: inline-block;
    text-align: center; }
    .card-triptic__title-link:hover {
      color: #455652; }
  .card-triptic__text {
    text-align: center; }

.cta-contact {
  background-color: #edeeeb;
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
     -moz-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
     -moz-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center; }
  .cta-contact__box {
    display: -webkit-box;
    display: -webkit-flex;
    display: -moz-box;
    display: -ms-flexbox;
    display: flex;
    padding: 16px 32px;
    padding: 1rem 2rem; }
  .cta-contact__text {
    -webkit-box-flex: 4;
    -webkit-flex: 4;
       -moz-box-flex: 4;
        -ms-flex: 4;
            flex: 4;
    margin: 0; }
  .cta-contact__button {
    -webkit-box-flex: 1;
    -webkit-flex: 1;
       -moz-box-flex: 1;
        -ms-flex: 1;
            flex: 1; }

.cta-teaser {
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-flow: row wrap;
      -ms-flex-flow: row wrap;
          flex-flow: row wrap;
  -webkit-justify-content: space-around;
      -ms-flex-pack: distribute;
          justify-content: space-around;
  -webkit-box-align: stretch;
  -webkit-align-items: stretch;
     -moz-box-align: stretch;
      -ms-flex-align: stretch;
          align-items: stretch; }
  .cta-teaser__box {
    padding: 16px 32px;
    padding: 1rem 2rem; }
  .cta-teaser__title {
    color: #267e64;
    font-family: Playfair Display, serif;
    font-size: 32px;
    font-size: 2rem;
    font-weight: 400;
    line-height: 1; }
  .cta-teaser__button {
    display: inline-block;
    margin-top: 16px;
    margin-top: 1rem; }
  .cta-teaser__media {
    background-image: url(../images/meeting.jpg);
    background-position: center;
    -moz-background-size: cover;
         background-size: cover; }

.cta-center {
  padding: 32px;
  padding: 2rem;
  text-align: center; }
  .cta-center__title {
    color: #267e64;
    font-family: Playfair Display, serif;
    font-size: 32px;
    font-size: 2rem;
    font-weight: 400;
    line-height: 1; }
  .cta-center__button {
    margin-top: 16px;
    margin-top: 1rem; }

.cta-subscribe {
  background-color: #267e64;
  color: #fff;
  padding-top: 24px;
  padding-bottom: 24px; }
  .cta-subscribe__title {
    font-family: Playfair Display, serif;
    margin: 0;
    text-align: center; }
  .cta-subscribe__box {
    display: -webkit-box;
    display: -webkit-flex;
    display: -moz-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
    -webkit-justify-content: center;
       -moz-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center; }
  .cta-subscribe__input-add-on {
    display: -webkit-box;
    display: -webkit-flex;
    display: -moz-box;
    display: -ms-flexbox;
    display: flex;
    width: 66.66667%; }
  .cta-subscribe__input {
    -webkit-box-flex: 1;
    -webkit-flex: 1;
       -moz-box-flex: 1;
        -ms-flex: 1;
            flex: 1; }
  .cta-subscribe__button {
    margin-left: 10px;
    color: #fff !important;
    border: 2px solid #fff !important; }
.cta-sidebar__media {
  background-color: #267e64; }
.cta-sidebar__title {
  color: #267e64;
  font-family: Playfair Display, serif;
  font-size: 20px;
  font-size: 1.25rem;
  font-weight: 400;
  margin-top: 12px;
  margin-bottom: 12px; }
.cta-sidebar__button {
  margin-top: 16px;
  margin-top: 1rem; }

.cta-social {
  padding-left: 16px;
  padding-left: 1rem; }
  .cta-social .icon {
    fill: #267e64; }
    .cta-social .icon:hover {
      fill: #ccc; }

.nav-footer .footer-nav__major, .footer-copyright__box .nav-minor, .footer-disclaimer ul {
  list-style: none;
  margin-left: 0;
  margin-bottom: 0;
  padding-left: 0; }
  .nav-footer .footer-nav__major ul, .footer-copyright__box .nav-minor ul, .footer-disclaimer ul ul {
    list-style: none;
    margin-left: 0;
    margin-bottom: 0;
    padding-left: 0; }

.visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; }

footer {
  padding-bottom: 205px; }

.nav-footer {
  padding: 30px 20px 20px;
  text-align: center; }
  .nav-footer__link {
    font-size: 14px; }
  .nav-footer__box {
    padding: 0 10px; }
  .nav-footer__box-narrow {
    padding: 0 10px; }
  .nav-footer__button {
    display: block;
    color: #455652;
    border: 1px solid #455652;
    font-size: 16px;
    margin-bottom: 25px;
    word-wrap: break-word; }
  .nav-footer .footer-nav__major {
    margin-top: 0; }
    .nav-footer .footer-nav__major > li {
      font-family: Trebuchet MS;
      font-size: 16px; }
    .nav-footer .footer-nav__major a {
      color: #333; }
      .nav-footer .footer-nav__major a:hover {
        color: #267e64; }
  .nav-footer__sub-links {
    font-size: 14px;
    display: none; }

.footer-copyright {
  border-top: 1px solid #e5e6e7;
  padding: 20px 30px 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-box;
  display: -ms-flexbox;
  display: flex; }
  .footer-copyright__logo {
    display: none; }
  .footer-copyright__box {
    text-align: center; }
    .footer-copyright__box small, .footer-copyright__box .nav-minor {
      display: inline-block;
      font-size: 14px; }
    .footer-copyright__box .nav-minor li a {
      font-size: 14px; }

.footer-disclaimer {
  border: 1px solid #455652;
  text-align: center;
  padding: 20px;
  margin: 50px auto 10px;
  width: 91.66667%; }
  .footer-disclaimer h6, .footer-disclaimer p, .footer-disclaimer ul {
    font-size: 14px; }
  .footer-disclaimer p {
    margin-bottom: 0; }
  .footer-disclaimer h6 {
    margin: 0; }
  .footer-disclaimer ul {
    margin-top: 0; }
    .footer-disclaimer ul li {
      display: inline-block;
      margin: 0 10px; }

header {
  background-color: #fff;
  padding: 0 32px;
  padding: 0 2rem; }

.header__logo {
  display: block;
  width: 275px; }

.main-standard, .main-bios, .main-news, .main-post {
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-box;
  display: -ms-flexbox;
  display: flex;
  padding: 16px 32px;
  padding: 1rem 2rem; }

.main-standard__text * + * {
  margin-top: 16px;
  margin-top: 1rem; }
.main-standard__text h2 {
  color: #267e64;
  font-family: Playfair Display, serif;
  font-size: 32px;
  font-size: 2rem;
  font-weight: 400;
  line-height: 1; }

.main-bios {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
     -moz-box-orient: vertical;
     -moz-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column; }

.main-post__text * + * {
  margin-top: 16px;
  margin-top: 1rem; }
.main-post__text h2 {
  color: #267e64;
  font-family: Playfair Display, serif;
  font-size: 32px;
  font-size: 2rem;
  font-weight: 400;
  line-height: 1; }
.main-post__text h3 {
  color: #455652;
  font-family: Playfair Display, serif;
  font-size: 20px;
  font-size: 1.25rem;
  font-weight: 700;
  line-height: 1;
  text-transform: uppercase;
  margin-top: 36px;
  margin-bottom: 0px; }
.main-post__text figcaption {
  color: #ccc;
  font-size: 12px;
  font-size: .75rem;
  margin-top: 0; }
.main-post__text blockquote {
  color: #267e64;
  font-family: Playfair Display, serif;
  font-size: 24px;
  font-size: 1.5rem;
  font-style: italic;
  font-weight: 700;
  margin-top: 36px;
  margin-bottom: 36px; }

input[type="email"], input[type="number"], input[type="password"], input[type="search"], input[type="tel"], input[type="text"], input[type="url"], input[type="color"], input[type="date"], input[type="name"], input[type="datetime"], input[type="datetime-local"], input[type="month"], input[type="time"], input[type="week"], select, textarea {
  color: #333;
  border: 1px solid #ccc;
  -moz-border-radius: 0;
       border-radius: 0;
  padding: 15px;
  display: block;
  width: 100%; }

label {
  display: block; }

input[type="button"], input[type="reset"], input[type="submit"] {
  display: block; }

.form-standard__checkbox {
  display: inline-block; }
.form-standard__checkbox + label {
  display: inline-block; }


@media (max-width: 768px) {

  .col-2-12 {
    width: 100%; }

  .col-3-12 {
    width: 100%; }

  .col-4-12 {
    width: 100%; }

  .col-5-12 {
    width: 100%; }

  .col-6-12 {
    width: 100%; }

  .col-7-12 {
    width: 100%; }

  .col-8-12 {
    width: 100%; }

  .banner-standard {
    -webkit-flex-flow: column;
        -ms-flex-flow: column;
            flex-flow: column; }

  .banner-standard__media-approach {
    height: 300px; }

  .banner-standard__media-leadership {
    height: 300px; }

  .card-diptic {
    -webkit-flex-flow: column;
        -ms-flex-flow: column;
            flex-flow: column; }

  .card-bio {
    -webkit-flex-flow: column;
        -ms-flex-flow: column;
            flex-flow: column; }

  .card-triptic {
    -webkit-flex-flow: column;
        -ms-flex-flow: column;
            flex-flow: column; }

  .cta-contact__box {
    -webkit-flex-flow: column;
        -ms-flex-flow: column;
            flex-flow: column; }

  .cta-contact__button {
    margin-top: 20px; }

  .cta-teaser {
    -webkit-flex-flow: column;
        -ms-flex-flow: column;
            flex-flow: column; }

  .cta-teaser__media {
    height: 300px; }

  .main-standard, .main-bios, .main-news, .main-post {
    -webkit-flex-flow: column;
        -ms-flex-flow: column;
            flex-flow: column; } }


@media (max-width: 700px) {

  tr {
    margin-top: 0 !important; }

  tr:first-child {
    border-top: 1px solid #e5e6e7; }

  td {
    margin-top: 0 !important;
    position: relative;
    padding-left: 40%; }

  td:before {
    position: absolute;
    top: 6px;
    left: 6px;
    width: 40%;
    padding-right: 10px;
    white-space: nowrap;
    font-weight: 600; }

  td:nth-of-type(1):before {
    content: "City: "; }

  td:nth-of-type(2):before {
    content: "Address: "; }

  td:nth-of-type(3):before {
    content: "Phone: "; }

  thead tr {
    position: absolute;
    top: -9999px;
    left: -9999px; }

  table, thead, tbody, th, td, tr {
    display: block; } }


@media (min-width: 1025px) {

  .nav-minor {
    display: block;
    padding-top: 1rem;
    text-align: right; }

  .nav-major {
    display: -webkit-box;
    display: -webkit-flex;
    display: -moz-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
       -moz-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
    list-style: none;
    margin: 1rem 0; } }


@media (min-width: 768px) {

  .mean-container .mean-nav {
    margin-top: 63px; }

  .header__logo {
    width: 550px; } }


@media only screen and (max-width: 1169px) {

  body.nav-on-left.overflow-hidden {
    overflow: hidden; }

  .cd-main-content.nav-is-visible, .cd-main-header.nav-is-visible {
    -webkit-transform: translateX(-260px);
       -moz-transform: translateX(-260px);
        -ms-transform: translateX(-260px);
         -o-transform: translateX(-260px);
            transform: translateX(-260px); }

  .nav-on-left .cd-main-content.nav-is-visible, .nav-on-left .cd-main-header.nav-is-visible {
    -webkit-transform: translateX(260px);
       -moz-transform: translateX(260px);
        -ms-transform: translateX(260px);
         -o-transform: translateX(260px);
            transform: translateX(260px); }

  .nav-on-left .cd-logo {
    left: auto;
    right: 5%; }

  .nav-on-left .cd-header-buttons {
    right: auto;
    left: 5%; }

  .nav-on-left .cd-header-buttons li {
    float: right; }

  .nav-on-left .cd-primary-nav {
    right: auto;
    left: 0; }

  .nav-on-left .cd-primary-nav ul {
    right: auto;
    left: 0; }

  .cd-primary-nav {

    /* by default .cd-primary-nav is hidden - trick for iOS devices where you can see the navigation if you pull down */
    visibility: hidden;
    -webkit-transition: visibility 0s 0.3s;
       -moz-transition: visibility 0s 0.3s;
         -o-transition: visibility 0s 0.3s;
            transition: visibility 0s 0.3s; }

  .cd-primary-nav.nav-is-visible {
    visibility: visible;
    -webkit-transition: visibility 0s 0s;
       -moz-transition: visibility 0s 0s;
         -o-transition: visibility 0s 0s;
            transition: visibility 0s 0s; }

  .cd-overlay.is-visible {
    -webkit-transform: translateX(-260px);
       -moz-transform: translateX(-260px);
        -ms-transform: translateX(-260px);
         -o-transform: translateX(-260px);
            transform: translateX(-260px); }

  .nav-on-left .cd-overlay.is-visible {
    -webkit-transform: translateX(260px);
       -moz-transform: translateX(260px);
        -ms-transform: translateX(260px);
         -o-transform: translateX(260px);
            transform: translateX(260px); }

  .cd-overlay.is-visible.search-is-visible, .nav-on-left .cd-overlay.is-visible.search-is-visible {
    -webkit-transform: translateX(0);
       -moz-transform: translateX(0);
        -ms-transform: translateX(0);
         -o-transform: translateX(0);
            transform: translateX(0); } }


@media only screen and (min-width: 1170px) {

  .cd-main-header {
    height: 80px; }

  .cd-main-header:after {
    content: "";
    display: table;
    clear: both; }

  .cd-logo {
    top: 26px;
    left: 4em; }

  .cd-header-buttons {
    top: 18px;
    right: 4em; }

  .cd-nav-trigger {
    display: none; }

  .cd-primary-nav {
    position: static;
    padding: 0 150px 0 0;
    height: auto;
    width: auto;
    float: right;
    overflow: visible;
    background: transparent; }

  .cd-primary-nav:after {
    content: "";
    display: table;
    clear: both; }

  .cd-primary-nav.moves-out > li > a {

    /* reset mobile style */
    -webkit-transform: translateX(0);
       -moz-transform: translateX(0);
        -ms-transform: translateX(0);
         -o-transform: translateX(0);
            transform: translateX(0);
    opacity: 1;
    filter: alpha(opacity=100); }

  .cd-primary-nav ul {
    position: static;
    height: auto;
    width: auto;
    background: transparent;
    overflow: visible;
    z-index: 3; }

  .cd-primary-nav ul.is-hidden {

    /* reset mobile style */
    -webkit-transform: translateX(0);
       -moz-transform: translateX(0);
        -ms-transform: translateX(0);
         -o-transform: translateX(0);
            transform: translateX(0); }

  .cd-primary-nav ul.moves-out > li > a {

    /* reset mobile style */
    -webkit-transform: translateX(0);
       -moz-transform: translateX(0);
        -ms-transform: translateX(0);
         -o-transform: translateX(0);
            transform: translateX(0);
    opacity: 1;
    filter: alpha(opacity=100); }

  .cd-primary-nav > li {
    float: left;
    margin-left: 3em; }

  .cd-primary-nav > li > a {

    /* main navigation buttons style */
    position: relative;
    display: inline-block;
    height: 80px;
    line-height: 80px;
    padding: 0 10px;
    color: #2e3233;
    overflow: visible;
    border-bottom: none;
    -webkit-transition: color 0.3s, box-shadow 0.3s;
       -moz-transition: color 0.3s, -moz-box-shadow 0.3s;
         -o-transition: color 0.3s, box-shadow 0.3s;
            transition: color 0.3s, box-shadow 0.3s; }

  .cd-primary-nav > li > a:hover {
    color: #69aa6f; }

  .cd-primary-nav > li > a.selected {
    color: #69aa6f;
    -moz-box-shadow: inset 0 -2px 0 #69aa6f;
         box-shadow: inset 0 -2px 0 #69aa6f; }

  .cd-primary-nav .go-back, .cd-primary-nav .see-all {
    display: none; }

  .cd-primary-nav .cd-secondary-nav, .cd-primary-nav .cd-nav-gallery, .cd-primary-nav .cd-nav-icons {

    /* dropdown menu style */
    position: absolute;
    top: 80px;
    width: 100vw;
    background: #ffffff;
    padding: 48px 64px 130px;
    -moz-box-shadow: inset 0 1px 0 #e2e3df, 0 3px 6px rgba(0, 0, 0, 0.05);
         box-shadow: inset 0 1px 0 #e2e3df, 0 3px 6px rgba(0, 0, 0, 0.05);
    -webkit-transform: translateX(0);
       -moz-transform: translateX(0);
        -ms-transform: translateX(0);
         -o-transform: translateX(0);
            transform: translateX(0);
    -webkit-transition: opacity .3s 0s, visibility 0s 0s;
       -moz-transition: opacity .3s 0s, visibility 0s 0s;
         -o-transition: opacity .3s 0s, visibility 0s 0s;
            transition: opacity .3s 0s, visibility 0s 0s; }

  .cd-primary-nav .cd-secondary-nav:after, .cd-primary-nav .cd-nav-gallery:after, .cd-primary-nav .cd-nav-icons:after {
    content: "";
    display: table;
    clear: both; }

  .cd-primary-nav .cd-secondary-nav.is-hidden, .cd-primary-nav .cd-nav-gallery.is-hidden, .cd-primary-nav .cd-nav-icons.is-hidden {
    opacity: 0;
    filter: alpha(opacity=0);
    visibility: hidden;
    -webkit-transition: opacity .3s 0s, visibility 0s .3s;
       -moz-transition: opacity .3s 0s, visibility 0s .3s;
         -o-transition: opacity .3s 0s, visibility 0s .3s;
            transition: opacity .3s 0s, visibility 0s .3s; }

  .cd-primary-nav .cd-secondary-nav > .see-all, .cd-primary-nav .cd-nav-gallery > .see-all, .cd-primary-nav .cd-nav-icons > .see-all {

    /* this is the BIG See all button at the bottom of the dropdown menu */
    display: block;
    position: absolute;
    left: 0;
    bottom: 0;
    height: 80px;
    width: 100%;
    overflow: hidden;

    /* reset some inherited style */
    margin: 0;
    padding: 0; }

  .cd-primary-nav .cd-secondary-nav > .see-all a, .cd-primary-nav .cd-nav-gallery > .see-all a, .cd-primary-nav .cd-nav-icons > .see-all a {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    font-size: 2.2rem;
    font-weight: bold;
    text-align: center;
    line-height: 80px;
    border-top: 1px solid #e2e3df;

    /* reset some inherited style */
    border-bottom: none;
    margin: 0;
    padding: 0;
    -webkit-transition: color 0.2s, background 0.2s, border 0.2s;
       -moz-transition: color 0.2s, background 0.2s, border 0.2s;
         -o-transition: color 0.2s, background 0.2s, border 0.2s;
            transition: color 0.2s, background 0.2s, border 0.2s; }

  .cd-primary-nav .cd-secondary-nav > .see-all a:hover, .cd-primary-nav .cd-nav-gallery > .see-all a:hover, .cd-primary-nav .cd-nav-icons > .see-all a:hover {
    background: #2e3233;
    border-color: #2e3233;
    color: #ffffff; }

  .cd-primary-nav .cd-secondary-nav > li {

    /* change the height according to your needs - you can even set height: auto */
    height: 340px;

    /* here you set the number of columns - use width percentage */
    width: 23%;
    float: left;
    margin-right: 2.66%;
    border-right: 1px solid #e2e3df;
    overflow: hidden;
    overflow-x: hidden;
    overflow-y: auto;
    -webkit-overflow-scrolling: touch; }

  .cd-primary-nav .cd-secondary-nav > li:nth-child(4n+2) {

    /* +2 because we have 2 list items with display:none */
    margin-right: 0;
    border-right: none; }

  .cd-primary-nav .cd-secondary-nav > li > a {

    /* secondary nav title */
    color: #69aa6f;
    font-weight: bold;
    font-size: 1.6rem;
    margin-bottom: .6em; }

  .cd-primary-nav .cd-secondary-nav a {
    height: 30px;
    line-height: 30px;
    padding: 0 18% 0 0;
    color: #2e3233;
    border-bottom: none;
    font-size: 1.4rem; }

  .cd-primary-nav .cd-secondary-nav a:hover {
    color: #69aa6f; }

  .cd-primary-nav .cd-secondary-nav ul {

    /* Force Hardware Acceleration in WebKit */
    -webkit-transform: translateZ(0);
       -moz-transform: translateZ(0);
            transform: translateZ(0); }

  .cd-primary-nav .cd-secondary-nav ul ul {

    /* tertiary navigation */
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%; }

  .cd-primary-nav .cd-secondary-nav ul ul.is-hidden {
    -webkit-transform: translateX(100%);
       -moz-transform: translateX(100%);
        -ms-transform: translateX(100%);
         -o-transform: translateX(100%);
            transform: translateX(100%); }

  .cd-primary-nav .cd-secondary-nav ul ul .go-back {
    display: block; }

  .cd-primary-nav .cd-secondary-nav ul ul .go-back a {
    color: transparent; }

  .cd-primary-nav .cd-secondary-nav ul ul .see-all {
    display: block; }

  .cd-primary-nav .cd-secondary-nav .moves-out > li > a {

    /* push the navigation items to the left - and lower down opacity - when tertiary nav slides in */
    -webkit-transform: translateX(-100%);
       -moz-transform: translateX(-100%);
        -ms-transform: translateX(-100%);
         -o-transform: translateX(-100%);
            transform: translateX(-100%); }

  .cd-primary-nav .cd-nav-gallery li {

    /* set here number of columns - use width percentage */
    width: 22%;
    float: left;
    margin: 0 4% 40px 0; }

  .cd-primary-nav .cd-nav-gallery li:nth-child(4n+2) {

    /* +2 because we have two additional list items with display:none */
    margin-right: 0; }

  .cd-primary-nav .cd-nav-gallery .cd-nav-item {
    border-bottom: none;
    padding: 0;
    height: auto;
    line-height: 1.2; }

  .cd-primary-nav .cd-nav-gallery .cd-nav-item img {
    position: static;
    margin-top: 0;
    height: auto;
    width: 100%;
    margin-bottom: .6em; }

  .cd-primary-nav .cd-nav-gallery .cd-nav-item h3 {
    color: #69aa6f;
    font-weight: bold;
    padding: 0 .4em; }

  .cd-primary-nav .cd-nav-icons li {

    /* set here number of columns - use width percentage */
    width: 32%;
    float: left;
    margin: 0 2% 20px 0; }

  .cd-primary-nav .cd-nav-icons li:nth-child(3n+2) {

    /* +2 because we have two additional list items with display:none */
    margin-right: 0; }

  .cd-primary-nav .cd-nav-icons .cd-nav-item {
    border-bottom: none;
    height: 80px;
    line-height: 1.2;
    padding: 24px 0 0 85px; }

  .cd-primary-nav .cd-nav-icons .cd-nav-item:hover {
    background: #f6f6f5; }

  .cd-primary-nav .cd-nav-icons .cd-nav-item h3 {
    color: #69aa6f;
    font-weight: bold; }

  .cd-primary-nav .cd-nav-icons .cd-nav-item p {
    display: block; }

  .cd-primary-nav .cd-nav-icons .cd-nav-item:before {
    left: 25px; }

  .has-children > a:before, .has-children > a:after {
    background: #c9cbc4; }

  .go-back a:before, .go-back a:after {
    background: #c9cbc4; }

  .has-children > a:hover:before, .has-children > a:hover:after {
    background: #69aa6f; }

  .go-back a:hover:before, .go-back a:hover:after {
    background: #69aa6f; }

  .has-children > a:before, .has-children > a:after {
    right: 15%; }

  .cd-primary-nav > .has-children > a {

    /* main navigation arrows on larger devices */
    padding-right: 30px !important; }

  .cd-primary-nav > .has-children > a:before, .cd-primary-nav > .has-children > a:after {
    width: 9px;
    -webkit-transform-origin: 50% 50%;
       -moz-transform-origin: 50% 50%;
        -ms-transform-origin: 50% 50%;
         -o-transform-origin: 50% 50%;
            transform-origin: 50% 50%;
    background: #c9cbc4;
    -webkit-backface-visibility: hidden;
       -moz-backface-visibility: hidden;
            backface-visibility: hidden;
    -webkit-transition: width 0.3s, -webkit-transform 0.3s;
       -moz-transition: width 0.3s, -moz-transform 0.3s;
         -o-transition: width 0.3s, -o-transform 0.3s;
            transition: width 0.3s, transform 0.3s; }

  .cd-primary-nav > .has-children > a:before {
    right: 12px; }

  .cd-primary-nav > .has-children > a:after {
    right: 7px; }

  .cd-primary-nav > .has-children > a.selected:before, .cd-primary-nav > .has-children > a.selected:after {
    width: 14px; }

  .cd-primary-nav > .has-children > a.selected:before {
    -webkit-transform: translateX(5px) rotate(-45deg);
       -moz-transform: translateX(5px) rotate(-45deg);
        -ms-transform: translateX(5px) rotate(-45deg);
         -o-transform: translateX(5px) rotate(-45deg);
            transform: translateX(5px) rotate(-45deg); }

  .cd-primary-nav > .has-children > a.selected:after {
    -webkit-transform: rotate(45deg);
       -moz-transform: rotate(45deg);
        -ms-transform: rotate(45deg);
         -o-transform: rotate(45deg);
            transform: rotate(45deg); }

  .cd-secondary-nav > .has-children > a:before, .cd-secondary-nav > .has-children > a:after {

    /* remove arrows on secondary nav titles */
    display: none; }

  .cd-primary-nav .go-back a {
    padding-left: 20px; }

  .cd-primary-nav .go-back a:before, .cd-primary-nav .go-back a:after {
    left: 1px; }

  .cd-search {
    height: 120px;
    top: 80px; }

  .cd-search input {
    padding: 0 2em;
    font-size: 3.2rem;
    font-weight: 300; }

  .no-js .cd-primary-nav {
    position: absolute;
    z-index: 3;
    display: inline-block;
    width: auto;
    top: 0;
    right: 150px;
    padding: 0; }

  .no-js .nav-is-fixed .cd-primary-nav {
    position: fixed; } }


@media (min-width: 769px) {

  .banner-tall {
    height: 465px; }

  .banner-tall__title {
    font-size: 3.5rem;
    -webkit-align-self: flex-end;
        -ms-flex-item-align: end;
            align-self: flex-end;
    margin: 0 0 2rem 2rem; }

  .banner-standard {
    height: 335px; }

  .card-diptic__box {
    padding: 2rem 1rem 2rem 2rem; }

  .card-diptic__box:nth-child(2) {
    border-left: 1px solid #ccc;
    padding: 2rem 2rem 2rem 1rem; }

  .card-bio__box {
    padding-left: 2rem;
    padding-top: 0; }

  .card-triptic__box:nth-child(2) {
    border-left: 1px solid #ccc; }

  .card-triptic__box:nth-child(3) {
    border-left: 1px solid #ccc; }

  .cta-sidebar {
    padding: 1rem 0 0 3rem; }

  .cta-sidebar__media {
    height: 180px; } }


@media (min-width: 768px) and (min-width: 1024px) {

  .nav-footer {
    display: -webkit-box;
    display: -webkit-flex;
    display: -moz-box;
    display: -ms-flexbox;
    display: flex;
    text-align: left; }

  .nav-footer__sub-links {
    display: block; }

  .footer-copyright__logo {
    display: block;
    width: 484px; }

  .footer-copyright__box {
    text-align: right; }

  .footer-copyright__box small, .footer-copyright__box .nav-minor {
    font-size: 12px; }

  .footer-copyright__box .nav-minor li a {
    font-size: 12px; }

  .footer-disclaimer {
    width: 75%; }

  .footer-disclaimer h6, .footer-disclaimer p, .footer-disclaimer ul {
    font-size: 12px; } }


@media (max-width: 767px) {

  header {
    min-height: 50px; } }


@media (min-width: 480px) and (max-width: 767px) {

  .header__logo {
    width: 330px; } }


/*# sourceMappingURL=data:application/json;base64, */
/*# sourceMappingURL=data:application/json;base64, */