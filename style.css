article, aside, details, figcaption, figure, footer, header, hgroup, nav, section, summary {
  display: block; }

audio, canvas, video {
  display: inline-block; }

audio:not([controls]) {
  display: none;
  height: 0; }

[hidden], template {
  display: none; }

html {
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%; }

body {
  margin: 0; }

a {
  background: transparent; }
  a:hover, a:active {
    outline: 0; }

/* @if \$normalize_headings == true {
    h1 {
        font-size: \$h1_font_size;
        margin: \$h1_margin;
    }

    h2 {
        font-size: \$h2_font_size;
        margin: \$h2_margin;
    }

    h3 {
        font-size: \$h3_font_size;
        margin: \$h3_margin;
    }

    h4 {
        font-size: \$h4_font_size;
        margin: \$h4_margin;
    }

    h5 {
        font-size: \$h5_font_size;
        margin: \$h5_margin;
    }

    h6 {
        font-size: \$h6_font_size;
        margin: \$h6_margin;
    }
} */
abbr[title] {
  border-bottom: 1px dotted; }

b, strong {
  font-weight: bold; }

dfn {
  font-style: italic; }

mark {
  background: #ff0;
  color: #000; }

code, kbd, pre, samp {
  font-family: monospace, serif;
  font-size: 1em; }

pre {
  white-space: pre;
  white-space: pre-wrap;
  word-wrap: break-word; }

q {
  quotes: "\201C" "\201D" "\2018" "\2019"; }

q:before, q:after {
  content: '';
  content: none; }

/* /small {
    font-size: 80%;
} */
sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

img {
  border: 0; }

svg:not(:root) {
  overflow: hidden; }

figure {
  margin: 0; }

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

legend {
  border: 0;
  padding: 0;
  white-space: normal; }

button, input, select, textarea {
  font-family: inherit;
  font-size: 100%;
  margin: 0;
  vertical-align: baseline; }

button, input {
  line-height: normal; }

button, select {
  text-transform: none; }

button, html input[type="button"], input[type="reset"], input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer; }

button[disabled], input[disabled] {
  cursor: default; }

button::-moz-focus-inner, input::-moz-focus-inner {
  border: 0;
  padding: 0; }

textarea {
  overflow: auto;
  vertical-align: top; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

input[type="search"] {
  -webkit-appearance: textfield;
  -moz-box-sizing: content-box;
  box-sizing: content-box; }
  input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration {
    -webkit-appearance: none; }
input[type="checkbox"], input[type="radio"] {
  -moz-box-sizing: border-box;
       box-sizing: border-box;
  padding: 0; }

html {
  font-size: 16px;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased; }

body {
  color: #333;
  line-height: 1.5;
  font-family: News Cycle, sans-serif;
  -moz-background-size: auto 24px;
       background-size: auto 24px;
  margin: 0; }

[class*='__heading'] {
  color: #267e64;
  font-family: Playfair Display, serif;
  font-size: 40px;
  font-size: 2.5rem;
  font-weight: 400;
  line-height: 1;
  margin-bottom: 32px;
  margin-bottom: 2rem; }

[class*=__button], input[type="button"], input[type="reset"] {
  border: 1px solid #267e64;
  display: inline-block;
  font-family: Playfair Display, serif;
  font-size: 19px;
  font-size: 1.2rem;
  font-style: italic;
  text-align: center;
  padding: 12px 48px;
  padding: .75rem 3rem;
  text-decoration: none;
  /*Items for transition */
  background-color: transparent;
  color: #267e64;
  /*Transition settings */
  -webkit-transition: all .2s ease;
     -moz-transition: all .2s ease;
       -o-transition: all .2s ease;
          transition: all .2s ease; }
  [class*=__button]:hover, input[type="button"]:hover, input[type="reset"]:hover {
    /*These will transition on hover */
    background-color: #267e64;
    color: #fff; }

.clearfix:after {
  content: "";
  display: table;
  clear: both; }

img, iframe, embed {
  width: 100%; }

.container {
  background-color: #fff;
  border-left: 1px solid #ccc;
  border-right: 1px solid #ccc;
  margin: 0 auto;
  max-width: 1200px; }

[class*='col-'] {
  display: table-cell;
  vertical-align: middle; }

.col-2-12 {
  width: 16.66667%; }

.col-3-12 {
  width: 25%; }

.col-4-12 {
  width: 33.33333%; }

.col-5-12 {
  width: 41.66667%; }

.col-6-12 {
  width: 50%; }

.col-7-12 {
  width: 58.33333%; }

.col-8-12 {
  width: 66.66667%; }

.col-9-12 {
  width: 75%; }

.col-10-12 {
  width: 83.33333%; }

.col-11-12 {
  width: 91.66667%; }

* {
  margin: 0;
  padding: 0;
  -moz-box-sizing: border-box;
       box-sizing: border-box; }
  *::after, *::before {
    -moz-box-sizing: border-box;
         box-sizing: border-box; }

body {
  background-color: #eceee6;
  padding: 0; }

a {
  text-decoration: none; }

table {
  margin: 0 0 1.5em;
  width: 100%; }

tr {
  border-bottom: 1px solid #e5e6e7; }
  tr:nth-child(even) {
    background-color: #f8f8f8; }

td {
  vertical-align: top;
  padding: 10px 5px; }

thead {
  background-color: #e5e6e7; }
  thead th {
    font-weight: 600;
    text-align: left;
    padding: 5px; }

.nav-minor {
  display: block;
  text-align: right; }
  .nav-minor__container {
    background-color: #fff;
    border-left: 1px solid #ccc;
    border-right: 1px solid #ccc;
    margin: 0 auto;
    padding-right: 24px;
    padding-right: 1.5rem;
    padding-top: 16px;
    padding-top: 1rem;
    max-width: 1200px; }
  .nav-minor li {
    display: inline-block; }
    .nav-minor li:after {
      display: inline-block;
      content: ' | ';
      color: #267e64;
      margin: 0 2px; }
    .nav-minor li:nth-child(3):after {
      content: ' '; }
  .nav-minor__link {
    color: #333;
    display: inline-block;
    padding: 0 8px;
    padding: 0 .5rem; }
    .nav-minor__link:hover {
      color: #267e64; }

/* --------------------------------
 *
 *Primary style
 *
 *-------------------------------- */

input[type="search"]::-ms-clear {
  /* removes close icon - IE */
  display: none; }

input[type="search"]::-webkit-search-decoration, input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-results-button, input[type="search"]::-webkit-search-results-decoration {
  display: none; }

/* --------------------------------
 *
 *Main components
 *
 *-------------------------------- */
.cd-main-content, .cd-main-header {
  /* Force Hardware Acceleration in WebKit */
  -webkit-transform: translateZ(0);
     -moz-transform: translateZ(0);
          transform: translateZ(0);
  will-change: transform; }
  .cd-main-content ul, .cd-main-header ul {
    list-style: none; }

.cd-main-content {
  position: relative;
  -webkit-transition: -webkit-transform 0.3s;
     -moz-transition: -moz-transform 0.3s;
       -o-transition: -o-transform 0.3s;
          transition: transform 0.3s; }

.cd-main-header {
  font-family: Playfair Display, serif;
  position: relative;
  -webkit-transition: -webkit-transform 0.3s;
     -moz-transition: -moz-transform 0.3s;
       -o-transition: -o-transform 0.3s;
          transition: transform 0.3s; }

.cd-main-content {
  min-height: 100vh;
  z-index: 2; }

.cd-main-header {
  height: 50px;
  background: #fff;
  z-index: 3;
  border-bottom: 1px solid #e5e6e7; }
  .nav-is-fixed .cd-main-header {
    /* add .nav-is-fixed class to body if you want a fixed navigation on > 1024px */
    position: fixed;
    top: 0;
    left: 0;
    width: 100%; }

.cd-logo {
  position: absolute;
  top: 12px;
  left: 5%; }
  .cd-logo img {
    display: block; }

.cd-header-buttons {
  position: absolute;
  display: inline-block;
  top: 3px;
  right: 5%; }
  .cd-header-buttons li {
    display: inline-block; }

.cd-search-trigger, .cd-nav-trigger {
  position: relative;
  display: block;
  width: 44px;
  height: 44px;
  overflow: hidden;
  white-space: nowrap;
  /* hide text */
  color: transparent;
  z-index: 3; }

.cd-search-trigger::before, .cd-search-trigger::after {
  /* search icon */
  content: '';
  position: absolute;
  -webkit-transition: opacity 0.3s;
     -moz-transition: opacity 0.3s;
       -o-transition: opacity 0.3s;
          transition: opacity 0.3s;
  /* Force Hardware Acceleration in WebKit */
  -webkit-transform: translateZ(0);
     -moz-transform: translateZ(0);
          transform: translateZ(0);
  -webkit-backface-visibility: hidden;
     -moz-backface-visibility: hidden;
          backface-visibility: hidden; }
.cd-search-trigger::before {
  /* lens */
  top: 11px;
  left: 11px;
  width: 18px;
  height: 18px;
  -moz-border-radius: 50%;
       border-radius: 50%;
  border: 3px solid #455652; }
.cd-search-trigger::after {
  /* handle */
  height: 3px;
  width: 8px;
  background: #455652;
  bottom: 14px;
  right: 11px;
  -webkit-transform: rotate(45deg);
     -moz-transform: rotate(45deg);
      -ms-transform: rotate(45deg);
       -o-transform: rotate(45deg);
          transform: rotate(45deg); }
.cd-search-trigger span {
  /* container for the X icon */
  position: absolute;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0; }
.cd-search-trigger span::before, .cd-search-trigger span::after {
  /* close icon */
  content: '';
  position: absolute;
  display: inline-block;
  height: 3px;
  width: 22px;
  top: 50%;
  margin-top: -2px;
  left: 50%;
  margin-left: -11px;
  background: #455652;
  opacity: 0;
  filter: alpha(opacity=0);
  /* Force Hardware Acceleration in WebKit */
  -webkit-transform: translateZ(0);
     -moz-transform: translateZ(0);
          transform: translateZ(0);
  -webkit-backface-visibility: hidden;
     -moz-backface-visibility: hidden;
          backface-visibility: hidden;
  -webkit-transition: opacity 0.3s, -webkit-transform 0.3s;
     -moz-transition: opacity 0.3s, -moz-transform 0.3s;
       -o-transition: opacity 0.3s, -o-transform 0.3s;
          transition: opacity 0.3s, transform 0.3s; }
.cd-search-trigger span::before {
  -webkit-transform: rotate(45deg);
     -moz-transform: rotate(45deg);
      -ms-transform: rotate(45deg);
       -o-transform: rotate(45deg);
          transform: rotate(45deg); }
.cd-search-trigger span::after {
  -webkit-transform: rotate(-45deg);
     -moz-transform: rotate(-45deg);
      -ms-transform: rotate(-45deg);
       -o-transform: rotate(-45deg);
          transform: rotate(-45deg); }
.cd-search-trigger.search-is-visible::before, .cd-search-trigger.search-is-visible::after {
  /* hide search icon */
  opacity: 0;
  filter: alpha(opacity=0); }
.cd-search-trigger.search-is-visible span::before, .cd-search-trigger.search-is-visible span::after {
  /* show close icon */
  opacity: 1;
  filter: alpha(opacity=100); }
.cd-search-trigger.search-is-visible span::before {
  -webkit-transform: rotate(135deg);
     -moz-transform: rotate(135deg);
      -ms-transform: rotate(135deg);
       -o-transform: rotate(135deg);
          transform: rotate(135deg); }
.cd-search-trigger.search-is-visible span::after {
  -webkit-transform: rotate(45deg);
     -moz-transform: rotate(45deg);
      -ms-transform: rotate(45deg);
       -o-transform: rotate(45deg);
          transform: rotate(45deg); }

.cd-nav-trigger span, .cd-nav-trigger span::before, .cd-nav-trigger span::after {
  /* hamburger icon in CSS */
  position: absolute;
  display: inline-block;
  height: 3px;
  width: 24px;
  background: #455652; }
.cd-nav-trigger span {
  /* line in the center */
  position: absolute;
  top: 50%;
  right: 10px;
  margin-top: -2px;
  -webkit-transition: background 0.3s 0.3s;
     -moz-transition: background 0.3s 0.3s;
       -o-transition: background 0.3s 0.3s;
          transition: background 0.3s 0.3s; }
.cd-nav-trigger span::before, .cd-nav-trigger span::after {
  /* other 2 lines */
  content: '';
  right: 0;
  /* Force Hardware Acceleration in WebKit */
  -webkit-transform: translateZ(0);
     -moz-transform: translateZ(0);
          transform: translateZ(0);
  -webkit-backface-visibility: hidden;
     -moz-backface-visibility: hidden;
          backface-visibility: hidden;
  -webkit-transform-origin: 0% 50%;
     -moz-transform-origin: 0% 50%;
      -ms-transform-origin: 0% 50%;
       -o-transform-origin: 0% 50%;
          transform-origin: 0% 50%;
  -webkit-transition: -webkit-transform 0.3s 0.3s;
     -moz-transition: -moz-transform 0.3s 0.3s;
       -o-transition: -o-transform 0.3s 0.3s;
          transition: transform 0.3s 0.3s; }
.cd-nav-trigger span::before {
  /* menu icon top line */
  top: -6px; }
.cd-nav-trigger span::after {
  /* menu icon bottom line */
  top: 6px; }
.cd-nav-trigger.nav-is-visible span {
  /* hide line in the center */
  background: rgba(69, 86, 82, 0); }
.cd-nav-trigger.nav-is-visible span::before, .cd-nav-trigger.nav-is-visible span::after {
  /* keep visible other 2 lines */
  background: #455652; }
.cd-nav-trigger.nav-is-visible span::before {
  -webkit-transform: translateX(4px) translateY(-3px) rotate(45deg);
     -moz-transform: translateX(4px) translateY(-3px) rotate(45deg);
      -ms-transform: translateX(4px) translateY(-3px) rotate(45deg);
       -o-transform: translateX(4px) translateY(-3px) rotate(45deg);
          transform: translateX(4px) translateY(-3px) rotate(45deg); }
.cd-nav-trigger.nav-is-visible span::after {
  -webkit-transform: translateX(4px) translateY(2px) rotate(-45deg);
     -moz-transform: translateX(4px) translateY(2px) rotate(-45deg);
      -ms-transform: translateX(4px) translateY(2px) rotate(-45deg);
       -o-transform: translateX(4px) translateY(2px) rotate(-45deg);
          transform: translateX(4px) translateY(2px) rotate(-45deg); }

.cd-primary-nav, .cd-primary-nav ul {
  position: fixed;
  top: 0;
  right: 0;
  height: 100%;
  width: 260px;
  background: #455652;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  z-index: 1;
  /* Force Hardware Acceleration in WebKit */
  -webkit-transform: translateZ(0);
     -moz-transform: translateZ(0);
          transform: translateZ(0);
  -webkit-transform: translateX(0);
     -moz-transform: translateX(0);
      -ms-transform: translateX(0);
       -o-transform: translateX(0);
          transform: translateX(0);
  -webkit-transition: -webkit-transform 0.3s;
     -moz-transition: -moz-transform 0.3s;
       -o-transition: -o-transform 0.3s;
          transition: transform 0.3s; }
  .cd-primary-nav a, .cd-primary-nav ul a {
    display: block;
    font-size: 19px;
    font-size: 1.2rem;
    height: 50px;
    line-height: 50px;
    padding: 0 20px;
    color: #fff;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    border-bottom: 1px solid #50645f;
    -webkit-transform: translateZ(0);
       -moz-transform: translateZ(0);
            transform: translateZ(0);
    will-change: transform, opacity;
    -webkit-transition: -webkit-transform 0.3s, opacity 0.3s;
       -moz-transition: -moz-transform 0.3s, opacity 0.3s;
         -o-transition: -o-transform 0.3s, opacity 0.3s;
            transition: transform 0.3s, opacity 0.3s; }
  .cd-primary-nav.is-hidden, .cd-primary-nav ul.is-hidden {
    /* secondary navigations hidden by default */
    -webkit-transform: translateX(100%);
       -moz-transform: translateX(100%);
        -ms-transform: translateX(100%);
         -o-transform: translateX(100%);
            transform: translateX(100%); }
  .cd-primary-nav.moves-out > li > a, .cd-primary-nav ul.moves-out > li > a {
    /* push the navigation items to the left - and lower down opacity - when secondary nav slides in */
    -webkit-transform: translateX(-100%);
       -moz-transform: translateX(-100%);
        -ms-transform: translateX(-100%);
         -o-transform: translateX(-100%);
            transform: translateX(-100%);
    opacity: 0;
    filter: alpha(opacity=0); }

.cd-primary-nav .see-all a {
  /* different style for the See all button on mobile and tablet */
  color: #267e64; }
.cd-primary-nav .cd-nav-gallery .cd-nav-item, .cd-primary-nav .cd-nav-icons .cd-nav-item {
  /* items with picture (or icon) and title */
  height: 80px;
  line-height: 80px; }
  .cd-primary-nav .cd-nav-gallery .cd-nav-item h3, .cd-primary-nav .cd-nav-icons .cd-nav-item h3 {
    overflow: hidden;
    text-overflow: ellipsis; }
.cd-primary-nav .cd-nav-gallery .cd-nav-item img {
  position: absolute;
  display: block;
  height: 40px;
  width: auto;
  left: 20px;
  top: 50%;
  margin-top: -20px; }
.cd-primary-nav .cd-nav-icons .cd-nav-item {
  padding-left: 75px; }
  .cd-primary-nav .cd-nav-icons .cd-nav-item p {
    color: #455652;
    font-size: 20px;
    font-size: 1.3rem;
    /* hide description on small devices */
    display: none; }
  .cd-primary-nav .cd-nav-icons .cd-nav-item::before {
    /* item icon */
    content: '';
    display: block;
    position: absolute;
    left: 20px;
    top: 50%;
    margin-top: -20px;
    width: 40px;
    height: 40px;
    background-repeat: no-repeat;
    background-position: center center;
    -moz-background-size: 40px 40px;
         background-size: 40px 40px; }
  .cd-primary-nav .cd-nav-icons .cd-nav-item.item-1::before {
    background-image: url("/images/line-icon-1.svg"); }
  .cd-primary-nav .cd-nav-icons .cd-nav-item.item-2::before {
    background-image: url("/images/line-icon-2.svg"); }
  .cd-primary-nav .cd-nav-icons .cd-nav-item.item-3::before {
    background-image: url("/images/line-icon-3.svg"); }
  .cd-primary-nav .cd-nav-icons .cd-nav-item.item-4::before {
    background-image: url("/images/line-icon-4.svg"); }
  .cd-primary-nav .cd-nav-icons .cd-nav-item.item-5::before {
    background-image: url("/images/line-icon-5.svg"); }
  .cd-primary-nav .cd-nav-icons .cd-nav-item.item-6::before {
    background-image: url("/images/line-icon-6.svg"); }
  .cd-primary-nav .cd-nav-icons .cd-nav-item.item-7::before {
    background-image: url("/images/line-icon-7.svg"); }
  .cd-primary-nav .cd-nav-icons .cd-nav-item.item-8::before {
    background-image: url("/images/line-icon-8.svg"); }

.has-children > a, .go-back a {
  position: relative; }
  .has-children > a::before, .has-children > a::after, .go-back a::before, .go-back a::after {
    /* arrow icon in CSS - for element with nested unordered lists */
    content: '';
    position: absolute;
    top: 50%;
    margin-top: -1px;
    display: inline-block;
    height: 2px;
    width: 10px;
    background: #5c726d;
    -webkit-backface-visibility: hidden;
       -moz-backface-visibility: hidden;
            backface-visibility: hidden; }
  .has-children > a::before, .go-back a::before {
    -webkit-transform: rotate(45deg);
       -moz-transform: rotate(45deg);
        -ms-transform: rotate(45deg);
         -o-transform: rotate(45deg);
            transform: rotate(45deg); }
  .has-children > a::after, .go-back a::after {
    -webkit-transform: rotate(-45deg);
       -moz-transform: rotate(-45deg);
        -ms-transform: rotate(-45deg);
         -o-transform: rotate(-45deg);
            transform: rotate(-45deg); }

.has-children > a {
  padding-right: 40px; }
  .has-children > a::before, .has-children > a::after {
    /* arrow goes on the right side - children navigation */
    right: 20px;
    -webkit-transform-origin: 9px 50%;
       -moz-transform-origin: 9px 50%;
        -ms-transform-origin: 9px 50%;
         -o-transform-origin: 9px 50%;
            transform-origin: 9px 50%; }

.cd-primary-nav .go-back a {
  padding-left: 40px; }
  .cd-primary-nav .go-back a::before, .cd-primary-nav .go-back a::after {
    /* arrow goes on the left side - go back button */
    left: 20px;
    -webkit-transform-origin: 1px 50%;
       -moz-transform-origin: 1px 50%;
        -ms-transform-origin: 1px 50%;
         -o-transform-origin: 1px 50%;
            transform-origin: 1px 50%; }

.cd-search {
  position: absolute;
  height: 50px;
  width: 100%;
  top: 50px;
  left: 0;
  z-index: 3;
  opacity: 0;
  filter: alpha(opacity=0);
  visibility: hidden;
  -webkit-transition: opacity .3s 0s, visibility 0s .3s;
     -moz-transition: opacity .3s 0s, visibility 0s .3s;
       -o-transition: opacity .3s 0s, visibility 0s .3s;
          transition: opacity .3s 0s, visibility 0s .3s; }
  .cd-search form {
    height: 100%;
    width: 100%; }
  .cd-search input {
    -moz-border-radius: 0;
         border-radius: 0;
    border: none;
    background: #fff;
    font-family: serif;
    height: 100%;
    width: 100%;
    font-size: 32px;
    font-size: 2rem;
    padding: 0 5%;
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none; }
    .cd-search input::-webkit-input-placeholder, .cd-search input::-moz-placeholder, .cd-search input:-ms-input-placeholder {
      color: #cacdcf; }
    .cd-search input:focus {
      outline: none; }
  .cd-search.is-visible {
    opacity: 1;
    filter: alpha(opacity=100);
    visibility: visible;
    -webkit-transition: opacity .3s 0s, visibility 0s 0s;
       -moz-transition: opacity .3s 0s, visibility 0s 0s;
         -o-transition: opacity .3s 0s, visibility 0s 0s;
            transition: opacity .3s 0s, visibility 0s 0s; }
  .nav-is-fixed .cd-search {
    position: fixed; }

.cd-overlay {
  /* shadow layer visible when navigation is active */
  position: fixed;
  z-index: 2;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
  cursor: pointer;
  visibility: hidden;
  opacity: 0;
  filter: alpha(opacity=0);
  -webkit-backface-visibility: hidden;
     -moz-backface-visibility: hidden;
          backface-visibility: hidden;
  -webkit-transition: opacity 0.3s 0s, visibility 0s 0.3s, -webkit-transform 0.3s 0s;
     -moz-transition: opacity 0.3s 0s, visibility 0s 0.3s, -moz-transform 0.3s 0s;
       -o-transition: opacity 0.3s 0s, visibility 0s 0.3s, -o-transform 0.3s 0s;
          transition: opacity 0.3s 0s, visibility 0s 0.3s, transform 0.3s 0s; }
  .cd-overlay.is-visible {
    opacity: 1;
    filter: alpha(opacity=100);
    visibility: visible;
    -webkit-transition: opacity 0.3s 0s, visibility 0s 0s, -webkit-transform 0.3s 0s;
       -moz-transition: opacity 0.3s 0s, visibility 0s 0s, -moz-transform 0.3s 0s;
         -o-transition: opacity 0.3s 0s, visibility 0s 0s, -o-transform 0.3s 0s;
            transition: opacity 0.3s 0s, visibility 0s 0s, transform 0.3s 0s; }

/* --------------------------------
 *
 *support for no js
 *
 *-------------------------------- */
.no-js .cd-primary-nav {
  position: relative;
  height: auto;
  width: 100%;
  overflow: visible;
  visibility: visible;
  z-index: 2; }

.no-js .cd-search {
  position: relative;
  top: 0;
  opacity: 1;
  filter: alpha(opacity=100);
  visibility: visible; }

.nav-footer {
  padding: 30px 20px 20px;
  text-align: left; }
  .nav-footer__heading {
    font-family: News Cycle, sans-serif;
    font-size: 16px;
    font-size: 1rem;
    font-weight: 700;
    margin-bottom: 16px;
    margin-bottom: 1rem; }
    .nav-footer__heading a {
      color: #333; }
      .nav-footer__heading a:hover {
        color: #267e64; }
  .nav-footer__link {
    font-size: 14px; }
  .nav-footer__box {
    padding: 0 10px;
    vertical-align: top; }
  .nav-footer__box-narrow {
    padding: 0 10px;
    vertical-align: top; }
  .nav-footer__button {
    border-width: 1px;
    color: #267e64;
    font-size: 14px;
    font-size: .9rem;
    margin-bottom: 16px;
    margin-bottom: 1rem;
    padding: 8px 16px;
    padding: .5rem 1rem;
    width: 100%; }
  .nav-footer__sub-links {
    font-size: 14px; }
    .nav-footer__sub-links a {
      color: #333; }
      .nav-footer__sub-links a:hover {
        color: #267e64; }
    .nav-footer__sub-links li:nth-child(1) {
      font-family: News Cycle, sans-serif;
      font-size: 16px;
      font-size: 1rem;
      font-weight: 700;
      margin-bottom: 8px;
      margin-bottom: .5rem; }

.banner-tall {
  background-image: url(images/boat.jpg);
  background-position: center;
  -moz-background-size: cover;
       background-size: cover;
  height: 200px;
  position: relative; }
  .banner-tall__headline {
    bottom: 48px;
    bottom: 3rem;
    color: #fff;
    font-family: serif;
    font-size: 80px;
    font-size: 5rem;
    font-weight: 400;
    left: 32px;
    left: 2rem;
    line-height: 1;
    position: absolute;
    margin: 0 0 16px 16px;
    margin: 0 0 1rem 1rem;
    text-shadow: 2px 2px 2px #333; }

.banner-standard {
  background: #267e64;
  color: #fff;
  display: table;
  height: 340px; }
  .banner-standard__box {
    padding: 16px 32px;
    padding: 1rem 2rem; }
  .banner-standard__heading {
    color: #fff; }
  .banner-standard__media {
    background-color: #eceee6; }
  .banner-standard__media-approach {
    background-image: url(../images/meeting.jpg);
    background-position: center;
    -moz-background-size: cover;
         background-size: cover; }
  .banner-standard__media-leadership {
    background-image: url(../images/people.jpg);
    background-position: center;
    -moz-background-size: cover;
         background-size: cover; }

.banner-panorama {
  background-image: url(../images/trees.jpg);
  background-position: center;
  -moz-background-size: cover;
       background-size: cover;
  height: 255px; }

.card-diptic {
  display: table;
  border-top: 1px solid #ccc;
  border-bottom: 1px solid #ccc; }
  .card-diptic__box {
    display: table-cell;
    vertical-align: middle;
    padding: 32px 16px;
    padding: 2rem 1rem; }
  .card-diptic__heading {
    text-align: center; }
  .card-diptic__media {
    background-color: #267e64;
    height: 150px;
    overflow: hidden;
    margin-bottom: 32px;
    margin-bottom: 2rem; }
  .card-diptic__text {
    text-align: center;
    margin-bottom: 32px;
    margin-bottom: 2rem; }
  .card-diptic ul {
    list-style: none;
    text-align: center; }
    .card-diptic ul li {
      display: inline-block;
      padding: 8px;
      padding: .5rem;
      width: 47%; }
  .card-diptic__link {
    color: #267e64;
    display: inline-block;
    font-family: Playfair Display, serif;
    padding: 0 6px;
    padding: 0 .4rem; }
    .card-diptic__link:hover {
      color: #455652; }

.card-bio {
  padding-bottom: 32px;
  padding-bottom: 2rem; }
  .card-bio__box {
    padding-left: 32px;
    padding-left: 2rem;
    padding-top: 0;
    vertical-align: top; }
  .card-bio__heading {
    color: #267e64;
    font-family: Playfair Display, serif;
    font-size: 32px;
    font-size: 2rem;
    font-weight: 400;
    line-height: 1; }
  .card-bio__subtitle {
    color: #ccc; }
  .card-bio__text * + * {
    margin-top: 16px;
    margin-top: 1rem; }

.card-article__box {
  -moz-box-shadow: 0 1px 0 #267e64;
       box-shadow: 0 1px 0 #267e64;
  display: none;
  padding-top: 24px;
  padding-bottom: 24px; }
  .card-article__box * + * {
    margin-top: 16px;
    margin-top: 1rem; }
.card-article h2 {
  color: #267e64;
  font-family: Playfair Display, serif;
  font-size: 32px;
  font-size: 2rem;
  font-weight: 400;
  line-height: 1; }
.card-article small {
  color: #ccc;
  font-size: 12px;
  font-size: .75rem; }

.loader__nav {
  display: table-cell;
  padding-top: 20px;
  padding-top: 1.25rem; }

.card-triptic {
  display: table;
  border-top: 1px solid #ccc;
  border-bottom: 1px solid #ccc; }
  .card-triptic__box {
    padding: 32px;
    padding: 2rem;
    vertical-align: top; }
  .card-triptic__media {
    height: 150px;
    overflow: hidden;
    margin-bottom: 32px;
    margin-bottom: 2rem; }
  .card-triptic__heading-link {
    color: #267e64;
    font-family: Playfair Display, serif;
    font-size: 22px;
    font-size: 1.375rem;
    font-weight: 400;
    line-height: 1;
    color: #267e64;
    display: inline-block;
    text-align: center; }
    .card-triptic__heading-link:hover {
      color: #455652; }
  .card-triptic__text {
    text-align: center; }

.cta-contact {
  background-color: #eceee6;
  display: table; }
  .cta-contact__box {
    padding: 32px;
    padding: 2rem; }
  .cta-contact__box:nth-child(2) {
    padding: 32px 0;
    padding: 2rem 0; }
  .cta-contact__text {
    margin: 0;
    padding: 0 56px 0 32px;
    padding: 0 3.5rem 0 2rem; }
  .cta-contact__button {
    display: inline-block;
    margin: 0 32px 0 0;
    margin: 0 2rem 0 0; }

.cta-teaser {
  display: table;
  padding: 16px 32px;
  padding: 1rem 2rem; }
  .cta-teaser__box {
    padding-right: 32px;
    padding-right: 2rem; }
  .cta-teaser__text {
    margin-bottom: 32px;
    margin-bottom: 2rem; }
  .cta-teaser__media {
    height: 300px;
    overflow: hidden; }

.cta-center {
  padding: 32px;
  padding: 2rem;
  text-align: center; }
  .cta-center__text {
    padding: 0 128px;
    padding: 0 8rem;
    margin-bottom: 32px;
    margin-bottom: 2rem; }

.cta-subscribe {
  background-color: #267e64;
  color: #fff;
  padding-top: 24px;
  padding-bottom: 36px; }
  .cta-subscribe__heading {
    color: #fff;
    text-align: center; }
  .cta-subscribe__box {
    display: table;
    margin: 0 auto;
    width: 75%; }
  .cta-subscribe__input {
    padding: 14px;
    padding: .9rem;
    width: 100%; }
  .cta-subscribe__button {
    border: 1px solid #fff;
    color: #fff;
    font-size: 24px;
    font-size: 1.5rem;
    margin-left: 16px;
    margin-left: 1rem;
    width: 100%;
    -webkit-transition: all .2s ease;
       -moz-transition: all .2s ease;
         -o-transition: all .2s ease;
            transition: all .2s ease; }
    .cta-subscribe__button:hover {
      /*These will transition on hover */
      background-color: #fff;
      color: #267e64; }
  .cta-subscribe__message {
    display: none;
    padding-top: 40px;
    padding-top: 2.5rem; }
  .cta-subscribe__error {
    display: none;
    padding-top: 16px;
    padding-top: 1rem; }
    .cta-subscribe__error-msg {
      text-align: center; }

.cta-sidebar {
  padding: 16px 0 0 80px;
  padding: 1rem 0 0 5rem;
  vertical-align: top; }
  .cta-sidebar__heading {
    font-size: 20px;
    font-size: 1.25rem;
    margin-top: 12px;
    margin-bottom: 12px; }
  .cta-sidebar__button {
    margin-top: 16px;
    margin-top: 1rem; }

.cta-social {
  padding-left: 16px;
  padding-left: 1rem; }
  .cta-social .icon {
    fill: #267e64; }
    .cta-social .icon:hover {
      fill: #ccc; }

footer {
  padding-bottom: 80px;
  padding-bottom: 5rem; }

.footer-copyright {
  border-top: 1px solid #e5e6e7;
  display: table;
  padding: 32px;
  padding: 2rem;
  width: 100%; }
  .footer-copyright__logo-box {
    width: 450px; }
  .footer-copyright__box {
    text-align: right; }
    .footer-copyright__box small {
      display: inline-block;
      font-size: 14px;
      padding-right: 8px;
      padding-right: .5rem; }
      .footer-copyright__box small::before {
        content: '|'; }
      .footer-copyright__box small:nth-child(1)::before {
        content: ' '; }
    .footer-copyright__box .nav-minor li a {
      font-size: 14px; }

.footer-disclaimer {
  text-align: center;
  width: 100%; }
  .footer-disclaimer__box {
    border: 1px solid #455652;
    display: inline-block;
    text-align: center;
    padding: 20px;
    margin: 50px auto 10px; }
  .footer-disclaimer h6, .footer-disclaimer p, .footer-disclaimer ul {
    font-size: 14px;
    margin-bottom: 16px;
    margin-bottom: 1rem; }
  .footer-disclaimer ul {
    margin-top: 0; }
    .footer-disclaimer ul li {
      display: inline-block;
      margin: 0 10px;
      padding: 8px;
      padding: .5rem; }

@-webkit-keyframes fadeIn {
  from {
    opacity: 0;
    filter: alpha(opacity=0); }

  to {
    opacity: 1;
    filter: alpha(opacity=100); } }

@-moz-keyframes fadeIn {
  from {
    opacity: 0;
    filter: alpha(opacity=0); }

  to {
    opacity: 1;
    filter: alpha(opacity=100); } }

@-o-keyframes fadeIn {
  from {
    opacity: 0;
    filter: alpha(opacity=0); }

  to {
    opacity: 1;
    filter: alpha(opacity=100); } }

@keyframes fadeIn {
  from {
    opacity: 0;
    filter: alpha(opacity=0); }

  to {
    opacity: 1;
    filter: alpha(opacity=100); } }

.header__logo-box {
  background-color: #fff;
  border-left: 1px solid #ccc;
  border-right: 1px solid #ccc;
  margin: 0 auto;
  padding-top: 16px;
  padding-top: 1rem;
  max-width: 1200px; }

.no-cssanimations .header__logo-box {
  padding-top: 0; }

.header__logo {
  background: #fff; }

.logo {
  display: block;
  padding: 16px 0 16px 32px;
  padding: 1rem 0 1rem 2rem;
  width: 600px; }

.no-cssanimations .logo {
  height: 68px;
  padding: 0 16px;
  padding: 0 1rem; }

svg path, svg polygon {
  fill: #267e64; }
svg:hover path, svg:hover polygon {
  opacity: .7;
  filter: alpha(opacity=70);
  -webkit-transition: fill 0.2s ease;
     -moz-transition: fill 0.2s ease;
       -o-transition: fill 0.2s ease;
          transition: fill 0.2s ease; }

.logo__stretched {
  display: block; }

.logo__stacked {
  display: none; }

.logo__globe path {
  opacity: 0;
  filter: alpha(opacity=0);
  -webkit-animation: fadeIn ease-in 1;
     -moz-animation: fadeIn ease-in 1;
       -o-animation: fadeIn ease-in 1;
          animation: fadeIn ease-in 1;
  -webkit-animation-fill-mode: forwards;
     -moz-animation-fill-mode: forwards;
       -o-animation-fill-mode: forwards;
          animation-fill-mode: forwards;
  -webkit-animation-duration: .5s;
     -moz-animation-duration: .5s;
       -o-animation-duration: .5s;
          animation-duration: .5s; }
.logo__globe path:nth-child(1) {
  -webkit-animation-delay: 0.1s;
     -moz-animation-delay: 0.1s;
       -o-animation-delay: 0.1s;
          animation-delay: 0.1s; }
.logo__globe path:nth-child(2) {
  -webkit-animation-delay: 0.11s;
     -moz-animation-delay: 0.11s;
       -o-animation-delay: 0.11s;
          animation-delay: 0.11s; }
.logo__globe path:nth-child(3) {
  -webkit-animation-delay: 0.22s;
     -moz-animation-delay: 0.22s;
       -o-animation-delay: 0.22s;
          animation-delay: 0.22s; }
.logo__globe path:nth-child(4) {
  -webkit-animation-delay: 0.13s;
     -moz-animation-delay: 0.13s;
       -o-animation-delay: 0.13s;
          animation-delay: 0.13s; }
.logo__globe path:nth-child(5) {
  -webkit-animation-delay: 0.14s;
     -moz-animation-delay: 0.14s;
       -o-animation-delay: 0.14s;
          animation-delay: 0.14s; }
.logo__globe path:nth-child(6) {
  -webkit-animation-delay: 0.15s;
     -moz-animation-delay: 0.15s;
       -o-animation-delay: 0.15s;
          animation-delay: 0.15s; }
.logo__globe path:nth-child(7) {
  -webkit-animation-delay: 0.16s;
     -moz-animation-delay: 0.16s;
       -o-animation-delay: 0.16s;
          animation-delay: 0.16s; }
.logo__globe path:nth-child(8) {
  -webkit-animation-delay: 0.37s;
     -moz-animation-delay: 0.37s;
       -o-animation-delay: 0.37s;
          animation-delay: 0.37s; }
.logo__globe path:nth-child(9) {
  -webkit-animation-delay: 0.18s;
     -moz-animation-delay: 0.18s;
       -o-animation-delay: 0.18s;
          animation-delay: 0.18s; }
.logo__globe path:nth-child(10) {
  -webkit-animation-delay: 0.19s;
     -moz-animation-delay: 0.19s;
       -o-animation-delay: 0.19s;
          animation-delay: 0.19s; }
.logo__globe path:nth-child(11) {
  -webkit-animation-delay: 0.2s;
     -moz-animation-delay: 0.2s;
       -o-animation-delay: 0.2s;
          animation-delay: 0.2s; }
.logo__globe path:nth-child(12) {
  -webkit-animation-delay: 0.21s;
     -moz-animation-delay: 0.21s;
       -o-animation-delay: 0.21s;
          animation-delay: 0.21s; }
.logo__globe path:nth-child(13) {
  -webkit-animation-delay: 0.12s;
     -moz-animation-delay: 0.12s;
       -o-animation-delay: 0.12s;
          animation-delay: 0.12s; }
.logo__globe path:nth-child(14) {
  -webkit-animation-delay: 0.23s;
     -moz-animation-delay: 0.23s;
       -o-animation-delay: 0.23s;
          animation-delay: 0.23s; }
.logo__globe path:nth-child(15) {
  -webkit-animation-delay: 0.34s;
     -moz-animation-delay: 0.34s;
       -o-animation-delay: 0.34s;
          animation-delay: 0.34s; }
.logo__globe path:nth-child(16) {
  -webkit-animation-delay: 0.25s;
     -moz-animation-delay: 0.25s;
       -o-animation-delay: 0.25s;
          animation-delay: 0.25s; }

.no-cssanimations .logo__globe path {
  fill: #267e64;
  opacity: 1;
  filter: alpha(opacity=100); }

.main-standard, .main-news, .main-post {
  display: table;
  padding: 16px 32px;
  padding: 1rem 2rem; }

.main-standard {
  padding-bottom: 80px;
  padding-bottom: 5rem; }
  .main-standard__text * + * {
    margin-top: 16px;
    margin-top: 1rem; }
  .main-standard__text h2 {
    color: #267e64;
    font-family: Playfair Display, serif;
    font-size: 32px;
    font-size: 2rem;
    font-weight: 400;
    line-height: 1;
    padding-top: 24px;
    padding-bottom: 0px; }

.main-bios {
  display: table;
  padding: 32px;
  padding: 2rem; }
.main-post__text * + * {
  margin-top: 16px;
  margin-top: 1rem; }
.main-post__text h2 {
  color: #267e64;
  font-family: Playfair Display, serif;
  font-size: 32px;
  font-size: 2rem;
  font-weight: 400;
  line-height: 1; }
.main-post__text h3 {
  color: #455652;
  font-family: Playfair Display, serif;
  font-size: 20px;
  font-size: 1.25rem;
  font-weight: 700;
  line-height: 1;
  text-transform: uppercase;
  margin-top: 36px;
  margin-bottom: 0px; }
.main-post__text figcaption {
  color: #ccc;
  font-size: 12px;
  font-size: .75rem;
  margin-top: 0; }
.main-post__text blockquote {
  color: #267e64;
  font-family: Playfair Display, serif;
  font-size: 24px;
  font-size: 1.5rem;
  font-style: italic;
  font-weight: 700;
  margin-top: 36px;
  margin-bottom: 36px; }

.form-standard input, .form-standard input[type="email"], .form-standard input[type="number"], .form-standard input[type="password"], .form-standard input[type="search"], .form-standard input[type="tel"], .form-standard input[type="text"], .form-standard input[type="url"], .form-standard input[type="color"], .form-standard input[type="date"], .form-standard input[type="name"], .form-standard input[type="datetime"], .form-standard input[type="datetime-local"], .form-standard input[type="month"], .form-standard input[type="time"], .form-standard input[type="week"], .form-standard textarea {
  color: #333;
  border: 1px solid #ccc;
  border-box-sizing: content-box;
  -moz-border-radius: 0;
       border-radius: 0;
  border-radius-font-size: 1rem;
  padding: 16px;
  padding: 1rem;
  display: block;
  width: 100%; }
.form-standard label {
  display: block; }
.form-standard input[type="button"], .form-standard input[type="reset"], .form-standard input[type="submit"] {
  display: block; }
.form-standard__checkbox {
  display: inline-block; }
.form-standard__checkbox + label {
  display: inline-block; }
.form-standard .selectbox {
  background: #fff;
  -moz-border-radius: 0;
       border-radius: 0;
  cursor: pointer;
  position: relative;
  height: 48px; }
.form-standard select {
  background: #fff;
  -moz-box-shadow: none;
       box-shadow: none;
  -moz-border-radius: 0;
       border-radius: 0;
  border: 1px solid #ccc;
  color: #333;
  cursor: pointer;
  display: block;
  font-size: 16px;
  font-size: 1rem;
  height: 45px;
  padding: 16px;
  padding: 1rem;
  position: relative;
  width: 100%; }

.contact-us__button {
  background-color: #eceee6; }


@media (max-width: 768px) {

  [class*='col-'] {
    display: inline-block;
    text-align: center; }

  .col-2-12 {
    width: 100%; }

  .col-3-12 {
    width: 100%; }

  .col-4-12 {
    width: 100%; }

  .col-5-12 {
    width: 100%; }

  .col-6-12 {
    width: 100%; }

  .col-7-12 {
    width: 100%; }

  .col-8-12 {
    width: 100%; }

  .col-9-12 {
    width: 100%; }

  .col-10-12 {
    width: 100%; }

  .col-11-12 {
    width: 100%; }

  .nav-minor__container {
    text-align: center; }

  .nav-footer {
    display: none; }

  .banner-standard__media-approach {
    height: 300px; }

  .banner-standard__media-leadership {
    height: 300px; }

  .card-diptic {
    -webkit-flex-flow: column;
        -ms-flex-flow: column;
            flex-flow: column; }

  .card-bio {
    border-bottom: 1px solid #e5e6e7;
    margin-bottom: 2rem; }

  .card-bio__media {
    margin-bottom: 1rem;
    text-align: center; }

  .card-bio__media img {
    display: inline-block;
    width: 33%; }

  .card-bio__box {
    padding: 0; }

  .card-bio__text {
    text-align: left; }

  .cta-contact__text {
    padding: 0; }

  .cta-contact__button {
    margin: 0; }

  .cta-teaser {
    -webkit-flex-flow: column;
        -ms-flex-flow: column;
            flex-flow: column; }

  .cta-teaser__box {
    padding: 0; }

  .cta-teaser__media {
    height: 150px;
    margin-top: 2rem; }

  .cta-center__text {
    padding: 0; }

  .cta-subscribe__button {
    margin: 1rem 0 0 0; }

  .cta-sidebar {
    padding: 3rem 2rem; }

  footer {
    padding: 0; }

  .footer-copyright {
    padding: 2rem 0 0 0; }

  .footer-copyright__logo-box {
    display: inline-block; }

  .footer-copyright__logo-box .logo__stacked {
    display: inline-block;
    width: 250px; }

  .main-standard__content {
    text-align: left; }

  .main-post__text {
    text-align: left; } }


@media (max-width: 700px) {

  tr {
    margin-top: 0 !important; }

  tr:first-child {
    border-top: 1px solid #e5e6e7; }

  td {
    margin-top: 0 !important;
    position: relative;
    padding-left: 40%; }

  td:before {
    position: absolute;
    top: 6px;
    left: 6px;
    width: 40%;
    padding-right: 10px;
    white-space: nowrap;
    font-weight: 600; }

  td:nth-of-type(1):before {
    content: "City: "; }

  td:nth-of-type(2):before {
    content: "Address: "; }

  td:nth-of-type(3):before {
    content: "Phone: "; }

  thead tr {
    position: absolute;
    top: -9999px;
    left: -9999px; }

  table, thead, tbody, th, td, tr {
    display: block; } }


@media (max-width: 1022px) {

  body.nav-on-left.overflow-hidden {
    overflow: hidden; }

  .cd-main-content.nav-is-visible {
    -webkit-transform: translateX(-260px);
       -moz-transform: translateX(-260px);
        -ms-transform: translateX(-260px);
         -o-transform: translateX(-260px);
            transform: translateX(-260px); }

  .nav-on-left .cd-main-content.nav-is-visible {
    -webkit-transform: translateX(260px);
       -moz-transform: translateX(260px);
        -ms-transform: translateX(260px);
         -o-transform: translateX(260px);
            transform: translateX(260px); }

  .cd-main-header.nav-is-visible {
    -webkit-transform: translateX(0);
       -moz-transform: translateX(0);
        -ms-transform: translateX(0);
         -o-transform: translateX(0);
            transform: translateX(0); }

  .nav-on-left .cd-main-header.nav-is-visible {
    -webkit-transform: translateX(260px);
       -moz-transform: translateX(260px);
        -ms-transform: translateX(260px);
         -o-transform: translateX(260px);
            transform: translateX(260px); }

  .nav-on-left .cd-logo {
    left: auto;
    right: 5%; }

  .nav-on-left .cd-header-buttons {
    right: auto;
    left: 5%; }

  .nav-on-left .cd-header-buttons li {
    float: right; }

  .nav-on-left .cd-primary-nav, .nav-on-left .cd-primary-nav ul {
    right: auto;
    left: 0; }

  .cd-primary-nav .cd-nav-gallery .cd-nav-item img {
    display: none; }

  .cd-primary-nav {

    /* by default .cd-primary-nav is hidden - trick for iOS devices where you can see the navigation if you pull down */
    visibility: hidden;
    -webkit-transition: visibility 0s 0.3s;
       -moz-transition: visibility 0s 0.3s;
         -o-transition: visibility 0s 0.3s;
            transition: visibility 0s 0.3s; }

  .cd-primary-nav.nav-is-visible {
    visibility: visible;
    -webkit-transition: visibility 0s 0s;
       -moz-transition: visibility 0s 0s;
         -o-transition: visibility 0s 0s;
            transition: visibility 0s 0s; }

  .cd-overlay.is-visible {
    -webkit-transform: translateX(0);
       -moz-transform: translateX(0);
        -ms-transform: translateX(0);
         -o-transform: translateX(0);
            transform: translateX(0); }

  .nav-on-left .cd-overlay.is-visible {
    -webkit-transform: translateX(260px);
       -moz-transform: translateX(260px);
        -ms-transform: translateX(260px);
         -o-transform: translateX(260px);
            transform: translateX(260px); }

  .cd-overlay.is-visible.search-is-visible, .nav-on-left .cd-overlay.is-visible.search-is-visible {
    -webkit-transform: translateX(0);
       -moz-transform: translateX(0);
        -ms-transform: translateX(0);
         -o-transform: translateX(0);
            transform: translateX(0); } }


@media (min-width: 1024px) {

  .cd-main-header {
    height: 80px; }

  .cd-main-header:after {
    content: "";
    display: table;
    clear: both; }

  .cd-logo {
    top: 26px;
    left: 4em; }

  .cd-header-buttons {
    top: 1rem;
    right: 1rem; }

  .cd-nav-trigger {
    display: none; }

  .cd-primary-nav {
    position: static;
    padding: 0 50px 0 0;
    height: auto;
    width: 100%;
    overflow: visible;
    background: transparent;
    text-align: center; }

  .cd-primary-nav:after {
    content: "";
    display: table;
    clear: both; }

  .cd-primary-nav.moves-out > li > a {

    /* reset mobile style */
    -webkit-transform: translateX(0);
       -moz-transform: translateX(0);
        -ms-transform: translateX(0);
         -o-transform: translateX(0);
            transform: translateX(0);
    opacity: 1;
    filter: alpha(opacity=100); }

  .cd-primary-nav ul {
    position: static;
    height: auto;
    width: auto;
    background: transparent;
    overflow: visible;
    text-align: left;
    z-index: 3; }

  .cd-primary-nav ul.is-hidden {

    /* reset mobile style */
    -webkit-transform: translateX(0);
       -moz-transform: translateX(0);
        -ms-transform: translateX(0);
         -o-transform: translateX(0);
            transform: translateX(0); }

  .cd-primary-nav ul.moves-out > li > a {

    /* reset mobile style */
    -webkit-transform: translateX(0);
       -moz-transform: translateX(0);
        -ms-transform: translateX(0);
         -o-transform: translateX(0);
            transform: translateX(0);
    opacity: 1;
    filter: alpha(opacity=100); }

  .cd-primary-nav > li {
    display: inline-block;
    margin-left: .5rem; }

  .cd-primary-nav > li > a {

    /* main navigation buttons style */
    position: relative;
    display: inline-block;
    height: 80px;
    line-height: 80px;
    padding: 0;
    color: #455652;
    overflow: visible;
    border-bottom: none;
    -webkit-transition: color 0.3s, box-shadow 0.3s;
       -moz-transition: color 0.3s, -moz-box-shadow 0.3s;
         -o-transition: color 0.3s, box-shadow 0.3s;
            transition: color 0.3s, box-shadow 0.3s; }

  .cd-primary-nav > li > a:hover {
    color: #267e64; }

  .cd-primary-nav > li > a.selected {
    color: #267e64;
    -moz-box-shadow: inset 0 -2px 0 #267e64;
         box-shadow: inset 0 -2px 0 #267e64; }

  .cd-primary-nav .go-back, .cd-primary-nav .see-all {
    display: none; }

  .cd-primary-nav .cd-secondary-nav, .cd-primary-nav .cd-nav-gallery, .cd-primary-nav .cd-nav-icons {

    /* dropdown menu style */
    position: absolute;
    top: 80px;
    width: 100%;
    background: #fff;
    padding: 2rem;
    -moz-box-shadow: inset 0 1px 0 #e5e6e7, 0 3px 6px rgba(0, 0, 0, 0.05);
         box-shadow: inset 0 1px 0 #e5e6e7, 0 3px 6px rgba(0, 0, 0, 0.05);
    -webkit-transform: translateX(0);
       -moz-transform: translateX(0);
        -ms-transform: translateX(0);
         -o-transform: translateX(0);
            transform: translateX(0);
    -webkit-transition: opacity .3s 0s, visibility 0s 0s;
       -moz-transition: opacity .3s 0s, visibility 0s 0s;
         -o-transition: opacity .3s 0s, visibility 0s 0s;
            transition: opacity .3s 0s, visibility 0s 0s; }

  .cd-primary-nav .cd-secondary-nav:after, .cd-primary-nav .cd-nav-gallery:after, .cd-primary-nav .cd-nav-icons:after {
    content: "";
    display: table;
    clear: both; }

  .cd-primary-nav .cd-secondary-nav.is-hidden, .cd-primary-nav .cd-nav-gallery.is-hidden, .cd-primary-nav .cd-nav-icons.is-hidden {
    opacity: 0;
    filter: alpha(opacity=0);
    visibility: hidden;
    -webkit-transition: opacity .3s 0s, visibility 0s .3s;
       -moz-transition: opacity .3s 0s, visibility 0s .3s;
         -o-transition: opacity .3s 0s, visibility 0s .3s;
            transition: opacity .3s 0s, visibility 0s .3s; }

  .cd-primary-nav .cd-secondary-nav > .see-all, .cd-primary-nav .cd-nav-gallery > .see-all, .cd-primary-nav .cd-nav-icons > .see-all {

    /* this is the BIG See all button at the bottom of the dropdown menu */
    display: block;
    position: absolute;
    left: 0;
    bottom: 0;
    height: 80px;
    width: 100%;
    overflow: hidden;

    /* reset some inherited style */
    margin: 0;
    padding: 0; }

  .cd-primary-nav .cd-secondary-nav > .see-all a, .cd-primary-nav .cd-nav-gallery > .see-all a, .cd-primary-nav .cd-nav-icons > .see-all a {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    font-size: 2.2rem;
    font-weight: bold;
    text-align: center;
    line-height: 80px;
    border-top: 1px solid #e5e6e7;

    /* reset some inherited style */
    border-bottom: none;
    margin: 0;
    padding: 0;
    -webkit-transition: color 0.2s, background 0.2s, border 0.2s;
       -moz-transition: color 0.2s, background 0.2s, border 0.2s;
         -o-transition: color 0.2s, background 0.2s, border 0.2s;
            transition: color 0.2s, background 0.2s, border 0.2s; }

  .cd-primary-nav .cd-secondary-nav > .see-all a:hover, .cd-primary-nav .cd-nav-gallery > .see-all a:hover, .cd-primary-nav .cd-nav-icons > .see-all a:hover {
    background: #455652;
    border-color: #455652;
    color: #fff; }

  .cd-primary-nav .cd-secondary-nav > li {

    /* change the height according to your needs - you can even set height: auto */
    height: 340px;

    /* here you set the number of columns - use width percentage */
    width: 23%;
    float: left;
    margin-right: 2.66%;
    border-right: 1px solid #e5e6e7;
    overflow: hidden;
    overflow-x: hidden;
    overflow-y: auto;
    -webkit-overflow-scrolling: touch; }

  .cd-primary-nav .cd-secondary-nav > li:nth-child(4n+2) {

    /* +2 because we have 2 list items with display:none */
    margin-right: 0;
    border-right: none; }

  .cd-primary-nav .cd-secondary-nav > li > a {

    /* secondary nav title */
    color: #267e64;
    font-weight: bold;
    font-size: 1.6rem;
    margin-bottom: .6em; }

  .cd-primary-nav .cd-secondary-nav a {
    height: 30px;
    line-height: 30px;
    padding: 0 18% 0 0;
    color: #455652;
    border-bottom: none;
    font-size: 1.4rem; }

  .cd-primary-nav .cd-secondary-nav a:hover {
    color: #267e64; }

  .cd-primary-nav .cd-secondary-nav ul {

    /* Force Hardware Acceleration in WebKit */
    -webkit-transform: translateZ(0);
       -moz-transform: translateZ(0);
            transform: translateZ(0); }

  .cd-primary-nav .cd-secondary-nav ul ul {

    /* tertiary navigation */
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%; }

  .cd-primary-nav .cd-secondary-nav ul ul.is-hidden {
    -webkit-transform: translateX(100%);
       -moz-transform: translateX(100%);
        -ms-transform: translateX(100%);
         -o-transform: translateX(100%);
            transform: translateX(100%); }

  .cd-primary-nav .cd-secondary-nav ul ul .go-back {
    display: block; }

  .cd-primary-nav .cd-secondary-nav ul ul .go-back a {
    color: transparent; }

  .cd-primary-nav .cd-secondary-nav ul ul .see-all {
    display: block; }

  .cd-primary-nav .cd-secondary-nav .moves-out > li > a {

    /* push the navigation items to the left - and lower down opacity - when tertiary nav slides in */
    -webkit-transform: translateX(-100%);
       -moz-transform: translateX(-100%);
        -ms-transform: translateX(-100%);
         -o-transform: translateX(-100%);
            transform: translateX(-100%); }

  .cd-primary-nav .cd-nav-gallery {
    -moz-box-shadow: 0 5px 5px rgba(100, 100, 100, 0.3);
         box-shadow: 0 5px 5px rgba(100, 100, 100, 0.3); }

  .cd-primary-nav .cd-nav-gallery li {

    /* set here number of columns - use width percentage */
    float: left;
    width: 25%;
    padding: 1rem; }

  .cd-primary-nav .cd-nav-gallery li:nth-child(4n+2) {

    /* +2 because we have two additional list items with display:none */ }

  .cd-primary-nav .cd-nav-gallery .cd-nav-item {
    border-bottom: none;
    padding: 0;
    height: auto;
    line-height: 1.2; }

  .cd-primary-nav .cd-nav-gallery .cd-nav-item img {
    position: static;
    margin-top: 0;
    height: auto;
    width: 100%;
    margin-bottom: .6rem; }

  .cd-primary-nav .cd-nav-gallery .cd-nav-item h3 {
    color: #267e64;
    font-weight: bold;
    font-size: .9rem;
    padding: 0 .4rem; }

  .cd-primary-nav .cd-nav-icons li {

    /* set here number of columns - use width percentage */
    width: 32%;
    float: left;
    margin: 0 2% 20px 0; }

  .cd-primary-nav .cd-nav-icons li:nth-child(3n+2) {

    /* +2 because we have two additional list items with display:none */
    margin-right: 0; }

  .cd-primary-nav .cd-nav-icons .cd-nav-item {
    border-bottom: none;
    height: 80px;
    line-height: 1.2;
    padding: 24px 0 0 85px; }

  .cd-primary-nav .cd-nav-icons .cd-nav-item:hover {
    background: #fafafb; }

  .cd-primary-nav .cd-nav-icons .cd-nav-item h3 {
    color: #267e64;
    font-weight: bold; }

  .cd-primary-nav .cd-nav-icons .cd-nav-item p {
    display: block; }

  .cd-primary-nav .cd-nav-icons .cd-nav-item::before {
    left: 25px; }

  .has-children > a::before, .has-children > a::after, .go-back a::before, .go-back a::after {
    background: #cacdcf; }

  .has-children > a:hover::before, .has-children > a:hover::after, .go-back a:hover::before, .go-back a:hover::after {
    background: #267e64; }

  .has-children > a::before, .has-children > a::after {
    right: 15%; }

  .cd-primary-nav > .has-children > a {

    /* main navigation arrows on larger devices */
    padding-right: 30px !important; }

  .cd-primary-nav > .has-children > a::before, .cd-primary-nav > .has-children > a::after {
    width: 9px;
    -webkit-transform-origin: 50% 50%;
       -moz-transform-origin: 50% 50%;
        -ms-transform-origin: 50% 50%;
         -o-transform-origin: 50% 50%;
            transform-origin: 50% 50%;
    background: #cacdcf;
    -webkit-backface-visibility: hidden;
       -moz-backface-visibility: hidden;
            backface-visibility: hidden;
    -webkit-transition: width 0.3s, -webkit-transform 0.3s;
       -moz-transition: width 0.3s, -moz-transform 0.3s;
         -o-transition: width 0.3s, -o-transform 0.3s;
            transition: width 0.3s, transform 0.3s; }

  .cd-primary-nav > .has-children > a::before {
    right: 12px; }

  .cd-primary-nav > .has-children > a::after {
    right: 7px; }

  .cd-primary-nav > .has-children > a.selected::before, .cd-primary-nav > .has-children > a.selected::after {
    width: 14px; }

  .cd-primary-nav > .has-children > a.selected::before {
    -webkit-transform: translateX(5px) rotate(-45deg);
       -moz-transform: translateX(5px) rotate(-45deg);
        -ms-transform: translateX(5px) rotate(-45deg);
         -o-transform: translateX(5px) rotate(-45deg);
            transform: translateX(5px) rotate(-45deg); }

  .cd-primary-nav > .has-children > a.selected::after {
    -webkit-transform: rotate(45deg);
       -moz-transform: rotate(45deg);
        -ms-transform: rotate(45deg);
         -o-transform: rotate(45deg);
            transform: rotate(45deg); }

  .cd-secondary-nav > .has-children > a::before, .cd-secondary-nav > .has-children > a::after {

    /* remove arrows on secondary nav titles */
    display: none; }

  .cd-primary-nav .go-back a {
    padding-left: 20px; }

  .cd-primary-nav .go-back a::before, .cd-primary-nav .go-back a::after {
    left: 1px; }

  .cd-search {
    height: 120px;
    top: 80px; }

  .cd-search input {
    -moz-box-sizing: border-box;
         box-sizing: border-box;
    border: none;
    color: #267e64;
    font-family: serif;
    padding: 0 2rem;
    font-size: 3.2rem; }

  .no-js .cd-primary-nav {
    position: absolute;
    z-index: 3;
    display: inline-block;
    width: auto;
    top: 0;
    right: 150px;
    padding: 0; }

  .no-js .nav-is-fixed .cd-primary-nav {
    position: fixed; } }


@media (min-width: 769px) {

  .banner-tall {
    height: 465px; }

  .card-diptic__box {
    padding: 2rem 1rem 2rem 2rem; }

  .card-diptic__box:nth-child(2) {
    border-left: 1px solid #ccc;
    padding: 2rem 2rem 2rem 1rem; }

  .card-triptic__box:nth-child(2) {
    border-left: 1px solid #ccc; }

  .card-triptic__box:nth-child(3) {
    border-left: 1px solid #ccc; } }


@media (max-width: 767px) {

  .banner-tall__headline {
    position: static;
    font-size: 2rem;
    padding: 2rem; } }


@media (min-width: 768px) and (min-width: 1023px) {

  .footer-copyright__box {
    text-align: right; }

  .footer-copyright__box small {
    font-size: 12px; }

  .footer-copyright__box .nav-minor li a {
    font-size: 12px; }

  .footer-disclaimer h6, .footer-disclaimer p, .footer-disclaimer ul {
    font-size: 12px; } }


@media (max-width: 899px) {

  .logo {
    width: 400px; }

  .logo__stretched {
    display: none; }

  .logo__stacked {
    display: block; } }


@media (max-width: 499px) {

  .logo {
    padding: 1rem;
    width: 300px; } }


/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlbmRvci9fbm9ybWFsaXplLnNjc3MiLCJiYXNlL190eXBvZ3JhcGh5LnNhc3MiLCJiYXNlL19jb2xvcnMuc2FzcyIsImJhc2UvX2NsZWFyLWZpeC5zYXNzIiwiYmFzZS9faW1hZ2VzLnNhc3MiLCJiYXNlL19sYXlvdXQuc2FzcyIsImJhc2UvX2luY2x1ZGUtbWVkaWEuc2FzcyIsImJhc2UvX2dsb2JhbC5zYXNzIiwiYmFzZS9fdGFibGVzLnNhc3MiLCJtb2R1bGVzL25hdi9fbmF2LW1pbm9yLnNhc3MiLCJtb2R1bGVzL25hdi9fbmF2LW1lZ2Euc2FzcyIsIm1vZHVsZXMvbmF2L19uYXYtZm9vdGVyLnNhc3MiLCJtb2R1bGVzL2Jhbm5lci9fX2Jhbm5lci5zYXNzIiwibW9kdWxlcy9jYXJkcy9fX2NhcmRzLnNhc3MiLCJtb2R1bGVzL2N0YS9fX2N0YS5zYXNzIiwibW9kdWxlcy9mb290ZXIvX2Zvb3Rlci5zYXNzIiwibW9kdWxlcy9oZWFkZXIvX2hlYWRlci5zYXNzIiwibW9kdWxlcy9tYWluL19tYWluLnNhc3MiLCJtb2R1bGVzL2Zvcm0vX2Zvcm0uc2FzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE0Q0EsQUFBUyxBQUFPLEFBQVMsQUFBWSxBQUFRLEFBQVEsQUFBUSxBQUFRLEFBQUssQUFBUztFQVcvRSxBQUFTOztBQUtiLEFBQU8sQUFBUTtFQUdYLEFBQVM7O0FBVWIsQUFBSyxBQUFLO0VBQ04sQUFBUztFQUNULEFBQVE7O0FBUVosQUFBVTtFQUNOLEFBQVM7O0FBWWI7RUFNSSxBQUEwQjtFQUMxQixBQUFzQjs7QUFlMUI7RUFDSSxBQUFROztBQVlaO0VBR0ksQUFBWTtFQVVoQixBQUFDLEFBQVEsQUFBQztJQUVGLEFBQVM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTZDakIsQUFBSTtFQUNBLEFBQWU7O0FBS25CLEFBQUc7RUFFQyxBQUFhOztBQVdqQjtFQUNJLEFBQVk7O0FBS2hCO0VBQ0ksQUFBWTtFQUNaLEFBQU87O0FB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TyxBQUFlLEFBQUssQUFBZ0IsQUFBZSxBQUFLLEFBQWlCLEFBQWUsQUFBSyxBQUFtQixBQUFlLEFBQUssQUFBaUIsQUFBZSxBQUFLLEFBQWMsQUFBZSxBQUFLLEFBQWUsQUFBZSxBQUFLLEFBQWMsQUFBZSxBQUFLLEFBQWdCLEFBQWUsQUFBSyxBQUFlLEFBQWUsQUFBSyxBQUFlLEFBQWUsQUFBSyxBQUFtQixBQUFlLEFBQUssQUFBeUIsQUFBZSxBQUFLLEFBQWdCLEFBQWUsQUFBSyxBQUFlLEFBQWUsQUFBSyxBQUFlLEFBQWU7RWhCUzlqQixBZ0JRUjtFQUNBLEFBQVE7RUFBVSxBQUNMO0VBQ2IsQUFBZTtFQUFBLEFBQ0g7RUFDWixBQUFTO0VBQ1QsQUFBUztFQUNULEFBQU87QUFHVixBQUFlO0VBQ1gsQUFBUztBQUViLEFBQWUsQUFBSyxBQUFpQixBQUFlLEFBQUssQUFBZ0IsQUFBZSxBQUFLO0VBR3pGLEFBQVM7QUFHYjtFQUNJLEFBQVM7QUFFYixBQUEyQjtFQUN2QixBQUFTO0FBR2IsQUFBZTtFaEJ4Q1AsQWdCeUNKO0VBQ0EsQUFBZTtFQUNmLEFBQVE7RUFDUixBQUFVO0VBQ1YsQUFBUTtBQUdaLEFBQWU7RWhCaERQLEFnQmlESjtFQUNBLEFBQVk7RUFDWixBQUFlO0VBQ2YsQUFBUTtFaEI5Q0QsQWdCK0NQO0VBQ0EsQUFBUTtFQUNSLEFBQVM7RUFDVCxBQUFXO0VBQ1gsQUFBUTtFQUNSLEFBQVM7RUFDVCxBQUFVO0VBQ1YsQUFBTzs7QUFFWDtFaEJoRVEsQWdCaUVOIiwiZmlsZSI6InN0eWxlLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBOb3JtYWxpemUuc2NzcyBiYXNlZCBvbiBOaWNvbGFzIEdhbGxhZ2hlciBhbmQgSm9uYXRoYW4gTmVhbCdzXG4vLyBub3JtYWxpemUuY3NzIHYyLjEuMyB8IE1JVCBMaWNlbnNlIHwgZ2l0LmlvL25vcm1hbGl6ZVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIE5vcm1hbGl6ZS5zY3NzIHNldHRpbmdzXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG5cbi8vIFNldCB0byB0cnVlIGlmIHlvdSB3YW50IHRvIGFkZCBzdXBwb3J0IGZvciBJRTYgYW5kIElFN1xuLy8gTm90aWNlOiBzZXR0aW5nIHRvIHRydWUgbWlnaHQgcmVuZGVyIHNvbWUgZWxlbWVudHNcbi8vIHNsaWdodGx5IGRpZmZlcmVudGx5IHRoYW4gd2hlbiBzZXQgdG8gZmFsc2VcbiRsZWdhY3lfc3VwcG9ydF9mb3JfaWU6IGZhbHNlICFkZWZhdWx0OyAvLyBVc2VkIGFsc28gaW4gQ29tcGFzc1xuXG5cbi8vIFNldCB0aGUgZGVmYXVsdCBmb250IGZhbWlseSBoZXJlIHNvIHlvdSBkb24ndCBoYXZlIHRvIG92ZXJyaWRlIGl0IGxhdGVyXG4kbm9ybWFsaXplZF9mb250X2ZhbWlseTogc2Fucy1zZXJpZiAhZGVmYXVsdDtcblxuJG5vcm1hbGl6ZV9oZWFkaW5nczogdHJ1ZSAhZGVmYXVsdDtcblxuJGgxX2ZvbnRfc2l6ZTogMmVtICFkZWZhdWx0O1xuJGgyX2ZvbnRfc2l6ZTogMS41ZW0gIWRlZmF1bHQ7XG4kaDNfZm9udF9zaXplOiAxLjE3ZW0gIWRlZmF1bHQ7XG4kaDRfZm9udF9zaXplOiAxZW0gIWRlZmF1bHQ7XG4kaDVfZm9udF9zaXplOiAwLjgzZW0gIWRlZmF1bHQ7XG4kaDZfZm9udF9zaXplOiAwLjc1ZW0gIWRlZmF1bHQ7XG5cbiRoMV9tYXJnaW46IDAuNjdlbSAwICFkZWZhdWx0O1xuJGgyX21hcmdpbjogMC44M2VtIDAgIWRlZmF1bHQ7XG4kaDNfbWFyZ2luOiAxZW0gMCAhZGVmYXVsdDtcbiRoNF9tYXJnaW46IDEuMzNlbSAwICFkZWZhdWx0O1xuJGg1X21hcmdpbjogMS42N2VtIDAgIWRlZmF1bHQ7XG4kaDZfbWFyZ2luOiAyLjMzZW0gMCAhZGVmYXVsdDtcblxuJGJhY2tncm91bmQ6ICNmZmYgIWRlZmF1bHQ7XG4kY29sb3I6ICMwMDAgIWRlZmF1bHQ7XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBIVE1MNSBkaXNwbGF5IGRlZmluaXRpb25zXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyBDb3JyZWN0cyBibG9jayBkaXNwbGF5IG5vdCBkZWZpbmVkIGluIElFNi83LzgvOSAmIEZGM1xuXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm5hdixcbnNlY3Rpb24sXG5zdW1tYXJ5IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbn1cblxuLy8gQ29ycmVjdHMgaW5saW5lLWJsb2NrIGRpc3BsYXkgbm90IGRlZmluZWQgaW4gSUU2LzcvOC85ICYgRkYzXG5cbmF1ZGlvLFxuY2FudmFzLFxudmlkZW8ge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBAaWYgJGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZSB7XG4gICAgICAgICpkaXNwbGF5OiBpbmxpbmU7XG4gICAgICAgICp6b29tOiAxO1xuICAgIH1cbn1cblxuLy8gMS4gUHJldmVudHMgbW9kZXJuIGJyb3dzZXJzIGZyb20gZGlzcGxheWluZyAnYXVkaW8nIHdpdGhvdXQgY29udHJvbHNcbi8vIDIuIFJlbW92ZSBleGNlc3MgaGVpZ2h0IGluIGlPUzUgZGV2aWNlc1xuXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICAgIGRpc3BsYXk6IG5vbmU7IC8vIDFcbiAgICBoZWlnaHQ6IDA7IC8vIDJcbn1cblxuLy9cbi8vIEFkZHJlc3MgYFtoaWRkZW5dYCBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS5cbi8vIEhpZGUgdGhlIGB0ZW1wbGF0ZWAgZWxlbWVudCBpbiBJRSwgU2FmYXJpLCBhbmQgRmlyZWZveCA8IDIyLlxuLy9cblxuW2hpZGRlbl0sIHRlbXBsYXRlIHtcbiAgICBkaXNwbGF5OiBub25lO1xufVxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gQmFzZVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gMS4gQ29ycmVjdHMgdGV4dCByZXNpemluZyBvZGRseSBpbiBJRTYvNyB3aGVuIGJvZHkgZm9udC1zaXplIGlzIHNldCB1c2luZyBlbSB1bml0c1xuLy8gICAgaHR0cDovL2NsYWdudXQuY29tL2Jsb2cvMzQ4LyNjNzkwXG4vLyAyLiBQcmV2ZW50cyBpT1MgdGV4dCBzaXplIGFkanVzdCBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2UsIHdpdGhvdXQgZGlzYWJsaW5nIHVzZXIgem9vbVxuLy8gICAgd3d3LjQ1NmJlcmVhc3RyZWV0LmNvbS9hcmNoaXZlLzIwMTAxMi9jb250cm9sbGluZ190ZXh0X3NpemVfaW5fc2FmYXJpX2Zvcl9pb3Nfd2l0aG91dF9kaXNhYmxpbmdfdXNlcl96b29tL1xuXG5odG1sIHtcbiAgICBAaWYgJGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTAwJTsgLy8gMVxuICAgIH1cblx0XHQvL2JhY2tncm91bmQ6ICRiYWNrZ3JvdW5kO1xuXHRcdC8vY29sb3I6ICRjb2xvcjtcbiAgICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8vIDJcbiAgICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLy8gMlxufVxuXG4vLyBBZGRyZXNzZXMgZm9udC1mYW1pbHkgaW5jb25zaXN0ZW5jeSBiZXR3ZWVuICd0ZXh0YXJlYScgYW5kIG90aGVyIGZvcm0gZWxlbWVudHMuXG5cbmh0bWwsXG5idXR0b24sXG5pbnB1dCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgICAvL2ZvbnQtZmFtaWx5OiAkbm9ybWFsaXplZF9mb250X2ZhbWlseTtcbn1cblxuLy8gQWRkcmVzc2VzIG1hcmdpbnMgaGFuZGxlZCBpbmNvcnJlY3RseSBpbiBJRTYvN1xuXG5ib2R5IHtcbiAgICBtYXJnaW46IDA7XG59XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBMaW5rc1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gMS4gUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgY29sb3IgZnJvbSBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4vLyAyLiBBZGRyZXNzZXMgb3V0bGluZSBkaXNwbGF5ZWQgb2RkbHkgaW4gQ2hyb21lXG4vLyAzLiBJbXByb3ZlcyByZWFkYWJpbGl0eSB3aGVuIGZvY3VzZWQgYW5kIGFsc28gbW91c2UgaG92ZXJlZCBpbiBhbGwgYnJvd3NlcnNcbi8vICAgIHBlb3BsZS5vcGVyYS5jb20vcGF0cmlja2wvZXhwZXJpbWVudHMva2V5Ym9hcmQvdGVzdFxuXG5hIHtcbiAgICAvLyAxXG5cbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcblxuICAgIC8vIDJcblxuICAgICY6Zm9jdXMge1xuICAgICAgICAvL291dGxpbmU6IHRoaW4gZG90dGVkO1xuICAgIH1cblxuICAgIC8vIDNcblxuICAgICY6aG92ZXIsXG4gICAgJjphY3RpdmUge1xuICAgICAgICBvdXRsaW5lOiAwO1xuICAgIH1cbn1cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIFR5cG9ncmFwaHlcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIEFkZHJlc3NlcyBmb250IHNpemVzIGFuZCBtYXJnaW5zIHNldCBkaWZmZXJlbnRseSBpbiBJRTYvN1xuLy8gQWRkcmVzc2VzIGZvbnQgc2l6ZXMgd2l0aGluICdzZWN0aW9uJyBhbmQgJ2FydGljbGUnIGluIEZGNCssIENocm9tZSwgUzVcblxuLyogQGlmIFxcJG5vcm1hbGl6ZV9oZWFkaW5ncyA9PSB0cnVlIHtcbiAgICBoMSB7XG4gICAgICAgIGZvbnQtc2l6ZTogXFwkaDFfZm9udF9zaXplO1xuICAgICAgICBtYXJnaW46IFxcJGgxX21hcmdpbjtcbiAgICB9XG5cbiAgICBoMiB7XG4gICAgICAgIGZvbnQtc2l6ZTogXFwkaDJfZm9udF9zaXplO1xuICAgICAgICBtYXJnaW46IFxcJGgyX21hcmdpbjtcbiAgICB9XG5cbiAgICBoMyB7XG4gICAgICAgIGZvbnQtc2l6ZTogXFwkaDNfZm9udF9zaXplO1xuICAgICAgICBtYXJnaW46IFxcJGgzX21hcmdpbjtcbiAgICB9XG5cbiAgICBoNCB7XG4gICAgICAgIGZvbnQtc2l6ZTogXFwkaDRfZm9udF9zaXplO1xuICAgICAgICBtYXJnaW46IFxcJGg0X21hcmdpbjtcbiAgICB9XG5cbiAgICBoNSB7XG4gICAgICAgIGZvbnQtc2l6ZTogXFwkaDVfZm9udF9zaXplO1xuICAgICAgICBtYXJnaW46IFxcJGg1X21hcmdpbjtcbiAgICB9XG5cbiAgICBoNiB7XG4gICAgICAgIGZvbnQtc2l6ZTogXFwkaDZfZm9udF9zaXplO1xuICAgICAgICBtYXJnaW46IFxcJGg2X21hcmdpbjtcbiAgICB9XG59ICovXG5cbi8vIEFkZHJlc3NlcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOSwgUzUsIENocm9tZVxuXG5hYmJyW3RpdGxlXSB7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZDtcbn1cblxuLy8gQWRkcmVzc2VzIHN0eWxlIHNldCB0byAnYm9sZGVyJyBpbiBGRjMrLCBTNC81LCBDaHJvbWVcblxuYixcbnN0cm9uZyB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbkBpZiAkbGVnYWN5X3N1cHBvcnRfZm9yX2llIHtcbiAgICBibG9ja3F1b3RlIHtcbiAgICAgICAgbWFyZ2luOiAxZW0gNDBweDtcbiAgICB9XG59XG5cbi8vIEFkZHJlc3NlcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIFM1LCBDaHJvbWVcblxuZGZuIHtcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi8vIEFkZHJlc3NlcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFNi83LzgvOVxuXG5tYXJrIHtcbiAgICBiYWNrZ3JvdW5kOiAjZmYwO1xuICAgIGNvbG9yOiAjMDAwO1xufVxuXG4vLyBBZGRyZXNzZXMgbWFyZ2lucyBzZXQgZGlmZmVyZW50bHkgaW4gSUU2LzdcbkBpZiAkbGVnYWN5X3N1cHBvcnRfZm9yX2llIHtcbiAgICBwLFxuICAgIHByZSB7XG4gICAgICAgIG1hcmdpbjogMWVtIDA7XG4gICAgfVxufVxuXG4vLyBDb3JyZWN0cyBmb250IGZhbWlseSBzZXQgb2RkbHkgaW4gSUU2LCBTNC81LCBDaHJvbWVcbi8vIGVuLndpa2lwZWRpYS5vcmcvd2lraS9Vc2VyOkRhdmlkZ290aGJlcmcvVGVzdDU5XG5cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcbiAgICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBzZXJpZjtcbiAgICBAaWYgJGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZSB7XG4gICAgICAgIF9mb250LWZhbWlseTogJ2NvdXJpZXIgbmV3JywgbW9ub3NwYWNlO1xuICAgIH1cbiAgICBmb250LXNpemU6IDFlbTtcbn1cblxuLy8gSW1wcm92ZXMgcmVhZGFiaWxpdHkgb2YgcHJlLWZvcm1hdHRlZCB0ZXh0IGluIGFsbCBicm93c2Vyc1xuXG5wcmUge1xuICAgIHdoaXRlLXNwYWNlOiBwcmU7XG4gICAgd2hpdGUtc3BhY2U6IHByZS13cmFwO1xuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbn1cblxuLy8gU2V0IGNvbnNpc3RlbnQgcXVvdGUgdHlwZXMuXG5cbnEge1xuICAgIHF1b3RlczogXCJcXDIwMUNcIiBcIlxcMjAxRFwiIFwiXFwyMDE4XCIgXCJcXDIwMTlcIjtcbn1cblxuLy8gMS4gQWRkcmVzc2VzIENTUyBxdW90ZXMgbm90IHN1cHBvcnRlZCBpbiBJRTYvN1xuLy8gMi4gQWRkcmVzc2VzIHF1b3RlIHByb3BlcnR5IG5vdCBzdXBwb3J0ZWQgaW4gUzRcblxuLy8gMVxuQGlmICRsZWdhY3lfc3VwcG9ydF9mb3JfaWUge1xuICAgIHEge1xuICAgICAgICBxdW90ZXM6IG5vbmU7XG4gICAgfVxufVxuXG4vLyAyXG5xIHtcbiAgICAmOmJlZm9yZSxcbiAgICAmOmFmdGVyIHtcbiAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgIGNvbnRlbnQ6IG5vbmU7XG4gICAgfVxufVxuXG4vLyBBZGRyZXNzIGluY29uc2lzdGVudCBhbmQgdmFyaWFibGUgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cblxuLyogL3NtYWxsIHtcbiAgICBmb250LXNpemU6IDgwJTtcbn0gKi9cblxuLy8gUHJldmVudHMgc3ViIGFuZCBzdXAgYWZmZWN0aW5nIGxpbmUtaGVpZ2h0IGluIGFsbCBicm93c2Vyc1xuLy8gZ2lzdC5naXRodWIuY29tLzQxMzkzMFxuXG5zdWIsXG5zdXAge1xuICAgIGZvbnQtc2l6ZTogNzUlO1xuICAgIGxpbmUtaGVpZ2h0OiAwO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1cCB7XG4gICAgdG9wOiAtMC41ZW07XG59XG5cbnN1YiB7XG4gICAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gTGlzdHNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIEFkZHJlc3NlcyBtYXJnaW5zIHNldCBkaWZmZXJlbnRseSBpbiBJRTYvN1xuQGlmICRsZWdhY3lfc3VwcG9ydF9mb3JfaWUge1xuICAgIGRsLFxuICAgIG1lbnUsXG4gICAgb2wsXG4gICAgdWwge1xuICAgICAgICAvL21hcmdpbjogMWVtIDA7XG4gICAgfVxufVxuXG5AaWYgJGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZSB7XG4gICAgZGQge1xuICAgICAgICBtYXJnaW46IDAgMCAwIDQwcHg7XG4gICAgfVxufVxuXG4vLyBBZGRyZXNzZXMgcGFkZGluZ3Mgc2V0IGRpZmZlcmVudGx5IGluIElFNi83XG5AaWYgJGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZSB7XG4gICAgbWVudSxcbiAgICBvbCxcbiAgICB1bCB7XG4gICAgICAgIC8vcGFkZGluZzogMCAwIDAgNDBweDtcbiAgICB9XG59XG5cbi8vIENvcnJlY3RzIGxpc3QgaW1hZ2VzIGhhbmRsZWQgaW5jb3JyZWN0bHkgaW4gSUU3XG5cbm5hdiB7XG4gICAgdWwsXG4gICAgb2wge1xuICAgICAgICBAaWYgJGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZSB7XG4gICAgICAgICAgICAvL2xpc3Qtc3R5bGUtaW1hZ2U6IG5vbmU7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBFbWJlZGRlZCBjb250ZW50XG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyAxLiBSZW1vdmVzIGJvcmRlciB3aGVuIGluc2lkZSAnYScgZWxlbWVudCBpbiBJRTYvNy84LzksIEZGM1xuLy8gMi4gSW1wcm92ZXMgaW1hZ2UgcXVhbGl0eSB3aGVuIHNjYWxlZCBpbiBJRTdcbi8vICAgIGNvZGUuZmxpY2tyLmNvbS9ibG9nLzIwMDgvMTEvMTIvb24tdWktcXVhbGl0eS10aGUtbGl0dGxlLXRoaW5ncy1jbGllbnQtc2lkZS1pbWFnZS1yZXNpemluZy9cblxuaW1nIHtcbiAgICBib3JkZXI6IDA7IC8vIDFcbiAgICBAaWYgJGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZSB7XG4gICAgICAgIC1tcy1pbnRlcnBvbGF0aW9uLW1vZGU6IGJpY3ViaWM7IC8vIDJcbiAgICB9XG59XG5cbi8vIENvcnJlY3RzIG92ZXJmbG93IGRpc3BsYXllZCBvZGRseSBpbiBJRTlcblxuc3ZnOm5vdCg6cm9vdCkge1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBGaWd1cmVzXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyBBZGRyZXNzZXMgbWFyZ2luIG5vdCBwcmVzZW50IGluIElFNi83LzgvOSwgUzUsIE8xMVxuXG5maWd1cmUge1xuICAgIG1hcmdpbjogMDtcbn1cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIEZvcm1zXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyBDb3JyZWN0cyBtYXJnaW4gZGlzcGxheWVkIG9kZGx5IGluIElFNi83XG5AaWYgJGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZSB7XG4gICAgZm9ybSB7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICB9XG59XG5cbi8vIERlZmluZSBjb25zaXN0ZW50IGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZ1xuXG5maWVsZHNldCB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgICBtYXJnaW46IDAgMnB4O1xuICAgIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTtcbn1cblxuLy8gMS4gQ29ycmVjdHMgY29sb3Igbm90IGJlaW5nIGluaGVyaXRlZCBpbiBJRTYvNy84Lzlcbi8vIDIuIFJlbW92ZSBwYWRkaW5nIHNvIHBlb3BsZSBhcmVuJ3QgY2F1Z2h0IG91dCBpZiB0aGV5IHplcm8gb3V0IGZpZWxkc2V0cy5cbi8vIDMuIENvcnJlY3RzIHRleHQgbm90IHdyYXBwaW5nIGluIEZGM1xuLy8gNC4gQ29ycmVjdHMgYWxpZ25tZW50IGRpc3BsYXllZCBvZGRseSBpbiBJRTYvN1xuXG5sZWdlbmQge1xuICAgIGJvcmRlcjogMDsgLy8gMVxuICAgIHBhZGRpbmc6IDA7IC8vIDJcbiAgICB3aGl0ZS1zcGFjZTogbm9ybWFsOyAvLyAzXG4gICAgQGlmICRsZWdhY3lfc3VwcG9ydF9mb3JfaWUge1xuICAgICAgICAqbWFyZ2luLWxlZnQ6IC03cHg7IC8vIDRcbiAgICB9XG59XG5cbi8vIDEuIENvcnJlY3QgZm9udCBmYW1pbHkgbm90IGJlaW5nIGluaGVyaXRlZCBpbiBhbGwgYnJvd3NlcnMuXG4vLyAyLiBDb3JyZWN0cyBmb250IHNpemUgbm90IGJlaW5nIGluaGVyaXRlZCBpbiBhbGwgYnJvd3NlcnNcbi8vIDMuIEFkZHJlc3NlcyBtYXJnaW5zIHNldCBkaWZmZXJlbnRseSBpbiBJRTYvNywgRkYzKywgUzUsIENocm9tZVxuLy8gNC4gSW1wcm92ZXMgYXBwZWFyYW5jZSBhbmQgY29uc2lzdGVuY3kgaW4gYWxsIGJyb3dzZXJzXG5cbmJ1dHRvbixcbmlucHV0LFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0OyAvLyAxXG4gICAgZm9udC1zaXplOiAxMDAlOyAvLyAyXG4gICAgbWFyZ2luOiAwOyAvLyAzXG4gICAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyAvLyA0XG4gICAgQGlmICRsZWdhY3lfc3VwcG9ydF9mb3JfaWUge1xuICAgICAgICAqdmVydGljYWwtYWxpZ246IG1pZGRsZTsgLy8gNFxuICAgIH1cbn1cblxuLy8gQWRkcmVzc2VzIEZGMy80IHNldHRpbmcgbGluZS1oZWlnaHQgb24gJ2lucHV0JyB1c2luZyAhaW1wb3J0YW50IGluIHRoZSBVQSBzdHlsZXNoZWV0XG5cbmJ1dHRvbiwgaW5wdXQge1xuICAgIGxpbmUtaGVpZ2h0OiBub3JtYWw7XG59XG5cbi8vIEFkZHJlc3MgaW5jb25zaXN0ZW50IGB0ZXh0LXRyYW5zZm9ybWAgaW5oZXJpdGFuY2UgZm9yIGBidXR0b25gIGFuZCBgc2VsZWN0YC5cbi8vIEFsbCBvdGhlciBmb3JtIGNvbnRyb2wgZWxlbWVudHMgZG8gbm90IGluaGVyaXQgYHRleHQtdHJhbnNmb3JtYCB2YWx1ZXMuXG4vLyBDb3JyZWN0IGBidXR0b25gIHN0eWxlIGluaGVyaXRhbmNlIGluIENocm9tZSwgU2FmYXJpIDUrLCBhbmQgSUUgOCsuXG4vLyBDb3JyZWN0IGBzZWxlY3RgIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3ggNCsgYW5kIE9wZXJhLlxuXG5idXR0b24sXG5zZWxlY3Qge1xuICAgIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vLyAxLiBBdm9pZCB0aGUgV2ViS2l0IGJ1ZyBpbiBBbmRyb2lkIDQuMC4qIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYFxuLy8gICAgYW5kIGB2aWRlb2AgY29udHJvbHNcbi8vIDIuIENvcnJlY3RzIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgJ2lucHV0JyB0eXBlcyBpbiBpT1Ncbi8vIDMuIEltcHJvdmVzIHVzYWJpbGl0eSBhbmQgY29uc2lzdGVuY3kgb2YgY3Vyc29yIHN0eWxlIGJldHdlZW4gaW1hZ2UtdHlwZVxuLy8gICAgJ2lucHV0JyBhbmQgb3RoZXJzXG4vLyA0LiBSZW1vdmVzIGlubmVyIHNwYWNpbmcgaW4gSUU3IHdpdGhvdXQgYWZmZWN0aW5nIG5vcm1hbCB0ZXh0IGlucHV0c1xuLy8gICAgS25vd24gaXNzdWU6IGlubmVyIHNwYWNpbmcgcmVtYWlucyBpbiBJRTZcblxuYnV0dG9uLFxuaHRtbCBpbnB1dFt0eXBlPVwiYnV0dG9uXCJdLCAvLyAxXG5pbnB1dFt0eXBlPVwicmVzZXRcIl0sXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLy8gMlxuICAgIGN1cnNvcjogcG9pbnRlcjsgLy8gM1xuICAgIEBpZiAkbGVnYWN5X3N1cHBvcnRfZm9yX2llIHtcbiAgICAgICAgKm92ZXJmbG93OiB2aXNpYmxlOyAgLy8gNFxuICAgIH1cbn1cblxuLy8gUmUtc2V0IGRlZmF1bHQgY3Vyc29yIGZvciBkaXNhYmxlZCBlbGVtZW50c1xuXG5idXR0b25bZGlzYWJsZWRdLFxuaW5wdXRbZGlzYWJsZWRdIHtcbiAgICBjdXJzb3I6IGRlZmF1bHQ7XG59XG5cbi8vIFJlbW92ZXMgaW5uZXIgcGFkZGluZyBhbmQgYm9yZGVyIGluIEZGMytcbi8vIHd3dy5zaXRlcGVuLmNvbS9ibG9nLzIwMDgvMDUvMTQvdGhlLWRldmlscy1pbi10aGUtZGV0YWlscy1maXhpbmctZG9qb3MtdG9vbGJhci1idXR0b25zL1xuXG5idXR0b24sIGlucHV0IHtcbiAgICAmOjotbW96LWZvY3VzLWlubmVyIHtcbiAgICAgICAgYm9yZGVyOiAwO1xuICAgICAgICBwYWRkaW5nOiAwO1xuICAgIH1cbn1cblxuLy8gMS4gUmVtb3ZlcyBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRTYvNy84Lzlcbi8vIDIuIEltcHJvdmVzIHJlYWRhYmlsaXR5IGFuZCBhbGlnbm1lbnQgaW4gYWxsIGJyb3dzZXJzXG5cbnRleHRhcmVhIHtcbiAgICBvdmVyZmxvdzogYXV0bzsgLy8gMVxuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7IC8vIDJcbn1cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIFRhYmxlc1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gUmVtb3ZlIG1vc3Qgc3BhY2luZyBiZXR3ZWVuIHRhYmxlIGNlbGxzXG5cbnRhYmxlIHtcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICAgIGJvcmRlci1zcGFjaW5nOiAwO1xufVxuXG5pbnB1dCB7XG4gICAgLy8gMS4gQWRkcmVzc2VzIGFwcGVhcmFuY2Ugc2V0IHRvIHNlYXJjaGZpZWxkIGluIFM1LCBDaHJvbWVcbiAgICAvLyAyLiBBZGRyZXNzZXMgYm94LXNpemluZyBzZXQgdG8gYm9yZGVyLWJveCBpbiBTNSwgQ2hyb21lIChpbmNsdWRlIC1tb3ogdG8gZnV0dXJlLXByb29mKVxuICAgICZbdHlwZT1cInNlYXJjaFwiXSB7XG4gICAgICAgIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvLyAxXG4gICAgICAgIC1tb3otYm94LXNpemluZzogY29udGVudC1ib3g7XG4gICAgICAgIC13ZWJraXQtYm94LXNpemluZzogY29udGVudC1ib3g7IC8vIDJcbiAgICAgICAgYm94LXNpemluZzogY29udGVudC1ib3g7XG5cbiAgICBcdC8vIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBzZWFyY2ggY2FuY2VsIGJ1dHRvbiBpbiBTYWZhcmkgNSBhbmQgQ2hyb21lXG4gICAgICAgIC8vIG9uIE9TIFguXG4gICAgICAgICY6Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG4gICAgICAgICY6Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAgICAgICAgICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gMS4gQWRkcmVzcyBib3ggc2l6aW5nIHNldCB0byBgY29udGVudC1ib3hgIGluIElFIDgvOS8xMC5cbiAgICAvLyAyLiBSZW1vdmUgZXhjZXNzIHBhZGRpbmcgaW4gSUUgOC85LzEwLlxuICAgIC8vIDMuIFJlbW92ZXMgZXhjZXNzIHBhZGRpbmcgaW4gSUU3XG4gICAgLy8gICAgS25vd24gaXNzdWU6IGV4Y2VzcyBwYWRkaW5nIHJlbWFpbnMgaW4gSUU2XG4gICAgJlt0eXBlPVwiY2hlY2tib3hcIl0sXG4gICAgJlt0eXBlPVwicmFkaW9cIl0ge1xuICAgIFx0Ym94LXNpemluZzogYm9yZGVyLWJveDsgLy8gMVxuICAgIFx0cGFkZGluZzogMDsgLy8gMlxuICAgIFx0QGlmICRsZWdhY3lfc3VwcG9ydF9mb3JfaWUge1xuICAgICAgICBcdCpoZWlnaHQ6IDEzcHg7IC8vIDNcbiAgICAgICAgXHQqd2lkdGg6IDEzcHg7IC8vIDNcbiAgICBcdH1cbiAgICB9XG59XG4iLCIvLyBWYXJzXG4kYmFzZS1mb250LXNpemU6IDE2cHhcbiRiYXNlLWxpbmUtaGVpZ2h0OiAxLjVcblxuLy8gVHlwZWZhY2VzXG4kc2FuczogTmV3cyBDeWNsZSwgc2Fucy1zZXJpZlxuJHNlcmlmOiBQbGF5ZmFpciBEaXNwbGF5LCBzZXJpZlxuXG4vLyBGb250IHdlaWdodHNcbiR4bGlnaHQ6IDIwMFxuJGxpZ2h0OiAzMDBcbiRub3JtYWw6IDQwMFxuJHNlbWlib2xkOiA2MDBcbiRib2xkOiA3MDBcblxuLy8gTGluZSBoZWlnaHQgZnVuY3Rpb25cbkBmdW5jdGlvbiBsaW5lLWhlaWdodCgpXG4gIEByZXR1cm4gJGJhc2UtZm9udC1zaXplICogJGJhc2UtbGluZS1oZWlnaHRcblxuLy8gVmFyIG11c3QgYmUgc3BlY2lmaWVkIGFmdGVyIHJldHVybmluZyB0aGUgbGluZS1oZWlnaHQgZnVuY3Rpb25cbiRjYWwtbGluZS1oZWlnaHQ6IGxpbmUtaGVpZ2h0KClcblxuLy8gTWl4aW5zXG49dmVydC1tYXJnaW4oJHRvcDogMSwgJGJvdHRvbTogMSlcbiAgbWFyZ2luLXRvcDogJGNhbC1saW5lLWhlaWdodCAqICR0b3BcbiAgbWFyZ2luLWJvdHRvbTogJGNhbC1saW5lLWhlaWdodCAqICRib3R0b21cblxuPXZlcnQtcGFkZGluZygkdG9wOiAxLCAkYm90dG9tOiAxKVxuICBwYWRkaW5nLXRvcDogJGNhbC1saW5lLWhlaWdodCAqICR0b3BcbiAgcGFkZGluZy1ib3R0b206ICRjYWwtbGluZS1oZWlnaHQgKiAkYm90dG9tXG5cblxuaHRtbFxuICBmb250LXNpemU6ICRiYXNlLWZvbnQtc2l6ZVxuICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlXG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkXG5cbmJvZHlcbiAgY29sb3I6ICRjaGFyY29hbFxuICBsaW5lLWhlaWdodDogMS41XG4gIGZvbnQtZmFtaWx5OiAkc2Fuc1xuICAvL2JhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0cmFuc3BhcmVudCwgdHJhbnNwYXJlbnQgbGluZS1oZWlnaHQoKSAtIDFweCwgJGdyZWVuIDFweCAsIHRyYW5zcGFyZW50KVxuICBiYWNrZ3JvdW5kLXNpemU6IGF1dG8gbGluZS1oZWlnaHQoKVxuICBtYXJnaW46IDBcblxuXG4vL1tjbGFzcyo9J19faGVhZGxpbmUnXVxuXG5cbi8vIFVzZWQgaW4gYXJ0aWNsZSBoZWFkZXJzIGluIHRoZSAuTWFpbiBjb2x1bW5zXG5bY2xhc3MqPSdfX2hlYWRpbmcnXVxuICBjb2xvcjogJGdyZWVuXG4gIGZvbnQtZmFtaWx5OiAkc2VyaWZcbiAgZm9udC1zaXplOiAyLjVyZW1cbiAgZm9udC13ZWlnaHQ6ICRub3JtYWxcbiAgbGluZS1oZWlnaHQ6IDFcbiAgbWFyZ2luLWJvdHRvbTogMnJlbVxuXG49c3RhbmRhcmQtaGVhZGluZygpXG4gIGNvbG9yOiAkZ3JlZW5cbiAgZm9udC1mYW1pbHk6ICRzZXJpZlxuICBmb250LXNpemU6IDJyZW1cbiAgZm9udC13ZWlnaHQ6ICRub3JtYWxcbiAgbGluZS1oZWlnaHQ6IDFcblxuXG4vLyBGb3VuZCBpbiB0aGUgTWFpbiBCbG9nIFBvc3RzXG49bWlub3ItaGVhZGluZygpXG4gIGNvbG9yOiAkbmlnaHRncmVlblxuICBmb250LWZhbWlseTogJHNlcmlmXG4gIGZvbnQtc2l6ZTogMS4yNXJlbVxuICBmb250LXdlaWdodDogJGJvbGRcbiAgbGluZS1oZWlnaHQ6IDFcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZVxuICArdmVydC1tYXJnaW4oMS41LDApXG5cblxuLy8gVXNlZCBpbiBhcnRpY2xlIGhlYWRlcnMgaW4gdGhlIC5NYWluIGNvbHVtbnNcbj1zbWFsbC1oZWFkaW5nKClcbiAgY29sb3I6ICRncmVlblxuICBmb250LWZhbWlseTogJHNlcmlmXG4gIGZvbnQtc2l6ZTogMS4zNzVyZW1cbiAgZm9udC13ZWlnaHQ6ICRub3JtYWxcbiAgbGluZS1oZWlnaHQ6IDFcblxuXG4vLyBGb3VuZCBpbiB0aGUgTWFpbiBCbG9nIFBvc3RzXG49YmxvY2txdW90ZSgpXG4gIGNvbG9yOiAkZ3JlZW5cbiAgZm9udC1mYW1pbHk6ICRzZXJpZlxuICBmb250LXNpemU6IDEuNXJlbVxuICBmb250LXN0eWxlOiBpdGFsaWNcbiAgZm9udC13ZWlnaHQ6ICRib2xkXG4gICt2ZXJ0LW1hcmdpbigxLjUsMS41KVxuXG5cbi8vaW5wdXRbdHlwZT1cInN1Ym1pdFwiXVxuXG5bY2xhc3MqPV9fYnV0dG9uXSxcbmlucHV0W3R5cGU9XCJidXR0b25cIl0sXG5pbnB1dFt0eXBlPVwicmVzZXRcIl1cbiAgYm9yZGVyOiAxcHggc29saWQgJGdyZWVuXG4gIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICBmb250LWZhbWlseTogJHNlcmlmXG4gIGZvbnQtc2l6ZTogMS4ycmVtXG4gIGZvbnQtc3R5bGU6IGl0YWxpY1xuICB0ZXh0LWFsaWduOiBjZW50ZXJcbiAgcGFkZGluZzogLjc1cmVtIDNyZW1cbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lXG4gIC8qSXRlbXMgZm9yIHRyYW5zaXRpb25cbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnRcbiAgY29sb3I6ICRncmVlblxuICAvKlRyYW5zaXRpb24gc2V0dGluZ3NcbiAgdHJhbnNpdGlvbjogYWxsIC4ycyBlYXNlXG5cbiAgJjpob3ZlclxuICAgIC8qVGhlc2Ugd2lsbCB0cmFuc2l0aW9uIG9uIGhvdmVyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGdyZWVuXG4gICAgY29sb3I6ICR3aGl0ZVxuXG5cbi8vIGluIHByb2dyZXNzXG5cbi8vIE1peGluc1xuPWJ1dHRvbigkYmFja2dyb3VuZCwgJGNvbG9yLCAkYm9yZGVyLWNvbG9yKVxuICBib3JkZXI6IDFweCBzb2xpZCAkYm9yZGVyLWNvbG9yXG4gIGZvbnQtZmFtaWx5OiAkc2VyaWZcbiAgZm9udC1zaXplOiAxLjJyZW1cbiAgZm9udC1zdHlsZTogaXRhbGljXG4gIHBhZGRpbmc6IC41cmVtIDFyZW1cbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lXG4gIC8qSXRlbXMgZm9yIHRyYW5zaXRpb25cbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnRcbiAgY29sb3I6ICRjb2xvclxuICAvKlRyYW5zaXRpb24gc2V0dGluZ3NcbiAgdHJhbnNpdGlvbjogYWxsIC4ycyBlYXNlXG4gICY6aG92ZXJcbiAgICAvKlRoZXNlIHdpbGwgdHJhbnNpdGlvbiBvbiBob3ZlclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRncmVlblxuICAgIGNvbG9yOiAkY29sb3JcbiIsIi8vIFNpdGUgY29sb3IgcGFsZXR0ZVxuJGdyZWVuOiAjMjY3ZTY0XG4kbmlnaHRncmVlbjogIzQ1NTY1MlxuJHNsYXRlOiAjZWNlZWU2XG5cbi8vIDUwIHNoYWRlcyBvZiBncmF5XG4kd2hpdGU6ICNmZmZcbiRzdGVhbTogI2Y4ZjhmOFxuJGNsb3VkOiAjZTVlNmU3XG4kZ3JhcGhpdGU6ICNjY2NcbiRzdG9uZTogIzdmN2U3ZVxuJGxlYWQ6ICM2ZTZiNmNcbiRjaGFyY29hbDogIzMzM1xuJGJsYWNrOiAjMDAwXG5cblxuJG1vYmlsZS1uYXYtYnRuOiAkc2xhdGVcblxuLy9Cb3JkZXIgQ29sb3JcbiRib3JkZXJDb2xvcjogJGdyYXBoaXRlXG5cbi8vIFNpdGUgYmFzZSB0ZXh0IGNvbG9yc1xuJHNpdGUtdGV4dC1jb2xvcjogJGNoYXJjb2FsXG4kc2l0ZS10ZXh0LWNvbG9yLWxpbms6ICRncmVlblxuJHNpdGUtdGV4dC1jb2xvci1saW5rLWhvdmVyOiAjNDU1NjUyXG5cblxuLy8gRm9vdGVyIGNvbG9yc1xuJGZvb3Rlci10ZXh0OiAkbmlnaHRncmVlblxuJGZvb3Rlci10ZXh0LWxpbms6ICRuaWdodGdyZWVuXG4kZm9vdGVyLXRleHQtbGluay1ob3ZlcjogJGdyZWVuXG4iLCIvLyBodHRwOi8vY3NzbW9qby5jb20vbGF0ZXN0X25ld19jbGVhcmZpeF9zb19mYXIvXG4uY2xlYXJmaXg6YWZ0ZXJcbiAgY29udGVudDogXCJcIlxuICBkaXNwbGF5OiB0YWJsZVxuICBjbGVhcjogYm90aFxuIiwiLy8gUkVTUE9OU0lWRSBJTUFHRVNcbmltZywgaWZyYW1lLCBlbWJlZFxuICB3aWR0aDogMTAwJVxuIiwiLmNvbnRhaW5lclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmXG4gIGJvcmRlci1sZWZ0OiAxcHggc29saWQgJGJvcmRlckNvbG9yXG4gIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICRib3JkZXJDb2xvclxuICBtYXJnaW46IDAgYXV0b1xuICBtYXgtd2lkdGg6IDEyMDBweFxuXG5cbltjbGFzcyo9J2NvbC0nXVxuICBkaXNwbGF5OiB0YWJsZS1jZWxsXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGVcblxuICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgIHRleHQtYWxpZ246IGNlbnRlclxuXG4vLzIgY29sdW1ucyB3aWRlXG4vLyBUaGlzIGlzIHVzZWQgaW4gdGhlIGZvb3RlciBmb3IgbmFycm93ZXIgY29sdW1ucyBvZiBsaW5rc1xuLmNvbC0yLTEyXG4gIHdpZHRoOiAyLzEyICogMTAwJVxuXG4gICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgd2lkdGg6IDEwMCVcblxuLy8zIGNvbHVtbnMgd2lkZVxuLy8gVGhpcyBpcyB1c2VkIGluIHRoZSBmb290ZXIgZm9yIGZhdHRlciBjb2x1bW5zIG9mIGxvbmdlci10aXRsZWQgbGlua3Ncbi5jb2wtMy0xMlxuICB3aWR0aDogMy8xMiAqIDEwMCVcblxuICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgIHdpZHRoOiAxMDAlXG5cbi8vIDQgY29sdW1ucyB3aWRlLlxuLy8gVGhpcyBpcyB1c2VkIGluIHRoZSBMZWFkZXJzaGlwIHBhZ2UuXG4uY29sLTQtMTJcbiAgd2lkdGg6IDQvMTIgKiAxMDAlXG5cbiAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICB3aWR0aDogMTAwJVxuXG5cbi8vIDUgY29sdW1ucyB3aWRlLlxuLy8gVGhpcyBpcyB1c2VkIGluIG1vc3Qgb2YgdGhlIGJhbm5lcnMuXG4vLyBJdCBpcyBhbHNvIHVzZWQgaW4gdGhlIE1haW4gbW9kdWxlIGFyZWEgdGhhdCBpbmNsdWRlcyB0aGUgc2lkZWJhci5cbi5jb2wtNS0xMlxuICB3aWR0aDogNS8xMiAqIDEwMCVcblxuICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgIHdpZHRoOiAxMDAlXG5cblxuLy8gNiBjb2x1bW5zIHdpZGUuXG4vLyBUaGlzIHdpbGwgc3BhbiBoYWxmIHRoZSBhdmFpbGFibGUgd2lkdGhcbi8vIFRoZSBDYXJkIE1vZHVsZSBvbiB0aGUgaG9tZXBhZ2UgdXNlcyB0aGlzXG4uY29sLTYtMTJcbiAgd2lkdGg6IDYvMTIgKiAxMDAlXG5cbiAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICB3aWR0aDogMTAwJVxuXG5cbi8vIDcgY29sdW1ucyB3aWRlLlxuLy8gVGhpcyBpcyB1c2VkIGluIG1vc3Qgb2YgdGhlIGJhbm5lcnMuXG4vLyBJdCBpcyBhbHNvIHVzZWQgaW4gdGhlIE1haW4gbW9kdWxlIGFyZWEgdGhhdCBpbmNsdWRlcyB0aGUgc2lkZWJhci5cbi8vIFtjbGFzcyo9Jy0tY29sLTctMTInXVxuLmNvbC03LTEyXG4gIHdpZHRoOiA3LzEyICogMTAwJVxuXG4gICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgd2lkdGg6IDEwMCVcblxuXG4vLyA4IGNvbHVtbnMgd2lkZS5cbi8vIFRoaXMgaXMgdXNlZCBpbiB0aGUgTGVhZGVyc2hpcCBwYWdlLlxuLmNvbC04LTEyXG4gIHdpZHRoOiA4LzEyICogMTAwJVxuXG4gICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgd2lkdGg6IDEwMCVcblxuXG4uY29sLTktMTJcbiAgd2lkdGg6IDkvMTIgKiAxMDAlXG5cbiAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICB3aWR0aDogMTAwJVxuXG5cbi5jb2wtMTAtMTJcbiAgd2lkdGg6IDEwLzEyICogMTAwJVxuXG4gICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgd2lkdGg6IDEwMCVcblxuLmNvbC0xMS0xMlxuICB3aWR0aDogMTEvMTIgKiAxMDAlXG5cbiAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICB3aWR0aDogMTAwJVxuIiwiLy9cblx0IF8gICAgICAgICAgICBfICAgICAgICAgICBfICAgICAgICAgICAgICAgICAgICAgICAgICAgXyBfXG5cdChfKSAgICAgICAgICB8IHwgICAgICAgICB8IHwgICAgICAgICAgICAgICAgICAgICAgICAgfCAoXylcblx0IF8gXyBfXyAgIF9fX3wgfF8gICBfICBfX3wgfCBfX18gICBfIF9fIF9fXyAgIF9fXyAgX198IHxfICBfXyBfXG5cdHwgfCAnXyBcXCAvIF9ffCB8IHwgfCB8LyBfYCB8LyBfIFxcIHwgJ18gYCBfIFxcIC8gXyBcXC8gX2AgfCB8LyBfYCB8XG5cdHwgfCB8IHwgfCAoX198IHwgfF98IHwgKF98IHwgIF9fLyB8IHwgfCB8IHwgfCAgX18vIChffCB8IHwgKF98IHxcblx0fF98X3wgfF98XFxfX198X3xcXF9fLF98XFxfXyxffFxcX19ffCB8X3wgfF98IHxffFxcX19ffFxcX18sX3xffFxcX18sX3xcblxuXHRTaW1wbGUsIGVsZWdhbnQgYW5kIG1haW50YWluYWJsZSBtZWRpYSBxdWVyaWVzIGluIFNhc3NcblxuXHRodHRwOi8vaW5jbHVkZS1tZWRpYS5jb21cblxuICBBdXRob3I6IEVkdWFyZG8gQm91Y2FzIDxtYWlsQGVkdWFyZG9ib3VjYXMuY29tPlxuXG5cbiAgQ3JlYXRlcyBhIGxpc3Qgb2YgZ2xvYmFsIGJyZWFrcG9pbnRzXG5cbiAgQGF1dGhvciBFZHVhcmRvIEJvdWNhc1xuXG4gIEBleGFtcGxlIHNjc3MgLSBDcmVhdGVzIGEgc2luZ2xlIGJyZWFrcG9pbnQgd2l0aCB0aGUgbGFiZWwgYHBob25lYFxuICAkYnJlYWtwb2ludHM6ICgncGhvbmUnOiAzMjBweCk7XG5cbiRicmVha3BvaW50czogKFwicGhvbmVcIjogMzIwcHgsIFwidGFibGV0XCI6IDc2OHB4LCBcImRlc2t0b3BcIjogMTAyM3B4KSAhZGVmYXVsdFxuXG4vL1xuICBDcmVhdGVzIGEgbGlzdCBvZiBzdGF0aWMgZXhwcmVzc2lvbnMgb3IgbWVkaWEgdHlwZXNcblxuICBAYXV0aG9yIEVkdWFyZG8gQm91Y2FzXG5cbiAgQGV4YW1wbGUgc2NzcyAtIENyZWF0ZXMgYSBzaW5nbGUgbWVkaWEgdHlwZSAoc2NyZWVuKVxuICAgJG1lZGlhLWV4cHJlc3Npb25zOiAoJ3NjcmVlbic6ICdzY3JlZW4nKTtcblxuICBAZXhhbXBsZSBzY3NzIC0gQ3JlYXRlcyBhIHN0YXRpYyBleHByZXNzaW9uIHdpdGggbG9naWNhbCBkaXNqdW5jdGlvbiAoT1Igb3BlcmF0b3IpXG4gICAkbWVkaWEtZXhwcmVzc2lvbnM6IChcbiAgXHRcdCdyZXRpbmEyeCc6IChcbiAgXHRcdFx0Jygtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpJyxcbiAgXHRcdFx0JyhtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSdcbiAgXHRcdClcbiAgXHQpO1xuXG4kbWVkaWEtZXhwcmVzc2lvbnM6IChcInNjcmVlblwiOiBcInNjcmVlblwiLCBcInByaW50XCI6IFwicHJpbnRcIiwgXCJoYW5kaGVsZFwiOiBcImhhbmRoZWxkXCIsIFwicmV0aW5hMnhcIjogKFwiKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMilcIiwgXCIobWluLXJlc29sdXRpb246IDE5MmRwaSlcIiksIFwicmV0aW5hM3hcIjogKFwiKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMylcIiwgXCIobWluLXJlc29sdXRpb246IDM1MGRwaSlcIikpICFkZWZhdWx0XG5cbi8vXG4gIERlZmluZXMgYSBudW1iZXIgdG8gYmUgYWRkZWQgb3Igc3VidHJhY3RlZCBmcm9tIGVhY2ggdW5pdCB3aGVuIGRlY2xhcmluZyBicmVha3BvaW50cyB3aXRoIGV4Y2x1c2l2ZSBpbnRlcnZhbHNcblxuICBAYXV0aG9yIEVkdWFyZG8gQm91Y2FzXG5cbiAgQGV4YW1wbGUgc2NzcyAtIEludGVydmFsIGZvciBwaXhlbHMgaXMgZGVmaW5lZCBhcyBgMWAgYnkgZGVmYXVsdFxuICAgQGluY2x1ZGUgbWVkaWEoXCI+MTI4cHhcIikge31cblxuICBHZW5lcmF0ZXM6XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMjlweCkge31cblxuICBAZXhhbXBsZSBzY3NzIC0gSW50ZXJ2YWwgZm9yIGVtcyBpcyBkZWZpbmVkIGFzIGAwLjAxYCBieSBkZWZhdWx0XG4gICBAaW5jbHVkZSBtZWRpYShcIj4yMGVtXCIpIHt9XG5cbiAgR2VuZXJhdGVzOlxuICBAbWVkaWEgKG1pbi13aWR0aDogMjAuMDFlbSkge31cblxuICBAZXhhbXBsZSBzY3NzIC0gSW50ZXJ2YWwgZm9yIHJlbXMgaXMgZGVmaW5lZCBhcyBgMC4xYCBieSBkZWZhdWx0LCB0byBiZSB1c2VkIHdpdGggYGZvbnQtc2l6ZTogNjIuNSU7YFxuICAgQGluY2x1ZGUgbWVkaWEoXCI+Mi4wcmVtXCIpIHt9XG5cbiAgR2VuZXJhdGVzOlxuICBAbWVkaWEgKG1pbi13aWR0aDogMi4xcmVtKSB7fVxuXG4kdW5pdC1pbnRlcnZhbHM6IChcInB4XCI6IDEsIFwiZW1cIjogMC4wMSwgXCJyZW1cIjogMC4xKSAhZGVmYXVsdFxuXG4vL1xuICBHZW5lcmF0ZXMgYSBtZWRpYSBxdWVyeSBiYXNlZCBvbiBhIGxpc3Qgb2YgY29uZGl0aW9uc1xuXG4gIEBhdXRob3IgRWR1YXJkbyBCb3VjYXNcblxuICBAcGFyYW0ge0xpc3R9ICAgJGNvbmRpdGlvbnMgIC0gTWVkaWEgcXVlcnkgY29uZGl0aW9uc1xuXG4gIEBleGFtcGxlIHNjc3MgLSBXaXRoIGEgc2luZ2xlIHNldCBicmVha3BvaW50XG4gICBAaW5jbHVkZSBtZWRpYShcIj5waG9uZVwiKSB7IH1cblxuICBAZXhhbXBsZSBzY3NzIC0gV2l0aCB0d28gc2V0IGJyZWFrcG9pbnRzXG4gICBAaW5jbHVkZSBtZWRpYShcIj5waG9uZVwiLCBcIjw9dGFibGV0XCIpIHsgfVxuXG4gIEBleGFtcGxlIHNjc3MgLSBXaXRoIGN1c3RvbSB2YWx1ZXNcbiAgIEBpbmNsdWRlIG1lZGlhKFwiPj0zNThweFwiLCBcIjw4NTBweFwiKSB7IH1cblxuICBAZXhhbXBsZSBzY3NzIC0gV2l0aCBzZXQgYnJlYWtwb2ludHMgd2l0aCBjdXN0b20gdmFsdWVzXG4gICBAaW5jbHVkZSBtZWRpYShcIj5kZXNrdG9wXCIsIFwiPD0xMzUwcHhcIikgeyB9XG5cbiAgQGV4YW1wbGUgc2NzcyAtIFdpdGggYSBzdGF0aWMgZXhwcmVzc2lvblxuICAgQGluY2x1ZGUgbWVkaWEoXCJyZXRpbmEyeFwiKSB7IH1cblxuICBAZXhhbXBsZSBzY3NzIC0gTWl4aW5nIGV2ZXJ5dGhpbmdcbiAgIEBpbmNsdWRlIG1lZGlhKFwiPj0zNTBweFwiLCBcIjx0YWJsZXRcIiwgXCJyZXRpbmEzeFwiKSB7IH1cblxuXG49bWVkaWEoJGNvbmRpdGlvbnMuLi4pXG4gIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggbGVuZ3RoKCRjb25kaXRpb25zKVxuICAgICRjb25kaXRpb25zOiBzZXQtbnRoKCRjb25kaXRpb25zLCAkaSwgcGFyc2UtZXhwcmVzc2lvbihudGgoJGNvbmRpdGlvbnMsICRpKSkpXG4gICRicmFuY2hlczogZ2V0LXF1ZXJ5LWJyYW5jaGVzKCRjb25kaXRpb25zKVxuICAkcXVlcnk6IFwiXCJcbiAgQGVhY2ggJGJyYW5jaCBpbiAkYnJhbmNoZXNcbiAgICBAaWYgc3RyLWxlbmd0aCgkcXVlcnkpICE9IDBcbiAgICAgICRxdWVyeTogJHF1ZXJ5ICsgXCIsIFwiXG4gICAgJHF1ZXJ5OiAkcXVlcnkgKyAkYnJhbmNoXG4gIEBtZWRpYSAjeyRxdWVyeX1cbiAgICBAY29udGVudFxuXG4vL1xuICBSZWFkcyBhIGxpc3Qgb2YgbWVkaWEgcXVlcnkgZXhwcmVzc2lvbnMgYW5kIHNlcGFyYXRlcyBsb2dpY2FsIGRpc2p1bmN0aW9ucyBpbnRvIGRpZmZlcmVudCBicmFuY2hlc1xuXG4gIEBhdXRob3IgRWR1YXJkbyBCb3VjYXNcbiAgQHBhcmFtIHtMaXN0fSAgICRleHByZXNzaW9ucyAgLSBsaXN0IG9mIGV4cHJlc3Npb25zXG4gIEB0aHJvd3MgYCRleHByZXNzaW9uYCBpcyBub3QgYSB2YWxpZCBleHByZXNzaW9uXG5cbiAgQHJldHVybiB7TGlzdCB8IE51bGx9XG5cblxuQGZ1bmN0aW9uIGdldC1xdWVyeS1icmFuY2hlcygkZXhwcmVzc2lvbnMpXG4gICRyZXN1bHQ6IFwiXCJcbiAgJGhhcy1ncm91cHM6IGZhbHNlXG4gIC8vIEdldHRpbmcgaW5pdGlhbCBzbmFwc2hvdCBhbmQgbG9va2luZyBmb3IgZ3JvdXBzXG4gIEBlYWNoICRleHByZXNzaW9uIGluICRleHByZXNzaW9uc1xuICAgIEBpZiBzdHItbGVuZ3RoKCRyZXN1bHQpICE9IDBcbiAgICAgICRyZXN1bHQ6ICRyZXN1bHQgKyBcIiBhbmQgXCJcbiAgICBAaWYgdHlwZS1vZigkZXhwcmVzc2lvbikgPT0gXCJzdHJpbmdcIlxuICAgICAgJHJlc3VsdDogJHJlc3VsdCArICRleHByZXNzaW9uXG4gICAgQGVsc2UgaWYgdHlwZS1vZigkZXhwcmVzc2lvbikgPT0gXCJsaXN0XCJcbiAgICAgICRyZXN1bHQ6ICRyZXN1bHQgKyBudGgoJGV4cHJlc3Npb24sIDEpXG4gICAgICAkaGFzLWdyb3VwczogdHJ1ZVxuICAgIEBlbHNlXG4gICAgICBAd2FybiBcIiN7JGV4cHJlc3Npb259IGlzIG5vdCBhIHZhbGlkIGV4cHJlc3Npb24uXCJcbiAgLy8gSWYgd2UgaGF2ZSBncm91cHMsIHdlIGhhdmUgdG8gY3JlYXRlIGFsbCBwb3NzaWJsZSBjb21iaW5hdGlvbnNcbiAgQGlmICRoYXMtZ3JvdXBzXG4gICAgQGVhY2ggJGV4cHJlc3Npb24gaW4gJGV4cHJlc3Npb25zXG4gICAgICBAaWYgdHlwZS1vZigkZXhwcmVzc2lvbikgPT0gXCJsaXN0XCJcbiAgICAgICAgJGZpcnN0OiBudGgoJGV4cHJlc3Npb24sIDEpXG4gICAgICAgIEBlYWNoICRtZW1iZXIgaW4gJGV4cHJlc3Npb25cbiAgICAgICAgICBAaWYgJG1lbWJlciAhPSAkZmlyc3RcbiAgICAgICAgICAgIEBlYWNoICRwYXJ0aWFsIGluICRyZXN1bHRcbiAgICAgICAgICAgICAgJHJlc3VsdDogam9pbigkcmVzdWx0LCBzdHItcmVwbGFjZS1maXJzdCgkZmlyc3QsICRtZW1iZXIsICRwYXJ0aWFsKSlcbiAgQHJldHVybiAkcmVzdWx0XG5cbi8vXG4gIFBhcnNlcyBhIHN0cmluZyB0byBmb3JtIGEgbWVkaWEgcXVlcnkgZXhwcmVzc2lvblxuXG4gIEBhdXRob3IgRWR1YXJkbyBCb3VjYXNcblxuICBAcGFyYW0ge1N0cmluZ30gICAkZXhwcmVzc2lvbiAgLSBleHByZXNzaW9uIChpbiBzdHJpbmcpXG4gIEB0aHJvd3MgRXhwcmVzc2lvbiB3aXRoIHR5cGUgYHR5cGUtb2YoJGV4cHJlc3Npb24pYCBkZXRlY3RlZCwgc3RyaW5nIGV4cGVjdGVkXG4gIEB0aHJvd3MgYCRleHByZXNzaW9uYCBpcyBtaXNzaW5nIGFuIG9wZXJhdG9yXG4gIEB0aHJvd3MgVW5rbm93biB1bml0OiBgJHVuaXRgXG5cbiAgQHJldHVybiB7U3RyaW5nIHwgTnVsbH1cblxuXG5AZnVuY3Rpb24gcGFyc2UtZXhwcmVzc2lvbigkZXhwcmVzc2lvbilcbiAgJG9wZXJhdG9yOiBcIlwiXG4gICR2YWx1ZTogXCJcIlxuICAkZWxlbWVudDogXCJcIlxuICAkcmVzdWx0OiBcIlwiXG4gICRpcy13aWR0aDogdHJ1ZVxuICBAaWYgdHlwZS1vZigkZXhwcmVzc2lvbikgIT0gXCJzdHJpbmdcIlxuICAgIEB3YXJuIFwiRXhwcmVzc2lvbiB3aXRoIHR5cGUgYCN7dHlwZS1vZigkZXhwcmVzc2lvbil9YCBkZXRlY3RlZCwgc3RyaW5nIGV4cGVjdGVkLlwiXG4gIC8vIFNlcGFyYXRpbmcgdGhlIG9wZXJhdG9yIGZyb20gdGhlIHJlc3Qgb2YgdGhlIGV4cHJlc3Npb25cbiAgQGlmIHN0ci1zbGljZSgkZXhwcmVzc2lvbiwgMiwgMikgPT0gXCI9XCJcbiAgICAkb3BlcmF0b3I6IHN0ci1zbGljZSgkZXhwcmVzc2lvbiwgMSwgMilcbiAgICAkdmFsdWU6IHN0ci1zbGljZSgkZXhwcmVzc2lvbiwgMylcbiAgQGVsc2VcbiAgICAkb3BlcmF0b3I6IHN0ci1zbGljZSgkZXhwcmVzc2lvbiwgMSwgMSlcbiAgICAkdmFsdWU6IHN0ci1zbGljZSgkZXhwcmVzc2lvbiwgMilcbiAgLy8gQ2hlY2tpbmcgd2hhdCB0eXBlIG9mIGV4cHJlc3Npb24gd2VyZSBkZWFsaW5nIHdpdGhcbiAgQGlmIG1hcC1oYXMta2V5KCRicmVha3BvaW50cywgJHZhbHVlKVxuICAgICRyZXN1bHQ6IG1hcC1nZXQoJGJyZWFrcG9pbnRzLCAkdmFsdWUpXG4gIEBlbHNlIGlmIG1hcC1oYXMta2V5KCRtZWRpYS1leHByZXNzaW9ucywgJGV4cHJlc3Npb24pXG4gICAgJHJlc3VsdDogbWFwLWdldCgkbWVkaWEtZXhwcmVzc2lvbnMsICRleHByZXNzaW9uKVxuICAgICRpcy13aWR0aDogZmFsc2VcbiAgQGVsc2VcbiAgICAkcmVzdWx0OiB0by1udW1iZXIoJHZhbHVlKVxuICBAaWYgJGlzLXdpZHRoXG4gICAgJHVuaXQ6IHVuaXQoJHJlc3VsdClcbiAgICAkaW50ZXJ2YWw6IDBcbiAgICBAaWYgbWFwLWhhcy1rZXkoJHVuaXQtaW50ZXJ2YWxzLCAkdW5pdClcbiAgICAgICRpbnRlcnZhbDogbWFwLWdldCgkdW5pdC1pbnRlcnZhbHMsICR1bml0KVxuICAgIEBlbHNlXG4gICAgICBAd2FybiBcIlVua25vd24gdW5pdDogI3skdW5pdH1cIlxuICAgIEBpZiAkb3BlcmF0b3IgPT0gXCI+XCJcbiAgICAgICRlbGVtZW50OiBcIihtaW4td2lkdGg6ICN7JHJlc3VsdCArICRpbnRlcnZhbH0pXCJcbiAgICBAZWxzZSBpZiAkb3BlcmF0b3IgPT0gXCI8XCJcbiAgICAgICRlbGVtZW50OiBcIihtYXgtd2lkdGg6ICN7JHJlc3VsdCAtICRpbnRlcnZhbH0pXCJcbiAgICBAZWxzZSBpZiAkb3BlcmF0b3IgPT0gXCI+PVwiXG4gICAgICAkZWxlbWVudDogXCIobWluLXdpZHRoOiAjeyRyZXN1bHR9KVwiXG4gICAgQGVsc2UgaWYgJG9wZXJhdG9yID09IFwiPD1cIlxuICAgICAgJGVsZW1lbnQ6IFwiKG1heC13aWR0aDogI3skcmVzdWx0fSlcIlxuICAgIEBlbHNlXG4gICAgICBAd2FybiBcIiN7JGV4cHJlc3Npb259IGlzIG1pc3NpbmcgYW4gb3BlcmF0b3IuXCJcbiAgQGVsc2VcbiAgICAkZWxlbWVudDogJHJlc3VsdFxuICBAcmV0dXJuICRlbGVtZW50XG5cbi8vXG4gIFJlcGxhY2VzIHRoZSBmaXJzdCBvY2N1cmVuY2Ugb2YgdGhlIHN0cmluZyB3aXRoIHRoZSByZXBsYWNlbWVudCBzdHJpbmdcblxuICBAYXV0aG9yIEVkdWFyZG8gQm91Y2FzXG5cbiAgQHBhcmFtIHtTdHJpbmd9ICAgJHNlYXJjaCAgLSBUaGUgdmFsdWUgYmVpbmcgc2VhcmNoZWQgZm9yXG4gIEBwYXJhbSB7U3RyaW5nfSAgICRyZXBsYWNlICAtIFRoZSByZXBsYWNlbWVudCBzdHJpbmdcbiAgQHBhcmFtIHtTdHJpbmd9ICAgJHN1YmplY3QgIC0gVGhlIHN0cmluZyBiZWluZyByZXBsYWNlZCBvblxuXG4gIEByZXR1cm4ge1N0cmluZyB8IE51bGx9XG5cblxuQGZ1bmN0aW9uIHN0ci1yZXBsYWNlLWZpcnN0KCRzZWFyY2gsICRyZXBsYWNlLCAkc3ViamVjdClcbiAgJHNlYXJjaC1zdGFydDogc3RyLWluZGV4KCRzdWJqZWN0LCAkc2VhcmNoKVxuICBAaWYgJHNlYXJjaC1zdGFydCA9PSBudWxsXG4gICAgQHJldHVybiAkc3ViamVjdFxuICAkcmVzdWx0OiBzdHItc2xpY2UoJHN1YmplY3QsIDAsICRzZWFyY2gtc3RhcnQgLSAxKVxuICAkcmVzdWx0OiAkcmVzdWx0ICsgJHJlcGxhY2VcbiAgJHJlc3VsdDogJHJlc3VsdCArIHN0ci1zbGljZSgkc3ViamVjdCwgJHNlYXJjaC1zdGFydCArIHN0ci1sZW5ndGgoJHNlYXJjaCkpXG4gIEByZXR1cm4gJHJlc3VsdFxuXG4vL1xuICBDYXN0cyBhIG51bWJlciB0byBhIHN0cmluZ1xuXG4gIEBhdXRob3IgSHVnbyBHaXJhdWRlbFxuXG4gIEBwYXJhbSB7U3RyaW5nfSAgICRzdHJpbmcgIC0gTnVtYmVyIHRvIGJlIHBhcnNlZFxuXG4gIEByZXR1cm4ge0xpc3QgfCBOdWxsfVxuXG5AZnVuY3Rpb24gdG8tbnVtYmVyKCRzdHJpbmcpXG4gIC8vIE1hdHJpY2VzXG4gICRzdHJpbmdzOiBcIjBcIiBcIjFcIiBcIjJcIiBcIjNcIiBcIjRcIiBcIjVcIiBcIjZcIiBcIjdcIiBcIjhcIiBcIjlcIlxuICAkbnVtYmVyczogMCAxIDIgMyA0IDUgNiA3IDggOVxuICAvLyBSZXN1bHRcbiAgJHJlc3VsdDogMFxuICAkZGl2aWRlcjogMFxuICAkbWludXM6IGZhbHNlXG4gIC8vIExvb3BpbmcgdGhyb3VnaCBhbGwgY2hhcmFjdGVyc1xuICBAZm9yICRpIGZyb20gMSB0aHJvdWdoIHN0ci1sZW5ndGgoJHN0cmluZylcbiAgICAkY2hhcmFjdGVyOiBzdHItc2xpY2UoJHN0cmluZywgJGksICRpKVxuICAgICRpbmRleDogaW5kZXgoJHN0cmluZ3MsICRjaGFyYWN0ZXIpXG4gICAgQGlmICRjaGFyYWN0ZXIgPT0gXCItXCJcbiAgICAgICRtaW51czogdHJ1ZVxuICAgIEBlbHNlIGlmICRjaGFyYWN0ZXIgPT0gXCIuXCJcbiAgICAgICRkaXZpZGVyOiAxXG4gICAgQGVsc2VcbiAgICAgIEBpZiB0eXBlLW9mKCRpbmRleCkgIT0gXCJudW1iZXJcIlxuICAgICAgICAkcmVzdWx0OiBpZigkbWludXMsICRyZXN1bHQgKiAtMSwgJHJlc3VsdClcbiAgICAgICAgQHJldHVybiBfbGVuZ3RoKCRyZXN1bHQsIHN0ci1zbGljZSgkc3RyaW5nLCAkaSkpXG4gICAgICAkbnVtYmVyOiBudGgoJG51bWJlcnMsICRpbmRleClcbiAgICAgIEBpZiAkZGl2aWRlciA9PSAwXG4gICAgICAgICRyZXN1bHQ6ICRyZXN1bHQgKiAxMFxuICAgICAgQGVsc2VcbiAgICAgICAgLy8gTW92ZSB0aGUgZGVjaW1hbCBkb3QgdG8gdGhlIGxlZnRcbiAgICAgICAgJGRpdmlkZXI6ICRkaXZpZGVyICogMTBcbiAgICAgICAgJG51bWJlcjogJG51bWJlciAvICRkaXZpZGVyXG4gICAgICAkcmVzdWx0OiAkcmVzdWx0ICsgJG51bWJlclxuICBAcmV0dXJuIGlmKCRtaW51cywgJHJlc3VsdCAqIC0xLCAkcmVzdWx0KVxuXG5AZnVuY3Rpb24gX2xlbmd0aCgkbnVtYmVyLCAkdW5pdClcbiAgJHN0cmluZ3M6IFwicHhcIiBcImNtXCIgXCJtbVwiIFwiJVwiIFwiY2hcIiBcInBpY2FcIiBcImluXCIgXCJlbVwiIFwicmVtXCIgXCJwdFwiIFwicGNcIiBcImV4XCIgXCJ2d1wiIFwidmhcIiBcInZtaW5cIiBcInZtYXhcIlxuICAkdW5pdHM6IDFweCAxY20gMW1tIDElIDFjaCAxcGljYSAxaW4gMWVtIDFyZW0gMXB0IDFwYyAxZXggMXZ3IDF2aCAxdm1pbiAxdm1heFxuICAkaW5kZXg6IGluZGV4KCRzdHJpbmdzLCAkdW5pdClcbiAgQGlmIHR5cGUtb2YoJGluZGV4KSAhPSBcIm51bWJlclwiXG4gICAgQHdhcm4gXCJVbmtub3duIHVuaXQgYCN7JHVuaXR9YC5cIlxuICAgIEByZXR1cm4gZmFsc2VcbiAgQHJldHVybiAkbnVtYmVyICogbnRoKCR1bml0cywgJGluZGV4KVxuIiwiKlxuICBtYXJnaW46IDBcbiAgcGFkZGluZzogMFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94XG5cbiAgJjo6YWZ0ZXIsICY6OmJlZm9yZVxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3hcblxuYm9keVxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2xhdGVcbiAgcGFkZGluZzogMFxuXG5hXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZVxuXG4vL1Jlc2V0IGZsZXhib3ggc2V0dGluZ3Mgd2hlbiByZXNwb25kaW5nIGJlbG93IGRlc2t0b3Bcbj1yZXNwb25zaXZlLXN0YWNrXG4gICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgZmxleC1mbG93OiBjb2x1bW5cbiIsIi8vIFRoZSB0YWJsZXMgc3RhcnQgdG8gbG9vayBmdWdseSBhdCBhcm91bmQgNzAwcHgsIHNvIGxldCdzIHN0YXJ0IHJlc3BvbmRpbmcgdGhlcmVcbiR0YWJsZS1icmVhazogXCI8PTcwMHB4XCJcblxudGFibGVcblx0bWFyZ2luOiAwIDAgMS41ZW1cblx0d2lkdGg6IDEwMCVcblxudHJcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRjbG91ZFxuXG4gICttZWRpYSgkdGFibGUtYnJlYWspXG4gICAgbWFyZ2luLXRvcDogMCAhaW1wb3J0YW50O1xuXG4gICAgJjpmaXJzdC1jaGlsZFxuICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICRjbG91ZFxuXG4gICY6bnRoLWNoaWxkKGV2ZW4pXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHN0ZWFtXG5cbnRkXG4gIHZlcnRpY2FsLWFsaWduOiB0b3BcbiAgcGFkZGluZzogMTBweCA1cHhcblxuICArbWVkaWEoJHRhYmxlLWJyZWFrKVxuICAgIG1hcmdpbi10b3A6IDAgIWltcG9ydGFudDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmVcbiAgICBwYWRkaW5nLWxlZnQ6IDQwJVxuXG4gICAgJjpiZWZvcmVcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZVxuICAgICAgdG9wOiA2cHhcbiAgICAgIGxlZnQ6IDZweFxuICAgICAgd2lkdGg6IDQwJVxuICAgICAgcGFkZGluZy1yaWdodDogMTBweFxuICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcFxuICAgICAgZm9udC13ZWlnaHQ6ICRzZW1pYm9sZFxuXG5cbiAgICAmOm50aC1vZi10eXBlKDEpXG4gICAgICAmOmJlZm9yZVxuICAgICAgICBjb250ZW50OiBcIkNpdHk6IFwiXG4gICAgJjpudGgtb2YtdHlwZSgyKVxuICAgICAgJjpiZWZvcmVcbiAgICAgICAgY29udGVudDogXCJBZGRyZXNzOiBcIlxuICAgICY6bnRoLW9mLXR5cGUoMylcbiAgICAgICY6YmVmb3JlXG4gICAgICAgIGNvbnRlbnQ6IFwiUGhvbmU6IFwiXG5cbnRoZWFkXG4gIGJhY2tncm91bmQtY29sb3I6ICRjbG91ZFxuXG4gIHRyXG4gICAgLy9IaWRlIHRoZSB0aGVhZCBpbmZvcm1hdGlvbiBpbiBhbiBhY2Nlc3NpYmxlIHdheVxuXG4gICAgK21lZGlhKCR0YWJsZS1icmVhaylcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZVxuICAgICAgdG9wOiAtOTk5OXB4XG4gICAgICBsZWZ0OiAtOTk5OXB4XG5cbiAgdGhcbiAgICBmb250LXdlaWdodDogJHNlbWlib2xkXG4gICAgdGV4dC1hbGlnbjogbGVmdFxuICAgIHBhZGRpbmc6IDVweFxuXG50YWJsZSwgdGhlYWQsIHRib2R5LCB0aCwgdGQsIHRyXG4gICttZWRpYSgkdGFibGUtYnJlYWspXG4gICAgZGlzcGxheTogYmxvY2tcbiIsIi5uYXYtbWlub3JcbiAgZGlzcGxheTogYmxvY2tcbiAgdGV4dC1hbGlnbjogcmlnaHRcblxuICAmX19jb250YWluZXJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGVcbiAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICRib3JkZXJDb2xvclxuICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICRib3JkZXJDb2xvclxuICAgIG1hcmdpbjogMCBhdXRvXG4gICAgcGFkZGluZy1yaWdodDogMS41cmVtXG4gICAgcGFkZGluZy10b3A6IDFyZW1cbiAgICBtYXgtd2lkdGg6IDEyMDBweFxuXG4gICAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICAgIC8vZGlzcGxheTogbm9uZVxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyXG5cbiAgbGlcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcblxuICAgICY6YWZ0ZXJcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgICAgY29udGVudDogJyB8ICdcbiAgICAgIGNvbG9yOiAkZ3JlZW5cbiAgICAgIG1hcmdpbjogMCAycHhcblxuICAgICY6bnRoLWNoaWxkKDMpXG5cbiAgICAgICY6YWZ0ZXJcbiAgICAgICAgY29udGVudDogJyAnXG5cbiAgJl9fbGlua1xuICAgIGNvbG9yOiAkY2hhcmNvYWxcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgICBwYWRkaW5nOiAwIC41cmVtXG5cbiAgICAmOmhvdmVyXG4gICAgICBjb2xvcjogJGdyZWVuXG4iLCIvLyBoZWFkZXIgc2l6ZVxuJGhlYWRlci1oZWlnaHQtUzogNTBweFxuJGhlYWRlci1oZWlnaHQtTDogODBweFxuXG4vLyBOYXZpZ2F0aW9uIHNpemVcbiRuYXYtd2lkdGgtUzogMjYwcHhcblxuLy8gU2VhcmNoIHNpemVcbiRzZWFyY2gtaGVpZ2h0LVM6IDUwcHhcbiRzZWFyY2gtaGVpZ2h0LUw6IDEyMHB4XG5cbi8vIHotaW5kZXhcbiRiZWxvdy1jb250ZW50OiAxXG4kY29udGVudDogMlxuJGFib3ZlLWNvbnRlbnQ6IDNcblxuLy9cbiAgXCJwaG9uZVwiOiAzMjBweCxcbiAgXCJ0YWJsZXRcIjogNzY4cHgsXG4gIFwiZGVza3RvcFwiOiAxMDI0cHgpXG5cblxuLy8gYnJlYWtwb2ludHNcbiAgJFM6IDQ4MHB4XG4gICRNOiA3NjhweFxuICAkTDogMTAyNHB4XG4gICRtYXhMOiAkTCAtIDFweFxuXG5cbi8vXG4gICtNUShtYXhMKVxuICArbWVkaWEoXCI8ZGVza3RvcFwiKVxuXG4vL1xuICArTVEoTClcbiAgK21lZGlhKFwiPmRlc2t0b3BcIilcblxuXG4vLyBzdXBlciBsaWdodCBncmlkIC0gaXQgd29ya3Mgd2l0aCB0aGUgLmNkLWNvbnRhaW5lciBjbGFzcyBpbnNpZGUgc3R5bGUuc2Nzc1xuXG49Y29sdW1uKCRwZXJjZW50YWdlLCAkZmxvYXQtZGlyZWN0aW9uOiBsZWZ0KVxuICB3aWR0aDogMTAwJSAqICRwZXJjZW50YWdlXG4gIGZsb2F0OiAkZmxvYXQtZGlyZWN0aW9uXG5cbj1jbGVhcmZpeFxuICAmOmFmdGVyXG4gICAgY29udGVudDogXCJcIlxuICAgIGRpc3BsYXk6IHRhYmxlXG4gICAgY2xlYXI6IGJvdGhcblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqXG4gKlByaW1hcnkgc3R5bGVcbiAqXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmJvZHlcbiAgK21lZGlhKFwiPGRlc2t0b3BcIilcbiAgICAvLyBsYXlvdXQgbWl4aW5zIGluc2lkZSBwYXJ0aWFscyA+IF9sYXlvdXQuc2Nzc1xuICAgICYubmF2LW9uLWxlZnQub3ZlcmZsb3ctaGlkZGVuXG4gICAgICBvdmVyZmxvdzogaGlkZGVuXG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi1tcy1jbGVhclxuICAvKiByZW1vdmVzIGNsb3NlIGljb24gLSBJRVxuICBkaXNwbGF5OiBub25lXG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24sXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtcmVzdWx0cy1idXR0b24sXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1yZXN1bHRzLWRlY29yYXRpb25cbiAgZGlzcGxheTogbm9uZVxuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICpcbiAqTWFpbiBjb21wb25lbnRzXG4gKlxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4uY2QtbWFpbi1jb250ZW50LFxuLmNkLW1haW4taGVhZGVyXG4gIC8qIEZvcmNlIEhhcmR3YXJlIEFjY2VsZXJhdGlvbiBpbiBXZWJLaXRcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApXG4gIHdpbGwtY2hhbmdlOiB0cmFuc2Zvcm1cblxuICB1bFxuICAgIGxpc3Qtc3R5bGU6IG5vbmVcblxuLmNkLW1haW4tY29udGVudFxuICBwb3NpdGlvbjogcmVsYXRpdmVcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3NcblxuICArbWVkaWEoXCI8ZGVza3RvcFwiKVxuICAgICYubmF2LWlzLXZpc2libGVcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtJG5hdi13aWR0aC1TKVxuXG4gICAgLm5hdi1vbi1sZWZ0ICYubmF2LWlzLXZpc2libGVcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgkbmF2LXdpZHRoLVMpXG5cbi5jZC1tYWluLWhlYWRlclxuICBmb250LWZhbWlseTogJHNlcmlmXG4gIHBvc2l0aW9uOiByZWxhdGl2ZVxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zc1xuXG4gICttZWRpYShcIjxkZXNrdG9wXCIpXG4gICAgJi5uYXYtaXMtdmlzaWJsZVxuICAgICAgLy90cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLSRuYXYtd2lkdGgtUylcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKVxuXG4gICAgLm5hdi1vbi1sZWZ0ICYubmF2LWlzLXZpc2libGVcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgkbmF2LXdpZHRoLVMpXG5cbi5jZC1tYWluLWNvbnRlbnRcbiAgLy9DSEFOR0VEXG4gIC8vYmFja2dyb3VuZDogJGNsb3VkXG4gIG1pbi1oZWlnaHQ6IDEwMHZoXG4gIHotaW5kZXg6ICRjb250ZW50XG5cbi5jZC1tYWluLWhlYWRlclxuICBoZWlnaHQ6ICRoZWFkZXItaGVpZ2h0LVNcbiAgYmFja2dyb3VuZDogJHdoaXRlXG4gIHotaW5kZXg6ICRhYm92ZS1jb250ZW50XG5cbiAgLy9DSEFOR0VEXG4gIC8vYm94LXNoYWRvdzogMCAxcHggNXB4IHJnYmEoMTAwLDEwMCwxMDAsIC41KVxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJGNsb3VkXG5cbiAgLm5hdi1pcy1maXhlZCAmXG4gICAgLyogYWRkIC5uYXYtaXMtZml4ZWQgY2xhc3MgdG8gYm9keSBpZiB5b3Ugd2FudCBhIGZpeGVkIG5hdmlnYXRpb24gb24gPiAxMDI0cHhcbiAgICBwb3NpdGlvbjogZml4ZWRcbiAgICB0b3A6IDBcbiAgICBsZWZ0OiAwXG4gICAgd2lkdGg6IDEwMCVcblxuICArbWVkaWEoXCI+ZGVza3RvcFwiKVxuICAgIGhlaWdodDogJGhlYWRlci1oZWlnaHQtTFxuICAgICtjbGVhcmZpeFxuXG4uY2QtbG9nb1xuICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgdG9wOiAxMnB4XG4gIGxlZnQ6IDUlXG5cbiAgaW1nXG4gICAgZGlzcGxheTogYmxvY2tcblxuICArbWVkaWEoXCI8ZGVza3RvcFwiKVxuICAgIC5uYXYtb24tbGVmdCAmXG4gICAgICBsZWZ0OiBhdXRvXG4gICAgICByaWdodDogNSVcblxuICArbWVkaWEoXCI+ZGVza3RvcFwiKVxuICAgIHRvcDogMjZweFxuICAgIGxlZnQ6IDRlbVxuXG4uY2QtaGVhZGVyLWJ1dHRvbnNcbiAgcG9zaXRpb246IGFic29sdXRlXG4gIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICB0b3A6IDNweFxuICByaWdodDogNSVcblxuICBsaVxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuXG4gICttZWRpYShcIjxkZXNrdG9wXCIpXG4gICAgLm5hdi1vbi1sZWZ0ICZcbiAgICAgIHJpZ2h0OiBhdXRvXG4gICAgICBsZWZ0OiA1JVxuICAgICAgbGlcbiAgICAgICAgZmxvYXQ6IHJpZ2h0XG5cbiAgK21lZGlhKFwiPmRlc2t0b3BcIilcbiAgICB0b3A6IDFyZW1cbiAgICByaWdodDogMXJlbVxuXG4uY2Qtc2VhcmNoLXRyaWdnZXIsXG4uY2QtbmF2LXRyaWdnZXJcbiAgcG9zaXRpb246IHJlbGF0aXZlXG4gIGRpc3BsYXk6IGJsb2NrXG4gIHdpZHRoOiA0NHB4XG4gIGhlaWdodDogNDRweFxuICBvdmVyZmxvdzogaGlkZGVuXG4gIHdoaXRlLXNwYWNlOiBub3dyYXBcbiAgLyogaGlkZSB0ZXh0XG4gIGNvbG9yOiB0cmFuc3BhcmVudFxuICB6LWluZGV4OiAkYWJvdmUtY29udGVudFxuXG4uY2Qtc2VhcmNoLXRyaWdnZXJcbiAgJjo6YmVmb3JlLCAmOjphZnRlclxuICAgIC8qIHNlYXJjaCBpY29uXG4gICAgY29udGVudDogJydcbiAgICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3NcbiAgICAvKiBGb3JjZSBIYXJkd2FyZSBBY2NlbGVyYXRpb24gaW4gV2ViS2l0XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApXG4gICAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuXG5cbiAgJjo6YmVmb3JlXG4gICAgLyogbGVuc1xuICAgIHRvcDogMTFweFxuICAgIGxlZnQ6IDExcHhcbiAgICB3aWR0aDogMThweFxuICAgIGhlaWdodDogMThweFxuICAgIGJvcmRlci1yYWRpdXM6IDUwJVxuICAgIGJvcmRlcjogM3B4IHNvbGlkICRuaWdodGdyZWVuXG5cbiAgJjo6YWZ0ZXJcbiAgICAvKiBoYW5kbGVcbiAgICBoZWlnaHQ6IDNweFxuICAgIHdpZHRoOiA4cHhcbiAgICBiYWNrZ3JvdW5kOiAkbmlnaHRncmVlblxuICAgIGJvdHRvbTogMTRweFxuICAgIHJpZ2h0OiAxMXB4XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpXG4gIHNwYW5cbiAgICAvKiBjb250YWluZXIgZm9yIHRoZSBYIGljb25cbiAgICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgICBoZWlnaHQ6IDEwMCVcbiAgICB3aWR0aDogMTAwJVxuICAgIHRvcDogMFxuICAgIGxlZnQ6IDBcbiAgc3Bhbjo6YmVmb3JlLCBzcGFuOjphZnRlclxuICAgIC8qIGNsb3NlIGljb25cbiAgICBjb250ZW50OiAnJ1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZVxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgIGhlaWdodDogM3B4XG4gICAgd2lkdGg6IDIycHhcbiAgICB0b3A6IDUwJVxuICAgIG1hcmdpbi10b3A6IC0ycHhcbiAgICBsZWZ0OiA1MCVcbiAgICBtYXJnaW4tbGVmdDogLTExcHhcbiAgICBiYWNrZ3JvdW5kOiAkbmlnaHRncmVlblxuICAgIG9wYWNpdHk6IDBcbiAgICAvKiBGb3JjZSBIYXJkd2FyZSBBY2NlbGVyYXRpb24gaW4gV2ViS2l0XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApXG4gICAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuXG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzLCB0cmFuc2Zvcm0gMC4zc1xuXG4gIHNwYW46OmJlZm9yZVxuICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKVxuXG4gIHNwYW46OmFmdGVyXG4gICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKVxuXG4gICYuc2VhcmNoLWlzLXZpc2libGVcbiAgICAmOjpiZWZvcmUsICY6OmFmdGVyXG4gICAgICAvKiBoaWRlIHNlYXJjaCBpY29uXG4gICAgICBvcGFjaXR5OiAwXG4gICAgc3Bhbjo6YmVmb3JlLCBzcGFuOjphZnRlclxuICAgICAgLyogc2hvdyBjbG9zZSBpY29uXG4gICAgICBvcGFjaXR5OiAxXG4gICAgc3Bhbjo6YmVmb3JlXG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgxMzVkZWcpXG4gICAgc3Bhbjo6YWZ0ZXJcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKVxuXG4uY2QtbmF2LXRyaWdnZXJcbiAgc3Bhbiwgc3Bhbjo6YmVmb3JlLCBzcGFuOjphZnRlclxuICAgIC8qIGhhbWJ1cmdlciBpY29uIGluIENTU1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZVxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgIGhlaWdodDogM3B4XG4gICAgd2lkdGg6IDI0cHhcbiAgICBiYWNrZ3JvdW5kOiAkbmlnaHRncmVlblxuICBzcGFuXG4gICAgLyogbGluZSBpbiB0aGUgY2VudGVyXG4gICAgcG9zaXRpb246IGFic29sdXRlXG4gICAgdG9wOiA1MCVcbiAgICByaWdodDogMTBweFxuICAgIG1hcmdpbi10b3A6IC0ycHhcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDAuM3MgMC4zc1xuICBzcGFuOjpiZWZvcmUsIHNwYW46OmFmdGVyXG4gICAgLyogb3RoZXIgMiBsaW5lc1xuICAgIGNvbnRlbnQ6ICcnXG4gICAgcmlnaHQ6IDBcbiAgICAvKiBGb3JjZSBIYXJkd2FyZSBBY2NlbGVyYXRpb24gaW4gV2ViS2l0XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApXG4gICAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuXG4gICAgdHJhbnNmb3JtLW9yaWdpbjogMCUgNTAlXG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MgMC4zc1xuICBzcGFuOjpiZWZvcmVcbiAgICAvKiBtZW51IGljb24gdG9wIGxpbmVcbiAgICB0b3A6IC02cHhcbiAgc3Bhbjo6YWZ0ZXJcbiAgICAvKiBtZW51IGljb24gYm90dG9tIGxpbmVcbiAgICB0b3A6IDZweFxuICAmLm5hdi1pcy12aXNpYmxlXG4gICAgc3BhblxuICAgICAgLyogaGlkZSBsaW5lIGluIHRoZSBjZW50ZXJcbiAgICAgIGJhY2tncm91bmQ6IHJnYmEoJG5pZ2h0Z3JlZW4sIDApXG4gICAgc3Bhbjo6YmVmb3JlLCBzcGFuOjphZnRlclxuICAgICAgLyoga2VlcCB2aXNpYmxlIG90aGVyIDIgbGluZXNcbiAgICAgIGJhY2tncm91bmQ6IHJnYmEoJG5pZ2h0Z3JlZW4sIDEpXG4gICAgc3Bhbjo6YmVmb3JlXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNHB4KSB0cmFuc2xhdGVZKC0zcHgpIHJvdGF0ZSg0NWRlZylcbiAgICBzcGFuOjphZnRlclxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDRweCkgdHJhbnNsYXRlWSgycHgpIHJvdGF0ZSgtNDVkZWcpXG4gICttZWRpYShcIj5kZXNrdG9wXCIpXG4gICAgZGlzcGxheTogbm9uZVxuXG5cbi5jZC1wcmltYXJ5LW5hdixcbi5jZC1wcmltYXJ5LW5hdiB1bFxuICBwb3NpdGlvbjogZml4ZWRcbiAgdG9wOiAwXG4gIHJpZ2h0OiAwXG4gIGhlaWdodDogMTAwJVxuICB3aWR0aDogJG5hdi13aWR0aC1TXG4gIGJhY2tncm91bmQ6ICRuaWdodGdyZWVuXG4gIG92ZXJmbG93OiBhdXRvXG4gIC13ZWJraXQtb3ZlcmZsb3ctc2Nyb2xsaW5nOiB0b3VjaFxuICB6LWluZGV4OiAkYmVsb3ctY29udGVudFxuXG4gIC8qIEZvcmNlIEhhcmR3YXJlIEFjY2VsZXJhdGlvbiBpbiBXZWJLaXRcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKVxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zc1xuXG4gIGFcbiAgICBkaXNwbGF5OiBibG9ja1xuICAgIGZvbnQtc2l6ZTogMS4ycmVtXG4gICAgaGVpZ2h0OiA1MHB4XG4gICAgbGluZS1oZWlnaHQ6IDUwcHhcbiAgICBwYWRkaW5nOiAwIDIwcHhcbiAgICBjb2xvcjogJHdoaXRlXG4gICAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWRcbiAgICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlXG4gICAgb3ZlcmZsb3c6IGhpZGRlblxuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzXG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcFxuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCBsaWdodGVuKCRuaWdodGdyZWVuLCA1JSlcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVooMClcbiAgICB3aWxsLWNoYW5nZTogdHJhbnNmb3JtLCBvcGFjaXR5XG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MsIG9wYWNpdHkgMC4zc1xuXG4gICYuaXMtaGlkZGVuXG4gICAgLyogc2Vjb25kYXJ5IG5hdmlnYXRpb25zIGhpZGRlbiBieSBkZWZhdWx0XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwMCUpXG5cbiAgJi5tb3Zlcy1vdXQgPiBsaSA+IGFcbiAgICAvKiBwdXNoIHRoZSBuYXZpZ2F0aW9uIGl0ZW1zIHRvIHRoZSBsZWZ0IC0gYW5kIGxvd2VyIGRvd24gb3BhY2l0eSAtIHdoZW4gc2Vjb25kYXJ5IG5hdiBzbGlkZXMgaW5cbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMCUpXG4gICAgb3BhY2l0eTogMFxuXG4rbWVkaWEoXCI8ZGVza3RvcFwiKVxuICAubmF2LW9uLWxlZnQgLmNkLXByaW1hcnktbmF2LFxuICAubmF2LW9uLWxlZnQgLmNkLXByaW1hcnktbmF2IHVsXG4gICAgcmlnaHQ6IGF1dG9cbiAgICBsZWZ0OiAwXG5cblxuLmNkLXByaW1hcnktbmF2XG4gIC5zZWUtYWxsIGFcbiAgICAvKiBkaWZmZXJlbnQgc3R5bGUgZm9yIHRoZSBTZWUgYWxsIGJ1dHRvbiBvbiBtb2JpbGUgYW5kIHRhYmxldFxuICAgIGNvbG9yOiAkZ3JlZW5cblxuICAuY2QtbmF2LWdhbGxlcnkgLmNkLW5hdi1pdGVtLFxuICAuY2QtbmF2LWljb25zIC5jZC1uYXYtaXRlbVxuICAgIC8qIGl0ZW1zIHdpdGggcGljdHVyZSAob3IgaWNvbikgYW5kIHRpdGxlXG4gICAgaGVpZ2h0OiA4MHB4XG4gICAgbGluZS1oZWlnaHQ6IDgwcHhcblxuICAgIGgzXG4gICAgICBvdmVyZmxvdzogaGlkZGVuXG4gICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpc1xuXG4gIC5jZC1uYXYtZ2FsbGVyeSAuY2QtbmF2LWl0ZW1cbiAgICAvL3BhZGRpbmctbGVmdDogOTBweFxuXG4gICAgaW1nXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgICAgIGRpc3BsYXk6IGJsb2NrXG4gICAgICBoZWlnaHQ6IDQwcHhcbiAgICAgIHdpZHRoOiBhdXRvXG4gICAgICBsZWZ0OiAyMHB4XG4gICAgICB0b3A6IDUwJVxuICAgICAgbWFyZ2luLXRvcDogLTIwcHhcblxuICAgICAgK21lZGlhKFwiPGRlc2t0b3BcIilcbiAgICAgICAgZGlzcGxheTogbm9uZVxuXG4gIC5jZC1uYXYtaWNvbnMgLmNkLW5hdi1pdGVtXG4gICAgcGFkZGluZy1sZWZ0OiA3NXB4XG5cbiAgICBwXG4gICAgICBjb2xvcjogJG5pZ2h0Z3JlZW5cbiAgICAgIGZvbnQtc2l6ZTogMS4zcmVtXG4gICAgICAvKiBoaWRlIGRlc2NyaXB0aW9uIG9uIHNtYWxsIGRldmljZXNcbiAgICAgIGRpc3BsYXk6IG5vbmVcblxuICAgICY6OmJlZm9yZVxuICAgICAgLyogaXRlbSBpY29uXG4gICAgICBjb250ZW50OiAnJ1xuICAgICAgZGlzcGxheTogYmxvY2tcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZVxuICAgICAgbGVmdDogMjBweFxuICAgICAgdG9wOiA1MCVcbiAgICAgIG1hcmdpbi10b3A6IC0yMHB4XG4gICAgICB3aWR0aDogNDBweFxuICAgICAgaGVpZ2h0OiA0MHB4XG4gICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0XG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyXG4gICAgICBiYWNrZ3JvdW5kLXNpemU6IDQwcHggNDBweFxuXG4gICAgJi5pdGVtLTE6OmJlZm9yZVxuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiL2ltYWdlcy9saW5lLWljb24tMS5zdmdcIilcbiAgICAmLml0ZW0tMjo6YmVmb3JlXG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIvaW1hZ2VzL2xpbmUtaWNvbi0yLnN2Z1wiKVxuICAgICYuaXRlbS0zOjpiZWZvcmVcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi9pbWFnZXMvbGluZS1pY29uLTMuc3ZnXCIpXG4gICAgJi5pdGVtLTQ6OmJlZm9yZVxuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiL2ltYWdlcy9saW5lLWljb24tNC5zdmdcIilcbiAgICAmLml0ZW0tNTo6YmVmb3JlXG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIvaW1hZ2VzL2xpbmUtaWNvbi01LnN2Z1wiKVxuICAgICYuaXRlbS02OjpiZWZvcmVcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi9pbWFnZXMvbGluZS1pY29uLTYuc3ZnXCIpXG4gICAgJi5pdGVtLTc6OmJlZm9yZVxuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiL2ltYWdlcy9saW5lLWljb24tNy5zdmdcIilcbiAgICAmLml0ZW0tODo6YmVmb3JlXG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIvaW1hZ2VzL2xpbmUtaWNvbi04LnN2Z1wiKVxuXG4gICttZWRpYShcIjxkZXNrdG9wXCIpXG4gICAgLyogYnkgZGVmYXVsdCAuY2QtcHJpbWFyeS1uYXYgaXMgaGlkZGVuIC0gdHJpY2sgZm9yIGlPUyBkZXZpY2VzIHdoZXJlIHlvdSBjYW4gc2VlIHRoZSBuYXZpZ2F0aW9uIGlmIHlvdSBwdWxsIGRvd25cbiAgICB2aXNpYmlsaXR5OiBoaWRkZW5cbiAgICB0cmFuc2l0aW9uOiB2aXNpYmlsaXR5IDBzIDAuM3NcbiAgICAmLm5hdi1pcy12aXNpYmxlXG4gICAgICB2aXNpYmlsaXR5OiB2aXNpYmxlXG4gICAgICB0cmFuc2l0aW9uOiB2aXNpYmlsaXR5IDBzIDBzXG5cbittZWRpYShcIj5kZXNrdG9wXCIpXG5cbiAgLmNkLXByaW1hcnktbmF2XG4gICAgcG9zaXRpb246IHN0YXRpY1xuICAgIHBhZGRpbmc6IDAgNTBweCAwIDBcbiAgICBoZWlnaHQ6IGF1dG9cbiAgICB3aWR0aDogMTAwJVxuICAgIC8vZmxvYXQ6IHJpZ2h0XG4gICAgb3ZlcmZsb3c6IHZpc2libGVcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudFxuICAgIHRleHQtYWxpZ246IGNlbnRlclxuXG4gICAgK2NsZWFyZml4XG5cbiAgICAmLm1vdmVzLW91dCA+IGxpID4gYVxuICAgICAgLyogcmVzZXQgbW9iaWxlIHN0eWxlXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMClcbiAgICAgIG9wYWNpdHk6IDFcblxuICAgIHVsXG4gICAgICBwb3NpdGlvbjogc3RhdGljXG4gICAgICBoZWlnaHQ6IGF1dG9cbiAgICAgIHdpZHRoOiBhdXRvXG4gICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudFxuICAgICAgb3ZlcmZsb3c6IHZpc2libGVcbiAgICAgIHRleHQtYWxpZ246IGxlZnRcbiAgICAgIHotaW5kZXg6ICRhYm92ZS1jb250ZW50XG5cbiAgICAgICYuaXMtaGlkZGVuXG4gICAgICAgIC8qIHJlc2V0IG1vYmlsZSBzdHlsZVxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMClcblxuICAgICAgJi5tb3Zlcy1vdXQgPiBsaSA+IGFcbiAgICAgICAgLyogcmVzZXQgbW9iaWxlIHN0eWxlXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKVxuICAgICAgICBvcGFjaXR5OiAxXG5cbiAgICAvL1RvcCBuYXYgaXRlbXNcbiAgICA+IGxpXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgICAgIC8vZmxvYXQ6IGxlZnRcbiAgICAgIG1hcmdpbi1sZWZ0OiAuNXJlbVxuXG4gICAgPiBsaSA+IGFcbiAgICAgIC8qIG1haW4gbmF2aWdhdGlvbiBidXR0b25zIHN0eWxlXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmVcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgICAgaGVpZ2h0OiAkaGVhZGVyLWhlaWdodC1MXG4gICAgICBsaW5lLWhlaWdodDogJGhlYWRlci1oZWlnaHQtTFxuICAgICAgcGFkZGluZzogMFxuICAgICAgY29sb3I6ICRuaWdodGdyZWVuXG4gICAgICBvdmVyZmxvdzogdmlzaWJsZVxuICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZVxuICAgICAgdHJhbnNpdGlvbjogY29sb3IgMC4zcywgYm94LXNoYWRvdyAwLjNzXG5cbiAgICAgICY6aG92ZXJcbiAgICAgICAgY29sb3I6ICRncmVlblxuICAgICAgJi5zZWxlY3RlZFxuICAgICAgICBjb2xvcjogJGdyZWVuXG4gICAgICAgIGJveC1zaGFkb3c6IGluc2V0IDAgLTJweCAwICRncmVlblxuXG4gICAgLmdvLWJhY2ssIC5zZWUtYWxsXG4gICAgICBkaXNwbGF5OiBub25lXG5cbiAgICAuY2Qtc2Vjb25kYXJ5LW5hdixcbiAgICAuY2QtbmF2LWdhbGxlcnksXG4gICAgLmNkLW5hdi1pY29uc1xuICAgICAgLyogZHJvcGRvd24gbWVudSBzdHlsZVxuICAgICAgcG9zaXRpb246IGFic29sdXRlXG4gICAgICB0b3A6ICRoZWFkZXItaGVpZ2h0LUxcbiAgICAgIC8vd2lkdGg6IDEwMHZ3XG4gICAgICB3aWR0aDogMTAwJVxuICAgICAgYmFja2dyb3VuZDogJHdoaXRlXG4gICAgICAvL0NIQU5HRURcbiAgICAgIC8vcGFkZGluZzogNDhweCA2NHB4IDEzMHB4XG4gICAgICBwYWRkaW5nOiAycmVtXG4gICAgICBib3gtc2hhZG93OiBpbnNldCAwIDFweCAwICRjbG91ZCwgMCAzcHggNnB4IHJnYmEoIzAwMCwgMC4wNSlcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKVxuICAgICAgK2NsZWFyZml4XG5cbiAgICAgIHRyYW5zaXRpb246IG9wYWNpdHkgLjNzIDBzLCB2aXNpYmlsaXR5IDBzIDBzXG5cbiAgICAgICYuaXMtaGlkZGVuXG4gICAgICAgIG9wYWNpdHk6IDBcbiAgICAgICAgdmlzaWJpbGl0eTogaGlkZGVuXG4gICAgICAgIHRyYW5zaXRpb246IG9wYWNpdHkgLjNzIDBzLCB2aXNpYmlsaXR5IDBzIC4zc1xuXG4gICAgICA+IC5zZWUtYWxsXG4gICAgICAgIC8qIHRoaXMgaXMgdGhlIEJJRyBTZWUgYWxsIGJ1dHRvbiBhdCB0aGUgYm90dG9tIG9mIHRoZSBkcm9wZG93biBtZW51XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZVxuICAgICAgICBsZWZ0OiAwXG4gICAgICAgIGJvdHRvbTogMFxuICAgICAgICBoZWlnaHQ6IDgwcHhcbiAgICAgICAgd2lkdGg6IDEwMCVcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlblxuICAgICAgICAvKiByZXNldCBzb21lIGluaGVyaXRlZCBzdHlsZVxuICAgICAgICBtYXJnaW46IDBcbiAgICAgICAgcGFkZGluZzogMFxuXG4gICAgICAgIGFcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgICAgICAgICB3aWR0aDogMTAwJVxuICAgICAgICAgIGhlaWdodDogMTAwJVxuICAgICAgICAgIHRvcDogMFxuICAgICAgICAgIGxlZnQ6IDBcbiAgICAgICAgICBmb250LXNpemU6IDIuMnJlbVxuICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkXG4gICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyXG4gICAgICAgICAgbGluZS1oZWlnaHQ6IDgwcHhcbiAgICAgICAgICBib3JkZXItdG9wOiAxcHggc29saWQgJGNsb3VkXG4gICAgICAgICAgLyogcmVzZXQgc29tZSBpbmhlcml0ZWQgc3R5bGVcbiAgICAgICAgICBib3JkZXItYm90dG9tOiBub25lXG4gICAgICAgICAgbWFyZ2luOiAwXG4gICAgICAgICAgcGFkZGluZzogMFxuICAgICAgICAgIHRyYW5zaXRpb246IGNvbG9yIDAuMnMsIGJhY2tncm91bmQgMC4ycywgYm9yZGVyIDAuMnNcblxuICAgICAgICAgICY6aG92ZXJcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICRuaWdodGdyZWVuXG4gICAgICAgICAgICBib3JkZXItY29sb3I6ICRuaWdodGdyZWVuXG4gICAgICAgICAgICBjb2xvcjogJHdoaXRlXG5cbiAgICAuY2Qtc2Vjb25kYXJ5LW5hdlxuXG4gICAgICA+IGxpXG4gICAgICAgIC8qIGNoYW5nZSB0aGUgaGVpZ2h0IGFjY29yZGluZyB0byB5b3VyIG5lZWRzIC0geW91IGNhbiBldmVuIHNldCBoZWlnaHQ6IGF1dG9cbiAgICAgICAgaGVpZ2h0OiAzNDBweFxuICAgICAgICAvKiBoZXJlIHlvdSBzZXQgdGhlIG51bWJlciBvZiBjb2x1bW5zIC0gdXNlIHdpZHRoIHBlcmNlbnRhZ2VcbiAgICAgICAgK2NvbHVtbigwLjIzKVxuICAgICAgICAvLyBzZWUgcGFydGlhbHMgPiBfbGF5b3V0LnNjc3NcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAyLjY2JVxuICAgICAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAkY2xvdWRcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlblxuICAgICAgICBvdmVyZmxvdy14OiBoaWRkZW5cbiAgICAgICAgb3ZlcmZsb3cteTogYXV0b1xuICAgICAgICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2hcblxuICAgICAgICAmOm50aC1jaGlsZCg0bisyKVxuICAgICAgICAgIC8qICsyIGJlY2F1c2Ugd2UgaGF2ZSAyIGxpc3QgaXRlbXMgd2l0aCBkaXNwbGF5Om5vbmVcbiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDBcbiAgICAgICAgICBib3JkZXItcmlnaHQ6IG5vbmVcblxuICAgICAgICA+IGFcbiAgICAgICAgICAvKiBzZWNvbmRhcnkgbmF2IHRpdGxlXG4gICAgICAgICAgY29sb3I6ICRncmVlblxuICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkXG4gICAgICAgICAgZm9udC1zaXplOiAxLjZyZW1cbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAuNmVtXG5cbiAgICAgIGFcbiAgICAgICAgaGVpZ2h0OiAzMHB4XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAzMHB4XG4gICAgICAgIHBhZGRpbmc6IDAgMTglIDAgMFxuICAgICAgICBjb2xvcjogJG5pZ2h0Z3JlZW5cbiAgICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZVxuICAgICAgICBmb250LXNpemU6IDEuNHJlbVxuXG4gICAgICAgICY6aG92ZXJcbiAgICAgICAgICBjb2xvcjogJGdyZWVuXG5cbiAgICAgIHVsXG4gICAgICAgIC8qIEZvcmNlIEhhcmR3YXJlIEFjY2VsZXJhdGlvbiBpbiBXZWJLaXRcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApXG5cbiAgICAgIHVsIHVsXG4gICAgICAgIC8qIHRlcnRpYXJ5IG5hdmlnYXRpb25cbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlXG4gICAgICAgIHRvcDogMFxuICAgICAgICBsZWZ0OiAwXG4gICAgICAgIGhlaWdodDogMTAwJVxuICAgICAgICB3aWR0aDogMTAwJVxuXG4gICAgICAgICYuaXMtaGlkZGVuXG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwMCUpXG5cbiAgICAgICAgLmdvLWJhY2tcbiAgICAgICAgICBkaXNwbGF5OiBibG9ja1xuXG4gICAgICAgICAgYVxuICAgICAgICAgICAgY29sb3I6IHRyYW5zcGFyZW50XG5cbiAgICAgICAgLnNlZS1hbGxcbiAgICAgICAgICBkaXNwbGF5OiBibG9ja1xuXG4gICAgICAubW92ZXMtb3V0ID4gbGkgPiBhXG4gICAgICAgIC8qIHB1c2ggdGhlIG5hdmlnYXRpb24gaXRlbXMgdG8gdGhlIGxlZnQgLSBhbmQgbG93ZXIgZG93biBvcGFjaXR5IC0gd2hlbiB0ZXJ0aWFyeSBuYXYgc2xpZGVzIGluXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSlcblxuICAgIC5jZC1uYXYtZ2FsbGVyeVxuICAgICAgYm94LXNoYWRvdzogMCA1cHggNXB4IHJnYmEoMTAwLDEwMCwxMDAsLjMpXG5cbiAgICAgIGxpXG4gICAgICAgIC8qIHNldCBoZXJlIG51bWJlciBvZiBjb2x1bW5zIC0gdXNlIHdpZHRoIHBlcmNlbnRhZ2VcbiAgICAgICAgLy8rY29sdW1uKDAuMjIpXG4gICAgICAgIC8vbWFyZ2luOiAwIDQlIDQwcHggMFxuXG4gICAgICAgIGZsb2F0OiBsZWZ0XG4gICAgICAgIHdpZHRoOiAyNSVcbiAgICAgICAgcGFkZGluZzogMXJlbVxuXG4gICAgICAgICY6bnRoLWNoaWxkKDRuKzIpXG4gICAgICAgICAgLyogKzIgYmVjYXVzZSB3ZSBoYXZlIHR3byBhZGRpdGlvbmFsIGxpc3QgaXRlbXMgd2l0aCBkaXNwbGF5Om5vbmVcbiAgICAgICAgICAvL21hcmdpbi1yaWdodDogMFxuXG4gICAgICAuY2QtbmF2LWl0ZW1cbiAgICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZVxuICAgICAgICBwYWRkaW5nOiAwXG4gICAgICAgIGhlaWdodDogYXV0b1xuICAgICAgICBsaW5lLWhlaWdodDogMS4yXG5cbiAgICAgICAgaW1nXG4gICAgICAgICAgcG9zaXRpb246IHN0YXRpY1xuICAgICAgICAgIG1hcmdpbi10b3A6IDBcbiAgICAgICAgICBoZWlnaHQ6IGF1dG9cbiAgICAgICAgICB3aWR0aDogMTAwJVxuICAgICAgICAgIG1hcmdpbi1ib3R0b206IC42cmVtXG5cbiAgICAgICAgaDNcbiAgICAgICAgICBjb2xvcjogJGdyZWVuXG4gICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGRcbiAgICAgICAgICBmb250LXNpemU6IC45cmVtXG4gICAgICAgICAgcGFkZGluZzogMCAuNHJlbVxuXG4gICAgLmNkLW5hdi1pY29uc1xuXG4gICAgICBsaVxuICAgICAgICAvKiBzZXQgaGVyZSBudW1iZXIgb2YgY29sdW1ucyAtIHVzZSB3aWR0aCBwZXJjZW50YWdlXG4gICAgICAgICtjb2x1bW4oMC4zMilcbiAgICAgICAgbWFyZ2luOiAwIDIlIDIwcHggMFxuICAgICAgICAmOm50aC1jaGlsZCgzbisyKVxuICAgICAgICAgIC8qICsyIGJlY2F1c2Ugd2UgaGF2ZSB0d28gYWRkaXRpb25hbCBsaXN0IGl0ZW1zIHdpdGggZGlzcGxheTpub25lXG4gICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwXG4gICAgICAuY2QtbmF2LWl0ZW1cbiAgICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZVxuICAgICAgICBoZWlnaHQ6IDgwcHhcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuMlxuICAgICAgICBwYWRkaW5nOiAyNHB4IDAgMCA4NXB4XG4gICAgICAgICY6aG92ZXJcbiAgICAgICAgICBiYWNrZ3JvdW5kOiBsaWdodGVuKCRjbG91ZCwgOCUpXG4gICAgICAgIGgzXG4gICAgICAgICAgY29sb3I6ICRncmVlblxuICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkXG4gICAgICAgIHBcbiAgICAgICAgICBkaXNwbGF5OiBibG9ja1xuICAgICAgICAmOjpiZWZvcmVcbiAgICAgICAgICBsZWZ0OiAyNXB4XG5cblxuLmhhcy1jaGlsZHJlbiA+IGEsIC5nby1iYWNrIGFcbiAgcG9zaXRpb246IHJlbGF0aXZlXG4gICY6OmJlZm9yZSwgJjo6YWZ0ZXJcbiAgICAvKiBhcnJvdyBpY29uIGluIENTUyAtIGZvciBlbGVtZW50IHdpdGggbmVzdGVkIHVub3JkZXJlZCBsaXN0c1xuICAgIGNvbnRlbnQ6ICcnXG4gICAgcG9zaXRpb246IGFic29sdXRlXG4gICAgdG9wOiA1MCVcbiAgICBtYXJnaW4tdG9wOiAtMXB4XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrXG4gICAgaGVpZ2h0OiAycHhcbiAgICB3aWR0aDogMTBweFxuICAgIGJhY2tncm91bmQ6IGxpZ2h0ZW4oJG5pZ2h0Z3JlZW4sIDEwJSlcblxuICAgIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlblxuICAmOjpiZWZvcmVcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZylcbiAgJjo6YWZ0ZXJcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpXG4gICttZWRpYShcIj5kZXNrdG9wXCIpXG4gICAgJjo6YmVmb3JlLCAmOjphZnRlclxuICAgICAgYmFja2dyb3VuZDogZGFya2VuKCRjbG91ZCwgMTAlKVxuICAgICY6aG92ZXI6OmJlZm9yZSwgJjpob3Zlcjo6YWZ0ZXJcbiAgICAgIGJhY2tncm91bmQ6ICRncmVlblxuXG4uaGFzLWNoaWxkcmVuID4gYVxuICBwYWRkaW5nLXJpZ2h0OiA0MHB4XG4gICY6OmJlZm9yZSwgJjo6YWZ0ZXJcbiAgICAvKiBhcnJvdyBnb2VzIG9uIHRoZSByaWdodCBzaWRlIC0gY2hpbGRyZW4gbmF2aWdhdGlvblxuICAgIHJpZ2h0OiAyMHB4XG4gICAgdHJhbnNmb3JtLW9yaWdpbjogOXB4IDUwJVxuXG4uY2QtcHJpbWFyeS1uYXYgLmdvLWJhY2sgYVxuICBwYWRkaW5nLWxlZnQ6IDQwcHhcbiAgJjo6YmVmb3JlLCAmOjphZnRlclxuICAgIC8qIGFycm93IGdvZXMgb24gdGhlIGxlZnQgc2lkZSAtIGdvIGJhY2sgYnV0dG9uXG4gICAgbGVmdDogMjBweFxuICAgIHRyYW5zZm9ybS1vcmlnaW46IDFweCA1MCVcblxuK21lZGlhKFwiPmRlc2t0b3BcIilcbiAgLmhhcy1jaGlsZHJlbiA+IGFcbiAgICAmOjpiZWZvcmUsICY6OmFmdGVyXG4gICAgICByaWdodDogMTUlXG4gIC5jZC1wcmltYXJ5LW5hdiA+IC5oYXMtY2hpbGRyZW4gPiBhXG4gICAgLyogbWFpbiBuYXZpZ2F0aW9uIGFycm93cyBvbiBsYXJnZXIgZGV2aWNlc1xuICAgIHBhZGRpbmctcmlnaHQ6IDMwcHggIWltcG9ydGFudFxuICAgICY6OmJlZm9yZSwgJjo6YWZ0ZXJcbiAgICAgIHdpZHRoOiA5cHhcbiAgICAgIHRyYW5zZm9ybS1vcmlnaW46IDUwJSA1MCVcbiAgICAgIGJhY2tncm91bmQ6IGRhcmtlbigkY2xvdWQsIDEwJSlcblxuICAgICAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuXG4gICAgICB0cmFuc2l0aW9uOiB3aWR0aCAwLjNzLCB0cmFuc2Zvcm0gMC4zc1xuICAgICY6OmJlZm9yZVxuICAgICAgcmlnaHQ6IDEycHhcbiAgICAmOjphZnRlclxuICAgICAgcmlnaHQ6IDdweFxuICAgICYuc2VsZWN0ZWQ6OmJlZm9yZSwgJi5zZWxlY3RlZDo6YWZ0ZXJcbiAgICAgIHdpZHRoOiAxNHB4XG4gICAgJi5zZWxlY3RlZDo6YmVmb3JlXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNXB4KSByb3RhdGUoLTQ1ZGVnKVxuICAgICYuc2VsZWN0ZWQ6OmFmdGVyXG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZylcbiAgLmNkLXNlY29uZGFyeS1uYXYgPiAuaGFzLWNoaWxkcmVuID4gYTo6YmVmb3JlLCAuY2Qtc2Vjb25kYXJ5LW5hdiA+IC5oYXMtY2hpbGRyZW4gPiBhOjphZnRlclxuICAgIC8qIHJlbW92ZSBhcnJvd3Mgb24gc2Vjb25kYXJ5IG5hdiB0aXRsZXNcbiAgICBkaXNwbGF5OiBub25lXG4gIC5jZC1wcmltYXJ5LW5hdiAuZ28tYmFjayBhXG4gICAgcGFkZGluZy1sZWZ0OiAyMHB4XG4gICAgJjo6YmVmb3JlLCAmOjphZnRlclxuICAgICAgbGVmdDogMXB4XG5cblxuXG5cbi5jZC1zZWFyY2hcbiAgcG9zaXRpb246IGFic29sdXRlXG4gIGhlaWdodDogJHNlYXJjaC1oZWlnaHQtU1xuICB3aWR0aDogMTAwJVxuICB0b3A6ICRoZWFkZXItaGVpZ2h0LVNcbiAgbGVmdDogMFxuICB6LWluZGV4OiAkYWJvdmUtY29udGVudFxuICBvcGFjaXR5OiAwXG4gIHZpc2liaWxpdHk6IGhpZGRlblxuICB0cmFuc2l0aW9uOiBvcGFjaXR5IC4zcyAwcywgdmlzaWJpbGl0eSAwcyAuM3NcblxuICBmb3JtXG4gICAgaGVpZ2h0OiAxMDAlXG4gICAgd2lkdGg6IDEwMCVcblxuICBpbnB1dFxuICAgIGJvcmRlci1yYWRpdXM6IDBcbiAgICBib3JkZXI6IG5vbmVcbiAgICBiYWNrZ3JvdW5kOiAkd2hpdGVcbiAgICBmb250LWZhbWlseTogc2VyaWZcbiAgICBoZWlnaHQ6IDEwMCVcbiAgICB3aWR0aDogMTAwJVxuICAgIGZvbnQtc2l6ZTogMnJlbVxuICAgIHBhZGRpbmc6IDAgNSVcbiAgICAvL2JveC1zaGFkb3c6IGluc2V0IDAgMXB4IDAgJGNsb3VkLCAwIDNweCA2cHggcmdiYSgjMDAwLCAwLjA1KVxuICAgIGFwcGVhcmFuY2U6IG5vbmVcblxuICAgICY6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIsXG4gICAgJjo6LW1vei1wbGFjZWhvbGRlcixcbiAgICAmOi1tcy1pbnB1dC1wbGFjZWhvbGRlclxuICAgICAgY29sb3I6IGRhcmtlbigkY2xvdWQsIDEwJSlcblxuICAgICY6Zm9jdXNcbiAgICAgIG91dGxpbmU6IG5vbmVcblxuICAmLmlzLXZpc2libGVcbiAgICBvcGFjaXR5OiAxXG4gICAgdmlzaWJpbGl0eTogdmlzaWJsZVxuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgLjNzIDBzLCB2aXNpYmlsaXR5IDBzIDBzXG4gICAgLy9ib3gtc2hhZG93OiAxcHggMXB4IDVweCByZ2JhKDEwMCwxMDAsMTAwLCAuNSlcblxuICAubmF2LWlzLWZpeGVkICZcbiAgICBwb3NpdGlvbjogZml4ZWRcblxuICArbWVkaWEoXCI+ZGVza3RvcFwiKVxuICAgIGhlaWdodDogJHNlYXJjaC1oZWlnaHQtTFxuICAgIHRvcDogJGhlYWRlci1oZWlnaHQtTFxuXG4gICAgaW5wdXRcbiAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3hcbiAgICAgIGJvcmRlcjogbm9uZVxuICAgICAgY29sb3I6ICRncmVlblxuICAgICAgZm9udC1mYW1pbHk6IHNlcmlmXG4gICAgICBwYWRkaW5nOiAwIDJyZW1cbiAgICAgIGZvbnQtc2l6ZTogMy4ycmVtXG5cblxuLmNkLW92ZXJsYXlcbiAgLyogc2hhZG93IGxheWVyIHZpc2libGUgd2hlbiBuYXZpZ2F0aW9uIGlzIGFjdGl2ZVxuICBwb3NpdGlvbjogZml4ZWRcbiAgei1pbmRleDogMlxuICBoZWlnaHQ6IDEwMCVcbiAgd2lkdGg6IDEwMCVcbiAgdG9wOiAwXG4gIGxlZnQ6IDBcbiAgY3Vyc29yOiBwb2ludGVyXG4gIC8vYmFja2dyb3VuZC1jb2xvcjogcmdiYSgkZ3JlZW4sIDAuOClcbiAgdmlzaWJpbGl0eTogaGlkZGVuXG4gIG9wYWNpdHk6IDBcbiAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuXG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyAwcywgdmlzaWJpbGl0eSAwcyAwLjNzLCB0cmFuc2Zvcm0gMC4zcyAwc1xuXG4gICYuaXMtdmlzaWJsZVxuICAgIG9wYWNpdHk6IDFcbiAgICB2aXNpYmlsaXR5OiB2aXNpYmxlXG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzIDBzLCB2aXNpYmlsaXR5IDBzIDBzLCB0cmFuc2Zvcm0gMC4zcyAwc1xuXG4gICttZWRpYShcIjxkZXNrdG9wXCIpXG4gICAgJi5pcy12aXNpYmxlXG4gICAgICAvL3RyYW5zZm9ybTogdHJhbnNsYXRlWCgtJG5hdi13aWR0aC1TKVxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApXG5cbiAgICAubmF2LW9uLWxlZnQgJi5pcy12aXNpYmxlXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoJG5hdi13aWR0aC1TKVxuXG4gICAgJi5pcy12aXNpYmxlLnNlYXJjaC1pcy12aXNpYmxlLFxuICAgIC5uYXYtb24tbGVmdCAmLmlzLXZpc2libGUuc2VhcmNoLWlzLXZpc2libGVcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKVxuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICpcbiAqc3VwcG9ydCBmb3Igbm8ganNcbiAqXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi5uby1qcyAuY2QtcHJpbWFyeS1uYXZcbiAgcG9zaXRpb246IHJlbGF0aXZlXG4gIGhlaWdodDogYXV0b1xuICB3aWR0aDogMTAwJVxuICBvdmVyZmxvdzogdmlzaWJsZVxuICB2aXNpYmlsaXR5OiB2aXNpYmxlXG4gIHotaW5kZXg6ICRjb250ZW50XG5cbi5uby1qcyAuY2Qtc2VhcmNoXG4gIHBvc2l0aW9uOiByZWxhdGl2ZVxuICB0b3A6IDBcbiAgb3BhY2l0eTogMVxuICB2aXNpYmlsaXR5OiB2aXNpYmxlXG5cbittZWRpYShcIj5kZXNrdG9wXCIpXG4gIC5uby1qcyAuY2QtcHJpbWFyeS1uYXZcbiAgICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgICB6LWluZGV4OiAkYWJvdmUtY29udGVudFxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgIHdpZHRoOiBhdXRvXG4gICAgdG9wOiAwXG4gICAgcmlnaHQ6IDE1MHB4XG4gICAgcGFkZGluZzogMFxuICAubm8tanMgLm5hdi1pcy1maXhlZCAuY2QtcHJpbWFyeS1uYXZcbiAgICBwb3NpdGlvbjogZml4ZWRcbiIsIi5uYXYtZm9vdGVyXG5cdHBhZGRpbmc6IDMwcHggMjBweCAyMHB4XG5cdHRleHQtYWxpZ246IGxlZnRcblxuXHQrbWVkaWEoXCI8PXRhYmxldFwiKVxuXHRcdGRpc3BsYXk6IG5vbmVcblxuXHQmX19oZWFkaW5nXG5cdFx0Zm9udC1mYW1pbHk6ICRzYW5zXG5cdFx0Zm9udC1zaXplOiAxcmVtXG5cdFx0Zm9udC13ZWlnaHQ6ICRib2xkXG5cdFx0bWFyZ2luLWJvdHRvbTogMXJlbVxuXG5cdFx0YVxuXHRcdFx0Y29sb3I6ICRjaGFyY29hbFxuXHRcdFx0Jjpob3ZlclxuXHRcdFx0XHRjb2xvcjogJGdyZWVuXG5cblx0Jl9fbGlua1xuXHRcdGZvbnQtc2l6ZTogMTRweFxuXG5cdCZfX2JveFxuXHRcdHBhZGRpbmc6IDAgMTBweFxuXHRcdHZlcnRpY2FsLWFsaWduOiB0b3BcblxuXHQmX19ib3gtbmFycm93XG5cdFx0cGFkZGluZzogMCAxMHB4XG5cdFx0dmVydGljYWwtYWxpZ246IHRvcFxuXG5cdCZfX2J1dHRvblxuXHRcdGJvcmRlci13aWR0aDogMXB4XG5cdFx0Y29sb3I6ICRncmVlblxuXHRcdGZvbnQtc2l6ZTogLjlyZW1cblx0XHRtYXJnaW4tYm90dG9tOiAxcmVtXG5cdFx0cGFkZGluZzogLjVyZW0gMXJlbVxuXHRcdHdpZHRoOiAxMDAlXG5cblxuXHQvLyBTdWItbmF2aWdhdGlvbiwgd2hpY2ggaGlkZXMgb24gc21hbGwgc2l6ZXNcblx0Jl9fc3ViLWxpbmtzXG5cdFx0Zm9udC1zaXplOiAxNHB4XG5cblx0XHRhXG5cdFx0XHRjb2xvcjogJGNoYXJjb2FsXG5cdFx0XHQmOmhvdmVyXG5cdFx0XHRcdGNvbG9yOiAkZ3JlZW5cblxuXHRcdGxpOm50aC1jaGlsZCgxKVxuXHRcdFx0Zm9udC1mYW1pbHk6ICRzYW5zXG5cdFx0XHRmb250LXNpemU6IDFyZW1cblx0XHRcdGZvbnQtd2VpZ2h0OiAkYm9sZFxuXHRcdFx0bWFyZ2luLWJvdHRvbTogLjVyZW1cbiIsIi8vQmFubmVyIFRhbGwgLSBUaGlzIGlzIGZvdW5kIG9uIHRoZSBob21lcGFnZSBvbmx5XG4uYmFubmVyLXRhbGxcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKGltYWdlcy9ib2F0LmpwZylcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyXG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXJcbiAgaGVpZ2h0OiAyMDBweFxuICBwb3NpdGlvbjogcmVsYXRpdmVcblxuICArbWVkaWEoXCI+dGFibGV0XCIpXG4gICAgaGVpZ2h0OiA0NjVweFxuXG5cbiAgJl9faGVhZGxpbmVcbiAgICBib3R0b206IDNyZW1cbiAgICBjb2xvcjogJHdoaXRlXG4gICAgZm9udC1mYW1pbHk6IHNlcmlmXG4gICAgZm9udC1zaXplOiA1cmVtXG4gICAgZm9udC13ZWlnaHQ6ICRub3JtYWxcbiAgICBsZWZ0OiAycmVtXG4gICAgbGluZS1oZWlnaHQ6IDFcbiAgICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgICBtYXJnaW46IDAgMCAxcmVtIDFyZW1cbiAgICB0ZXh0LXNoYWRvdzogMnB4IDJweCAycHggJGNoYXJjb2FsXG5cbiAgICArbWVkaWEoXCI8dGFibGV0XCIpXG4gICAgICBwb3NpdGlvbjogc3RhdGljXG4gICAgICBmb250LXNpemU6IDJyZW1cbiAgICAgIHBhZGRpbmc6IDJyZW1cblxuXG4vLyBCYW5uZXIgU3RhbmRhcmQgLSBUaGlzIGlzIGZvdW5kIG9uIHRoZSBtYWpvcml0eSBvZiB0aGUgaW50ZXJuYWwgcGFnZXNcbi5iYW5uZXItc3RhbmRhcmRcbiAgYmFja2dyb3VuZDogJGdyZWVuXG4gIGNvbG9yOiAkd2hpdGVcbiAgZGlzcGxheTogdGFibGVcbiAgaGVpZ2h0OiAzNDBweFxuXG4gICZfX2JveFxuICAgIHBhZGRpbmc6IDFyZW0gMnJlbVxuXG4gICZfX2hlYWRpbmdcbiAgICBjb2xvcjogJHdoaXRlXG5cbiAgJl9fdGV4dFxuXG4gICZfX21lZGlhXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHNsYXRlXG5cbiAgLy8gVEhpcyBpcyBmb3VuZCBvbiB0aGUgQXBwcm9hY2ggUGFnZVxuICAmX19tZWRpYS1hcHByb2FjaFxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZXMvbWVldGluZy5qcGcpXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlclxuXG4gICAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICAgIGhlaWdodDogMzAwcHhcblxuICAvLyBUaGlzIGlzIGZvdW5kIG9uIHRoZSBMZWFkZXJzaGlwIHBhZ2VcbiAgJl9fbWVkaWEtbGVhZGVyc2hpcFxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZXMvcGVvcGxlLmpwZylcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyXG5cbiAgICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgICAgaGVpZ2h0OiAzMDBweFxuXG4vLyBCYW5uZXIgUGFub3JhbWEgLSBUaGlzIGlzIGZvdW5kIG9uIHRoZSBOZXdzIHBhZ2Vcbi5iYW5uZXItcGFub3JhbWFcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltYWdlcy90cmVlcy5qcGcpXG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlclxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyXG4gIGhlaWdodDogMjU1cHhcbiIsIi5jYXJkLWRpcHRpY1xuICBkaXNwbGF5OiB0YWJsZVxuICBib3JkZXItdG9wOiAxcHggc29saWQgJGJvcmRlckNvbG9yXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkYm9yZGVyQ29sb3JcblxuICArcmVzcG9uc2l2ZS1zdGFja1xuXG4gICZfX2JveFxuICAgIGRpc3BsYXk6IHRhYmxlLWNlbGxcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlXG5cbiAgICBwYWRkaW5nOiAycmVtIDFyZW1cblxuICAgICttZWRpYShcIj50YWJsZXRcIilcbiAgICAgIHBhZGRpbmc6IDJyZW0gMXJlbSAycmVtIDJyZW1cblxuICAgICY6bnRoLWNoaWxkKDIpXG4gICAgICArbWVkaWEoXCI+dGFibGV0XCIpXG4gICAgICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgJGJvcmRlckNvbG9yXG4gICAgICAgIHBhZGRpbmc6IDJyZW0gMnJlbSAycmVtIDFyZW1cblxuICAmX19oZWFkaW5nXG4gICAgdGV4dC1hbGlnbjogY2VudGVyXG5cbiAgJl9fbWVkaWFcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JlZW5cbiAgICBoZWlnaHQ6IDE1MHB4XG4gICAgb3ZlcmZsb3c6IGhpZGRlblxuICAgIG1hcmdpbi1ib3R0b206IDJyZW1cblxuICAmX190ZXh0XG4gICAgdGV4dC1hbGlnbjogY2VudGVyXG4gICAgbWFyZ2luLWJvdHRvbTogMnJlbVxuXG4gIHVsXG4gICAgbGlzdC1zdHlsZTogbm9uZVxuICAgIHRleHQtYWxpZ246IGNlbnRlclxuXG4gICAgbGlcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgICAgcGFkZGluZzogLjVyZW1cbiAgICAgIHdpZHRoOiA0NyVcblxuXG4gICZfX2xpbmtcbiAgICBjb2xvcjogJHNpdGUtdGV4dC1jb2xvci1saW5rXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrXG4gICAgZm9udC1mYW1pbHk6ICRzZXJpZlxuICAgIHBhZGRpbmc6IDAgLjRyZW1cbiAgICAmOmhvdmVyXG4gICAgICBjb2xvcjogJHNpdGUtdGV4dC1jb2xvci1saW5rLWhvdmVyXG5cblxuLy8gQ2FyZCBCaW8gLSBUaGVzZSBhcmUgZm91bmQgb24gdGhlIExlYWRlcnNoaXAgcGFnZVxuLmNhcmQtYmlvXG4gIHBhZGRpbmctYm90dG9tOiAycmVtXG5cbiAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJGNsb3VkXG4gICAgbWFyZ2luLWJvdHRvbTogMnJlbVxuXG4gICZfX21lZGlhXG5cbiAgICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgICAgbWFyZ2luLWJvdHRvbTogMXJlbVxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyXG5cbiAgICBpbWdcbiAgICAgICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgICAgICB3aWR0aDogMzMlXG5cbiAgJl9fYm94XG4gICAgcGFkZGluZy1sZWZ0OiAycmVtXG4gICAgcGFkZGluZy10b3A6IDBcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wXG5cbiAgICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgICAgcGFkZGluZzogMFxuXG4gICZfX2hlYWRpbmdcbiAgICAvL01peGluIGNhbiBiZSBmb3VuZCBpbiB0eXBvZ3JhcGh5XG4gICAgK3N0YW5kYXJkLWhlYWRpbmcoKVxuXG4gICZfX3N1YnRpdGxlXG4gICAgY29sb3I6ICRncmFwaGl0ZVxuXG4gICZfX3RleHRcblxuICAgICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgICB0ZXh0LWFsaWduOiBsZWZ0XG5cbiAgICAqICsgKlxuICAgICAgbWFyZ2luLXRvcDogMXJlbVxuXG5cbi8vIENhcmQgYXJ0aWNsZSAtIFRoZXNlIGFyZSBmb3VuZCBvbiB0aGUgTmV3cyBhbmQgSW5zaWdodHMgcGFnZVxuLmNhcmQtYXJ0aWNsZVxuXG5cbiAgJl9fYm94XG4gICAgYm94LXNoYWRvdzogMCAxcHggMCAkZ3JlZW5cbiAgICBkaXNwbGF5OiBub25lXG4gICAgK3ZlcnQtcGFkZGluZygxLDEpXG5cbiAgICAqICsgKlxuICAgICAgbWFyZ2luLXRvcDogMXJlbVxuXG4gIGgyXG4gICAgK3N0YW5kYXJkLWhlYWRpbmcoKSAvL01peGluIGNhbiBiZSBmb3VuZCBpbiB0eXBvZ3JhcGh5XG5cbiAgc21hbGxcbiAgICBjb2xvcjogJGdyYXBoaXRlXG4gICAgZm9udC1zaXplOiAuNzVyZW1cblxuICBwXG5cbi5sb2FkZXJfX25hdlxuICBkaXNwbGF5OiB0YWJsZS1jZWxsXG4gIHBhZGRpbmctdG9wOiAxLjI1cmVtXG5cblxuLmNhcmQtdHJpcHRpY1xuICBkaXNwbGF5OiB0YWJsZVxuICBib3JkZXItdG9wOiAxcHggc29saWQgJGJvcmRlckNvbG9yXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkYm9yZGVyQ29sb3JcblxuICAmX19ib3hcbiAgICBwYWRkaW5nOiAycmVtXG4gICAgdmVydGljYWwtYWxpZ246IHRvcFxuXG4gICAgJjpudGgtY2hpbGQoMilcbiAgICAgICttZWRpYShcIj50YWJsZXRcIilcbiAgICAgICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAkYm9yZGVyQ29sb3JcbiAgICAgICAgLy9wYWRkaW5nOiAycmVtIDFyZW0gMnJlbSAxcmVtXG5cbiAgICAmOm50aC1jaGlsZCgzKVxuICAgICAgK21lZGlhKFwiPnRhYmxldFwiKVxuICAgICAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICRib3JkZXJDb2xvclxuICAgICAgICAvL3BhZGRpbmc6IDJyZW0gMnJlbSAycmVtIDFyZW1cblxuICAmX19tZWRpYVxuICAgIC8vYmFja2dyb3VuZC1jb2xvcjogJGdyZWVuXG4gICAgaGVpZ2h0OiAxNTBweFxuICAgIG92ZXJmbG93OiBoaWRkZW5cbiAgICBtYXJnaW4tYm90dG9tOiAycmVtXG5cbiAgICBpbWdcblxuICAmX19oZWFkaW5nLWxpbmtcbiAgICArc21hbGwtaGVhZGluZygpXG4gICAgY29sb3I6ICRzaXRlLXRleHQtY29sb3ItbGlua1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgIHRleHQtYWxpZ246IGNlbnRlclxuXG4gICAgJjpob3ZlclxuICAgICAgY29sb3I6ICRzaXRlLXRleHQtY29sb3ItbGluay1ob3ZlclxuXG4gICZfX3RleHRcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXJcbiIsIi8vXG4vL0NUQXMgLSBDYWxsIHRvIEFjdGlvbiBtb2R1bGVzXG4vL1xuXG4vL0NvbnRhY3QgQ1RBXG4vL1RoaXMgaXMgZm91bmQgb24gdGhlIGhvbWVwYWdlIG9ubHkgcmlnaHQgbm93XG4uY3RhLWNvbnRhY3RcbiAgYmFja2dyb3VuZC1jb2xvcjogJHNsYXRlXG4gIGRpc3BsYXk6IHRhYmxlXG5cblxuICAmX19ib3hcbiAgICBwYWRkaW5nOiAycmVtXG5cbiAgJl9fYm94Om50aC1jaGlsZCgyKVxuICAgIHBhZGRpbmc6IDJyZW0gMFxuXG5cbiAgJl9fdGV4dFxuICAgIG1hcmdpbjogMFxuICAgIHBhZGRpbmc6IDAgMy41cmVtIDAgMnJlbVxuXG4gICAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICAgIHBhZGRpbmc6IDBcblxuICAmX19idXR0b25cbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgICBtYXJnaW46IDAgMnJlbSAwIDBcblxuICAgICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgICBtYXJnaW46IDBcblxuXG4vL1ZpZGVvIHRlYXNlciBDVEFcbi8vVGhpcyBpcyBmb3VuZCBvbiB0aGUgaG9tZXBhZ2Ugb25seSByaWdodCBub3dcbi5jdGEtdGVhc2VyXG4gIGRpc3BsYXk6IHRhYmxlXG4gIHBhZGRpbmc6IDFyZW0gMnJlbVxuXG4gICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgZmxleC1mbG93OiBjb2x1bW5cblxuICAmX19ib3hcbiAgICBwYWRkaW5nLXJpZ2h0OiAycmVtXG5cbiAgICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgICAgcGFkZGluZzogMFxuXG4gICZfX2hlYWRpbmdcblxuICAmX190ZXh0XG4gICAgbWFyZ2luLWJvdHRvbTogMnJlbVxuXG5cbiAgJl9fbWVkaWFcbiAgICBoZWlnaHQ6IDMwMHB4XG4gICAgb3ZlcmZsb3c6IGhpZGRlblxuXG4gICAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICAgIGhlaWdodDogMTUwcHhcbiAgICAgIG1hcmdpbi10b3A6IDJyZW1cblxuXG4vL0NlbnRlcmVkIENUQVxuLy9UaGlzIGlzIGZvdW5kIG9uIHRoZSBob21lcGFnZSBvbmx5IHJpZ2h0IG5vd1xuLmN0YS1jZW50ZXJcbiAgcGFkZGluZzogMnJlbVxuICB0ZXh0LWFsaWduOiBjZW50ZXJcblxuICAmX19oZWFkaW5nXG5cbiAgJl9fdGV4dFxuICAgIHBhZGRpbmc6IDAgOHJlbVxuICAgIG1hcmdpbi1ib3R0b206IDJyZW1cblxuICAgICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgICBwYWRkaW5nOiAwXG5cbiAgJl9fYnV0dG9uXG5cblxuXG4vL1N1YnNjcmliZSBDVEEgLSBUaGlzIGlzIGZvdW5kIGF0IHRoZSB0b3Agb2YgdGhlIGZvb3RlclxuLmN0YS1zdWJzY3JpYmVcbiAgYmFja2dyb3VuZC1jb2xvcjogJGdyZWVuXG4gIGNvbG9yOiAkd2hpdGVcbiAgK3ZlcnQtcGFkZGluZygxLDEuNSlcblxuICAmX19oZWFkaW5nXG4gICAgY29sb3I6ICR3aGl0ZVxuICAgIHRleHQtYWxpZ246IGNlbnRlclxuXG4gICZfX2JveFxuICAgIGRpc3BsYXk6IHRhYmxlXG4gICAgbWFyZ2luOiAwIGF1dG9cbiAgICB3aWR0aDogNzUlXG5cbiAgLy8gVE9ETyB1c2UgY29sIGNsYXNzIGluc3RlYWQgZm9yIHdpZHRoXG4gICZfX2lucHV0LWFkZC1vblxuXG5cbiAgJl9faW5wdXRcbiAgICBwYWRkaW5nOiAuOXJlbVxuICAgIHdpZHRoOiAxMDAlXG5cbiAgJl9fYnV0dG9uXG4gICAgYm9yZGVyOiAxcHggc29saWQgJHdoaXRlXG4gICAgY29sb3I6ICR3aGl0ZVxuICAgIGZvbnQtc2l6ZTogMS41cmVtXG4gICAgbWFyZ2luLWxlZnQ6IDFyZW1cbiAgICB3aWR0aDogMTAwJVxuICAgIHRyYW5zaXRpb246IGFsbCAuMnMgZWFzZVxuXG4gICAgJjpob3ZlclxuICAgICAgLypUaGVzZSB3aWxsIHRyYW5zaXRpb24gb24gaG92ZXJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICR3aGl0ZVxuICAgICAgY29sb3I6ICRncmVlblxuXG4gICAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICAgIG1hcmdpbjogMXJlbSAwIDAgMFxuXG4gICZfX21lc3NhZ2VcbiAgICBkaXNwbGF5OiBub25lXG4gICAgcGFkZGluZy10b3A6IDIuNXJlbVxuXG4gICZfX2Vycm9yXG4gICAgZGlzcGxheTogbm9uZVxuICAgIHBhZGRpbmctdG9wOiAxcmVtXG5cbiAgICAmLW1zZ1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyXG5cblxuLy9TaWRlYmFyIENUQSAtIFRoaXMgaXMgZm91bmQgb24gaW50ZXJuYWwgcGFnZXMgb25seVxuLmN0YS1zaWRlYmFyXG4gIHBhZGRpbmc6IDFyZW0gMCAwIDVyZW1cbiAgdmVydGljYWwtYWxpZ246IHRvcFxuXG4gICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgcGFkZGluZzogM3JlbSAycmVtXG5cbiAgJl9fbWVkaWFcbiAgICAvL2hlaWdodDogMTgwcHhcbiAgICAvL292ZXJmbG93OiBoaWRkZW5cblxuICAgICttZWRpYShcIjw9dGFibGV0XCIpXG5cblxuICAgIGltZ1xuXG4gICZfX2hlYWRpbmdcbiAgICBmb250LXNpemU6IDEuMjVyZW1cbiAgICArdmVydC1tYXJnaW4oLjUsLjUpXG5cbiAgJl9fdGV4dFxuXG4gICZfX2J1dHRvblxuICAgIG1hcmdpbi10b3A6IDFyZW1cblxuXG4vL1NvY2lhbCBDVEEgLSBUaGVzZSBhcmUgY3VycmVudGx5IGZvdW5kIGF0IHRoZSBib3R0b20gb2YgdGhlIGJsb2cgcG9zdHNcbi5jdGEtc29jaWFsXG4gIHBhZGRpbmctbGVmdDogMXJlbVxuXG4gIC5pY29uXG4gICAgZmlsbDogJGdyZWVuXG5cbiAgICAmOmhvdmVyXG4gICAgICBmaWxsOiAkZ3JhcGhpdGVcbiIsIi8vRm9vdGVyXG4kZm9vdGVyLWhlYWRlci1uYXY6IFRyZWJ1Y2hldCBNU1xuXG5mb290ZXJcblx0cGFkZGluZy1ib3R0b206IDVyZW1cblxuXHQrbWVkaWEoXCI8PXRhYmxldFwiKVxuXHRcdHBhZGRpbmc6IDBcblxuXG4uZm9vdGVyLWNvcHlyaWdodFxuXHRib3JkZXItdG9wOiAxcHggc29saWQgJGNsb3VkXG5cdGRpc3BsYXk6IHRhYmxlXG5cdHBhZGRpbmc6IDJyZW1cblx0d2lkdGg6IDEwMCVcblxuXHQrbWVkaWEoXCI8PXRhYmxldFwiKVxuXHRcdHBhZGRpbmc6IDJyZW0gMCAwIDBcblxuXHQmX19sb2dvLWJveFxuXHRcdHdpZHRoOiA0NTBweFxuXG5cdFx0K21lZGlhKFwiPD10YWJsZXRcIilcblx0XHRcdGRpc3BsYXk6IGlubGluZS1ibG9ja1xuXG5cdFx0XHQubG9nb19fc3RhY2tlZFxuXHRcdFx0XHRkaXNwbGF5OiBpbmxpbmUtYmxvY2tcblx0XHRcdFx0d2lkdGg6IDI1MHB4XG5cblxuXHQmX19ib3hcblx0XHR0ZXh0LWFsaWduOiByaWdodFxuXG5cdFx0K21lZGlhKFwiPj10YWJsZXRcIiwgXCI+PWRlc2t0b3BcIilcblx0XHRcdHRleHQtYWxpZ246IHJpZ2h0XG5cblx0XHRzbWFsbFxuXHRcdFx0ZGlzcGxheTogaW5saW5lLWJsb2NrXG5cdFx0XHRmb250LXNpemU6IDE0cHhcblx0XHRcdHBhZGRpbmctcmlnaHQ6IC41cmVtXG5cblx0XHRcdCY6OmJlZm9yZVxuXHRcdFx0XHRjb250ZW50OiAnfCdcblxuXHRcdFx0JjpudGgtY2hpbGQoMSlcblx0XHRcdFx0Jjo6YmVmb3JlXG5cdFx0XHRcdFx0Y29udGVudDogJyAnXG5cblxuXHRcdFx0K21lZGlhKFwiPj10YWJsZXRcIiwgXCI+PWRlc2t0b3BcIilcblx0XHRcdFx0Zm9udC1zaXplOiAxMnB4XG5cblx0XHQubmF2LW1pbm9yXG5cblx0XHRcdGxpXG5cdFx0XHQgIGFcblx0XHRcdCAgICBmb250LXNpemU6IDE0cHhcblxuXHRcdFx0ICAgICttZWRpYShcIj49dGFibGV0XCIsIFwiPj1kZXNrdG9wXCIpXG5cdFx0XHQgICAgICBmb250LXNpemU6IDEycHhcblxuLmZvb3Rlci1kaXNjbGFpbWVyXG5cdHRleHQtYWxpZ246IGNlbnRlclxuXHR3aWR0aDogMTAwJVxuXG5cdCZfX2JveFxuXHRcdGJvcmRlcjogMXB4IHNvbGlkICRmb290ZXItdGV4dFxuXHRcdGRpc3BsYXk6IGlubGluZS1ibG9ja1xuXHRcdHRleHQtYWxpZ246IGNlbnRlclxuXHRcdHBhZGRpbmc6IDIwcHhcblx0XHRtYXJnaW46IDUwcHggYXV0byAxMHB4XG5cblx0aDYsIHAsIHVsXG5cdFx0Zm9udC1zaXplOiAxNHB4XG5cdFx0bWFyZ2luLWJvdHRvbTogMXJlbVxuXG5cdFx0K21lZGlhKFwiPj10YWJsZXRcIiwgXCI+PWRlc2t0b3BcIilcblx0XHRcdGZvbnQtc2l6ZTogMTJweFxuXG5cdHVsXG5cdFx0QGV4dGVuZCAlbWVudVxuXHRcdG1hcmdpbi10b3A6IDBcblxuXHRcdGxpXG5cdFx0XHRkaXNwbGF5OiBpbmxpbmUtYmxvY2tcblx0XHRcdG1hcmdpbjogMCAxMHB4XG5cdFx0XHRwYWRkaW5nOiAuNXJlbVxuIiwiXG5Aa2V5ZnJhbWVzIGZhZGVJblxuICBmcm9tXG4gICAgb3BhY2l0eTogMFxuICB0b1xuICAgIG9wYWNpdHk6IDFcblxuLmhlYWRlcl9fbG9nby1ib3hcbiAgYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlXG4gIGJvcmRlci1sZWZ0OiAxcHggc29saWQgJGJvcmRlckNvbG9yXG4gIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICRib3JkZXJDb2xvclxuICBtYXJnaW46IDAgYXV0b1xuICBwYWRkaW5nLXRvcDogMXJlbVxuICBtYXgtd2lkdGg6IDEyMDBweFxuXG4vLyBGb3IgSUU5XG4ubm8tY3NzYW5pbWF0aW9ucyAuaGVhZGVyX19sb2dvLWJveFxuICBwYWRkaW5nLXRvcDogMFxuXG4uaGVhZGVyX19sb2dvXG4gIGJhY2tncm91bmQ6ICR3aGl0ZVxuXG5cbi5sb2dvXG4gIGRpc3BsYXk6IGJsb2NrXG4gIHBhZGRpbmc6IDFyZW0gMCAxcmVtIDJyZW1cbiAgd2lkdGg6IDYwMHB4XG5cbiAgK21lZGlhKFwiPDkwMHB4XCIpXG4gICAgd2lkdGg6IDQwMHB4XG5cbiAgK21lZGlhKFwiPDUwMHB4XCIpXG4gICAgcGFkZGluZzogMXJlbVxuICAgIHdpZHRoOiAzMDBweFxuXG4vLyBGb3IgSUU5XG4ubm8tY3NzYW5pbWF0aW9ucyAubG9nb1xuICBoZWlnaHQ6IDY4cHhcbiAgcGFkZGluZzogMCAxcmVtXG5cblxuc3ZnXG5cbiAgcGF0aCwgcG9seWdvblxuICAgIGZpbGw6ICRncmVlblxuXG4gICY6aG92ZXIgcGF0aCxcbiAgJjpob3ZlciBwb2x5Z29uXG4gICAgb3BhY2l0eTogLjdcbiAgICB0cmFuc2l0aW9uOiBmaWxsIDAuMnMgZWFzZVxuXG4ubG9nb19fc3RyZXRjaGVkXG4gIGRpc3BsYXk6IGJsb2NrXG5cbiAgK21lZGlhKFwiPDkwMHB4XCIpXG4gICAgZGlzcGxheTogbm9uZVxuXG4ubG9nb19fc3RhY2tlZFxuICBkaXNwbGF5OiBub25lXG5cbiAgK21lZGlhKFwiPDkwMHB4XCIpXG4gICAgZGlzcGxheTogYmxvY2tcblxuXG4vLyAyNSBwaWVjZXNcbi5sb2dvX19nbG9iZVxuICBwYXRoXG4gICAgb3BhY2l0eTogMFxuICAgIGFuaW1hdGlvbjogZmFkZUluIGVhc2UtaW4gMVxuICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzXG4gICAgYW5pbWF0aW9uLWR1cmF0aW9uOiAuNXNcblxuICBwYXRoOm50aC1jaGlsZCgxKVxuICAgIGFuaW1hdGlvbi1kZWxheTogMC4xc1xuXG4gIHBhdGg6bnRoLWNoaWxkKDIpXG4gICAgYW5pbWF0aW9uLWRlbGF5OiAwLjExc1xuXG4gIHBhdGg6bnRoLWNoaWxkKDMpXG4gICAgYW5pbWF0aW9uLWRlbGF5OiAwLjIyc1xuXG4gIHBhdGg6bnRoLWNoaWxkKDQpXG4gICAgYW5pbWF0aW9uLWRlbGF5OiAwLjEzc1xuXG4gIHBhdGg6bnRoLWNoaWxkKDUpXG4gICAgYW5pbWF0aW9uLWRlbGF5OiAwLjE0c1xuXG4gIHBhdGg6bnRoLWNoaWxkKDYpXG4gICAgYW5pbWF0aW9uLWRlbGF5OiAwLjE1c1xuXG4gIHBhdGg6bnRoLWNoaWxkKDcpXG4gICAgYW5pbWF0aW9uLWRlbGF5OiAwLjE2c1xuXG4gIHBhdGg6bnRoLWNoaWxkKDgpXG4gICAgYW5pbWF0aW9uLWRlbGF5OiAwLjM3c1xuXG4gIHBhdGg6bnRoLWNoaWxkKDkpXG4gICAgYW5pbWF0aW9uLWRlbGF5OiAwLjE4c1xuXG4gIHBhdGg6bnRoLWNoaWxkKDEwKVxuICAgIGFuaW1hdGlvbi1kZWxheTogMC4xOXNcblxuICBwYXRoOm50aC1jaGlsZCgxMSlcbiAgICBhbmltYXRpb24tZGVsYXk6IDAuMjBzXG5cbiAgcGF0aDpudGgtY2hpbGQoMTIpXG4gICAgYW5pbWF0aW9uLWRlbGF5OiAwLjIxc1xuXG4gIHBhdGg6bnRoLWNoaWxkKDEzKVxuICAgIGFuaW1hdGlvbi1kZWxheTogMC4xMnNcblxuICBwYXRoOm50aC1jaGlsZCgxNClcbiAgICBhbmltYXRpb24tZGVsYXk6IDAuMjNzXG5cbiAgcGF0aDpudGgtY2hpbGQoMTUpXG4gICAgYW5pbWF0aW9uLWRlbGF5OiAwLjM0c1xuXG4gIHBhdGg6bnRoLWNoaWxkKDE2KVxuICAgIGFuaW1hdGlvbi1kZWxheTogMC4yNXNcblxuXG4ubm8tY3NzYW5pbWF0aW9ucyAubG9nb19fZ2xvYmVcbiAgcGF0aFxuICAgIGZpbGw6ICRncmVlblxuICAgIG9wYWNpdHk6IDFcblxuLy8gT3RoZXIgY2xhc3NlcyBmb3IgYW5pbWFpdG9uIG1heWJlXG4vLyAubG9nb19fdGV4dFxuLy9cbi8vIC5sb2dvX19jb21tZXJjZVxuLy8gICBwYXRoLCBwb2x5Z29uXG4vL1xuLy9cbi8vIC5sb2dvX190cnVzdFxuLy8gICBwYXRoLCBwb2x5Z29uXG4vL1xuLy9cbi8vIC5sb2dvX190YWdsaW5lXG4vLyAgIHBhdGgsIHBvbHlnb25cbiIsIi8vLSBUaGlzIGNvbnRhaW5lciBob2xkIHRoZSBtYWluIGNvbnRlbnQgb24gZWFjaCBwYWdlXG4vLy0gSXQgaXMgZm91bmQgb24gYWxsIGludGVybmFsIHBhZ2VzXG5cbi8vLSBBbGwgXCJNYWluXCIgY2xhc3NlcyBoYXZlIHNoYXJlIHRoZXNlIHJ1bGVzXG4lbWFpblxuICBkaXNwbGF5OiB0YWJsZVxuICBwYWRkaW5nOiAxcmVtIDJyZW1cblxuLm1haW4tc3RhbmRhcmRcbiAgQGV4dGVuZCAlbWFpblxuICBwYWRkaW5nLWJvdHRvbTogNXJlbVxuXG4gICZfX2NvbnRlbnRcblxuICAgICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgICB0ZXh0LWFsaWduOiBsZWZ0XG5cbiAgJl9fdGV4dFxuXG4gICAgKiArICpcbiAgICAgIG1hcmdpbi10b3A6IDFyZW1cblxuICAgIGgyXG4gICAgICArc3RhbmRhcmQtaGVhZGluZygpXG4gICAgICArdmVydC1wYWRkaW5nKDEsMClcblxuXG4vLyBNYWluIGNvbnRlbnQgYmxvY2sgb24gTGVhZGVyc2hpcCBwYWdlXG4ubWFpbi1iaW9zXG4gIGRpc3BsYXk6IHRhYmxlXG4gIHBhZGRpbmc6IDJyZW1cblxuXG4vLyBNYWluIGNvbnRlbnQgYmxvY2sgb24gTmV3cyBwYWdlXG4ubWFpbi1uZXdzXG4gIEBleHRlbmQgJW1haW5cblxuXG4vLyBNYWluIGNvbnRlbnQgYmxvY2sgb24gQmxvZyBQb3N0IHBhZ2Vcbi5tYWluLXBvc3RcbiAgQGV4dGVuZCAlbWFpblxuXG4gICZfX3RleHRcblxuICAgICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgICB0ZXh0LWFsaWduOiBsZWZ0XG5cbiAgICAqICsgKlxuICAgICAgbWFyZ2luLXRvcDogMXJlbVxuXG4gICAgaDJcbiAgICAgICtzdGFuZGFyZC1oZWFkaW5nKClcblxuICAgIGgzXG4gICAgICArbWlub3ItaGVhZGluZygpXG5cbiAgICBmaWdjYXB0aW9uXG4gICAgICBjb2xvcjogJGdyYXBoaXRlXG4gICAgICBmb250LXNpemU6IC43NXJlbVxuICAgICAgbWFyZ2luLXRvcDogMFxuXG4gICAgYmxvY2txdW90ZVxuICAgICAgK2Jsb2NrcXVvdGUoKVxuIiwiLmZvcm0tc3RhbmRhcmRcbiAgaW5wdXQsXG4gIGlucHV0W3R5cGU9XCJlbWFpbFwiXSxcbiAgaW5wdXRbdHlwZT1cIm51bWJlclwiXSxcbiAgaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdLFxuICBpbnB1dFt0eXBlPVwic2VhcmNoXCJdLFxuICBpbnB1dFt0eXBlPVwidGVsXCJdLFxuICBpbnB1dFt0eXBlPVwidGV4dFwiXSxcbiAgaW5wdXRbdHlwZT1cInVybFwiXSxcbiAgaW5wdXRbdHlwZT1cImNvbG9yXCJdLFxuICBpbnB1dFt0eXBlPVwiZGF0ZVwiXSxcbiAgaW5wdXRbdHlwZT1cIm5hbWVcIl0sXG4gIGlucHV0W3R5cGU9XCJkYXRldGltZVwiXSxcbiAgaW5wdXRbdHlwZT1cImRhdGV0aW1lLWxvY2FsXCJdLFxuICBpbnB1dFt0eXBlPVwibW9udGhcIl0sXG4gIGlucHV0W3R5cGU9XCJ0aW1lXCJdLFxuICBpbnB1dFt0eXBlPVwid2Vla1wiXSxcbiAgdGV4dGFyZWFcbiAgXHRjb2xvcjogJHNpdGUtdGV4dC1jb2xvclxuICBcdGJvcmRlcjogMXB4IHNvbGlkICRib3JkZXJDb2xvclxuICAgIGJveC1zaXppbmc6IGNvbnRlbnQtYm94XG4gIFx0Ym9yZGVyLXJhZGl1czogMFxuICAgIGZvbnQtc2l6ZTogMXJlbVxuICBcdHBhZGRpbmc6IDFyZW1cbiAgXHRkaXNwbGF5OiBibG9ja1xuICBcdHdpZHRoOiAxMDAlXG5cblxuICBsYWJlbFxuICAgIGRpc3BsYXk6IGJsb2NrXG5cbiAgaW5wdXRbdHlwZT1cImJ1dHRvblwiXSxcbiAgaW5wdXRbdHlwZT1cInJlc2V0XCJdLFxuICBpbnB1dFt0eXBlPVwic3VibWl0XCJdXG4gICAgLy8gYW55IGRlZmF1bHQgYnV0dG9uIHN0eWxlcyB0aGF0IG5lZWQgdG8gYmUgZGlmZmVyZW50IG9uIGZvcm1zIGdvIGhlcmVcbiAgICBkaXNwbGF5OiBibG9ja1xuXG5cbiAgJl9fY2hlY2tib3hcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcblxuICAmX19jaGVja2JveCArIGxhYmVsXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrXG5cbiAg4oCYXG4gIC5zZWxlY3Rib3hcbiAgICBiYWNrZ3JvdW5kOiAkd2hpdGVcbiAgICBib3JkZXItcmFkaXVzOiAwXG4gICAgY3Vyc29yOiBwb2ludGVyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlXG4gICAgaGVpZ2h0OiA0OHB4XG5cblxuICBzZWxlY3RcbiAgICBiYWNrZ3JvdW5kOiAkd2hpdGVcbiAgICBib3gtc2hhZG93OiBub25lXG4gICAgYm9yZGVyLXJhZGl1czogMFxuICAgIGJvcmRlcjogMXB4IHNvbGlkICRib3JkZXJDb2xvclxuICAgIGNvbG9yOiAkc2l0ZS10ZXh0LWNvbG9yXG4gICAgY3Vyc29yOiBwb2ludGVyXG4gICAgZGlzcGxheTogYmxvY2tcbiAgICBmb250LXNpemU6IDFyZW1cbiAgICBoZWlnaHQ6IDQ1cHhcbiAgICBwYWRkaW5nOiAxcmVtXG4gICAgcG9zaXRpb246IHJlbGF0aXZlXG4gICAgd2lkdGg6IDEwMCVcblxuLmNvbnRhY3QtdXNfX2J1dHRvblxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2xhdGVcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ== */
/*# sourceMappingURL=data:application/json;base64, */