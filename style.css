article, aside, details, figcaption, figure, footer, header, hgroup, nav, section, summary {
  display: block; }

audio, canvas, video {
  display: inline-block; }

audio:not([controls]) {
  display: none;
  height: 0; }

[hidden], template {
  display: none; }

html {
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%; }

body {
  margin: 0; }

a {
  background: transparent; }
  a:hover, a:active {
    outline: 0; }

/* @if \$normalize_headings == true {
    h1 {
        font-size: \$h1_font_size;
        margin: \$h1_margin;
    }

    h2 {
        font-size: \$h2_font_size;
        margin: \$h2_margin;
    }

    h3 {
        font-size: \$h3_font_size;
        margin: \$h3_margin;
    }

    h4 {
        font-size: \$h4_font_size;
        margin: \$h4_margin;
    }

    h5 {
        font-size: \$h5_font_size;
        margin: \$h5_margin;
    }

    h6 {
        font-size: \$h6_font_size;
        margin: \$h6_margin;
    }
} */
abbr[title] {
  border-bottom: 1px dotted; }

b, strong {
  font-weight: bold; }

dfn {
  font-style: italic; }

mark {
  background: #ff0;
  color: #000; }

code, kbd, pre, samp {
  font-family: monospace, serif;
  font-size: 1em; }

pre {
  white-space: pre;
  white-space: pre-wrap;
  word-wrap: break-word; }

q {
  quotes: "\201C" "\201D" "\2018" "\2019"; }

q:before, q:after {
  content: '';
  content: none; }

/* /small {
    font-size: 80%;
} */
sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

img {
  border: 0; }

svg:not(:root) {
  overflow: hidden; }

figure {
  margin: 0; }

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

legend {
  border: 0;
  padding: 0;
  white-space: normal; }

button, input, select, textarea {
  font-family: inherit;
  font-size: 100%;
  margin: 0;
  vertical-align: baseline; }

button, input {
  line-height: normal; }

button, select {
  text-transform: none; }

button, html input[type="button"], input[type="reset"], input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer; }

button[disabled], input[disabled] {
  cursor: default; }

button::-moz-focus-inner, input::-moz-focus-inner {
  border: 0;
  padding: 0; }

textarea {
  overflow: auto;
  vertical-align: top; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

input[type="search"] {
  -webkit-appearance: textfield;
  -moz-box-sizing: content-box;
  box-sizing: content-box; }
  input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration {
    -webkit-appearance: none; }
input[type="checkbox"], input[type="radio"] {
  -moz-box-sizing: border-box;
       box-sizing: border-box;
  padding: 0; }

html {
  font-size: 16px;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased; }

body {
  color: #333;
  line-height: 1.5;
  font-family: News Cycle, sans-serif;
  -moz-background-size: auto 24px;
       background-size: auto 24px;
  margin: 0; }

[class*='__heading'] {
  color: #267e64;
  font-family: Playfair Display, serif;
  font-size: 40px;
  font-size: 2.5rem;
  font-weight: 400;
  line-height: 1;
  margin-bottom: 32px;
  margin-bottom: 2rem; }

[class*=__button], input[type="button"], input[type="reset"] {
  border: 1px solid #267e64;
  display: inline-block;
  font-family: Playfair Display, serif;
  font-size: 19px;
  font-size: 1.2rem;
  font-style: italic;
  text-align: center;
  padding: 12px 48px;
  padding: .75rem 3rem;
  text-decoration: none;
  /*Items for transition */
  background-color: transparent;
  color: #267e64;
  /*Transition settings */
  -webkit-transition: all .2s ease;
     -moz-transition: all .2s ease;
       -o-transition: all .2s ease;
          transition: all .2s ease; }
  [class*=__button]:hover, input[type="button"]:hover, input[type="reset"]:hover {
    /*These will transition on hover */
    background-color: #267e64;
    color: #fff; }

.clearfix:after {
  content: "";
  display: table;
  clear: both; }

img, iframe, embed {
  width: 100%; }

.container {
  background-color: #fff;
  border-left: 1px solid #ccc;
  border-right: 1px solid #ccc;
  margin: 0 auto;
  max-width: 1200px; }

[class*='col-'] {
  display: table-cell;
  vertical-align: middle; }

.col-2-12 {
  width: 16.66667%; }

.col-3-12 {
  width: 25%; }

.col-4-12 {
  width: 33.33333%; }

.col-5-12 {
  width: 41.66667%; }

.col-6-12 {
  width: 50%; }

.col-7-12 {
  width: 58.33333%; }

.col-8-12 {
  width: 66.66667%; }

.col-9-12 {
  width: 75%; }

.col-10-12 {
  width: 83.33333%; }

.col-11-12 {
  width: 91.66667%; }

* {
  margin: 0;
  padding: 0;
  -moz-box-sizing: border-box;
       box-sizing: border-box; }
  *:after, *:before {
    -moz-box-sizing: border-box;
         box-sizing: border-box; }

body {
  background-color: #edeeeb;
  padding: 0; }

a {
  text-decoration: none; }

table {
  margin: 0 0 1.5em;
  width: 100%; }

tr {
  border-bottom: 1px solid #e5e6e7; }
  tr:nth-child(even) {
    background-color: #f8f8f8; }

td {
  vertical-align: top;
  padding: 10px 5px; }

thead {
  background-color: #e5e6e7; }
  thead th {
    font-weight: 600;
    text-align: left;
    padding: 5px; }

.nav-minor {
  display: block;
  text-align: right; }
  .nav-minor__container {
    background-color: #fff;
    border-left: 1px solid #ccc;
    border-right: 1px solid #ccc;
    margin: 0 auto;
    padding-top: 16px;
    padding-top: 1rem;
    max-width: 1200px; }
  .nav-minor li {
    display: inline-block; }
    .nav-minor li:after {
      display: inline-block;
      content: ' | ';
      color: #267e64;
      margin: 0 2px; }
    .nav-minor li:nth-child(3):after {
      content: ' '; }
  .nav-minor__link {
    color: #333;
    display: inline-block;
    padding: 0 8px;
    padding: 0 .5rem; }
    .nav-minor__link:hover {
      color: #267e64; }

/* --------------------------------
 *
 *Primary style
 *
 *-------------------------------- */

input[type="search"]::-ms-clear {
  /* removes close icon - IE */
  display: none; }

input[type="search"]::-webkit-search-decoration, input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-results-button, input[type="search"]::-webkit-search-results-decoration {
  display: none; }

/* --------------------------------
 *
 *Main components
 *
 *-------------------------------- */
.cd-main-content, .cd-main-header {
  /* Force Hardware Acceleration in WebKit */
  -webkit-transform: translateZ(0);
     -moz-transform: translateZ(0);
          transform: translateZ(0);
  will-change: transform; }
  .cd-main-content ul, .cd-main-header ul {
    list-style: none; }

.cd-main-content {
  position: relative;
  -webkit-transition: -webkit-transform 0.3s;
     -moz-transition: -moz-transform 0.3s;
       -o-transition: -o-transform 0.3s;
          transition: transform 0.3s; }

.cd-main-header {
  font-family: Playfair Display, serif;
  position: relative;
  -webkit-transition: -webkit-transform 0.3s;
     -moz-transition: -moz-transform 0.3s;
       -o-transition: -o-transform 0.3s;
          transition: transform 0.3s; }

.cd-main-content {
  min-height: 100vh;
  z-index: 2; }

.cd-main-header {
  height: 50px;
  background: #fff;
  z-index: 3;
  border-bottom: 1px solid #e5e6e7; }
  .nav-is-fixed .cd-main-header {
    /* add .nav-is-fixed class to body if you want a fixed navigation on > 1024px */
    position: fixed;
    top: 0;
    left: 0;
    width: 100%; }

.cd-logo {
  position: absolute;
  top: 12px;
  left: 5%; }
  .cd-logo img {
    display: block; }

.cd-header-buttons {
  position: absolute;
  display: inline-block;
  top: 3px;
  right: 5%; }
  .cd-header-buttons li {
    display: inline-block; }

.cd-search-trigger, .cd-nav-trigger {
  position: relative;
  display: block;
  width: 44px;
  height: 44px;
  overflow: hidden;
  white-space: nowrap;
  /* hide text */
  color: transparent;
  z-index: 3; }

.cd-search-trigger:before, .cd-search-trigger:after {
  /* search icon */
  content: '';
  position: absolute;
  -webkit-transition: opacity 0.3s;
     -moz-transition: opacity 0.3s;
       -o-transition: opacity 0.3s;
          transition: opacity 0.3s;
  /* Force Hardware Acceleration in WebKit */
  -webkit-transform: translateZ(0);
     -moz-transform: translateZ(0);
          transform: translateZ(0);
  -webkit-backface-visibility: hidden;
     -moz-backface-visibility: hidden;
          backface-visibility: hidden; }
.cd-search-trigger:before {
  /* lens */
  top: 11px;
  left: 11px;
  width: 18px;
  height: 18px;
  -moz-border-radius: 50%;
       border-radius: 50%;
  border: 3px solid #455652; }
.cd-search-trigger:after {
  /* handle */
  height: 3px;
  width: 8px;
  background: #455652;
  bottom: 14px;
  right: 11px;
  -webkit-transform: rotate(45deg);
     -moz-transform: rotate(45deg);
      -ms-transform: rotate(45deg);
       -o-transform: rotate(45deg);
          transform: rotate(45deg); }
.cd-search-trigger span {
  /* container for the X icon */
  position: absolute;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0; }
.cd-search-trigger span:before, .cd-search-trigger span:after {
  /* close icon */
  content: '';
  position: absolute;
  display: inline-block;
  height: 3px;
  width: 22px;
  top: 50%;
  margin-top: -2px;
  left: 50%;
  margin-left: -11px;
  background: #455652;
  opacity: 0;
  filter: alpha(opacity=0);
  /* Force Hardware Acceleration in WebKit */
  -webkit-transform: translateZ(0);
     -moz-transform: translateZ(0);
          transform: translateZ(0);
  -webkit-backface-visibility: hidden;
     -moz-backface-visibility: hidden;
          backface-visibility: hidden;
  -webkit-transition: opacity 0.3s, -webkit-transform 0.3s;
     -moz-transition: opacity 0.3s, -moz-transform 0.3s;
       -o-transition: opacity 0.3s, -o-transform 0.3s;
          transition: opacity 0.3s, transform 0.3s; }
.cd-search-trigger span:before {
  -webkit-transform: rotate(45deg);
     -moz-transform: rotate(45deg);
      -ms-transform: rotate(45deg);
       -o-transform: rotate(45deg);
          transform: rotate(45deg); }
.cd-search-trigger span:after {
  -webkit-transform: rotate(-45deg);
     -moz-transform: rotate(-45deg);
      -ms-transform: rotate(-45deg);
       -o-transform: rotate(-45deg);
          transform: rotate(-45deg); }
.cd-search-trigger.search-is-visible:before, .cd-search-trigger.search-is-visible:after {
  /* hide search icon */
  opacity: 0;
  filter: alpha(opacity=0); }
.cd-search-trigger.search-is-visible span:before, .cd-search-trigger.search-is-visible span:after {
  /* show close icon */
  opacity: 1;
  filter: alpha(opacity=100); }
.cd-search-trigger.search-is-visible span:before {
  -webkit-transform: rotate(135deg);
     -moz-transform: rotate(135deg);
      -ms-transform: rotate(135deg);
       -o-transform: rotate(135deg);
          transform: rotate(135deg); }
.cd-search-trigger.search-is-visible span:after {
  -webkit-transform: rotate(45deg);
     -moz-transform: rotate(45deg);
      -ms-transform: rotate(45deg);
       -o-transform: rotate(45deg);
          transform: rotate(45deg); }

.cd-nav-trigger span, .cd-nav-trigger span:before, .cd-nav-trigger span:after {
  /* hamburger icon in CSS */
  position: absolute;
  display: inline-block;
  height: 3px;
  width: 24px;
  background: #455652; }
.cd-nav-trigger span {
  /* line in the center */
  position: absolute;
  top: 50%;
  right: 10px;
  margin-top: -2px;
  -webkit-transition: background 0.3s 0.3s;
     -moz-transition: background 0.3s 0.3s;
       -o-transition: background 0.3s 0.3s;
          transition: background 0.3s 0.3s; }
.cd-nav-trigger span:before, .cd-nav-trigger span:after {
  /* other 2 lines */
  content: '';
  right: 0;
  /* Force Hardware Acceleration in WebKit */
  -webkit-transform: translateZ(0);
     -moz-transform: translateZ(0);
          transform: translateZ(0);
  -webkit-backface-visibility: hidden;
     -moz-backface-visibility: hidden;
          backface-visibility: hidden;
  -webkit-transform-origin: 0% 50%;
     -moz-transform-origin: 0% 50%;
      -ms-transform-origin: 0% 50%;
       -o-transform-origin: 0% 50%;
          transform-origin: 0% 50%;
  -webkit-transition: -webkit-transform 0.3s 0.3s;
     -moz-transition: -moz-transform 0.3s 0.3s;
       -o-transition: -o-transform 0.3s 0.3s;
          transition: transform 0.3s 0.3s; }
.cd-nav-trigger span:before {
  /* menu icon top line */
  top: -6px; }
.cd-nav-trigger span:after {
  /* menu icon bottom line */
  top: 6px; }
.cd-nav-trigger.nav-is-visible span {
  /* hide line in the center */
  background: rgba(69, 86, 82, 0); }
.cd-nav-trigger.nav-is-visible span:before, .cd-nav-trigger.nav-is-visible span:after {
  /* keep visible other 2 lines */
  background: #455652; }
.cd-nav-trigger.nav-is-visible span:before {
  -webkit-transform: translateX(4px) translateY(-3px) rotate(45deg);
     -moz-transform: translateX(4px) translateY(-3px) rotate(45deg);
      -ms-transform: translateX(4px) translateY(-3px) rotate(45deg);
       -o-transform: translateX(4px) translateY(-3px) rotate(45deg);
          transform: translateX(4px) translateY(-3px) rotate(45deg); }
.cd-nav-trigger.nav-is-visible span:after {
  -webkit-transform: translateX(4px) translateY(2px) rotate(-45deg);
     -moz-transform: translateX(4px) translateY(2px) rotate(-45deg);
      -ms-transform: translateX(4px) translateY(2px) rotate(-45deg);
       -o-transform: translateX(4px) translateY(2px) rotate(-45deg);
          transform: translateX(4px) translateY(2px) rotate(-45deg); }

.cd-primary-nav, .cd-primary-nav ul {
  position: fixed;
  top: 0;
  right: 0;
  height: 100%;
  width: 260px;
  background: #455652;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  z-index: 1;
  /* Force Hardware Acceleration in WebKit */
  -webkit-transform: translateZ(0);
     -moz-transform: translateZ(0);
          transform: translateZ(0);
  -webkit-transform: translateX(0);
     -moz-transform: translateX(0);
      -ms-transform: translateX(0);
       -o-transform: translateX(0);
          transform: translateX(0);
  -webkit-transition: -webkit-transform 0.3s;
     -moz-transition: -moz-transform 0.3s;
       -o-transition: -o-transform 0.3s;
          transition: transform 0.3s; }
  .cd-primary-nav a, .cd-primary-nav ul a {
    display: block;
    font-size: 19px;
    font-size: 1.2rem;
    height: 50px;
    line-height: 50px;
    padding: 0 20px;
    color: #fff;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    border-bottom: 1px solid #50645f;
    -webkit-transform: translateZ(0);
       -moz-transform: translateZ(0);
            transform: translateZ(0);
    will-change: transform, opacity;
    -webkit-transition: -webkit-transform 0.3s, opacity 0.3s;
       -moz-transition: -moz-transform 0.3s, opacity 0.3s;
         -o-transition: -o-transform 0.3s, opacity 0.3s;
            transition: transform 0.3s, opacity 0.3s; }
  .cd-primary-nav.is-hidden, .cd-primary-nav ul.is-hidden {
    /* secondary navigations hidden by default */
    -webkit-transform: translateX(100%);
       -moz-transform: translateX(100%);
        -ms-transform: translateX(100%);
         -o-transform: translateX(100%);
            transform: translateX(100%); }
  .cd-primary-nav.moves-out > li > a, .cd-primary-nav ul.moves-out > li > a {
    /* push the navigation items to the left - and lower down opacity - when secondary nav slides in */
    -webkit-transform: translateX(-100%);
       -moz-transform: translateX(-100%);
        -ms-transform: translateX(-100%);
         -o-transform: translateX(-100%);
            transform: translateX(-100%);
    opacity: 0;
    filter: alpha(opacity=0); }

.cd-primary-nav .see-all a {
  /* different style for the See all button on mobile and tablet */
  color: #267e64; }
.cd-primary-nav .cd-nav-gallery .cd-nav-item, .cd-primary-nav .cd-nav-icons .cd-nav-item {
  /* items with picture (or icon) and title */
  height: 80px;
  line-height: 80px; }
  .cd-primary-nav .cd-nav-gallery .cd-nav-item h3, .cd-primary-nav .cd-nav-icons .cd-nav-item h3 {
    overflow: hidden;
    text-overflow: ellipsis; }
.cd-primary-nav .cd-nav-gallery .cd-nav-item {
  padding-left: 90px; }
  .cd-primary-nav .cd-nav-gallery .cd-nav-item img {
    position: absolute;
    display: block;
    height: 40px;
    width: auto;
    left: 20px;
    top: 50%;
    margin-top: -20px; }
.cd-primary-nav .cd-nav-icons .cd-nav-item {
  padding-left: 75px; }
  .cd-primary-nav .cd-nav-icons .cd-nav-item p {
    color: #455652;
    font-size: 20px;
    font-size: 1.3rem;
    /* hide description on small devices */
    display: none; }
  .cd-primary-nav .cd-nav-icons .cd-nav-item:before {
    /* item icon */
    content: '';
    display: block;
    position: absolute;
    left: 20px;
    top: 50%;
    margin-top: -20px;
    width: 40px;
    height: 40px;
    background-repeat: no-repeat;
    background-position: center center;
    -moz-background-size: 40px 40px;
         background-size: 40px 40px; }
  .cd-primary-nav .cd-nav-icons .cd-nav-item.item-1:before {
    background-image: url("/images/line-icon-1.svg"); }
  .cd-primary-nav .cd-nav-icons .cd-nav-item.item-2:before {
    background-image: url("/images/line-icon-2.svg"); }
  .cd-primary-nav .cd-nav-icons .cd-nav-item.item-3:before {
    background-image: url("/images/line-icon-3.svg"); }
  .cd-primary-nav .cd-nav-icons .cd-nav-item.item-4:before {
    background-image: url("/images/line-icon-4.svg"); }
  .cd-primary-nav .cd-nav-icons .cd-nav-item.item-5:before {
    background-image: url("/images/line-icon-5.svg"); }
  .cd-primary-nav .cd-nav-icons .cd-nav-item.item-6:before {
    background-image: url("/images/line-icon-6.svg"); }
  .cd-primary-nav .cd-nav-icons .cd-nav-item.item-7:before {
    background-image: url("/images/line-icon-7.svg"); }
  .cd-primary-nav .cd-nav-icons .cd-nav-item.item-8:before {
    background-image: url("/images/line-icon-8.svg"); }

.has-children > a, .go-back a {
  position: relative; }
  .has-children > a:before, .has-children > a:after, .go-back a:before, .go-back a:after {
    /* arrow icon in CSS - for element with nested unordered lists */
    content: '';
    position: absolute;
    top: 50%;
    margin-top: -1px;
    display: inline-block;
    height: 2px;
    width: 10px;
    background: #5c726d;
    -webkit-backface-visibility: hidden;
       -moz-backface-visibility: hidden;
            backface-visibility: hidden; }
  .has-children > a:before, .go-back a:before {
    -webkit-transform: rotate(45deg);
       -moz-transform: rotate(45deg);
        -ms-transform: rotate(45deg);
         -o-transform: rotate(45deg);
            transform: rotate(45deg); }
  .has-children > a:after, .go-back a:after {
    -webkit-transform: rotate(-45deg);
       -moz-transform: rotate(-45deg);
        -ms-transform: rotate(-45deg);
         -o-transform: rotate(-45deg);
            transform: rotate(-45deg); }

.has-children > a {
  padding-right: 40px; }
  .has-children > a:before, .has-children > a:after {
    /* arrow goes on the right side - children navigation */
    right: 20px;
    -webkit-transform-origin: 9px 50%;
       -moz-transform-origin: 9px 50%;
        -ms-transform-origin: 9px 50%;
         -o-transform-origin: 9px 50%;
            transform-origin: 9px 50%; }

.cd-primary-nav .go-back a {
  padding-left: 40px; }
  .cd-primary-nav .go-back a:before, .cd-primary-nav .go-back a:after {
    /* arrow goes on the left side - go back button */
    left: 20px;
    -webkit-transform-origin: 1px 50%;
       -moz-transform-origin: 1px 50%;
        -ms-transform-origin: 1px 50%;
         -o-transform-origin: 1px 50%;
            transform-origin: 1px 50%; }

.cd-search {
  position: absolute;
  height: 50px;
  width: 100%;
  top: 50px;
  left: 0;
  z-index: 3;
  opacity: 0;
  filter: alpha(opacity=0);
  visibility: hidden;
  -webkit-transition: opacity .3s 0s, visibility 0s .3s;
     -moz-transition: opacity .3s 0s, visibility 0s .3s;
       -o-transition: opacity .3s 0s, visibility 0s .3s;
          transition: opacity .3s 0s, visibility 0s .3s; }
  .cd-search form {
    height: 100%;
    width: 100%; }
  .cd-search input {
    -moz-border-radius: 0;
         border-radius: 0;
    border: none;
    background: #fff;
    font-family: serif;
    height: 100%;
    width: 100%;
    font-size: 32px;
    font-size: 2rem;
    padding: 0 5%;
    appearance: none; }
    .cd-search input::-webkit-input-placeholder, .cd-search input::-moz-placeholder, .cd-search input:-ms-input-placeholder {
      color: #cacdcf; }
    .cd-search input:focus {
      outline: none; }
  .cd-search.is-visible {
    opacity: 1;
    filter: alpha(opacity=100);
    visibility: visible;
    -webkit-transition: opacity .3s 0s, visibility 0s 0s;
       -moz-transition: opacity .3s 0s, visibility 0s 0s;
         -o-transition: opacity .3s 0s, visibility 0s 0s;
            transition: opacity .3s 0s, visibility 0s 0s; }
  .nav-is-fixed .cd-search {
    position: fixed; }

.cd-overlay {
  /* shadow layer visible when navigation is active */
  position: fixed;
  z-index: 2;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
  cursor: pointer;
  visibility: hidden;
  opacity: 0;
  filter: alpha(opacity=0);
  -webkit-backface-visibility: hidden;
     -moz-backface-visibility: hidden;
          backface-visibility: hidden;
  -webkit-transition: opacity 0.3s 0s, visibility 0s 0.3s, -webkit-transform 0.3s 0s;
     -moz-transition: opacity 0.3s 0s, visibility 0s 0.3s, -moz-transform 0.3s 0s;
       -o-transition: opacity 0.3s 0s, visibility 0s 0.3s, -o-transform 0.3s 0s;
          transition: opacity 0.3s 0s, visibility 0s 0.3s, transform 0.3s 0s; }
  .cd-overlay.is-visible {
    opacity: 1;
    filter: alpha(opacity=100);
    visibility: visible;
    -webkit-transition: opacity 0.3s 0s, visibility 0s 0s, -webkit-transform 0.3s 0s;
       -moz-transition: opacity 0.3s 0s, visibility 0s 0s, -moz-transform 0.3s 0s;
         -o-transition: opacity 0.3s 0s, visibility 0s 0s, -o-transform 0.3s 0s;
            transition: opacity 0.3s 0s, visibility 0s 0s, transform 0.3s 0s; }

/* --------------------------------
 *
 *support for no js
 *
 *-------------------------------- */
.no-js .cd-primary-nav {
  position: relative;
  height: auto;
  width: 100%;
  overflow: visible;
  visibility: visible;
  z-index: 2; }

.no-js .cd-search {
  position: relative;
  top: 0;
  opacity: 1;
  filter: alpha(opacity=100);
  visibility: visible; }

.nav-footer {
  padding: 30px 20px 20px;
  text-align: left; }
  .nav-footer__heading {
    font-family: News Cycle, sans-serif;
    font-size: 16px;
    font-size: 1rem;
    font-weight: 700;
    margin-bottom: 16px;
    margin-bottom: 1rem; }
    .nav-footer__heading a {
      color: #333; }
      .nav-footer__heading a:hover {
        color: #267e64; }
  .nav-footer__link {
    font-size: 14px; }
  .nav-footer__box {
    padding: 0 10px;
    vertical-align: top; }
  .nav-footer__box-narrow {
    padding: 0 10px;
    vertical-align: top; }
  .nav-footer__button {
    border-width: 1px;
    color: #267e64;
    font-size: 14px;
    font-size: .9rem;
    margin-bottom: 16px;
    margin-bottom: 1rem;
    padding: 8px 16px;
    padding: .5rem 1rem; }
  .nav-footer__sub-links {
    font-size: 14px; }
    .nav-footer__sub-links a {
      color: #333; }
      .nav-footer__sub-links a:hover {
        color: #267e64; }
    .nav-footer__sub-links li:nth-child(1) {
      font-family: News Cycle, sans-serif;
      font-size: 16px;
      font-size: 1rem;
      font-weight: 700;
      margin-bottom: 8px;
      margin-bottom: .5rem; }

.banner-tall {
  background-image: url(images/boat.jpg);
  background-position: center;
  -moz-background-size: cover;
       background-size: cover;
  height: 200px;
  position: relative; }
  .banner-tall__headline {
    bottom: 48px;
    bottom: 3rem;
    color: #fff;
    font-family: serif;
    font-size: 80px;
    font-size: 5rem;
    font-weight: 400;
    left: 32px;
    left: 2rem;
    line-height: 1;
    position: absolute;
    margin: 0 0 16px 16px;
    margin: 0 0 1rem 1rem;
    text-shadow: 2px 2px 2px #333; }

.banner-standard {
  background: #267e64;
  color: #fff;
  display: table;
  height: 340px; }
  .banner-standard__box {
    padding: 16px 32px;
    padding: 1rem 2rem; }
  .banner-standard__heading {
    color: #fff; }
  .banner-standard__media {
    background-color: #edeeeb; }
  .banner-standard__media-approach {
    background-image: url(../images/meeting.jpg);
    background-position: center;
    -moz-background-size: cover;
         background-size: cover; }
  .banner-standard__media-leadership {
    background-image: url(../images/people.jpg);
    background-position: center;
    -moz-background-size: cover;
         background-size: cover; }

.banner-panorama {
  background-image: url(../images/trees.jpg);
  background-position: center;
  -moz-background-size: cover;
       background-size: cover;
  height: 255px; }

.card-diptic {
  display: table;
  border-top: 1px solid #ccc;
  border-bottom: 1px solid #ccc; }
  .card-diptic__box {
    display: table-cell;
    vertical-align: middle;
    padding: 32px 16px;
    padding: 2rem 1rem; }
  .card-diptic__heading {
    text-align: center; }
  .card-diptic__media {
    background-color: #267e64;
    height: 150px;
    overflow: hidden;
    margin-bottom: 32px;
    margin-bottom: 2rem; }
  .card-diptic__text {
    text-align: center;
    margin-bottom: 32px;
    margin-bottom: 2rem; }
  .card-diptic ul {
    list-style: none;
    text-align: center; }
    .card-diptic ul li {
      display: inline-block;
      padding: 8px;
      padding: .5rem;
      width: 47%; }
  .card-diptic__link {
    color: #267e64;
    display: inline-block;
    font-family: Playfair Display, serif;
    padding: 0 6px;
    padding: 0 .4rem; }
    .card-diptic__link:hover {
      color: #455652; }

.card-bio {
  padding-bottom: 32px;
  padding-bottom: 2rem; }
  .card-bio__box {
    padding-left: 32px;
    padding-left: 2rem;
    padding-top: 0;
    vertical-align: top; }
  .card-bio__heading {
    color: #267e64;
    font-family: Playfair Display, serif;
    font-size: 32px;
    font-size: 2rem;
    font-weight: 400;
    line-height: 1; }
  .card-bio__subtitle {
    color: #ccc; }
  .card-bio__text * + * {
    margin-top: 16px;
    margin-top: 1rem; }

.card-article__box {
  -moz-box-shadow: 0 1px 0 #267e64;
       box-shadow: 0 1px 0 #267e64;
  display: none;
  padding-top: 24px;
  padding-bottom: 24px; }
  .card-article__box * + * {
    margin-top: 16px;
    margin-top: 1rem; }
.card-article h2 {
  color: #267e64;
  font-family: Playfair Display, serif;
  font-size: 32px;
  font-size: 2rem;
  font-weight: 400;
  line-height: 1; }
.card-article small {
  color: #ccc;
  font-size: 12px;
  font-size: .75rem; }

.loader__nav {
  display: table-cell; }

.card-triptic {
  display: table;
  border-top: 1px solid #ccc;
  border-bottom: 1px solid #ccc; }
  .card-triptic__box {
    padding: 32px;
    padding: 2rem;
    vertical-align: top; }
  .card-triptic__media {
    height: 150px;
    overflow: hidden;
    margin-bottom: 32px;
    margin-bottom: 2rem; }
  .card-triptic__heading-link {
    color: #267e64;
    font-family: Playfair Display, serif;
    font-size: 22px;
    font-size: 1.375rem;
    font-weight: 400;
    line-height: 1;
    color: #267e64;
    display: inline-block;
    text-align: center; }
    .card-triptic__heading-link:hover {
      color: #455652; }
  .card-triptic__text {
    text-align: center; }

.cta-contact {
  background-color: #eceee6;
  display: table; }
  .cta-contact__box {
    padding: 32px;
    padding: 2rem; }
  .cta-contact__box:nth-child(2) {
    padding: 32px 0;
    padding: 2rem 0; }
  .cta-contact__text {
    margin: 0;
    padding: 0 56px 0 32px;
    padding: 0 3.5rem 0 2rem; }
  .cta-contact__button {
    display: inline-block;
    margin: 0 32px 0 0;
    margin: 0 2rem 0 0; }

.cta-teaser {
  display: table;
  padding: 16px 32px;
  padding: 1rem 2rem; }
  .cta-teaser__box {
    padding-right: 32px;
    padding-right: 2rem; }
  .cta-teaser__text {
    margin-bottom: 32px;
    margin-bottom: 2rem; }
  .cta-teaser__media {
    height: 300px;
    overflow: hidden; }

.cta-center {
  padding: 32px;
  padding: 2rem;
  text-align: center; }
  .cta-center__text {
    padding: 0 128px;
    padding: 0 8rem;
    margin-bottom: 32px;
    margin-bottom: 2rem; }

.cta-subscribe {
  background-color: #267e64;
  color: #fff;
  padding-top: 24px;
  padding-bottom: 36px; }
  .cta-subscribe__heading {
    color: #fff;
    text-align: center; }
  .cta-subscribe__box {
    display: table;
    margin: 0 auto;
    width: 75%; }
  .cta-subscribe__input {
    padding: 14px;
    padding: .9rem;
    width: 100%; }
  .cta-subscribe__button {
    border: 1px solid #fff;
    color: #fff;
    font-size: 24px;
    font-size: 1.5rem;
    margin-left: 16px;
    margin-left: 1rem;
    width: 100%; }
  .cta-subscribe__message {
    display: none;
    padding-top: 40px;
    padding-top: 2.5rem; }

.cta-sidebar {
  padding: 16px 0 0 80px;
  padding: 1rem 0 0 5rem;
  vertical-align: top; }
  .cta-sidebar__heading {
    font-size: 20px;
    font-size: 1.25rem;
    margin-top: 12px;
    margin-bottom: 12px; }
  .cta-sidebar__button {
    margin-top: 16px;
    margin-top: 1rem; }

.cta-social {
  padding-left: 16px;
  padding-left: 1rem; }
  .cta-social .icon {
    fill: #267e64; }
    .cta-social .icon:hover {
      fill: #ccc; }

footer {
  padding-bottom: 205px; }

.footer-copyright {
  border-top: 1px solid #e5e6e7;
  display: table;
  padding: 32px;
  padding: 2rem;
  width: 100%; }
  .footer-copyright__logo-box {
    width: 450px; }
  .footer-copyright__box {
    text-align: right; }
    .footer-copyright__box small {
      display: inline-block;
      font-size: 14px;
      padding-right: 8px;
      padding-right: .5rem; }
      .footer-copyright__box small:before {
        content: '|'; }
      .footer-copyright__box small:nth-child(1):before {
        content: ' '; }
    .footer-copyright__box .nav-minor li a {
      font-size: 14px; }

.footer-disclaimer {
  text-align: center;
  width: 100%; }
  .footer-disclaimer__box {
    border: 1px solid #455652;
    display: inline-block;
    text-align: center;
    padding: 20px;
    margin: 50px auto 10px; }
  .footer-disclaimer h6, .footer-disclaimer p, .footer-disclaimer ul {
    font-size: 14px;
    margin-bottom: 16px;
    margin-bottom: 1rem; }
  .footer-disclaimer ul {
    margin-top: 0; }
    .footer-disclaimer ul li {
      display: inline-block;
      margin: 0 10px;
      padding: 8px;
      padding: .5rem; }

@-webkit-keyframes fadeIn {
  from {
    opacity: 0;
    filter: alpha(opacity=0); }

  to {
    opacity: 1;
    filter: alpha(opacity=100); } }

@-moz-keyframes fadeIn {
  from {
    opacity: 0;
    filter: alpha(opacity=0); }

  to {
    opacity: 1;
    filter: alpha(opacity=100); } }

@-o-keyframes fadeIn {
  from {
    opacity: 0;
    filter: alpha(opacity=0); }

  to {
    opacity: 1;
    filter: alpha(opacity=100); } }

@keyframes fadeIn {
  from {
    opacity: 0;
    filter: alpha(opacity=0); }

  to {
    opacity: 1;
    filter: alpha(opacity=100); } }

.header__logo-box {
  background-color: #fff;
  border-left: 1px solid #ccc;
  border-right: 1px solid #ccc;
  margin: 0 auto;
  padding-top: 16px;
  padding-top: 1rem;
  max-width: 1200px; }

.header__logo {
  background: #fff; }

.logo {
  display: block;
  padding: 16px;
  padding: 1rem;
  width: 600px; }

svg path, svg polygon {
  fill: #267e64; }
svg:hover path, svg:hover polygon {
  opacity: .7;
  filter: alpha(opacity=70);
  -webkit-transition: fill 0.2s ease;
     -moz-transition: fill 0.2s ease;
       -o-transition: fill 0.2s ease;
          transition: fill 0.2s ease; }

.logo__stretched {
  display: block; }

.logo__stacked {
  display: none; }

.logo__globe path {
  opacity: 0;
  filter: alpha(opacity=0);
  -webkit-animation: fadeIn ease-in 1;
     -moz-animation: fadeIn ease-in 1;
       -o-animation: fadeIn ease-in 1;
          animation: fadeIn ease-in 1;
  -webkit-animation-fill-mode: forwards;
     -moz-animation-fill-mode: forwards;
       -o-animation-fill-mode: forwards;
          animation-fill-mode: forwards;
  -webkit-animation-duration: .5s;
     -moz-animation-duration: .5s;
       -o-animation-duration: .5s;
          animation-duration: .5s; }
.logo__globe path:nth-child(1) {
  -webkit-animation-delay: 0.1s;
     -moz-animation-delay: 0.1s;
       -o-animation-delay: 0.1s;
          animation-delay: 0.1s; }
.logo__globe path:nth-child(2) {
  -webkit-animation-delay: 0.11s;
     -moz-animation-delay: 0.11s;
       -o-animation-delay: 0.11s;
          animation-delay: 0.11s; }
.logo__globe path:nth-child(3) {
  -webkit-animation-delay: 0.22s;
     -moz-animation-delay: 0.22s;
       -o-animation-delay: 0.22s;
          animation-delay: 0.22s; }
.logo__globe path:nth-child(4) {
  -webkit-animation-delay: 0.13s;
     -moz-animation-delay: 0.13s;
       -o-animation-delay: 0.13s;
          animation-delay: 0.13s; }
.logo__globe path:nth-child(5) {
  -webkit-animation-delay: 0.14s;
     -moz-animation-delay: 0.14s;
       -o-animation-delay: 0.14s;
          animation-delay: 0.14s; }
.logo__globe path:nth-child(6) {
  -webkit-animation-delay: 0.15s;
     -moz-animation-delay: 0.15s;
       -o-animation-delay: 0.15s;
          animation-delay: 0.15s; }
.logo__globe path:nth-child(7) {
  -webkit-animation-delay: 0.16s;
     -moz-animation-delay: 0.16s;
       -o-animation-delay: 0.16s;
          animation-delay: 0.16s; }
.logo__globe path:nth-child(8) {
  -webkit-animation-delay: 0.37s;
     -moz-animation-delay: 0.37s;
       -o-animation-delay: 0.37s;
          animation-delay: 0.37s; }
.logo__globe path:nth-child(9) {
  -webkit-animation-delay: 0.18s;
     -moz-animation-delay: 0.18s;
       -o-animation-delay: 0.18s;
          animation-delay: 0.18s; }
.logo__globe path:nth-child(10) {
  -webkit-animation-delay: 0.19s;
     -moz-animation-delay: 0.19s;
       -o-animation-delay: 0.19s;
          animation-delay: 0.19s; }
.logo__globe path:nth-child(11) {
  -webkit-animation-delay: 0.2s;
     -moz-animation-delay: 0.2s;
       -o-animation-delay: 0.2s;
          animation-delay: 0.2s; }
.logo__globe path:nth-child(12) {
  -webkit-animation-delay: 0.21s;
     -moz-animation-delay: 0.21s;
       -o-animation-delay: 0.21s;
          animation-delay: 0.21s; }
.logo__globe path:nth-child(13) {
  -webkit-animation-delay: 0.12s;
     -moz-animation-delay: 0.12s;
       -o-animation-delay: 0.12s;
          animation-delay: 0.12s; }
.logo__globe path:nth-child(14) {
  -webkit-animation-delay: 0.23s;
     -moz-animation-delay: 0.23s;
       -o-animation-delay: 0.23s;
          animation-delay: 0.23s; }
.logo__globe path:nth-child(15) {
  -webkit-animation-delay: 0.34s;
     -moz-animation-delay: 0.34s;
       -o-animation-delay: 0.34s;
          animation-delay: 0.34s; }
.logo__globe path:nth-child(16) {
  -webkit-animation-delay: 0.25s;
     -moz-animation-delay: 0.25s;
       -o-animation-delay: 0.25s;
          animation-delay: 0.25s; }

.main-standard, .main-news, .main-post {
  display: table;
  padding: 16px 32px;
  padding: 1rem 2rem; }

.main-standard {
  padding-bottom: 80px;
  padding-bottom: 5rem; }
  .main-standard__text * + * {
    margin-top: 16px;
    margin-top: 1rem; }
  .main-standard__text h2 {
    color: #267e64;
    font-family: Playfair Display, serif;
    font-size: 32px;
    font-size: 2rem;
    font-weight: 400;
    line-height: 1;
    padding-top: 24px;
    padding-bottom: 0px; }

.main-bios {
  display: table;
  padding: 32px;
  padding: 2rem; }
.main-post__text * + * {
  margin-top: 16px;
  margin-top: 1rem; }
.main-post__text h2 {
  color: #267e64;
  font-family: Playfair Display, serif;
  font-size: 32px;
  font-size: 2rem;
  font-weight: 400;
  line-height: 1; }
.main-post__text h3 {
  color: #455652;
  font-family: Playfair Display, serif;
  font-size: 20px;
  font-size: 1.25rem;
  font-weight: 700;
  line-height: 1;
  text-transform: uppercase;
  margin-top: 36px;
  margin-bottom: 0px; }
.main-post__text figcaption {
  color: #ccc;
  font-size: 12px;
  font-size: .75rem;
  margin-top: 0; }
.main-post__text blockquote {
  color: #267e64;
  font-family: Playfair Display, serif;
  font-size: 24px;
  font-size: 1.5rem;
  font-style: italic;
  font-weight: 700;
  margin-top: 36px;
  margin-bottom: 36px; }

.form-standard input, .form-standard input[type="email"], .form-standard input[type="number"], .form-standard input[type="password"], .form-standard input[type="search"], .form-standard input[type="tel"], .form-standard input[type="text"], .form-standard input[type="url"], .form-standard input[type="color"], .form-standard input[type="date"], .form-standard input[type="name"], .form-standard input[type="datetime"], .form-standard input[type="datetime-local"], .form-standard input[type="month"], .form-standard input[type="time"], .form-standard input[type="week"], .form-standard textarea {
  color: #333;
  border: 1px solid #ccc;
  border-box-sizing: content-box;
  -moz-border-radius: 0;
       border-radius: 0;
  border-radius-font-size: 1rem;
  padding: 16px;
  padding: 1rem;
  display: block;
  width: 100%; }
.form-standard label {
  display: block; }
.form-standard input[type="button"], .form-standard input[type="reset"], .form-standard input[type="submit"] {
  display: block; }
.form-standard__checkbox {
  display: inline-block; }
.form-standard__checkbox + label {
  display: inline-block; }
.form-standard .selectbox {
  background: #fff;
  -moz-border-radius: 0;
       border-radius: 0;
  cursor: pointer;
  position: relative;
  height: 48px; }
.form-standard select {
  background: #fff;
  -moz-box-shadow: none;
       box-shadow: none;
  -moz-border-radius: 0;
       border-radius: 0;
  border: 1px solid #ccc;
  color: #333;
  cursor: pointer;
  display: block;
  font-size: 16px;
  font-size: 1rem;
  height: 45px;
  padding: 16px;
  padding: 1rem;
  position: relative;
  width: 100%; }



@media (max-width: 768px) {

  [class*='col-'] {
    display: inline-block;
    text-align: center; }

  .col-2-12 {
    width: 100%; }

  .col-3-12 {
    width: 100%; }

  .col-4-12 {
    width: 100%; }

  .col-5-12 {
    width: 100%; }

  .col-6-12 {
    width: 100%; }

  .col-7-12 {
    width: 100%; }

  .col-8-12 {
    width: 100%; }

  .col-9-12 {
    width: 100%; }

  .col-10-12 {
    width: 100%; }

  .col-11-12 {
    width: 100%; }

  .nav-minor__container {
    display: none; }

  .nav-footer {
    display: none; }

  .banner-standard__media-approach {
    height: 300px; }

  .banner-standard__media-leadership {
    height: 300px; }

  .card-diptic {
    -webkit-flex-flow: column;
        -ms-flex-flow: column;
            flex-flow: column; }

  .card-bio {
    border-bottom: 1px solid #e5e6e7;
    margin-bottom: 2rem; }

  .card-bio__media {
    margin-bottom: 1rem;
    text-align: center; }

  .card-bio__media img {
    display: inline-block;
    width: 33%; }

  .card-bio__box {
    padding: 0; }

  .card-bio__text {
    text-align: left; }

  .cta-contact__text {
    padding: 0; }

  .cta-contact__button {
    margin: 0; }

  .cta-teaser {
    -webkit-flex-flow: column;
        -ms-flex-flow: column;
            flex-flow: column; }

  .cta-teaser__box {
    padding: 0; }

  .cta-teaser__media {
    height: 150px;
    margin-top: 2rem; }

  .cta-center__text {
    padding: 0; }

  .cta-subscribe__button {
    margin: 1rem 0 0 0; }

  .cta-sidebar {
    padding: 3rem 2rem; }

  footer {
    padding: 0; }

  .footer-copyright {
    padding: 2rem 0 0 0; }

  .footer-copyright__logo-box {
    display: inline-block; }

  .footer-copyright__logo-box .logo__stacked {
    display: inline-block;
    width: 250px; }

  .main-standard__content {
    text-align: left; }

  .main-post__text {
    text-align: left; } }



@media (max-width: 700px) {

  tr {
    margin-top: 0 !important; }

  tr:first-child {
    border-top: 1px solid #e5e6e7; }

  td {
    margin-top: 0 !important;
    position: relative;
    padding-left: 40%; }

  td:before {
    position: absolute;
    top: 6px;
    left: 6px;
    width: 40%;
    padding-right: 10px;
    white-space: nowrap;
    font-weight: 600; }

  td:nth-of-type(1):before {
    content: "City: "; }

  td:nth-of-type(2):before {
    content: "Address: "; }

  td:nth-of-type(3):before {
    content: "Phone: "; }

  thead tr {
    position: absolute;
    top: -9999px;
    left: -9999px; }

  table, thead, tbody, th, td, tr {
    display: block; } }



@media (max-width: 1022px) {

  body.nav-on-left.overflow-hidden {
    overflow: hidden; }

  .cd-main-content.nav-is-visible {
    -webkit-transform: translateX(-260px);
       -moz-transform: translateX(-260px);
        -ms-transform: translateX(-260px);
         -o-transform: translateX(-260px);
            transform: translateX(-260px); }

  .nav-on-left .cd-main-content.nav-is-visible {
    -webkit-transform: translateX(260px);
       -moz-transform: translateX(260px);
        -ms-transform: translateX(260px);
         -o-transform: translateX(260px);
            transform: translateX(260px); }

  .cd-main-header.nav-is-visible {
    -webkit-transform: translateX(0);
       -moz-transform: translateX(0);
        -ms-transform: translateX(0);
         -o-transform: translateX(0);
            transform: translateX(0); }

  .nav-on-left .cd-main-header.nav-is-visible {
    -webkit-transform: translateX(260px);
       -moz-transform: translateX(260px);
        -ms-transform: translateX(260px);
         -o-transform: translateX(260px);
            transform: translateX(260px); }

  .nav-on-left .cd-logo {
    left: auto;
    right: 5%; }

  .nav-on-left .cd-header-buttons {
    right: auto;
    left: 5%; }

  .nav-on-left .cd-header-buttons li {
    float: right; }

  .nav-on-left .cd-primary-nav, .nav-on-left .cd-primary-nav ul {
    right: auto;
    left: 0; }

  .cd-primary-nav {

    /* by default .cd-primary-nav is hidden - trick for iOS devices where you can see the navigation if you pull down */
    visibility: hidden;
    -webkit-transition: visibility 0s 0.3s;
       -moz-transition: visibility 0s 0.3s;
         -o-transition: visibility 0s 0.3s;
            transition: visibility 0s 0.3s; }

  .cd-primary-nav.nav-is-visible {
    visibility: visible;
    -webkit-transition: visibility 0s 0s;
       -moz-transition: visibility 0s 0s;
         -o-transition: visibility 0s 0s;
            transition: visibility 0s 0s; }

  .cd-overlay.is-visible {
    -webkit-transform: translateX(0);
       -moz-transform: translateX(0);
        -ms-transform: translateX(0);
         -o-transform: translateX(0);
            transform: translateX(0); }

  .nav-on-left .cd-overlay.is-visible {
    -webkit-transform: translateX(260px);
       -moz-transform: translateX(260px);
        -ms-transform: translateX(260px);
         -o-transform: translateX(260px);
            transform: translateX(260px); }

  .cd-overlay.is-visible.search-is-visible, .nav-on-left .cd-overlay.is-visible.search-is-visible {
    -webkit-transform: translateX(0);
       -moz-transform: translateX(0);
        -ms-transform: translateX(0);
         -o-transform: translateX(0);
            transform: translateX(0); } }



@media (min-width: 1024px) {

  .cd-main-header {
    height: 80px; }

  .cd-main-header:after {
    content: "";
    display: table;
    clear: both; }

  .cd-logo {
    top: 26px;
    left: 4em; }

  .cd-header-buttons {
    top: 1rem;
    right: 1rem; }

  .cd-nav-trigger {
    display: none; }

  .cd-primary-nav {
    position: static;
    padding: 0 50px 0 0;
    height: auto;
    width: 100%;
    overflow: visible;
    background: transparent;
    text-align: center; }

  .cd-primary-nav:after {
    content: "";
    display: table;
    clear: both; }

  .cd-primary-nav.moves-out > li > a {

    /* reset mobile style */
    -webkit-transform: translateX(0);
       -moz-transform: translateX(0);
        -ms-transform: translateX(0);
         -o-transform: translateX(0);
            transform: translateX(0);
    opacity: 1;
    filter: alpha(opacity=100); }

  .cd-primary-nav ul {
    position: static;
    height: auto;
    width: auto;
    background: transparent;
    overflow: visible;
    text-align: left;
    z-index: 3; }

  .cd-primary-nav ul.is-hidden {

    /* reset mobile style */
    -webkit-transform: translateX(0);
       -moz-transform: translateX(0);
        -ms-transform: translateX(0);
         -o-transform: translateX(0);
            transform: translateX(0); }

  .cd-primary-nav ul.moves-out > li > a {

    /* reset mobile style */
    -webkit-transform: translateX(0);
       -moz-transform: translateX(0);
        -ms-transform: translateX(0);
         -o-transform: translateX(0);
            transform: translateX(0);
    opacity: 1;
    filter: alpha(opacity=100); }

  .cd-primary-nav > li {
    display: inline-block;
    margin-left: .5rem; }

  .cd-primary-nav > li > a {

    /* main navigation buttons style */
    position: relative;
    display: inline-block;
    height: 80px;
    line-height: 80px;
    padding: 0;
    color: #455652;
    overflow: visible;
    border-bottom: none;
    -webkit-transition: color 0.3s, box-shadow 0.3s;
       -moz-transition: color 0.3s, -moz-box-shadow 0.3s;
         -o-transition: color 0.3s, box-shadow 0.3s;
            transition: color 0.3s, box-shadow 0.3s; }

  .cd-primary-nav > li > a:hover {
    color: #267e64; }

  .cd-primary-nav > li > a.selected {
    color: #267e64;
    -moz-box-shadow: inset 0 -2px 0 #267e64;
         box-shadow: inset 0 -2px 0 #267e64; }

  .cd-primary-nav .go-back, .cd-primary-nav .see-all {
    display: none; }

  .cd-primary-nav .cd-secondary-nav, .cd-primary-nav .cd-nav-gallery, .cd-primary-nav .cd-nav-icons {

    /* dropdown menu style */
    position: absolute;
    top: 80px;
    width: 100%;
    background: #fff;
    padding: 2rem;
    -moz-box-shadow: inset 0 1px 0 #e5e6e7, 0 3px 6px rgba(0, 0, 0, 0.05);
         box-shadow: inset 0 1px 0 #e5e6e7, 0 3px 6px rgba(0, 0, 0, 0.05);
    -webkit-transform: translateX(0);
       -moz-transform: translateX(0);
        -ms-transform: translateX(0);
         -o-transform: translateX(0);
            transform: translateX(0);
    -webkit-transition: opacity .3s 0s, visibility 0s 0s;
       -moz-transition: opacity .3s 0s, visibility 0s 0s;
         -o-transition: opacity .3s 0s, visibility 0s 0s;
            transition: opacity .3s 0s, visibility 0s 0s; }

  .cd-primary-nav .cd-secondary-nav:after, .cd-primary-nav .cd-nav-gallery:after, .cd-primary-nav .cd-nav-icons:after {
    content: "";
    display: table;
    clear: both; }

  .cd-primary-nav .cd-secondary-nav.is-hidden, .cd-primary-nav .cd-nav-gallery.is-hidden, .cd-primary-nav .cd-nav-icons.is-hidden {
    opacity: 0;
    filter: alpha(opacity=0);
    visibility: hidden;
    -webkit-transition: opacity .3s 0s, visibility 0s .3s;
       -moz-transition: opacity .3s 0s, visibility 0s .3s;
         -o-transition: opacity .3s 0s, visibility 0s .3s;
            transition: opacity .3s 0s, visibility 0s .3s; }

  .cd-primary-nav .cd-secondary-nav > .see-all, .cd-primary-nav .cd-nav-gallery > .see-all, .cd-primary-nav .cd-nav-icons > .see-all {

    /* this is the BIG See all button at the bottom of the dropdown menu */
    display: block;
    position: absolute;
    left: 0;
    bottom: 0;
    height: 80px;
    width: 100%;
    overflow: hidden;

    /* reset some inherited style */
    margin: 0;
    padding: 0; }

  .cd-primary-nav .cd-secondary-nav > .see-all a, .cd-primary-nav .cd-nav-gallery > .see-all a, .cd-primary-nav .cd-nav-icons > .see-all a {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    font-size: 2.2rem;
    font-weight: bold;
    text-align: center;
    line-height: 80px;
    border-top: 1px solid #e5e6e7;

    /* reset some inherited style */
    border-bottom: none;
    margin: 0;
    padding: 0;
    -webkit-transition: color 0.2s, background 0.2s, border 0.2s;
       -moz-transition: color 0.2s, background 0.2s, border 0.2s;
         -o-transition: color 0.2s, background 0.2s, border 0.2s;
            transition: color 0.2s, background 0.2s, border 0.2s; }

  .cd-primary-nav .cd-secondary-nav > .see-all a:hover, .cd-primary-nav .cd-nav-gallery > .see-all a:hover, .cd-primary-nav .cd-nav-icons > .see-all a:hover {
    background: #455652;
    border-color: #455652;
    color: #fff; }

  .cd-primary-nav .cd-secondary-nav > li {

    /* change the height according to your needs - you can even set height: auto */
    height: 340px;

    /* here you set the number of columns - use width percentage */
    width: 23%;
    float: left;
    margin-right: 2.66%;
    border-right: 1px solid #e5e6e7;
    overflow: hidden;
    overflow-x: hidden;
    overflow-y: auto;
    -webkit-overflow-scrolling: touch; }

  .cd-primary-nav .cd-secondary-nav > li:nth-child(4n+2) {

    /* +2 because we have 2 list items with display:none */
    margin-right: 0;
    border-right: none; }

  .cd-primary-nav .cd-secondary-nav > li > a {

    /* secondary nav title */
    color: #267e64;
    font-weight: bold;
    font-size: 1.6rem;
    margin-bottom: .6em; }

  .cd-primary-nav .cd-secondary-nav a {
    height: 30px;
    line-height: 30px;
    padding: 0 18% 0 0;
    color: #455652;
    border-bottom: none;
    font-size: 1.4rem; }

  .cd-primary-nav .cd-secondary-nav a:hover {
    color: #267e64; }

  .cd-primary-nav .cd-secondary-nav ul {

    /* Force Hardware Acceleration in WebKit */
    -webkit-transform: translateZ(0);
       -moz-transform: translateZ(0);
            transform: translateZ(0); }

  .cd-primary-nav .cd-secondary-nav ul ul {

    /* tertiary navigation */
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%; }

  .cd-primary-nav .cd-secondary-nav ul ul.is-hidden {
    -webkit-transform: translateX(100%);
       -moz-transform: translateX(100%);
        -ms-transform: translateX(100%);
         -o-transform: translateX(100%);
            transform: translateX(100%); }

  .cd-primary-nav .cd-secondary-nav ul ul .go-back {
    display: block; }

  .cd-primary-nav .cd-secondary-nav ul ul .go-back a {
    color: transparent; }

  .cd-primary-nav .cd-secondary-nav ul ul .see-all {
    display: block; }

  .cd-primary-nav .cd-secondary-nav .moves-out > li > a {

    /* push the navigation items to the left - and lower down opacity - when tertiary nav slides in */
    -webkit-transform: translateX(-100%);
       -moz-transform: translateX(-100%);
        -ms-transform: translateX(-100%);
         -o-transform: translateX(-100%);
            transform: translateX(-100%); }

  .cd-primary-nav .cd-nav-gallery {
    -moz-box-shadow: 0 5px 5px rgba(100, 100, 100, 0.3);
         box-shadow: 0 5px 5px rgba(100, 100, 100, 0.3); }

  .cd-primary-nav .cd-nav-gallery li {

    /* set here number of columns - use width percentage */
    float: left;
    width: 25%;
    padding: 1rem; }

  .cd-primary-nav .cd-nav-gallery li:nth-child(4n+2) {

    /* +2 because we have two additional list items with display:none */ }

  .cd-primary-nav .cd-nav-gallery .cd-nav-item {
    border-bottom: none;
    padding: 0;
    height: auto;
    line-height: 1.2; }

  .cd-primary-nav .cd-nav-gallery .cd-nav-item img {
    position: static;
    margin-top: 0;
    height: auto;
    width: 100%;
    margin-bottom: .6rem; }

  .cd-primary-nav .cd-nav-gallery .cd-nav-item h3 {
    color: #267e64;
    font-weight: bold;
    font-size: .9rem;
    padding: 0 .4rem; }

  .cd-primary-nav .cd-nav-icons li {

    /* set here number of columns - use width percentage */
    width: 32%;
    float: left;
    margin: 0 2% 20px 0; }

  .cd-primary-nav .cd-nav-icons li:nth-child(3n+2) {

    /* +2 because we have two additional list items with display:none */
    margin-right: 0; }

  .cd-primary-nav .cd-nav-icons .cd-nav-item {
    border-bottom: none;
    height: 80px;
    line-height: 1.2;
    padding: 24px 0 0 85px; }

  .cd-primary-nav .cd-nav-icons .cd-nav-item:hover {
    background: #fafafb; }

  .cd-primary-nav .cd-nav-icons .cd-nav-item h3 {
    color: #267e64;
    font-weight: bold; }

  .cd-primary-nav .cd-nav-icons .cd-nav-item p {
    display: block; }

  .cd-primary-nav .cd-nav-icons .cd-nav-item:before {
    left: 25px; }

  .has-children > a:before, .has-children > a:after, .go-back a:before, .go-back a:after {
    background: #cacdcf; }

  .has-children > a:hover:before, .has-children > a:hover:after, .go-back a:hover:before, .go-back a:hover:after {
    background: #267e64; }

  .has-children > a:before, .has-children > a:after {
    right: 15%; }

  .cd-primary-nav > .has-children > a {

    /* main navigation arrows on larger devices */
    padding-right: 30px !important; }

  .cd-primary-nav > .has-children > a:before, .cd-primary-nav > .has-children > a:after {
    width: 9px;
    -webkit-transform-origin: 50% 50%;
       -moz-transform-origin: 50% 50%;
        -ms-transform-origin: 50% 50%;
         -o-transform-origin: 50% 50%;
            transform-origin: 50% 50%;
    background: #cacdcf;
    -webkit-backface-visibility: hidden;
       -moz-backface-visibility: hidden;
            backface-visibility: hidden;
    -webkit-transition: width 0.3s, -webkit-transform 0.3s;
       -moz-transition: width 0.3s, -moz-transform 0.3s;
         -o-transition: width 0.3s, -o-transform 0.3s;
            transition: width 0.3s, transform 0.3s; }

  .cd-primary-nav > .has-children > a:before {
    right: 12px; }

  .cd-primary-nav > .has-children > a:after {
    right: 7px; }

  .cd-primary-nav > .has-children > a.selected:before, .cd-primary-nav > .has-children > a.selected:after {
    width: 14px; }

  .cd-primary-nav > .has-children > a.selected:before {
    -webkit-transform: translateX(5px) rotate(-45deg);
       -moz-transform: translateX(5px) rotate(-45deg);
        -ms-transform: translateX(5px) rotate(-45deg);
         -o-transform: translateX(5px) rotate(-45deg);
            transform: translateX(5px) rotate(-45deg); }

  .cd-primary-nav > .has-children > a.selected:after {
    -webkit-transform: rotate(45deg);
       -moz-transform: rotate(45deg);
        -ms-transform: rotate(45deg);
         -o-transform: rotate(45deg);
            transform: rotate(45deg); }

  .cd-secondary-nav > .has-children > a:before, .cd-secondary-nav > .has-children > a:after {

    /* remove arrows on secondary nav titles */
    display: none; }

  .cd-primary-nav .go-back a {
    padding-left: 20px; }

  .cd-primary-nav .go-back a:before, .cd-primary-nav .go-back a:after {
    left: 1px; }

  .cd-search {
    height: 120px;
    top: 80px; }

  .cd-search input {
    -moz-box-sizing: border-box;
         box-sizing: border-box;
    border: none;
    color: #267e64;
    font-family: serif;
    padding: 0 2rem;
    font-size: 3.2rem; }

  .no-js .cd-primary-nav {
    position: absolute;
    z-index: 3;
    display: inline-block;
    width: auto;
    top: 0;
    right: 150px;
    padding: 0; }

  .no-js .nav-is-fixed .cd-primary-nav {
    position: fixed; } }



@media (min-width: 769px) {

  .banner-tall {
    height: 465px; }

  .card-diptic__box {
    padding: 2rem 1rem 2rem 2rem; }

  .card-diptic__box:nth-child(2) {
    border-left: 1px solid #ccc;
    padding: 2rem 2rem 2rem 1rem; }

  .card-triptic__box:nth-child(2) {
    border-left: 1px solid #ccc; }

  .card-triptic__box:nth-child(3) {
    border-left: 1px solid #ccc; } }



@media (max-width: 767px) {

  .banner-tall__headline {
    position: static;
    font-size: 2rem;
    padding: 2rem; } }



@media (min-width: 768px) and (min-width: 1023px) {

  .footer-copyright__box {
    text-align: right; }

  .footer-copyright__box small {
    font-size: 12px; }

  .footer-copyright__box .nav-minor li a {
    font-size: 12px; }

  .footer-disclaimer h6, .footer-disclaimer p, .footer-disclaimer ul {
    font-size: 12px; } }



@media (max-width: 899px) {

  .logo {
    width: 400px; }

  .logo__stretched {
    display: none; }

  .logo__stacked {
    display: block; } }



@media (max-width: 499px) {

  .logo {
    padding: 1rem;
    width: 300px; } }



/*# sourceMappingURL=data:application/json;base64, */
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9zb3VyY2UvdmVuZG9yL19ub3JtYWxpemUuc2NzcyIsInN0eWxlLmNzcyIsIi9zb3VyY2UvYmFzZS9fdHlwb2dyYXBoeS5zYXNzIiwiL3NvdXJjZS9iYXNlL19jb2xvcnMuc2FzcyIsIi9zb3VyY2UvYmFzZS9fY2xlYXItZml4LnNhc3MiLCIvc291cmNlL2Jhc2UvX2ltYWdlcy5zYXNzIiwiL3NvdXJjZS9iYXNlL19sYXlvdXQuc2FzcyIsIi9zb3VyY2UvYmFzZS9fZ2xvYmFsLnNhc3MiLCIvc291cmNlL2Jhc2UvX3RhYmxlcy5zYXNzIiwiL3NvdXJjZS9tb2R1bGVzL25hdi9fbmF2LW1pbm9yLnNhc3MiLCIvc291cmNlL21vZHVsZXMvbmF2L19uYXYtbWVnYS5zYXNzIiwiL3NvdXJjZS9tb2R1bGVzL25hdi9fbmF2LWZvb3Rlci5zYXNzIiwiL3NvdXJjZS9tb2R1bGVzL2Jhbm5lci9fX2Jhbm5lci5zYXNzIiwiL3NvdXJjZS9tb2R1bGVzL2NhcmRzL19fY2FyZHMuc2FzcyIsIi9zb3VyY2UvbW9kdWxlcy9jdGEvX19jdGEuc2FzcyIsIi9zb3VyY2UvbW9kdWxlcy9mb290ZXIvX2Zvb3Rlci5zYXNzIiwiL3NvdXJjZS9tb2R1bGVzL2hlYWRlci9faGVhZGVyLnNhc3MiLCIvc291cmNlL21vZHVsZXMvbWFpbi9fbWFpbi5zYXNzIiwiL3NvdXJjZS9tb2R1bGVzL2Zvcm0vX2Zvcm0uc2FzcyIsIi9zb3VyY2UvYmFzZS9faW5jbHVkZS1tZWRpYS5zYXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTRDNkM7RUFXekMsZ0JBQVMsRUFBQTs7QUFLTjtFQUdNLHVCQUFBLEVBQUE7O0FBVUg7RUFDTixlQUFTO0VBQ1QsV0FBUSxFQUFBOztBQVFGO0VBQ04sZUFBUyxFQUFBOztBQVliO0VBTUksZ0NBQTBCO0VBQzFCLDRCQUFzQixFQUFBOztBQWUxQjtFQUNJLFdBQVEsRUFBQTs7QUFZWjtFQUdJLHlCQUFZLEVBQUE7RUFVZjtJQUVPLFlBQVMsRUFBQTs7QUN6SGpCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7S0E4Qkk7QUR3SUE7RUFDQSwyQkFBZSxFQUFBOztBQUtuQjtFQUVpQixtQkFBQSxFQUFBOztBQVdqQjtFQUNnQixvQkFBQSxFQUFBOztBQUtoQjtFQUNnQixrQkFBQTtFQUNaLGFBQU8sRUFBQTs7QUFjSztFQUlaLCtCQUFhO0VBSWIsZ0JBQVcsRUFBQTs7QUFLZjtFQUNJLGtCQUFhO0VBQ0EsdUJBQUE7RUFDYix1QkFBVyxFQUFBOztBQUtmO0VBQ0kseUNBQVEsRUFBQTs7QUFlRDtFQUVILGFBQVM7RUFDVCxlQUFTLEVBQUE7O0FDM0xqQjs7S0FFSTtBRHNNQztFQUVELGdCQUFXO0VBQ1gsZ0JBQWE7RUFDYixvQkFBVTtFQUNWLDBCQUFnQixFQUFBOztBQUdwQjtFQUNJLGFBQUssRUFBQTs7QUFHVDtFQUNJLGlCQUFRLEVBQUE7O0FBbURaO0VBQ0ksV0FBUSxFQUFBOztBQVFUO0VBQ1csa0JBQUEsRUFBQTs7QUFTZDtFQUNZLFdBQUEsRUFBQTs7QUFnQlo7RUFDWSwyQkFBQTtFQUNSLGVBQVE7RUFDUixnQ0FBUyxFQUFBOztBQVFiO0VBQ0ksV0FBUTtFQUNDLFlBQUE7RUFDVCxxQkFBYSxFQUFBOztBQVdNO0VBSW5CLHNCQUFhO0VBQ2IsaUJBQVc7RUFDSCxXQUFBO0VBQ1IsMEJBQWdCLEVBQUE7O0FBUXBCO0VBQ0kscUJBQWEsRUFBQTs7QUFRakI7RUFFb0Isc0JBQUEsRUFBQTs7QUFXUDtFQUlULDRCQUFvQjtFQUNaLGlCQUFBLEVBQUE7O0FBUU07RUFFTixpQkFBQSxFQUFBOztBQU9jO0VBQ1YsV0FBQTtFQUNSLFlBQVMsRUFBQTs7QUFPakI7RUFDSSxnQkFBVTtFQUNWLHFCQUFnQixFQUFBOztBQVNwQjtFQUNJLDJCQUFpQjtFQUNELG1CQUFBLEVBQUE7O0FBTXBCO0VBQ1EsK0JBQW9CO0VBQ0gsOEJBQUE7RUFFTCx5QkFBQSxFQUFBO0VBSW9EO0lBRTVELDBCQUFvQixFQUFBO0FBUUg7RUFFeEIsNkJBQVk7T0FBWix3QkFBWTtFQUNaLFlBQVMsRUFBQTs7QUU1ZWQ7RUExQmlCLGlCQTJCZjtFQUN5QixvQ0FBQTtFQUN6QixxQ0FBd0IsRUFBQTs7QUFFMUI7RUNyQlcsYURzQlQ7RUFDQSxrQkFBYTtFQUNiLHFDQUFBO0VBQ0EsaUNBQWlCO09BQWpCLDRCQUFpQjtFQUNqQixXQUFRLEVBQUE7O0FBS1Y7RUN6Q1EsZ0JEMENOO0VBQ0Esc0NBQUE7RUFDQSxpQkFBVztFQUFYLG1CQUFXO0VBcENKLGtCQXFDUDtFQUNhLGdCQUFBO0VBQ2IscUJBQWU7RUFBZixxQkFBZSxFQUFBOztBQXNDakI7RUFHVSwyQkFBQTtFQUNSLHVCQUFTO0VBckZNLHNDQXNGZjtFQUNXLGlCQUFBO0VBQUEsbUJBQUE7RUFDWCxvQkFBWTtFQUNaLG9CQUFZO0VBQ0gsb0JBQUE7RUFBQSxzQkFBQTtFQUNULHVCQUFpQjtFRCtGakIsMEJBQXlCO0VDN0Z6QiwrQkFBa0I7RUFDbEIsZ0JBQUE7RUQrRkEseUJBQXdCO0VDN0Z4QixrQ0FBWTtLQUFaLCtCQUFZO09BQVosNkJBQVk7VUFBWiwwQkFBWSxFQUFBO0VBRWdCO0lEOEYxQixvQ0FBbUM7SUM1Rm5DLDJCQUFBO0lDcEdJLGFEcUdKLEVBQUE7O0FFekdKO0VBQ1csYUFBQTtFQUNULGdCQUFTO0VBQ1QsYUFBTyxFQUFBOztBQ0hJO0VBQ1gsYUFBTyxFQUFBOztBQ0RUO0VBQ0Usd0JBQWtCO0VBQ2xCLDZCQUFhO0VBQ0MsOEJBQUE7RUFDZCxnQkFBUTtFQUNSLG1CQUFXLEVBQUE7O0FBR2I7RUFDRSxxQkFBUztFQUNPLHdCQUFBLEVBQUE7O0FBTWxCO0VBQ1Msa0JBQUEsRUFBQTs7QUFLVDtFQUNFLFlBQU8sRUFBQTs7QUFLVDtFQUNFLGtCQUFPLEVBQUE7O0FBTVQ7RUFDRSxrQkFBTyxFQUFBOztBQU1UO0VBQ1MsWUFBQSxFQUFBOztBQU1UO0VBQ0Usa0JBQU8sRUFBQTs7QUFNVDtFQUNFLGtCQUFPLEVBQUE7O0FBTVQ7RUFDUyxZQUFBLEVBQUE7O0FBTVQ7RUFDRSxrQkFBTyxFQUFBOztBQUtUO0VBQ0Usa0JBQU8sRUFBQTs7QUM3RVQ7RUFDRSxXQUFRO0VBQ1IsWUFBUztFQUNHLDZCQUFBO09BQUEsd0JBQUEsRUFBQTtFQUVKO0lBQ00sNkJBQUE7U0FBQSx3QkFBQSxFQUFBOztBQUVoQjtFQUNFLDJCQUFBO0VBQ0EsWUFBUyxFQUFBOztBQUVYO0VBQ0UsdUJBQWlCLEVBQUE7O0FDWG5CO0VBQ0MsbUJBQVE7RUFDUixhQUFPLEVBQUE7O0FBRVI7RUFDRSxrQ0FBZSxFQUFBO0VBUWpCO0lMVlEsMkJLV0osRUFBQTs7QUFFSjtFQUNFLHFCQUFnQjtFQUNQLG1CQUFBLEVBQUE7O0FBMkJYO0VBQ0UsMkJBQUEsRUFBQTtFQVNJO0lOaERLLGtCQUFBO0lNa0RQLGtCQUFZO0lBQ1osY0FBUyxFQUFBOztBQzVEYjtFQUNFLGdCQUFTO0VBQ0csbUJBQUEsRUFBQTtFQUVkO0lBQ0ksd0JBQUE7SUFDQSw2QkFBYTtJQUNiLDhCQUFjO0lBQ04sZ0JBQUE7SUFDUixtQkFBYTtJQUFiLG1CQUFhO0lBQ2IsbUJBQVcsRUFBQTtFQUtmO0lBQ2EsdUJBQUEsRUFBQTtJQUVBO01BQ1AsdUJBQVM7TUFDVCxnQkFBUztNTnBCUCxnQk1xQkY7TUFDQSxlQUFRLEVBQUE7SUFJSDtNQUNILGNBQVMsRUFBQTtFQUVqQjtJTm5CVyxhTW9CUDtJQUNTLHVCQUFBO0lBQ1QsZ0JBQVM7SUFBVCxrQkFBUyxFQUFBO0lBRWI7TUFDTSxnQkFBQSxFQUFBOztBUndWTjs7OztzQ0FJcUM7O0FTdFZqQjtFVDRWbEIsOEJBQTZCO0VTMVY3QixlQUFTLEVBQUE7O0FBRTBGO0VBSW5HLGVBQVMsRUFBQTs7QVQwVlg7Ozs7c0NBSXFDO0FTdFZuQjtFVHdWaEIsNENBQTJDO0VTclZoQyxrQ0FBQTtLQUFBLCtCQUFBO1VBQUEsMEJBQUE7RUFDRSx3QkFBQSxFQUFBO0VBRU07SUFDTCxrQkFBQSxFQUFBOztBQUVoQjtFQUNZLG9CQUFBO0VBQ1YsNENBQVk7S0FBWixzQ0FBWTtPQUFaLGtDQUFZO1VBQVosNEJBQVksRUFBQTs7QUFTZDtFQUNFLHNDQUFBO0VBQ0Esb0JBQVU7RUFDViw0Q0FBWTtLQUFaLHNDQUFZO09BQVosa0NBQVk7VUFBWiw0QkFBWSxFQUFBOztBQVNkO0VBQ0UsbUJBQVk7RUFqRkosWUFrRlIsRUFBQTs7QUFFRjtFQTdGa0IsY0E4RmhCO0VBQ0Esa0JBQUE7RUFyRmMsWUFzRmQ7RUFFQSxrQ0FBZSxFQUFBO0VBRUg7SVRnVlYsaUZBQWdGO0lTOVVoRixpQkFBVTtJQUNWLFFBQUs7SUFDQyxTQUFBO0lBQ04sYUFBTyxFQUFBOztBQU1YO0VBQ0Usb0JBQVU7RUFDVixXQUFLO0VBQ0MsVUFBQSxFQUFBO0VBRVI7SUFDSSxnQkFBUyxFQUFBOztBQVdiO0VBQ0Usb0JBQVU7RUFDRCx1QkFBQTtFQUNULFVBQUs7RUFDTCxXQUFPLEVBQUE7RUFFVTtJQUNmLHVCQUFTLEVBQUE7O0FBYWI7RUFFWSxvQkFBQTtFQUNWLGdCQUFTO0VBQ1QsYUFBTztFQUNDLGNBQUE7RUFDUixrQkFBVTtFQUNWLHFCQUFhO0VUOFViLGdCQUFlO0VTNVVmLG9CQUFPO0VBbkpPLFlBb0pkLEVBQUE7O0FBR2dCO0VUNlVoQixrQkFBaUI7RVMzVWYsYUFBUztFQUNDLG9CQUFBO0VBQ1Ysa0NBQVk7S0FBWiwrQkFBWTtPQUFaLDZCQUFZO1VBQVosMEJBQVk7RVQ2VWQsNENBQTJDO0VTM1V6QyxrQ0FBVztLQUFYLCtCQUFXO1VBQVgsMEJBQVc7RUFDVSxxQ0FBQTtLQUFBLGtDQUFBO1VBQUEsNkJBQUEsRUFBQTtBQUV6QjtFVDRVRSxXQUFVO0VTMVVSLFdBQUs7RUFDQyxZQUFBO0VBQ04sYUFBTztFQUNQLGNBQVE7RUFDTyx5QkFBQTtPQUFBLG9CQUFBO0VBQ2YsMkJBQVEsRUFBQTtBQUVaO0VUMlVFLGFBQVk7RVN6VUYsYUFBQTtFQUNSLFlBQU87RVByTEUscUJPc0xUO0VBQ1EsY0FBQTtFQUNSLGFBQU87RUFDUCxrQ0FBVztLQUFYLCtCQUFXO01BQVgsOEJBQVc7T0FBWCw2QkFBVztVQUFYLDBCQUFXLEVBQUE7QUFDSTtFVDJVakIsK0JBQThCO0VTelVsQixvQkFBQTtFQUNGLGNBQUE7RUFDUixhQUFPO0VBQ1AsUUFBSztFQUNDLFNBQUEsRUFBQTtBQUM4QztFVDJVdEQsaUJBQWdCO0VTelVkLGFBQVM7RUFDVCxvQkFBVTtFQUNELHVCQUFBO0VBQ1QsYUFBUTtFQUNSLGFBQU87RUFDRixVQUFBO0VBQ0wsa0JBQVk7RUFDWixXQUFNO0VBQ08sb0JBQUE7RVAzTUoscUJPNE1UO0VBQ0EsWUFBUzs7RVQyVVgsNENBQTJDO0VTelU5QixrQ0FBQTtLQUFBLCtCQUFBO1VBQUEsMEJBQUE7RUFDWCxxQ0FBcUI7S0FBckIsa0NBQXFCO1VBQXJCLDZCQUFxQjtFQUNyQiwwREFBb0I7S0FBcEIsb0RBQW9CO09BQXBCLGdEQUFvQjtVQUFwQiwwQ0FBb0IsRUFBQTtBQUVMO0VBQ0osa0NBQUE7S0FBQSwrQkFBQTtNQUFBLDhCQUFBO09BQUEsNkJBQUE7VUFBQSwwQkFBQSxFQUFBO0FBRVE7RUFDbkIsbUNBQVc7S0FBWCxnQ0FBVztNQUFYLCtCQUFXO09BQVgsOEJBQVc7VUFBWCwyQkFBVyxFQUFBO0FBRytCO0VUdVU1Qyx1QkFBc0I7RVNyVWxCLFlBQVM7OEJBQUE7QUFDRztFVHVVaEIsc0JBQXFCO0VTclVqQixZQUFTO2dDQUFBO0FBQzBCO0VBQ25DLG1DQUFXO0tBQVgsZ0NBQVc7TUFBWCwrQkFBVztPQUFYLDhCQUFXO1VBQVgsMkJBQVcsRUFBQTtBQUN3QjtFQUNuQyxrQ0FBVztLQUFYLCtCQUFXO01BQVgsOEJBQVc7T0FBWCw2QkFBVztVQUFYLDBCQUFXLEVBQUE7O0FBR3FCO0VUc1VwQyw0QkFBMkI7RVNwVWYsb0JBQUE7RUFDVix1QkFBUztFQUNULGFBQVE7RUFDUixhQUFPO0VQM09FLHFCTzRPVCxFQUFBO0FBQ1k7RVRzVWQseUJBQXdCO0VTcFV0QixvQkFBVTtFQUNWLFVBQUs7RUFDRSxhQUFBO0VBQ1Asa0JBQVk7RUFDWiwwQ0FBWTtLQUFaLHVDQUFZO09BQVoscUNBQVk7VUFBWixrQ0FBWSxFQUFBO0FBQzhCO0VUc1U1QyxvQkFBbUI7RVNwVVIsYUFBQTtFQUNULFVBQU87RVRzVVQsNENBQTJDO0VTcFV6QyxrQ0FBVztLQUFYLCtCQUFXO1VBQVgsMEJBQVc7RUFDVSxxQ0FBQTtLQUFBLGtDQUFBO1VBQUEsNkJBQUE7RUFDckIsa0NBQWtCO0tBQWxCLCtCQUFrQjtNQUFsQiw4QkFBa0I7T0FBbEIsNkJBQWtCO1VBQWxCLDBCQUFrQjtFQUNsQixpREFBWTtLQUFaLDJDQUFZO09BQVosdUNBQVk7VUFBWixpQ0FBWSxFQUFBO0FBQ0E7RVRzVWQseUJBQXdCO0VTcFVqQixXQUFBLEVBQUE7QUFDVztFVHNVbEIsNEJBQTJCO0VTcFV6QixVQUFLLEVBQUE7QUFFVDtFVHFVRSw4QkFBNkI7RVNuVXpCLGlDQUFZLEVBQUE7QUFDYTtFVHFVN0IsaUNBQWdDO0VTblU1QixxQkFBWSxFQUFBO0FBQ0g7RUFDVCxtRUFBeUI7S0FBekIsZ0VBQXlCO01BQXpCLCtEQUF5QjtPQUF6Qiw4REFBeUI7VUFBekIsMkRBQXlCLEVBQUE7QUFDaEI7RUFDVCxtRUFBeUI7S0FBekIsZ0VBQXlCO01BQXpCLCtEQUF5QjtPQUF6Qiw4REFBeUI7VUFBekIsMkRBQXlCLEVBQUE7O0FBSy9CO0VBRUUsaUJBQVU7RUFDTCxRQUFBO0VBQ0wsVUFBTztFQUNQLGNBQVE7RUFDUixjQUFBO0VQeFJXLHFCT3lSWDtFQUNBLGdCQUFVO0VBQ2tCLG1DQUFBO0VBcFJkLFlBcVJkO0VUb1VBLDRDQUEyQztFU2pVM0Msa0NBQVc7S0FBWCwrQkFBVztVQUFYLDBCQUFXO0VBQ1gsa0NBQVc7S0FBWCwrQkFBVztNQUFYLDhCQUFXO09BQVgsNkJBQVc7VUFBWCwwQkFBVztFQUNYLDRDQUFZO0tBQVosc0NBQVk7T0FBWixrQ0FBWTtVQUFaLDRCQUFZLEVBQUE7RUFFd0I7SUFDbEMsZ0JBQVM7SUFDVCxpQkFBVztJQUFYLG1CQUFXO0lBQ0gsY0FBQTtJQUNSLG1CQUFhO0lBQ2IsaUJBQVM7SUFDVCxhQUFBO0lBQ0EscUNBQXdCO0lBQ3hCLG9DQUF5QjtJQUNmLGtCQUFBO0lBQ1YseUJBQWU7SUFDZixxQkFBYTtJQUNFLGtDQUFBO0lBQ2Ysa0NBQVc7T0FBWCwrQkFBVztZQUFYLDBCQUFXO0lBQ1gsaUNBQWE7SUFDUywwREFBQTtPQUFBLG9EQUFBO1NBQUEsZ0RBQUE7WUFBQSwwQ0FBQSxFQUFBO0VBRUM7SVRpVXZCLDhDQUE2QztJUy9UN0MscUNBQVc7T0FBWCxrQ0FBVztRQUFYLGlDQUFXO1NBQVgsZ0NBQVc7WUFBWCw2QkFBVyxFQUFBO0VBRXFCO0lUZ1VoQyxvR0FBbUc7SVM5VHhGLHNDQUFBO09BQUEsbUNBQUE7UUFBQSxrQ0FBQTtTQUFBLGlDQUFBO1lBQUEsOEJBQUE7SUFDWCxZQUFTO2dDQUFBOztBQVVZO0VUNlR2QixrRUFBaUU7RUVub0IzRCxnQk93VUosRUFBQTtBQUVKO0VUNFRFLDZDQUE0QztFU3pUMUMsY0FBUTtFQUNLLG1CQUFBLEVBQUE7RUFFZTtJQUMxQixrQkFBVTtJQUNLLHlCQUFBLEVBQUE7QUFFTDtFQUNaLG9CQUFjLEVBQUE7RUFFRjtJQUNWLG9CQUFVO0lBQ0QsZ0JBQUE7SUFDVCxjQUFRO0lBQ1IsYUFBTztJQUNELFlBQUE7SUFDTixVQUFLO0lBQ0wsbUJBQVksRUFBQTtBQUVGO0VBQ0Usb0JBQUEsRUFBQTtFQUVZO0lBQ3hCLGdCQUFBO0lBQ0EsaUJBQVc7SUFBWCxtQkFBVztJVHNUYix3Q0FBdUM7SVNwVHJDLGVBQVMsRUFBQTtFQUVDO0lUcVRaLGdCQUFlO0lTblRiLGFBQVM7SUFDQSxnQkFBQTtJQUNULG9CQUFVO0lBQ1YsWUFBTTtJQUNOLFVBQUs7SUFDTCxtQkFBWTtJQUNMLGFBQUE7SUFDUCxjQUFRO0lBQ1IsOEJBQW1CO0lBQ0Usb0NBQUE7SUFDckIsaUNBQWlCO1NBQWpCLDRCQUFpQixFQUFBO0VBRXZCO0lBQ3dCLGtEQUFBLEVBQUE7RUFDTTtJQUN4QixrREFBa0IsRUFBQTtFQUN5QjtJQUMzQyxrREFBa0IsRUFBQTtFQUNrQjtJQUNsQixrREFBQSxFQUFBO0VBQ007SUFDeEIsa0RBQWtCLEVBQUE7RUFDTTtJQUN4QixrREFBa0IsRUFBQTtFQUNSO0lBQ1Ysa0RBQWtCLEVBQUE7RUFDeEI7SUFDd0Isa0RBQUEsRUFBQTs7QUF3UEk7RUFDMUIsb0JBQVUsRUFBQTtFQUNlO0lUaVJ2QixrRUFBaUU7SVMvUWpFLGFBQVM7SUFDQyxvQkFBQTtJQUNWLFVBQUs7SUFDTCxrQkFBWTtJQUNILHVCQUFBO0lBQ1QsYUFBUTtJQUNSLGFBQU87SUFDUCxxQkFBWTtJQUVaLHFDQUFxQjtPQUFyQixrQ0FBcUI7WUFBckIsNkJBQXFCLEVBQUE7RUFDVztJQUNyQixrQ0FBQTtPQUFBLCtCQUFBO1FBQUEsOEJBQUE7U0FBQSw2QkFBQTtZQUFBLDBCQUFBLEVBQUE7RUFDRTtJQUNiLG1DQUFXO09BQVgsZ0NBQVc7UUFBWCwrQkFBVztTQUFYLDhCQUFXO1lBQVgsMkJBQVcsRUFBQTs7QUFPQztFQUNkLHFCQUFlLEVBQUE7RUFDakI7SVRnUkkseURBQXdEO0lTOVF4RCxhQUFPO0lBQ1csbUNBQUE7T0FBQSxnQ0FBQTtRQUFBLCtCQUFBO1NBQUEsOEJBQUE7WUFBQSwyQkFBQSxFQUFBOztBQUVHO0VBQ3ZCLG9CQUFjLEVBQUE7RUFDVTtJVGdSdEIsbURBQWtEO0lTOVE1QyxZQUFBO0lBQ04sbUNBQWtCO09BQWxCLGdDQUFrQjtRQUFsQiwrQkFBa0I7U0FBbEIsOEJBQWtCO1lBQWxCLDJCQUFrQixFQUFBOztBQXFDdEI7RUFDWSxvQkFBQTtFQW5zQk0sY0Fvc0JoQjtFQUNBLGFBQU87RUFDUCxXQUFBO0VBQ0EsU0FBTTtFQWxzQlEsWUFtc0JkO0VBQ1MsWUFBQTs7RUFDRyxvQkFBQTtFQUNZLHVEQUFBO0tBQUEsb0RBQUE7T0FBQSxrREFBQTtVQUFBLCtDQUFBLEVBQUE7RUFFMUI7SUFDSSxjQUFRO0lBQ0QsYUFBQSxFQUFBO0VBRVg7SUFDSSx1QkFBZTtTQUFmLGtCQUFlO0lBQ1AsY0FBQTtJUHB0Qkosa0JPcXRCSjtJQUNBLG9CQUFhO0lBQ0wsY0FBQTtJQUNSLGFBQU87SUFDUCxpQkFBVztJQUFYLGlCQUFXO0lBQ0YsZUFBQTtJQUNULGtCQUFZLEVBQUE7SUFFNkI7TUFHdkMsZ0JBQU8sRUFBQTtJQUVGO01BQ0ksZUFBQSxFQUFBO0VBRWY7SUFDSSxZQUFTOztJQUNULHFCQUFZO0lBQ1osc0RBQXdCO09BQXhCLG1EQUF3QjtTQUF4QixpREFBd0I7WUFBeEIsOENBQXdCLEVBQUE7RUFFZDtJQUNWLGlCQUFVLEVBQUE7O0FBZWQ7RVRpUUUscURBQW9EO0VTL1BwRCxpQkFBVTtFQUNELFlBQUE7RUFDVCxjQUFRO0VBQ1IsYUFBTztFQUNGLFFBQUE7RUFDTCxTQUFNO0VBQ04saUJBQVE7RUFDSSxvQkFBQTtFQUNaLFlBQVM7O0VBQ1QscUNBQXFCO0tBQXJCLGtDQUFxQjtVQUFyQiw2QkFBcUI7RUFDSSxvRkFBQTtLQUFBLDhFQUFBO09BQUEsMEVBQUE7VUFBQSxvRUFBQSxFQUFBO0VBRTNCO0lBQ0ksWUFBUzs7SUFDRyxxQkFBQTtJQUNaLGtGQUF5QjtPQUF6Qiw0RUFBeUI7U0FBekIsd0VBQXlCO1lBQXpCLGtFQUF5QixFQUFBOztBVHdRN0I7Ozs7c0NBSXFDO0FTelByQztFQUNFLG9CQUFVO0VBQ0YsY0FBQTtFQUNSLGFBQU87RUFDUCxtQkFBVTtFQUNFLHFCQUFBO0VBOXhCSixZQSt4QlIsRUFBQTs7QUFFRjtFQUNZLG9CQUFBO0VBQ0wsUUFBQTtFQUNJLFlBQUE7O0VBQ1QscUJBQVksRUFBQTs7QUM5eUJkO0VBQ1UseUJBQUE7RUFDVCxrQkFBWSxFQUFBO0VBS2I7SUFDRSxxQ0FBQTtJQUNBLGlCQUFXO0lBQVgsaUJBQVc7SVRDTixrQlNBTDtJQUNlLHFCQUFBO0lBQUEscUJBQUEsRUFBQTtJQUVqQjtNUkhXLGFRSVIsRUFBQTtNQUNtQjtRUmZkLGdCUWdCSixFQUFBO0VBRUo7SUFDRSxpQkFBVyxFQUFBO0VBRWI7SUFDRSxpQkFBUztJQUNULHFCQUFnQixFQUFBO0VBRWxCO0lBQ0UsaUJBQVM7SUFDTyxxQkFBQSxFQUFBO0VBRWxCO0lBQ2dCLG1CQUFBO0lSOUJSLGdCUStCTjtJQUNBLGlCQUFXO0lBQVgsa0JBQVc7SUFDSSxxQkFBQTtJQUFBLHFCQUFBO0lBQ2YsbUJBQVM7SUFBVCxxQkFBUyxFQUFBO0VBR1g7SUFDRSxpQkFBVyxFQUFBO0lBRWI7TUFDRyxhQUFBLEVBQUE7TUFDcUI7UVIxQ2hCLGdCUTJDSixFQUFBO0lBRUo7TVQxQ1kscUNTMkNUO01BQ1csaUJBQUE7TUFBQSxpQkFBQTtNQUNYLGtCQUFBO01BQ2Usb0JBQUE7TUFBQSxzQkFBQSxFQUFBOztBQ2pEbEI7RUFDb0Isd0NBQUE7RUFDbEIsNkJBQXFCO0VBQ3JCLDZCQUFpQjtPQUFqQix3QkFBaUI7RUFDVCxlQUFBO0VBQ1Isb0JBQVUsRUFBQTtFQU1aO0lBQ1ksY0FBQTtJQUFBLGNBQUE7SVRSSixhU1NKO0lBQ0Esb0JBQWE7SUFDRixpQkFBQTtJQUFBLGlCQUFBO0lWUE4sa0JVUUw7SUFDQSxZQUFNO0lBQU4sWUFBTTtJQUNPLGdCQUFBO0lBQ2Isb0JBQVU7SUFDVix1QkFBUTtJQUFSLHVCQUFRO0lBQ0ssK0JBQUEsRUFBQTs7QUFRakI7RVQ3QlEscUJTOEJOO0VUMUJNLGFTMkJOO0VBQ1MsZ0JBQUE7RUFDVCxlQUFRLEVBQUE7RUFFVjtJQUNJLG9CQUFTO0lBQVQsb0JBQVMsRUFBQTtFQUViO0lUbENRLGFTbUNKLEVBQUE7RUFJSjtJVHpDUSwyQlMwQ0osRUFBQTtFQUVKO0lBQ0ksOENBQWtCO0lBQ2xCLDZCQUFxQjtJQUNKLDZCQUFBO1NBQUEsd0JBQUEsRUFBQTtFQUtyQjtJQUNJLDZDQUFrQjtJQUNHLDZCQUFBO0lBQ3JCLDZCQUFpQjtTQUFqQix3QkFBaUIsRUFBQTs7QUFLckI7RUFDb0IsNENBQUE7RUFDbEIsNkJBQXFCO0VBQ3JCLDZCQUFpQjtPQUFqQix3QkFBaUI7RUFDVCxlQUFBLEVBQUE7O0FDbEVWO0VBQ0UsZ0JBQVM7RUFDVCw0QkFBWTtFQUNHLCtCQUFBLEVBQUE7RUFJakI7SUFDSSxxQkFBUztJQUNPLHdCQUFBO0lBRWhCLG9CQUFTO0lBQVQsb0JBQVMsRUFBQTtFQVViO0lBQ0ksb0JBQVksRUFBQTtFQUVoQjtJVnhCUSwyQlV5Qko7SUFDUSxlQUFBO0lBQ1Isa0JBQVU7SUFDVixxQkFBZTtJQUFmLHFCQUFlLEVBQUE7RUFFbkI7SUFDSSxvQkFBWTtJQUNHLHFCQUFBO0lBQUEscUJBQUEsRUFBQTtFQUVuQjtJQUNJLGtCQUFZO0lBQ1osb0JBQVksRUFBQTtJQUVoQjtNQUNNLHVCQUFTO01BQ0EsY0FBQTtNQUFBLGdCQUFBO01BQ1QsWUFBTyxFQUFBO0VBR2I7SVY1Q1EsZ0JVNkNKO0lBQ0EsdUJBQVM7SUFDVCxzQ0FBQTtJQUNBLGdCQUFTO0lBQVQsa0JBQVMsRUFBQTtJQUNiO01BQ00sZ0JBQUEsRUFBQTs7QUFHTjtFQUNrQixzQkFBQTtFQUFBLHNCQUFBLEVBQUE7RUFpQmxCO0lBQ0ksb0JBQWM7SUFBZCxvQkFBYztJQUNkLGdCQUFhO0lBQ2IscUJBQWdCLEVBQUE7RUFLcEI7SVYvRVEsZ0JEa0ROO0lBOUNlLHNDQStDZjtJQUNXLGlCQUFBO0lBQUEsaUJBQUE7SUE1Q0osa0JBNkNQO0lBQ0EsZ0JBQWEsRUFBQTtFVzRCZjtJVjNFVyxhVTRFUCxFQUFBO0VBT0o7SUFDTSxrQkFBWTtJQUFaLGtCQUFZLEVBQUE7O0FBTWxCO0VBQ0ksa0NBQVk7T0FBWiw2QkFBWTtFQUNILGVBQUE7RVg3RVgsbUJBQWE7RUFDYixzQkFBZ0IsRUFBQTtFVytFQztJQUNELGtCQUFBO0lBQUEsa0JBQUEsRUFBQTtBQUVsQjtFVnpHUSxnQkRrRE47RUFDQSxzQ0FBQTtFQUNBLGlCQUFXO0VBQVgsaUJBQVc7RUE1Q0osa0JBNkNQO0VBQ2EsZ0JBQUEsRUFBQTtBV3NEZjtFVnJHVyxhVXNHUDtFQUNXLGlCQUFBO0VBQUEsbUJBQUEsRUFBQTs7QUFJZjtFQUNXLHFCQUFBLEVBQUE7O0FBR1g7RUFDVyxnQkFBQTtFQUNULDRCQUFZO0VBQ1osK0JBQWUsRUFBQTtFQUVqQjtJQUNJLGVBQVM7SUFBVCxlQUFTO0lBQ08scUJBQUEsRUFBQTtFQVVwQjtJQUNJLGVBQVE7SUFDRSxrQkFBQTtJQUNWLHFCQUFlO0lBQWYscUJBQWUsRUFBQTtFQUluQjtJWDFFRSxnQkFBQTtJQUNBLHNDQUFBO0lBQ0EsaUJBQVc7SUFBWCxxQkFBVztJQTlESixrQkErRFA7SUFDYSxnQkFBQTtJQ3hFUCxnQlVnSko7SUFDQSx1QkFBUztJQUNHLG9CQUFBLEVBQUE7SUFFaEI7TVZqSTZCLGdCVWtJdkIsRUFBQTtFQUVOO0lBQ0ksb0JBQVksRUFBQTs7QUN2SmhCO0VBQ0UsMkJBQW1CO0VBQ1YsZ0JBQUEsRUFBQTtFQUdYO0lBQ2EsZUFBQTtJQUFBLGVBQUEsRUFBQTtFQUViO0lBQ0ksaUJBQVM7SUFBVCxpQkFBUyxFQUFBO0VBSWI7SUFDSSxXQUFRO0lBQ0Msd0JBQUE7SUFBQSwwQkFBQSxFQUFBO0VBS2I7SUFDSSx1QkFBUztJQUNELG9CQUFBO0lBQUEsb0JBQUEsRUFBQTs7QUFNWjtFQUNXLGdCQUFBO0VBQ1Qsb0JBQVM7RUFBVCxvQkFBUyxFQUFBO0VBS1g7SUFDbUIscUJBQUE7SUFBQSxxQkFBQSxFQUFBO0VBT25CO0lBQ0kscUJBQWU7SUFBZixxQkFBZSxFQUFBO0VBR25CO0lBQ0ksZUFBUTtJQUNFLGtCQUFBLEVBQUE7O0FBT2Q7RUFDVyxlQUFBO0VBQUEsZUFBQTtFQUNULG9CQUFZLEVBQUE7RUFJZDtJQUNJLGtCQUFTO0lBQVQsaUJBQVM7SUFDVCxxQkFBZTtJQUFmLHFCQUFlLEVBQUE7O0FBU25CO0VBQ0UsMkJBQUE7RUFDQSxhQUFBO0VadERBLG1CQUFhO0VBQ2Isc0JBQWdCLEVBQUE7RVl3RGxCO0lYM0VRLGFXNEVKO0lBQ1ksb0JBQUEsRUFBQTtFQUVoQjtJQUNhLGdCQUFBO0lBQ1QsZ0JBQVE7SUFDUixZQUFPLEVBQUE7RUFLWDtJQUNJLGVBQVM7SUFBVCxnQkFBUztJQUNGLGFBQUEsRUFBQTtFQUVYO0lBQ1ksd0JBQUE7SVg1RkosYVc2Rko7SUFDQSxpQkFBVztJQUFYLG1CQUFXO0lBQ0UsbUJBQUE7SUFBQSxtQkFBQTtJQUNiLGFBQU8sRUFBQTtFQUtYO0lBQ2EsZUFBQTtJQUNULG1CQUFhO0lBQWIscUJBQWEsRUFBQTs7QUFLakI7RUFDRSx3QkFBUztFQUFULHdCQUFTO0VBQ1QscUJBQWdCLEVBQUE7RUFZbEI7SUFDSSxpQkFBVztJQUFYLG9CQUFXO0laN0diLGtCQUFZO0lBQ0cscUJBQUEsRUFBQTtFWWlIakI7SUFDZ0Isa0JBQUE7SUFBQSxrQkFBQSxFQUFBOztBQUdoQjtFQUNnQixvQkFBQTtFQUFBLG9CQUFBLEVBQUE7RUFFaEI7SVgzSVEsZVc0SUosRUFBQTtJQUVRO01BQ04sWUFBQSxFQUFBOztBQzdJTjtFQUNpQix1QkFBQSxFQUFBOztBQU1qQjtFQUNDLCtCQUFZO0VBQ0gsZ0JBQUE7RUFDVCxlQUFTO0VBQVQsZUFBUztFQUNULGFBQU8sRUFBQTtFQUtSO0lBQ1MsY0FBQSxFQUFBO0VBVVQ7SUFDRSxtQkFBWSxFQUFBO0lBS2Q7TUFDRyx1QkFBUztNQUNFLGlCQUFBO01BQ1gsb0JBQWU7TUFBZixzQkFBZSxFQUFBO01BRWxCO1FBQ0ksY0FBUyxFQUFBO01BR1U7UUFDbEIsY0FBUyxFQUFBO0lBU29CO01BQ2hCLGlCQUFBLEVBQUE7O0FBS2xCO0VBQ2Esb0JBQUE7RUFDWixhQUFPLEVBQUE7RUFFUjtJQUNFLDJCQUFRO0lBQ1IsdUJBQVM7SUFDRyxvQkFBQTtJQUNaLGVBQVM7SUFDVCx3QkFBUSxFQUFBO0VBRW1DO0lBQ2hDLGlCQUFBO0lBQ1gscUJBQWU7SUFBZixxQkFBZSxFQUFBO0VBS2pCO0lBRWMsZUFBQSxFQUFBO0lBRVE7TUFDVix1QkFBQTtNQUNELGdCQUFBO01BQ1IsY0FBUztNQUFULGdCQUFTLEVBQUE7O0FkMDJDWjtFZTc3Q0E7SUFDYSxZQUFBO2dDQUFBOztFQUNiO0lBQ2EsWUFBQTtrQ0FBQSxFQUFBOztBZjA3Q2I7RWU3N0NBO0lBQ2EsWUFBQTtnQ0FBQTs7RUFDYjtJQUNhLFlBQUE7a0NBQUEsRUFBQTs7QWYwN0NiO0VlNzdDQTtJQUNhLFlBQUE7Z0NBQUE7O0VBQ2I7SUFDYSxZQUFBO2tDQUFBLEVBQUE7O0FmMDdDYjtFZTc3Q0E7SUFDYSxZQUFBO2dDQUFBOztFQUNiO0lBQ2EsWUFBQTtrQ0FBQSxFQUFBOztBQUViO0VBQ0Usd0JBQUE7RUFDQSw2QkFBYTtFQUNiLDhCQUFjO0VBQ04sZ0JBQUE7RUFDUixtQkFBYTtFQUFiLG1CQUFhO0VBQ2IsbUJBQVcsRUFBQTs7QUFFYjtFYlhRLGtCYVlOLEVBQUE7O0FBR0Y7RUFDRSxnQkFBUztFQUNBLGVBQUE7RUFBQSxlQUFBO0VBQ1QsY0FBTyxFQUFBOztBQWNDO0VBQ04sZUFBQSxFQUFBO0FBRXNCO0VBRXRCLGFBQVM7O0VBQ1Qsb0NBQVk7S0FBWixpQ0FBWTtPQUFaLCtCQUFZO1VBQVosNEJBQVksRUFBQTs7QUFFaEI7RUFDRSxnQkFBUyxFQUFBOztBQUtYO0VBQ0UsZUFBUyxFQUFBOztBQVNYO0VBQ0ksWUFBUzs7RUFDRSxxQ0FBQTtLQUFBLGtDQUFBO09BQUEsZ0NBQUE7VUFBQSw2QkFBQTtFQUNYLHVDQUFxQjtLQUFyQixvQ0FBcUI7T0FBckIsa0NBQXFCO1VBQXJCLCtCQUFxQjtFQUNyQixpQ0FBb0I7S0FBcEIsOEJBQW9CO09BQXBCLDRCQUFvQjtVQUFwQix5QkFBb0IsRUFBQTtBQUVYO0VBQ1EsK0JBQUE7S0FBQSw0QkFBQTtPQUFBLDBCQUFBO1VBQUEsdUJBQUEsRUFBQTtBQUVKO0VBQ2IsZ0NBQWlCO0tBQWpCLDZCQUFpQjtPQUFqQiwyQkFBaUI7VUFBakIsd0JBQWlCLEVBQUE7QUFFckI7RUFDcUIsZ0NBQUE7S0FBQSw2QkFBQTtPQUFBLDJCQUFBO1VBQUEsd0JBQUEsRUFBQTtBQUVKO0VBQ2IsZ0NBQWlCO0tBQWpCLDZCQUFpQjtPQUFqQiwyQkFBaUI7VUFBakIsd0JBQWlCLEVBQUE7QUFFckI7RUFDSSxnQ0FBaUI7S0FBakIsNkJBQWlCO09BQWpCLDJCQUFpQjtVQUFqQix3QkFBaUIsRUFBQTtBQUVSO0VBQ1EsZ0NBQUE7S0FBQSw2QkFBQTtPQUFBLDJCQUFBO1VBQUEsd0JBQUEsRUFBQTtBQUVKO0VBQ2IsZ0NBQWlCO0tBQWpCLDZCQUFpQjtPQUFqQiwyQkFBaUI7VUFBakIsd0JBQWlCLEVBQUE7QUFFckI7RUFDSSxnQ0FBaUI7S0FBakIsNkJBQWlCO09BQWpCLDJCQUFpQjtVQUFqQix3QkFBaUIsRUFBQTtBQUVSO0VBQ1EsZ0NBQUE7S0FBQSw2QkFBQTtPQUFBLDJCQUFBO1VBQUEsd0JBQUEsRUFBQTtBQUVKO0VBQ2IsZ0NBQWlCO0tBQWpCLDZCQUFpQjtPQUFqQiwyQkFBaUI7VUFBakIsd0JBQWlCLEVBQUE7QUFFckI7RUFDSSwrQkFBaUI7S0FBakIsNEJBQWlCO09BQWpCLDBCQUFpQjtVQUFqQix1QkFBaUIsRUFBQTtBQUVSO0VBQ1EsZ0NBQUE7S0FBQSw2QkFBQTtPQUFBLDJCQUFBO1VBQUEsd0JBQUEsRUFBQTtBQUVSO0VBQ1QsZ0NBQWlCO0tBQWpCLDZCQUFpQjtPQUFqQiwyQkFBaUI7VUFBakIsd0JBQWlCLEVBQUE7QUFFUjtFQUNRLGdDQUFBO0tBQUEsNkJBQUE7T0FBQSwyQkFBQTtVQUFBLHdCQUFBLEVBQUE7QUFFSjtFQUNiLGdDQUFpQjtLQUFqQiw2QkFBaUI7T0FBakIsMkJBQWlCO1VBQWpCLHdCQUFpQixFQUFBO0FBRXJCO0VBQ0ksZ0NBQWlCO0tBQWpCLDZCQUFpQjtPQUFqQiwyQkFBaUI7VUFBakIsd0JBQWlCLEVBQUE7O0FDL0dFO0VBQ1osZ0JBQUE7RUFDVCxvQkFBUztFQUFULG9CQUFTLEVBQUE7O0FBRVg7RUFFRSxzQkFBZ0I7RUFBaEIsc0JBQWdCLEVBQUE7RUFTTztJQUNuQixrQkFBWTtJQUFaLGtCQUFZLEVBQUE7RUFFbEI7SWYrQkUsZ0JBQUE7SUE5Q2Usc0NBK0NmO0lBQ0EsaUJBQVc7SUFBWCxpQkFBVztJQUNYLGtCQUFBO0lBQ2EsZ0JBQUE7SUFoQ0EsbUJBQUE7SUFDYixxQkFBZ0IsRUFBQTs7QWVDbEI7RUFDRSxnQkFBUztFQUNULGVBQVM7RUFBVCxlQUFTLEVBQUE7QUFlWDtFQUNNLGtCQUFZO0VBQVosa0JBQVksRUFBQTtBQUVEO0VkNUNULGdCRGtETjtFQTlDZSxzQ0ErQ2Y7RUFDVyxpQkFBQTtFQUFBLGlCQUFBO0VBNUNKLGtCQTZDUDtFQUNBLGdCQUFhLEVBQUE7QWVQRTtFZDlDSixnQkR5RFg7RUF0RGUsc0NBdURmO0VBQ1csaUJBQUE7RUFBQSxvQkFBQTtFQWxETixrQkFtREw7RUFDQSxnQkFBYTtFQUNHLDJCQUFBO0VBN0NoQixrQkFBWTtFQUNaLG9CQUFlLEVBQUE7QWUrQmpCO0VkM0NXLGFjNENMO0VBQ1csaUJBQUE7RUFBQSxtQkFBQTtFQUNYLGVBQVksRUFBQTtBQUVsQjtFZnFCRSxnQkFBQTtFQXhFZSxzQ0F5RWY7RUFDQSxpQkFBVztFQUFYLG1CQUFXO0VBQ0Msb0JBQUE7RUFyRVAsa0JBc0VMO0VBOURBLGtCQUFZO0VBQ0cscUJBQUEsRUFBQTs7QWdCbEJvVDtFZlMxVCxhZVFSO0VBQ0Esd0JBQVE7RUFDSyxnQ0FBQTtFQUNiLHVCQUFlO09BQWYsa0JBQWU7RUFBQSwrQkFDSDtFQUNILGVBQUE7RUFBQSxlQUFBO0VBQ1QsZ0JBQVM7RUFDVCxhQUFPLEVBQUE7QUFHSztFQUNYLGdCQUFTLEVBQUE7QUFFMkU7RUFHM0UsZ0JBQUEsRUFBQTtBQUdiO0VBQ2EsdUJBQUEsRUFBQTtBQUViO0VBQ0ksdUJBQVMsRUFBQTtBQUdFO0VmeENQLGtCZXlDSjtFQUNBLHVCQUFlO09BQWYsa0JBQWU7RUFDUCxpQkFBQTtFQUNSLG9CQUFVO0VBQ1YsY0FBUSxFQUFBO0FBR0c7RWZoRFAsa0JlaURKO0VBQ0EsdUJBQVk7T0FBWixrQkFBWTtFQUNHLHVCQUFBO09BQUEsa0JBQUE7RUFDZix3QkFBUTtFZjlDRCxhZStDUDtFQUNRLGlCQUFBO0VBQ1IsZ0JBQVM7RUFDVCxpQkFBVztFQUFYLGlCQUFXO0VBQ0gsY0FBQTtFQUNSLGVBQVM7RUFBVCxlQUFTO0VBQ1Qsb0JBQVU7RUFDVixhQUFPLEVBQUE7Ozs7QUNuQlQ7O0VickNGO0lBS0ksdUJBQVM7SUFDRyxvQkFBQSxFQUFBOztFQUVoQjtJQUlJLGFBQU8sRUFBQTs7RUFFWDtJQUlJLGFBQU8sRUFBQTs7RUFFWDtJQUlXLGFBQUEsRUFBQTs7RUFHWDtJQUlXLGFBQUEsRUFBQTs7RUFHWDtJQUlJLGFBQU8sRUFBQTs7RUFHWDtJQUlJLGFBQU8sRUFBQTs7RUFHWDtJQUlXLGFBQUEsRUFBQTs7RUFHWDtJQUlJLGFBQU8sRUFBQTs7RUFHWDtJQUlJLGFBQU8sRUFBQTs7RUFFWDtJQUlXLGFBQUEsRUFBQTs7RUc1RVg7SUFTTSxlQUFTLEVBQUE7O0VFYmY7SUFLVyxlQUFBLEVBQUE7O0VDeUNYO0lBTU0sZUFBUSxFQUFBOztFQUVkO0lBTWMsZUFBQSxFQUFBOztFQzVEZDtJTmlCSSwyQkFBVztRQUFYLHVCQUFXO1lBQVgsbUJBQVcsRUFBQTs7RU1vQ2Y7SUFJSSxrQ0FBZTtJQUNBLHFCQUFBLEVBQUE7O0VBRW5CO0lBR00scUJBQWU7SUFDSCxvQkFBQSxFQUFBOztFQUVEO0lBRVQsdUJBQVM7SUFDVCxZQUFPLEVBQUE7O0VBRWY7SUFNTSxZQUFTLEVBQUE7O0VBUWY7SUFHTSxrQkFBWSxFQUFBOztFQzFFbEI7SUFLTSxZQUFTLEVBQUE7O0VBRWY7SUFLYyxXQUFBLEVBQUE7O0VBR2Q7SUFLZSwyQkFBQTtRQUFBLHVCQUFBO1lBQUEsbUJBQUEsRUFBQTs7RUFFZjtJQUlNLFlBQVMsRUFBQTs7RUFRZjtJQUtNLGVBQVE7SUFDSSxrQkFBQSxFQUFBOztFQVNsQjtJQUtNLFlBQVMsRUFBQTs7RUEyQmY7SUFRYyxvQkFBQSxFQUFBOztFQVNkO0lBS0ksb0JBQVMsRUFBQTs7RUNuSGI7SUFJRSxZQUFTLEVBQUE7O0VBR1g7SUFPRSxxQkFBUyxFQUFBOztFQUVYO0lBSUcsdUJBQVMsRUFBQTs7RUFFWjtJQUNhLHVCQUFBO0lBQ1QsY0FBTyxFQUFBOztFRWpCWDtJQUdrQixrQkFBQSxFQUFBOztFQXdCbEI7SUFHTSxrQkFBWSxFQUFBLEVYekJGOzs7O0FhK0JkOztFWHZDRjtJQUlJLDBCQUFZLEVBQUE7O0VBRWhCO0lBQ2tCLCtCQUFBLEVBQUE7O0VBS2xCO0lBS0ksMEJBQVk7SUFDRixvQkFBQTtJQUNWLG1CQUFjLEVBQUE7O0VBRWxCO0lBQ2dCLG9CQUFBO0lBQ1YsVUFBSztJQUNMLFdBQU07SUFDQyxZQUFBO0lBQ1AscUJBQWU7SUFDZixxQkFBYTtJTnhCUixrQkFBQSxFQUFBOztFTTZCTTtJQUNULG1CQUFTLEVBQUE7O0VBRWpCO0lBQ1Esc0JBQVMsRUFBQTs7RUFFZjtJQUNlLG9CQUFBLEVBQUE7O0VBS1g7SUFHQSxvQkFBVTtJQUNWLGNBQUs7SUFDQyxlQUFBLEVBQUE7O0VBT1o7SUFFSSxnQkFBUyxFQUFBLEVBbkRLOzs7O0FXZ0NoQjs7RVRQRTtJQUNZLGtCQUFBLEVBQUE7O0VBZ0NoQjtJQUNNLHVDQUFXO09BQVgsb0NBQVc7UUFBWCxtQ0FBVztTQUFYLGtDQUFXO1lBQVgsK0JBQVcsRUFBQTs7RUFFSjtJQUNJLHNDQUFBO09BQUEsbUNBQUE7UUFBQSxrQ0FBQTtTQUFBLGlDQUFBO1lBQUEsOEJBQUEsRUFBQTs7RUFRakI7SUFDaUIsa0NBQUE7T0FBQSwrQkFBQTtRQUFBLDhCQUFBO1NBQUEsNkJBQUE7WUFBQSwwQkFBQSxFQUFBOztFQUVXO0lBQ3RCLHNDQUFXO09BQVgsbUNBQVc7UUFBWCxrQ0FBVztTQUFYLGlDQUFXO1lBQVgsOEJBQVcsRUFBQTs7RUFpQ2pCO0lBQ1ksWUFBQTtJQUNOLFdBQU8sRUFBQTs7RUFnQmI7SUFDTSxhQUFPO0lBQ0QsVUFBQSxFQUFBOztFQUNvQjtJQUN4QixjQUFPLEVBQUE7O0VBaUxlO0lBRTFCLGFBQU87SUFDRCxTQUFBLEVBQUE7O0VBR1Y7O0lUdVhJLHFIQUFvSDtJU2xUcEgsb0JBQVk7SUFDQSx3Q0FBQTtPQUFBLHFDQUFBO1NBQUEsbUNBQUE7WUFBQSxnQ0FBQSxFQUFBOztFQUNoQjtJQUNNLHFCQUFZO0lBQ0Esc0NBQUE7T0FBQSxtQ0FBQTtTQUFBLGlDQUFBO1lBQUEsOEJBQUEsRUFBQTs7RUFvWWxCO0lBQ00sa0NBQVc7T0FBWCwrQkFBVztRQUFYLDhCQUFXO1NBQVgsNkJBQVc7WUFBWCwwQkFBVyxFQUFBOztFQUVKO0lBQ0ksc0NBQUE7T0FBQSxtQ0FBQTtRQUFBLGtDQUFBO1NBQUEsaUNBQUE7WUFBQSw4QkFBQSxFQUFBOztFQUVpRDtJQUVqRCxrQ0FBQTtPQUFBLCtCQUFBO1FBQUEsOEJBQUE7U0FBQSw2QkFBQTtZQUFBLDBCQUFBLEVBQUEsRUFudkJEOzs7O0FTTWQ7O0VUZ0RGO0lBZUksY0FBQSxFQUFBOztFQW5GSjtJQUNJLGFBQVM7SUFDQSxnQkFBQTtJQUNULGFBQU8sRUFBQTs7RUFtRlg7SUFjSSxXQUFLO0lBQ0wsV0FBTSxFQUFBOztFQUVWO0lBaUJTLFdBQUE7SUFDTCxhQUFPLEVBQUE7O0VBb0ZYO0lBMENJLGVBQVMsRUFBQTs7RUFrSWI7SUFDSSxrQkFBVTtJQUNELHFCQUFBO0lBQ1QsY0FBUTtJQUNSLGFBQU87SUFDRyxtQkFBQTtJQUNWLHlCQUFZO0lBQ1osb0JBQVksRUFBQTs7RUFoWUQ7SUFDWCxhQUFTO0lBQ1QsZ0JBQVM7SUFDRixhQUFBLEVBQUE7O0VBaVlpQjs7SVRvVHRCLHlCQUF3QjtJU2xUYixrQ0FBQTtPQUFBLCtCQUFBO1FBQUEsOEJBQUE7U0FBQSw2QkFBQTtZQUFBLDBCQUFBO0lBQ1gsWUFBUztrQ0FBQTs7RUFFZjtJQUNnQixrQkFBQTtJQUNWLGNBQVE7SUFDUixhQUFPO0lBQ0sseUJBQUE7SUFDWixtQkFBVTtJQUNWLGtCQUFZO0lBQ1osWUFBQSxFQUFBOztFQUVZOztJVGtUVix5QkFBd0I7SVNoVHhCLGtDQUFXO09BQVgsK0JBQVc7UUFBWCw4QkFBVztTQUFYLDZCQUFXO1lBQVgsMEJBQVcsRUFBQTs7RUFFbkI7O0lUaVRRLHlCQUF3QjtJUy9TYixrQ0FBQTtPQUFBLCtCQUFBO1FBQUEsOEJBQUE7U0FBQSw2QkFBQTtZQUFBLDBCQUFBO0lBQ1gsWUFBUztrQ0FBQTs7RUFFakI7SUFDTSx1QkFBUztJQUNULG9CQUFhLEVBQUE7O0VBRUQ7O0lUK1NaLG9DQUFtQztJUzdTekIsb0JBQUE7SUFDVix1QkFBUztJQTFiRyxjQTJiWjtJQUNBLG1CQUFBO0lBQ0EsWUFBUztJUDdiRixnQk84YlA7SUFDVSxtQkFBQTtJQUNWLHFCQUFlO0lBQ2YsaURBQWtCO09BQWxCLG1EQUFrQjtTQUFsQiw0Q0FBa0I7WUFBbEIseUNBQWtCLEVBQUE7O0VBRU47SVBwY1YsZ0JPcWNBLEVBQUE7O0VBQ1U7SVB0Y1YsZ0JPdWNBO0lBQ1kseUNBQUE7U0FBQSxvQ0FBQSxFQUFBOztFQUVNO0lBQ1gsZUFBQSxFQUFBOztFQUVvQjs7SVQ0UzdCLDBCQUF5QjtJU3hTekIsb0JBQVU7SUFDVixXQUFBO0lBQ0EsYUFBTztJUC9jTCxrQk9nZEY7SUFDUyxlQUFBO0lBQ1QsdUVBQTBCO1NBQTFCLGtFQUEwQjtJQUMxQixrQ0FBVztPQUFYLCtCQUFXO1FBQVgsOEJBQVc7U0FBWCw2QkFBVztZQUFYLDBCQUFXO0lBR2Esc0RBQUE7T0FBQSxtREFBQTtTQUFBLGlEQUFBO1lBQUEsOENBQUEsRUFBQTs7RUFqYytFO0lBQ3pHLGFBQVM7SUFDVCxnQkFBUztJQUNGLGFBQUEsRUFBQTs7RUFnY2lFO0lBQ3BFLFlBQVM7O0lBQ1Qsb0JBQVk7SUFDWSx1REFBQTtPQUFBLG9EQUFBO1NBQUEsa0RBQUE7WUFBQSwrQ0FBQSxFQUFBOztFQUVjOztJVDBTdEMsd0VBQXVFO0lTeFN2RSxnQkFBUztJQUNDLG9CQUFBO0lBQ1YsU0FBTTtJQUNOLFdBQVE7SUFDQSxjQUFBO0lBQ1IsYUFBTztJQUNQLGtCQUFVOztJVDBTVixpQ0FBZ0M7SVN4U3hCLFdBQUE7SUFDUixZQUFTLEVBQUE7O0VBRWpCO0lBQ1Usb0JBQVU7SUFDSCxhQUFBO0lBQ1AsY0FBUTtJQUNSLFFBQUs7SUFDQyxTQUFBO0lBQ0ssbUJBQUE7SUFDRSxtQkFBQTtJQUNiLG9CQUFZO0lBQ1osbUJBQWE7SUFDRCwrQkFBQTs7SVR5U1osaUNBQWdDO0lTdlNoQyxxQkFBZTtJQUNmLFdBQVE7SUFDQyxZQUFBO0lBQ1QsOERBQWtCO09BQWxCLDJEQUFrQjtTQUFsQix5REFBa0I7WUFBbEIsc0RBQWtCLEVBQUE7O0VBRXNFO0lQOWZyRixxQk8rZkQ7SUFDQSx1QkFBQTtJUDdmSixhTzhmSSxFQUFBOztFQUlaOztJVHFTTSxnRkFBK0U7SVNuUzdFLGVBQVE7O0lUcVNWLGdFQUErRDtJU3h4QjVELFlBQUE7SUFEb0MsYUFFM0M7SUFxZk0scUJBQWM7SUFDZCxpQ0FBYztJQUNkLGtCQUFVO0lBQ0Usb0JBQUE7SUFDWixrQkFBWTtJQUNaLG1DQUE0QixFQUFBOztFQUVwQjs7SVRxU1Isd0RBQXVEO0lTblNyRCxpQkFBYztJQUNBLG9CQUFBLEVBQUE7O0VBRVk7O0lUb1M1QiwwQkFBeUI7SVNsU3ZCLGdCQUFBO0lBQ0EsbUJBQWE7SUFDYixtQkFBVztJQUNJLHFCQUFBLEVBQUE7O0VBRVM7SUFDMUIsY0FBUTtJQUNSLG1CQUFhO0lBQ0osb0JBQUE7SVBoaUJKLGdCT2lpQkw7SUFDQSxxQkFBZTtJQUNKLG1CQUFBLEVBQUE7O0VBRWU7SVB0aUIxQixnQk91aUJFLEVBQUE7O0VBRVY7O0lUaVNNLDRDQUEyQztJUy9SekMsa0NBQVc7T0FBWCwrQkFBVztZQUFYLDBCQUFXLEVBQUE7O0VBRUg7O0lUZ1NWLDBCQUF5QjtJUzlSdkIsb0JBQVU7SUFDTCxRQUFBO0lBQ0wsU0FBTTtJQUNOLGNBQVE7SUFDRCxhQUFBLEVBQUE7O0VBRW1CO0lBQ3hCLHFDQUFXO09BQVgsa0NBQVc7UUFBWCxpQ0FBVztTQUFYLGdDQUFXO1lBQVgsNkJBQVcsRUFBQTs7RUFFbUI7SUFDOUIsZ0JBQVMsRUFBQTs7RUFFa0I7SUFDekIsb0JBQU8sRUFBQTs7RUFFSDtJQUNHLGdCQUFBLEVBQUE7O0VBRUg7O0lUMlJWLG1HQUFrRztJU3pSaEcsc0NBQVc7T0FBWCxtQ0FBVztRQUFYLGtDQUFXO1NBQVgsaUNBQVc7WUFBWCw4QkFBVyxFQUFBOztFQUVuQjtJQUNrQixxREFBQTtTQUFBLGdEQUFBLEVBQUE7O0VBRWM7O0lUeVJ4Qix3REFBdUQ7SVN0UnZELGFBQU87SUFDUCxZQUFPO0lBQ0UsZUFBQSxFQUFBOztFQUVlOztJVHVSdEIscUVBQW9FLEVBQUU7O0VTcFJoRTtJQUNPLHFCQUFBO0lBQ2YsWUFBUztJQUNULGNBQVE7SUFDSyxrQkFBQSxFQUFBOztFQUVXO0lBQ1osa0JBQUE7SUFDVixlQUFZO0lBQ1osY0FBUTtJQUNELGFBQUE7SUFDUCxzQkFBZSxFQUFBOztFQUV6QjtJUC9sQlEsZ0JPZ21CRTtJQUNBLG1CQUFhO0lBQ0Ysa0JBQUE7SUFDWCxrQkFBUyxFQUFBOztFQUluQjs7SVRpUk0sd0RBQXVEO0lTbjJCM0QsWUFBTztJQUNQLGFBQUE7SUFvbEJNLHFCQUFRLEVBQUE7O0VBQ2dCOztJVGtSeEIscUVBQW9FO0lTaFJsRSxpQkFBYyxFQUFBOztFQUN4QjtJQUNRLHFCQUFlO0lBQ1AsY0FBQTtJQUNSLGtCQUFhO0lBQ2Isd0JBQVMsRUFBQTs7RUFDRDtJQUNOLHFCQUFZLEVBQUE7O0VBQ047SUFDTixnQkFBQTtJQUNBLG1CQUFhLEVBQUE7O0VBQ29CO0lBQ2pDLGdCQUFTLEVBQUE7O0VBQ3VCO0lBQ2hDLFlBQU0sRUFBQTs7RUFzQjRCO0lBQ3RDLHFCQUFZLEVBQUE7O0VBQ0s7SVBucEJmLHFCT29wQkYsRUFBQTs7RUFrQlc7SUFDWCxZQUFPLEVBQUE7O0VBQ2I7O0lUK1FJLCtDQUE4QztJUzdROUMsZ0NBQWUsRUFBQTs7RUFDRDtJQUNaLFlBQU87SUFDUCxtQ0FBa0I7T0FBbEIsZ0NBQWtCO1FBQWxCLCtCQUFrQjtTQUFsQiw4QkFBa0I7WUFBbEIsMkJBQWtCO0lBQ04scUJBQUE7SUFFWixxQ0FBcUI7T0FBckIsa0NBQXFCO1lBQXJCLDZCQUFxQjtJQUNyQix3REFBa0I7T0FBbEIsa0RBQWtCO1NBQWxCLDhDQUFrQjtZQUFsQix3Q0FBa0IsRUFBQTs7RUFDTjtJQUNaLGFBQU8sRUFBQTs7RUFDSztJQUNaLFlBQU8sRUFBQTs7RUFDMkU7SUFDbEYsYUFBTyxFQUFBOztFQUNLO0lBQ2EsbURBQUE7T0FBQSxnREFBQTtRQUFBLCtDQUFBO1NBQUEsOENBQUE7WUFBQSwyQ0FBQSxFQUFBOztFQUNiO0lBQ1osa0NBQVc7T0FBWCwrQkFBVztRQUFYLDhCQUFXO1NBQVgsNkJBQVc7WUFBWCwwQkFBVyxFQUFBOztFQUNrRTs7SVQ4US9FLDRDQUEyQztJUzVRbEMsZUFBQSxFQUFBOztFQUNZO0lBQ3JCLG9CQUFjLEVBQUE7O0VBQ1E7SUFDZCxXQUFBLEVBQUE7O0VBS1o7SUEyQ0ksZUFBQTtJQWp2QmMsV0FrdkJkLEVBQUE7O0VBRUo7SUFDa0IsNkJBQUE7U0FBQSx3QkFBQTtJQUNaLGNBQVE7SVB2dkJOLGdCT3d2QkY7SUFDYSxvQkFBQTtJQUNiLGlCQUFTO0lBQ1QsbUJBQVcsRUFBQTs7RUFzRGpCO0lBQ0ksb0JBQVU7SUFDVixZQUFBO0lBQ0EsdUJBQVM7SUFDVCxhQUFPO0lBQ0YsUUFBQTtJQUNMLGNBQU87SUFDUCxZQUFTLEVBQUE7O0VBQ047SUFDTyxpQkFBQSxFQUFBLEVBOXhCSDs7OztBU2lCVDs7RVA3Q0Y7SUFRWSxlQUFBLEVBQUE7O0VDRFo7SUFPZSw4QkFBQSxFQUFBOztFQUVFO0lBRVQsNkJBQWE7SUFDYiw4QkFBUyxFQUFBOztFQTRHQztJQUVWLDZCQUFhLEVBQUE7O0VBRXJCO0lBRVEsNkJBQWEsRUFBQSxFRDdIVDs7OztBT3FDVjs7RVBsQ0Y7SUFhTSxrQkFBVTtJQUNDLGlCQUFBO0lBQ1gsZUFBUyxFQUFBLEVBQUE7Ozs7QU9tQmI7O0VKaEJGO0lBSWUsbUJBQUEsRUFBQTs7RUFFZjtJQWNlLGlCQUFBLEVBQUE7O0VBS21CO0lBSWQsaUJBQUEsRUFBQTs7RUFhNEM7SUFLN0QsaUJBQVcsRUFBQSxFQTNDQzs7OztBSVliOztFSDFCRjtJQU1XLGNBQUEsRUFBQTs7RUFtQlg7SUFJSSxlQUFTLEVBQUE7O0VBRWI7SUFJYSxnQkFBQSxFQUFBLEVBN0JGOzs7O0FHb0JUOztFSDFCRjtJQVNJLGVBQVM7SUFDRixjQUFBLEVBQUEsRUFBQTs7OztBZndsRFgsOHV2R0FBNnV2RyIsImZpbGUiOiI8bm8tb3V0cHV0PiIsInNvdXJjZXNDb250ZW50IjpbIi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBOb3JtYWxpemUuc2NzcyBiYXNlZCBvbiBOaWNvbGFzIEdhbGxhZ2hlciBhbmQgSm9uYXRoYW4gTmVhbCdzXG4vLyBub3JtYWxpemUuY3NzIHYyLjEuMyB8IE1JVCBMaWNlbnNlIHwgZ2l0LmlvL25vcm1hbGl6ZVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIE5vcm1hbGl6ZS5zY3NzIHNldHRpbmdzXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG5cbi8vIFNldCB0byB0cnVlIGlmIHlvdSB3YW50IHRvIGFkZCBzdXBwb3J0IGZvciBJRTYgYW5kIElFN1xuLy8gTm90aWNlOiBzZXR0aW5nIHRvIHRydWUgbWlnaHQgcmVuZGVyIHNvbWUgZWxlbWVudHNcbi8vIHNsaWdodGx5IGRpZmZlcmVudGx5IHRoYW4gd2hlbiBzZXQgdG8gZmFsc2VcbiRsZWdhY3lfc3VwcG9ydF9mb3JfaWU6IGZhbHNlICFkZWZhdWx0OyAvLyBVc2VkIGFsc28gaW4gQ29tcGFzc1xuXG5cbi8vIFNldCB0aGUgZGVmYXVsdCBmb250IGZhbWlseSBoZXJlIHNvIHlvdSBkb24ndCBoYXZlIHRvIG92ZXJyaWRlIGl0IGxhdGVyXG4kbm9ybWFsaXplZF9mb250X2ZhbWlseTogc2Fucy1zZXJpZiAhZGVmYXVsdDtcblxuJG5vcm1hbGl6ZV9oZWFkaW5nczogdHJ1ZSAhZGVmYXVsdDtcblxuJGgxX2ZvbnRfc2l6ZTogMmVtICFkZWZhdWx0O1xuJGgyX2ZvbnRfc2l6ZTogMS41ZW0gIWRlZmF1bHQ7XG4kaDNfZm9udF9zaXplOiAxLjE3ZW0gIWRlZmF1bHQ7XG4kaDRfZm9udF9zaXplOiAxZW0gIWRlZmF1bHQ7XG4kaDVfZm9udF9zaXplOiAwLjgzZW0gIWRlZmF1bHQ7XG4kaDZfZm9udF9zaXplOiAwLjc1ZW0gIWRlZmF1bHQ7XG5cbiRoMV9tYXJnaW46IDAuNjdlbSAwICFkZWZhdWx0O1xuJGgyX21hcmdpbjogMC44M2VtIDAgIWRlZmF1bHQ7XG4kaDNfbWFyZ2luOiAxZW0gMCAhZGVmYXVsdDtcbiRoNF9tYXJnaW46IDEuMzNlbSAwICFkZWZhdWx0O1xuJGg1X21hcmdpbjogMS42N2VtIDAgIWRlZmF1bHQ7XG4kaDZfbWFyZ2luOiAyLjMzZW0gMCAhZGVmYXVsdDtcblxuJGJhY2tncm91bmQ6ICNmZmYgIWRlZmF1bHQ7XG4kY29sb3I6ICMwMDAgIWRlZmF1bHQ7XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBIVE1MNSBkaXNwbGF5IGRlZmluaXRpb25zXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyBDb3JyZWN0cyBibG9jayBkaXNwbGF5IG5vdCBkZWZpbmVkIGluIElFNi83LzgvOSAmIEZGM1xuXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm5hdixcbnNlY3Rpb24sXG5zdW1tYXJ5IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbn1cblxuLy8gQ29ycmVjdHMgaW5saW5lLWJsb2NrIGRpc3BsYXkgbm90IGRlZmluZWQgaW4gSUU2LzcvOC85ICYgRkYzXG5cbmF1ZGlvLFxuY2FudmFzLFxudmlkZW8ge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBAaWYgJGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZSB7XG4gICAgICAgICpkaXNwbGF5OiBpbmxpbmU7XG4gICAgICAgICp6b29tOiAxO1xuICAgIH1cbn1cblxuLy8gMS4gUHJldmVudHMgbW9kZXJuIGJyb3dzZXJzIGZyb20gZGlzcGxheWluZyAnYXVkaW8nIHdpdGhvdXQgY29udHJvbHNcbi8vIDIuIFJlbW92ZSBleGNlc3MgaGVpZ2h0IGluIGlPUzUgZGV2aWNlc1xuXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICAgIGRpc3BsYXk6IG5vbmU7IC8vIDFcbiAgICBoZWlnaHQ6IDA7IC8vIDJcbn1cblxuLy9cbi8vIEFkZHJlc3MgYFtoaWRkZW5dYCBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS5cbi8vIEhpZGUgdGhlIGB0ZW1wbGF0ZWAgZWxlbWVudCBpbiBJRSwgU2FmYXJpLCBhbmQgRmlyZWZveCA8IDIyLlxuLy9cblxuW2hpZGRlbl0sIHRlbXBsYXRlIHtcbiAgICBkaXNwbGF5OiBub25lO1xufVxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gQmFzZVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gMS4gQ29ycmVjdHMgdGV4dCByZXNpemluZyBvZGRseSBpbiBJRTYvNyB3aGVuIGJvZHkgZm9udC1zaXplIGlzIHNldCB1c2luZyBlbSB1bml0c1xuLy8gICAgaHR0cDovL2NsYWdudXQuY29tL2Jsb2cvMzQ4LyNjNzkwXG4vLyAyLiBQcmV2ZW50cyBpT1MgdGV4dCBzaXplIGFkanVzdCBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2UsIHdpdGhvdXQgZGlzYWJsaW5nIHVzZXIgem9vbVxuLy8gICAgd3d3LjQ1NmJlcmVhc3RyZWV0LmNvbS9hcmNoaXZlLzIwMTAxMi9jb250cm9sbGluZ190ZXh0X3NpemVfaW5fc2FmYXJpX2Zvcl9pb3Nfd2l0aG91dF9kaXNhYmxpbmdfdXNlcl96b29tL1xuXG5odG1sIHtcbiAgICBAaWYgJGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTAwJTsgLy8gMVxuICAgIH1cblx0XHQvL2JhY2tncm91bmQ6ICRiYWNrZ3JvdW5kO1xuXHRcdC8vY29sb3I6ICRjb2xvcjtcbiAgICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8vIDJcbiAgICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLy8gMlxufVxuXG4vLyBBZGRyZXNzZXMgZm9udC1mYW1pbHkgaW5jb25zaXN0ZW5jeSBiZXR3ZWVuICd0ZXh0YXJlYScgYW5kIG90aGVyIGZvcm0gZWxlbWVudHMuXG5cbmh0bWwsXG5idXR0b24sXG5pbnB1dCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgICAvL2ZvbnQtZmFtaWx5OiAkbm9ybWFsaXplZF9mb250X2ZhbWlseTtcbn1cblxuLy8gQWRkcmVzc2VzIG1hcmdpbnMgaGFuZGxlZCBpbmNvcnJlY3RseSBpbiBJRTYvN1xuXG5ib2R5IHtcbiAgICBtYXJnaW46IDA7XG59XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBMaW5rc1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gMS4gUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgY29sb3IgZnJvbSBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4vLyAyLiBBZGRyZXNzZXMgb3V0bGluZSBkaXNwbGF5ZWQgb2RkbHkgaW4gQ2hyb21lXG4vLyAzLiBJbXByb3ZlcyByZWFkYWJpbGl0eSB3aGVuIGZvY3VzZWQgYW5kIGFsc28gbW91c2UgaG92ZXJlZCBpbiBhbGwgYnJvd3NlcnNcbi8vICAgIHBlb3BsZS5vcGVyYS5jb20vcGF0cmlja2wvZXhwZXJpbWVudHMva2V5Ym9hcmQvdGVzdFxuXG5hIHtcbiAgICAvLyAxXG5cbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcblxuICAgIC8vIDJcblxuICAgICY6Zm9jdXMge1xuICAgICAgICAvL291dGxpbmU6IHRoaW4gZG90dGVkO1xuICAgIH1cblxuICAgIC8vIDNcblxuICAgICY6aG92ZXIsXG4gICAgJjphY3RpdmUge1xuICAgICAgICBvdXRsaW5lOiAwO1xuICAgIH1cbn1cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIFR5cG9ncmFwaHlcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIEFkZHJlc3NlcyBmb250IHNpemVzIGFuZCBtYXJnaW5zIHNldCBkaWZmZXJlbnRseSBpbiBJRTYvN1xuLy8gQWRkcmVzc2VzIGZvbnQgc2l6ZXMgd2l0aGluICdzZWN0aW9uJyBhbmQgJ2FydGljbGUnIGluIEZGNCssIENocm9tZSwgUzVcblxuLyogQGlmIFxcJG5vcm1hbGl6ZV9oZWFkaW5ncyA9PSB0cnVlIHtcbiAgICBoMSB7XG4gICAgICAgIGZvbnQtc2l6ZTogXFwkaDFfZm9udF9zaXplO1xuICAgICAgICBtYXJnaW46IFxcJGgxX21hcmdpbjtcbiAgICB9XG5cbiAgICBoMiB7XG4gICAgICAgIGZvbnQtc2l6ZTogXFwkaDJfZm9udF9zaXplO1xuICAgICAgICBtYXJnaW46IFxcJGgyX21hcmdpbjtcbiAgICB9XG5cbiAgICBoMyB7XG4gICAgICAgIGZvbnQtc2l6ZTogXFwkaDNfZm9udF9zaXplO1xuICAgICAgICBtYXJnaW46IFxcJGgzX21hcmdpbjtcbiAgICB9XG5cbiAgICBoNCB7XG4gICAgICAgIGZvbnQtc2l6ZTogXFwkaDRfZm9udF9zaXplO1xuICAgICAgICBtYXJnaW46IFxcJGg0X21hcmdpbjtcbiAgICB9XG5cbiAgICBoNSB7XG4gICAgICAgIGZvbnQtc2l6ZTogXFwkaDVfZm9udF9zaXplO1xuICAgICAgICBtYXJnaW46IFxcJGg1X21hcmdpbjtcbiAgICB9XG5cbiAgICBoNiB7XG4gICAgICAgIGZvbnQtc2l6ZTogXFwkaDZfZm9udF9zaXplO1xuICAgICAgICBtYXJnaW46IFxcJGg2X21hcmdpbjtcbiAgICB9XG59ICovXG5cbi8vIEFkZHJlc3NlcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOSwgUzUsIENocm9tZVxuXG5hYmJyW3RpdGxlXSB7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZDtcbn1cblxuLy8gQWRkcmVzc2VzIHN0eWxlIHNldCB0byAnYm9sZGVyJyBpbiBGRjMrLCBTNC81LCBDaHJvbWVcblxuYixcbnN0cm9uZyB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbkBpZiAkbGVnYWN5X3N1cHBvcnRfZm9yX2llIHtcbiAgICBibG9ja3F1b3RlIHtcbiAgICAgICAgbWFyZ2luOiAxZW0gNDBweDtcbiAgICB9XG59XG5cbi8vIEFkZHJlc3NlcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIFM1LCBDaHJvbWVcblxuZGZuIHtcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi8vIEFkZHJlc3NlcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFNi83LzgvOVxuXG5tYXJrIHtcbiAgICBiYWNrZ3JvdW5kOiAjZmYwO1xuICAgIGNvbG9yOiAjMDAwO1xufVxuXG4vLyBBZGRyZXNzZXMgbWFyZ2lucyBzZXQgZGlmZmVyZW50bHkgaW4gSUU2LzdcbkBpZiAkbGVnYWN5X3N1cHBvcnRfZm9yX2llIHtcbiAgICBwLFxuICAgIHByZSB7XG4gICAgICAgIG1hcmdpbjogMWVtIDA7XG4gICAgfVxufVxuXG4vLyBDb3JyZWN0cyBmb250IGZhbWlseSBzZXQgb2RkbHkgaW4gSUU2LCBTNC81LCBDaHJvbWVcbi8vIGVuLndpa2lwZWRpYS5vcmcvd2lraS9Vc2VyOkRhdmlkZ290aGJlcmcvVGVzdDU5XG5cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcbiAgICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBzZXJpZjtcbiAgICBAaWYgJGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZSB7XG4gICAgICAgIF9mb250LWZhbWlseTogJ2NvdXJpZXIgbmV3JywgbW9ub3NwYWNlO1xuICAgIH1cbiAgICBmb250LXNpemU6IDFlbTtcbn1cblxuLy8gSW1wcm92ZXMgcmVhZGFiaWxpdHkgb2YgcHJlLWZvcm1hdHRlZCB0ZXh0IGluIGFsbCBicm93c2Vyc1xuXG5wcmUge1xuICAgIHdoaXRlLXNwYWNlOiBwcmU7XG4gICAgd2hpdGUtc3BhY2U6IHByZS13cmFwO1xuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbn1cblxuLy8gU2V0IGNvbnNpc3RlbnQgcXVvdGUgdHlwZXMuXG5cbnEge1xuICAgIHF1b3RlczogXCJcXDIwMUNcIiBcIlxcMjAxRFwiIFwiXFwyMDE4XCIgXCJcXDIwMTlcIjtcbn1cblxuLy8gMS4gQWRkcmVzc2VzIENTUyBxdW90ZXMgbm90IHN1cHBvcnRlZCBpbiBJRTYvN1xuLy8gMi4gQWRkcmVzc2VzIHF1b3RlIHByb3BlcnR5IG5vdCBzdXBwb3J0ZWQgaW4gUzRcblxuLy8gMVxuQGlmICRsZWdhY3lfc3VwcG9ydF9mb3JfaWUge1xuICAgIHEge1xuICAgICAgICBxdW90ZXM6IG5vbmU7XG4gICAgfVxufVxuXG4vLyAyXG5xIHtcbiAgICAmOmJlZm9yZSxcbiAgICAmOmFmdGVyIHtcbiAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgIGNvbnRlbnQ6IG5vbmU7XG4gICAgfVxufVxuXG4vLyBBZGRyZXNzIGluY29uc2lzdGVudCBhbmQgdmFyaWFibGUgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cblxuLyogL3NtYWxsIHtcbiAgICBmb250LXNpemU6IDgwJTtcbn0gKi9cblxuLy8gUHJldmVudHMgc3ViIGFuZCBzdXAgYWZmZWN0aW5nIGxpbmUtaGVpZ2h0IGluIGFsbCBicm93c2Vyc1xuLy8gZ2lzdC5naXRodWIuY29tLzQxMzkzMFxuXG5zdWIsXG5zdXAge1xuICAgIGZvbnQtc2l6ZTogNzUlO1xuICAgIGxpbmUtaGVpZ2h0OiAwO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1cCB7XG4gICAgdG9wOiAtMC41ZW07XG59XG5cbnN1YiB7XG4gICAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gTGlzdHNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIEFkZHJlc3NlcyBtYXJnaW5zIHNldCBkaWZmZXJlbnRseSBpbiBJRTYvN1xuQGlmICRsZWdhY3lfc3VwcG9ydF9mb3JfaWUge1xuICAgIGRsLFxuICAgIG1lbnUsXG4gICAgb2wsXG4gICAgdWwge1xuICAgICAgICAvL21hcmdpbjogMWVtIDA7XG4gICAgfVxufVxuXG5AaWYgJGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZSB7XG4gICAgZGQge1xuICAgICAgICBtYXJnaW46IDAgMCAwIDQwcHg7XG4gICAgfVxufVxuXG4vLyBBZGRyZXNzZXMgcGFkZGluZ3Mgc2V0IGRpZmZlcmVudGx5IGluIElFNi83XG5AaWYgJGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZSB7XG4gICAgbWVudSxcbiAgICBvbCxcbiAgICB1bCB7XG4gICAgICAgIC8vcGFkZGluZzogMCAwIDAgNDBweDtcbiAgICB9XG59XG5cbi8vIENvcnJlY3RzIGxpc3QgaW1hZ2VzIGhhbmRsZWQgaW5jb3JyZWN0bHkgaW4gSUU3XG5cbm5hdiB7XG4gICAgdWwsXG4gICAgb2wge1xuICAgICAgICBAaWYgJGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZSB7XG4gICAgICAgICAgICAvL2xpc3Qtc3R5bGUtaW1hZ2U6IG5vbmU7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBFbWJlZGRlZCBjb250ZW50XG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyAxLiBSZW1vdmVzIGJvcmRlciB3aGVuIGluc2lkZSAnYScgZWxlbWVudCBpbiBJRTYvNy84LzksIEZGM1xuLy8gMi4gSW1wcm92ZXMgaW1hZ2UgcXVhbGl0eSB3aGVuIHNjYWxlZCBpbiBJRTdcbi8vICAgIGNvZGUuZmxpY2tyLmNvbS9ibG9nLzIwMDgvMTEvMTIvb24tdWktcXVhbGl0eS10aGUtbGl0dGxlLXRoaW5ncy1jbGllbnQtc2lkZS1pbWFnZS1yZXNpemluZy9cblxuaW1nIHtcbiAgICBib3JkZXI6IDA7IC8vIDFcbiAgICBAaWYgJGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZSB7XG4gICAgICAgIC1tcy1pbnRlcnBvbGF0aW9uLW1vZGU6IGJpY3ViaWM7IC8vIDJcbiAgICB9XG59XG5cbi8vIENvcnJlY3RzIG92ZXJmbG93IGRpc3BsYXllZCBvZGRseSBpbiBJRTlcblxuc3ZnOm5vdCg6cm9vdCkge1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBGaWd1cmVzXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyBBZGRyZXNzZXMgbWFyZ2luIG5vdCBwcmVzZW50IGluIElFNi83LzgvOSwgUzUsIE8xMVxuXG5maWd1cmUge1xuICAgIG1hcmdpbjogMDtcbn1cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIEZvcm1zXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyBDb3JyZWN0cyBtYXJnaW4gZGlzcGxheWVkIG9kZGx5IGluIElFNi83XG5AaWYgJGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZSB7XG4gICAgZm9ybSB7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICB9XG59XG5cbi8vIERlZmluZSBjb25zaXN0ZW50IGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZ1xuXG5maWVsZHNldCB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgICBtYXJnaW46IDAgMnB4O1xuICAgIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTtcbn1cblxuLy8gMS4gQ29ycmVjdHMgY29sb3Igbm90IGJlaW5nIGluaGVyaXRlZCBpbiBJRTYvNy84Lzlcbi8vIDIuIFJlbW92ZSBwYWRkaW5nIHNvIHBlb3BsZSBhcmVuJ3QgY2F1Z2h0IG91dCBpZiB0aGV5IHplcm8gb3V0IGZpZWxkc2V0cy5cbi8vIDMuIENvcnJlY3RzIHRleHQgbm90IHdyYXBwaW5nIGluIEZGM1xuLy8gNC4gQ29ycmVjdHMgYWxpZ25tZW50IGRpc3BsYXllZCBvZGRseSBpbiBJRTYvN1xuXG5sZWdlbmQge1xuICAgIGJvcmRlcjogMDsgLy8gMVxuICAgIHBhZGRpbmc6IDA7IC8vIDJcbiAgICB3aGl0ZS1zcGFjZTogbm9ybWFsOyAvLyAzXG4gICAgQGlmICRsZWdhY3lfc3VwcG9ydF9mb3JfaWUge1xuICAgICAgICAqbWFyZ2luLWxlZnQ6IC03cHg7IC8vIDRcbiAgICB9XG59XG5cbi8vIDEuIENvcnJlY3QgZm9udCBmYW1pbHkgbm90IGJlaW5nIGluaGVyaXRlZCBpbiBhbGwgYnJvd3NlcnMuXG4vLyAyLiBDb3JyZWN0cyBmb250IHNpemUgbm90IGJlaW5nIGluaGVyaXRlZCBpbiBhbGwgYnJvd3NlcnNcbi8vIDMuIEFkZHJlc3NlcyBtYXJnaW5zIHNldCBkaWZmZXJlbnRseSBpbiBJRTYvNywgRkYzKywgUzUsIENocm9tZVxuLy8gNC4gSW1wcm92ZXMgYXBwZWFyYW5jZSBhbmQgY29uc2lzdGVuY3kgaW4gYWxsIGJyb3dzZXJzXG5cbmJ1dHRvbixcbmlucHV0LFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0OyAvLyAxXG4gICAgZm9udC1zaXplOiAxMDAlOyAvLyAyXG4gICAgbWFyZ2luOiAwOyAvLyAzXG4gICAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyAvLyA0XG4gICAgQGlmICRsZWdhY3lfc3VwcG9ydF9mb3JfaWUge1xuICAgICAgICAqdmVydGljYWwtYWxpZ246IG1pZGRsZTsgLy8gNFxuICAgIH1cbn1cblxuLy8gQWRkcmVzc2VzIEZGMy80IHNldHRpbmcgbGluZS1oZWlnaHQgb24gJ2lucHV0JyB1c2luZyAhaW1wb3J0YW50IGluIHRoZSBVQSBzdHlsZXNoZWV0XG5cbmJ1dHRvbiwgaW5wdXQge1xuICAgIGxpbmUtaGVpZ2h0OiBub3JtYWw7XG59XG5cbi8vIEFkZHJlc3MgaW5jb25zaXN0ZW50IGB0ZXh0LXRyYW5zZm9ybWAgaW5oZXJpdGFuY2UgZm9yIGBidXR0b25gIGFuZCBgc2VsZWN0YC5cbi8vIEFsbCBvdGhlciBmb3JtIGNvbnRyb2wgZWxlbWVudHMgZG8gbm90IGluaGVyaXQgYHRleHQtdHJhbnNmb3JtYCB2YWx1ZXMuXG4vLyBDb3JyZWN0IGBidXR0b25gIHN0eWxlIGluaGVyaXRhbmNlIGluIENocm9tZSwgU2FmYXJpIDUrLCBhbmQgSUUgOCsuXG4vLyBDb3JyZWN0IGBzZWxlY3RgIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3ggNCsgYW5kIE9wZXJhLlxuXG5idXR0b24sXG5zZWxlY3Qge1xuICAgIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vLyAxLiBBdm9pZCB0aGUgV2ViS2l0IGJ1ZyBpbiBBbmRyb2lkIDQuMC4qIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYFxuLy8gICAgYW5kIGB2aWRlb2AgY29udHJvbHNcbi8vIDIuIENvcnJlY3RzIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgJ2lucHV0JyB0eXBlcyBpbiBpT1Ncbi8vIDMuIEltcHJvdmVzIHVzYWJpbGl0eSBhbmQgY29uc2lzdGVuY3kgb2YgY3Vyc29yIHN0eWxlIGJldHdlZW4gaW1hZ2UtdHlwZVxuLy8gICAgJ2lucHV0JyBhbmQgb3RoZXJzXG4vLyA0LiBSZW1vdmVzIGlubmVyIHNwYWNpbmcgaW4gSUU3IHdpdGhvdXQgYWZmZWN0aW5nIG5vcm1hbCB0ZXh0IGlucHV0c1xuLy8gICAgS25vd24gaXNzdWU6IGlubmVyIHNwYWNpbmcgcmVtYWlucyBpbiBJRTZcblxuYnV0dG9uLFxuaHRtbCBpbnB1dFt0eXBlPVwiYnV0dG9uXCJdLCAvLyAxXG5pbnB1dFt0eXBlPVwicmVzZXRcIl0sXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLy8gMlxuICAgIGN1cnNvcjogcG9pbnRlcjsgLy8gM1xuICAgIEBpZiAkbGVnYWN5X3N1cHBvcnRfZm9yX2llIHtcbiAgICAgICAgKm92ZXJmbG93OiB2aXNpYmxlOyAgLy8gNFxuICAgIH1cbn1cblxuLy8gUmUtc2V0IGRlZmF1bHQgY3Vyc29yIGZvciBkaXNhYmxlZCBlbGVtZW50c1xuXG5idXR0b25bZGlzYWJsZWRdLFxuaW5wdXRbZGlzYWJsZWRdIHtcbiAgICBjdXJzb3I6IGRlZmF1bHQ7XG59XG5cbi8vIFJlbW92ZXMgaW5uZXIgcGFkZGluZyBhbmQgYm9yZGVyIGluIEZGMytcbi8vIHd3dy5zaXRlcGVuLmNvbS9ibG9nLzIwMDgvMDUvMTQvdGhlLWRldmlscy1pbi10aGUtZGV0YWlscy1maXhpbmctZG9qb3MtdG9vbGJhci1idXR0b25zL1xuXG5idXR0b24sIGlucHV0IHtcbiAgICAmOjotbW96LWZvY3VzLWlubmVyIHtcbiAgICAgICAgYm9yZGVyOiAwO1xuICAgICAgICBwYWRkaW5nOiAwO1xuICAgIH1cbn1cblxuLy8gMS4gUmVtb3ZlcyBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRTYvNy84Lzlcbi8vIDIuIEltcHJvdmVzIHJlYWRhYmlsaXR5IGFuZCBhbGlnbm1lbnQgaW4gYWxsIGJyb3dzZXJzXG5cbnRleHRhcmVhIHtcbiAgICBvdmVyZmxvdzogYXV0bzsgLy8gMVxuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7IC8vIDJcbn1cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIFRhYmxlc1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gUmVtb3ZlIG1vc3Qgc3BhY2luZyBiZXR3ZWVuIHRhYmxlIGNlbGxzXG5cbnRhYmxlIHtcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICAgIGJvcmRlci1zcGFjaW5nOiAwO1xufVxuXG5pbnB1dCB7XG4gICAgLy8gMS4gQWRkcmVzc2VzIGFwcGVhcmFuY2Ugc2V0IHRvIHNlYXJjaGZpZWxkIGluIFM1LCBDaHJvbWVcbiAgICAvLyAyLiBBZGRyZXNzZXMgYm94LXNpemluZyBzZXQgdG8gYm9yZGVyLWJveCBpbiBTNSwgQ2hyb21lIChpbmNsdWRlIC1tb3ogdG8gZnV0dXJlLXByb29mKVxuICAgICZbdHlwZT1cInNlYXJjaFwiXSB7XG4gICAgICAgIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvLyAxXG4gICAgICAgIC1tb3otYm94LXNpemluZzogY29udGVudC1ib3g7XG4gICAgICAgIC13ZWJraXQtYm94LXNpemluZzogY29udGVudC1ib3g7IC8vIDJcbiAgICAgICAgYm94LXNpemluZzogY29udGVudC1ib3g7XG5cbiAgICBcdC8vIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBzZWFyY2ggY2FuY2VsIGJ1dHRvbiBpbiBTYWZhcmkgNSBhbmQgQ2hyb21lXG4gICAgICAgIC8vIG9uIE9TIFguXG4gICAgICAgICY6Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG4gICAgICAgICY6Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAgICAgICAgICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gMS4gQWRkcmVzcyBib3ggc2l6aW5nIHNldCB0byBgY29udGVudC1ib3hgIGluIElFIDgvOS8xMC5cbiAgICAvLyAyLiBSZW1vdmUgZXhjZXNzIHBhZGRpbmcgaW4gSUUgOC85LzEwLlxuICAgIC8vIDMuIFJlbW92ZXMgZXhjZXNzIHBhZGRpbmcgaW4gSUU3XG4gICAgLy8gICAgS25vd24gaXNzdWU6IGV4Y2VzcyBwYWRkaW5nIHJlbWFpbnMgaW4gSUU2XG4gICAgJlt0eXBlPVwiY2hlY2tib3hcIl0sXG4gICAgJlt0eXBlPVwicmFkaW9cIl0ge1xuICAgIFx0Ym94LXNpemluZzogYm9yZGVyLWJveDsgLy8gMVxuICAgIFx0cGFkZGluZzogMDsgLy8gMlxuICAgIFx0QGlmICRsZWdhY3lfc3VwcG9ydF9mb3JfaWUge1xuICAgICAgICBcdCpoZWlnaHQ6IDEzcHg7IC8vIDNcbiAgICAgICAgXHQqd2lkdGg6IDEzcHg7IC8vIDNcbiAgICBcdH1cbiAgICB9XG59XG4iLCJhcnRpY2xlLCBhc2lkZSwgZGV0YWlscywgZmlnY2FwdGlvbiwgZmlndXJlLCBmb290ZXIsIGhlYWRlciwgaGdyb3VwLCBuYXYsIHNlY3Rpb24sIHN1bW1hcnkge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG5hdWRpbywgY2FudmFzLCB2aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7IH1cblxuW2hpZGRlbl0sIHRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG5odG1sIHtcbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgfVxuXG5ib2R5IHtcbiAgbWFyZ2luOiAwOyB9XG5cbmEge1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDsgfVxuICBhOmhvdmVyLCBhOmFjdGl2ZSB7XG4gICAgb3V0bGluZTogMDsgfVxuXG4vKiBAaWYgXFwkbm9ybWFsaXplX2hlYWRpbmdzID09IHRydWUge1xuICAgIGgxIHtcbiAgICAgICAgZm9udC1zaXplOiBcXCRoMV9mb250X3NpemU7XG4gICAgICAgIG1hcmdpbjogXFwkaDFfbWFyZ2luO1xuICAgIH1cblxuICAgIGgyIHtcbiAgICAgICAgZm9udC1zaXplOiBcXCRoMl9mb250X3NpemU7XG4gICAgICAgIG1hcmdpbjogXFwkaDJfbWFyZ2luO1xuICAgIH1cblxuICAgIGgzIHtcbiAgICAgICAgZm9udC1zaXplOiBcXCRoM19mb250X3NpemU7XG4gICAgICAgIG1hcmdpbjogXFwkaDNfbWFyZ2luO1xuICAgIH1cblxuICAgIGg0IHtcbiAgICAgICAgZm9udC1zaXplOiBcXCRoNF9mb250X3NpemU7XG4gICAgICAgIG1hcmdpbjogXFwkaDRfbWFyZ2luO1xuICAgIH1cblxuICAgIGg1IHtcbiAgICAgICAgZm9udC1zaXplOiBcXCRoNV9mb250X3NpemU7XG4gICAgICAgIG1hcmdpbjogXFwkaDVfbWFyZ2luO1xuICAgIH1cblxuICAgIGg2IHtcbiAgICAgICAgZm9udC1zaXplOiBcXCRoNl9mb250X3NpemU7XG4gICAgICAgIG1hcmdpbjogXFwkaDZfbWFyZ2luO1xuICAgIH1cbn0gKi9cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZDsgfVxuXG5iLCBzdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZDsgfVxuXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7IH1cblxubWFyayB7XG4gIGJhY2tncm91bmQ6ICNmZjA7XG4gIGNvbG9yOiAjMDAwOyB9XG5cbmNvZGUsIGtiZCwgcHJlLCBzYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgc2VyaWY7XG4gIGZvbnQtc2l6ZTogMWVtOyB9XG5cbnByZSB7XG4gIHdoaXRlLXNwYWNlOiBwcmU7XG4gIHdoaXRlLXNwYWNlOiBwcmUtd3JhcDtcbiAgd29yZC13cmFwOiBicmVhay13b3JkOyB9XG5cbnEge1xuICBxdW90ZXM6IFwiXFwyMDFDXCIgXCJcXDIwMURcIiBcIlxcMjAxOFwiIFwiXFwyMDE5XCI7IH1cblxucTpiZWZvcmUsIHE6YWZ0ZXIge1xuICBjb250ZW50OiAnJztcbiAgY29udGVudDogbm9uZTsgfVxuXG4vKiAvc21hbGwge1xuICAgIGZvbnQtc2l6ZTogODAlO1xufSAqL1xuc3ViLCBzdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtOyB9XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTsgfVxuXG5pbWcge1xuICBib3JkZXI6IDA7IH1cblxuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuOyB9XG5cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMDsgfVxuXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gIG1hcmdpbjogMCAycHg7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTsgfVxuXG5sZWdlbmQge1xuICBib3JkZXI6IDA7XG4gIHBhZGRpbmc6IDA7XG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7IH1cblxuYnV0dG9uLCBpbnB1dCwgc2VsZWN0LCB0ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICBmb250LXNpemU6IDEwMCU7XG4gIG1hcmdpbjogMDtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbmJ1dHRvbiwgaW5wdXQge1xuICBsaW5lLWhlaWdodDogbm9ybWFsOyB9XG5cbmJ1dHRvbiwgc2VsZWN0IHtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuYnV0dG9uLCBodG1sIGlucHV0W3R5cGU9XCJidXR0b25cIl0sIGlucHV0W3R5cGU9XCJyZXNldFwiXSwgaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICBjdXJzb3I6IHBvaW50ZXI7IH1cblxuYnV0dG9uW2Rpc2FibGVkXSwgaW5wdXRbZGlzYWJsZWRdIHtcbiAgY3Vyc29yOiBkZWZhdWx0OyB9XG5cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lciwgaW5wdXQ6Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXI6IDA7XG4gIHBhZGRpbmc6IDA7IH1cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbiAgdmVydGljYWwtYWxpZ246IHRvcDsgfVxuXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwOyB9XG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLW1vei1ib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7IH1cbiAgaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbiwgaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG5pbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0sIGlucHV0W3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIHBhZGRpbmc6IDA7IH1cblxuaHRtbCB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7IH1cblxuYm9keSB7XG4gIGNvbG9yOiAjMzMzO1xuICBsaW5lLWhlaWdodDogMS41O1xuICBmb250LWZhbWlseTogTmV3cyBDeWNsZSwgc2Fucy1zZXJpZjtcbiAgYmFja2dyb3VuZC1zaXplOiBhdXRvIDI0cHg7XG4gIG1hcmdpbjogMDsgfVxuXG5bY2xhc3MqPSdfX2hlYWRpbmcnXSB7XG4gIGNvbG9yOiAjMjY3ZTY0O1xuICBmb250LWZhbWlseTogUGxheWZhaXIgRGlzcGxheSwgc2VyaWY7XG4gIGZvbnQtc2l6ZTogMi41cmVtO1xuICBmb250LXdlaWdodDogNDAwO1xuICBsaW5lLWhlaWdodDogMTtcbiAgbWFyZ2luLWJvdHRvbTogMnJlbTsgfVxuXG5bY2xhc3MqPV9fYnV0dG9uXSwgaW5wdXRbdHlwZT1cImJ1dHRvblwiXSwgaW5wdXRbdHlwZT1cInJlc2V0XCJdIHtcbiAgYm9yZGVyOiAxcHggc29saWQgIzI2N2U2NDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBmb250LWZhbWlseTogUGxheWZhaXIgRGlzcGxheSwgc2VyaWY7XG4gIGZvbnQtc2l6ZTogMS4ycmVtO1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcGFkZGluZzogLjc1cmVtIDNyZW07XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgLypJdGVtcyBmb3IgdHJhbnNpdGlvbiAqL1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgY29sb3I6ICMyNjdlNjQ7XG4gIC8qVHJhbnNpdGlvbiBzZXR0aW5ncyAqL1xuICB0cmFuc2l0aW9uOiBhbGwgLjJzIGVhc2U7IH1cbiAgW2NsYXNzKj1fX2J1dHRvbl06aG92ZXIsIGlucHV0W3R5cGU9XCJidXR0b25cIl06aG92ZXIsIGlucHV0W3R5cGU9XCJyZXNldFwiXTpob3ZlciB7XG4gICAgLypUaGVzZSB3aWxsIHRyYW5zaXRpb24gb24gaG92ZXIgKi9cbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjY3ZTY0O1xuICAgIGNvbG9yOiAjZmZmOyB9XG5cbi5jbGVhcmZpeDphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBjbGVhcjogYm90aDsgfVxuXG5pbWcsIGlmcmFtZSwgZW1iZWQge1xuICB3aWR0aDogMTAwJTsgfVxuXG4uY29udGFpbmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjY2NjO1xuICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjY2NjO1xuICBtYXJnaW46IDAgYXV0bztcbiAgbWF4LXdpZHRoOiAxMjAwcHg7IH1cblxuW2NsYXNzKj0nY29sLSddIHtcbiAgZGlzcGxheTogdGFibGUtY2VsbDtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICBbY2xhc3MqPSdjb2wtJ10ge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyOyB9IH1cblxuLmNvbC0yLTEyIHtcbiAgd2lkdGg6IDE2LjY2NjY3JTsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAuY29sLTItMTIge1xuICAgICAgd2lkdGg6IDEwMCU7IH0gfVxuXG4uY29sLTMtMTIge1xuICB3aWR0aDogMjUlOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5jb2wtMy0xMiB7XG4gICAgICB3aWR0aDogMTAwJTsgfSB9XG5cbi5jb2wtNC0xMiB7XG4gIHdpZHRoOiAzMy4zMzMzMyU7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmNvbC00LTEyIHtcbiAgICAgIHdpZHRoOiAxMDAlOyB9IH1cblxuLmNvbC01LTEyIHtcbiAgd2lkdGg6IDQxLjY2NjY3JTsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAuY29sLTUtMTIge1xuICAgICAgd2lkdGg6IDEwMCU7IH0gfVxuXG4uY29sLTYtMTIge1xuICB3aWR0aDogNTAlOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5jb2wtNi0xMiB7XG4gICAgICB3aWR0aDogMTAwJTsgfSB9XG5cbi5jb2wtNy0xMiB7XG4gIHdpZHRoOiA1OC4zMzMzMyU7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmNvbC03LTEyIHtcbiAgICAgIHdpZHRoOiAxMDAlOyB9IH1cblxuLmNvbC04LTEyIHtcbiAgd2lkdGg6IDY2LjY2NjY3JTsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAuY29sLTgtMTIge1xuICAgICAgd2lkdGg6IDEwMCU7IH0gfVxuXG4uY29sLTktMTIge1xuICB3aWR0aDogNzUlOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5jb2wtOS0xMiB7XG4gICAgICB3aWR0aDogMTAwJTsgfSB9XG5cbi5jb2wtMTAtMTIge1xuICB3aWR0aDogODMuMzMzMzMlOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5jb2wtMTAtMTIge1xuICAgICAgd2lkdGg6IDEwMCU7IH0gfVxuXG4uY29sLTExLTEyIHtcbiAgd2lkdGg6IDkxLjY2NjY3JTsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAuY29sLTExLTEyIHtcbiAgICAgIHdpZHRoOiAxMDAlOyB9IH1cblxuKiB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxuICAqOjphZnRlciwgKjo6YmVmb3JlIHtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG5cbmJvZHkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWRlZWViO1xuICBwYWRkaW5nOiAwOyB9XG5cbmEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cblxudGFibGUge1xuICBtYXJnaW46IDAgMCAxLjVlbTtcbiAgd2lkdGg6IDEwMCU7IH1cblxudHIge1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2U1ZTZlNzsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzAwcHgpIHtcbiAgICB0ciB7XG4gICAgICBtYXJnaW4tdG9wOiAwICFpbXBvcnRhbnQ7IH1cbiAgICAgIHRyOmZpcnN0LWNoaWxkIHtcbiAgICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlNWU2ZTc7IH0gfVxuICB0cjpudGgtY2hpbGQoZXZlbikge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmOGY4Zjg7IH1cblxudGQge1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICBwYWRkaW5nOiAxMHB4IDVweDsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzAwcHgpIHtcbiAgICB0ZCB7XG4gICAgICBtYXJnaW4tdG9wOiAwICFpbXBvcnRhbnQ7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDQwJTsgfVxuICAgICAgdGQ6YmVmb3JlIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDZweDtcbiAgICAgICAgbGVmdDogNnB4O1xuICAgICAgICB3aWR0aDogNDAlO1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAxMHB4O1xuICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgICAgICBmb250LXdlaWdodDogNjAwOyB9XG4gICAgICB0ZDpudGgtb2YtdHlwZSgxKTpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiBcIkNpdHk6IFwiOyB9XG4gICAgICB0ZDpudGgtb2YtdHlwZSgyKTpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiBcIkFkZHJlc3M6IFwiOyB9XG4gICAgICB0ZDpudGgtb2YtdHlwZSgzKTpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiBcIlBob25lOiBcIjsgfSB9XG5cbnRoZWFkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U1ZTZlNzsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzAwcHgpIHtcbiAgICB0aGVhZCB0ciB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IC05OTk5cHg7XG4gICAgICBsZWZ0OiAtOTk5OXB4OyB9IH1cbiAgdGhlYWQgdGgge1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICBwYWRkaW5nOiA1cHg7IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDcwMHB4KSB7XG4gIHRhYmxlLCB0aGVhZCwgdGJvZHksIHRoLCB0ZCwgdHIge1xuICAgIGRpc3BsYXk6IGJsb2NrOyB9IH1cblxuLm5hdi1taW5vciB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB0ZXh0LWFsaWduOiByaWdodDsgfVxuICAubmF2LW1pbm9yX19jb250YWluZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjY2NjO1xuICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICNjY2M7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgcGFkZGluZy10b3A6IDFyZW07XG4gICAgbWF4LXdpZHRoOiAxMjAwcHg7IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgIC5uYXYtbWlub3JfX2NvbnRhaW5lciB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuICAubmF2LW1pbm9yIGxpIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cbiAgICAubmF2LW1pbm9yIGxpOmFmdGVyIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIGNvbnRlbnQ6ICcgfCAnO1xuICAgICAgY29sb3I6ICMyNjdlNjQ7XG4gICAgICBtYXJnaW46IDAgMnB4OyB9XG4gICAgLm5hdi1taW5vciBsaTpudGgtY2hpbGQoMyk6YWZ0ZXIge1xuICAgICAgY29udGVudDogJyAnOyB9XG4gIC5uYXYtbWlub3JfX2xpbmsge1xuICAgIGNvbG9yOiAjMzMzO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBwYWRkaW5nOiAwIC41cmVtOyB9XG4gICAgLm5hdi1taW5vcl9fbGluazpob3ZlciB7XG4gICAgICBjb2xvcjogIzI2N2U2NDsgfVxuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICpcbiAqUHJpbWFyeSBzdHlsZVxuICpcbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDIycHgpIHtcbiAgYm9keS5uYXYtb24tbGVmdC5vdmVyZmxvdy1oaWRkZW4ge1xuICAgIG92ZXJmbG93OiBoaWRkZW47IH0gfVxuXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotbXMtY2xlYXIge1xuICAvKiByZW1vdmVzIGNsb3NlIGljb24gLSBJRSAqL1xuICBkaXNwbGF5OiBub25lOyB9XG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24sIGlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sIGlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLXJlc3VsdHMtYnV0dG9uLCBpbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1yZXN1bHRzLWRlY29yYXRpb24ge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKlxuICpNYWluIGNvbXBvbmVudHNcbiAqXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4uY2QtbWFpbi1jb250ZW50LCAuY2QtbWFpbi1oZWFkZXIge1xuICAvKiBGb3JjZSBIYXJkd2FyZSBBY2NlbGVyYXRpb24gaW4gV2ViS2l0ICovXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKTtcbiAgd2lsbC1jaGFuZ2U6IHRyYW5zZm9ybTsgfVxuICAuY2QtbWFpbi1jb250ZW50IHVsLCAuY2QtbWFpbi1oZWFkZXIgdWwge1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7IH1cblxuLmNkLW1haW4tY29udGVudCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3M7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMjJweCkge1xuICAgIC5jZC1tYWluLWNvbnRlbnQubmF2LWlzLXZpc2libGUge1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yNjBweCk7IH1cbiAgICAubmF2LW9uLWxlZnQgLmNkLW1haW4tY29udGVudC5uYXYtaXMtdmlzaWJsZSB7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjYwcHgpOyB9IH1cblxuLmNkLW1haW4taGVhZGVyIHtcbiAgZm9udC1mYW1pbHk6IFBsYXlmYWlyIERpc3BsYXksIHNlcmlmO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAxMDIycHgpIHtcbiAgICAuY2QtbWFpbi1oZWFkZXIubmF2LWlzLXZpc2libGUge1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApOyB9XG4gICAgLm5hdi1vbi1sZWZ0IC5jZC1tYWluLWhlYWRlci5uYXYtaXMtdmlzaWJsZSB7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjYwcHgpOyB9IH1cblxuLmNkLW1haW4tY29udGVudCB7XG4gIG1pbi1oZWlnaHQ6IDEwMHZoO1xuICB6LWluZGV4OiAyOyB9XG5cbi5jZC1tYWluLWhlYWRlciB7XG4gIGhlaWdodDogNTBweDtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbiAgei1pbmRleDogMztcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlNWU2ZTc7IH1cbiAgLm5hdi1pcy1maXhlZCAuY2QtbWFpbi1oZWFkZXIge1xuICAgIC8qIGFkZCAubmF2LWlzLWZpeGVkIGNsYXNzIHRvIGJvZHkgaWYgeW91IHdhbnQgYSBmaXhlZCBuYXZpZ2F0aW9uIG9uID4gMTAyNHB4ICovXG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAuY2QtbWFpbi1oZWFkZXIge1xuICAgICAgaGVpZ2h0OiA4MHB4OyB9XG4gICAgICAuY2QtbWFpbi1oZWFkZXI6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICBkaXNwbGF5OiB0YWJsZTtcbiAgICAgICAgY2xlYXI6IGJvdGg7IH0gfVxuXG4uY2QtbG9nbyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAxMnB4O1xuICBsZWZ0OiA1JTsgfVxuICAuY2QtbG9nbyBpbWcge1xuICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAxMDIycHgpIHtcbiAgICAubmF2LW9uLWxlZnQgLmNkLWxvZ28ge1xuICAgICAgbGVmdDogYXV0bztcbiAgICAgIHJpZ2h0OiA1JTsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAuY2QtbG9nbyB7XG4gICAgICB0b3A6IDI2cHg7XG4gICAgICBsZWZ0OiA0ZW07IH0gfVxuXG4uY2QtaGVhZGVyLWJ1dHRvbnMge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdG9wOiAzcHg7XG4gIHJpZ2h0OiA1JTsgfVxuICAuY2QtaGVhZGVyLWJ1dHRvbnMgbGkge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogMTAyMnB4KSB7XG4gICAgLm5hdi1vbi1sZWZ0IC5jZC1oZWFkZXItYnV0dG9ucyB7XG4gICAgICByaWdodDogYXV0bztcbiAgICAgIGxlZnQ6IDUlOyB9XG4gICAgICAubmF2LW9uLWxlZnQgLmNkLWhlYWRlci1idXR0b25zIGxpIHtcbiAgICAgICAgZmxvYXQ6IHJpZ2h0OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgIC5jZC1oZWFkZXItYnV0dG9ucyB7XG4gICAgICB0b3A6IDFyZW07XG4gICAgICByaWdodDogMXJlbTsgfSB9XG5cbi5jZC1zZWFyY2gtdHJpZ2dlciwgLmNkLW5hdi10cmlnZ2VyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDQ0cHg7XG4gIGhlaWdodDogNDRweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgLyogaGlkZSB0ZXh0ICovXG4gIGNvbG9yOiB0cmFuc3BhcmVudDtcbiAgei1pbmRleDogMzsgfVxuXG4uY2Qtc2VhcmNoLXRyaWdnZXI6OmJlZm9yZSwgLmNkLXNlYXJjaC10cmlnZ2VyOjphZnRlciB7XG4gIC8qIHNlYXJjaCBpY29uICovXG4gIGNvbnRlbnQ6ICcnO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcztcbiAgLyogRm9yY2UgSGFyZHdhcmUgQWNjZWxlcmF0aW9uIGluIFdlYktpdCAqL1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVooMCk7XG4gIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjsgfVxuLmNkLXNlYXJjaC10cmlnZ2VyOjpiZWZvcmUge1xuICAvKiBsZW5zICovXG4gIHRvcDogMTFweDtcbiAgbGVmdDogMTFweDtcbiAgd2lkdGg6IDE4cHg7XG4gIGhlaWdodDogMThweDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBib3JkZXI6IDNweCBzb2xpZCAjNDU1NjUyOyB9XG4uY2Qtc2VhcmNoLXRyaWdnZXI6OmFmdGVyIHtcbiAgLyogaGFuZGxlICovXG4gIGhlaWdodDogM3B4O1xuICB3aWR0aDogOHB4O1xuICBiYWNrZ3JvdW5kOiAjNDU1NjUyO1xuICBib3R0b206IDE0cHg7XG4gIHJpZ2h0OiAxMXB4O1xuICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7IH1cbi5jZC1zZWFyY2gtdHJpZ2dlciBzcGFuIHtcbiAgLyogY29udGFpbmVyIGZvciB0aGUgWCBpY29uICovXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwOyB9XG4uY2Qtc2VhcmNoLXRyaWdnZXIgc3Bhbjo6YmVmb3JlLCAuY2Qtc2VhcmNoLXRyaWdnZXIgc3Bhbjo6YWZ0ZXIge1xuICAvKiBjbG9zZSBpY29uICovXG4gIGNvbnRlbnQ6ICcnO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgaGVpZ2h0OiAzcHg7XG4gIHdpZHRoOiAyMnB4O1xuICB0b3A6IDUwJTtcbiAgbWFyZ2luLXRvcDogLTJweDtcbiAgbGVmdDogNTAlO1xuICBtYXJnaW4tbGVmdDogLTExcHg7XG4gIGJhY2tncm91bmQ6ICM0NTU2NTI7XG4gIG9wYWNpdHk6IDA7XG4gIC8qIEZvcmNlIEhhcmR3YXJlIEFjY2VsZXJhdGlvbiBpbiBXZWJLaXQgKi9cbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApO1xuICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcywgdHJhbnNmb3JtIDAuM3M7IH1cbi5jZC1zZWFyY2gtdHJpZ2dlciBzcGFuOjpiZWZvcmUge1xuICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7IH1cbi5jZC1zZWFyY2gtdHJpZ2dlciBzcGFuOjphZnRlciB7XG4gIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7IH1cbi5jZC1zZWFyY2gtdHJpZ2dlci5zZWFyY2gtaXMtdmlzaWJsZTo6YmVmb3JlLCAuY2Qtc2VhcmNoLXRyaWdnZXIuc2VhcmNoLWlzLXZpc2libGU6OmFmdGVyIHtcbiAgLyogaGlkZSBzZWFyY2ggaWNvbiAqL1xuICBvcGFjaXR5OiAwOyB9XG4uY2Qtc2VhcmNoLXRyaWdnZXIuc2VhcmNoLWlzLXZpc2libGUgc3Bhbjo6YmVmb3JlLCAuY2Qtc2VhcmNoLXRyaWdnZXIuc2VhcmNoLWlzLXZpc2libGUgc3Bhbjo6YWZ0ZXIge1xuICAvKiBzaG93IGNsb3NlIGljb24gKi9cbiAgb3BhY2l0eTogMTsgfVxuLmNkLXNlYXJjaC10cmlnZ2VyLnNlYXJjaC1pcy12aXNpYmxlIHNwYW46OmJlZm9yZSB7XG4gIHRyYW5zZm9ybTogcm90YXRlKDEzNWRlZyk7IH1cbi5jZC1zZWFyY2gtdHJpZ2dlci5zZWFyY2gtaXMtdmlzaWJsZSBzcGFuOjphZnRlciB7XG4gIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTsgfVxuXG4uY2QtbmF2LXRyaWdnZXIgc3BhbiwgLmNkLW5hdi10cmlnZ2VyIHNwYW46OmJlZm9yZSwgLmNkLW5hdi10cmlnZ2VyIHNwYW46OmFmdGVyIHtcbiAgLyogaGFtYnVyZ2VyIGljb24gaW4gQ1NTICovXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBoZWlnaHQ6IDNweDtcbiAgd2lkdGg6IDI0cHg7XG4gIGJhY2tncm91bmQ6ICM0NTU2NTI7IH1cbi5jZC1uYXYtdHJpZ2dlciBzcGFuIHtcbiAgLyogbGluZSBpbiB0aGUgY2VudGVyICovXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIHJpZ2h0OiAxMHB4O1xuICBtYXJnaW4tdG9wOiAtMnB4O1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDAuM3MgMC4zczsgfVxuLmNkLW5hdi10cmlnZ2VyIHNwYW46OmJlZm9yZSwgLmNkLW5hdi10cmlnZ2VyIHNwYW46OmFmdGVyIHtcbiAgLyogb3RoZXIgMiBsaW5lcyAqL1xuICBjb250ZW50OiAnJztcbiAgcmlnaHQ6IDA7XG4gIC8qIEZvcmNlIEhhcmR3YXJlIEFjY2VsZXJhdGlvbiBpbiBXZWJLaXQgKi9cbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApO1xuICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gIHRyYW5zZm9ybS1vcmlnaW46IDAlIDUwJTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MgMC4zczsgfVxuLmNkLW5hdi10cmlnZ2VyIHNwYW46OmJlZm9yZSB7XG4gIC8qIG1lbnUgaWNvbiB0b3AgbGluZSAqL1xuICB0b3A6IC02cHg7IH1cbi5jZC1uYXYtdHJpZ2dlciBzcGFuOjphZnRlciB7XG4gIC8qIG1lbnUgaWNvbiBib3R0b20gbGluZSAqL1xuICB0b3A6IDZweDsgfVxuLmNkLW5hdi10cmlnZ2VyLm5hdi1pcy12aXNpYmxlIHNwYW4ge1xuICAvKiBoaWRlIGxpbmUgaW4gdGhlIGNlbnRlciAqL1xuICBiYWNrZ3JvdW5kOiByZ2JhKDY5LCA4NiwgODIsIDApOyB9XG4uY2QtbmF2LXRyaWdnZXIubmF2LWlzLXZpc2libGUgc3Bhbjo6YmVmb3JlLCAuY2QtbmF2LXRyaWdnZXIubmF2LWlzLXZpc2libGUgc3Bhbjo6YWZ0ZXIge1xuICAvKiBrZWVwIHZpc2libGUgb3RoZXIgMiBsaW5lcyAqL1xuICBiYWNrZ3JvdW5kOiAjNDU1NjUyOyB9XG4uY2QtbmF2LXRyaWdnZXIubmF2LWlzLXZpc2libGUgc3Bhbjo6YmVmb3JlIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDRweCkgdHJhbnNsYXRlWSgtM3B4KSByb3RhdGUoNDVkZWcpOyB9XG4uY2QtbmF2LXRyaWdnZXIubmF2LWlzLXZpc2libGUgc3Bhbjo6YWZ0ZXIge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNHB4KSB0cmFuc2xhdGVZKDJweCkgcm90YXRlKC00NWRlZyk7IH1cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLmNkLW5hdi10cmlnZ2VyIHtcbiAgICBkaXNwbGF5OiBub25lOyB9IH1cblxuLmNkLXByaW1hcnktbmF2LCAuY2QtcHJpbWFyeS1uYXYgdWwge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDI2MHB4O1xuICBiYWNrZ3JvdW5kOiAjNDU1NjUyO1xuICBvdmVyZmxvdzogYXV0bztcbiAgLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6IHRvdWNoO1xuICB6LWluZGV4OiAxO1xuICAvKiBGb3JjZSBIYXJkd2FyZSBBY2NlbGVyYXRpb24gaW4gV2ViS2l0ICovXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zczsgfVxuICAuY2QtcHJpbWFyeS1uYXYgYSwgLmNkLXByaW1hcnktbmF2IHVsIGEge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xuICAgIGhlaWdodDogNTBweDtcbiAgICBsaW5lLWhlaWdodDogNTBweDtcbiAgICBwYWRkaW5nOiAwIDIwcHg7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gICAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICM1MDY0NWY7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApO1xuICAgIHdpbGwtY2hhbmdlOiB0cmFuc2Zvcm0sIG9wYWNpdHk7XG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MsIG9wYWNpdHkgMC4zczsgfVxuICAuY2QtcHJpbWFyeS1uYXYuaXMtaGlkZGVuLCAuY2QtcHJpbWFyeS1uYXYgdWwuaXMtaGlkZGVuIHtcbiAgICAvKiBzZWNvbmRhcnkgbmF2aWdhdGlvbnMgaGlkZGVuIGJ5IGRlZmF1bHQgKi9cbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTAwJSk7IH1cbiAgLmNkLXByaW1hcnktbmF2Lm1vdmVzLW91dCA+IGxpID4gYSwgLmNkLXByaW1hcnktbmF2IHVsLm1vdmVzLW91dCA+IGxpID4gYSB7XG4gICAgLyogcHVzaCB0aGUgbmF2aWdhdGlvbiBpdGVtcyB0byB0aGUgbGVmdCAtIGFuZCBsb3dlciBkb3duIG9wYWNpdHkgLSB3aGVuIHNlY29uZGFyeSBuYXYgc2xpZGVzIGluICovXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKTtcbiAgICBvcGFjaXR5OiAwOyB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDIycHgpIHtcbiAgLm5hdi1vbi1sZWZ0IC5jZC1wcmltYXJ5LW5hdiwgLm5hdi1vbi1sZWZ0IC5jZC1wcmltYXJ5LW5hdiB1bCB7XG4gICAgcmlnaHQ6IGF1dG87XG4gICAgbGVmdDogMDsgfSB9XG5cbi5jZC1wcmltYXJ5LW5hdiAuc2VlLWFsbCBhIHtcbiAgLyogZGlmZmVyZW50IHN0eWxlIGZvciB0aGUgU2VlIGFsbCBidXR0b24gb24gbW9iaWxlIGFuZCB0YWJsZXQgKi9cbiAgY29sb3I6ICMyNjdlNjQ7IH1cbi5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWdhbGxlcnkgLmNkLW5hdi1pdGVtLCAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyAuY2QtbmF2LWl0ZW0ge1xuICAvKiBpdGVtcyB3aXRoIHBpY3R1cmUgKG9yIGljb24pIGFuZCB0aXRsZSAqL1xuICBoZWlnaHQ6IDgwcHg7XG4gIGxpbmUtaGVpZ2h0OiA4MHB4OyB9XG4gIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWdhbGxlcnkgLmNkLW5hdi1pdGVtIGgzLCAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyAuY2QtbmF2LWl0ZW0gaDMge1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7IH1cbi5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWdhbGxlcnkgLmNkLW5hdi1pdGVtIHtcbiAgcGFkZGluZy1sZWZ0OiA5MHB4OyB9XG4gIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWdhbGxlcnkgLmNkLW5hdi1pdGVtIGltZyB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGhlaWdodDogNDBweDtcbiAgICB3aWR0aDogYXV0bztcbiAgICBsZWZ0OiAyMHB4O1xuICAgIHRvcDogNTAlO1xuICAgIG1hcmdpbi10b3A6IC0yMHB4OyB9XG4uY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyAuY2QtbmF2LWl0ZW0ge1xuICBwYWRkaW5nLWxlZnQ6IDc1cHg7IH1cbiAgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtaWNvbnMgLmNkLW5hdi1pdGVtIHAge1xuICAgIGNvbG9yOiAjNDU1NjUyO1xuICAgIGZvbnQtc2l6ZTogMS4zcmVtO1xuICAgIC8qIGhpZGUgZGVzY3JpcHRpb24gb24gc21hbGwgZGV2aWNlcyAqL1xuICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtaWNvbnMgLmNkLW5hdi1pdGVtOjpiZWZvcmUge1xuICAgIC8qIGl0ZW0gaWNvbiAqL1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAyMHB4O1xuICAgIHRvcDogNTAlO1xuICAgIG1hcmdpbi10b3A6IC0yMHB4O1xuICAgIHdpZHRoOiA0MHB4O1xuICAgIGhlaWdodDogNDBweDtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1zaXplOiA0MHB4IDQwcHg7IH1cbiAgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtaWNvbnMgLmNkLW5hdi1pdGVtLml0ZW0tMTo6YmVmb3JlIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIvaW1hZ2VzL2xpbmUtaWNvbi0xLnN2Z1wiKTsgfVxuICAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyAuY2QtbmF2LWl0ZW0uaXRlbS0yOjpiZWZvcmUge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi9pbWFnZXMvbGluZS1pY29uLTIuc3ZnXCIpOyB9XG4gIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWljb25zIC5jZC1uYXYtaXRlbS5pdGVtLTM6OmJlZm9yZSB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiL2ltYWdlcy9saW5lLWljb24tMy5zdmdcIik7IH1cbiAgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtaWNvbnMgLmNkLW5hdi1pdGVtLml0ZW0tNDo6YmVmb3JlIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIvaW1hZ2VzL2xpbmUtaWNvbi00LnN2Z1wiKTsgfVxuICAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyAuY2QtbmF2LWl0ZW0uaXRlbS01OjpiZWZvcmUge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi9pbWFnZXMvbGluZS1pY29uLTUuc3ZnXCIpOyB9XG4gIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWljb25zIC5jZC1uYXYtaXRlbS5pdGVtLTY6OmJlZm9yZSB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiL2ltYWdlcy9saW5lLWljb24tNi5zdmdcIik7IH1cbiAgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtaWNvbnMgLmNkLW5hdi1pdGVtLml0ZW0tNzo6YmVmb3JlIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIvaW1hZ2VzL2xpbmUtaWNvbi03LnN2Z1wiKTsgfVxuICAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyAuY2QtbmF2LWl0ZW0uaXRlbS04OjpiZWZvcmUge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi9pbWFnZXMvbGluZS1pY29uLTguc3ZnXCIpOyB9XG5AbWVkaWEgKG1heC13aWR0aDogMTAyMnB4KSB7XG4gIC5jZC1wcmltYXJ5LW5hdiB7XG4gICAgLyogYnkgZGVmYXVsdCAuY2QtcHJpbWFyeS1uYXYgaXMgaGlkZGVuIC0gdHJpY2sgZm9yIGlPUyBkZXZpY2VzIHdoZXJlIHlvdSBjYW4gc2VlIHRoZSBuYXZpZ2F0aW9uIGlmIHlvdSBwdWxsIGRvd24gKi9cbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gICAgdHJhbnNpdGlvbjogdmlzaWJpbGl0eSAwcyAwLjNzOyB9XG4gICAgLmNkLXByaW1hcnktbmF2Lm5hdi1pcy12aXNpYmxlIHtcbiAgICAgIHZpc2liaWxpdHk6IHZpc2libGU7XG4gICAgICB0cmFuc2l0aW9uOiB2aXNpYmlsaXR5IDBzIDBzOyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAuY2QtcHJpbWFyeS1uYXYge1xuICAgIHBvc2l0aW9uOiBzdGF0aWM7XG4gICAgcGFkZGluZzogMCA1MHB4IDAgMDtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgb3ZlcmZsb3c6IHZpc2libGU7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gICAgLmNkLXByaW1hcnktbmF2OmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICBkaXNwbGF5OiB0YWJsZTtcbiAgICAgIGNsZWFyOiBib3RoOyB9XG4gICAgLmNkLXByaW1hcnktbmF2Lm1vdmVzLW91dCA+IGxpID4gYSB7XG4gICAgICAvKiByZXNldCBtb2JpbGUgc3R5bGUgKi9cbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAgIG9wYWNpdHk6IDE7IH1cbiAgICAuY2QtcHJpbWFyeS1uYXYgdWwge1xuICAgICAgcG9zaXRpb246IHN0YXRpYztcbiAgICAgIGhlaWdodDogYXV0bztcbiAgICAgIHdpZHRoOiBhdXRvO1xuICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICB6LWluZGV4OiAzOyB9XG4gICAgICAuY2QtcHJpbWFyeS1uYXYgdWwuaXMtaGlkZGVuIHtcbiAgICAgICAgLyogcmVzZXQgbW9iaWxlIHN0eWxlICovXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTsgfVxuICAgICAgLmNkLXByaW1hcnktbmF2IHVsLm1vdmVzLW91dCA+IGxpID4gYSB7XG4gICAgICAgIC8qIHJlc2V0IG1vYmlsZSBzdHlsZSAqL1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgICAgIG9wYWNpdHk6IDE7IH1cbiAgICAuY2QtcHJpbWFyeS1uYXYgPiBsaSB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICBtYXJnaW4tbGVmdDogLjVyZW07IH1cbiAgICAuY2QtcHJpbWFyeS1uYXYgPiBsaSA+IGEge1xuICAgICAgLyogbWFpbiBuYXZpZ2F0aW9uIGJ1dHRvbnMgc3R5bGUgKi9cbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIGhlaWdodDogODBweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiA4MHB4O1xuICAgICAgcGFkZGluZzogMDtcbiAgICAgIGNvbG9yOiAjNDU1NjUyO1xuICAgICAgb3ZlcmZsb3c6IHZpc2libGU7XG4gICAgICBib3JkZXItYm90dG9tOiBub25lO1xuICAgICAgdHJhbnNpdGlvbjogY29sb3IgMC4zcywgYm94LXNoYWRvdyAwLjNzOyB9XG4gICAgICAuY2QtcHJpbWFyeS1uYXYgPiBsaSA+IGE6aG92ZXIge1xuICAgICAgICBjb2xvcjogIzI2N2U2NDsgfVxuICAgICAgLmNkLXByaW1hcnktbmF2ID4gbGkgPiBhLnNlbGVjdGVkIHtcbiAgICAgICAgY29sb3I6ICMyNjdlNjQ7XG4gICAgICAgIGJveC1zaGFkb3c6IGluc2V0IDAgLTJweCAwICMyNjdlNjQ7IH1cbiAgICAuY2QtcHJpbWFyeS1uYXYgLmdvLWJhY2ssIC5jZC1wcmltYXJ5LW5hdiAuc2VlLWFsbCB7XG4gICAgICBkaXNwbGF5OiBub25lOyB9XG4gICAgLmNkLXByaW1hcnktbmF2IC5jZC1zZWNvbmRhcnktbmF2LCAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1nYWxsZXJ5LCAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyB7XG4gICAgICAvKiBkcm9wZG93biBtZW51IHN0eWxlICovXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDgwcHg7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgICBwYWRkaW5nOiAycmVtO1xuICAgICAgYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMCAjZTVlNmU3LCAwIDNweCA2cHggcmdiYSgwLCAwLCAwLCAwLjA1KTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAgIHRyYW5zaXRpb246IG9wYWNpdHkgLjNzIDBzLCB2aXNpYmlsaXR5IDBzIDBzOyB9XG4gICAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLXNlY29uZGFyeS1uYXY6YWZ0ZXIsIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWdhbGxlcnk6YWZ0ZXIsIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWljb25zOmFmdGVyIHtcbiAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgZGlzcGxheTogdGFibGU7XG4gICAgICAgIGNsZWFyOiBib3RoOyB9XG4gICAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLXNlY29uZGFyeS1uYXYuaXMtaGlkZGVuLCAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1nYWxsZXJ5LmlzLWhpZGRlbiwgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtaWNvbnMuaXMtaGlkZGVuIHtcbiAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgICAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IC4zcyAwcywgdmlzaWJpbGl0eSAwcyAuM3M7IH1cbiAgICAgIC5jZC1wcmltYXJ5LW5hdiAuY2Qtc2Vjb25kYXJ5LW5hdiA+IC5zZWUtYWxsLCAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1nYWxsZXJ5ID4gLnNlZS1hbGwsIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWljb25zID4gLnNlZS1hbGwge1xuICAgICAgICAvKiB0aGlzIGlzIHRoZSBCSUcgU2VlIGFsbCBidXR0b24gYXQgdGhlIGJvdHRvbSBvZiB0aGUgZHJvcGRvd24gbWVudSAqL1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICBib3R0b206IDA7XG4gICAgICAgIGhlaWdodDogODBweDtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgIC8qIHJlc2V0IHNvbWUgaW5oZXJpdGVkIHN0eWxlICovXG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgcGFkZGluZzogMDsgfVxuICAgICAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLXNlY29uZGFyeS1uYXYgPiAuc2VlLWFsbCBhLCAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1nYWxsZXJ5ID4gLnNlZS1hbGwgYSwgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtaWNvbnMgPiAuc2VlLWFsbCBhIHtcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgIHRvcDogMDtcbiAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICAgIGZvbnQtc2l6ZTogMi4ycmVtO1xuICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICBsaW5lLWhlaWdodDogODBweDtcbiAgICAgICAgICBib3JkZXItdG9wOiAxcHggc29saWQgI2U1ZTZlNztcbiAgICAgICAgICAvKiByZXNldCBzb21lIGluaGVyaXRlZCBzdHlsZSAqL1xuICAgICAgICAgIGJvcmRlci1ib3R0b206IG5vbmU7XG4gICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgICAgdHJhbnNpdGlvbjogY29sb3IgMC4ycywgYmFja2dyb3VuZCAwLjJzLCBib3JkZXIgMC4yczsgfVxuICAgICAgICAgIC5jZC1wcmltYXJ5LW5hdiAuY2Qtc2Vjb25kYXJ5LW5hdiA+IC5zZWUtYWxsIGE6aG92ZXIsIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWdhbGxlcnkgPiAuc2VlLWFsbCBhOmhvdmVyLCAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyA+IC5zZWUtYWxsIGE6aG92ZXIge1xuICAgICAgICAgICAgYmFja2dyb3VuZDogIzQ1NTY1MjtcbiAgICAgICAgICAgIGJvcmRlci1jb2xvcjogIzQ1NTY1MjtcbiAgICAgICAgICAgIGNvbG9yOiAjZmZmOyB9XG4gICAgLmNkLXByaW1hcnktbmF2IC5jZC1zZWNvbmRhcnktbmF2ID4gbGkge1xuICAgICAgLyogY2hhbmdlIHRoZSBoZWlnaHQgYWNjb3JkaW5nIHRvIHlvdXIgbmVlZHMgLSB5b3UgY2FuIGV2ZW4gc2V0IGhlaWdodDogYXV0byAqL1xuICAgICAgaGVpZ2h0OiAzNDBweDtcbiAgICAgIC8qIGhlcmUgeW91IHNldCB0aGUgbnVtYmVyIG9mIGNvbHVtbnMgLSB1c2Ugd2lkdGggcGVyY2VudGFnZSAqL1xuICAgICAgd2lkdGg6IDIzJTtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgbWFyZ2luLXJpZ2h0OiAyLjY2JTtcbiAgICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICNlNWU2ZTc7XG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgb3ZlcmZsb3cteDogaGlkZGVuO1xuICAgICAgb3ZlcmZsb3cteTogYXV0bztcbiAgICAgIC13ZWJraXQtb3ZlcmZsb3ctc2Nyb2xsaW5nOiB0b3VjaDsgfVxuICAgICAgLmNkLXByaW1hcnktbmF2IC5jZC1zZWNvbmRhcnktbmF2ID4gbGk6bnRoLWNoaWxkKDRuKzIpIHtcbiAgICAgICAgLyogKzIgYmVjYXVzZSB3ZSBoYXZlIDIgbGlzdCBpdGVtcyB3aXRoIGRpc3BsYXk6bm9uZSAqL1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgICAgIGJvcmRlci1yaWdodDogbm9uZTsgfVxuICAgICAgLmNkLXByaW1hcnktbmF2IC5jZC1zZWNvbmRhcnktbmF2ID4gbGkgPiBhIHtcbiAgICAgICAgLyogc2Vjb25kYXJ5IG5hdiB0aXRsZSAqL1xuICAgICAgICBjb2xvcjogIzI2N2U2NDtcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgIGZvbnQtc2l6ZTogMS42cmVtO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAuNmVtOyB9XG4gICAgLmNkLXByaW1hcnktbmF2IC5jZC1zZWNvbmRhcnktbmF2IGEge1xuICAgICAgaGVpZ2h0OiAzMHB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDMwcHg7XG4gICAgICBwYWRkaW5nOiAwIDE4JSAwIDA7XG4gICAgICBjb2xvcjogIzQ1NTY1MjtcbiAgICAgIGJvcmRlci1ib3R0b206IG5vbmU7XG4gICAgICBmb250LXNpemU6IDEuNHJlbTsgfVxuICAgICAgLmNkLXByaW1hcnktbmF2IC5jZC1zZWNvbmRhcnktbmF2IGE6aG92ZXIge1xuICAgICAgICBjb2xvcjogIzI2N2U2NDsgfVxuICAgIC5jZC1wcmltYXJ5LW5hdiAuY2Qtc2Vjb25kYXJ5LW5hdiB1bCB7XG4gICAgICAvKiBGb3JjZSBIYXJkd2FyZSBBY2NlbGVyYXRpb24gaW4gV2ViS2l0ICovXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVooMCk7IH1cbiAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLXNlY29uZGFyeS1uYXYgdWwgdWwge1xuICAgICAgLyogdGVydGlhcnkgbmF2aWdhdGlvbiAqL1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAwO1xuICAgICAgbGVmdDogMDtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgIHdpZHRoOiAxMDAlOyB9XG4gICAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLXNlY29uZGFyeS1uYXYgdWwgdWwuaXMtaGlkZGVuIHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwMCUpOyB9XG4gICAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLXNlY29uZGFyeS1uYXYgdWwgdWwgLmdvLWJhY2sge1xuICAgICAgICBkaXNwbGF5OiBibG9jazsgfVxuICAgICAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLXNlY29uZGFyeS1uYXYgdWwgdWwgLmdvLWJhY2sgYSB7XG4gICAgICAgICAgY29sb3I6IHRyYW5zcGFyZW50OyB9XG4gICAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLXNlY29uZGFyeS1uYXYgdWwgdWwgLnNlZS1hbGwge1xuICAgICAgICBkaXNwbGF5OiBibG9jazsgfVxuICAgIC5jZC1wcmltYXJ5LW5hdiAuY2Qtc2Vjb25kYXJ5LW5hdiAubW92ZXMtb3V0ID4gbGkgPiBhIHtcbiAgICAgIC8qIHB1c2ggdGhlIG5hdmlnYXRpb24gaXRlbXMgdG8gdGhlIGxlZnQgLSBhbmQgbG93ZXIgZG93biBvcGFjaXR5IC0gd2hlbiB0ZXJ0aWFyeSBuYXYgc2xpZGVzIGluICovXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMCUpOyB9XG4gICAgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtZ2FsbGVyeSB7XG4gICAgICBib3gtc2hhZG93OiAwIDVweCA1cHggcmdiYSgxMDAsIDEwMCwgMTAwLCAwLjMpOyB9XG4gICAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1nYWxsZXJ5IGxpIHtcbiAgICAgICAgLyogc2V0IGhlcmUgbnVtYmVyIG9mIGNvbHVtbnMgLSB1c2Ugd2lkdGggcGVyY2VudGFnZSAqL1xuICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgICAgd2lkdGg6IDI1JTtcbiAgICAgICAgcGFkZGluZzogMXJlbTsgfVxuICAgICAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1nYWxsZXJ5IGxpOm50aC1jaGlsZCg0bisyKSB7XG4gICAgICAgICAgLyogKzIgYmVjYXVzZSB3ZSBoYXZlIHR3byBhZGRpdGlvbmFsIGxpc3QgaXRlbXMgd2l0aCBkaXNwbGF5Om5vbmUgKi8gfVxuICAgICAgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtZ2FsbGVyeSAuY2QtbmF2LWl0ZW0ge1xuICAgICAgICBib3JkZXItYm90dG9tOiBub25lO1xuICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICBoZWlnaHQ6IGF1dG87XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjI7IH1cbiAgICAgICAgLmNkLXByaW1hcnktbmF2IC5jZC1uYXYtZ2FsbGVyeSAuY2QtbmF2LWl0ZW0gaW1nIHtcbiAgICAgICAgICBwb3NpdGlvbjogc3RhdGljO1xuICAgICAgICAgIG1hcmdpbi10b3A6IDA7XG4gICAgICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgIG1hcmdpbi1ib3R0b206IC42cmVtOyB9XG4gICAgICAgIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWdhbGxlcnkgLmNkLW5hdi1pdGVtIGgzIHtcbiAgICAgICAgICBjb2xvcjogIzI2N2U2NDtcbiAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgICBmb250LXNpemU6IC45cmVtO1xuICAgICAgICAgIHBhZGRpbmc6IDAgLjRyZW07IH1cbiAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyBsaSB7XG4gICAgICAvKiBzZXQgaGVyZSBudW1iZXIgb2YgY29sdW1ucyAtIHVzZSB3aWR0aCBwZXJjZW50YWdlICovXG4gICAgICB3aWR0aDogMzIlO1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBtYXJnaW46IDAgMiUgMjBweCAwOyB9XG4gICAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyBsaTpudGgtY2hpbGQoM24rMikge1xuICAgICAgICAvKiArMiBiZWNhdXNlIHdlIGhhdmUgdHdvIGFkZGl0aW9uYWwgbGlzdCBpdGVtcyB3aXRoIGRpc3BsYXk6bm9uZSAqL1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7IH1cbiAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyAuY2QtbmF2LWl0ZW0ge1xuICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgICAgIGhlaWdodDogODBweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjI7XG4gICAgICBwYWRkaW5nOiAyNHB4IDAgMCA4NXB4OyB9XG4gICAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyAuY2QtbmF2LWl0ZW06aG92ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kOiAjZmFmYWZiOyB9XG4gICAgICAuY2QtcHJpbWFyeS1uYXYgLmNkLW5hdi1pY29ucyAuY2QtbmF2LWl0ZW0gaDMge1xuICAgICAgICBjb2xvcjogIzI2N2U2NDtcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cbiAgICAgIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWljb25zIC5jZC1uYXYtaXRlbSBwIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7IH1cbiAgICAgIC5jZC1wcmltYXJ5LW5hdiAuY2QtbmF2LWljb25zIC5jZC1uYXYtaXRlbTo6YmVmb3JlIHtcbiAgICAgICAgbGVmdDogMjVweDsgfSB9XG5cbi5oYXMtY2hpbGRyZW4gPiBhLCAuZ28tYmFjayBhIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC5oYXMtY2hpbGRyZW4gPiBhOjpiZWZvcmUsIC5oYXMtY2hpbGRyZW4gPiBhOjphZnRlciwgLmdvLWJhY2sgYTo6YmVmb3JlLCAuZ28tYmFjayBhOjphZnRlciB7XG4gICAgLyogYXJyb3cgaWNvbiBpbiBDU1MgLSBmb3IgZWxlbWVudCB3aXRoIG5lc3RlZCB1bm9yZGVyZWQgbGlzdHMgKi9cbiAgICBjb250ZW50OiAnJztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1MCU7XG4gICAgbWFyZ2luLXRvcDogLTFweDtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgaGVpZ2h0OiAycHg7XG4gICAgd2lkdGg6IDEwcHg7XG4gICAgYmFja2dyb3VuZDogIzVjNzI2ZDtcbiAgICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47IH1cbiAgLmhhcy1jaGlsZHJlbiA+IGE6OmJlZm9yZSwgLmdvLWJhY2sgYTo6YmVmb3JlIHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7IH1cbiAgLmhhcy1jaGlsZHJlbiA+IGE6OmFmdGVyLCAuZ28tYmFjayBhOjphZnRlciB7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgLmhhcy1jaGlsZHJlbiA+IGE6OmJlZm9yZSwgLmhhcy1jaGlsZHJlbiA+IGE6OmFmdGVyLCAuZ28tYmFjayBhOjpiZWZvcmUsIC5nby1iYWNrIGE6OmFmdGVyIHtcbiAgICAgIGJhY2tncm91bmQ6ICNjYWNkY2Y7IH1cbiAgICAuaGFzLWNoaWxkcmVuID4gYTpob3Zlcjo6YmVmb3JlLCAuaGFzLWNoaWxkcmVuID4gYTpob3Zlcjo6YWZ0ZXIsIC5nby1iYWNrIGE6aG92ZXI6OmJlZm9yZSwgLmdvLWJhY2sgYTpob3Zlcjo6YWZ0ZXIge1xuICAgICAgYmFja2dyb3VuZDogIzI2N2U2NDsgfSB9XG5cbi5oYXMtY2hpbGRyZW4gPiBhIHtcbiAgcGFkZGluZy1yaWdodDogNDBweDsgfVxuICAuaGFzLWNoaWxkcmVuID4gYTo6YmVmb3JlLCAuaGFzLWNoaWxkcmVuID4gYTo6YWZ0ZXIge1xuICAgIC8qIGFycm93IGdvZXMgb24gdGhlIHJpZ2h0IHNpZGUgLSBjaGlsZHJlbiBuYXZpZ2F0aW9uICovXG4gICAgcmlnaHQ6IDIwcHg7XG4gICAgdHJhbnNmb3JtLW9yaWdpbjogOXB4IDUwJTsgfVxuXG4uY2QtcHJpbWFyeS1uYXYgLmdvLWJhY2sgYSB7XG4gIHBhZGRpbmctbGVmdDogNDBweDsgfVxuICAuY2QtcHJpbWFyeS1uYXYgLmdvLWJhY2sgYTo6YmVmb3JlLCAuY2QtcHJpbWFyeS1uYXYgLmdvLWJhY2sgYTo6YWZ0ZXIge1xuICAgIC8qIGFycm93IGdvZXMgb24gdGhlIGxlZnQgc2lkZSAtIGdvIGJhY2sgYnV0dG9uICovXG4gICAgbGVmdDogMjBweDtcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiAxcHggNTAlOyB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLmhhcy1jaGlsZHJlbiA+IGE6OmJlZm9yZSwgLmhhcy1jaGlsZHJlbiA+IGE6OmFmdGVyIHtcbiAgICByaWdodDogMTUlOyB9XG4gIC5jZC1wcmltYXJ5LW5hdiA+IC5oYXMtY2hpbGRyZW4gPiBhIHtcbiAgICAvKiBtYWluIG5hdmlnYXRpb24gYXJyb3dzIG9uIGxhcmdlciBkZXZpY2VzICovXG4gICAgcGFkZGluZy1yaWdodDogMzBweCAhaW1wb3J0YW50OyB9XG4gICAgLmNkLXByaW1hcnktbmF2ID4gLmhhcy1jaGlsZHJlbiA+IGE6OmJlZm9yZSwgLmNkLXByaW1hcnktbmF2ID4gLmhhcy1jaGlsZHJlbiA+IGE6OmFmdGVyIHtcbiAgICAgIHdpZHRoOiA5cHg7XG4gICAgICB0cmFuc2Zvcm0tb3JpZ2luOiA1MCUgNTAlO1xuICAgICAgYmFja2dyb3VuZDogI2NhY2RjZjtcbiAgICAgIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICAgIHRyYW5zaXRpb246IHdpZHRoIDAuM3MsIHRyYW5zZm9ybSAwLjNzOyB9XG4gICAgLmNkLXByaW1hcnktbmF2ID4gLmhhcy1jaGlsZHJlbiA+IGE6OmJlZm9yZSB7XG4gICAgICByaWdodDogMTJweDsgfVxuICAgIC5jZC1wcmltYXJ5LW5hdiA+IC5oYXMtY2hpbGRyZW4gPiBhOjphZnRlciB7XG4gICAgICByaWdodDogN3B4OyB9XG4gICAgLmNkLXByaW1hcnktbmF2ID4gLmhhcy1jaGlsZHJlbiA+IGEuc2VsZWN0ZWQ6OmJlZm9yZSwgLmNkLXByaW1hcnktbmF2ID4gLmhhcy1jaGlsZHJlbiA+IGEuc2VsZWN0ZWQ6OmFmdGVyIHtcbiAgICAgIHdpZHRoOiAxNHB4OyB9XG4gICAgLmNkLXByaW1hcnktbmF2ID4gLmhhcy1jaGlsZHJlbiA+IGEuc2VsZWN0ZWQ6OmJlZm9yZSB7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNXB4KSByb3RhdGUoLTQ1ZGVnKTsgfVxuICAgIC5jZC1wcmltYXJ5LW5hdiA+IC5oYXMtY2hpbGRyZW4gPiBhLnNlbGVjdGVkOjphZnRlciB7XG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7IH1cbiAgLmNkLXNlY29uZGFyeS1uYXYgPiAuaGFzLWNoaWxkcmVuID4gYTo6YmVmb3JlLCAuY2Qtc2Vjb25kYXJ5LW5hdiA+IC5oYXMtY2hpbGRyZW4gPiBhOjphZnRlciB7XG4gICAgLyogcmVtb3ZlIGFycm93cyBvbiBzZWNvbmRhcnkgbmF2IHRpdGxlcyAqL1xuICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgLmNkLXByaW1hcnktbmF2IC5nby1iYWNrIGEge1xuICAgIHBhZGRpbmctbGVmdDogMjBweDsgfVxuICAgIC5jZC1wcmltYXJ5LW5hdiAuZ28tYmFjayBhOjpiZWZvcmUsIC5jZC1wcmltYXJ5LW5hdiAuZ28tYmFjayBhOjphZnRlciB7XG4gICAgICBsZWZ0OiAxcHg7IH0gfVxuXG4uY2Qtc2VhcmNoIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBoZWlnaHQ6IDUwcHg7XG4gIHdpZHRoOiAxMDAlO1xuICB0b3A6IDUwcHg7XG4gIGxlZnQ6IDA7XG4gIHotaW5kZXg6IDM7XG4gIG9wYWNpdHk6IDA7XG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAuM3MgMHMsIHZpc2liaWxpdHkgMHMgLjNzOyB9XG4gIC5jZC1zZWFyY2ggZm9ybSB7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gIC5jZC1zZWFyY2ggaW5wdXQge1xuICAgIGJvcmRlci1yYWRpdXM6IDA7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgZm9udC1mYW1pbHk6IHNlcmlmO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBmb250LXNpemU6IDJyZW07XG4gICAgcGFkZGluZzogMCA1JTtcbiAgICBhcHBlYXJhbmNlOiBub25lOyB9XG4gICAgLmNkLXNlYXJjaCBpbnB1dDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciwgLmNkLXNlYXJjaCBpbnB1dDo6LW1vei1wbGFjZWhvbGRlciwgLmNkLXNlYXJjaCBpbnB1dDotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgICAgY29sb3I6ICNjYWNkY2Y7IH1cbiAgICAuY2Qtc2VhcmNoIGlucHV0OmZvY3VzIHtcbiAgICAgIG91dGxpbmU6IG5vbmU7IH1cbiAgLmNkLXNlYXJjaC5pcy12aXNpYmxlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHZpc2liaWxpdHk6IHZpc2libGU7XG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAuM3MgMHMsIHZpc2liaWxpdHkgMHMgMHM7IH1cbiAgLm5hdi1pcy1maXhlZCAuY2Qtc2VhcmNoIHtcbiAgICBwb3NpdGlvbjogZml4ZWQ7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgIC5jZC1zZWFyY2gge1xuICAgICAgaGVpZ2h0OiAxMjBweDtcbiAgICAgIHRvcDogODBweDsgfVxuICAgICAgLmNkLXNlYXJjaCBpbnB1dCB7XG4gICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgY29sb3I6ICMyNjdlNjQ7XG4gICAgICAgIGZvbnQtZmFtaWx5OiBzZXJpZjtcbiAgICAgICAgcGFkZGluZzogMCAycmVtO1xuICAgICAgICBmb250LXNpemU6IDMuMnJlbTsgfSB9XG5cbi5jZC1vdmVybGF5IHtcbiAgLyogc2hhZG93IGxheWVyIHZpc2libGUgd2hlbiBuYXZpZ2F0aW9uIGlzIGFjdGl2ZSAqL1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHotaW5kZXg6IDI7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gIG9wYWNpdHk6IDA7XG4gIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzIDBzLCB2aXNpYmlsaXR5IDBzIDAuM3MsIHRyYW5zZm9ybSAwLjNzIDBzOyB9XG4gIC5jZC1vdmVybGF5LmlzLXZpc2libGUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3MgMHMsIHZpc2liaWxpdHkgMHMgMHMsIHRyYW5zZm9ybSAwLjNzIDBzOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAxMDIycHgpIHtcbiAgICAuY2Qtb3ZlcmxheS5pcy12aXNpYmxlIHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTsgfVxuICAgIC5uYXYtb24tbGVmdCAuY2Qtb3ZlcmxheS5pcy12aXNpYmxlIHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyNjBweCk7IH1cbiAgICAuY2Qtb3ZlcmxheS5pcy12aXNpYmxlLnNlYXJjaC1pcy12aXNpYmxlLCAubmF2LW9uLWxlZnQgLmNkLW92ZXJsYXkuaXMtdmlzaWJsZS5zZWFyY2gtaXMtdmlzaWJsZSB7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7IH0gfVxuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICpcbiAqc3VwcG9ydCBmb3Igbm8ganNcbiAqXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4ubm8tanMgLmNkLXByaW1hcnktbmF2IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBoZWlnaHQ6IGF1dG87XG4gIHdpZHRoOiAxMDAlO1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgei1pbmRleDogMjsgfVxuXG4ubm8tanMgLmNkLXNlYXJjaCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdG9wOiAwO1xuICBvcGFjaXR5OiAxO1xuICB2aXNpYmlsaXR5OiB2aXNpYmxlOyB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLm5vLWpzIC5jZC1wcmltYXJ5LW5hdiB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHotaW5kZXg6IDM7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIHRvcDogMDtcbiAgICByaWdodDogMTUwcHg7XG4gICAgcGFkZGluZzogMDsgfVxuICAubm8tanMgLm5hdi1pcy1maXhlZCAuY2QtcHJpbWFyeS1uYXYge1xuICAgIHBvc2l0aW9uOiBmaXhlZDsgfSB9XG5cbi5uYXYtZm9vdGVyIHtcbiAgcGFkZGluZzogMzBweCAyMHB4IDIwcHg7XG4gIHRleHQtYWxpZ246IGxlZnQ7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLm5hdi1mb290ZXIge1xuICAgICAgZGlzcGxheTogbm9uZTsgfSB9XG4gIC5uYXYtZm9vdGVyX19oZWFkaW5nIHtcbiAgICBmb250LWZhbWlseTogTmV3cyBDeWNsZSwgc2Fucy1zZXJpZjtcbiAgICBmb250LXNpemU6IDFyZW07XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICBtYXJnaW4tYm90dG9tOiAxcmVtOyB9XG4gICAgLm5hdi1mb290ZXJfX2hlYWRpbmcgYSB7XG4gICAgICBjb2xvcjogIzMzMzsgfVxuICAgICAgLm5hdi1mb290ZXJfX2hlYWRpbmcgYTpob3ZlciB7XG4gICAgICAgIGNvbG9yOiAjMjY3ZTY0OyB9XG4gIC5uYXYtZm9vdGVyX19saW5rIHtcbiAgICBmb250LXNpemU6IDE0cHg7IH1cbiAgLm5hdi1mb290ZXJfX2JveCB7XG4gICAgcGFkZGluZzogMCAxMHB4O1xuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7IH1cbiAgLm5hdi1mb290ZXJfX2JveC1uYXJyb3cge1xuICAgIHBhZGRpbmc6IDAgMTBweDtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wOyB9XG4gIC5uYXYtZm9vdGVyX19idXR0b24ge1xuICAgIGJvcmRlci13aWR0aDogMXB4O1xuICAgIGNvbG9yOiAjMjY3ZTY0O1xuICAgIGZvbnQtc2l6ZTogLjlyZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbiAgICBwYWRkaW5nOiAuNXJlbSAxcmVtOyB9XG4gIC5uYXYtZm9vdGVyX19zdWItbGlua3Mge1xuICAgIGZvbnQtc2l6ZTogMTRweDsgfVxuICAgIC5uYXYtZm9vdGVyX19zdWItbGlua3MgYSB7XG4gICAgICBjb2xvcjogIzMzMzsgfVxuICAgICAgLm5hdi1mb290ZXJfX3N1Yi1saW5rcyBhOmhvdmVyIHtcbiAgICAgICAgY29sb3I6ICMyNjdlNjQ7IH1cbiAgICAubmF2LWZvb3Rlcl9fc3ViLWxpbmtzIGxpOm50aC1jaGlsZCgxKSB7XG4gICAgICBmb250LWZhbWlseTogTmV3cyBDeWNsZSwgc2Fucy1zZXJpZjtcbiAgICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgICBtYXJnaW4tYm90dG9tOiAuNXJlbTsgfVxuXG4uYmFubmVyLXRhbGwge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoaW1hZ2VzL2JvYXQuanBnKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBoZWlnaHQ6IDIwMHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDc2OXB4KSB7XG4gICAgLmJhbm5lci10YWxsIHtcbiAgICAgIGhlaWdodDogNDY1cHg7IH0gfVxuICAuYmFubmVyLXRhbGxfX2hlYWRsaW5lIHtcbiAgICBib3R0b206IDNyZW07XG4gICAgY29sb3I6ICNmZmY7XG4gICAgZm9udC1mYW1pbHk6IHNlcmlmO1xuICAgIGZvbnQtc2l6ZTogNXJlbTtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGxlZnQ6IDJyZW07XG4gICAgbGluZS1oZWlnaHQ6IDE7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIG1hcmdpbjogMCAwIDFyZW0gMXJlbTtcbiAgICB0ZXh0LXNoYWRvdzogMnB4IDJweCAycHggIzMzMzsgfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAgICAgLmJhbm5lci10YWxsX19oZWFkbGluZSB7XG4gICAgICAgIHBvc2l0aW9uOiBzdGF0aWM7XG4gICAgICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgICAgICAgcGFkZGluZzogMnJlbTsgfSB9XG5cbi5iYW5uZXItc3RhbmRhcmQge1xuICBiYWNrZ3JvdW5kOiAjMjY3ZTY0O1xuICBjb2xvcjogI2ZmZjtcbiAgZGlzcGxheTogdGFibGU7XG4gIGhlaWdodDogMzQwcHg7IH1cbiAgLmJhbm5lci1zdGFuZGFyZF9fYm94IHtcbiAgICBwYWRkaW5nOiAxcmVtIDJyZW07IH1cbiAgLmJhbm5lci1zdGFuZGFyZF9faGVhZGluZyB7XG4gICAgY29sb3I6ICNmZmY7IH1cbiAgLmJhbm5lci1zdGFuZGFyZF9fbWVkaWEge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNlZGVlZWI7IH1cbiAgLmJhbm5lci1zdGFuZGFyZF9fbWVkaWEtYXBwcm9hY2gge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZXMvbWVldGluZy5qcGcpO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyOyB9XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAuYmFubmVyLXN0YW5kYXJkX19tZWRpYS1hcHByb2FjaCB7XG4gICAgICAgIGhlaWdodDogMzAwcHg7IH0gfVxuICAuYmFubmVyLXN0YW5kYXJkX19tZWRpYS1sZWFkZXJzaGlwIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1hZ2VzL3Blb3BsZS5qcGcpO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyOyB9XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAuYmFubmVyLXN0YW5kYXJkX19tZWRpYS1sZWFkZXJzaGlwIHtcbiAgICAgICAgaGVpZ2h0OiAzMDBweDsgfSB9XG5cbi5iYW5uZXItcGFub3JhbWEge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1hZ2VzL3RyZWVzLmpwZyk7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgaGVpZ2h0OiAyNTVweDsgfVxuXG4uY2FyZC1kaXB0aWMge1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNjY2M7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjY2NjOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5jYXJkLWRpcHRpYyB7XG4gICAgICBmbGV4LWZsb3c6IGNvbHVtbjsgfSB9XG4gIC5jYXJkLWRpcHRpY19fYm94IHtcbiAgICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgcGFkZGluZzogMnJlbSAxcmVtOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDc2OXB4KSB7XG4gICAgICAuY2FyZC1kaXB0aWNfX2JveCB7XG4gICAgICAgIHBhZGRpbmc6IDJyZW0gMXJlbSAycmVtIDJyZW07IH0gfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjlweCkge1xuICAgICAgLmNhcmQtZGlwdGljX19ib3g6bnRoLWNoaWxkKDIpIHtcbiAgICAgICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjY2NjO1xuICAgICAgICBwYWRkaW5nOiAycmVtIDJyZW0gMnJlbSAxcmVtOyB9IH1cbiAgLmNhcmQtZGlwdGljX19oZWFkaW5nIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgLmNhcmQtZGlwdGljX19tZWRpYSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzI2N2U2NDtcbiAgICBoZWlnaHQ6IDE1MHB4O1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgbWFyZ2luLWJvdHRvbTogMnJlbTsgfVxuICAuY2FyZC1kaXB0aWNfX3RleHQge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW4tYm90dG9tOiAycmVtOyB9XG4gIC5jYXJkLWRpcHRpYyB1bCB7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgICAuY2FyZC1kaXB0aWMgdWwgbGkge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgcGFkZGluZzogLjVyZW07XG4gICAgICB3aWR0aDogNDclOyB9XG4gIC5jYXJkLWRpcHRpY19fbGluayB7XG4gICAgY29sb3I6ICMyNjdlNjQ7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGZvbnQtZmFtaWx5OiBQbGF5ZmFpciBEaXNwbGF5LCBzZXJpZjtcbiAgICBwYWRkaW5nOiAwIC40cmVtOyB9XG4gICAgLmNhcmQtZGlwdGljX19saW5rOmhvdmVyIHtcbiAgICAgIGNvbG9yOiAjNDU1NjUyOyB9XG5cbi5jYXJkLWJpbyB7XG4gIHBhZGRpbmctYm90dG9tOiAycmVtOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5jYXJkLWJpbyB7XG4gICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2U1ZTZlNztcbiAgICAgIG1hcmdpbi1ib3R0b206IDJyZW07IH0gfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAuY2FyZC1iaW9fX21lZGlhIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDFyZW07XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH0gfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAuY2FyZC1iaW9fX21lZGlhIGltZyB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICB3aWR0aDogMzMlOyB9IH1cbiAgLmNhcmQtYmlvX19ib3gge1xuICAgIHBhZGRpbmctbGVmdDogMnJlbTtcbiAgICBwYWRkaW5nLXRvcDogMDtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wOyB9XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAuY2FyZC1iaW9fX2JveCB7XG4gICAgICAgIHBhZGRpbmc6IDA7IH0gfVxuICAuY2FyZC1iaW9fX2hlYWRpbmcge1xuICAgIGNvbG9yOiAjMjY3ZTY0O1xuICAgIGZvbnQtZmFtaWx5OiBQbGF5ZmFpciBEaXNwbGF5LCBzZXJpZjtcbiAgICBmb250LXNpemU6IDJyZW07XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBsaW5lLWhlaWdodDogMTsgfVxuICAuY2FyZC1iaW9fX3N1YnRpdGxlIHtcbiAgICBjb2xvcjogI2NjYzsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAuY2FyZC1iaW9fX3RleHQge1xuICAgICAgdGV4dC1hbGlnbjogbGVmdDsgfSB9XG4gIC5jYXJkLWJpb19fdGV4dCAqICsgKiB7XG4gICAgbWFyZ2luLXRvcDogMXJlbTsgfVxuXG4uY2FyZC1hcnRpY2xlX19ib3gge1xuICBib3gtc2hhZG93OiAwIDFweCAwICMyNjdlNjQ7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHBhZGRpbmctdG9wOiAyNHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMjRweDsgfVxuICAuY2FyZC1hcnRpY2xlX19ib3ggKiArICoge1xuICAgIG1hcmdpbi10b3A6IDFyZW07IH1cbi5jYXJkLWFydGljbGUgaDIge1xuICBjb2xvcjogIzI2N2U2NDtcbiAgZm9udC1mYW1pbHk6IFBsYXlmYWlyIERpc3BsYXksIHNlcmlmO1xuICBmb250LXNpemU6IDJyZW07XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiAxOyB9XG4uY2FyZC1hcnRpY2xlIHNtYWxsIHtcbiAgY29sb3I6ICNjY2M7XG4gIGZvbnQtc2l6ZTogLjc1cmVtOyB9XG5cbi5sb2FkZXJfX25hdiB7XG4gIGRpc3BsYXk6IHRhYmxlLWNlbGw7IH1cblxuLmNhcmQtdHJpcHRpYyB7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBib3JkZXItdG9wOiAxcHggc29saWQgI2NjYztcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNjY2M7IH1cbiAgLmNhcmQtdHJpcHRpY19fYm94IHtcbiAgICBwYWRkaW5nOiAycmVtO1xuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY5cHgpIHtcbiAgICAgIC5jYXJkLXRyaXB0aWNfX2JveDpudGgtY2hpbGQoMikge1xuICAgICAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICNjY2M7IH0gfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjlweCkge1xuICAgICAgLmNhcmQtdHJpcHRpY19fYm94Om50aC1jaGlsZCgzKSB7XG4gICAgICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2NjYzsgfSB9XG4gIC5jYXJkLXRyaXB0aWNfX21lZGlhIHtcbiAgICBoZWlnaHQ6IDE1MHB4O1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgbWFyZ2luLWJvdHRvbTogMnJlbTsgfVxuICAuY2FyZC10cmlwdGljX19oZWFkaW5nLWxpbmsge1xuICAgIGNvbG9yOiAjMjY3ZTY0O1xuICAgIGZvbnQtZmFtaWx5OiBQbGF5ZmFpciBEaXNwbGF5LCBzZXJpZjtcbiAgICBmb250LXNpemU6IDEuMzc1cmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgbGluZS1oZWlnaHQ6IDE7XG4gICAgY29sb3I6ICMyNjdlNjQ7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAgIC5jYXJkLXRyaXB0aWNfX2hlYWRpbmctbGluazpob3ZlciB7XG4gICAgICBjb2xvcjogIzQ1NTY1MjsgfVxuICAuY2FyZC10cmlwdGljX190ZXh0IHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cblxuLmN0YS1jb250YWN0IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VjZWVlNjtcbiAgZGlzcGxheTogdGFibGU7IH1cbiAgLmN0YS1jb250YWN0X19ib3gge1xuICAgIHBhZGRpbmc6IDJyZW07IH1cbiAgLmN0YS1jb250YWN0X19ib3g6bnRoLWNoaWxkKDIpIHtcbiAgICBwYWRkaW5nOiAycmVtIDA7IH1cbiAgLmN0YS1jb250YWN0X190ZXh0IHtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMCAzLjVyZW0gMCAycmVtOyB9XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAuY3RhLWNvbnRhY3RfX3RleHQge1xuICAgICAgICBwYWRkaW5nOiAwOyB9IH1cbiAgLmN0YS1jb250YWN0X19idXR0b24ge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBtYXJnaW46IDAgMnJlbSAwIDA7IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgIC5jdGEtY29udGFjdF9fYnV0dG9uIHtcbiAgICAgICAgbWFyZ2luOiAwOyB9IH1cblxuLmN0YS10ZWFzZXIge1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgcGFkZGluZzogMXJlbSAycmVtOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5jdGEtdGVhc2VyIHtcbiAgICAgIGZsZXgtZmxvdzogY29sdW1uOyB9IH1cbiAgLmN0YS10ZWFzZXJfX2JveCB7XG4gICAgcGFkZGluZy1yaWdodDogMnJlbTsgfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgLmN0YS10ZWFzZXJfX2JveCB7XG4gICAgICAgIHBhZGRpbmc6IDA7IH0gfVxuICAuY3RhLXRlYXNlcl9fdGV4dCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMnJlbTsgfVxuICAuY3RhLXRlYXNlcl9fbWVkaWEge1xuICAgIGhlaWdodDogMzAwcHg7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgLmN0YS10ZWFzZXJfX21lZGlhIHtcbiAgICAgICAgaGVpZ2h0OiAxNTBweDtcbiAgICAgICAgbWFyZ2luLXRvcDogMnJlbTsgfSB9XG5cbi5jdGEtY2VudGVyIHtcbiAgcGFkZGluZzogMnJlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gIC5jdGEtY2VudGVyX190ZXh0IHtcbiAgICBwYWRkaW5nOiAwIDhyZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMnJlbTsgfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgLmN0YS1jZW50ZXJfX3RleHQge1xuICAgICAgICBwYWRkaW5nOiAwOyB9IH1cblxuLmN0YS1zdWJzY3JpYmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjY3ZTY0O1xuICBjb2xvcjogI2ZmZjtcbiAgcGFkZGluZy10b3A6IDI0cHg7XG4gIHBhZGRpbmctYm90dG9tOiAzNnB4OyB9XG4gIC5jdGEtc3Vic2NyaWJlX19oZWFkaW5nIHtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgLmN0YS1zdWJzY3JpYmVfX2JveCB7XG4gICAgZGlzcGxheTogdGFibGU7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgd2lkdGg6IDc1JTsgfVxuICAuY3RhLXN1YnNjcmliZV9faW5wdXQge1xuICAgIHBhZGRpbmc6IC45cmVtO1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gIC5jdGEtc3Vic2NyaWJlX19idXR0b24ge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNmZmY7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgZm9udC1zaXplOiAxLjVyZW07XG4gICAgbWFyZ2luLWxlZnQ6IDFyZW07XG4gICAgd2lkdGg6IDEwMCU7IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgIC5jdGEtc3Vic2NyaWJlX19idXR0b24ge1xuICAgICAgICBtYXJnaW46IDFyZW0gMCAwIDA7IH0gfVxuICAuY3RhLXN1YnNjcmliZV9fbWVzc2FnZSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICBwYWRkaW5nLXRvcDogMi41cmVtOyB9XG5cbi5jdGEtc2lkZWJhciB7XG4gIHBhZGRpbmc6IDFyZW0gMCAwIDVyZW07XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmN0YS1zaWRlYmFyIHtcbiAgICAgIHBhZGRpbmc6IDNyZW0gMnJlbTsgfSB9XG4gIC5jdGEtc2lkZWJhcl9faGVhZGluZyB7XG4gICAgZm9udC1zaXplOiAxLjI1cmVtO1xuICAgIG1hcmdpbi10b3A6IDEycHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMTJweDsgfVxuICAuY3RhLXNpZGViYXJfX2J1dHRvbiB7XG4gICAgbWFyZ2luLXRvcDogMXJlbTsgfVxuXG4uY3RhLXNvY2lhbCB7XG4gIHBhZGRpbmctbGVmdDogMXJlbTsgfVxuICAuY3RhLXNvY2lhbCAuaWNvbiB7XG4gICAgZmlsbDogIzI2N2U2NDsgfVxuICAgIC5jdGEtc29jaWFsIC5pY29uOmhvdmVyIHtcbiAgICAgIGZpbGw6ICNjY2M7IH1cblxuZm9vdGVyIHtcbiAgcGFkZGluZy1ib3R0b206IDIwNXB4OyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIGZvb3RlciB7XG4gICAgICBwYWRkaW5nOiAwOyB9IH1cblxuLmZvb3Rlci1jb3B5cmlnaHQge1xuICBib3JkZXItdG9wOiAxcHggc29saWQgI2U1ZTZlNztcbiAgZGlzcGxheTogdGFibGU7XG4gIHBhZGRpbmc6IDJyZW07XG4gIHdpZHRoOiAxMDAlOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5mb290ZXItY29weXJpZ2h0IHtcbiAgICAgIHBhZGRpbmc6IDJyZW0gMCAwIDA7IH0gfVxuICAuZm9vdGVyLWNvcHlyaWdodF9fbG9nby1ib3gge1xuICAgIHdpZHRoOiA0NTBweDsgfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgLmZvb3Rlci1jb3B5cmlnaHRfX2xvZ28tYm94IHtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG4gICAgICAgIC5mb290ZXItY29weXJpZ2h0X19sb2dvLWJveCAubG9nb19fc3RhY2tlZCB7XG4gICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgIHdpZHRoOiAyNTBweDsgfSB9XG4gIC5mb290ZXItY29weXJpZ2h0X19ib3gge1xuICAgIHRleHQtYWxpZ246IHJpZ2h0OyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1pbi13aWR0aDogMTAyM3B4KSB7XG4gICAgICAuZm9vdGVyLWNvcHlyaWdodF9fYm94IHtcbiAgICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7IH0gfVxuICAgIC5mb290ZXItY29weXJpZ2h0X19ib3ggc21hbGwge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgcGFkZGluZy1yaWdodDogLjVyZW07IH1cbiAgICAgIC5mb290ZXItY29weXJpZ2h0X19ib3ggc21hbGw6OmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6ICd8JzsgfVxuICAgICAgLmZvb3Rlci1jb3B5cmlnaHRfX2JveCBzbWFsbDpudGgtY2hpbGQoMSk6OmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6ICcgJzsgfVxuICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1pbi13aWR0aDogMTAyM3B4KSB7XG4gICAgICAgIC5mb290ZXItY29weXJpZ2h0X19ib3ggc21hbGwge1xuICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDsgfSB9XG4gICAgLmZvb3Rlci1jb3B5cmlnaHRfX2JveCAubmF2LW1pbm9yIGxpIGEge1xuICAgICAgZm9udC1zaXplOiAxNHB4OyB9XG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWluLXdpZHRoOiAxMDIzcHgpIHtcbiAgICAgICAgLmZvb3Rlci1jb3B5cmlnaHRfX2JveCAubmF2LW1pbm9yIGxpIGEge1xuICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDsgfSB9XG5cbi5mb290ZXItZGlzY2xhaW1lciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgd2lkdGg6IDEwMCU7IH1cbiAgLmZvb3Rlci1kaXNjbGFpbWVyX19ib3gge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICM0NTU2NTI7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAyMHB4O1xuICAgIG1hcmdpbjogNTBweCBhdXRvIDEwcHg7IH1cbiAgLmZvb3Rlci1kaXNjbGFpbWVyIGg2LCAuZm9vdGVyLWRpc2NsYWltZXIgcCwgLmZvb3Rlci1kaXNjbGFpbWVyIHVsIHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMXJlbTsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtaW4td2lkdGg6IDEwMjNweCkge1xuICAgICAgLmZvb3Rlci1kaXNjbGFpbWVyIGg2LCAuZm9vdGVyLWRpc2NsYWltZXIgcCwgLmZvb3Rlci1kaXNjbGFpbWVyIHVsIHtcbiAgICAgICAgZm9udC1zaXplOiAxMnB4OyB9IH1cbiAgLmZvb3Rlci1kaXNjbGFpbWVyIHVsIHtcbiAgICBtYXJnaW4tdG9wOiAwOyB9XG4gICAgLmZvb3Rlci1kaXNjbGFpbWVyIHVsIGxpIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIG1hcmdpbjogMCAxMHB4O1xuICAgICAgcGFkZGluZzogLjVyZW07IH1cblxuQGtleWZyYW1lcyBmYWRlSW4ge1xuICBmcm9tIHtcbiAgICBvcGFjaXR5OiAwOyB9XG5cbiAgdG8ge1xuICAgIG9wYWNpdHk6IDE7IH0gfVxuXG4uaGVhZGVyX19sb2dvLWJveCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2NjYztcbiAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgI2NjYztcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmctdG9wOiAxcmVtO1xuICBtYXgtd2lkdGg6IDEyMDBweDsgfVxuXG4uaGVhZGVyX19sb2dvIHtcbiAgYmFja2dyb3VuZDogI2ZmZjsgfVxuXG4ubG9nbyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwYWRkaW5nOiAxcmVtO1xuICB3aWR0aDogNjAwcHg7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDg5OXB4KSB7XG4gICAgLmxvZ28ge1xuICAgICAgd2lkdGg6IDQwMHB4OyB9IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDQ5OXB4KSB7XG4gICAgLmxvZ28ge1xuICAgICAgcGFkZGluZzogMXJlbTtcbiAgICAgIHdpZHRoOiAzMDBweDsgfSB9XG5cbnN2ZyBwYXRoLCBzdmcgcG9seWdvbiB7XG4gIGZpbGw6ICMyNjdlNjQ7IH1cbnN2Zzpob3ZlciBwYXRoLCBzdmc6aG92ZXIgcG9seWdvbiB7XG4gIG9wYWNpdHk6IC43O1xuICB0cmFuc2l0aW9uOiBmaWxsIDAuMnMgZWFzZTsgfVxuXG4ubG9nb19fc3RyZXRjaGVkIHtcbiAgZGlzcGxheTogYmxvY2s7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDg5OXB4KSB7XG4gICAgLmxvZ29fX3N0cmV0Y2hlZCB7XG4gICAgICBkaXNwbGF5OiBub25lOyB9IH1cblxuLmxvZ29fX3N0YWNrZWQge1xuICBkaXNwbGF5OiBub25lOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA4OTlweCkge1xuICAgIC5sb2dvX19zdGFja2VkIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrOyB9IH1cblxuLmxvZ29fX2dsb2JlIHBhdGgge1xuICBvcGFjaXR5OiAwO1xuICBhbmltYXRpb246IGZhZGVJbiBlYXNlLWluIDE7XG4gIGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzO1xuICBhbmltYXRpb24tZHVyYXRpb246IC41czsgfVxuLmxvZ29fX2dsb2JlIHBhdGg6bnRoLWNoaWxkKDEpIHtcbiAgYW5pbWF0aW9uLWRlbGF5OiAwLjFzOyB9XG4ubG9nb19fZ2xvYmUgcGF0aDpudGgtY2hpbGQoMikge1xuICBhbmltYXRpb24tZGVsYXk6IDAuMTFzOyB9XG4ubG9nb19fZ2xvYmUgcGF0aDpudGgtY2hpbGQoMykge1xuICBhbmltYXRpb24tZGVsYXk6IDAuMjJzOyB9XG4ubG9nb19fZ2xvYmUgcGF0aDpudGgtY2hpbGQoNCkge1xuICBhbmltYXRpb24tZGVsYXk6IDAuMTNzOyB9XG4ubG9nb19fZ2xvYmUgcGF0aDpudGgtY2hpbGQoNSkge1xuICBhbmltYXRpb24tZGVsYXk6IDAuMTRzOyB9XG4ubG9nb19fZ2xvYmUgcGF0aDpudGgtY2hpbGQoNikge1xuICBhbmltYXRpb24tZGVsYXk6IDAuMTVzOyB9XG4ubG9nb19fZ2xvYmUgcGF0aDpudGgtY2hpbGQoNykge1xuICBhbmltYXRpb24tZGVsYXk6IDAuMTZzOyB9XG4ubG9nb19fZ2xvYmUgcGF0aDpudGgtY2hpbGQoOCkge1xuICBhbmltYXRpb24tZGVsYXk6IDAuMzdzOyB9XG4ubG9nb19fZ2xvYmUgcGF0aDpudGgtY2hpbGQoOSkge1xuICBhbmltYXRpb24tZGVsYXk6IDAuMThzOyB9XG4ubG9nb19fZ2xvYmUgcGF0aDpudGgtY2hpbGQoMTApIHtcbiAgYW5pbWF0aW9uLWRlbGF5OiAwLjE5czsgfVxuLmxvZ29fX2dsb2JlIHBhdGg6bnRoLWNoaWxkKDExKSB7XG4gIGFuaW1hdGlvbi1kZWxheTogMC4yczsgfVxuLmxvZ29fX2dsb2JlIHBhdGg6bnRoLWNoaWxkKDEyKSB7XG4gIGFuaW1hdGlvbi1kZWxheTogMC4yMXM7IH1cbi5sb2dvX19nbG9iZSBwYXRoOm50aC1jaGlsZCgxMykge1xuICBhbmltYXRpb24tZGVsYXk6IDAuMTJzOyB9XG4ubG9nb19fZ2xvYmUgcGF0aDpudGgtY2hpbGQoMTQpIHtcbiAgYW5pbWF0aW9uLWRlbGF5OiAwLjIzczsgfVxuLmxvZ29fX2dsb2JlIHBhdGg6bnRoLWNoaWxkKDE1KSB7XG4gIGFuaW1hdGlvbi1kZWxheTogMC4zNHM7IH1cbi5sb2dvX19nbG9iZSBwYXRoOm50aC1jaGlsZCgxNikge1xuICBhbmltYXRpb24tZGVsYXk6IDAuMjVzOyB9XG5cbi5tYWluLXN0YW5kYXJkLCAubWFpbi1uZXdzLCAubWFpbi1wb3N0IHtcbiAgZGlzcGxheTogdGFibGU7XG4gIHBhZGRpbmc6IDFyZW0gMnJlbTsgfVxuXG4ubWFpbi1zdGFuZGFyZCB7XG4gIHBhZGRpbmctYm90dG9tOiA1cmVtOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5tYWluLXN0YW5kYXJkX19jb250ZW50IHtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7IH0gfVxuICAubWFpbi1zdGFuZGFyZF9fdGV4dCAqICsgKiB7XG4gICAgbWFyZ2luLXRvcDogMXJlbTsgfVxuICAubWFpbi1zdGFuZGFyZF9fdGV4dCBoMiB7XG4gICAgY29sb3I6ICMyNjdlNjQ7XG4gICAgZm9udC1mYW1pbHk6IFBsYXlmYWlyIERpc3BsYXksIHNlcmlmO1xuICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgIHBhZGRpbmctdG9wOiAyNHB4O1xuICAgIHBhZGRpbmctYm90dG9tOiAwcHg7IH1cblxuLm1haW4tYmlvcyB7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBwYWRkaW5nOiAycmVtOyB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAubWFpbi1wb3N0X190ZXh0IHtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0OyB9IH1cbi5tYWluLXBvc3RfX3RleHQgKiArICoge1xuICBtYXJnaW4tdG9wOiAxcmVtOyB9XG4ubWFpbi1wb3N0X190ZXh0IGgyIHtcbiAgY29sb3I6ICMyNjdlNjQ7XG4gIGZvbnQtZmFtaWx5OiBQbGF5ZmFpciBEaXNwbGF5LCBzZXJpZjtcbiAgZm9udC1zaXplOiAycmVtO1xuICBmb250LXdlaWdodDogNDAwO1xuICBsaW5lLWhlaWdodDogMTsgfVxuLm1haW4tcG9zdF9fdGV4dCBoMyB7XG4gIGNvbG9yOiAjNDU1NjUyO1xuICBmb250LWZhbWlseTogUGxheWZhaXIgRGlzcGxheSwgc2VyaWY7XG4gIGZvbnQtc2l6ZTogMS4yNXJlbTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIG1hcmdpbi10b3A6IDM2cHg7XG4gIG1hcmdpbi1ib3R0b206IDBweDsgfVxuLm1haW4tcG9zdF9fdGV4dCBmaWdjYXB0aW9uIHtcbiAgY29sb3I6ICNjY2M7XG4gIGZvbnQtc2l6ZTogLjc1cmVtO1xuICBtYXJnaW4tdG9wOiAwOyB9XG4ubWFpbi1wb3N0X190ZXh0IGJsb2NrcXVvdGUge1xuICBjb2xvcjogIzI2N2U2NDtcbiAgZm9udC1mYW1pbHk6IFBsYXlmYWlyIERpc3BsYXksIHNlcmlmO1xuICBmb250LXNpemU6IDEuNXJlbTtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICBmb250LXdlaWdodDogNzAwO1xuICBtYXJnaW4tdG9wOiAzNnB4O1xuICBtYXJnaW4tYm90dG9tOiAzNnB4OyB9XG5cbi5mb3JtLXN0YW5kYXJkIGlucHV0LCAuZm9ybS1zdGFuZGFyZCBpbnB1dFt0eXBlPVwiZW1haWxcIl0sIC5mb3JtLXN0YW5kYXJkIGlucHV0W3R5cGU9XCJudW1iZXJcIl0sIC5mb3JtLXN0YW5kYXJkIGlucHV0W3R5cGU9XCJwYXNzd29yZFwiXSwgLmZvcm0tc3RhbmRhcmQgaW5wdXRbdHlwZT1cInNlYXJjaFwiXSwgLmZvcm0tc3RhbmRhcmQgaW5wdXRbdHlwZT1cInRlbFwiXSwgLmZvcm0tc3RhbmRhcmQgaW5wdXRbdHlwZT1cInRleHRcIl0sIC5mb3JtLXN0YW5kYXJkIGlucHV0W3R5cGU9XCJ1cmxcIl0sIC5mb3JtLXN0YW5kYXJkIGlucHV0W3R5cGU9XCJjb2xvclwiXSwgLmZvcm0tc3RhbmRhcmQgaW5wdXRbdHlwZT1cImRhdGVcIl0sIC5mb3JtLXN0YW5kYXJkIGlucHV0W3R5cGU9XCJuYW1lXCJdLCAuZm9ybS1zdGFuZGFyZCBpbnB1dFt0eXBlPVwiZGF0ZXRpbWVcIl0sIC5mb3JtLXN0YW5kYXJkIGlucHV0W3R5cGU9XCJkYXRldGltZS1sb2NhbFwiXSwgLmZvcm0tc3RhbmRhcmQgaW5wdXRbdHlwZT1cIm1vbnRoXCJdLCAuZm9ybS1zdGFuZGFyZCBpbnB1dFt0eXBlPVwidGltZVwiXSwgLmZvcm0tc3RhbmRhcmQgaW5wdXRbdHlwZT1cIndlZWtcIl0sIC5mb3JtLXN0YW5kYXJkIHRleHRhcmVhIHtcbiAgY29sb3I6ICMzMzM7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XG4gIGJvcmRlci1ib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgYm9yZGVyLXJhZGl1czogMDtcbiAgYm9yZGVyLXJhZGl1cy1mb250LXNpemU6IDFyZW07XG4gIHBhZGRpbmc6IDFyZW07XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTAwJTsgfVxuLmZvcm0tc3RhbmRhcmQgbGFiZWwge1xuICBkaXNwbGF5OiBibG9jazsgfVxuLmZvcm0tc3RhbmRhcmQgaW5wdXRbdHlwZT1cImJ1dHRvblwiXSwgLmZvcm0tc3RhbmRhcmQgaW5wdXRbdHlwZT1cInJlc2V0XCJdLCAuZm9ybS1zdGFuZGFyZCBpbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcbiAgZGlzcGxheTogYmxvY2s7IH1cbi5mb3JtLXN0YW5kYXJkX19jaGVja2JveCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuLmZvcm0tc3RhbmRhcmRfX2NoZWNrYm94ICsgbGFiZWwge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cbi5mb3JtLXN0YW5kYXJkIC5zZWxlY3Rib3gge1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBib3JkZXItcmFkaXVzOiAwO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaGVpZ2h0OiA0OHB4OyB9XG4uZm9ybS1zdGFuZGFyZCBzZWxlY3Qge1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBib3gtc2hhZG93OiBub25lO1xuICBib3JkZXItcmFkaXVzOiAwO1xuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuICBjb2xvcjogIzMzMztcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBkaXNwbGF5OiBibG9jaztcbiAgZm9udC1zaXplOiAxcmVtO1xuICBoZWlnaHQ6IDQ1cHg7XG4gIHBhZGRpbmc6IDFyZW07XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDEwMCU7IH1cblxuXG5cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJblpsYm1SdmNpOWZibTl5YldGc2FYcGxMbk5qYzNNaUxDSmlZWE5sTDE5MGVYQnZaM0poY0doNUxuTmhjM01pTENKaVlYTmxMMTlqYjJ4dmNuTXVjMkZ6Y3lJc0ltSmhjMlV2WDJOc1pXRnlMV1pwZUM1ellYTnpJaXdpWW1GelpTOWZhVzFoWjJWekxuTmhjM01pTENKaVlYTmxMMTlzWVhsdmRYUXVjMkZ6Y3lJc0ltSmhjMlV2WDJsdVkyeDFaR1V0YldWa2FXRXVjMkZ6Y3lJc0ltSmhjMlV2WDJkc2IySmhiQzV6WVhOeklpd2lZbUZ6WlM5ZmRHRmliR1Z6TG5OaGMzTWlMQ0p0YjJSMWJHVnpMMjVoZGk5ZmJtRjJMVzFwYm05eUxuTmhjM01pTENKdGIyUjFiR1Z6TDI1aGRpOWZibUYyTFcxbFoyRXVjMkZ6Y3lJc0ltMXZaSFZzWlhNdmJtRjJMMTl1WVhZdFptOXZkR1Z5TG5OaGMzTWlMQ0p0YjJSMWJHVnpMMkpoYm01bGNpOWZYMkpoYm01bGNpNXpZWE56SWl3aWJXOWtkV3hsY3k5allYSmtjeTlmWDJOaGNtUnpMbk5oYzNNaUxDSnRiMlIxYkdWekwyTjBZUzlmWDJOMFlTNXpZWE56SWl3aWJXOWtkV3hsY3k5bWIyOTBaWEl2WDJadmIzUmxjaTV6WVhOeklpd2liVzlrZFd4bGN5OW9aV0ZrWlhJdlgyaGxZV1JsY2k1ellYTnpJaXdpYlc5a2RXeGxjeTl0WVdsdUwxOXRZV2x1TG5OaGMzTWlMQ0p0YjJSMWJHVnpMMlp2Y20wdlgyWnZjbTB1YzJGemN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRTBRMEVzUVVGQlV5eEJRVUZQTEVGQlFWTXNRVUZCV1N4QlFVRlJMRUZCUVZFc1FVRkJVU3hCUVVGUkxFRkJRVXNzUVVGQlV6dEZRVmN2UlN4QlFVRlRPenRCUVV0aUxFRkJRVThzUVVGQlVUdEZRVWRZTEVGQlFWTTdPMEZCVldJc1FVRkJTeXhCUVVGTE8wVkJRMDRzUVVGQlV6dEZRVU5VTEVGQlFWRTdPMEZCVVZvc1FVRkJWVHRGUVVOT0xFRkJRVk03TzBGQldXSTdSVUZOU1N4QlFVRXdRanRGUVVNeFFpeEJRVUZ6UWpzN1FVRmxNVUk3UlVGRFNTeEJRVUZST3p0QlFWbGFPMFZCUjBrc1FVRkJXVHRGUVZWb1FpeEJRVUZETEVGQlFWRXNRVUZCUXp0SlFVVkdMRUZCUVZNN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenRCUVRaRGFrSXNRVUZCU1R0RlFVTkJMRUZCUVdVN08wRkJTMjVDTEVGQlFVYzdSVUZGUXl4QlFVRmhPenRCUVZkcVFqdEZRVU5KTEVGQlFWazdPMEZCUzJoQ08wVkJRMGtzUVVGQldUdEZRVU5hTEVGQlFVODdPMEZCWTFnc1FVRkJUU3hCUVVGTExFRkJRVXM3UlVGSldpeEJRVUZoTzBWQlNXSXNRVUZCVnpzN1FVRkxaanRGUVVOSkxFRkJRV0U3UlVGRFlpeEJRVUZoTzBWQlEySXNRVUZCVnpzN1FVRkxaanRGUVVOSkxFRkJRVkU3TzBGQlpWb3NRVUZCUXl4QlFVRlRMRUZCUVVNN1JVRkZTQ3hCUVVGVE8wVkJRMVFzUVVGQlV6czdPenM3UVVGaGFrSXNRVUZCU3p0RlFVVkVMRUZCUVZjN1JVRkRXQ3hCUVVGaE8wVkJRMklzUVVGQlZUdEZRVU5XTEVGQlFXZENPenRCUVVkd1FqdEZRVU5KTEVGQlFVczdPMEZCUjFRN1JVRkRTU3hCUVVGUk96dEJRVzFFV2p0RlFVTkpMRUZCUVZFN08wRkJVVm9zUVVGQlJ5eEJRVUZMTzBWQlEwb3NRVUZCVlRzN1FVRlRaRHRGUVVOSkxFRkJRVkU3TzBGQlowSmFPMFZCUTBrc1FVRkJVVHRGUVVOU0xFRkJRVkU3UlVGRFVpeEJRVUZUT3p0QlFWRmlPMFZCUTBrc1FVRkJVVHRGUVVOU0xFRkJRVk03UlVGRFZDeEJRVUZoT3p0QlFWZHFRaXhCUVVGUkxFRkJRVThzUVVGQlVUdEZRVWx1UWl4QlFVRmhPMFZCUTJJc1FVRkJWenRGUVVOWUxFRkJRVkU3UlVGRFVpeEJRVUZuUWpzN1FVRlJjRUlzUVVGQlVUdEZRVU5LTEVGQlFXRTdPMEZCVVdwQ0xFRkJRVkU3UlVGRlNpeEJRVUZuUWpzN1FVRlhjRUlzUVVGQlVTeEJRVUZMTEVGQlFVc3NRVUZCYVVJc1FVRkJTeXhCUVVGblFpeEJRVUZMTzBWQlNYcEVMRUZCUVc5Q08wVkJRM0JDTEVGQlFWRTdPMEZCVVZvc1FVRkJUU3hCUVVGWkxFRkJRVXM3UlVGRmJrSXNRVUZCVVRzN1FVRlBXaXhCUVVGTkxFRkJRVzlDTEVGQlFVczdSVUZEZGtJc1FVRkJVVHRGUVVOU0xFRkJRVk03TzBGQlQycENPMFZCUTBrc1FVRkJWVHRGUVVOV0xFRkJRV2RDT3p0QlFWTndRanRGUVVOSkxFRkJRV2xDTzBWQlEycENMRUZCUVdkQ096dEJRVTF3UWl4QlFVRkxPMFZCUTBjc1FVRkJiMEk3UlVGRGNFSXNRVUZCYVVJN1JVRkRha0lzUVVGQmIwSTdSVUZEY0VJc1FVRkJXVHRGUVVsd1FpeEJRVUZMTEVGQlFXVXNRVUZCWjBNc1FVRkJTeXhCUVVGbE8wbEJSVFZFTEVGQlFXOUNPMEZCVVdoRExFRkJRVXNzUVVGQmJVSXNRVUZCU3p0RlFVVjRRaXhCUVVGWk8wVkJRMW9zUVVGQlV6czdRVU0xWldRN1JVRXhRbWxDTEVGQk1rSm1PMFZCUTBFc1FVRkJlVUk3UlVGRGVrSXNRVUZCZDBJN08wRkJSVEZDTzBWRGNrSlhMRUZFYzBKVU8wVkJRMEVzUVVGQllUdEZRVGxDU0N4QlFTdENWanRGUVVOQkxFRkJRV2xDTzBWQlEycENMRUZCUVZFN08wRkJTMVk3UlVONlExRXNRVVF3UTA0N1JVRjBRMlVzUVVGMVEyWTdSVUZEUVN4QlFVRlhPMFZCY0VOS0xFRkJjVU5RTzBWQlEwRXNRVUZCWVR0RlFVTmlMRUZCUVdVN08wRkJjME5xUWl4QlFVRnRRaXhCUVVGTExFRkJRV2xDTEVGQlFVczdSVUZITlVNc1FVRkJVVHRGUVVOU0xFRkJRVk03UlVGeVJrMHNRVUZ6Um1ZN1JVRkRRU3hCUVVGWE8wVkJRMWdzUVVGQldUdEZRVU5hTEVGQlFWazdSVUZEV2l4QlFVRlRPMFZCUTFRc1FVRkJhVUk3TzBWQlJXcENMRUZCUVd0Q08wVkRha2RhTEVGRWEwZE9PenRGUVVWQkxFRkJRVms3UlVGRlpDeEJRVUZwUWl4QlFVRlJMRUZCUVVzc1FVRkJaU3hCUVVGUkxFRkJRVXNzUVVGQll6czdTVU4wUjJoRkxFRkVkMGRLTzBsRGNFZEpMRUZFY1VkS096dEJSWHBIU2l4QlFVRlRPMFZCUTFBc1FVRkJVenRGUVVOVUxFRkJRVk03UlVGRFZDeEJRVUZQT3p0QlEwaFVMRUZCUVVzc1FVRkJVVHRGUVVOWUxFRkJRVTg3TzBGRFJGUTdSVUZEUlN4QlFVRnJRanRGUVVOc1FpeEJRVUZoTzBWQlEySXNRVUZCWXp0RlFVTmtMRUZCUVZFN1JVRkRVaXhCUVVGWE96dEJRVWRpTzBWQlEwVXNRVUZCVXp0RlFVTlVMRUZCUVdkQ08wVkRiVU5vUWp0SlJISkRSanROUVV0SkxFRkJRVk03VFVGRFZDeEJRVUZaT3p0QlFVVm9RanRGUVVORkxFRkJRVTg3UlVNMFFsQTdTVVEzUWtZN1RVRkpTU3hCUVVGUE96dEJRVVZZTzBWQlEwVXNRVUZCVHp0RlEzTkNVRHRKUkhaQ1JqdE5RVWxKTEVGQlFVODdPMEZCUlZnN1JVRkRSU3hCUVVGUE8wVkRaMEpRTzBsRWFrSkdPMDFCU1Vrc1FVRkJUenM3UVVGSFdEdEZRVU5GTEVGQlFVODdSVU5UVUR0SlJGWkdPMDFCU1Vrc1FVRkJUenM3UVVGSFdEdEZRVU5GTEVGQlFVODdSVU5GVUR0SlJFaEdPMDFCU1Vrc1FVRkJUenM3UVVGSFdEdEZRVU5GTEVGQlFVODdSVU5NVUR0SlJFbEdPMDFCU1Vrc1FVRkJUenM3UVVGSFdEdEZRVU5GTEVGQlFVODdSVU5hVUR0SlJGZEdPMDFCU1Vrc1FVRkJUenM3UVVGSFdEdEZRVU5GTEVGQlFVODdSVU51UWxBN1NVUnJRa1k3VFVGSlNTeEJRVUZQT3p0QlFVZFlPMFZCUTBVc1FVRkJUenRGUXpGQ1VEdEpSSGxDUmp0TlFVbEpMRUZCUVU4N08wRkJSVmc3UlVGRFJTeEJRVUZQTzBWRGFFTlFPMGxFSzBKR08wMUJTVWtzUVVGQlR6czdRVVZvUmxnN1JVRkRSU3hCUVVGUk8wVkJRMUlzUVVGQlV6dEZRVU5VTEVGQlFWazdSVUZGWkN4QlFVRkRMRUZCUVZNc1FVRkJRenRKUVVOUUxFRkJRVms3TzBGQlJXaENPMFZNVGxFc1FVdFBUanRGUVVOQkxFRkJRVk03TzBGQlJWZzdSVUZEUlN4QlFVRnBRanM3UVVOWWJrSTdSVUZEUXl4QlFVRlJPMFZCUTFJc1FVRkJUenM3UVVGRlVqdEZRVU5GTEVGQlFXVTdSVVp6UTJZN1NVVjJRMFk3VFVGSlNTeEJRVUZaTzAxQlJXaENMRUZCUVVVN1VVRkRTU3hCUVVGWk8wVkJSV3hDTEVGQlFVVTdTVTVXVFN4QlRWZEtPenRCUVVWS08wVkJRMFVzUVVGQlowSTdSVUZEYUVJc1FVRkJVenRGUm5sQ1ZEdEpSVE5DUmp0TlFVdEpMRUZCUVZrN1RVRkRXaXhCUVVGVk8wMUJRMVlzUVVGQll6dE5RVVZzUWl4QlFVRkZPMUZCUTBrc1FVRkJWVHRSUVVOV0xFRkJRVXM3VVVGRFRDeEJRVUZOTzFGQlEwNHNRVUZCVHp0UlFVTlFMRUZCUVdVN1VVRkRaaXhCUVVGaE8xRkJRMklzUVZCNlFrczdUVTgyUWxnc1FVRkJSU3hCUVVGbE8xRkJRMVFzUVVGQlV6dE5RVVZxUWl4QlFVRkZMRUZCUVdVN1VVRkRWQ3hCUVVGVE8wMUJSV3BDTEVGQlFVVXNRVUZCWlR0UlFVTlVMRUZCUVZNN08wRkJSV3BDTzBWT2VrTlJMRUZOTUVOT08wVkdTRUU3U1VWTFJpeEJRVUZOTzAxQlIwRXNRVUZCVlR0TlFVTldMRUZCUVVzN1RVRkRUQ3hCUVVGTk8wVkJSVm9zUVVGQlRUdEpRVU5HTEVGUWFrUlBPMGxQYTBSUUxFRkJRVms3U1VGRFdpeEJRVUZUT3p0QlJtWllPMFZGYVVKR0xFRkJRVThzUVVGQlR5eEJRVUZQTEVGQlFVa3NRVUZCU1R0SlFVVjZRaXhCUVVGVE96dEJRMmhGWWp0RlFVTkZMRUZCUVZNN1JVRkRWQ3hCUVVGWk8wVkJSV1E3U1ZCQlVTeEJUME5LTzBsQlEwRXNRVUZCWVR0SlFVTmlMRUZCUVdNN1NVRkRaQ3hCUVVGUk8wbEJRMUlzUVVGQllUdEpRVU5pTEVGQlFWYzdTVWh0UTJJN1RVZDZRMFk3VVVGVFRTeEJRVUZUTzBWQlJXWXNRVUZCVnp0SlFVTlFMRUZCUVZNN1NVRkZZaXhCUVVGWExFRkJRVVU3VFVGRFVDeEJRVUZUTzAxQlExUXNRVUZCVXp0TlVIQkNVQ3hCVDNGQ1JqdE5RVU5CTEVGQlFWRTdTVUZKWkN4QlFVRlhMRUZCUVVVc1FVRkJZVHROUVVOc1FpeEJRVUZUTzBWQlJXcENPMGxRYmtKWExFRlBiMEpRTzBsQlEwRXNRVUZCVXp0SlFVTlVMRUZCUVZNN1NVRkZZaXhCUVVGblFqdE5VR3hEVWl4QlQyMURSanM3T3pzN096dEJTRlZLTzBWSlVFWXNRVUZCU1N4QlFVRlpPMGxCUTFZc1FVRkJWVHM3UVVGRmFFSXNRVUZCU3l4QlFVRmxPenRGUVVWc1FpeEJRVUZUT3p0QlFVVllMRUZCUVVzc1FVRkJaU3hCUVVFMlFpeEJRVUZMTEVGQlFXVXNRVUZCWjBNc1FVRkJTeXhCUVVGbExFRkJRV2xETEVGQlFVc3NRVUZCWlR0RlFVazFTeXhCUVVGVE96czdPenM3TzBGQlVWZ3NRVUZCYTBJN08wVkJSMmhDTEVGQlFWYzdSVUZEV0N4QlFVRmhPMFZCUldZc1FVRkJhVUlzUVVGQlNTeEJRVUZuUWp0SlFVTnFReXhCUVVGWk96dEJRVVZvUWp0RlFVTkZMRUZCUVZVN1JVRkRWaXhCUVVGWk8wVktka0phTzBsSk1FSkdMRUZCUVdkQ08wMUJRMVlzUVVGQlZ6dEpRVVZxUWl4QlFVRmhMRUZCUVdkQ08wMUJRM1pDTEVGQlFWYzdPMEZCUldwQ08wVlVla1ZwUWl4QlV6QkZaanRGUVVOQkxFRkJRVlU3UlVGRFZpeEJRVUZaTzBWS2JrTmFPMGxKYzBOR0xFRkJRV1U3VFVGRFZDeEJRVUZYTzBsQlJXcENMRUZCUVdFc1FVRkJaVHROUVVOMFFpeEJRVUZYT3p0QlFVVnFRanRGUVVORkxFRkJRVms3UlVGcVJrb3NRVUZyUmxJN08wRkJSVVk3UlVFM1JtdENMRUZCT0Vab1FqdEZVakZHVFN4QlVUSkdUanRGUVhKR1l5eEJRWE5HWkR0RlFVVkJMRUZCUVdVN1JVRkZha0lzUVVGQll6czdTVUZGVml4QlFVRlZPMGxCUTFZc1FVRkJTenRKUVVOTUxFRkJRVTA3U1VGRFRpeEJRVUZQTzBWS05VUlVPMGxKWjBSR08wMUJOVVpyUWl4QlFUSkhaRHROUVc1R1NpeEJRVUZsTzFGQlExZ3NRVUZCVXp0UlFVTlVMRUZCUVZNN1VVRkRWQ3hCUVVGUE96dEJRVzFHV0R0RlFVTkZMRUZCUVZVN1JVRkRWaXhCUVVGTE8wVkJRMHdzUVVGQlRUdEZRVVZTTEVGQlFWTTdTVUZEVEN4QlFVRlRPMFZLZUVWWU8wbEpNa1ZHTEVGQlFXRTdUVUZEVUN4QlFVRk5PMDFCUTA0c1FVRkJUenRGU2pkRldEdEpTV3RGUmp0TlFXTkpMRUZCUVVzN1RVRkRUQ3hCUVVGTk96dEJRVVZXTzBWQlEwVXNRVUZCVlR0RlFVTldMRUZCUVZNN1JVRkRWQ3hCUVVGTE8wVkJRMHdzUVVGQlR6dEZRVVZVTEVGQlFXMUNPMGxCUTJZc1FVRkJVenRGU2pGR1dEdEpTVFpHUml4QlFVRmhPMDFCUTFBc1FVRkJUenROUVVOUUxFRkJRVTA3VFVGRFdpeEJRVUZoTEVGQlFXMUNPMUZCUTNoQ0xFRkJRVTg3UlVwcVIySTdTVWx0UmtZN1RVRnBRa2tzUVVGQlN6dE5RVU5NTEVGQlFVODdPMEZCUlZnc1FVRkJiMEk3UlVGRmJFSXNRVUZCVlR0RlFVTldMRUZCUVZNN1JVRkRWQ3hCUVVGUE8wVkJRMUFzUVVGQlVUdEZRVU5TTEVGQlFWVTdSVUZEVml4QlFVRmhPenRGUVVWaUxFRkJRVTg3UlVGdVNrOHNRVUZ2U21RN08wRkJSMFlzUVVGQmEwSXNRVUZCVlN4QlFVRnJRanM3UlVGRk1VTXNRVUZCVXp0RlFVTlVMRUZCUVZVN1JVRkRWaXhCUVVGWk96dEZRVVZhTEVGQlFWYzdSVUZEV0N4QlFVRnhRanRCUVVWNlFpeEJRVUZyUWpzN1JVRkZaQ3hCUVVGTE8wVkJRMHdzUVVGQlRUdEZRVU5PTEVGQlFVODdSVUZEVUN4QlFVRlJPMFZCUTFJc1FVRkJaVHRGUVVObUxFRkJRVkU3UVVGRldpeEJRVUZyUWpzN1JVRkZaQ3hCUVVGUk8wVkJRMUlzUVVGQlR6dEZVbkpNUlN4QlVYTk1WRHRGUVVOQkxFRkJRVkU3UlVGRFVpeEJRVUZQTzBWQlExQXNRVUZCVnp0QlFVTm1MRUZCUVcxQ096dEZRVVZtTEVGQlFWVTdSVUZEVml4QlFVRlJPMFZCUTFJc1FVRkJUenRGUVVOUUxFRkJRVXM3UlVGRFRDeEJRVUZOTzBGQlExWXNRVUZCYlVJc1FVRkJTU3hCUVVGVkxFRkJRVzFDTEVGQlFVazdPMFZCUlhCRUxFRkJRVk03UlVGRFZDeEJRVUZWTzBWQlExWXNRVUZCVXp0RlFVTlVMRUZCUVZFN1JVRkRVaXhCUVVGUE8wVkJRMUFzUVVGQlN6dEZRVU5NTEVGQlFWazdSVUZEV2l4QlFVRk5PMFZCUTA0c1FVRkJZVHRGVWpOTlNpeEJVVFJOVkR0RlFVTkJMRUZCUVZNN08wVkJSVlFzUVVGQlZ6dEZRVU5ZTEVGQlFYRkNPMFZCUTNKQ0xFRkJRVzlDTzBGQlJYaENMRUZCUVcxQ0xFRkJRVWs3UlVGRGJrSXNRVUZCVnp0QlFVVm1MRUZCUVcxQ0xFRkJRVWs3UlVGRGJrSXNRVUZCVnp0QlFVZG1MRUZCUVd0Q0xFRkJRV3RDTEVGQlFWVXNRVUZCYTBJc1FVRkJhMEk3TzBWQlJUVkZMRUZCUVZNN1FVRkRaaXhCUVVGclFpeEJRVUZ0UWl4QlFVRkpMRUZCUVZVc1FVRkJhMElzUVVGQmJVSXNRVUZCU1RzN1JVRkZkRVlzUVVGQlV6dEJRVU5tTEVGQlFXdENMRUZCUVcxQ0xFRkJRVWs3UlVGRGJrTXNRVUZCVnp0QlFVTnFRaXhCUVVGclFpeEJRVUZ0UWl4QlFVRkpPMFZCUTI1RExFRkJRVmM3TzBGQlIycENMRUZCUVdkQ0xFRkJRVTBzUVVGQlowSXNRVUZCU1N4QlFVRlZMRUZCUVdkQ0xFRkJRVWs3TzBWQlJYQkZMRUZCUVZVN1JVRkRWaXhCUVVGVE8wVkJRMVFzUVVGQlVUdEZRVU5TTEVGQlFVODdSVkl6VDBVc1FWRTBUMVE3UVVGRFNpeEJRVUZuUWpzN1JVRkZXaXhCUVVGVk8wVkJRMVlzUVVGQlN6dEZRVU5NTEVGQlFVODdSVUZEVUN4QlFVRlpPMFZCUTFvc1FVRkJXVHRCUVVOb1FpeEJRVUZuUWl4QlFVRkpMRUZCUVZVc1FVRkJaMElzUVVGQlNUczdSVUZGT1VNc1FVRkJVenRGUVVOVUxFRkJRVTg3TzBWQlJWQXNRVUZCVnp0RlFVTllMRUZCUVhGQ08wVkJRM0pDTEVGQlFXdENPMFZCUTJ4Q0xFRkJRVms3UVVGRGFFSXNRVUZCWjBJc1FVRkJTVHM3UlVGRmFFSXNRVUZCU3p0QlFVTlVMRUZCUVdkQ0xFRkJRVWs3TzBWQlJXaENMRUZCUVVzN1FVRkZWQ3hCUVVGbExFRkJRV2RDT3p0RlFVVjZRaXhCUVVGWk8wRkJRMnhDTEVGQlFXVXNRVUZCWjBJc1FVRkJTU3hCUVVGVkxFRkJRV1VzUVVGQlowSXNRVUZCU1RzN1JVRkZNVVVzUVVGQldUdEJRVU5zUWl4QlFVRmxMRUZCUVdkQ0xFRkJRVWs3UlVGRE4wSXNRVUZCZVVJN1FVRkRMMElzUVVGQlpTeEJRVUZuUWl4QlFVRkpPMFZCUXpkQ0xFRkJRWGxDTzBGS2FrODNRanRGU1hsTVJqdEpRVEJEU1N4QlFVRlRPenRCUVVkaUxFRkJRV2xDTEVGQlFXZENPMFZCUlM5Q0xFRkJRVlU3UlVGRFZpeEJRVUZMTzBWQlEwd3NRVUZCVHp0RlFVTlFMRUZCUVZFN1JVRnlVa2tzUVVGelVsbzdSVko0VWxjc1FWRjVVbGc3UlVGRFFTeEJRVUZWTzBWQlExWXNRVUZCTkVJN1JVRndVbVFzUVVGeFVtUTdPMFZCUjBFc1FVRkJWenRGUVVOWUxFRkJRVmM3UlVGRFdDeEJRVUZaTzBWQlJXUXNRVUZCWjBJc1FVRkJSeXhCUVVGblFpeEJRVUZITzBsQlEyeERMRUZCUVZNN1NVRkRWQ3hCUVVGWE8wbEJRMWdzUVVGQlVUdEpRVU5TTEVGQlFXRTdTVUZEWWl4QlFVRlRPMGxTY2xOTUxFRlJjMU5LTzBsQlEwRXNRVUZCZDBJN1NVRkRlRUlzUVVGQmVVSTdTVUZEZWtJc1FVRkJWVHRKUVVOV0xFRkJRV1U3U1VGRFppeEJRVUZoTzBsQlEySXNRVUZCWlR0SlFVTm1MRUZCUVZjN1NVRkRXQ3hCUVVGaE8wbEJRMklzUVVGQmMwSTdSVUZGTVVJc1FVRkJaU3hCUVVGWkxFRkJRV2RDTEVGQlFVVTdPMGxCUlhwRExFRkJRVmM3UlVGRlppeEJRVUZsTEVGQlFXRXNRVUZCU3l4QlFVRkhMRUZCUVdkQ0xFRkJRVVVzUVVGQllTeEJRVUZMT3p0SlFVVndSU3hCUVVGWE8wbEJRMWdzUVVGQlV6czdRVW92VVZnN1JVbHJVa1lzUVVGQllTeEJRVUZwUWl4QlFVRmhMRUZCUVdkQ08wbEJSWFpFTEVGQlFVODdTVUZEVUN4QlFVRk5PenRCUVVsV0xFRkJRV2RDTEVGQlFWTTdPMFZTZEZWcVFpeEJVWGRWU2p0QlFVVktMRUZCUVdkQ0xFRkJRV2RDTEVGQlFXTXNRVUZCWjBJc1FVRkJZenM3UlVGSGVFVXNRVUZCVVR0RlFVTlNMRUZCUVdFN1JVRkZha0lzUVVGQlowSXNRVUZCWjBJc1FVRkJZU3hCUVVGSkxFRkJRV2RDTEVGQlFXTXNRVUZCWVR0SlFVTjBSaXhCUVVGVk8wbEJRMVlzUVVGQlpUdEJRVVZ5UWl4QlFVRm5RaXhCUVVGblFqdEZRVU0xUWl4QlFVRmpPMFZCUld4Q0xFRkJRV2RDTEVGQlFXZENMRUZCUVdFN1NVRkRka01zUVVGQlZUdEpRVU5XTEVGQlFWTTdTVUZEVkN4QlFVRlJPMGxCUTFJc1FVRkJUenRKUVVOUUxFRkJRVTA3U1VGRFRpeEJRVUZMTzBsQlEwd3NRVUZCV1R0QlFVVnNRaXhCUVVGblFpeEJRVUZqTzBWQlF6RkNMRUZCUVdNN1JVRkZiRUlzUVVGQlowSXNRVUZCWXl4QlFVRmhPMGxTYkZjNVFpeEJVVzFYVUR0SlFVTkJMRUZCUVZjN08wbEJSVmdzUVVGQlV6dEZRVVZtTEVGQlFXZENMRUZCUVdNc1FVRkJXVHM3U1VGRmNFTXNRVUZCVXp0SlFVTlVMRUZCUVZNN1NVRkRWQ3hCUVVGVk8wbEJRMVlzUVVGQlRUdEpRVU5PTEVGQlFVczdTVUZEVEN4QlFVRlpPMGxCUTFvc1FVRkJUenRKUVVOUUxFRkJRVkU3U1VGRFVpeEJRVUZ0UWp0SlFVTnVRaXhCUVVGeFFqdEpRVU55UWl4QlFVRnBRanRGUVVWMlFpeEJRVUZuUWl4QlFVRmpMRUZCUVZrc1FVRkJUenRKUVVNelF5eEJRVUZyUWp0RlFVTjRRaXhCUVVGblFpeEJRVUZqTEVGQlFWa3NRVUZCVHp0SlFVTXpReXhCUVVGclFqdEZRVU40UWl4QlFVRm5RaXhCUVVGakxFRkJRVmtzUVVGQlR6dEpRVU16UXl4QlFVRnJRanRGUVVONFFpeEJRVUZuUWl4QlFVRmpMRUZCUVZrc1FVRkJUenRKUVVNelF5eEJRVUZyUWp0RlFVTjRRaXhCUVVGblFpeEJRVUZqTEVGQlFWa3NRVUZCVHp0SlFVTXpReXhCUVVGclFqdEZRVU40UWl4QlFVRm5RaXhCUVVGakxFRkJRVmtzUVVGQlR6dEpRVU16UXl4QlFVRnJRanRGUVVONFFpeEJRVUZuUWl4QlFVRmpMRUZCUVZrc1FVRkJUenRKUVVNelF5eEJRVUZyUWp0RlFVTjRRaXhCUVVGblFpeEJRVUZqTEVGQlFWa3NRVUZCVHp0SlFVTXpReXhCUVVGclFqdEJTbnBXZEVJN1JVbDNVa1k3TzBsQmNVVkpMRUZCUVZrN1NVRkRXaXhCUVVGWk8wbEJRMmhDTEVGQlFXVTdUVUZEVkN4QlFVRlpPMDFCUTFvc1FVRkJXVHM3UVVwcVYyaENPMFZKY1ZkR08wbEJRMGtzUVVGQlZUdEpRVU5XTEVGQlFWTTdTVUZEVkN4QlFVRlJPMGxCUTFJc1FVRkJUenRKUVVOUUxFRkJRVlU3U1VGRFZpeEJRVUZaTzBsQlExb3NRVUZCV1R0SlFXaFphRUlzUVVGQlpUdE5RVU5ZTEVGQlFWTTdUVUZEVkN4QlFVRlRPMDFCUTFRc1FVRkJUenRKUVdsWldDeEJRVUZsTEVGQlFXRXNRVUZCU3pzN1RVRkZNMElzUVVGQlZ6dE5RVU5ZTEVGQlFWTTdTVUZGWml4QlFVRm5RanROUVVOV0xFRkJRVlU3VFVGRFZpeEJRVUZSTzAxQlExSXNRVUZCVHp0TlFVTlFMRUZCUVZrN1RVRkRXaXhCUVVGVk8wMUJRMVlzUVVGQldUdE5RVGxhUml4QlFTdGFWanROUVVWT0xFRkJRV2RDTEVGQlFVVTdPMUZCUlZZc1FVRkJWenROUVVWdVFpeEJRVUZuUWl4QlFVRkZMRUZCUVdFc1FVRkJTenM3VVVGRk5VSXNRVUZCVnp0UlFVTllMRUZCUVZNN1NVRkZha0lzUVVGQmEwSTdUVUZEV2l4QlFVRlRPMDFCUTFRc1FVRkJZVHRKUVVWdVFpeEJRVUZyUWl4QlFVRkxPenROUVVWcVFpeEJRVUZWTzAxQlExWXNRVUZCVXp0TlFURmlSeXhCUVRKaVdqdE5RVE5pV1N4QlFUUmlXanROUVVOQkxFRkJRVk03VFZJM1lrWXNRVkU0WWxBN1RVRkRRU3hCUVVGVk8wMUJRMVlzUVVGQlpUdE5RVU5tTEVGQlFXdENPMDFCUlhoQ0xFRkJRV3RDTEVGQlFVc3NRVUZCUXp0UlVuQmphRUlzUVZGeFkwRTdUVUZEVWl4QlFVRnJRaXhCUVVGTExFRkJRVU03VVZKMFkyaENMRUZSZFdOQk8xRkJRMEVzUVVGQldUdEpRVVZ3UWl4QlFVRm5RaXhCUVVGVkxFRkJRV2RDTzAxQlEzQkRMRUZCUVZNN1NVRkZaaXhCUVVGblFpeEJRVUZ0UWl4QlFVRm5RaXhCUVVGcFFpeEJRVUZuUWpzN1RVRkpPVVVzUVVGQlZUdE5RV2hrUlN4QlFXbGtXanROUVVOQkxFRkJRVTg3VFZJdlkwd3NRVkZuWkVZN1RVRkRRU3hCUVVGVE8wMUJRMVFzUVVGQk1FSTdUVUZETVVJc1FVRkJWenROUVVkWUxFRkJRWGRDTzAxQmFtTTVRaXhCUVVGblFpeEJRVUZwUWl4QlFVRlJMRUZCUVdkQ0xFRkJRV1VzUVVGQlVTeEJRVUZuUWl4QlFVRmhPMUZCUTNwSExFRkJRVk03VVVGRFZDeEJRVUZUTzFGQlExUXNRVUZCVHp0TlFXZGpXQ3hCUVVGblFpeEJRVUZwUWl4QlFVRlpMRUZCUVdkQ0xFRkJRV1VzUVVGQldTeEJRVUZuUWl4QlFVRmhPMUZCUXpkSExFRkJRVk03VVVGRFZDeEJRVUZaTzFGQlExb3NRVUZCZDBJN1RVRkZhRU1zUVVGQlowSXNRVUZCYjBJc1FVRkJWU3hCUVVGblFpeEJRVUZyUWl4QlFVRlZMRUZCUVdkQ0xFRkJRV2RDT3p0UlFVVnNTQ3hCUVVGVE8xRkJRMVFzUVVGQlZUdFJRVU5XTEVGQlFVMDdVVUZEVGl4QlFVRlJPMUZCUTFJc1FVRkJVVHRSUVVOU0xFRkJRVTg3VVVGRFVDeEJRVUZWT3p0UlFVVldMRUZCUVZFN1VVRkRVaXhCUVVGVE8xRkJSV3BDTEVGQlFXZENMRUZCUVc5Q0xFRkJRVk1zUVVGQlJ5eEJRVUZuUWl4QlFVRnJRaXhCUVVGVExFRkJRVWNzUVVGQlowSXNRVUZCWjBJc1FVRkJVenRWUVVNM1NDeEJRVUZWTzFWQlExWXNRVUZCVHp0VlFVTlFMRUZCUVZFN1ZVRkRVaXhCUVVGTE8xVkJRMHdzUVVGQlRUdFZRVU5PTEVGQlFWYzdWVUZEV0N4QlFVRmhPMVZCUTJJc1FVRkJXVHRWUVVOYUxFRkJRV0U3VlVGRFlpeEJRVUZaT3p0VlFVVmFMRUZCUVdVN1ZVRkRaaXhCUVVGUk8xVkJRMUlzUVVGQlV6dFZRVU5VTEVGQlFXdENPMVZCUlRWQ0xFRkJRV2RDTEVGQlFXOUNMRUZCUVZNc1FVRkJReXhCUVVGUkxFRkJRV2RDTEVGQlFXdENMRUZCUVZNc1FVRkJReXhCUVVGUkxFRkJRV2RDTEVGQlFXZENMRUZCUVZNc1FVRkJRenRaVWpsbWRra3NRVkVyWmtRN1dWSXZaa01zUVZGblowSkVPMWxTTjJaS0xFRlJPR1pKTzBsQlNWb3NRVUZCWjBJc1FVRkJiMEk3TzAxQlJUVkNMRUZCUVZFN08wMUJibVprTEVGQlFVODdUVUZFYjBNc1FVRkZNME03VFVGeFprMHNRVUZCWXp0TlFVTmtMRUZCUVdNN1RVRkRaQ3hCUVVGVk8wMUJRMVlzUVVGQldUdE5RVU5hTEVGQlFWazdUVUZEV2l4QlFVRTBRanROUVVWd1F5eEJRVUZuUWl4QlFVRnZRaXhCUVVGRk96dFJRVVUxUWl4QlFVRmpPMUZCUTJRc1FVRkJZenROUVVWNFFpeEJRVUZuUWl4QlFVRnZRaXhCUVVGTE96dFJVblpvUW1wRExFRlJlV2hDUlR0UlFVTkJMRUZCUVdFN1VVRkRZaXhCUVVGWE8xRkJRMWdzUVVGQlpUdEpRVVY2UWl4QlFVRm5RaXhCUVVGclFqdE5RVU14UWl4QlFVRlJPMDFCUTFJc1FVRkJZVHROUVVOaUxFRkJRVk03VFZKb2FVSktMRUZSYVdsQ1REdE5RVU5CTEVGQlFXVTdUVUZEWml4QlFVRlhPMDFCUlc1Q0xFRkJRV2RDTEVGQlFXdENMRUZCUVVNN1VWSjBhVUl6UWl4QlVYVnBRa1U3U1VGRlZpeEJRVUZuUWl4QlFVRnJRanM3VFVGRk1VSXNRVUZCVnp0SlFVVnVRaXhCUVVGblFpeEJRVUZyUWl4QlFVRkhPenROUVVVM1FpeEJRVUZWTzAxQlExWXNRVUZCU3p0TlFVTk1MRUZCUVUwN1RVRkRUaXhCUVVGUk8wMUJRMUlzUVVGQlR6dE5RVVZtTEVGQlFXZENMRUZCUVd0Q0xFRkJRVWNzUVVGQlJUdFJRVU0zUWl4QlFVRlhPMDFCUlhKQ0xFRkJRV2RDTEVGQlFXdENMRUZCUVVjc1FVRkJSenRSUVVNNVFpeEJRVUZUTzFGQlJXNUNMRUZCUVdkQ0xFRkJRV3RDTEVGQlFVY3NRVUZCUnl4QlFVRlRPMVZCUTNKRExFRkJRVTg3VFVGRmJrSXNRVUZCWjBJc1FVRkJhMElzUVVGQlJ5eEJRVUZITzFGQlF6bENMRUZCUVZNN1NVRkZia0lzUVVGQlowSXNRVUZCYTBJc1FVRkJZU3hCUVVGTE96dE5RVVUxUXl4QlFVRlhPMGxCUlc1Q0xFRkJRV2RDTzAxQlExWXNRVUZCV1R0TlFVVnNRaXhCUVVGblFpeEJRVUZuUWpzN1VVRkhlRUlzUVVGQlR6dFJRVU5RTEVGQlFVODdVVUZEVUN4QlFVRlRPMUZCUldwQ0xFRkJRV2RDTEVGQlFXZENMRUZCUVVVN08wMUJSMnhETEVGQlFXZENMRUZCUVdkQ08xRkJRM2hDTEVGQlFXVTdVVUZEWml4QlFVRlRPMUZCUTFRc1FVRkJVVHRSUVVOU0xFRkJRV0U3VVVGRmNrSXNRVUZCWjBJc1FVRkJaMElzUVVGQllUdFZRVU51UXl4QlFVRlZPMVZCUTFZc1FVRkJXVHRWUVVOYUxFRkJRVkU3VlVGRFVpeEJRVUZQTzFWQlExQXNRVUZCWlR0UlFVVjZRaXhCUVVGblFpeEJRVUZuUWl4QlFVRmhPMVZTTDJ4Q2NrTXNRVkZuYlVKRk8xVkJRMEVzUVVGQllUdFZRVU5pTEVGQlFWYzdWVUZEV0N4QlFVRlRPMGxCU1c1Q0xFRkJRV2RDTEVGQlFXTTdPMDFCYkd4Q05VSXNRVUZCVHp0TlFVUnZReXhCUVVVelF6dE5RVzlzUWswc1FVRkJVVHROUVVOb1FpeEJRVUZuUWl4QlFVRmpMRUZCUVVVN08xRkJSWFJDTEVGQlFXTTdTVUZEZUVJc1FVRkJaMElzUVVGQll6dE5RVU4wUWl4QlFVRmxPMDFCUTJZc1FVRkJVVHROUVVOU0xFRkJRV0U3VFVGRFlpeEJRVUZUTzAxQlEycENMRUZCUVdkQ0xFRkJRV01zUVVGQldUdFJRVU5vUXl4QlFVRlpPMDFCUTNSQ0xFRkJRV2RDTEVGQlFXTXNRVUZCWVR0UlVuSnVRbTVETEVGUmMyNUNSVHRSUVVOQkxFRkJRV0U3VFVGRGRrSXNRVUZCWjBJc1FVRkJZeXhCUVVGaE8xRkJRMnBETEVGQlFWTTdUVUZEYmtJc1FVRkJaMElzUVVGQll5eEJRVUZaTzFGQlEyaERMRUZCUVUwN08wRkJSMmhDTEVGQlFXZENMRUZCUVVjc1FVRkJVenRGUVVNeFFpeEJRVUZWTzBWQlExb3NRVUZCWjBJc1FVRkJReXhCUVVGVkxFRkJRV2RDTEVGQlFVTXNRVUZCVXl4QlFVRlRMRUZCUVVNc1FVRkJWU3hCUVVGVExFRkJRVU03TzBsQlJTOUZMRUZCUVZNN1NVRkRWQ3hCUVVGVk8wbEJRMVlzUVVGQlN6dEpRVU5NTEVGQlFWazdTVUZEV2l4QlFVRlRPMGxCUTFRc1FVRkJVVHRKUVVOU0xFRkJRVTg3U1VGRFVDeEJRVUZaTzBsQlJWb3NRVUZCY1VJN1JVRkRla0lzUVVGQlowSXNRVUZCUXl4QlFVRlZMRUZCUVZNc1FVRkJRenRKUVVOcVF5eEJRVUZYTzBWQlEyWXNRVUZCWjBJc1FVRkJReXhCUVVGVExFRkJRVk1zUVVGQlF6dEpRVU5vUXl4QlFVRlhPMFZLYkcxQ1lqdEpTVzl0UWtZc1FVRkJaMElzUVVGQlF5eEJRVUZWTEVGQlFXZENMRUZCUVVNc1FVRkJVeXhCUVVGVExFRkJRVU1zUVVGQlZTeEJRVUZUTEVGQlFVTTdUVUZETjBVc1FVRkJXVHRKUVVOc1FpeEJRVUZuUWl4QlFVRkRMRUZCUVUwc1FVRkJWU3hCUVVGblFpeEJRVUZETEVGQlFVMHNRVUZCVXl4QlFVRlRMRUZCUVVNc1FVRkJUU3hCUVVGVkxFRkJRVk1zUVVGQlF5eEJRVUZOTzAxU2JuQkNia2NzUVZGdmNFSkdPenRCUVVWT0xFRkJRV2RDTzBWQlEyUXNRVUZCWlR0RlFVTnFRaXhCUVVGblFpeEJRVUZETEVGQlFWVXNRVUZCWjBJc1FVRkJRenM3U1VGRmVFTXNRVUZCVHp0SlFVTlFMRUZCUVd0Q096dEJRVVYwUWl4QlFVRm5RaXhCUVVGVE8wVkJRM1pDTEVGQlFXTTdSVUZEYUVJc1FVRkJaMElzUVVGQlV5eEJRVUZETEVGQlFWVXNRVUZCWjBJc1FVRkJVeXhCUVVGRE96dEpRVVV4UkN4QlFVRk5PMGxCUTA0c1FVRkJhMEk3TzBGS2NtNUNjRUk3UlVsNWJrSkdMRUZCUVdkQ0xFRkJRVU1zUVVGQlZTeEJRVUZuUWl4QlFVRkRPMGxCUTNSRExFRkJRVTg3UlVGRFlpeEJRVUZyUWl4QlFVRm5RanM3U1VGRk9VSXNRVUZCWlR0SlFVTnVRaXhCUVVGclFpeEJRVUZuUWl4QlFVRkRMRUZCUVZVc1FVRkJhMElzUVVGQlowSXNRVUZCUXp0TlFVTXhSU3hCUVVGUE8wMUJRMUFzUVVGQmEwSTdUVUZEYkVJc1FVRkJXVHROUVVWYUxFRkJRWEZDTzAxQlEzSkNMRUZCUVd0Q08wbEJRM2hDTEVGQlFXdENMRUZCUVdkQ0xFRkJRVU03VFVGRE4wSXNRVUZCVHp0SlFVTmlMRUZCUVd0Q0xFRkJRV2RDTEVGQlFVTTdUVUZETjBJc1FVRkJUenRKUVVOaUxFRkJRV3RDTEVGQlFXZENMRUZCUVVNc1FVRkJVeXhCUVVGVkxFRkJRV3RDTEVGQlFXZENMRUZCUVVNc1FVRkJVenROUVVNMVJpeEJRVUZQTzBsQlEySXNRVUZCYTBJc1FVRkJaMElzUVVGQlF5eEJRVUZUTzAxQlEzUkRMRUZCUVhsQ08wbEJReTlDTEVGQlFXdENMRUZCUVdkQ0xFRkJRVU1zUVVGQlV6dE5RVU4wUXl4QlFVRlhPMFZCUTJwQ0xFRkJRVzlDTEVGQlFXZENMRUZCUVVNc1FVRkJWU3hCUVVGdlFpeEJRVUZuUWl4QlFVRkRPenRKUVVWb1JpeEJRVUZUTzBWQlEySXNRVUZCWjBJc1FVRkJVenRKUVVOeVFpeEJRVUZqTzBsQlEyeENMRUZCUVdkQ0xFRkJRVk1zUVVGQlF5eEJRVUZWTEVGQlFXZENMRUZCUVZNc1FVRkJRenROUVVONFJDeEJRVUZOT3p0QlFVdGFPMFZCUTBVc1FVRkJWVHRGUVc1elFrMHNRVUZ2YzBKb1FqdEZRVU5CTEVGQlFVODdSVUV4YzBKVExFRkJNbk5DYUVJN1JVRkRRU3hCUVVGTk8wVkJiSE5DVVN4QlFXMXpRbVE3UlVGRFFTeEJRVUZUTzBWQlExUXNRVUZCV1R0RlFVTmFMRUZCUVhkQ08wVkJSVEZDTEVGQlFWYzdTVUZEVUN4QlFVRlJPMGxCUTFJc1FVRkJUenRGUVVWWUxFRkJRVmM3U1VGRFVDeEJRVUZsTzBsQlEyWXNRVUZCVVR0SlVuQjBRa29zUVZGeGRFSktPMGxCUTBFc1FVRkJZVHRKUVVOaUxFRkJRVkU3U1VGRFVpeEJRVUZQTzBsQlExQXNRVUZCVnp0SlFVTllMRUZCUVZNN1NVRkRWQ3hCUVVGWk8wbEJSV2hDTEVGQlFWY3NRVUZCU3l4QlFVRTJRaXhCUVVGWExFRkJRVXNzUVVGQmIwSXNRVUZCVnl4QlFVRkxPMDFCUnpOR0xFRkJRVTg3U1VGRllpeEJRVUZYTEVGQlFVczdUVUZEVml4QlFVRlRPMFZCUldZc1FVRkJWVHRKUVVOT0xFRkJRVk03U1VGRFZDeEJRVUZaTzBsQlExb3NRVUZCZDBJN1JVRkZOVUlzUVVGQll6dEpRVU5XTEVGQlFWVTdSVXBzYzBKYU8wbEpNSEJDUmp0TlFXcHpRbXRDTEVGQk5IVkNaRHROUVdwMlFtTXNRVUZyZGtKa08wMUJSVW9zUVVGQlZ6dFJRVU5NTEVGQlFWazdVVUZEV2l4QlFVRlJPMUZTZG5aQ1RpeEJVWGQyUWtZN1VVRkRRU3hCUVVGaE8xRkJRMklzUVVGQlV6dFJRVU5VTEVGQlFWYzdPMEZCUjJwQ096dEZRVVZGTEVGQlFWVTdSVUZEVml4QlFVRlRPMFZCUTFRc1FVRkJVVHRGUVVOU0xFRkJRVTg3UlVGRFVDeEJRVUZMTzBWQlEwd3NRVUZCVFR0RlFVTk9MRUZCUVZFN1JVRkRVaXhCUVVGWk8wVkJRMW9zUVVGQlV6dEZRVU5VTEVGQlFYRkNPMFZCUTNKQ0xFRkJRWGxDTzBWQlJUTkNMRUZCUVZjN1NVRkRVQ3hCUVVGVE8wbEJRMVFzUVVGQldUdEpRVU5hTEVGQlFYbENPMFZLYkhWQ00wSTdTVWx4ZFVKR0xFRkJRVmM3VFVGRFRDeEJRVUZYTzBsQlJXcENMRUZCUVdFc1FVRkJWenROUVVOc1FpeEJRVUZYTzBsQlJXcENMRUZCUVZjc1FVRkJWeXhCUVVGdlFpeEJRVUZoTEVGQlFWY3NRVUZCVnp0TlFVVjJSU3hCUVVGWE96czdPenM3TzBGQlVXcENMRUZCUVU4N1JVRkRUQ3hCUVVGVk8wVkJRMVlzUVVGQlVUdEZRVU5TTEVGQlFVODdSVUZEVUN4QlFVRlZPMFZCUTFZc1FVRkJXVHRGUVRsNFFrb3NRVUVyZUVKU096dEJRVVZHTEVGQlFVODdSVUZEVEN4QlFVRlZPMFZCUTFZc1FVRkJTenRGUVVOTUxFRkJRVk03UlVGRFZDeEJRVUZaT3p0QlNtcDNRbG83UlVsdmQwSkdMRUZCUVU4N1NVRkRTQ3hCUVVGVk8wbEJlSGxDUlN4QlFYbDVRbG83U1VGRFFTeEJRVUZUTzBsQlExUXNRVUZCVHp0SlFVTlFMRUZCUVVzN1NVRkRUQ3hCUVVGUE8wbEJRMUFzUVVGQlV6dEZRVU5pTEVGQlFVOHNRVUZCWXp0SlFVTnFRaXhCUVVGVk96dEJRekY2UW1RN1JVRkRReXhCUVVGVE8wVkJRMVFzUVVGQldUdEZUREpEV0R0SlN6ZERSanROUVV0RkxFRkJRVk03UlVGRldEdEpWa3BaTEVGVlMxWTdTVUZEUVN4QlFVRlhPMGxXUTA0c1FWVkJURHRKUVVOQkxFRkJRV1U3U1VGRmFrSXNRVUZCY1VJN1RWUklWaXhCVTBsU08wMUJRMGdzUVVGQmNVSXNRVUZCUXp0UlZHWmtMRUZUWjBKS08wVkJSVW83U1VGRFJTeEJRVUZYTzBWQlJXSTdTVUZEUlN4QlFVRlRPMGxCUTFRc1FVRkJaMEk3UlVGRmJFSTdTVUZEUlN4QlFVRlRPMGxCUTFRc1FVRkJaMEk3UlVGRmJFSTdTVUZEUlN4QlFVRmpPMGxVT1VKU0xFRlRLMEpPTzBsQlEwRXNRVUZCVnp0SlFVTllMRUZCUVdVN1NVRkRaaXhCUVVGVE8wVkJSMWc3U1VGRFJTeEJRVUZYTzBsQlJXSXNRVUZCZFVJN1RWUTVRbG9zUVZNclFsSTdUVUZEU0N4QlFVRjFRaXhCUVVGRE8xRlVNVU5vUWl4QlV6SkRTanRKUVVWS0xFRkJRWFZDTEVGQlFVVTdUVll4UTJJc1FWVXlRMVE3VFVGRFFTeEJRVUZYTzAxV2NrTlFMRUZWYzBOS08wMUJRMEVzUVVGQlpUczdRVU5xUkd4Q08wVkJRMFVzUVVGQmEwSTdSVUZEYkVJc1FVRkJjVUk3UlVGRGNrSXNRVUZCYVVJN1JVRkRha0lzUVVGQlVUdEZRVU5TTEVGQlFWVTdSVTUzUTFZN1NVMDNRMFk3VFVGUlNTeEJRVUZSTzBWQlIxbzdTVUZEU1N4QlFVRlJPMGxXVWtvc1FWVlRTanRKUVVOQkxFRkJRV0U3U1VGRFlpeEJRVUZYTzBsWVVFNHNRVmRSVER0SlFVTkJMRUZCUVUwN1NVRkRUaXhCUVVGaE8wbEJRMklzUVVGQlZUdEpRVU5XTEVGQlFWRTdTVUZEVWl4QlFVRmhPMGxPZDBKbU8wMU5iRU5HTzFGQllVMHNRVUZCVlR0UlFVTldMRUZCUVZjN1VVRkRXQ3hCUVVGVE96dEJRVWRtTzBWV04wSlJMRUZWT0VKT08wVldNVUpOTEVGVk1rSk9PMFZCUTBFc1FVRkJVenRGUVVOVUxFRkJRVkU3UlVGRlZqdEpRVU5KTEVGQlFWTTdSVUZGWWp0SlZteERVU3hCVlcxRFNqdEZRVWxLTzBsV2VrTlJMRUZWTUVOS08wVkJSVW83U1VGRFNTeEJRVUZyUWp0SlFVTnNRaXhCUVVGeFFqdEpRVU55UWl4QlFVRnBRanRKVGtwdVFqdE5UVU5HTzFGQlRVMHNRVUZCVVR0RlFVVmtPMGxCUTBrc1FVRkJhMEk3U1VGRGJFSXNRVUZCY1VJN1NVRkRja0lzUVVGQmFVSTdTVTVhYmtJN1RVMVRSanRSUVUxTkxFRkJRVkU3TzBGQlJXUTdSVUZEUlN4QlFVRnJRanRGUVVOc1FpeEJRVUZ4UWp0RlFVTnlRaXhCUVVGcFFqdEZRVU5xUWl4QlFVRlJPenRCUTJ4RlZqdEZRVU5GTEVGQlFWTTdSVUZEVkN4QlFVRlpPMFZCUTFvc1FVRkJaVHRGVURCRFpqdEpUemREUmp0TlRtbENTU3hCUVVGWE8wVk5WbVk3U1VGRFNTeEJRVUZUTzBsQlExUXNRVUZCWjBJN1NVRkZhRUlzUVVGQlV6dEpVR3REV0R0TlQzUkRSanRSUVU5TkxFRkJRVk03U1ZBclFtSTdUVTgzUWtZc1FVRkJhVUk3VVVGRlZDeEJRVUZoTzFGQlEySXNRVUZCVXp0RlFVVnFRanRKUVVOSkxFRkJRVms3UlVGRmFFSTdTVmg0UWxFc1FWZDVRa283U1VGRFFTeEJRVUZSTzBsQlExSXNRVUZCVlR0SlFVTldMRUZCUVdVN1JVRkZia0k3U1VGRFNTeEJRVUZaTzBsQlExb3NRVUZCWlR0RlFVVnVRaXhCUVVGaE8wbEJRMVFzUVVGQldUdEpRVU5hTEVGQlFWazdTVUZGYUVJc1FVRkJZU3hCUVVGSE8wMUJRMVlzUVVGQlV6dE5RVU5VTEVGQlFWTTdUVUZEVkN4QlFVRlBPMFZCUjJJN1NWZzFRMUVzUVZjMlEwbzdTVUZEUVN4QlFVRlRPMGxhTVVOSkxFRlpNa05pTzBsQlEwRXNRVUZCVXp0SlFVTmlMRUZCUVd0Q08wMVlPVUpYTEVGWEswSjJRanM3UVVGSFRqdEZRVU5GTEVGQlFXZENPMFZRVkdoQ08wbFBVVVk3VFVGSlNTeEJRVUZsTzAxQlEyWXNRVUZCWlR0RlVHSnFRanRKVDJWR08wMUJSMDBzUVVGQlpUdE5RVU5tTEVGQlFWazdSVkJ1UW1oQ08wbFBjVUpHTEVGQlFXbENPMDFCUlZRc1FVRkJVenROUVVOVUxFRkJRVTg3UlVGRlpqdEpRVU5KTEVGQlFXTTdTVUZEWkN4QlFVRmhPMGxCUTJJc1FVRkJaMEk3U1ZBM1FteENPMDFQTUVKR08xRkJUVTBzUVVGQlV6dEZRVVZtTzBsWUwwVlJMRUZFYTBST08wbEJPVU5sTEVGQkswTm1PMGxCUTBFc1FVRkJWenRKUVRWRFNpeEJRVFpEVUR0SlFVTkJMRUZCUVdFN1JWazBRbVk3U1ZnelJWY3NRVmMwUlZBN1JWQjBRMFk3U1U5M1EwWTdUVUZIVFN4QlFVRlpPMFZCUld4Q0xFRkJRV2RDTEVGQlFVazdTVUZEWkN4QlFVRlpPenRCUVUxc1FqdEZRVU5KTEVGQlFWazdSVUZEV2l4QlFVRlRPMFZhTjBWWUxFRkJRV0U3UlVGRFlpeEJRVUZuUWp0RldTdEZiRUlzUVVGQmJVSXNRVUZCU1R0SlFVTnFRaXhCUVVGWk8wRkJSV3hDTEVGQlFXTTdSVmg2UjA0c1FVUnJSRTQ3UlVFNVEyVXNRVUVyUTJZN1JVRkRRU3hCUVVGWE8wVkJOVU5LTEVGQk5rTlFPMFZCUTBFc1FVRkJZVHRCV1hORVppeEJRVUZqTzBWWWNrZElMRUZYYzBkUU8wVkJRMEVzUVVGQlZ6czdRVUZKWmp0RlFVTkZMRUZCUVZNN08wRkJSMWc3UlVGRFJTeEJRVUZUTzBWQlExUXNRVUZCV1R0RlFVTmFMRUZCUVdVN1JVRkZha0k3U1VGRFNTeEJRVUZUTzBsQlExUXNRVUZCWjBJN1NWQm9SbXhDTzAxUGEwWkdMRUZCUVd0Q08xRkJSVllzUVVGQllUdEpVSEJHYmtJN1RVOXpSa1lzUVVGQmEwSTdVVUZGVml4QlFVRmhPMFZCUlhKQ08wbEJRMGtzUVVGQlVUdEpRVU5TTEVGQlFWVTdTVUZEVml4QlFVRmxPMFZCU1c1Q08wbFlPVWxSTEVGRWIwVk9PMGxCYUVWbExFRkJhVVZtTzBsQlEwRXNRVUZCVnp0SlFUbEVTaXhCUVN0RVVEdEpRVU5CTEVGQlFXRTdTVU40UlZBc1FWZG5Ta283U1VGRFFTeEJRVUZUTzBsQlExUXNRVUZCV1R0SlFVVm9RaXhCUVVFeVFqdE5XR3BKUlN4QlYydEpka0k3UlVGRlRqdEpRVU5KTEVGQlFWazdPMEZEZGtwb1FqdEZRVU5GTEVGQlFXMUNPMFZCUTI1Q0xFRkJRVk03UlVGSFdEdEpRVU5KTEVGQlFWTTdSVUZGWWl4QlFVRnBRanRKUVVOaUxFRkJRVk03UlVGSllqdEpRVU5KTEVGQlFWRTdTVUZEVWl4QlFVRlRPMGxTTmtKWU8wMVJMMEpHTzFGQlMwMHNRVUZCVXp0RlFVVm1PMGxCUTBrc1FVRkJVenRKUVVOVUxFRkJRVkU3U1ZKelFsWTdUVkY0UWtZN1VVRkxUU3hCUVVGUk96dEJRVWRrTzBWQlEwVXNRVUZCVXp0RlFVTlVMRUZCUVZNN1JWSmpWRHRKVVdoQ1JqdE5RVXRKTEVGQlFWYzdSVUZGWmp0SlFVTkpMRUZCUVdVN1NWSlJha0k3VFZGVVJqdFJRVWxOTEVGQlFWTTdSVUZKWmp0SlFVTkpMRUZCUVdVN1JVRkhia0k3U1VGRFNTeEJRVUZSTzBsQlExSXNRVUZCVlR0SlVreGFPMDFSUjBZN1VVRkxUU3hCUVVGUk8xRkJRMUlzUVVGQldUczdRVUZIYkVJN1JVRkRSU3hCUVVGVE8wVkJRMVFzUVVGQldUdEZRVWxrTzBsQlEwa3NRVUZCVXp0SlFVTlVMRUZCUVdVN1NWSndRbXBDTzAxUmEwSkdPMUZCUzAwc1FVRkJVenM3UVVGTlpqdEZXakZGVVN4QldUSkZUanRGV25aRlRTeEJXWGRGVGp0RlluUkVRU3hCUVVGaE8wVkJRMklzUVVGQlowSTdSV0YzUkd4Q08wbGFNMFZSTEVGWk5FVktPMGxCUTBFc1FVRkJXVHRGUVVWb1FqdEpRVU5KTEVGQlFWTTdTVUZEVkN4QlFVRlJPMGxCUTFJc1FVRkJUenRGUVV0WU8wbEJRMGtzUVVGQlV6dEpRVU5VTEVGQlFVODdSVUZGV0R0SlFVTkpMRUZCUVZFN1NWbzFSa29zUVZrMlJrbzdTVUZEUVN4QlFVRlhPMGxCUTFnc1FVRkJZVHRKUVVOaUxFRkJRVTg3U1ZKMlJGUTdUVkZyUkVZN1VVRlJUU3hCUVVGUk8wVkJSV1E3U1VGRFNTeEJRVUZUTzBsQlExUXNRVUZCWVRzN1FVRkxha0k3UlVGRFJTeEJRVUZUTzBWQlExUXNRVUZCWjBJN1JWSnlSV2hDTzBsUmJVVkdPMDFCUzBrc1FVRkJVenRGUVZOaU8wbEJRMGtzUVVGQlZ6dEpZamRIWWl4QlFVRlpPMGxCUTFvc1FVRkJaVHRGWVdsSWFrSTdTVUZEU1N4QlFVRlpPenRCUVVkb1FqdEZRVU5GTEVGQlFXTTdSVUZGYUVJc1FVRkJXVHRKV2pOSlNpeEJXVFJKU2p0SlFVVktMRUZCUVZrc1FVRkJTenROV25aSlRpeEJXWGRKVERzN1FVTTNTVTQ3UlVGRFF5eEJRVUZuUWp0RlZEQkRaanRKVXpORFJqdE5RVWxGTEVGQlFWTTdPMEZCUjFnN1JVRkRReXhCUVVGWk8wVkJRMW9zUVVGQlV6dEZRVU5VTEVGQlFWTTdSVUZEVkN4QlFVRlBPMFZVWjBOT08wbFRjRU5HTzAxQlQwVXNRVUZCVXp0RlFVVllPMGxCUTBVc1FVRkJUenRKVkRCQ1VEdE5Vek5DUmp0UlFVbEhMRUZCUVZNN1VVRkZXaXhCUVVFMFFqdFZRVU40UWl4QlFVRlRPMVZCUTFRc1FVRkJUenRGUVVkWU8wbEJRMFVzUVVGQldUdEpWR1ZhTzAxVGFFSkdPMUZCU1Vjc1FVRkJXVHRKUVVWbUxFRkJRWFZDTzAxQlEzQkNMRUZCUVZNN1RVRkRWQ3hCUVVGWE8wMUJRMWdzUVVGQlpUdE5RVVZzUWl4QlFVRjFRaXhCUVVGTE8xRkJRM2hDTEVGQlFWTTdUVUZIWWl4QlFVRjFRaXhCUVVGTExFRkJRV0U3VVVGRGNFTXNRVUZCVXp0TlZFRmFPMUZUVmtZc1FVRkJkVUk3VlVGamJrSXNRVUZCVnp0SlFVdG1MRUZCUVhWQ0xFRkJRVmNzUVVGQlJ6dE5RVU01UWl4QlFVRlhPMDFVVm1oQ08xRlRVMFlzUVVGQmRVSXNRVUZCVnl4QlFVRkhPMVZCU1RWQ0xFRkJRVmM3TzBGQlJYQkNPMFZCUTBNc1FVRkJXVHRGUVVOYUxFRkJRVTg3UlVGRlVqdEpRVU5GTEVGQlFWRTdTVUZEVWl4QlFVRlRPMGxCUTFRc1FVRkJXVHRKUVVOYUxFRkJRVk03U1VGRFZDeEJRVUZSTzBWQlJWWXNRVUZCYlVJc1FVRkJTU3hCUVVGdFFpeEJRVUZITEVGQlFXMUNPMGxCUXpsRUxFRkJRVmM3U1VGRFdDeEJRVUZsTzBsVU5VSm1PMDFUTUVKR0xFRkJRVzFDTEVGQlFVa3NRVUZCYlVJc1FVRkJSeXhCUVVGdFFqdFJRVXMzUkN4QlFVRlhPMFZCUldRc1FVRkJiVUk3U1VGRmFrSXNRVUZCV1R0SlFVVmtMRUZCUVcxQ0xFRkJRVWM3VFVGRGJrSXNRVUZCVXp0TlFVTlVMRUZCUVZFN1RVRkRVaXhCUVVGVE96dFhRM0JHUkR0RlFVTllPMGxCUTBrc1FVRkJVenM3UlVGRFlqdEpRVU5KTEVGQlFWTTdPMEZCUldJN1JXUklVU3hCWTBsT08wVkJRMEVzUVVGQllUdEZRVU5pTEVGQlFXTTdSVUZEWkN4QlFVRlJPMFZCUTFJc1FVRkJZVHRGUVVOaUxFRkJRVmM3TzBGQlJXSTdSV1JZVVN4QlkxbE9PenRCUVVkR08wVkJRMFVzUVVGQlV6dEZRVU5VTEVGQlFWTTdSVUZEVkN4QlFVRlBPMFZXZFVKUU8wbFZNVUpHTzAxQlRVa3NRVUZCVHp0RlZtOUNWRHRKVlRGQ1JqdE5RVk5KTEVGQlFWTTdUVUZEVkN4QlFVRlBPenRCUVU5WUxFRkJRVWtzUVVGQlRTeEJRVUZKTzBWa2NFTk9MRUZqY1VOS08wRkJSVW9zUVVGQlJ5eEJRVUZQTEVGQlFVMHNRVUZCUnl4QlFVRlBPMFZCUlhSQ0xFRkJRVk03UlVGRFZDeEJRVUZaT3p0QlFVVm9RanRGUVVORkxFRkJRVk03UlZaQlZEdEpWVVJHTzAxQlNVa3NRVUZCVXpzN1FVRkZZanRGUVVORkxFRkJRVk03UlZaT1ZEdEpWVXRHTzAxQlNVa3NRVUZCVXpzN1FVRk5ZaXhCUVVGaE8wVkJRMVFzUVVGQlV6dEZRVU5VTEVGQlFWYzdSVUZEV0N4QlFVRnhRanRGUVVOeVFpeEJRVUZ2UWp0QlFVVjRRaXhCUVVGaExFRkJRVWs3UlVGRFlpeEJRVUZwUWp0QlFVVnlRaXhCUVVGaExFRkJRVWs3UlVGRFlpeEJRVUZwUWp0QlFVVnlRaXhCUVVGaExFRkJRVWs3UlVGRFlpeEJRVUZwUWp0QlFVVnlRaXhCUVVGaExFRkJRVWs3UlVGRFlpeEJRVUZwUWp0QlFVVnlRaXhCUVVGaExFRkJRVWs3UlVGRFlpeEJRVUZwUWp0QlFVVnlRaXhCUVVGaExFRkJRVWs3UlVGRFlpeEJRVUZwUWp0QlFVVnlRaXhCUVVGaExFRkJRVWs3UlVGRFlpeEJRVUZwUWp0QlFVVnlRaXhCUVVGaExFRkJRVWs3UlVGRFlpeEJRVUZwUWp0QlFVVnlRaXhCUVVGaExFRkJRVWs3UlVGRFlpeEJRVUZwUWp0QlFVVnlRaXhCUVVGaExFRkJRVWs3UlVGRFlpeEJRVUZwUWp0QlFVVnlRaXhCUVVGaExFRkJRVWs3UlVGRFlpeEJRVUZwUWp0QlFVVnlRaXhCUVVGaExFRkJRVWs3UlVGRFlpeEJRVUZwUWp0QlFVVnlRaXhCUVVGaExFRkJRVWs3UlVGRFlpeEJRVUZwUWp0QlFVVnlRaXhCUVVGaExFRkJRVWs3UlVGRFlpeEJRVUZwUWp0QlFVVnlRaXhCUVVGaExFRkJRVWs3UlVGRFlpeEJRVUZwUWp0QlFVVnlRaXhCUVVGaExFRkJRVWs3UlVGRFlpeEJRVUZwUWpzN1FVTXZSMlFzUVVGQlowSXNRVUZCV1R0RlFVTnFReXhCUVVGVE8wVkJRMVFzUVVGQlV6czdRVUZGV0R0RlFVVkZMRUZCUVdkQ08wVlljME5vUWp0SlYzQkRSanROUVVkTkxFRkJRVms3UlVGSmJFSXNRVUZCY1VJc1FVRkJTVHRKUVVOdVFpeEJRVUZaTzBWQlJXeENMRUZCUVhGQ08wbG1ia0ppTEVGRWEwUk9PMGxCT1VObExFRkJLME5tTzBsQlEwRXNRVUZCVnp0SlFUVkRTaXhCUVRaRFVEdEpRVU5CTEVGQlFXRTdTVUZvUTJJc1FVRkJZVHRKUVVOaUxFRkJRV2RDT3p0QlowSkRiRUk3UlVGRFJTeEJRVUZUTzBWQlExUXNRVUZCVXpzN1FWaHRRbFE3UlZkVVJqdEpRVWROTEVGQlFWazdRVUZGYkVJc1FVRkJhVUlzUVVGQlNUdEZRVU5tTEVGQlFWazdRVUZGYkVJc1FVRkJhVUk3UldZMVExUXNRVVJyUkU0N1JVRTVRMlVzUVVFclEyWTdSVUZEUVN4QlFVRlhPMFZCTlVOS0xFRkJOa05RTzBWQlEwRXNRVUZCWVR0QlowSlFaaXhCUVVGcFFqdEZaamxEU2l4QlJIbEVXRHRGUVhSRVpTeEJRWFZFWmp0RlFVTkJMRUZCUVZjN1JVRnNSRTRzUVVGdFJFdzdSVUZEUVN4QlFVRmhPMFZCUTJJc1FVRkJaMEk3UlVFM1EyaENMRUZCUVZrN1JVRkRXaXhCUVVGbE8wRm5RaXRDYWtJc1FVRkJhVUk3UldZelEwNHNRV1UwUTB3N1JVRkRRU3hCUVVGWE8wVkJRMWdzUVVGQldUdEJRVVZzUWl4QlFVRnBRanRGWm5aRVZDeEJSRFJGVGp0RlFYaEZaU3hCUVhsRlpqdEZRVU5CTEVGQlFWYzdSVUZEV0N4QlFVRlpPMFZCY2tWUUxFRkJjMFZNTzBWQk9VUkJMRUZCUVZrN1JVRkRXaXhCUVVGbE96dEJhVUpzUW1wQ0xFRkJRV1VzUVVGQlR5eEJRVUZsTEVGQlFVc3NRVUZCWjBJc1FVRkJaU3hCUVVGTExFRkJRV2xDTEVGQlFXVXNRVUZCU3l4QlFVRnRRaXhCUVVGbExFRkJRVXNzUVVGQmFVSXNRVUZCWlN4QlFVRkxMRUZCUVdNc1FVRkJaU3hCUVVGTExFRkJRV1VzUVVGQlpTeEJRVUZMTEVGQlFXTXNRVUZCWlN4QlFVRkxMRUZCUVdkQ0xFRkJRV1VzUVVGQlN5eEJRVUZsTEVGQlFXVXNRVUZCU3l4QlFVRmxMRUZCUVdVc1FVRkJTeXhCUVVGdFFpeEJRVUZsTEVGQlFVc3NRVUZCZVVJc1FVRkJaU3hCUVVGTExFRkJRV2RDTEVGQlFXVXNRVUZCU3l4QlFVRmxMRUZCUVdVc1FVRkJTeXhCUVVGbExFRkJRV1U3UldoQ1V6bHFRaXhCWjBKUlVqdEZRVU5CTEVGQlFWRTdSVUZCVlN4QlFVTk1PMFZCUTJJc1FVRkJaVHRGUVVGQkxFRkJRMGc3UlVGRFdpeEJRVUZUTzBWQlExUXNRVUZCVXp0RlFVTlVMRUZCUVU4N1FVRkhWaXhCUVVGbE8wVkJRMWdzUVVGQlV6dEJRVVZpTEVGQlFXVXNRVUZCU3l4QlFVRnBRaXhCUVVGbExFRkJRVXNzUVVGQlowSXNRVUZCWlN4QlFVRkxPMFZCUjNwR0xFRkJRVk03UVVGSFlqdEZRVU5KTEVGQlFWTTdRVUZGWWl4QlFVRXlRanRGUVVOMlFpeEJRVUZUTzBGQlIySXNRVUZCWlR0RmFFSjRRMUFzUVdkQ2VVTktPMFZCUTBFc1FVRkJaVHRGUVVObUxFRkJRVkU3UlVGRFVpeEJRVUZWTzBWQlExWXNRVUZCVVR0QlFVZGFMRUZCUVdVN1JXaENhRVJRTEVGblFtbEVTanRGUVVOQkxFRkJRVms3UlVGRFdpeEJRVUZsTzBWQlEyWXNRVUZCVVR0RmFFSTVRMFFzUVdkQ0swTlFPMFZCUTBFc1FVRkJVVHRGUVVOU0xFRkJRVk03UlVGRFZDeEJRVUZYTzBWQlExZ3NRVUZCVVR0RlFVTlNMRUZCUVZNN1JVRkRWQ3hCUVVGVk8wVkJRMVlzUVVGQlR5SXNJbVpwYkdVaU9pSnpkSGxzWlM1amMzTWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUl2THlBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVnh1THk4Z1RtOXliV0ZzYVhwbExuTmpjM01nWW1GelpXUWdiMjRnVG1samIyeGhjeUJIWVd4c1lXZG9aWElnWVc1a0lFcHZibUYwYUdGdUlFNWxZV3duYzF4dUx5OGdibTl5YldGc2FYcGxMbU56Y3lCMk1pNHhMak1nZkNCTlNWUWdUR2xqWlc1elpTQjhJR2RwZEM1cGJ5OXViM0p0WVd4cGVtVmNiaTh2SUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlYRzVjYmk4dklEMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5WEc0dkx5Qk9iM0p0WVd4cGVtVXVjMk56Y3lCelpYUjBhVzVuYzF4dUx5OGdQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQxY2JseHVYRzR2THlCVFpYUWdkRzhnZEhKMVpTQnBaaUI1YjNVZ2QyRnVkQ0IwYnlCaFpHUWdjM1Z3Y0c5eWRDQm1iM0lnU1VVMklHRnVaQ0JKUlRkY2JpOHZJRTV2ZEdsalpUb2djMlYwZEdsdVp5QjBieUIwY25WbElHMXBaMmgwSUhKbGJtUmxjaUJ6YjIxbElHVnNaVzFsYm5SelhHNHZMeUJ6YkdsbmFIUnNlU0JrYVdabVpYSmxiblJzZVNCMGFHRnVJSGRvWlc0Z2MyVjBJSFJ2SUdaaGJITmxYRzRrYkdWbllXTjVYM04xY0hCdmNuUmZabTl5WDJsbE9pQm1ZV3h6WlNBaFpHVm1ZWFZzZERzZ0x5OGdWWE5sWkNCaGJITnZJR2x1SUVOdmJYQmhjM05jYmx4dVhHNHZMeUJUWlhRZ2RHaGxJR1JsWm1GMWJIUWdabTl1ZENCbVlXMXBiSGtnYUdWeVpTQnpieUI1YjNVZ1pHOXVKM1FnYUdGMlpTQjBieUJ2ZG1WeWNtbGtaU0JwZENCc1lYUmxjbHh1Skc1dmNtMWhiR2w2WldSZlptOXVkRjltWVcxcGJIazZJSE5oYm5NdGMyVnlhV1lnSVdSbFptRjFiSFE3WEc1Y2JpUnViM0p0WVd4cGVtVmZhR1ZoWkdsdVozTTZJSFJ5ZFdVZ0lXUmxabUYxYkhRN1hHNWNiaVJvTVY5bWIyNTBYM05wZW1VNklESmxiU0FoWkdWbVlYVnNkRHRjYmlSb01sOW1iMjUwWDNOcGVtVTZJREV1TldWdElDRmtaV1poZFd4ME8xeHVKR2d6WDJadmJuUmZjMmw2WlRvZ01TNHhOMlZ0SUNGa1pXWmhkV3gwTzF4dUpHZzBYMlp2Ym5SZmMybDZaVG9nTVdWdElDRmtaV1poZFd4ME8xeHVKR2cxWDJadmJuUmZjMmw2WlRvZ01DNDRNMlZ0SUNGa1pXWmhkV3gwTzF4dUpHZzJYMlp2Ym5SZmMybDZaVG9nTUM0M05XVnRJQ0ZrWldaaGRXeDBPMXh1WEc0a2FERmZiV0Z5WjJsdU9pQXdMalkzWlcwZ01DQWhaR1ZtWVhWc2REdGNiaVJvTWw5dFlYSm5hVzQ2SURBdU9ETmxiU0F3SUNGa1pXWmhkV3gwTzF4dUpHZ3pYMjFoY21kcGJqb2dNV1Z0SURBZ0lXUmxabUYxYkhRN1hHNGthRFJmYldGeVoybHVPaUF4TGpNelpXMGdNQ0FoWkdWbVlYVnNkRHRjYmlSb05WOXRZWEpuYVc0NklERXVOamRsYlNBd0lDRmtaV1poZFd4ME8xeHVKR2cyWDIxaGNtZHBiam9nTWk0ek0yVnRJREFnSVdSbFptRjFiSFE3WEc1Y2JpUmlZV05yWjNKdmRXNWtPaUFqWm1abUlDRmtaV1poZFd4ME8xeHVKR052Ykc5eU9pQWpNREF3SUNGa1pXWmhkV3gwTzF4dVhHNHZMeUE5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBWeHVMeThnU0ZSTlREVWdaR2x6Y0d4aGVTQmtaV1pwYm1sMGFXOXVjMXh1THk4Z1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDFjYmx4dUx5OGdRMjl5Y21WamRITWdZbXh2WTJzZ1pHbHpjR3hoZVNCdWIzUWdaR1ZtYVc1bFpDQnBiaUJKUlRZdk55ODRMemtnSmlCR1JqTmNibHh1WVhKMGFXTnNaU3hjYm1GemFXUmxMRnh1WkdWMFlXbHNjeXhjYm1acFoyTmhjSFJwYjI0c1hHNW1hV2QxY21Vc1hHNW1iMjkwWlhJc1hHNW9aV0ZrWlhJc1hHNW9aM0p2ZFhBc1hHNXVZWFlzWEc1elpXTjBhVzl1TEZ4dWMzVnRiV0Z5ZVNCN1hHNGdJQ0FnWkdsemNHeGhlVG9nWW14dlkyczdYRzU5WEc1Y2JpOHZJRU52Y25KbFkzUnpJR2x1YkdsdVpTMWliRzlqYXlCa2FYTndiR0Y1SUc1dmRDQmtaV1pwYm1Wa0lHbHVJRWxGTmk4M0x6Z3ZPU0FtSUVaR00xeHVYRzVoZFdScGJ5eGNibU5oYm5aaGN5eGNiblpwWkdWdklIdGNiaUFnSUNCa2FYTndiR0Y1T2lCcGJteHBibVV0WW14dlkyczdYRzRnSUNBZ1FHbG1JQ1JzWldkaFkzbGZjM1Z3Y0c5eWRGOW1iM0pmYVdVZ2UxeHVJQ0FnSUNBZ0lDQXFaR2x6Y0d4aGVUb2dhVzVzYVc1bE8xeHVJQ0FnSUNBZ0lDQXFlbTl2YlRvZ01UdGNiaUFnSUNCOVhHNTlYRzVjYmk4dklERXVJRkJ5WlhabGJuUnpJRzF2WkdWeWJpQmljbTkzYzJWeWN5Qm1jbTl0SUdScGMzQnNZWGxwYm1jZ0oyRjFaR2x2SnlCM2FYUm9iM1YwSUdOdmJuUnliMnh6WEc0dkx5QXlMaUJTWlcxdmRtVWdaWGhqWlhOeklHaGxhV2RvZENCcGJpQnBUMU0xSUdSbGRtbGpaWE5jYmx4dVlYVmthVzg2Ym05MEtGdGpiMjUwY205c2MxMHBJSHRjYmlBZ0lDQmthWE53YkdGNU9pQnViMjVsT3lBdkx5QXhYRzRnSUNBZ2FHVnBaMmgwT2lBd095QXZMeUF5WEc1OVhHNWNiaTh2WEc0dkx5QkJaR1J5WlhOeklHQmJhR2xrWkdWdVhXQWdjM1I1YkdsdVp5QnViM1FnY0hKbGMyVnVkQ0JwYmlCSlJTQTRMemt1WEc0dkx5QklhV1JsSUhSb1pTQmdkR1Z0Y0d4aGRHVmdJR1ZzWlcxbGJuUWdhVzRnU1VVc0lGTmhabUZ5YVN3Z1lXNWtJRVpwY21WbWIzZ2dQQ0F5TWk1Y2JpOHZYRzVjYmx0b2FXUmtaVzVkTENCMFpXMXdiR0YwWlNCN1hHNGdJQ0FnWkdsemNHeGhlVG9nYm05dVpUdGNibjFjYmx4dUx5OGdQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQxY2JpOHZJRUpoYzJWY2JpOHZJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVhHNWNiaTh2SURFdUlFTnZjbkpsWTNSeklIUmxlSFFnY21WemFYcHBibWNnYjJSa2JIa2dhVzRnU1VVMkx6Y2dkMmhsYmlCaWIyUjVJR1p2Ym5RdGMybDZaU0JwY3lCelpYUWdkWE5wYm1jZ1pXMGdkVzVwZEhOY2JpOHZJQ0FnSUdoMGRIQTZMeTlqYkdGbmJuVjBMbU52YlM5aWJHOW5Mek0wT0M4all6YzVNRnh1THk4Z01pNGdVSEpsZG1WdWRITWdhVTlUSUhSbGVIUWdjMmw2WlNCaFpHcDFjM1FnWVdaMFpYSWdiM0pwWlc1MFlYUnBiMjRnWTJoaGJtZGxMQ0IzYVhSb2IzVjBJR1JwYzJGaWJHbHVaeUIxYzJWeUlIcHZiMjFjYmk4dklDQWdJSGQzZHk0ME5UWmlaWEpsWVhOMGNtVmxkQzVqYjIwdllYSmphR2wyWlM4eU1ERXdNVEl2WTI5dWRISnZiR3hwYm1kZmRHVjRkRjl6YVhwbFgybHVYM05oWm1GeWFWOW1iM0pmYVc5elgzZHBkR2h2ZFhSZlpHbHpZV0pzYVc1blgzVnpaWEpmZW05dmJTOWNibHh1YUhSdGJDQjdYRzRnSUNBZ1FHbG1JQ1JzWldkaFkzbGZjM1Z3Y0c5eWRGOW1iM0pmYVdVZ2UxeHVJQ0FnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJREV3TUNVN0lDOHZJREZjYmlBZ0lDQjlYRzVjZEZ4MEx5OWlZV05yWjNKdmRXNWtPaUFrWW1GamEyZHliM1Z1WkR0Y2JseDBYSFF2TDJOdmJHOXlPaUFrWTI5c2IzSTdYRzRnSUNBZ0xYZGxZbXRwZEMxMFpYaDBMWE5wZW1VdFlXUnFkWE4wT2lBeE1EQWxPeUF2THlBeVhHNGdJQ0FnTFcxekxYUmxlSFF0YzJsNlpTMWhaR3AxYzNRNklERXdNQ1U3SUM4dklESmNibjFjYmx4dUx5OGdRV1JrY21WemMyVnpJR1p2Ym5RdFptRnRhV3g1SUdsdVkyOXVjMmx6ZEdWdVkza2dZbVYwZDJWbGJpQW5kR1Y0ZEdGeVpXRW5JR0Z1WkNCdmRHaGxjaUJtYjNKdElHVnNaVzFsYm5SekxseHVYRzVvZEcxc0xGeHVZblYwZEc5dUxGeHVhVzV3ZFhRc1hHNXpaV3hsWTNRc1hHNTBaWGgwWVhKbFlTQjdYRzRnSUNBZ0x5OW1iMjUwTFdaaGJXbHNlVG9nSkc1dmNtMWhiR2w2WldSZlptOXVkRjltWVcxcGJIazdYRzU5WEc1Y2JpOHZJRUZrWkhKbGMzTmxjeUJ0WVhKbmFXNXpJR2hoYm1Sc1pXUWdhVzVqYjNKeVpXTjBiSGtnYVc0Z1NVVTJMemRjYmx4dVltOWtlU0I3WEc0Z0lDQWdiV0Z5WjJsdU9pQXdPMXh1ZlZ4dVhHNHZMeUE5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBWeHVMeThnVEdsdWEzTmNiaTh2SUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlYRzVjYmk4dklERXVJRkpsYlc5MlpTQjBhR1VnWjNKaGVTQmlZV05yWjNKdmRXNWtJR052Ykc5eUlHWnliMjBnWVdOMGFYWmxJR3hwYm10eklHbHVJRWxGSURFd0xseHVMeThnTWk0Z1FXUmtjbVZ6YzJWeklHOTFkR3hwYm1VZ1pHbHpjR3hoZVdWa0lHOWtaR3g1SUdsdUlFTm9jbTl0WlZ4dUx5OGdNeTRnU1cxd2NtOTJaWE1nY21WaFpHRmlhV3hwZEhrZ2QyaGxiaUJtYjJOMWMyVmtJR0Z1WkNCaGJITnZJRzF2ZFhObElHaHZkbVZ5WldRZ2FXNGdZV3hzSUdKeWIzZHpaWEp6WEc0dkx5QWdJQ0J3Wlc5d2JHVXViM0JsY21FdVkyOXRMM0JoZEhKcFkydHNMMlY0Y0dWeWFXMWxiblJ6TDJ0bGVXSnZZWEprTDNSbGMzUmNibHh1WVNCN1hHNGdJQ0FnTHk4Z01WeHVYRzRnSUNBZ1ltRmphMmR5YjNWdVpEb2dkSEpoYm5Od1lYSmxiblE3WEc1Y2JpQWdJQ0F2THlBeVhHNWNiaUFnSUNBbU9tWnZZM1Z6SUh0Y2JpQWdJQ0FnSUNBZ0x5OXZkWFJzYVc1bE9pQjBhR2x1SUdSdmRIUmxaRHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQXZMeUF6WEc1Y2JpQWdJQ0FtT21odmRtVnlMRnh1SUNBZ0lDWTZZV04wYVhabElIdGNiaUFnSUNBZ0lDQWdiM1YwYkdsdVpUb2dNRHRjYmlBZ0lDQjlYRzU5WEc1Y2JpOHZJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVhHNHZMeUJVZVhCdlozSmhjR2g1WEc0dkx5QTlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFZ4dVhHNHZMeUJCWkdSeVpYTnpaWE1nWm05dWRDQnphWHBsY3lCaGJtUWdiV0Z5WjJsdWN5QnpaWFFnWkdsbVptVnlaVzUwYkhrZ2FXNGdTVVUyTHpkY2JpOHZJRUZrWkhKbGMzTmxjeUJtYjI1MElITnBlbVZ6SUhkcGRHaHBiaUFuYzJWamRHbHZiaWNnWVc1a0lDZGhjblJwWTJ4bEp5QnBiaUJHUmpRckxDQkRhSEp2YldVc0lGTTFYRzVjYmk4cUlFQnBaaUJjWENSdWIzSnRZV3hwZW1WZmFHVmhaR2x1WjNNZ1BUMGdkSEoxWlNCN1hHNGdJQ0FnYURFZ2UxeHVJQ0FnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJRnhjSkdneFgyWnZiblJmYzJsNlpUdGNiaUFnSUNBZ0lDQWdiV0Z5WjJsdU9pQmNYQ1JvTVY5dFlYSm5hVzQ3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdhRElnZTF4dUlDQWdJQ0FnSUNCbWIyNTBMWE5wZW1VNklGeGNKR2d5WDJadmJuUmZjMmw2WlR0Y2JpQWdJQ0FnSUNBZ2JXRnlaMmx1T2lCY1hDUm9NbDl0WVhKbmFXNDdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2FETWdlMXh1SUNBZ0lDQWdJQ0JtYjI1MExYTnBlbVU2SUZ4Y0pHZ3pYMlp2Ym5SZmMybDZaVHRjYmlBZ0lDQWdJQ0FnYldGeVoybHVPaUJjWENSb00xOXRZWEpuYVc0N1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnYURRZ2UxeHVJQ0FnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJRnhjSkdnMFgyWnZiblJmYzJsNlpUdGNiaUFnSUNBZ0lDQWdiV0Z5WjJsdU9pQmNYQ1JvTkY5dFlYSm5hVzQ3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdhRFVnZTF4dUlDQWdJQ0FnSUNCbWIyNTBMWE5wZW1VNklGeGNKR2cxWDJadmJuUmZjMmw2WlR0Y2JpQWdJQ0FnSUNBZ2JXRnlaMmx1T2lCY1hDUm9OVjl0WVhKbmFXNDdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2FEWWdlMXh1SUNBZ0lDQWdJQ0JtYjI1MExYTnBlbVU2SUZ4Y0pHZzJYMlp2Ym5SZmMybDZaVHRjYmlBZ0lDQWdJQ0FnYldGeVoybHVPaUJjWENSb05sOXRZWEpuYVc0N1hHNGdJQ0FnZlZ4dWZTQXFMMXh1WEc0dkx5QkJaR1J5WlhOelpYTWdjM1I1YkdsdVp5QnViM1FnY0hKbGMyVnVkQ0JwYmlCSlJTQTRMemtzSUZNMUxDQkRhSEp2YldWY2JseHVZV0ppY2x0MGFYUnNaVjBnZTF4dUlDQWdJR0p2Y21SbGNpMWliM1IwYjIwNklERndlQ0JrYjNSMFpXUTdYRzU5WEc1Y2JpOHZJRUZrWkhKbGMzTmxjeUJ6ZEhsc1pTQnpaWFFnZEc4Z0oySnZiR1JsY2ljZ2FXNGdSa1l6S3l3Z1V6UXZOU3dnUTJoeWIyMWxYRzVjYm1Jc1hHNXpkSEp2Ym1jZ2UxeHVJQ0FnSUdadmJuUXRkMlZwWjJoME9pQmliMnhrTzF4dWZWeHVYRzVBYVdZZ0pHeGxaMkZqZVY5emRYQndiM0owWDJadmNsOXBaU0I3WEc0Z0lDQWdZbXh2WTJ0eGRXOTBaU0I3WEc0Z0lDQWdJQ0FnSUcxaGNtZHBiam9nTVdWdElEUXdjSGc3WEc0Z0lDQWdmVnh1ZlZ4dVhHNHZMeUJCWkdSeVpYTnpaWE1nYzNSNWJHbHVaeUJ1YjNRZ2NISmxjMlZ1ZENCcGJpQlROU3dnUTJoeWIyMWxYRzVjYm1SbWJpQjdYRzRnSUNBZ1ptOXVkQzF6ZEhsc1pUb2dhWFJoYkdsak8xeHVmVnh1WEc0dkx5QkJaR1J5WlhOelpYTWdjM1I1YkdsdVp5QnViM1FnY0hKbGMyVnVkQ0JwYmlCSlJUWXZOeTg0THpsY2JseHViV0Z5YXlCN1hHNGdJQ0FnWW1GamEyZHliM1Z1WkRvZ0kyWm1NRHRjYmlBZ0lDQmpiMnh2Y2pvZ0l6QXdNRHRjYm4xY2JseHVMeThnUVdSa2NtVnpjMlZ6SUcxaGNtZHBibk1nYzJWMElHUnBabVpsY21WdWRHeDVJR2x1SUVsRk5pODNYRzVBYVdZZ0pHeGxaMkZqZVY5emRYQndiM0owWDJadmNsOXBaU0I3WEc0Z0lDQWdjQ3hjYmlBZ0lDQndjbVVnZTF4dUlDQWdJQ0FnSUNCdFlYSm5hVzQ2SURGbGJTQXdPMXh1SUNBZ0lIMWNibjFjYmx4dUx5OGdRMjl5Y21WamRITWdabTl1ZENCbVlXMXBiSGtnYzJWMElHOWtaR3g1SUdsdUlFbEZOaXdnVXpRdk5Td2dRMmh5YjIxbFhHNHZMeUJsYmk1M2FXdHBjR1ZrYVdFdWIzSm5MM2RwYTJrdlZYTmxjanBFWVhacFpHZHZkR2hpWlhKbkwxUmxjM1ExT1Z4dVhHNWpiMlJsTEZ4dWEySmtMRnh1Y0hKbExGeHVjMkZ0Y0NCN1hHNGdJQ0FnWm05dWRDMW1ZVzFwYkhrNklHMXZibTl6Y0dGalpTd2djMlZ5YVdZN1hHNGdJQ0FnUUdsbUlDUnNaV2RoWTNsZmMzVndjRzl5ZEY5bWIzSmZhV1VnZTF4dUlDQWdJQ0FnSUNCZlptOXVkQzFtWVcxcGJIazZJQ2RqYjNWeWFXVnlJRzVsZHljc0lHMXZibTl6Y0dGalpUdGNiaUFnSUNCOVhHNGdJQ0FnWm05dWRDMXphWHBsT2lBeFpXMDdYRzU5WEc1Y2JpOHZJRWx0Y0hKdmRtVnpJSEpsWVdSaFltbHNhWFI1SUc5bUlIQnlaUzFtYjNKdFlYUjBaV1FnZEdWNGRDQnBiaUJoYkd3Z1luSnZkM05sY25OY2JseHVjSEpsSUh0Y2JpQWdJQ0IzYUdsMFpTMXpjR0ZqWlRvZ2NISmxPMXh1SUNBZ0lIZG9hWFJsTFhOd1lXTmxPaUJ3Y21VdGQzSmhjRHRjYmlBZ0lDQjNiM0prTFhkeVlYQTZJR0p5WldGckxYZHZjbVE3WEc1OVhHNWNiaTh2SUZObGRDQmpiMjV6YVhOMFpXNTBJSEYxYjNSbElIUjVjR1Z6TGx4dVhHNXhJSHRjYmlBZ0lDQnhkVzkwWlhNNklGd2lYRnd5TURGRFhDSWdYQ0pjWERJd01VUmNJaUJjSWx4Y01qQXhPRndpSUZ3aVhGd3lNREU1WENJN1hHNTlYRzVjYmk4dklERXVJRUZrWkhKbGMzTmxjeUJEVTFNZ2NYVnZkR1Z6SUc1dmRDQnpkWEJ3YjNKMFpXUWdhVzRnU1VVMkx6ZGNiaTh2SURJdUlFRmtaSEpsYzNObGN5QnhkVzkwWlNCd2NtOXdaWEowZVNCdWIzUWdjM1Z3Y0c5eWRHVmtJR2x1SUZNMFhHNWNiaTh2SURGY2JrQnBaaUFrYkdWbllXTjVYM04xY0hCdmNuUmZabTl5WDJsbElIdGNiaUFnSUNCeElIdGNiaUFnSUNBZ0lDQWdjWFZ2ZEdWek9pQnViMjVsTzF4dUlDQWdJSDFjYm4xY2JseHVMeThnTWx4dWNTQjdYRzRnSUNBZ0pqcGlaV1p2Y21Vc1hHNGdJQ0FnSmpwaFpuUmxjaUI3WEc0Z0lDQWdJQ0FnSUdOdmJuUmxiblE2SUNjbk8xeHVJQ0FnSUNBZ0lDQmpiMjUwWlc1ME9pQnViMjVsTzF4dUlDQWdJSDFjYm4xY2JseHVMeThnUVdSa2NtVnpjeUJwYm1OdmJuTnBjM1JsYm5RZ1lXNWtJSFpoY21saFlteGxJR1p2Ym5RZ2MybDZaU0JwYmlCaGJHd2dZbkp2ZDNObGNuTXVYRzVjYmk4cUlDOXpiV0ZzYkNCN1hHNGdJQ0FnWm05dWRDMXphWHBsT2lBNE1DVTdYRzU5SUNvdlhHNWNiaTh2SUZCeVpYWmxiblJ6SUhOMVlpQmhibVFnYzNWd0lHRm1abVZqZEdsdVp5QnNhVzVsTFdobGFXZG9kQ0JwYmlCaGJHd2dZbkp2ZDNObGNuTmNiaTh2SUdkcGMzUXVaMmwwYUhWaUxtTnZiUzgwTVRNNU16QmNibHh1YzNWaUxGeHVjM1Z3SUh0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SURjMUpUdGNiaUFnSUNCc2FXNWxMV2hsYVdkb2REb2dNRHRjYmlBZ0lDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYRzRnSUNBZ2RtVnlkR2xqWVd3dFlXeHBaMjQ2SUdKaGMyVnNhVzVsTzF4dWZWeHVYRzV6ZFhBZ2UxeHVJQ0FnSUhSdmNEb2dMVEF1TldWdE8xeHVmVnh1WEc1emRXSWdlMXh1SUNBZ0lHSnZkSFJ2YlRvZ0xUQXVNalZsYlR0Y2JuMWNibHh1THk4Z1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDFjYmk4dklFeHBjM1J6WEc0dkx5QTlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFZ4dVhHNHZMeUJCWkdSeVpYTnpaWE1nYldGeVoybHVjeUJ6WlhRZ1pHbG1abVZ5Wlc1MGJIa2dhVzRnU1VVMkx6ZGNia0JwWmlBa2JHVm5ZV041WDNOMWNIQnZjblJmWm05eVgybGxJSHRjYmlBZ0lDQmtiQ3hjYmlBZ0lDQnRaVzUxTEZ4dUlDQWdJRzlzTEZ4dUlDQWdJSFZzSUh0Y2JpQWdJQ0FnSUNBZ0x5OXRZWEpuYVc0NklERmxiU0F3TzF4dUlDQWdJSDFjYm4xY2JseHVRR2xtSUNSc1pXZGhZM2xmYzNWd2NHOXlkRjltYjNKZmFXVWdlMXh1SUNBZ0lHUmtJSHRjYmlBZ0lDQWdJQ0FnYldGeVoybHVPaUF3SURBZ01DQTBNSEI0TzF4dUlDQWdJSDFjYm4xY2JseHVMeThnUVdSa2NtVnpjMlZ6SUhCaFpHUnBibWR6SUhObGRDQmthV1ptWlhKbGJuUnNlU0JwYmlCSlJUWXZOMXh1UUdsbUlDUnNaV2RoWTNsZmMzVndjRzl5ZEY5bWIzSmZhV1VnZTF4dUlDQWdJRzFsYm5Vc1hHNGdJQ0FnYjJ3c1hHNGdJQ0FnZFd3Z2UxeHVJQ0FnSUNBZ0lDQXZMM0JoWkdScGJtYzZJREFnTUNBd0lEUXdjSGc3WEc0Z0lDQWdmVnh1ZlZ4dVhHNHZMeUJEYjNKeVpXTjBjeUJzYVhOMElHbHRZV2RsY3lCb1lXNWtiR1ZrSUdsdVkyOXljbVZqZEd4NUlHbHVJRWxGTjF4dVhHNXVZWFlnZTF4dUlDQWdJSFZzTEZ4dUlDQWdJRzlzSUh0Y2JpQWdJQ0FnSUNBZ1FHbG1JQ1JzWldkaFkzbGZjM1Z3Y0c5eWRGOW1iM0pmYVdVZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnTHk5c2FYTjBMWE4wZVd4bExXbHRZV2RsT2lCdWIyNWxPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1ZlZ4dVhHNHZMeUE5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBWeHVMeThnUlcxaVpXUmtaV1FnWTI5dWRHVnVkRnh1THk4Z1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDFjYmx4dUx5OGdNUzRnVW1WdGIzWmxjeUJpYjNKa1pYSWdkMmhsYmlCcGJuTnBaR1VnSjJFbklHVnNaVzFsYm5RZ2FXNGdTVVUyTHpjdk9DODVMQ0JHUmpOY2JpOHZJREl1SUVsdGNISnZkbVZ6SUdsdFlXZGxJSEYxWVd4cGRIa2dkMmhsYmlCelkyRnNaV1FnYVc0Z1NVVTNYRzR2THlBZ0lDQmpiMlJsTG1ac2FXTnJjaTVqYjIwdllteHZaeTh5TURBNEx6RXhMekV5TDI5dUxYVnBMWEYxWVd4cGRIa3RkR2hsTFd4cGRIUnNaUzEwYUdsdVozTXRZMnhwWlc1MExYTnBaR1V0YVcxaFoyVXRjbVZ6YVhwcGJtY3ZYRzVjYm1sdFp5QjdYRzRnSUNBZ1ltOXlaR1Z5T2lBd095QXZMeUF4WEc0Z0lDQWdRR2xtSUNSc1pXZGhZM2xmYzNWd2NHOXlkRjltYjNKZmFXVWdlMXh1SUNBZ0lDQWdJQ0F0YlhNdGFXNTBaWEp3YjJ4aGRHbHZiaTF0YjJSbE9pQmlhV04xWW1sak95QXZMeUF5WEc0Z0lDQWdmVnh1ZlZ4dVhHNHZMeUJEYjNKeVpXTjBjeUJ2ZG1WeVpteHZkeUJrYVhOd2JHRjVaV1FnYjJSa2JIa2dhVzRnU1VVNVhHNWNibk4yWnpwdWIzUW9Pbkp2YjNRcElIdGNiaUFnSUNCdmRtVnlabXh2ZHpvZ2FHbGtaR1Z1TzF4dWZWeHVYRzR2THlBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVnh1THk4Z1JtbG5kWEpsYzF4dUx5OGdQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQxY2JseHVMeThnUVdSa2NtVnpjMlZ6SUcxaGNtZHBiaUJ1YjNRZ2NISmxjMlZ1ZENCcGJpQkpSVFl2Tnk4NEx6a3NJRk0xTENCUE1URmNibHh1Wm1sbmRYSmxJSHRjYmlBZ0lDQnRZWEpuYVc0NklEQTdYRzU5WEc1Y2JpOHZJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVhHNHZMeUJHYjNKdGMxeHVMeThnUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMWNibHh1THk4Z1EyOXljbVZqZEhNZ2JXRnlaMmx1SUdScGMzQnNZWGxsWkNCdlpHUnNlU0JwYmlCSlJUWXZOMXh1UUdsbUlDUnNaV2RoWTNsZmMzVndjRzl5ZEY5bWIzSmZhV1VnZTF4dUlDQWdJR1p2Y20wZ2UxeHVJQ0FnSUNBZ0lDQnRZWEpuYVc0NklEQTdYRzRnSUNBZ2ZWeHVmVnh1WEc0dkx5QkVaV1pwYm1VZ1kyOXVjMmx6ZEdWdWRDQmliM0prWlhJc0lHMWhjbWRwYml3Z1lXNWtJSEJoWkdScGJtZGNibHh1Wm1sbGJHUnpaWFFnZTF4dUlDQWdJR0p2Y21SbGNqb2dNWEI0SUhOdmJHbGtJQ05qTUdNd1l6QTdYRzRnSUNBZ2JXRnlaMmx1T2lBd0lESndlRHRjYmlBZ0lDQndZV1JrYVc1bk9pQXdMak0xWlcwZ01DNDJNalZsYlNBd0xqYzFaVzA3WEc1OVhHNWNiaTh2SURFdUlFTnZjbkpsWTNSeklHTnZiRzl5SUc1dmRDQmlaV2x1WnlCcGJtaGxjbWwwWldRZ2FXNGdTVVUyTHpjdk9DODVYRzR2THlBeUxpQlNaVzF2ZG1VZ2NHRmtaR2x1WnlCemJ5QndaVzl3YkdVZ1lYSmxiaWQwSUdOaGRXZG9kQ0J2ZFhRZ2FXWWdkR2hsZVNCNlpYSnZJRzkxZENCbWFXVnNaSE5sZEhNdVhHNHZMeUF6TGlCRGIzSnlaV04wY3lCMFpYaDBJRzV2ZENCM2NtRndjR2x1WnlCcGJpQkdSak5jYmk4dklEUXVJRU52Y25KbFkzUnpJR0ZzYVdkdWJXVnVkQ0JrYVhOd2JHRjVaV1FnYjJSa2JIa2dhVzRnU1VVMkx6ZGNibHh1YkdWblpXNWtJSHRjYmlBZ0lDQmliM0prWlhJNklEQTdJQzh2SURGY2JpQWdJQ0J3WVdSa2FXNW5PaUF3T3lBdkx5QXlYRzRnSUNBZ2QyaHBkR1V0YzNCaFkyVTZJRzV2Y20xaGJEc2dMeThnTTF4dUlDQWdJRUJwWmlBa2JHVm5ZV041WDNOMWNIQnZjblJmWm05eVgybGxJSHRjYmlBZ0lDQWdJQ0FnS20xaGNtZHBiaTFzWldaME9pQXROM0I0T3lBdkx5QTBYRzRnSUNBZ2ZWeHVmVnh1WEc0dkx5QXhMaUJEYjNKeVpXTjBJR1p2Ym5RZ1ptRnRhV3g1SUc1dmRDQmlaV2x1WnlCcGJtaGxjbWwwWldRZ2FXNGdZV3hzSUdKeWIzZHpaWEp6TGx4dUx5OGdNaTRnUTI5eWNtVmpkSE1nWm05dWRDQnphWHBsSUc1dmRDQmlaV2x1WnlCcGJtaGxjbWwwWldRZ2FXNGdZV3hzSUdKeWIzZHpaWEp6WEc0dkx5QXpMaUJCWkdSeVpYTnpaWE1nYldGeVoybHVjeUJ6WlhRZ1pHbG1abVZ5Wlc1MGJIa2dhVzRnU1VVMkx6Y3NJRVpHTXlzc0lGTTFMQ0JEYUhKdmJXVmNiaTh2SURRdUlFbHRjSEp2ZG1WeklHRndjR1ZoY21GdVkyVWdZVzVrSUdOdmJuTnBjM1JsYm1ONUlHbHVJR0ZzYkNCaWNtOTNjMlZ5YzF4dVhHNWlkWFIwYjI0c1hHNXBibkIxZEN4Y2JuTmxiR1ZqZEN4Y2JuUmxlSFJoY21WaElIdGNiaUFnSUNCbWIyNTBMV1poYldsc2VUb2dhVzVvWlhKcGREc2dMeThnTVZ4dUlDQWdJR1p2Ym5RdGMybDZaVG9nTVRBd0pUc2dMeThnTWx4dUlDQWdJRzFoY21kcGJqb2dNRHNnTHk4Z00xeHVJQ0FnSUhabGNuUnBZMkZzTFdGc2FXZHVPaUJpWVhObGJHbHVaVHNnTHk4Z05GeHVJQ0FnSUVCcFppQWtiR1ZuWVdONVgzTjFjSEJ2Y25SZlptOXlYMmxsSUh0Y2JpQWdJQ0FnSUNBZ0tuWmxjblJwWTJGc0xXRnNhV2R1T2lCdGFXUmtiR1U3SUM4dklEUmNiaUFnSUNCOVhHNTlYRzVjYmk4dklFRmtaSEpsYzNObGN5QkdSak12TkNCelpYUjBhVzVuSUd4cGJtVXRhR1ZwWjJoMElHOXVJQ2RwYm5CMWRDY2dkWE5wYm1jZ0lXbHRjRzl5ZEdGdWRDQnBiaUIwYUdVZ1ZVRWdjM1I1YkdWemFHVmxkRnh1WEc1aWRYUjBiMjRzSUdsdWNIVjBJSHRjYmlBZ0lDQnNhVzVsTFdobGFXZG9kRG9nYm05eWJXRnNPMXh1ZlZ4dVhHNHZMeUJCWkdSeVpYTnpJR2x1WTI5dWMybHpkR1Z1ZENCZ2RHVjRkQzEwY21GdWMyWnZjbTFnSUdsdWFHVnlhWFJoYm1ObElHWnZjaUJnWW5WMGRHOXVZQ0JoYm1RZ1lITmxiR1ZqZEdBdVhHNHZMeUJCYkd3Z2IzUm9aWElnWm05eWJTQmpiMjUwY205c0lHVnNaVzFsYm5SeklHUnZJRzV2ZENCcGJtaGxjbWwwSUdCMFpYaDBMWFJ5WVc1elptOXliV0FnZG1Gc2RXVnpMbHh1THk4Z1EyOXljbVZqZENCZ1luVjBkRzl1WUNCemRIbHNaU0JwYm1obGNtbDBZVzVqWlNCcGJpQkRhSEp2YldVc0lGTmhabUZ5YVNBMUt5d2dZVzVrSUVsRklEZ3JMbHh1THk4Z1EyOXljbVZqZENCZ2MyVnNaV04wWUNCemRIbHNaU0JwYm1obGNtbDBZVzVqWlNCcGJpQkdhWEpsWm05NElEUXJJR0Z1WkNCUGNHVnlZUzVjYmx4dVluVjBkRzl1TEZ4dWMyVnNaV04wSUh0Y2JpQWdJQ0IwWlhoMExYUnlZVzV6Wm05eWJUb2dibTl1WlR0Y2JuMWNibHh1THk4Z01TNGdRWFp2YVdRZ2RHaGxJRmRsWWt0cGRDQmlkV2NnYVc0Z1FXNWtjbTlwWkNBMExqQXVLaUIzYUdWeVpTQW9NaWtnWkdWemRISnZlWE1nYm1GMGFYWmxJR0JoZFdScGIyQmNiaTh2SUNBZ0lHRnVaQ0JnZG1sa1pXOWdJR052Ym5SeWIyeHpYRzR2THlBeUxpQkRiM0p5WldOMGN5QnBibUZpYVd4cGRIa2dkRzhnYzNSNWJHVWdZMnhwWTJ0aFlteGxJQ2RwYm5CMWRDY2dkSGx3WlhNZ2FXNGdhVTlUWEc0dkx5QXpMaUJKYlhCeWIzWmxjeUIxYzJGaWFXeHBkSGtnWVc1a0lHTnZibk5wYzNSbGJtTjVJRzltSUdOMWNuTnZjaUJ6ZEhsc1pTQmlaWFIzWldWdUlHbHRZV2RsTFhSNWNHVmNiaTh2SUNBZ0lDZHBibkIxZENjZ1lXNWtJRzkwYUdWeWMxeHVMeThnTkM0Z1VtVnRiM1psY3lCcGJtNWxjaUJ6Y0dGamFXNW5JR2x1SUVsRk55QjNhWFJvYjNWMElHRm1abVZqZEdsdVp5QnViM0p0WVd3Z2RHVjRkQ0JwYm5CMWRITmNiaTh2SUNBZ0lFdHViM2R1SUdsemMzVmxPaUJwYm01bGNpQnpjR0ZqYVc1bklISmxiV0ZwYm5NZ2FXNGdTVVUyWEc1Y2JtSjFkSFJ2Yml4Y2JtaDBiV3dnYVc1d2RYUmJkSGx3WlQxY0ltSjFkSFJ2Ymx3aVhTd2dMeThnTVZ4dWFXNXdkWFJiZEhsd1pUMWNJbkpsYzJWMFhDSmRMRnh1YVc1d2RYUmJkSGx3WlQxY0luTjFZbTFwZEZ3aVhTQjdYRzRnSUNBZ0xYZGxZbXRwZEMxaGNIQmxZWEpoYm1ObE9pQmlkWFIwYjI0N0lDOHZJREpjYmlBZ0lDQmpkWEp6YjNJNklIQnZhVzUwWlhJN0lDOHZJRE5jYmlBZ0lDQkFhV1lnSkd4bFoyRmplVjl6ZFhCd2IzSjBYMlp2Y2w5cFpTQjdYRzRnSUNBZ0lDQWdJQ3B2ZG1WeVpteHZkem9nZG1semFXSnNaVHNnSUM4dklEUmNiaUFnSUNCOVhHNTlYRzVjYmk4dklGSmxMWE5sZENCa1pXWmhkV3gwSUdOMWNuTnZjaUJtYjNJZ1pHbHpZV0pzWldRZ1pXeGxiV1Z1ZEhOY2JseHVZblYwZEc5dVcyUnBjMkZpYkdWa1hTeGNibWx1Y0hWMFcyUnBjMkZpYkdWa1hTQjdYRzRnSUNBZ1kzVnljMjl5T2lCa1pXWmhkV3gwTzF4dWZWeHVYRzR2THlCU1pXMXZkbVZ6SUdsdWJtVnlJSEJoWkdScGJtY2dZVzVrSUdKdmNtUmxjaUJwYmlCR1JqTXJYRzR2THlCM2QzY3VjMmwwWlhCbGJpNWpiMjB2WW14dlp5OHlNREE0THpBMUx6RTBMM1JvWlMxa1pYWnBiSE10YVc0dGRHaGxMV1JsZEdGcGJITXRabWw0YVc1bkxXUnZhbTl6TFhSdmIyeGlZWEl0WW5WMGRHOXVjeTljYmx4dVluVjBkRzl1TENCcGJuQjFkQ0I3WEc0Z0lDQWdKam82TFcxdmVpMW1iMk4xY3kxcGJtNWxjaUI3WEc0Z0lDQWdJQ0FnSUdKdmNtUmxjam9nTUR0Y2JpQWdJQ0FnSUNBZ2NHRmtaR2x1WnpvZ01EdGNiaUFnSUNCOVhHNTlYRzVjYmk4dklERXVJRkpsYlc5MlpYTWdaR1ZtWVhWc2RDQjJaWEowYVdOaGJDQnpZM0p2Ykd4aVlYSWdhVzRnU1VVMkx6Y3ZPQzg1WEc0dkx5QXlMaUJKYlhCeWIzWmxjeUJ5WldGa1lXSnBiR2wwZVNCaGJtUWdZV3hwWjI1dFpXNTBJR2x1SUdGc2JDQmljbTkzYzJWeWMxeHVYRzUwWlhoMFlYSmxZU0I3WEc0Z0lDQWdiM1psY21ac2IzYzZJR0YxZEc4N0lDOHZJREZjYmlBZ0lDQjJaWEowYVdOaGJDMWhiR2xuYmpvZ2RHOXdPeUF2THlBeVhHNTlYRzVjYmk4dklEMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5WEc0dkx5QlVZV0pzWlhOY2JpOHZJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVhHNWNiaTh2SUZKbGJXOTJaU0J0YjNOMElITndZV05wYm1jZ1ltVjBkMlZsYmlCMFlXSnNaU0JqWld4c2MxeHVYRzUwWVdKc1pTQjdYRzRnSUNBZ1ltOXlaR1Z5TFdOdmJHeGhjSE5sT2lCamIyeHNZWEJ6WlR0Y2JpQWdJQ0JpYjNKa1pYSXRjM0JoWTJsdVp6b2dNRHRjYm4xY2JseHVhVzV3ZFhRZ2UxeHVJQ0FnSUM4dklERXVJRUZrWkhKbGMzTmxjeUJoY0hCbFlYSmhibU5sSUhObGRDQjBieUJ6WldGeVkyaG1hV1ZzWkNCcGJpQlROU3dnUTJoeWIyMWxYRzRnSUNBZ0x5OGdNaTRnUVdSa2NtVnpjMlZ6SUdKdmVDMXphWHBwYm1jZ2MyVjBJSFJ2SUdKdmNtUmxjaTFpYjNnZ2FXNGdVelVzSUVOb2NtOXRaU0FvYVc1amJIVmtaU0F0Ylc5NklIUnZJR1oxZEhWeVpTMXdjbTl2WmlsY2JpQWdJQ0FtVzNSNWNHVTlYQ0p6WldGeVkyaGNJbDBnZTF4dUlDQWdJQ0FnSUNBdGQyVmlhMmwwTFdGd2NHVmhjbUZ1WTJVNklIUmxlSFJtYVdWc1pEc2dMeThnTVZ4dUlDQWdJQ0FnSUNBdGJXOTZMV0p2ZUMxemFYcHBibWM2SUdOdmJuUmxiblF0WW05NE8xeHVJQ0FnSUNBZ0lDQXRkMlZpYTJsMExXSnZlQzF6YVhwcGJtYzZJR052Ym5SbGJuUXRZbTk0T3lBdkx5QXlYRzRnSUNBZ0lDQWdJR0p2ZUMxemFYcHBibWM2SUdOdmJuUmxiblF0WW05NE8xeHVYRzRnSUNBZ1hIUXZMeUJTWlcxdmRtVWdhVzV1WlhJZ2NHRmtaR2x1WnlCaGJtUWdjMlZoY21Ob0lHTmhibU5sYkNCaWRYUjBiMjRnYVc0Z1UyRm1ZWEpwSURVZ1lXNWtJRU5vY205dFpWeHVJQ0FnSUNBZ0lDQXZMeUJ2YmlCUFV5QllMbHh1SUNBZ0lDQWdJQ0FtT2pvdGQyVmlhMmwwTFhObFlYSmphQzFqWVc1alpXd3RZblYwZEc5dUxGeHVJQ0FnSUNBZ0lDQW1Pam90ZDJWaWEybDBMWE5sWVhKamFDMWtaV052Y21GMGFXOXVJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDMTNaV0pyYVhRdFlYQndaV0Z5WVc1alpUb2dibTl1WlR0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JseHVJQ0FnSUM4dklERXVJRUZrWkhKbGMzTWdZbTk0SUhOcGVtbHVaeUJ6WlhRZ2RHOGdZR052Ym5SbGJuUXRZbTk0WUNCcGJpQkpSU0E0THprdk1UQXVYRzRnSUNBZ0x5OGdNaTRnVW1WdGIzWmxJR1Y0WTJWemN5QndZV1JrYVc1bklHbHVJRWxGSURndk9TOHhNQzVjYmlBZ0lDQXZMeUF6TGlCU1pXMXZkbVZ6SUdWNFkyVnpjeUJ3WVdSa2FXNW5JR2x1SUVsRk4xeHVJQ0FnSUM4dklDQWdJRXR1YjNkdUlHbHpjM1ZsT2lCbGVHTmxjM01nY0dGa1pHbHVaeUJ5WlcxaGFXNXpJR2x1SUVsRk5seHVJQ0FnSUNaYmRIbHdaVDFjSW1Ob1pXTnJZbTk0WENKZExGeHVJQ0FnSUNaYmRIbHdaVDFjSW5KaFpHbHZYQ0pkSUh0Y2JpQWdJQ0JjZEdKdmVDMXphWHBwYm1jNklHSnZjbVJsY2kxaWIzZzdJQzh2SURGY2JpQWdJQ0JjZEhCaFpHUnBibWM2SURBN0lDOHZJREpjYmlBZ0lDQmNkRUJwWmlBa2JHVm5ZV041WDNOMWNIQnZjblJmWm05eVgybGxJSHRjYmlBZ0lDQWdJQ0FnWEhRcWFHVnBaMmgwT2lBeE0zQjRPeUF2THlBelhHNGdJQ0FnSUNBZ0lGeDBLbmRwWkhSb09pQXhNM0I0T3lBdkx5QXpYRzRnSUNBZ1hIUjlYRzRnSUNBZ2ZWeHVmVnh1SWl3aUx5OGdWbUZ5YzF4dUpHSmhjMlV0Wm05dWRDMXphWHBsT2lBeE5uQjRYRzRrWW1GelpTMXNhVzVsTFdobGFXZG9kRG9nTVM0MVhHNWNiaTh2SUZSNWNHVm1ZV05sYzF4dUpITmhibk02SUU1bGQzTWdRM2xqYkdVc0lITmhibk10YzJWeWFXWmNiaVJ6WlhKcFpqb2dVR3hoZVdaaGFYSWdSR2x6Y0d4aGVTd2djMlZ5YVdaY2JseHVMeThnUm05dWRDQjNaV2xuYUhSelhHNGtlR3hwWjJoME9pQXlNREJjYmlSc2FXZG9kRG9nTXpBd1hHNGtibTl5YldGc09pQTBNREJjYmlSelpXMXBZbTlzWkRvZ05qQXdYRzRrWW05c1pEb2dOekF3WEc1Y2JpOHZJRXhwYm1VZ2FHVnBaMmgwSUdaMWJtTjBhVzl1WEc1QVpuVnVZM1JwYjI0Z2JHbHVaUzFvWldsbmFIUW9LVnh1SUNCQWNtVjBkWEp1SUNSaVlYTmxMV1p2Ym5RdGMybDZaU0FxSUNSaVlYTmxMV3hwYm1VdGFHVnBaMmgwWEc1Y2JpOHZJRlpoY2lCdGRYTjBJR0psSUhOd1pXTnBabWxsWkNCaFpuUmxjaUJ5WlhSMWNtNXBibWNnZEdobElHeHBibVV0YUdWcFoyaDBJR1oxYm1OMGFXOXVYRzRrWTJGc0xXeHBibVV0YUdWcFoyaDBPaUJzYVc1bExXaGxhV2RvZENncFhHNWNiaTh2SUUxcGVHbHVjMXh1UFhabGNuUXRiV0Z5WjJsdUtDUjBiM0E2SURFc0lDUmliM1IwYjIwNklERXBYRzRnSUcxaGNtZHBiaTEwYjNBNklDUmpZV3d0YkdsdVpTMW9aV2xuYUhRZ0tpQWtkRzl3WEc0Z0lHMWhjbWRwYmkxaWIzUjBiMjA2SUNSallXd3RiR2x1WlMxb1pXbG5hSFFnS2lBa1ltOTBkRzl0WEc1Y2JqMTJaWEowTFhCaFpHUnBibWNvSkhSdmNEb2dNU3dnSkdKdmRIUnZiVG9nTVNsY2JpQWdjR0ZrWkdsdVp5MTBiM0E2SUNSallXd3RiR2x1WlMxb1pXbG5hSFFnS2lBa2RHOXdYRzRnSUhCaFpHUnBibWN0WW05MGRHOXRPaUFrWTJGc0xXeHBibVV0YUdWcFoyaDBJQ29nSkdKdmRIUnZiVnh1WEc1Y2JtaDBiV3hjYmlBZ1ptOXVkQzF6YVhwbE9pQWtZbUZ6WlMxbWIyNTBMWE5wZW1WY2JpQWdMVzF2ZWkxdmMzZ3RabTl1ZEMxemJXOXZkR2hwYm1jNklHZHlZWGx6WTJGc1pWeHVJQ0F0ZDJWaWEybDBMV1p2Ym5RdGMyMXZiM1JvYVc1bk9pQmhiblJwWVd4cFlYTmxaRnh1WEc1aWIyUjVYRzRnSUdOdmJHOXlPaUFrWTJoaGNtTnZZV3hjYmlBZ2JHbHVaUzFvWldsbmFIUTZJREV1TlZ4dUlDQm1iMjUwTFdaaGJXbHNlVG9nSkhOaGJuTmNiaUFnTHk5aVlXTnJaM0p2ZFc1a0xXbHRZV2RsT2lCc2FXNWxZWEl0WjNKaFpHbGxiblFvZEhKaGJuTndZWEpsYm5Rc0lIUnlZVzV6Y0dGeVpXNTBJR3hwYm1VdGFHVnBaMmgwS0NrZ0xTQXhjSGdzSUNSbmNtVmxiaUF4Y0hnZ0xDQjBjbUZ1YzNCaGNtVnVkQ2xjYmlBZ1ltRmphMmR5YjNWdVpDMXphWHBsT2lCaGRYUnZJR3hwYm1VdGFHVnBaMmgwS0NsY2JpQWdiV0Z5WjJsdU9pQXdYRzVjYmx4dUx5OWJZMnhoYzNNcVBTZGZYMmhsWVdSc2FXNWxKMTFjYmx4dVhHNHZMeUJWYzJWa0lHbHVJR0Z5ZEdsamJHVWdhR1ZoWkdWeWN5QnBiaUIwYUdVZ0xrMWhhVzRnWTI5c2RXMXVjMXh1VzJOc1lYTnpLajBuWDE5b1pXRmthVzVuSjExY2JpQWdZMjlzYjNJNklDUm5jbVZsYmx4dUlDQm1iMjUwTFdaaGJXbHNlVG9nSkhObGNtbG1YRzRnSUdadmJuUXRjMmw2WlRvZ01pNDFjbVZ0WEc0Z0lHWnZiblF0ZDJWcFoyaDBPaUFrYm05eWJXRnNYRzRnSUd4cGJtVXRhR1ZwWjJoME9pQXhYRzRnSUcxaGNtZHBiaTFpYjNSMGIyMDZJREp5WlcxY2JseHVQWE4wWVc1a1lYSmtMV2hsWVdScGJtY29LVnh1SUNCamIyeHZjam9nSkdkeVpXVnVYRzRnSUdadmJuUXRabUZ0YVd4NU9pQWtjMlZ5YVdaY2JpQWdabTl1ZEMxemFYcGxPaUF5Y21WdFhHNGdJR1p2Ym5RdGQyVnBaMmgwT2lBa2JtOXliV0ZzWEc0Z0lHeHBibVV0YUdWcFoyaDBPaUF4WEc1Y2JseHVMeThnUm05MWJtUWdhVzRnZEdobElFMWhhVzRnUW14dlp5QlFiM04wYzF4dVBXMXBibTl5TFdobFlXUnBibWNvS1Z4dUlDQmpiMnh2Y2pvZ0pHNXBaMmgwWjNKbFpXNWNiaUFnWm05dWRDMW1ZVzFwYkhrNklDUnpaWEpwWmx4dUlDQm1iMjUwTFhOcGVtVTZJREV1TWpWeVpXMWNiaUFnWm05dWRDMTNaV2xuYUhRNklDUmliMnhrWEc0Z0lHeHBibVV0YUdWcFoyaDBPaUF4WEc0Z0lIUmxlSFF0ZEhKaGJuTm1iM0p0T2lCMWNIQmxjbU5oYzJWY2JpQWdLM1psY25RdGJXRnlaMmx1S0RFdU5Td3dLVnh1WEc1Y2JpOHZJRlZ6WldRZ2FXNGdZWEowYVdOc1pTQm9aV0ZrWlhKeklHbHVJSFJvWlNBdVRXRnBiaUJqYjJ4MWJXNXpYRzQ5YzIxaGJHd3RhR1ZoWkdsdVp5Z3BYRzRnSUdOdmJHOXlPaUFrWjNKbFpXNWNiaUFnWm05dWRDMW1ZVzFwYkhrNklDUnpaWEpwWmx4dUlDQm1iMjUwTFhOcGVtVTZJREV1TXpjMWNtVnRYRzRnSUdadmJuUXRkMlZwWjJoME9pQWtibTl5YldGc1hHNGdJR3hwYm1VdGFHVnBaMmgwT2lBeFhHNWNibHh1THk4Z1JtOTFibVFnYVc0Z2RHaGxJRTFoYVc0Z1FteHZaeUJRYjNOMGMxeHVQV0pzYjJOcmNYVnZkR1VvS1Z4dUlDQmpiMnh2Y2pvZ0pHZHlaV1Z1WEc0Z0lHWnZiblF0Wm1GdGFXeDVPaUFrYzJWeWFXWmNiaUFnWm05dWRDMXphWHBsT2lBeExqVnlaVzFjYmlBZ1ptOXVkQzF6ZEhsc1pUb2dhWFJoYkdsalhHNGdJR1p2Ym5RdGQyVnBaMmgwT2lBa1ltOXNaRnh1SUNBcmRtVnlkQzF0WVhKbmFXNG9NUzQxTERFdU5TbGNibHh1WEc0dkwybHVjSFYwVzNSNWNHVTlYQ0p6ZFdKdGFYUmNJbDFjYmx4dVcyTnNZWE56S2oxZlgySjFkSFJ2Ymwwc1hHNXBibkIxZEZ0MGVYQmxQVndpWW5WMGRHOXVYQ0pkTEZ4dWFXNXdkWFJiZEhsd1pUMWNJbkpsYzJWMFhDSmRYRzRnSUdKdmNtUmxjam9nTVhCNElITnZiR2xrSUNSbmNtVmxibHh1SUNCa2FYTndiR0Y1T2lCcGJteHBibVV0WW14dlkydGNiaUFnWm05dWRDMW1ZVzFwYkhrNklDUnpaWEpwWmx4dUlDQm1iMjUwTFhOcGVtVTZJREV1TW5KbGJWeHVJQ0JtYjI1MExYTjBlV3hsT2lCcGRHRnNhV05jYmlBZ2RHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeVhHNGdJSEJoWkdScGJtYzZJQzQzTlhKbGJTQXpjbVZ0WEc0Z0lIUmxlSFF0WkdWamIzSmhkR2x2YmpvZ2JtOXVaVnh1SUNBdktrbDBaVzF6SUdadmNpQjBjbUZ1YzJsMGFXOXVYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUhSeVlXNXpjR0Z5Wlc1MFhHNGdJR052Ykc5eU9pQWtaM0psWlc1Y2JpQWdMeXBVY21GdWMybDBhVzl1SUhObGRIUnBibWR6WEc0Z0lIUnlZVzV6YVhScGIyNDZJR0ZzYkNBdU1uTWdaV0Z6WlZ4dVhHNGdJQ1k2YUc5MlpYSmNiaUFnSUNBdktsUm9aWE5sSUhkcGJHd2dkSEpoYm5OcGRHbHZiaUJ2YmlCb2IzWmxjbHh1SUNBZ0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDUm5jbVZsYmx4dUlDQWdJR052Ykc5eU9pQWtkMmhwZEdWY2JseHVYRzR2THlCcGJpQndjbTluY21WemMxeHVYRzR2THlCTmFYaHBibk5jYmoxaWRYUjBiMjRvSkdKaFkydG5jbTkxYm1Rc0lDUmpiMnh2Y2l3Z0pHSnZjbVJsY2kxamIyeHZjaWxjYmlBZ1ltOXlaR1Z5T2lBeGNIZ2djMjlzYVdRZ0pHSnZjbVJsY2kxamIyeHZjbHh1SUNCbWIyNTBMV1poYldsc2VUb2dKSE5sY21sbVhHNGdJR1p2Ym5RdGMybDZaVG9nTVM0eWNtVnRYRzRnSUdadmJuUXRjM1I1YkdVNklHbDBZV3hwWTF4dUlDQndZV1JrYVc1bk9pQXVOWEpsYlNBeGNtVnRYRzRnSUhSbGVIUXRaR1ZqYjNKaGRHbHZiam9nYm05dVpWeHVJQ0F2S2tsMFpXMXpJR1p2Y2lCMGNtRnVjMmwwYVc5dVhHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJSFJ5WVc1emNHRnlaVzUwWEc0Z0lHTnZiRzl5T2lBa1kyOXNiM0pjYmlBZ0x5cFVjbUZ1YzJsMGFXOXVJSE5sZEhScGJtZHpYRzRnSUhSeVlXNXphWFJwYjI0NklHRnNiQ0F1TW5NZ1pXRnpaVnh1SUNBbU9taHZkbVZ5WEc0Z0lDQWdMeXBVYUdWelpTQjNhV3hzSUhSeVlXNXphWFJwYjI0Z2IyNGdhRzkyWlhKY2JpQWdJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFrWjNKbFpXNWNiaUFnSUNCamIyeHZjam9nSkdOdmJHOXlYRzRpTENJdkx5QlRhWFJsSUdOdmJHOXlJSEJoYkdWMGRHVmNiaVJuY21WbGJqb2dJekkyTjJVMk5GeHVKRzVwWjJoMFozSmxaVzQ2SUNNME5UVTJOVEpjYmlSemJHRjBaVG9nSTJWa1pXVmxZbHh1WEc0dkx5QTFNQ0J6YUdGa1pYTWdiMllnWjNKaGVWeHVKSGRvYVhSbE9pQWpabVptWEc0a2MzUmxZVzA2SUNObU9HWTRaamhjYmlSamJHOTFaRG9nSTJVMVpUWmxOMXh1SkdkeVlYQm9hWFJsT2lBalkyTmpYRzRrYzNSdmJtVTZJQ00zWmpkbE4yVmNiaVJzWldGa09pQWpObVUyWWpaalhHNGtZMmhoY21OdllXdzZJQ016TXpOY2JpUmliR0ZqYXpvZ0l6QXdNRnh1WEc0dkx5Qk9ZWFpwWjJGMGFXOXVJR052Ykc5eWMxeHVMeThnSkc1aGRpMXNhVzVyT2x4dUx5OGdKRzVoZGkxc2FXNXJMV04xY25KbGJuUXRjR0ZuWlRwY2JpOHZJQ1J1WVhZdGJHbHVheTFvYjNabGNqcGNiaVJ0YjJKcGJHVXRibUYyTFdKMGJqb2dKSE5zWVhSbFhHNWNiaTh2UW05eVpHVnlJRU52Ykc5eVhHNGtZbTl5WkdWeVEyOXNiM0k2SUNSbmNtRndhR2wwWlZ4dVhHNHZMeUJUYVhSbElHSmhjMlVnZEdWNGRDQmpiMnh2Y25OY2JpUnphWFJsTFhSbGVIUXRZMjlzYjNJNklDUmphR0Z5WTI5aGJGeHVKSE5wZEdVdGRHVjRkQzFqYjJ4dmNpMXNhVzVyT2lBa1ozSmxaVzVjYmlSemFYUmxMWFJsZUhRdFkyOXNiM0l0YkdsdWF5MW9iM1psY2pvZ0l6UTFOVFkxTWx4dVhHNHZMeUJDZFhSMGIyNXpYRzR2THlBa1luVjBkRzl1TFdOdmJHOXlPbHh1THk4Z0pHSjFkSFJ2YmkxaVp6cGNiaTh2SUNSaWRYUjBiMjR0YUc5MlpYSXRZMjlzYjNJNlhHNHZMeUFrWW5WMGRHOXVMV2h2ZG1WeUxXSm5PbHh1WEc0dkx5QkdiMjkwWlhJZ1kyOXNiM0p6WEc0a1ptOXZkR1Z5TFhSbGVIUTZJQ1J1YVdkb2RHZHlaV1Z1WEc0a1ptOXZkR1Z5TFhSbGVIUXRiR2x1YXpvZ0pHNXBaMmgwWjNKbFpXNWNiaVJtYjI5MFpYSXRkR1Y0ZEMxc2FXNXJMV2h2ZG1WeU9pQWtaM0psWlc1Y2JseHVMeThnVTI5amFXRnNJR052Ykc5eWMxeHVMeThnSkhOdlkybGhiQzFwWTI5dUxXTnZiRzl5T2x4dUx5OGdKSE52WTJsaGJDMXBZMjl1TFdKbkxXTnZiRzl5T2x4dUx5OGdKSE52WTJsaGJDMXBZMjl1TFdOdmJHOXlMV2h2ZG1WeU9seHVJaXdpTHk4Z2FIUjBjRG92TDJOemMyMXZhbTh1WTI5dEwyeGhkR1Z6ZEY5dVpYZGZZMnhsWVhKbWFYaGZjMjlmWm1GeUwxeHVMbU5zWldGeVptbDRPbUZtZEdWeVhHNGdJR052Ym5SbGJuUTZJRndpWENKY2JpQWdaR2x6Y0d4aGVUb2dkR0ZpYkdWY2JpQWdZMnhsWVhJNklHSnZkR2hjYmlJc0lpOHZJRkpGVTFCUFRsTkpWa1VnU1UxQlIwVlRYRzVwYldjc0lHbG1jbUZ0WlN3Z1pXMWlaV1JjYmlBZ2QybGtkR2c2SURFd01DVmNiaUlzSWk1amIyNTBZV2x1WlhKY2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dJMlptWmx4dUlDQmliM0prWlhJdGJHVm1kRG9nTVhCNElITnZiR2xrSUNSaWIzSmtaWEpEYjJ4dmNseHVJQ0JpYjNKa1pYSXRjbWxuYUhRNklERndlQ0J6YjJ4cFpDQWtZbTl5WkdWeVEyOXNiM0pjYmlBZ2JXRnlaMmx1T2lBd0lHRjFkRzljYmlBZ2JXRjRMWGRwWkhSb09pQXhNakF3Y0hoY2JseHVYRzViWTJ4aGMzTXFQU2RqYjJ3dEoxMWNiaUFnWkdsemNHeGhlVG9nZEdGaWJHVXRZMlZzYkZ4dUlDQjJaWEowYVdOaGJDMWhiR2xuYmpvZ2JXbGtaR3hsWEc1Y2JpQWdLMjFsWkdsaEtGd2lQRDEwWVdKc1pYUmNJaWxjYmlBZ0lDQmthWE53YkdGNU9pQnBibXhwYm1VdFlteHZZMnRjYmlBZ0lDQjBaWGgwTFdGc2FXZHVPaUJqWlc1MFpYSmNibHh1THk4eUlHTnZiSFZ0Ym5NZ2QybGtaVnh1THk4Z1ZHaHBjeUJwY3lCMWMyVmtJR2x1SUhSb1pTQm1iMjkwWlhJZ1ptOXlJRzVoY25KdmQyVnlJR052YkhWdGJuTWdiMllnYkdsdWEzTmNiaTVqYjJ3dE1pMHhNbHh1SUNCM2FXUjBhRG9nTWk4eE1pQXFJREV3TUNWY2JseHVJQ0FyYldWa2FXRW9YQ0k4UFhSaFlteGxkRndpS1Z4dUlDQWdJSGRwWkhSb09pQXhNREFsWEc1Y2JpOHZNeUJqYjJ4MWJXNXpJSGRwWkdWY2JpOHZJRlJvYVhNZ2FYTWdkWE5sWkNCcGJpQjBhR1VnWm05dmRHVnlJR1p2Y2lCbVlYUjBaWElnWTI5c2RXMXVjeUJ2WmlCc2IyNW5aWEl0ZEdsMGJHVmtJR3hwYm10elhHNHVZMjlzTFRNdE1USmNiaUFnZDJsa2RHZzZJRE12TVRJZ0tpQXhNREFsWEc1Y2JpQWdLMjFsWkdsaEtGd2lQRDEwWVdKc1pYUmNJaWxjYmlBZ0lDQjNhV1IwYURvZ01UQXdKVnh1WEc0dkx5QTBJR052YkhWdGJuTWdkMmxrWlM1Y2JpOHZJRlJvYVhNZ2FYTWdkWE5sWkNCcGJpQjBhR1VnVEdWaFpHVnljMmhwY0NCd1lXZGxMbHh1TG1OdmJDMDBMVEV5WEc0Z0lIZHBaSFJvT2lBMEx6RXlJQ29nTVRBd0pWeHVYRzRnSUN0dFpXUnBZU2hjSWp3OWRHRmliR1YwWENJcFhHNGdJQ0FnZDJsa2RHZzZJREV3TUNWY2JseHVYRzR2THlBMUlHTnZiSFZ0Ym5NZ2QybGtaUzVjYmk4dklGUm9hWE1nYVhNZ2RYTmxaQ0JwYmlCdGIzTjBJRzltSUhSb1pTQmlZVzV1WlhKekxseHVMeThnU1hRZ2FYTWdZV3h6YnlCMWMyVmtJR2x1SUhSb1pTQk5ZV2x1SUcxdlpIVnNaU0JoY21WaElIUm9ZWFFnYVc1amJIVmtaWE1nZEdobElITnBaR1ZpWVhJdVhHNHVZMjlzTFRVdE1USmNiaUFnZDJsa2RHZzZJRFV2TVRJZ0tpQXhNREFsWEc1Y2JpQWdLMjFsWkdsaEtGd2lQRDEwWVdKc1pYUmNJaWxjYmlBZ0lDQjNhV1IwYURvZ01UQXdKVnh1WEc1Y2JpOHZJRFlnWTI5c2RXMXVjeUIzYVdSbExseHVMeThnVkdocGN5QjNhV3hzSUhOd1lXNGdhR0ZzWmlCMGFHVWdZWFpoYVd4aFlteGxJSGRwWkhSb1hHNHZMeUJVYUdVZ1EyRnlaQ0JOYjJSMWJHVWdiMjRnZEdobElHaHZiV1Z3WVdkbElIVnpaWE1nZEdocGMxeHVMbU52YkMwMkxURXlYRzRnSUhkcFpIUm9PaUEyTHpFeUlDb2dNVEF3SlZ4dVhHNGdJQ3R0WldScFlTaGNJanc5ZEdGaWJHVjBYQ0lwWEc0Z0lDQWdkMmxrZEdnNklERXdNQ1ZjYmx4dVhHNHZMeUEzSUdOdmJIVnRibk1nZDJsa1pTNWNiaTh2SUZSb2FYTWdhWE1nZFhObFpDQnBiaUJ0YjNOMElHOW1JSFJvWlNCaVlXNXVaWEp6TGx4dUx5OGdTWFFnYVhNZ1lXeHpieUIxYzJWa0lHbHVJSFJvWlNCTllXbHVJRzF2WkhWc1pTQmhjbVZoSUhSb1lYUWdhVzVqYkhWa1pYTWdkR2hsSUhOcFpHVmlZWEl1WEc0dkx5QmJZMnhoYzNNcVBTY3RMV052YkMwM0xURXlKMTFjYmk1amIyd3ROeTB4TWx4dUlDQjNhV1IwYURvZ055OHhNaUFxSURFd01DVmNibHh1SUNBcmJXVmthV0VvWENJOFBYUmhZbXhsZEZ3aUtWeHVJQ0FnSUhkcFpIUm9PaUF4TURBbFhHNWNibHh1THk4Z09DQmpiMngxYlc1eklIZHBaR1V1WEc0dkx5QlVhR2x6SUdseklIVnpaV1FnYVc0Z2RHaGxJRXhsWVdSbGNuTm9hWEFnY0dGblpTNWNiaTVqYjJ3dE9DMHhNbHh1SUNCM2FXUjBhRG9nT0M4eE1pQXFJREV3TUNWY2JseHVJQ0FyYldWa2FXRW9YQ0k4UFhSaFlteGxkRndpS1Z4dUlDQWdJSGRwWkhSb09pQXhNREFsWEc1Y2JseHVMbU52YkMwNUxURXlYRzRnSUhkcFpIUm9PaUE1THpFeUlDb2dNVEF3SlZ4dVhHNGdJQ3R0WldScFlTaGNJanc5ZEdGaWJHVjBYQ0lwWEc0Z0lDQWdkMmxrZEdnNklERXdNQ1ZjYmx4dVhHNHVZMjlzTFRFd0xURXlYRzRnSUhkcFpIUm9PaUF4TUM4eE1pQXFJREV3TUNWY2JseHVJQ0FyYldWa2FXRW9YQ0k4UFhSaFlteGxkRndpS1Z4dUlDQWdJSGRwWkhSb09pQXhNREFsWEc1Y2JpNWpiMnd0TVRFdE1USmNiaUFnZDJsa2RHZzZJREV4THpFeUlDb2dNVEF3SlZ4dVhHNGdJQ3R0WldScFlTaGNJanc5ZEdGaWJHVjBYQ0lwWEc0Z0lDQWdkMmxrZEdnNklERXdNQ1ZjYmlJc0lpOHZYRzVjZENCZklDQWdJQ0FnSUNBZ0lDQWdYeUFnSUNBZ0lDQWdJQ0FnWHlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUY4Z1gxeHVYSFFvWHlrZ0lDQWdJQ0FnSUNBZ2ZDQjhJQ0FnSUNBZ0lDQWdmQ0I4SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSHdnS0Y4cFhHNWNkQ0JmSUY4Z1gxOGdJQ0JmWDE5OElIeGZJQ0FnWHlBZ1gxOThJSHdnWDE5ZklDQWdYeUJmWHlCZlgxOGdJQ0JmWDE4Z0lGOWZmQ0I4WHlBZ1gxOGdYMXh1WEhSOElId2dKMThnWEZ3Z0x5QmZYM3dnZkNCOElId2dmQzhnWDJBZ2ZDOGdYeUJjWENCOElDZGZJR0FnWHlCY1hDQXZJRjhnWEZ3dklGOWdJSHdnZkM4Z1gyQWdmRnh1WEhSOElId2dmQ0I4SUh3Z0tGOWZmQ0I4SUh4ZmZDQjhJQ2hmZkNCOElDQmZYeThnZkNCOElId2dmQ0I4SUh3Z0lGOWZMeUFvWDN3Z2ZDQjhJQ2hmZkNCOFhHNWNkSHhmZkY5OElIeGZmRnhjWDE5ZmZGOThYRnhmWHl4ZmZGeGNYMThzWDN4Y1hGOWZYM3dnZkY5OElIeGZmQ0I4WDN4Y1hGOWZYM3hjWEY5ZkxGOThYM3hjWEY5ZkxGOThYRzVjYmx4MFUybHRjR3hsTENCbGJHVm5ZVzUwSUdGdVpDQnRZV2x1ZEdGcGJtRmliR1VnYldWa2FXRWdjWFZsY21sbGN5QnBiaUJUWVhOelhHNWNibHgwYUhSMGNEb3ZMMmx1WTJ4MVpHVXRiV1ZrYVdFdVkyOXRYRzVjYmlBZ1FYVjBhRzl5T2lCRlpIVmhjbVJ2SUVKdmRXTmhjeUE4YldGcGJFQmxaSFZoY21SdlltOTFZMkZ6TG1OdmJUNWNibHh1WEc0Z0lFTnlaV0YwWlhNZ1lTQnNhWE4wSUc5bUlHZHNiMkpoYkNCaWNtVmhhM0J2YVc1MGMxeHVYRzRnSUVCaGRYUm9iM0lnUldSMVlYSmtieUJDYjNWallYTmNibHh1SUNCQVpYaGhiWEJzWlNCelkzTnpJQzBnUTNKbFlYUmxjeUJoSUhOcGJtZHNaU0JpY21WaGEzQnZhVzUwSUhkcGRHZ2dkR2hsSUd4aFltVnNJR0J3YUc5dVpXQmNiaUFnSkdKeVpXRnJjRzlwYm5Sek9pQW9KM0JvYjI1bEp6b2dNekl3Y0hncE8xeHVYRzRrWW5KbFlXdHdiMmx1ZEhNNklDaGNJbkJvYjI1bFhDSTZJRE15TUhCNExDQmNJblJoWW14bGRGd2lPaUEzTmpod2VDd2dYQ0prWlhOcmRHOXdYQ0k2SURFd01qTndlQ2tnSVdSbFptRjFiSFJjYmx4dUx5OWNiaUFnUTNKbFlYUmxjeUJoSUd4cGMzUWdiMllnYzNSaGRHbGpJR1Y0Y0hKbGMzTnBiMjV6SUc5eUlHMWxaR2xoSUhSNWNHVnpYRzVjYmlBZ1FHRjFkR2h2Y2lCRlpIVmhjbVJ2SUVKdmRXTmhjMXh1WEc0Z0lFQmxlR0Z0Y0d4bElITmpjM01nTFNCRGNtVmhkR1Z6SUdFZ2MybHVaMnhsSUcxbFpHbGhJSFI1Y0dVZ0tITmpjbVZsYmlsY2JpQWdJQ1J0WldScFlTMWxlSEJ5WlhOemFXOXVjem9nS0NkelkzSmxaVzRuT2lBbmMyTnlaV1Z1SnlrN1hHNWNiaUFnUUdWNFlXMXdiR1VnYzJOemN5QXRJRU55WldGMFpYTWdZU0J6ZEdGMGFXTWdaWGh3Y21WemMybHZiaUIzYVhSb0lHeHZaMmxqWVd3Z1pHbHphblZ1WTNScGIyNGdLRTlTSUc5d1pYSmhkRzl5S1Z4dUlDQWdKRzFsWkdsaExXVjRjSEpsYzNOcGIyNXpPaUFvWEc0Z0lGeDBYSFFuY21WMGFXNWhNbmduT2lBb1hHNGdJRngwWEhSY2RDY29MWGRsWW10cGRDMXRhVzR0WkdWMmFXTmxMWEJwZUdWc0xYSmhkR2x2T2lBeUtTY3NYRzRnSUZ4MFhIUmNkQ2NvYldsdUxYSmxjMjlzZFhScGIyNDZJREU1TW1Sd2FTa25YRzRnSUZ4MFhIUXBYRzRnSUZ4MEtUdGNibHh1SkcxbFpHbGhMV1Y0Y0hKbGMzTnBiMjV6T2lBb1hDSnpZM0psWlc1Y0lqb2dYQ0p6WTNKbFpXNWNJaXdnWENKd2NtbHVkRndpT2lCY0luQnlhVzUwWENJc0lGd2lhR0Z1WkdobGJHUmNJam9nWENKb1lXNWthR1ZzWkZ3aUxDQmNJbkpsZEdsdVlUSjRYQ0k2SUNoY0lpZ3RkMlZpYTJsMExXMXBiaTFrWlhacFkyVXRjR2w0Wld3dGNtRjBhVzg2SURJcFhDSXNJRndpS0cxcGJpMXlaWE52YkhWMGFXOXVPaUF4T1RKa2NHa3BYQ0lwTENCY0luSmxkR2x1WVRONFhDSTZJQ2hjSWlndGQyVmlhMmwwTFcxcGJpMWtaWFpwWTJVdGNHbDRaV3d0Y21GMGFXODZJRE1wWENJc0lGd2lLRzFwYmkxeVpYTnZiSFYwYVc5dU9pQXpOVEJrY0drcFhDSXBLU0FoWkdWbVlYVnNkRnh1WEc0dkwxeHVJQ0JFWldacGJtVnpJR0VnYm5WdFltVnlJSFJ2SUdKbElHRmtaR1ZrSUc5eUlITjFZblJ5WVdOMFpXUWdabkp2YlNCbFlXTm9JSFZ1YVhRZ2QyaGxiaUJrWldOc1lYSnBibWNnWW5KbFlXdHdiMmx1ZEhNZ2QybDBhQ0JsZUdOc2RYTnBkbVVnYVc1MFpYSjJZV3h6WEc1Y2JpQWdRR0YxZEdodmNpQkZaSFZoY21SdklFSnZkV05oYzF4dVhHNGdJRUJsZUdGdGNHeGxJSE5qYzNNZ0xTQkpiblJsY25aaGJDQm1iM0lnY0dsNFpXeHpJR2x6SUdSbFptbHVaV1FnWVhNZ1lERmdJR0o1SUdSbFptRjFiSFJjYmlBZ0lFQnBibU5zZFdSbElHMWxaR2xoS0Z3aVBqRXlPSEI0WENJcElIdDlYRzVjYmlBZ1IyVnVaWEpoZEdWek9seHVJQ0JBYldWa2FXRWdLRzFwYmkxM2FXUjBhRG9nTVRJNWNIZ3BJSHQ5WEc1Y2JpQWdRR1Y0WVcxd2JHVWdjMk56Y3lBdElFbHVkR1Z5ZG1Gc0lHWnZjaUJsYlhNZ2FYTWdaR1ZtYVc1bFpDQmhjeUJnTUM0d01XQWdZbmtnWkdWbVlYVnNkRnh1SUNBZ1FHbHVZMngxWkdVZ2JXVmthV0VvWENJK01qQmxiVndpS1NCN2ZWeHVYRzRnSUVkbGJtVnlZWFJsY3pwY2JpQWdRRzFsWkdsaElDaHRhVzR0ZDJsa2RHZzZJREl3TGpBeFpXMHBJSHQ5WEc1Y2JpQWdRR1Y0WVcxd2JHVWdjMk56Y3lBdElFbHVkR1Z5ZG1Gc0lHWnZjaUJ5WlcxeklHbHpJR1JsWm1sdVpXUWdZWE1nWURBdU1XQWdZbmtnWkdWbVlYVnNkQ3dnZEc4Z1ltVWdkWE5sWkNCM2FYUm9JR0JtYjI1MExYTnBlbVU2SURZeUxqVWxPMkJjYmlBZ0lFQnBibU5zZFdSbElHMWxaR2xoS0Z3aVBqSXVNSEpsYlZ3aUtTQjdmVnh1WEc0Z0lFZGxibVZ5WVhSbGN6cGNiaUFnUUcxbFpHbGhJQ2h0YVc0dGQybGtkR2c2SURJdU1YSmxiU2tnZTMxY2JseHVKSFZ1YVhRdGFXNTBaWEoyWVd4ek9pQW9YQ0p3ZUZ3aU9pQXhMQ0JjSW1WdFhDSTZJREF1TURFc0lGd2ljbVZ0WENJNklEQXVNU2tnSVdSbFptRjFiSFJjYmx4dUx5OWNiaUFnUjJWdVpYSmhkR1Z6SUdFZ2JXVmthV0VnY1hWbGNua2dZbUZ6WldRZ2IyNGdZU0JzYVhOMElHOW1JR052Ym1ScGRHbHZibk5jYmx4dUlDQkFZWFYwYUc5eUlFVmtkV0Z5Wkc4Z1FtOTFZMkZ6WEc1Y2JpQWdRSEJoY21GdElIdE1hWE4wZlNBZ0lDUmpiMjVrYVhScGIyNXpJQ0F0SUUxbFpHbGhJSEYxWlhKNUlHTnZibVJwZEdsdmJuTmNibHh1SUNCQVpYaGhiWEJzWlNCelkzTnpJQzBnVjJsMGFDQmhJSE5wYm1kc1pTQnpaWFFnWW5KbFlXdHdiMmx1ZEZ4dUlDQWdRR2x1WTJ4MVpHVWdiV1ZrYVdFb1hDSStjR2h2Ym1WY0lpa2dleUI5WEc1Y2JpQWdRR1Y0WVcxd2JHVWdjMk56Y3lBdElGZHBkR2dnZEhkdklITmxkQ0JpY21WaGEzQnZhVzUwYzF4dUlDQWdRR2x1WTJ4MVpHVWdiV1ZrYVdFb1hDSStjR2h2Ym1WY0lpd2dYQ0k4UFhSaFlteGxkRndpS1NCN0lIMWNibHh1SUNCQVpYaGhiWEJzWlNCelkzTnpJQzBnVjJsMGFDQmpkWE4wYjIwZ2RtRnNkV1Z6WEc0Z0lDQkFhVzVqYkhWa1pTQnRaV1JwWVNoY0lqNDlNelU0Y0hoY0lpd2dYQ0k4T0RVd2NIaGNJaWtnZXlCOVhHNWNiaUFnUUdWNFlXMXdiR1VnYzJOemN5QXRJRmRwZEdnZ2MyVjBJR0p5WldGcmNHOXBiblJ6SUhkcGRHZ2dZM1Z6ZEc5dElIWmhiSFZsYzF4dUlDQWdRR2x1WTJ4MVpHVWdiV1ZrYVdFb1hDSStaR1Z6YTNSdmNGd2lMQ0JjSWp3OU1UTTFNSEI0WENJcElIc2dmVnh1WEc0Z0lFQmxlR0Z0Y0d4bElITmpjM01nTFNCWGFYUm9JR0VnYzNSaGRHbGpJR1Y0Y0hKbGMzTnBiMjVjYmlBZ0lFQnBibU5zZFdSbElHMWxaR2xoS0Z3aWNtVjBhVzVoTW5oY0lpa2dleUI5WEc1Y2JpQWdRR1Y0WVcxd2JHVWdjMk56Y3lBdElFMXBlR2x1WnlCbGRtVnllWFJvYVc1blhHNGdJQ0JBYVc1amJIVmtaU0J0WldScFlTaGNJajQ5TXpVd2NIaGNJaXdnWENJOGRHRmliR1YwWENJc0lGd2ljbVYwYVc1aE0zaGNJaWtnZXlCOVhHNWNibHh1UFcxbFpHbGhLQ1JqYjI1a2FYUnBiMjV6TGk0dUtWeHVJQ0JBWm05eUlDUnBJR1p5YjIwZ01TQjBhSEp2ZFdkb0lHeGxibWQwYUNna1kyOXVaR2wwYVc5dWN5bGNiaUFnSUNBa1kyOXVaR2wwYVc5dWN6b2djMlYwTFc1MGFDZ2tZMjl1WkdsMGFXOXVjeXdnSkdrc0lIQmhjbk5sTFdWNGNISmxjM05wYjI0b2JuUm9LQ1JqYjI1a2FYUnBiMjV6TENBa2FTa3BLVnh1SUNBa1luSmhibU5vWlhNNklHZGxkQzF4ZFdWeWVTMWljbUZ1WTJobGN5Z2tZMjl1WkdsMGFXOXVjeWxjYmlBZ0pIRjFaWEo1T2lCY0lsd2lYRzRnSUVCbFlXTm9JQ1JpY21GdVkyZ2dhVzRnSkdKeVlXNWphR1Z6WEc0Z0lDQWdRR2xtSUhOMGNpMXNaVzVuZEdnb0pIRjFaWEo1S1NBaFBTQXdYRzRnSUNBZ0lDQWtjWFZsY25rNklDUnhkV1Z5ZVNBcklGd2lMQ0JjSWx4dUlDQWdJQ1J4ZFdWeWVUb2dKSEYxWlhKNUlDc2dKR0p5WVc1amFGeHVJQ0JBYldWa2FXRWdJM3NrY1hWbGNubDlYRzRnSUNBZ1FHTnZiblJsYm5SY2JseHVMeTljYmlBZ1VtVmhaSE1nWVNCc2FYTjBJRzltSUcxbFpHbGhJSEYxWlhKNUlHVjRjSEpsYzNOcGIyNXpJR0Z1WkNCelpYQmhjbUYwWlhNZ2JHOW5hV05oYkNCa2FYTnFkVzVqZEdsdmJuTWdhVzUwYnlCa2FXWm1aWEpsYm5RZ1luSmhibU5vWlhOY2JseHVJQ0JBWVhWMGFHOXlJRVZrZFdGeVpHOGdRbTkxWTJGelhHNGdJRUJ3WVhKaGJTQjdUR2x6ZEgwZ0lDQWtaWGh3Y21WemMybHZibk1nSUMwZ2JHbHpkQ0J2WmlCbGVIQnlaWE56YVc5dWMxeHVJQ0JBZEdoeWIzZHpJR0FrWlhod2NtVnpjMmx2Ym1BZ2FYTWdibTkwSUdFZ2RtRnNhV1FnWlhod2NtVnpjMmx2Ymx4dVhHNGdJRUJ5WlhSMWNtNGdlMHhwYzNRZ2ZDQk9kV3hzZlZ4dVhHNWNia0JtZFc1amRHbHZiaUJuWlhRdGNYVmxjbmt0WW5KaGJtTm9aWE1vSkdWNGNISmxjM05wYjI1ektWeHVJQ0FrY21WemRXeDBPaUJjSWx3aVhHNGdJQ1JvWVhNdFozSnZkWEJ6T2lCbVlXeHpaVnh1SUNBdkx5QkhaWFIwYVc1bklHbHVhWFJwWVd3Z2MyNWhjSE5vYjNRZ1lXNWtJR3h2YjJ0cGJtY2dabTl5SUdkeWIzVndjMXh1SUNCQVpXRmphQ0FrWlhod2NtVnpjMmx2YmlCcGJpQWtaWGh3Y21WemMybHZibk5jYmlBZ0lDQkFhV1lnYzNSeUxXeGxibWQwYUNna2NtVnpkV3gwS1NBaFBTQXdYRzRnSUNBZ0lDQWtjbVZ6ZFd4ME9pQWtjbVZ6ZFd4MElDc2dYQ0lnWVc1a0lGd2lYRzRnSUNBZ1FHbG1JSFI1Y0dVdGIyWW9KR1Y0Y0hKbGMzTnBiMjRwSUQwOUlGd2ljM1J5YVc1blhDSmNiaUFnSUNBZ0lDUnlaWE4xYkhRNklDUnlaWE4xYkhRZ0t5QWtaWGh3Y21WemMybHZibHh1SUNBZ0lFQmxiSE5sSUdsbUlIUjVjR1V0YjJZb0pHVjRjSEpsYzNOcGIyNHBJRDA5SUZ3aWJHbHpkRndpWEc0Z0lDQWdJQ0FrY21WemRXeDBPaUFrY21WemRXeDBJQ3NnYm5Sb0tDUmxlSEJ5WlhOemFXOXVMQ0F4S1Z4dUlDQWdJQ0FnSkdoaGN5MW5jbTkxY0hNNklIUnlkV1ZjYmlBZ0lDQkFaV3h6WlZ4dUlDQWdJQ0FnUUhkaGNtNGdYQ0lqZXlSbGVIQnlaWE56YVc5dWZTQnBjeUJ1YjNRZ1lTQjJZV3hwWkNCbGVIQnlaWE56YVc5dUxsd2lYRzRnSUM4dklFbG1JSGRsSUdoaGRtVWdaM0p2ZFhCekxDQjNaU0JvWVhabElIUnZJR055WldGMFpTQmhiR3dnY0c5emMybGliR1VnWTI5dFltbHVZWFJwYjI1elhHNGdJRUJwWmlBa2FHRnpMV2R5YjNWd2MxeHVJQ0FnSUVCbFlXTm9JQ1JsZUhCeVpYTnphVzl1SUdsdUlDUmxlSEJ5WlhOemFXOXVjMXh1SUNBZ0lDQWdRR2xtSUhSNWNHVXRiMllvSkdWNGNISmxjM05wYjI0cElEMDlJRndpYkdsemRGd2lYRzRnSUNBZ0lDQWdJQ1JtYVhKemREb2diblJvS0NSbGVIQnlaWE56YVc5dUxDQXhLVnh1SUNBZ0lDQWdJQ0JBWldGamFDQWtiV1Z0WW1WeUlHbHVJQ1JsZUhCeVpYTnphVzl1WEc0Z0lDQWdJQ0FnSUNBZ1FHbG1JQ1J0WlcxaVpYSWdJVDBnSkdacGNuTjBYRzRnSUNBZ0lDQWdJQ0FnSUNCQVpXRmphQ0FrY0dGeWRHbGhiQ0JwYmlBa2NtVnpkV3gwWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ1J5WlhOMWJIUTZJR3B2YVc0b0pISmxjM1ZzZEN3Z2MzUnlMWEpsY0d4aFkyVXRabWx5YzNRb0pHWnBjbk4wTENBa2JXVnRZbVZ5TENBa2NHRnlkR2xoYkNrcFhHNGdJRUJ5WlhSMWNtNGdKSEpsYzNWc2RGeHVYRzR2TDF4dUlDQlFZWEp6WlhNZ1lTQnpkSEpwYm1jZ2RHOGdabTl5YlNCaElHMWxaR2xoSUhGMVpYSjVJR1Y0Y0hKbGMzTnBiMjVjYmx4dUlDQkFZWFYwYUc5eUlFVmtkV0Z5Wkc4Z1FtOTFZMkZ6WEc1Y2JpQWdRSEJoY21GdElIdFRkSEpwYm1kOUlDQWdKR1Y0Y0hKbGMzTnBiMjRnSUMwZ1pYaHdjbVZ6YzJsdmJpQW9hVzRnYzNSeWFXNW5LVnh1SUNCQWRHaHliM2R6SUVWNGNISmxjM05wYjI0Z2QybDBhQ0IwZVhCbElHQjBlWEJsTFc5bUtDUmxlSEJ5WlhOemFXOXVLV0FnWkdWMFpXTjBaV1FzSUhOMGNtbHVaeUJsZUhCbFkzUmxaRnh1SUNCQWRHaHliM2R6SUdBa1pYaHdjbVZ6YzJsdmJtQWdhWE1nYldsemMybHVaeUJoYmlCdmNHVnlZWFJ2Y2x4dUlDQkFkR2h5YjNkeklGVnVhMjV2ZDI0Z2RXNXBkRG9nWUNSMWJtbDBZRnh1WEc0Z0lFQnlaWFIxY200Z2UxTjBjbWx1WnlCOElFNTFiR3g5WEc1Y2JseHVRR1oxYm1OMGFXOXVJSEJoY25ObExXVjRjSEpsYzNOcGIyNG9KR1Y0Y0hKbGMzTnBiMjRwWEc0Z0lDUnZjR1Z5WVhSdmNqb2dYQ0pjSWx4dUlDQWtkbUZzZFdVNklGd2lYQ0pjYmlBZ0pHVnNaVzFsYm5RNklGd2lYQ0pjYmlBZ0pISmxjM1ZzZERvZ1hDSmNJbHh1SUNBa2FYTXRkMmxrZEdnNklIUnlkV1ZjYmlBZ1FHbG1JSFI1Y0dVdGIyWW9KR1Y0Y0hKbGMzTnBiMjRwSUNFOUlGd2ljM1J5YVc1blhDSmNiaUFnSUNCQWQyRnliaUJjSWtWNGNISmxjM05wYjI0Z2QybDBhQ0IwZVhCbElHQWplM1I1Y0dVdGIyWW9KR1Y0Y0hKbGMzTnBiMjRwZldBZ1pHVjBaV04wWldRc0lITjBjbWx1WnlCbGVIQmxZM1JsWkM1Y0lseHVJQ0F2THlCVFpYQmhjbUYwYVc1bklIUm9aU0J2Y0dWeVlYUnZjaUJtY205dElIUm9aU0J5WlhOMElHOW1JSFJvWlNCbGVIQnlaWE56YVc5dVhHNGdJRUJwWmlCemRISXRjMnhwWTJVb0pHVjRjSEpsYzNOcGIyNHNJRElzSURJcElEMDlJRndpUFZ3aVhHNGdJQ0FnSkc5d1pYSmhkRzl5T2lCemRISXRjMnhwWTJVb0pHVjRjSEpsYzNOcGIyNHNJREVzSURJcFhHNGdJQ0FnSkhaaGJIVmxPaUJ6ZEhJdGMyeHBZMlVvSkdWNGNISmxjM05wYjI0c0lETXBYRzRnSUVCbGJITmxYRzRnSUNBZ0pHOXdaWEpoZEc5eU9pQnpkSEl0YzJ4cFkyVW9KR1Y0Y0hKbGMzTnBiMjRzSURFc0lERXBYRzRnSUNBZ0pIWmhiSFZsT2lCemRISXRjMnhwWTJVb0pHVjRjSEpsYzNOcGIyNHNJRElwWEc0Z0lDOHZJRU5vWldOcmFXNW5JSGRvWVhRZ2RIbHdaU0J2WmlCbGVIQnlaWE56YVc5dUlIZGxjbVVnWkdWaGJHbHVaeUIzYVhSb1hHNGdJRUJwWmlCdFlYQXRhR0Z6TFd0bGVTZ2tZbkpsWVd0d2IybHVkSE1zSUNSMllXeDFaU2xjYmlBZ0lDQWtjbVZ6ZFd4ME9pQnRZWEF0WjJWMEtDUmljbVZoYTNCdmFXNTBjeXdnSkhaaGJIVmxLVnh1SUNCQVpXeHpaU0JwWmlCdFlYQXRhR0Z6TFd0bGVTZ2tiV1ZrYVdFdFpYaHdjbVZ6YzJsdmJuTXNJQ1JsZUhCeVpYTnphVzl1S1Z4dUlDQWdJQ1J5WlhOMWJIUTZJRzFoY0MxblpYUW9KRzFsWkdsaExXVjRjSEpsYzNOcGIyNXpMQ0FrWlhod2NtVnpjMmx2YmlsY2JpQWdJQ0FrYVhNdGQybGtkR2c2SUdaaGJITmxYRzRnSUVCbGJITmxYRzRnSUNBZ0pISmxjM1ZzZERvZ2RHOHRiblZ0WW1WeUtDUjJZV3gxWlNsY2JpQWdRR2xtSUNScGN5MTNhV1IwYUZ4dUlDQWdJQ1IxYm1sME9pQjFibWwwS0NSeVpYTjFiSFFwWEc0Z0lDQWdKR2x1ZEdWeWRtRnNPaUF3WEc0Z0lDQWdRR2xtSUcxaGNDMW9ZWE10YTJWNUtDUjFibWwwTFdsdWRHVnlkbUZzY3l3Z0pIVnVhWFFwWEc0Z0lDQWdJQ0FrYVc1MFpYSjJZV3c2SUcxaGNDMW5aWFFvSkhWdWFYUXRhVzUwWlhKMllXeHpMQ0FrZFc1cGRDbGNiaUFnSUNCQVpXeHpaVnh1SUNBZ0lDQWdRSGRoY200Z1hDSlZibXR1YjNkdUlIVnVhWFE2SUNON0pIVnVhWFI5WENKY2JpQWdJQ0JBYVdZZ0pHOXdaWEpoZEc5eUlEMDlJRndpUGx3aVhHNGdJQ0FnSUNBa1pXeGxiV1Z1ZERvZ1hDSW9iV2x1TFhkcFpIUm9PaUFqZXlSeVpYTjFiSFFnS3lBa2FXNTBaWEoyWVd4OUtWd2lYRzRnSUNBZ1FHVnNjMlVnYVdZZ0pHOXdaWEpoZEc5eUlEMDlJRndpUEZ3aVhHNGdJQ0FnSUNBa1pXeGxiV1Z1ZERvZ1hDSW9iV0Y0TFhkcFpIUm9PaUFqZXlSeVpYTjFiSFFnTFNBa2FXNTBaWEoyWVd4OUtWd2lYRzRnSUNBZ1FHVnNjMlVnYVdZZ0pHOXdaWEpoZEc5eUlEMDlJRndpUGoxY0lseHVJQ0FnSUNBZ0pHVnNaVzFsYm5RNklGd2lLRzFwYmkxM2FXUjBhRG9nSTNza2NtVnpkV3gwZlNsY0lseHVJQ0FnSUVCbGJITmxJR2xtSUNSdmNHVnlZWFJ2Y2lBOVBTQmNJanc5WENKY2JpQWdJQ0FnSUNSbGJHVnRaVzUwT2lCY0lpaHRZWGd0ZDJsa2RHZzZJQ043SkhKbGMzVnNkSDBwWENKY2JpQWdJQ0JBWld4elpWeHVJQ0FnSUNBZ1FIZGhjbTRnWENJamV5UmxlSEJ5WlhOemFXOXVmU0JwY3lCdGFYTnphVzVuSUdGdUlHOXdaWEpoZEc5eUxsd2lYRzRnSUVCbGJITmxYRzRnSUNBZ0pHVnNaVzFsYm5RNklDUnlaWE4xYkhSY2JpQWdRSEpsZEhWeWJpQWtaV3hsYldWdWRGeHVYRzR2TDF4dUlDQlNaWEJzWVdObGN5QjBhR1VnWm1seWMzUWdiMk5qZFhKbGJtTmxJRzltSUhSb1pTQnpkSEpwYm1jZ2QybDBhQ0IwYUdVZ2NtVndiR0ZqWlcxbGJuUWdjM1J5YVc1blhHNWNiaUFnUUdGMWRHaHZjaUJGWkhWaGNtUnZJRUp2ZFdOaGMxeHVYRzRnSUVCd1lYSmhiU0I3VTNSeWFXNW5mU0FnSUNSelpXRnlZMmdnSUMwZ1ZHaGxJSFpoYkhWbElHSmxhVzVuSUhObFlYSmphR1ZrSUdadmNseHVJQ0JBY0dGeVlXMGdlMU4wY21sdVozMGdJQ0FrY21Wd2JHRmpaU0FnTFNCVWFHVWdjbVZ3YkdGalpXMWxiblFnYzNSeWFXNW5YRzRnSUVCd1lYSmhiU0I3VTNSeWFXNW5mU0FnSUNSemRXSnFaV04wSUNBdElGUm9aU0J6ZEhKcGJtY2dZbVZwYm1jZ2NtVndiR0ZqWldRZ2IyNWNibHh1SUNCQWNtVjBkWEp1SUh0VGRISnBibWNnZkNCT2RXeHNmVnh1WEc1Y2JrQm1kVzVqZEdsdmJpQnpkSEl0Y21Wd2JHRmpaUzFtYVhKemRDZ2tjMlZoY21Ob0xDQWtjbVZ3YkdGalpTd2dKSE4xWW1wbFkzUXBYRzRnSUNSelpXRnlZMmd0YzNSaGNuUTZJSE4wY2kxcGJtUmxlQ2drYzNWaWFtVmpkQ3dnSkhObFlYSmphQ2xjYmlBZ1FHbG1JQ1J6WldGeVkyZ3RjM1JoY25RZ1BUMGdiblZzYkZ4dUlDQWdJRUJ5WlhSMWNtNGdKSE4xWW1wbFkzUmNiaUFnSkhKbGMzVnNkRG9nYzNSeUxYTnNhV05sS0NSemRXSnFaV04wTENBd0xDQWtjMlZoY21Ob0xYTjBZWEowSUMwZ01TbGNiaUFnSkhKbGMzVnNkRG9nSkhKbGMzVnNkQ0FySUNSeVpYQnNZV05sWEc0Z0lDUnlaWE4xYkhRNklDUnlaWE4xYkhRZ0t5QnpkSEl0YzJ4cFkyVW9KSE4xWW1wbFkzUXNJQ1J6WldGeVkyZ3RjM1JoY25RZ0t5QnpkSEl0YkdWdVozUm9LQ1J6WldGeVkyZ3BLVnh1SUNCQWNtVjBkWEp1SUNSeVpYTjFiSFJjYmx4dUx5OWNiaUFnUTJGemRITWdZU0J1ZFcxaVpYSWdkRzhnWVNCemRISnBibWRjYmx4dUlDQkFZWFYwYUc5eUlFaDFaMjhnUjJseVlYVmtaV3hjYmx4dUlDQkFjR0Z5WVcwZ2UxTjBjbWx1WjMwZ0lDQWtjM1J5YVc1bklDQXRJRTUxYldKbGNpQjBieUJpWlNCd1lYSnpaV1JjYmx4dUlDQkFjbVYwZFhKdUlIdE1hWE4wSUh3Z1RuVnNiSDFjYmx4dVFHWjFibU4wYVc5dUlIUnZMVzUxYldKbGNpZ2tjM1J5YVc1bktWeHVJQ0F2THlCTllYUnlhV05sYzF4dUlDQWtjM1J5YVc1bmN6b2dYQ0l3WENJZ1hDSXhYQ0lnWENJeVhDSWdYQ0l6WENJZ1hDSTBYQ0lnWENJMVhDSWdYQ0kyWENJZ1hDSTNYQ0lnWENJNFhDSWdYQ0k1WENKY2JpQWdKRzUxYldKbGNuTTZJREFnTVNBeUlETWdOQ0ExSURZZ055QTRJRGxjYmlBZ0x5OGdVbVZ6ZFd4MFhHNGdJQ1J5WlhOMWJIUTZJREJjYmlBZ0pHUnBkbWxrWlhJNklEQmNiaUFnSkcxcGJuVnpPaUJtWVd4elpWeHVJQ0F2THlCTWIyOXdhVzVuSUhSb2NtOTFaMmdnWVd4c0lHTm9ZWEpoWTNSbGNuTmNiaUFnUUdadmNpQWthU0JtY205dElERWdkR2h5YjNWbmFDQnpkSEl0YkdWdVozUm9LQ1J6ZEhKcGJtY3BYRzRnSUNBZ0pHTm9ZWEpoWTNSbGNqb2djM1J5TFhOc2FXTmxLQ1J6ZEhKcGJtY3NJQ1JwTENBa2FTbGNiaUFnSUNBa2FXNWtaWGc2SUdsdVpHVjRLQ1J6ZEhKcGJtZHpMQ0FrWTJoaGNtRmpkR1Z5S1Z4dUlDQWdJRUJwWmlBa1kyaGhjbUZqZEdWeUlEMDlJRndpTFZ3aVhHNGdJQ0FnSUNBa2JXbHVkWE02SUhSeWRXVmNiaUFnSUNCQVpXeHpaU0JwWmlBa1kyaGhjbUZqZEdWeUlEMDlJRndpTGx3aVhHNGdJQ0FnSUNBa1pHbDJhV1JsY2pvZ01WeHVJQ0FnSUVCbGJITmxYRzRnSUNBZ0lDQkFhV1lnZEhsd1pTMXZaaWdrYVc1a1pYZ3BJQ0U5SUZ3aWJuVnRZbVZ5WENKY2JpQWdJQ0FnSUNBZ0pISmxjM1ZzZERvZ2FXWW9KRzFwYm5WekxDQWtjbVZ6ZFd4MElDb2dMVEVzSUNSeVpYTjFiSFFwWEc0Z0lDQWdJQ0FnSUVCeVpYUjFjbTRnWDJ4bGJtZDBhQ2drY21WemRXeDBMQ0J6ZEhJdGMyeHBZMlVvSkhOMGNtbHVaeXdnSkdrcEtWeHVJQ0FnSUNBZ0pHNTFiV0psY2pvZ2JuUm9LQ1J1ZFcxaVpYSnpMQ0FrYVc1a1pYZ3BYRzRnSUNBZ0lDQkFhV1lnSkdScGRtbGtaWElnUFQwZ01GeHVJQ0FnSUNBZ0lDQWtjbVZ6ZFd4ME9pQWtjbVZ6ZFd4MElDb2dNVEJjYmlBZ0lDQWdJRUJsYkhObFhHNGdJQ0FnSUNBZ0lDOHZJRTF2ZG1VZ2RHaGxJR1JsWTJsdFlXd2daRzkwSUhSdklIUm9aU0JzWldaMFhHNGdJQ0FnSUNBZ0lDUmthWFpwWkdWeU9pQWtaR2wyYVdSbGNpQXFJREV3WEc0Z0lDQWdJQ0FnSUNSdWRXMWlaWEk2SUNSdWRXMWlaWElnTHlBa1pHbDJhV1JsY2x4dUlDQWdJQ0FnSkhKbGMzVnNkRG9nSkhKbGMzVnNkQ0FySUNSdWRXMWlaWEpjYmlBZ1FISmxkSFZ5YmlCcFppZ2tiV2x1ZFhNc0lDUnlaWE4xYkhRZ0tpQXRNU3dnSkhKbGMzVnNkQ2xjYmx4dVFHWjFibU4wYVc5dUlGOXNaVzVuZEdnb0pHNTFiV0psY2l3Z0pIVnVhWFFwWEc0Z0lDUnpkSEpwYm1kek9pQmNJbkI0WENJZ1hDSmpiVndpSUZ3aWJXMWNJaUJjSWlWY0lpQmNJbU5vWENJZ1hDSndhV05oWENJZ1hDSnBibHdpSUZ3aVpXMWNJaUJjSW5KbGJWd2lJRndpY0hSY0lpQmNJbkJqWENJZ1hDSmxlRndpSUZ3aWRuZGNJaUJjSW5ab1hDSWdYQ0oyYldsdVhDSWdYQ0oyYldGNFhDSmNiaUFnSkhWdWFYUnpPaUF4Y0hnZ01XTnRJREZ0YlNBeEpTQXhZMmdnTVhCcFkyRWdNV2x1SURGbGJTQXhjbVZ0SURGd2RDQXhjR01nTVdWNElERjJkeUF4ZG1nZ01YWnRhVzRnTVhadFlYaGNiaUFnSkdsdVpHVjRPaUJwYm1SbGVDZ2tjM1J5YVc1bmN5d2dKSFZ1YVhRcFhHNGdJRUJwWmlCMGVYQmxMVzltS0NScGJtUmxlQ2tnSVQwZ1hDSnVkVzFpWlhKY0lseHVJQ0FnSUVCM1lYSnVJRndpVlc1cmJtOTNiaUIxYm1sMElHQWpleVIxYm1sMGZXQXVYQ0pjYmlBZ0lDQkFjbVYwZFhKdUlHWmhiSE5sWEc0Z0lFQnlaWFIxY200Z0pHNTFiV0psY2lBcUlHNTBhQ2drZFc1cGRITXNJQ1JwYm1SbGVDbGNiaUlzSWlwY2JpQWdiV0Z5WjJsdU9pQXdYRzRnSUhCaFpHUnBibWM2SURCY2JpQWdZbTk0TFhOcGVtbHVaem9nWW05eVpHVnlMV0p2ZUZ4dVhHNGdJQ1k2T21GbWRHVnlMQ0FtT2pwaVpXWnZjbVZjYmlBZ0lDQmliM2d0YzJsNmFXNW5PaUJpYjNKa1pYSXRZbTk0WEc1Y2JtSnZaSGxjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0pITnNZWFJsWEc0Z0lIQmhaR1JwYm1jNklEQmNibHh1WVZ4dUlDQjBaWGgwTFdSbFkyOXlZWFJwYjI0NklHNXZibVZjYmx4dUx5OVNaWE5sZENCbWJHVjRZbTk0SUhObGRIUnBibWR6SUhkb1pXNGdjbVZ6Y0c5dVpHbHVaeUJpWld4dmR5QmtaWE5yZEc5d1hHNDljbVZ6Y0c5dWMybDJaUzF6ZEdGamExeHVJQ0FyYldWa2FXRW9YQ0k4UFhSaFlteGxkRndpS1Z4dUlDQWdJR1pzWlhndFpteHZkem9nWTI5c2RXMXVYRzRpTENJdkx5QlVhR1VnZEdGaWJHVnpJSE4wWVhKMElIUnZJR3h2YjJzZ1puVm5iSGtnWVhRZ1lYSnZkVzVrSURjd01IQjRMQ0J6YnlCc1pYUW5jeUJ6ZEdGeWRDQnlaWE53YjI1a2FXNW5JSFJvWlhKbFhHNGtkR0ZpYkdVdFluSmxZV3M2SUZ3aVBEMDNNREJ3ZUZ3aVhHNWNiblJoWW14bFhHNWNkRzFoY21kcGJqb2dNQ0F3SURFdU5XVnRYRzVjZEhkcFpIUm9PaUF4TURBbFhHNWNiblJ5WEc0Z0lHSnZjbVJsY2kxaWIzUjBiMjA2SURGd2VDQnpiMnhwWkNBa1kyeHZkV1JjYmx4dUlDQXJiV1ZrYVdFb0pIUmhZbXhsTFdKeVpXRnJLVnh1SUNBZ0lHMWhjbWRwYmkxMGIzQTZJREFnSVdsdGNHOXlkR0Z1ZER0Y2JseHVJQ0FnSUNZNlptbHljM1F0WTJocGJHUmNiaUFnSUNBZ0lHSnZjbVJsY2kxMGIzQTZJREZ3ZUNCemIyeHBaQ0FrWTJ4dmRXUmNibHh1SUNBbU9tNTBhQzFqYUdsc1pDaGxkbVZ1S1Z4dUlDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ1J6ZEdWaGJWeHVYRzUwWkZ4dUlDQjJaWEowYVdOaGJDMWhiR2xuYmpvZ2RHOXdYRzRnSUhCaFpHUnBibWM2SURFd2NIZ2dOWEI0WEc1Y2JpQWdLMjFsWkdsaEtDUjBZV0pzWlMxaWNtVmhheWxjYmlBZ0lDQnRZWEpuYVc0dGRHOXdPaUF3SUNGcGJYQnZjblJoYm5RN1hHNGdJQ0FnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsWEc0Z0lDQWdjR0ZrWkdsdVp5MXNaV1owT2lBME1DVmNibHh1SUNBZ0lDWTZZbVZtYjNKbFhHNGdJQ0FnSUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdWY2JpQWdJQ0FnSUhSdmNEb2dObkI0WEc0Z0lDQWdJQ0JzWldaME9pQTJjSGhjYmlBZ0lDQWdJSGRwWkhSb09pQTBNQ1ZjYmlBZ0lDQWdJSEJoWkdScGJtY3RjbWxuYUhRNklERXdjSGhjYmlBZ0lDQWdJSGRvYVhSbExYTndZV05sT2lCdWIzZHlZWEJjYmlBZ0lDQWdJR1p2Ym5RdGQyVnBaMmgwT2lBa2MyVnRhV0p2YkdSY2JseHVYRzRnSUNBZ0pqcHVkR2d0YjJZdGRIbHdaU2d4S1Z4dUlDQWdJQ0FnSmpwaVpXWnZjbVZjYmlBZ0lDQWdJQ0FnWTI5dWRHVnVkRG9nWENKRGFYUjVPaUJjSWx4dUlDQWdJQ1k2Ym5Sb0xXOW1MWFI1Y0dVb01pbGNiaUFnSUNBZ0lDWTZZbVZtYjNKbFhHNGdJQ0FnSUNBZ0lHTnZiblJsYm5RNklGd2lRV1JrY21WemN6b2dYQ0pjYmlBZ0lDQW1PbTUwYUMxdlppMTBlWEJsS0RNcFhHNGdJQ0FnSUNBbU9tSmxabTl5WlZ4dUlDQWdJQ0FnSUNCamIyNTBaVzUwT2lCY0lsQm9iMjVsT2lCY0lseHVYRzUwYUdWaFpGeHVJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFrWTJ4dmRXUmNibHh1SUNCMGNseHVJQ0FnSUM4dlNHbGtaU0IwYUdVZ2RHaGxZV1FnYVc1bWIzSnRZWFJwYjI0Z2FXNGdZVzRnWVdOalpYTnphV0pzWlNCM1lYbGNibHh1SUNBZ0lDdHRaV1JwWVNna2RHRmliR1V0WW5KbFlXc3BYRzRnSUNBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVmNiaUFnSUNBZ0lIUnZjRG9nTFRrNU9UbHdlRnh1SUNBZ0lDQWdiR1ZtZERvZ0xUazVPVGx3ZUZ4dVhHNGdJSFJvWEc0Z0lDQWdabTl1ZEMxM1pXbG5hSFE2SUNSelpXMXBZbTlzWkZ4dUlDQWdJSFJsZUhRdFlXeHBaMjQ2SUd4bFpuUmNiaUFnSUNCd1lXUmthVzVuT2lBMWNIaGNibHh1ZEdGaWJHVXNJSFJvWldGa0xDQjBZbTlrZVN3Z2RHZ3NJSFJrTENCMGNseHVJQ0FyYldWa2FXRW9KSFJoWW14bExXSnlaV0ZyS1Z4dUlDQWdJR1JwYzNCc1lYazZJR0pzYjJOclhHNGlMQ0l1Ym1GMkxXMXBibTl5WEc0Z0lHUnBjM0JzWVhrNklHSnNiMk5yWEc0Z0lIUmxlSFF0WVd4cFoyNDZJSEpwWjJoMFhHNWNiaUFnSmw5ZlkyOXVkR0ZwYm1WeVhHNGdJQ0FnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nSkhkb2FYUmxYRzRnSUNBZ1ltOXlaR1Z5TFd4bFpuUTZJREZ3ZUNCemIyeHBaQ0FrWW05eVpHVnlRMjlzYjNKY2JpQWdJQ0JpYjNKa1pYSXRjbWxuYUhRNklERndlQ0J6YjJ4cFpDQWtZbTl5WkdWeVEyOXNiM0pjYmlBZ0lDQnRZWEpuYVc0NklEQWdZWFYwYjF4dUlDQWdJSEJoWkdScGJtY3RkRzl3T2lBeGNtVnRYRzRnSUNBZ2JXRjRMWGRwWkhSb09pQXhNakF3Y0hoY2JseHVJQ0FnSUN0dFpXUnBZU2hjSWp3OWRHRmliR1YwWENJcFhHNGdJQ0FnSUNCa2FYTndiR0Y1T2lCdWIyNWxYRzVjYmlBZ2JHbGNiaUFnSUNCa2FYTndiR0Y1T2lCcGJteHBibVV0WW14dlkydGNibHh1SUNBZ0lDWTZZV1owWlhKY2JpQWdJQ0FnSUdScGMzQnNZWGs2SUdsdWJHbHVaUzFpYkc5amExeHVJQ0FnSUNBZ1kyOXVkR1Z1ZERvZ0p5QjhJQ2RjYmlBZ0lDQWdJR052Ykc5eU9pQWtaM0psWlc1Y2JpQWdJQ0FnSUcxaGNtZHBiam9nTUNBeWNIaGNibHh1SUNBZ0lDWTZiblJvTFdOb2FXeGtLRE1wWEc1Y2JpQWdJQ0FnSUNZNllXWjBaWEpjYmlBZ0lDQWdJQ0FnWTI5dWRHVnVkRG9nSnlBblhHNWNiaUFnSmw5ZmJHbHVhMXh1SUNBZ0lHTnZiRzl5T2lBa1kyaGhjbU52WVd4Y2JpQWdJQ0JrYVhOd2JHRjVPaUJwYm14cGJtVXRZbXh2WTJ0Y2JpQWdJQ0J3WVdSa2FXNW5PaUF3SUM0MWNtVnRYRzVjYmlBZ0lDQW1PbWh2ZG1WeVhHNGdJQ0FnSUNCamIyeHZjam9nSkdkeVpXVnVYRzRpTENJdkx5Qm9aV0ZrWlhJZ2MybDZaVnh1SkdobFlXUmxjaTFvWldsbmFIUXRVem9nTlRCd2VGeHVKR2hsWVdSbGNpMW9aV2xuYUhRdFREb2dPREJ3ZUZ4dVhHNHZMeUJPWVhacFoyRjBhVzl1SUhOcGVtVmNiaVJ1WVhZdGQybGtkR2d0VXpvZ01qWXdjSGhjYmx4dUx5OGdVMlZoY21Ob0lITnBlbVZjYmlSelpXRnlZMmd0YUdWcFoyaDBMVk02SURVd2NIaGNiaVJ6WldGeVkyZ3RhR1ZwWjJoMExVdzZJREV5TUhCNFhHNWNiaTh2SUhvdGFXNWtaWGhjYmlSaVpXeHZkeTFqYjI1MFpXNTBPaUF4WEc0a1kyOXVkR1Z1ZERvZ01seHVKR0ZpYjNabExXTnZiblJsYm5RNklETmNibHh1THk5Y2JpQWdYQ0p3YUc5dVpWd2lPaUF6TWpCd2VDeGNiaUFnWENKMFlXSnNaWFJjSWpvZ056WTRjSGdzWEc0Z0lGd2laR1Z6YTNSdmNGd2lPaUF4TURJMGNIZ3BYRzVjYmx4dUx5OGdZbkpsWVd0d2IybHVkSE5jYmlBZ0pGTTZJRFE0TUhCNFhHNGdJQ1JOT2lBM05qaHdlRnh1SUNBa1REb2dNVEF5TkhCNFhHNGdJQ1J0WVhoTU9pQWtUQ0F0SURGd2VGeHVYRzVjYmk4dlhHNGdJQ3ROVVNodFlYaE1LVnh1SUNBcmJXVmthV0VvWENJOFpHVnphM1J2Y0Z3aUtWeHVYRzR2TDF4dUlDQXJUVkVvVENsY2JpQWdLMjFsWkdsaEtGd2lQbVJsYzJ0MGIzQmNJaWxjYmx4dVhHNHZMeUJ6ZFhCbGNpQnNhV2RvZENCbmNtbGtJQzBnYVhRZ2QyOXlhM01nZDJsMGFDQjBhR1VnTG1Oa0xXTnZiblJoYVc1bGNpQmpiR0Z6Y3lCcGJuTnBaR1VnYzNSNWJHVXVjMk56YzF4dVhHNDlZMjlzZFcxdUtDUndaWEpqWlc1MFlXZGxMQ0FrWm14dllYUXRaR2x5WldOMGFXOXVPaUJzWldaMEtWeHVJQ0IzYVdSMGFEb2dNVEF3SlNBcUlDUndaWEpqWlc1MFlXZGxYRzRnSUdac2IyRjBPaUFrWm14dllYUXRaR2x5WldOMGFXOXVYRzVjYmoxamJHVmhjbVpwZUZ4dUlDQW1PbUZtZEdWeVhHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY0lseHVJQ0FnSUdScGMzQnNZWGs2SUhSaFlteGxYRzRnSUNBZ1kyeGxZWEk2SUdKdmRHaGNibHh1THlvZ0xTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmlBcVhHNGdLbEJ5YVcxaGNua2djM1I1YkdWY2JpQXFYRzRnS2kwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRYRzVjYm1KdlpIbGNiaUFnSzIxbFpHbGhLRndpUEdSbGMydDBiM0JjSWlsY2JpQWdJQ0F2THlCc1lYbHZkWFFnYldsNGFXNXpJR2x1YzJsa1pTQndZWEowYVdGc2N5QStJRjlzWVhsdmRYUXVjMk56YzF4dUlDQWdJQ1l1Ym1GMkxXOXVMV3hsWm5RdWIzWmxjbVpzYjNjdGFHbGtaR1Z1WEc0Z0lDQWdJQ0J2ZG1WeVpteHZkem9nYUdsa1pHVnVYRzVjYm1sdWNIVjBXM1I1Y0dVOVhDSnpaV0Z5WTJoY0lsMDZPaTF0Y3kxamJHVmhjbHh1SUNBdktpQnlaVzF2ZG1WeklHTnNiM05sSUdsamIyNGdMU0JKUlZ4dUlDQmthWE53YkdGNU9pQnViMjVsWEc1Y2JtbHVjSFYwVzNSNWNHVTlYQ0p6WldGeVkyaGNJbDA2T2kxM1pXSnJhWFF0YzJWaGNtTm9MV1JsWTI5eVlYUnBiMjRzWEc1cGJuQjFkRnQwZVhCbFBWd2ljMlZoY21Ob1hDSmRPam90ZDJWaWEybDBMWE5sWVhKamFDMWpZVzVqWld3dFluVjBkRzl1TEZ4dWFXNXdkWFJiZEhsd1pUMWNJbk5sWVhKamFGd2lYVG82TFhkbFltdHBkQzF6WldGeVkyZ3RjbVZ6ZFd4MGN5MWlkWFIwYjI0c1hHNXBibkIxZEZ0MGVYQmxQVndpYzJWaGNtTm9YQ0pkT2pvdGQyVmlhMmwwTFhObFlYSmphQzF5WlhOMWJIUnpMV1JsWTI5eVlYUnBiMjVjYmlBZ1pHbHpjR3hoZVRvZ2JtOXVaVnh1WEc0dktpQXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFZ4dUlDcGNiaUFxVFdGcGJpQmpiMjF3YjI1bGJuUnpYRzRnS2x4dUlDb3RMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFZ4dVhHNHVZMlF0YldGcGJpMWpiMjUwWlc1MExGeHVMbU5rTFcxaGFXNHRhR1ZoWkdWeVhHNGdJQzhxSUVadmNtTmxJRWhoY21SM1lYSmxJRUZqWTJWc1pYSmhkR2x2YmlCcGJpQlhaV0pMYVhSY2JpQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1ZhS0RBcFhHNGdJSGRwYkd3dFkyaGhibWRsT2lCMGNtRnVjMlp2Y20xY2JseHVJQ0IxYkZ4dUlDQWdJR3hwYzNRdGMzUjViR1U2SUc1dmJtVmNibHh1TG1Oa0xXMWhhVzR0WTI5dWRHVnVkRnh1SUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1WY2JpQWdkSEpoYm5OcGRHbHZiam9nZEhKaGJuTm1iM0p0SURBdU0zTmNibHh1SUNBcmJXVmthV0VvWENJOFpHVnphM1J2Y0Z3aUtWeHVJQ0FnSUNZdWJtRjJMV2x6TFhacGMybGliR1ZjYmlBZ0lDQWdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsV0NndEpHNWhkaTEzYVdSMGFDMVRLVnh1WEc0Z0lDQWdMbTVoZGkxdmJpMXNaV1owSUNZdWJtRjJMV2x6TFhacGMybGliR1ZjYmlBZ0lDQWdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsV0Nna2JtRjJMWGRwWkhSb0xWTXBYRzVjYmk1alpDMXRZV2x1TFdobFlXUmxjbHh1SUNCbWIyNTBMV1poYldsc2VUb2dKSE5sY21sbVhHNGdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVnh1SUNCMGNtRnVjMmwwYVc5dU9pQjBjbUZ1YzJadmNtMGdNQzR6YzF4dVhHNGdJQ3R0WldScFlTaGNJanhrWlhOcmRHOXdYQ0lwWEc0Z0lDQWdKaTV1WVhZdGFYTXRkbWx6YVdKc1pWeHVJQ0FnSUNBZ0x5OTBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaVmdvTFNSdVlYWXRkMmxrZEdndFV5bGNiaUFnSUNBZ0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxXQ2d3S1Z4dVhHNGdJQ0FnTG01aGRpMXZiaTFzWldaMElDWXVibUYyTFdsekxYWnBjMmxpYkdWY2JpQWdJQ0FnSUhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbFdDZ2tibUYyTFhkcFpIUm9MVk1wWEc1Y2JpNWpaQzF0WVdsdUxXTnZiblJsYm5SY2JpQWdMeTlEU0VGT1IwVkVYRzRnSUM4dlltRmphMmR5YjNWdVpEb2dKR05zYjNWa1hHNGdJRzFwYmkxb1pXbG5hSFE2SURFd01IWm9YRzRnSUhvdGFXNWtaWGc2SUNSamIyNTBaVzUwWEc1Y2JpNWpaQzF0WVdsdUxXaGxZV1JsY2x4dUlDQm9aV2xuYUhRNklDUm9aV0ZrWlhJdGFHVnBaMmgwTFZOY2JpQWdZbUZqYTJkeWIzVnVaRG9nSkhkb2FYUmxYRzRnSUhvdGFXNWtaWGc2SUNSaFltOTJaUzFqYjI1MFpXNTBYRzVjYmlBZ0x5OURTRUZPUjBWRVhHNGdJQzh2WW05NExYTm9ZV1J2ZHpvZ01DQXhjSGdnTlhCNElISm5ZbUVvTVRBd0xERXdNQ3d4TURBc0lDNDFLVnh1SUNCaWIzSmtaWEl0WW05MGRHOXRPaUF4Y0hnZ2MyOXNhV1FnSkdOc2IzVmtYRzVjYmlBZ0xtNWhkaTFwY3kxbWFYaGxaQ0FtWEc0Z0lDQWdMeW9nWVdSa0lDNXVZWFl0YVhNdFptbDRaV1FnWTJ4aGMzTWdkRzhnWW05a2VTQnBaaUI1YjNVZ2QyRnVkQ0JoSUdacGVHVmtJRzVoZG1sbllYUnBiMjRnYjI0Z1BpQXhNREkwY0hoY2JpQWdJQ0J3YjNOcGRHbHZiam9nWm1sNFpXUmNiaUFnSUNCMGIzQTZJREJjYmlBZ0lDQnNaV1owT2lBd1hHNGdJQ0FnZDJsa2RHZzZJREV3TUNWY2JseHVJQ0FyYldWa2FXRW9YQ0krWkdWemEzUnZjRndpS1Z4dUlDQWdJR2hsYVdkb2REb2dKR2hsWVdSbGNpMW9aV2xuYUhRdFRGeHVJQ0FnSUN0amJHVmhjbVpwZUZ4dVhHNHVZMlF0Ykc5bmIxeHVJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1ZjYmlBZ2RHOXdPaUF4TW5CNFhHNGdJR3hsWm5RNklEVWxYRzVjYmlBZ2FXMW5YRzRnSUNBZ1pHbHpjR3hoZVRvZ1lteHZZMnRjYmx4dUlDQXJiV1ZrYVdFb1hDSThaR1Z6YTNSdmNGd2lLVnh1SUNBZ0lDNXVZWFl0YjI0dGJHVm1kQ0FtWEc0Z0lDQWdJQ0JzWldaME9pQmhkWFJ2WEc0Z0lDQWdJQ0J5YVdkb2REb2dOU1ZjYmx4dUlDQXJiV1ZrYVdFb1hDSStaR1Z6YTNSdmNGd2lLVnh1SUNBZ0lIUnZjRG9nTWpad2VGeHVJQ0FnSUd4bFpuUTZJRFJsYlZ4dVhHNHVZMlF0YUdWaFpHVnlMV0oxZEhSdmJuTmNiaUFnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsWEc0Z0lHUnBjM0JzWVhrNklHbHViR2x1WlMxaWJHOWphMXh1SUNCMGIzQTZJRE53ZUZ4dUlDQnlhV2RvZERvZ05TVmNibHh1SUNCc2FWeHVJQ0FnSUdScGMzQnNZWGs2SUdsdWJHbHVaUzFpYkc5amExeHVYRzRnSUN0dFpXUnBZU2hjSWp4a1pYTnJkRzl3WENJcFhHNGdJQ0FnTG01aGRpMXZiaTFzWldaMElDWmNiaUFnSUNBZ0lISnBaMmgwT2lCaGRYUnZYRzRnSUNBZ0lDQnNaV1owT2lBMUpWeHVJQ0FnSUNBZ2JHbGNiaUFnSUNBZ0lDQWdabXh2WVhRNklISnBaMmgwWEc1Y2JpQWdLMjFsWkdsaEtGd2lQbVJsYzJ0MGIzQmNJaWxjYmlBZ0lDQjBiM0E2SURGeVpXMWNiaUFnSUNCeWFXZG9kRG9nTVhKbGJWeHVYRzR1WTJRdGMyVmhjbU5vTFhSeWFXZG5aWElzWEc0dVkyUXRibUYyTFhSeWFXZG5aWEpjYmlBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabFhHNGdJR1JwYzNCc1lYazZJR0pzYjJOclhHNGdJSGRwWkhSb09pQTBOSEI0WEc0Z0lHaGxhV2RvZERvZ05EUndlRnh1SUNCdmRtVnlabXh2ZHpvZ2FHbGtaR1Z1WEc0Z0lIZG9hWFJsTFhOd1lXTmxPaUJ1YjNkeVlYQmNiaUFnTHlvZ2FHbGtaU0IwWlhoMFhHNGdJR052Ykc5eU9pQjBjbUZ1YzNCaGNtVnVkRnh1SUNCNkxXbHVaR1Y0T2lBa1lXSnZkbVV0WTI5dWRHVnVkRnh1WEc0dVkyUXRjMlZoY21Ob0xYUnlhV2RuWlhKY2JpQWdKam82WW1WbWIzSmxMQ0FtT2pwaFpuUmxjbHh1SUNBZ0lDOHFJSE5sWVhKamFDQnBZMjl1WEc0Z0lDQWdZMjl1ZEdWdWREb2dKeWRjYmlBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVmNiaUFnSUNCMGNtRnVjMmwwYVc5dU9pQnZjR0ZqYVhSNUlEQXVNM05jYmlBZ0lDQXZLaUJHYjNKalpTQklZWEprZDJGeVpTQkJZMk5sYkdWeVlYUnBiMjRnYVc0Z1YyVmlTMmwwWEc0Z0lDQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1ZhS0RBcFhHNGdJQ0FnWW1GamEyWmhZMlV0ZG1semFXSnBiR2wwZVRvZ2FHbGtaR1Z1WEc1Y2JpQWdKam82WW1WbWIzSmxYRzRnSUNBZ0x5b2diR1Z1YzF4dUlDQWdJSFJ2Y0RvZ01URndlRnh1SUNBZ0lHeGxablE2SURFeGNIaGNiaUFnSUNCM2FXUjBhRG9nTVRod2VGeHVJQ0FnSUdobGFXZG9kRG9nTVRod2VGeHVJQ0FnSUdKdmNtUmxjaTF5WVdScGRYTTZJRFV3SlZ4dUlDQWdJR0p2Y21SbGNqb2dNM0I0SUhOdmJHbGtJQ1J1YVdkb2RHZHlaV1Z1WEc1Y2JpQWdKam82WVdaMFpYSmNiaUFnSUNBdktpQm9ZVzVrYkdWY2JpQWdJQ0JvWldsbmFIUTZJRE53ZUZ4dUlDQWdJSGRwWkhSb09pQTRjSGhjYmlBZ0lDQmlZV05yWjNKdmRXNWtPaUFrYm1sbmFIUm5jbVZsYmx4dUlDQWdJR0p2ZEhSdmJUb2dNVFJ3ZUZ4dUlDQWdJSEpwWjJoME9pQXhNWEI0WEc0Z0lDQWdkSEpoYm5ObWIzSnRPaUJ5YjNSaGRHVW9ORFZrWldjcFhHNGdJSE53WVc1Y2JpQWdJQ0F2S2lCamIyNTBZV2x1WlhJZ1ptOXlJSFJvWlNCWUlHbGpiMjVjYmlBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVmNiaUFnSUNCb1pXbG5hSFE2SURFd01DVmNiaUFnSUNCM2FXUjBhRG9nTVRBd0pWeHVJQ0FnSUhSdmNEb2dNRnh1SUNBZ0lHeGxablE2SURCY2JpQWdjM0JoYmpvNlltVm1iM0psTENCemNHRnVPanBoWm5SbGNseHVJQ0FnSUM4cUlHTnNiM05sSUdsamIyNWNiaUFnSUNCamIyNTBaVzUwT2lBbkoxeHVJQ0FnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlZ4dUlDQWdJR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYTF4dUlDQWdJR2hsYVdkb2REb2dNM0I0WEc0Z0lDQWdkMmxrZEdnNklESXljSGhjYmlBZ0lDQjBiM0E2SURVd0pWeHVJQ0FnSUcxaGNtZHBiaTEwYjNBNklDMHljSGhjYmlBZ0lDQnNaV1owT2lBMU1DVmNiaUFnSUNCdFlYSm5hVzR0YkdWbWREb2dMVEV4Y0hoY2JpQWdJQ0JpWVdOclozSnZkVzVrT2lBa2JtbG5hSFJuY21WbGJseHVJQ0FnSUc5d1lXTnBkSGs2SURCY2JpQWdJQ0F2S2lCR2IzSmpaU0JJWVhKa2QyRnlaU0JCWTJObGJHVnlZWFJwYjI0Z2FXNGdWMlZpUzJsMFhHNGdJQ0FnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWYUtEQXBYRzRnSUNBZ1ltRmphMlpoWTJVdGRtbHphV0pwYkdsMGVUb2dhR2xrWkdWdVhHNGdJQ0FnZEhKaGJuTnBkR2x2YmpvZ2IzQmhZMmwwZVNBd0xqTnpMQ0IwY21GdWMyWnZjbTBnTUM0emMxeHVYRzRnSUhOd1lXNDZPbUpsWm05eVpWeHVJQ0FnSUhSeVlXNXpabTl5YlRvZ2NtOTBZWFJsS0RRMVpHVm5LVnh1WEc0Z0lITndZVzQ2T21GbWRHVnlYRzRnSUNBZ2RISmhibk5tYjNKdE9pQnliM1JoZEdVb0xUUTFaR1ZuS1Z4dVhHNGdJQ1l1YzJWaGNtTm9MV2x6TFhacGMybGliR1ZjYmlBZ0lDQW1PanBpWldadmNtVXNJQ1k2T21GbWRHVnlYRzRnSUNBZ0lDQXZLaUJvYVdSbElITmxZWEpqYUNCcFkyOXVYRzRnSUNBZ0lDQnZjR0ZqYVhSNU9pQXdYRzRnSUNBZ2MzQmhiam82WW1WbWIzSmxMQ0J6Y0dGdU9qcGhablJsY2x4dUlDQWdJQ0FnTHlvZ2MyaHZkeUJqYkc5elpTQnBZMjl1WEc0Z0lDQWdJQ0J2Y0dGamFYUjVPaUF4WEc0Z0lDQWdjM0JoYmpvNlltVm1iM0psWEc0Z0lDQWdJQ0IwY21GdWMyWnZjbTA2SUhKdmRHRjBaU2d4TXpWa1pXY3BYRzRnSUNBZ2MzQmhiam82WVdaMFpYSmNiaUFnSUNBZ0lIUnlZVzV6Wm05eWJUb2djbTkwWVhSbEtEUTFaR1ZuS1Z4dVhHNHVZMlF0Ym1GMkxYUnlhV2RuWlhKY2JpQWdjM0JoYml3Z2MzQmhiam82WW1WbWIzSmxMQ0J6Y0dGdU9qcGhablJsY2x4dUlDQWdJQzhxSUdoaGJXSjFjbWRsY2lCcFkyOXVJR2x1SUVOVFUxeHVJQ0FnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlZ4dUlDQWdJR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYTF4dUlDQWdJR2hsYVdkb2REb2dNM0I0WEc0Z0lDQWdkMmxrZEdnNklESTBjSGhjYmlBZ0lDQmlZV05yWjNKdmRXNWtPaUFrYm1sbmFIUm5jbVZsYmx4dUlDQnpjR0Z1WEc0Z0lDQWdMeW9nYkdsdVpTQnBiaUIwYUdVZ1kyVnVkR1Z5WEc0Z0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxYRzRnSUNBZ2RHOXdPaUExTUNWY2JpQWdJQ0J5YVdkb2REb2dNVEJ3ZUZ4dUlDQWdJRzFoY21kcGJpMTBiM0E2SUMweWNIaGNiaUFnSUNCMGNtRnVjMmwwYVc5dU9pQmlZV05yWjNKdmRXNWtJREF1TTNNZ01DNHpjMXh1SUNCemNHRnVPanBpWldadmNtVXNJSE53WVc0Nk9tRm1kR1Z5WEc0Z0lDQWdMeW9nYjNSb1pYSWdNaUJzYVc1bGMxeHVJQ0FnSUdOdmJuUmxiblE2SUNjblhHNGdJQ0FnY21sbmFIUTZJREJjYmlBZ0lDQXZLaUJHYjNKalpTQklZWEprZDJGeVpTQkJZMk5sYkdWeVlYUnBiMjRnYVc0Z1YyVmlTMmwwWEc0Z0lDQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1ZhS0RBcFhHNGdJQ0FnWW1GamEyWmhZMlV0ZG1semFXSnBiR2wwZVRvZ2FHbGtaR1Z1WEc0Z0lDQWdkSEpoYm5ObWIzSnRMVzl5YVdkcGJqb2dNQ1VnTlRBbFhHNGdJQ0FnZEhKaGJuTnBkR2x2YmpvZ2RISmhibk5tYjNKdElEQXVNM01nTUM0emMxeHVJQ0J6Y0dGdU9qcGlaV1p2Y21WY2JpQWdJQ0F2S2lCdFpXNTFJR2xqYjI0Z2RHOXdJR3hwYm1WY2JpQWdJQ0IwYjNBNklDMDJjSGhjYmlBZ2MzQmhiam82WVdaMFpYSmNiaUFnSUNBdktpQnRaVzUxSUdsamIyNGdZbTkwZEc5dElHeHBibVZjYmlBZ0lDQjBiM0E2SURad2VGeHVJQ0FtTG01aGRpMXBjeTEyYVhOcFlteGxYRzRnSUNBZ2MzQmhibHh1SUNBZ0lDQWdMeW9nYUdsa1pTQnNhVzVsSUdsdUlIUm9aU0JqWlc1MFpYSmNiaUFnSUNBZ0lHSmhZMnRuY205MWJtUTZJSEpuWW1Fb0pHNXBaMmgwWjNKbFpXNHNJREFwWEc0Z0lDQWdjM0JoYmpvNlltVm1iM0psTENCemNHRnVPanBoWm5SbGNseHVJQ0FnSUNBZ0x5b2dhMlZsY0NCMmFYTnBZbXhsSUc5MGFHVnlJRElnYkdsdVpYTmNiaUFnSUNBZ0lHSmhZMnRuY205MWJtUTZJSEpuWW1Fb0pHNXBaMmgwWjNKbFpXNHNJREVwWEc0Z0lDQWdjM0JoYmpvNlltVm1iM0psWEc0Z0lDQWdJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlZnb05IQjRLU0IwY21GdWMyeGhkR1ZaS0MwemNIZ3BJSEp2ZEdGMFpTZzBOV1JsWnlsY2JpQWdJQ0J6Y0dGdU9qcGhablJsY2x4dUlDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWWUtEUndlQ2tnZEhKaGJuTnNZWFJsV1NneWNIZ3BJSEp2ZEdGMFpTZ3RORFZrWldjcFhHNGdJQ3R0WldScFlTaGNJajVrWlhOcmRHOXdYQ0lwWEc0Z0lDQWdaR2x6Y0d4aGVUb2dibTl1WlZ4dVhHNWNiaTVqWkMxd2NtbHRZWEo1TFc1aGRpeGNiaTVqWkMxd2NtbHRZWEo1TFc1aGRpQjFiRnh1SUNCd2IzTnBkR2x2YmpvZ1ptbDRaV1JjYmlBZ2RHOXdPaUF3WEc0Z0lISnBaMmgwT2lBd1hHNGdJR2hsYVdkb2REb2dNVEF3SlZ4dUlDQjNhV1IwYURvZ0pHNWhkaTEzYVdSMGFDMVRYRzRnSUdKaFkydG5jbTkxYm1RNklDUnVhV2RvZEdkeVpXVnVYRzRnSUc5MlpYSm1iRzkzT2lCaGRYUnZYRzRnSUMxM1pXSnJhWFF0YjNabGNtWnNiM2N0YzJOeWIyeHNhVzVuT2lCMGIzVmphRnh1SUNCNkxXbHVaR1Y0T2lBa1ltVnNiM2N0WTI5dWRHVnVkRnh1WEc0Z0lDOHFJRVp2Y21ObElFaGhjbVIzWVhKbElFRmpZMlZzWlhKaGRHbHZiaUJwYmlCWFpXSkxhWFJjYmlBZ2RISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVmFLREFwWEc0Z0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxXQ2d3S1Z4dUlDQjBjbUZ1YzJsMGFXOXVPaUIwY21GdWMyWnZjbTBnTUM0emMxeHVYRzRnSUdGY2JpQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amExeHVJQ0FnSUdadmJuUXRjMmw2WlRvZ01TNHljbVZ0WEc0Z0lDQWdhR1ZwWjJoME9pQTFNSEI0WEc0Z0lDQWdiR2x1WlMxb1pXbG5hSFE2SURVd2NIaGNiaUFnSUNCd1lXUmthVzVuT2lBd0lESXdjSGhjYmlBZ0lDQmpiMnh2Y2pvZ0pIZG9hWFJsWEc0Z0lDQWdMWGRsWW10cGRDMW1iMjUwTFhOdGIyOTBhR2x1WnpvZ1lXNTBhV0ZzYVdGelpXUmNiaUFnSUNBdGJXOTZMVzl6ZUMxbWIyNTBMWE50YjI5MGFHbHVaem9nWjNKaGVYTmpZV3hsWEc0Z0lDQWdiM1psY21ac2IzYzZJR2hwWkdSbGJseHVJQ0FnSUhSbGVIUXRiM1psY21ac2IzYzZJR1ZzYkdsd2MybHpYRzRnSUNBZ2QyaHBkR1V0YzNCaFkyVTZJRzV2ZDNKaGNGeHVJQ0FnSUdKdmNtUmxjaTFpYjNSMGIyMDZJREZ3ZUNCemIyeHBaQ0JzYVdkb2RHVnVLQ1J1YVdkb2RHZHlaV1Z1TENBMUpTbGNiaUFnSUNCMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpWb29NQ2xjYmlBZ0lDQjNhV3hzTFdOb1lXNW5aVG9nZEhKaGJuTm1iM0p0TENCdmNHRmphWFI1WEc0Z0lDQWdkSEpoYm5OcGRHbHZiam9nZEhKaGJuTm1iM0p0SURBdU0zTXNJRzl3WVdOcGRIa2dNQzR6YzF4dVhHNGdJQ1l1YVhNdGFHbGtaR1Z1WEc0Z0lDQWdMeW9nYzJWamIyNWtZWEo1SUc1aGRtbG5ZWFJwYjI1eklHaHBaR1JsYmlCaWVTQmtaV1poZFd4MFhHNGdJQ0FnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWWUtERXdNQ1VwWEc1Y2JpQWdKaTV0YjNabGN5MXZkWFFnUGlCc2FTQStJR0ZjYmlBZ0lDQXZLaUJ3ZFhOb0lIUm9aU0J1WVhacFoyRjBhVzl1SUdsMFpXMXpJSFJ2SUhSb1pTQnNaV1owSUMwZ1lXNWtJR3h2ZDJWeUlHUnZkMjRnYjNCaFkybDBlU0F0SUhkb1pXNGdjMlZqYjI1a1lYSjVJRzVoZGlCemJHbGtaWE1nYVc1Y2JpQWdJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlZnb0xURXdNQ1VwWEc0Z0lDQWdiM0JoWTJsMGVUb2dNRnh1WEc0cmJXVmthV0VvWENJOFpHVnphM1J2Y0Z3aUtWeHVJQ0F1Ym1GMkxXOXVMV3hsWm5RZ0xtTmtMWEJ5YVcxaGNua3RibUYyTEZ4dUlDQXVibUYyTFc5dUxXeGxablFnTG1Oa0xYQnlhVzFoY25rdGJtRjJJSFZzWEc0Z0lDQWdjbWxuYUhRNklHRjFkRzljYmlBZ0lDQnNaV1owT2lBd1hHNWNibHh1TG1Oa0xYQnlhVzFoY25rdGJtRjJYRzRnSUM1elpXVXRZV3hzSUdGY2JpQWdJQ0F2S2lCa2FXWm1aWEpsYm5RZ2MzUjViR1VnWm05eUlIUm9aU0JUWldVZ1lXeHNJR0oxZEhSdmJpQnZiaUJ0YjJKcGJHVWdZVzVrSUhSaFlteGxkRnh1SUNBZ0lHTnZiRzl5T2lBa1ozSmxaVzVjYmx4dUlDQXVZMlF0Ym1GMkxXZGhiR3hsY25rZ0xtTmtMVzVoZGkxcGRHVnRMRnh1SUNBdVkyUXRibUYyTFdsamIyNXpJQzVqWkMxdVlYWXRhWFJsYlZ4dUlDQWdJQzhxSUdsMFpXMXpJSGRwZEdnZ2NHbGpkSFZ5WlNBb2IzSWdhV052YmlrZ1lXNWtJSFJwZEd4bFhHNGdJQ0FnYUdWcFoyaDBPaUE0TUhCNFhHNGdJQ0FnYkdsdVpTMW9aV2xuYUhRNklEZ3djSGhjYmx4dUlDQWdJR2d6WEc0Z0lDQWdJQ0J2ZG1WeVpteHZkem9nYUdsa1pHVnVYRzRnSUNBZ0lDQjBaWGgwTFc5MlpYSm1iRzkzT2lCbGJHeHBjSE5wYzF4dVhHNGdJQzVqWkMxdVlYWXRaMkZzYkdWeWVTQXVZMlF0Ym1GMkxXbDBaVzFjYmlBZ0lDQndZV1JrYVc1bkxXeGxablE2SURrd2NIaGNibHh1SUNBZ0lHbHRaMXh1SUNBZ0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxYRzRnSUNBZ0lDQmthWE53YkdGNU9pQmliRzlqYTF4dUlDQWdJQ0FnYUdWcFoyaDBPaUEwTUhCNFhHNGdJQ0FnSUNCM2FXUjBhRG9nWVhWMGIxeHVJQ0FnSUNBZ2JHVm1kRG9nTWpCd2VGeHVJQ0FnSUNBZ2RHOXdPaUExTUNWY2JpQWdJQ0FnSUcxaGNtZHBiaTEwYjNBNklDMHlNSEI0WEc1Y2JpQWdMbU5rTFc1aGRpMXBZMjl1Y3lBdVkyUXRibUYyTFdsMFpXMWNiaUFnSUNCd1lXUmthVzVuTFd4bFpuUTZJRGMxY0hoY2JseHVJQ0FnSUhCY2JpQWdJQ0FnSUdOdmJHOXlPaUFrYm1sbmFIUm5jbVZsYmx4dUlDQWdJQ0FnWm05dWRDMXphWHBsT2lBeExqTnlaVzFjYmlBZ0lDQWdJQzhxSUdocFpHVWdaR1Z6WTNKcGNIUnBiMjRnYjI0Z2MyMWhiR3dnWkdWMmFXTmxjMXh1SUNBZ0lDQWdaR2x6Y0d4aGVUb2dibTl1WlZ4dVhHNGdJQ0FnSmpvNlltVm1iM0psWEc0Z0lDQWdJQ0F2S2lCcGRHVnRJR2xqYjI1Y2JpQWdJQ0FnSUdOdmJuUmxiblE2SUNjblhHNGdJQ0FnSUNCa2FYTndiR0Y1T2lCaWJHOWphMXh1SUNBZ0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxYRzRnSUNBZ0lDQnNaV1owT2lBeU1IQjRYRzRnSUNBZ0lDQjBiM0E2SURVd0pWeHVJQ0FnSUNBZ2JXRnlaMmx1TFhSdmNEb2dMVEl3Y0hoY2JpQWdJQ0FnSUhkcFpIUm9PaUEwTUhCNFhHNGdJQ0FnSUNCb1pXbG5hSFE2SURRd2NIaGNiaUFnSUNBZ0lHSmhZMnRuY205MWJtUXRjbVZ3WldGME9pQnVieTF5WlhCbFlYUmNiaUFnSUNBZ0lHSmhZMnRuY205MWJtUXRjRzl6YVhScGIyNDZJR05sYm5SbGNpQmpaVzUwWlhKY2JpQWdJQ0FnSUdKaFkydG5jbTkxYm1RdGMybDZaVG9nTkRCd2VDQTBNSEI0WEc1Y2JpQWdJQ0FtTG1sMFpXMHRNVG82WW1WbWIzSmxYRzRnSUNBZ0lDQmlZV05yWjNKdmRXNWtMV2x0WVdkbE9pQjFjbXdvWENJdmFXMWhaMlZ6TDJ4cGJtVXRhV052YmkweExuTjJaMXdpS1Z4dUlDQWdJQ1l1YVhSbGJTMHlPanBpWldadmNtVmNiaUFnSUNBZ0lHSmhZMnRuY205MWJtUXRhVzFoWjJVNklIVnliQ2hjSWk5cGJXRm5aWE12YkdsdVpTMXBZMjl1TFRJdWMzWm5YQ0lwWEc0Z0lDQWdKaTVwZEdWdExUTTZPbUpsWm05eVpWeHVJQ0FnSUNBZ1ltRmphMmR5YjNWdVpDMXBiV0ZuWlRvZ2RYSnNLRndpTDJsdFlXZGxjeTlzYVc1bExXbGpiMjR0TXk1emRtZGNJaWxjYmlBZ0lDQW1MbWwwWlcwdE5EbzZZbVZtYjNKbFhHNGdJQ0FnSUNCaVlXTnJaM0p2ZFc1a0xXbHRZV2RsT2lCMWNtd29YQ0l2YVcxaFoyVnpMMnhwYm1VdGFXTnZiaTAwTG5OMloxd2lLVnh1SUNBZ0lDWXVhWFJsYlMwMU9qcGlaV1p2Y21WY2JpQWdJQ0FnSUdKaFkydG5jbTkxYm1RdGFXMWhaMlU2SUhWeWJDaGNJaTlwYldGblpYTXZiR2x1WlMxcFkyOXVMVFV1YzNablhDSXBYRzRnSUNBZ0ppNXBkR1Z0TFRZNk9tSmxabTl5WlZ4dUlDQWdJQ0FnWW1GamEyZHliM1Z1WkMxcGJXRm5aVG9nZFhKc0tGd2lMMmx0WVdkbGN5OXNhVzVsTFdsamIyNHROaTV6ZG1kY0lpbGNiaUFnSUNBbUxtbDBaVzB0TnpvNlltVm1iM0psWEc0Z0lDQWdJQ0JpWVdOclozSnZkVzVrTFdsdFlXZGxPaUIxY213b1hDSXZhVzFoWjJWekwyeHBibVV0YVdOdmJpMDNMbk4yWjF3aUtWeHVJQ0FnSUNZdWFYUmxiUzA0T2pwaVpXWnZjbVZjYmlBZ0lDQWdJR0poWTJ0bmNtOTFibVF0YVcxaFoyVTZJSFZ5YkNoY0lpOXBiV0ZuWlhNdmJHbHVaUzFwWTI5dUxUZ3VjM1puWENJcFhHNWNiaUFnSzIxbFpHbGhLRndpUEdSbGMydDBiM0JjSWlsY2JpQWdJQ0F2S2lCaWVTQmtaV1poZFd4MElDNWpaQzF3Y21sdFlYSjVMVzVoZGlCcGN5Qm9hV1JrWlc0Z0xTQjBjbWxqYXlCbWIzSWdhVTlUSUdSbGRtbGpaWE1nZDJobGNtVWdlVzkxSUdOaGJpQnpaV1VnZEdobElHNWhkbWxuWVhScGIyNGdhV1lnZVc5MUlIQjFiR3dnWkc5M2JseHVJQ0FnSUhacGMybGlhV3hwZEhrNklHaHBaR1JsYmx4dUlDQWdJSFJ5WVc1emFYUnBiMjQ2SUhacGMybGlhV3hwZEhrZ01ITWdNQzR6YzF4dUlDQWdJQ1l1Ym1GMkxXbHpMWFpwYzJsaWJHVmNiaUFnSUNBZ0lIWnBjMmxpYVd4cGRIazZJSFpwYzJsaWJHVmNiaUFnSUNBZ0lIUnlZVzV6YVhScGIyNDZJSFpwYzJsaWFXeHBkSGtnTUhNZ01ITmNibHh1SzIxbFpHbGhLRndpUG1SbGMydDBiM0JjSWlsY2JseHVJQ0F1WTJRdGNISnBiV0Z5ZVMxdVlYWmNiaUFnSUNCd2IzTnBkR2x2YmpvZ2MzUmhkR2xqWEc0Z0lDQWdjR0ZrWkdsdVp6b2dNQ0ExTUhCNElEQWdNRnh1SUNBZ0lHaGxhV2RvZERvZ1lYVjBiMXh1SUNBZ0lIZHBaSFJvT2lBeE1EQWxYRzRnSUNBZ0x5OW1iRzloZERvZ2NtbG5hSFJjYmlBZ0lDQnZkbVZ5Wm14dmR6b2dkbWx6YVdKc1pWeHVJQ0FnSUdKaFkydG5jbTkxYm1RNklIUnlZVzV6Y0dGeVpXNTBYRzRnSUNBZ2RHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeVhHNWNiaUFnSUNBclkyeGxZWEptYVhoY2JseHVJQ0FnSUNZdWJXOTJaWE10YjNWMElENGdiR2tnUGlCaFhHNGdJQ0FnSUNBdktpQnlaWE5sZENCdGIySnBiR1VnYzNSNWJHVmNiaUFnSUNBZ0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxXQ2d3S1Z4dUlDQWdJQ0FnYjNCaFkybDBlVG9nTVZ4dVhHNGdJQ0FnZFd4Y2JpQWdJQ0FnSUhCdmMybDBhVzl1T2lCemRHRjBhV05jYmlBZ0lDQWdJR2hsYVdkb2REb2dZWFYwYjF4dUlDQWdJQ0FnZDJsa2RHZzZJR0YxZEc5Y2JpQWdJQ0FnSUdKaFkydG5jbTkxYm1RNklIUnlZVzV6Y0dGeVpXNTBYRzRnSUNBZ0lDQnZkbVZ5Wm14dmR6b2dkbWx6YVdKc1pWeHVJQ0FnSUNBZ2RHVjRkQzFoYkdsbmJqb2diR1ZtZEZ4dUlDQWdJQ0FnZWkxcGJtUmxlRG9nSkdGaWIzWmxMV052Ym5SbGJuUmNibHh1SUNBZ0lDQWdKaTVwY3kxb2FXUmtaVzVjYmlBZ0lDQWdJQ0FnTHlvZ2NtVnpaWFFnYlc5aWFXeGxJSE4wZVd4bFhHNGdJQ0FnSUNBZ0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxXQ2d3S1Z4dVhHNGdJQ0FnSUNBbUxtMXZkbVZ6TFc5MWRDQStJR3hwSUQ0Z1lWeHVJQ0FnSUNBZ0lDQXZLaUJ5WlhObGRDQnRiMkpwYkdVZ2MzUjViR1ZjYmlBZ0lDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWWUtEQXBYRzRnSUNBZ0lDQWdJRzl3WVdOcGRIazZJREZjYmx4dUlDQWdJQzh2Vkc5d0lHNWhkaUJwZEdWdGMxeHVJQ0FnSUQ0Z2JHbGNiaUFnSUNBZ0lHUnBjM0JzWVhrNklHbHViR2x1WlMxaWJHOWphMXh1SUNBZ0lDQWdMeTltYkc5aGREb2diR1ZtZEZ4dUlDQWdJQ0FnYldGeVoybHVMV3hsWm5RNklDNDFjbVZ0WEc1Y2JpQWdJQ0ErSUd4cElENGdZVnh1SUNBZ0lDQWdMeW9nYldGcGJpQnVZWFpwWjJGMGFXOXVJR0oxZEhSdmJuTWdjM1I1YkdWY2JpQWdJQ0FnSUhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlZ4dUlDQWdJQ0FnWkdsemNHeGhlVG9nYVc1c2FXNWxMV0pzYjJOclhHNGdJQ0FnSUNCb1pXbG5hSFE2SUNSb1pXRmtaWEl0YUdWcFoyaDBMVXhjYmlBZ0lDQWdJR3hwYm1VdGFHVnBaMmgwT2lBa2FHVmhaR1Z5TFdobGFXZG9kQzFNWEc0Z0lDQWdJQ0J3WVdSa2FXNW5PaUF3WEc0Z0lDQWdJQ0JqYjJ4dmNqb2dKRzVwWjJoMFozSmxaVzVjYmlBZ0lDQWdJRzkyWlhKbWJHOTNPaUIyYVhOcFlteGxYRzRnSUNBZ0lDQmliM0prWlhJdFltOTBkRzl0T2lCdWIyNWxYRzRnSUNBZ0lDQjBjbUZ1YzJsMGFXOXVPaUJqYjJ4dmNpQXdMak56TENCaWIzZ3RjMmhoWkc5M0lEQXVNM05jYmx4dUlDQWdJQ0FnSmpwb2IzWmxjbHh1SUNBZ0lDQWdJQ0JqYjJ4dmNqb2dKR2R5WldWdVhHNGdJQ0FnSUNBbUxuTmxiR1ZqZEdWa1hHNGdJQ0FnSUNBZ0lHTnZiRzl5T2lBa1ozSmxaVzVjYmlBZ0lDQWdJQ0FnWW05NExYTm9ZV1J2ZHpvZ2FXNXpaWFFnTUNBdE1uQjRJREFnSkdkeVpXVnVYRzVjYmlBZ0lDQXVaMjh0WW1GamF5d2dMbk5sWlMxaGJHeGNiaUFnSUNBZ0lHUnBjM0JzWVhrNklHNXZibVZjYmx4dUlDQWdJQzVqWkMxelpXTnZibVJoY25rdGJtRjJMRnh1SUNBZ0lDNWpaQzF1WVhZdFoyRnNiR1Z5ZVN4Y2JpQWdJQ0F1WTJRdGJtRjJMV2xqYjI1elhHNGdJQ0FnSUNBdktpQmtjbTl3Wkc5M2JpQnRaVzUxSUhOMGVXeGxYRzRnSUNBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVmNiaUFnSUNBZ0lIUnZjRG9nSkdobFlXUmxjaTFvWldsbmFIUXRURnh1SUNBZ0lDQWdMeTkzYVdSMGFEb2dNVEF3ZG5kY2JpQWdJQ0FnSUhkcFpIUm9PaUF4TURBbFhHNGdJQ0FnSUNCaVlXTnJaM0p2ZFc1a09pQWtkMmhwZEdWY2JpQWdJQ0FnSUM4dlEwaEJUa2RGUkZ4dUlDQWdJQ0FnTHk5d1lXUmthVzVuT2lBME9IQjRJRFkwY0hnZ01UTXdjSGhjYmlBZ0lDQWdJSEJoWkdScGJtYzZJREp5WlcxY2JpQWdJQ0FnSUdKdmVDMXphR0ZrYjNjNklHbHVjMlYwSURBZ01YQjRJREFnSkdOc2IzVmtMQ0F3SUROd2VDQTJjSGdnY21kaVlTZ2pNREF3TENBd0xqQTFLVnh1SUNBZ0lDQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1ZZS0RBcFhHNGdJQ0FnSUNBclkyeGxZWEptYVhoY2JseHVJQ0FnSUNBZ2RISmhibk5wZEdsdmJqb2diM0JoWTJsMGVTQXVNM01nTUhNc0lIWnBjMmxpYVd4cGRIa2dNSE1nTUhOY2JseHVJQ0FnSUNBZ0ppNXBjeTFvYVdSa1pXNWNiaUFnSUNBZ0lDQWdiM0JoWTJsMGVUb2dNRnh1SUNBZ0lDQWdJQ0IyYVhOcFltbHNhWFI1T2lCb2FXUmtaVzVjYmlBZ0lDQWdJQ0FnZEhKaGJuTnBkR2x2YmpvZ2IzQmhZMmwwZVNBdU0zTWdNSE1zSUhacGMybGlhV3hwZEhrZ01ITWdMak56WEc1Y2JpQWdJQ0FnSUQ0Z0xuTmxaUzFoYkd4Y2JpQWdJQ0FnSUNBZ0x5b2dkR2hwY3lCcGN5QjBhR1VnUWtsSElGTmxaU0JoYkd3Z1luVjBkRzl1SUdGMElIUm9aU0JpYjNSMGIyMGdiMllnZEdobElHUnliM0JrYjNkdUlHMWxiblZjYmlBZ0lDQWdJQ0FnWkdsemNHeGhlVG9nWW14dlkydGNiaUFnSUNBZ0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxYRzRnSUNBZ0lDQWdJR3hsWm5RNklEQmNiaUFnSUNBZ0lDQWdZbTkwZEc5dE9pQXdYRzRnSUNBZ0lDQWdJR2hsYVdkb2REb2dPREJ3ZUZ4dUlDQWdJQ0FnSUNCM2FXUjBhRG9nTVRBd0pWeHVJQ0FnSUNBZ0lDQnZkbVZ5Wm14dmR6b2dhR2xrWkdWdVhHNGdJQ0FnSUNBZ0lDOHFJSEpsYzJWMElITnZiV1VnYVc1b1pYSnBkR1ZrSUhOMGVXeGxYRzRnSUNBZ0lDQWdJRzFoY21kcGJqb2dNRnh1SUNBZ0lDQWdJQ0J3WVdSa2FXNW5PaUF3WEc1Y2JpQWdJQ0FnSUNBZ1lWeHVJQ0FnSUNBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVnh1SUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUF4TURBbFhHNGdJQ0FnSUNBZ0lDQWdhR1ZwWjJoME9pQXhNREFsWEc0Z0lDQWdJQ0FnSUNBZ2RHOXdPaUF3WEc0Z0lDQWdJQ0FnSUNBZ2JHVm1kRG9nTUZ4dUlDQWdJQ0FnSUNBZ0lHWnZiblF0YzJsNlpUb2dNaTR5Y21WdFhHNGdJQ0FnSUNBZ0lDQWdabTl1ZEMxM1pXbG5hSFE2SUdKdmJHUmNiaUFnSUNBZ0lDQWdJQ0IwWlhoMExXRnNhV2R1T2lCalpXNTBaWEpjYmlBZ0lDQWdJQ0FnSUNCc2FXNWxMV2hsYVdkb2REb2dPREJ3ZUZ4dUlDQWdJQ0FnSUNBZ0lHSnZjbVJsY2kxMGIzQTZJREZ3ZUNCemIyeHBaQ0FrWTJ4dmRXUmNiaUFnSUNBZ0lDQWdJQ0F2S2lCeVpYTmxkQ0J6YjIxbElHbHVhR1Z5YVhSbFpDQnpkSGxzWlZ4dUlDQWdJQ0FnSUNBZ0lHSnZjbVJsY2kxaWIzUjBiMjA2SUc1dmJtVmNiaUFnSUNBZ0lDQWdJQ0J0WVhKbmFXNDZJREJjYmlBZ0lDQWdJQ0FnSUNCd1lXUmthVzVuT2lBd1hHNGdJQ0FnSUNBZ0lDQWdkSEpoYm5OcGRHbHZiam9nWTI5c2IzSWdNQzR5Y3l3Z1ltRmphMmR5YjNWdVpDQXdMakp6TENCaWIzSmtaWElnTUM0eWMxeHVYRzRnSUNBZ0lDQWdJQ0FnSmpwb2IzWmxjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1ltRmphMmR5YjNWdVpEb2dKRzVwWjJoMFozSmxaVzVjYmlBZ0lDQWdJQ0FnSUNBZ0lHSnZjbVJsY2kxamIyeHZjam9nSkc1cFoyaDBaM0psWlc1Y2JpQWdJQ0FnSUNBZ0lDQWdJR052Ykc5eU9pQWtkMmhwZEdWY2JseHVJQ0FnSUM1alpDMXpaV052Ym1SaGNua3RibUYyWEc1Y2JpQWdJQ0FnSUQ0Z2JHbGNiaUFnSUNBZ0lDQWdMeW9nWTJoaGJtZGxJSFJvWlNCb1pXbG5hSFFnWVdOamIzSmthVzVuSUhSdklIbHZkWElnYm1WbFpITWdMU0I1YjNVZ1kyRnVJR1YyWlc0Z2MyVjBJR2hsYVdkb2REb2dZWFYwYjF4dUlDQWdJQ0FnSUNCb1pXbG5hSFE2SURNME1IQjRYRzRnSUNBZ0lDQWdJQzhxSUdobGNtVWdlVzkxSUhObGRDQjBhR1VnYm5WdFltVnlJRzltSUdOdmJIVnRibk1nTFNCMWMyVWdkMmxrZEdnZ2NHVnlZMlZ1ZEdGblpWeHVJQ0FnSUNBZ0lDQXJZMjlzZFcxdUtEQXVNak1wWEc0Z0lDQWdJQ0FnSUM4dklITmxaU0J3WVhKMGFXRnNjeUErSUY5c1lYbHZkWFF1YzJOemMxeHVJQ0FnSUNBZ0lDQnRZWEpuYVc0dGNtbG5hSFE2SURJdU5qWWxYRzRnSUNBZ0lDQWdJR0p2Y21SbGNpMXlhV2RvZERvZ01YQjRJSE52Ykdsa0lDUmpiRzkxWkZ4dUlDQWdJQ0FnSUNCdmRtVnlabXh2ZHpvZ2FHbGtaR1Z1WEc0Z0lDQWdJQ0FnSUc5MlpYSm1iRzkzTFhnNklHaHBaR1JsYmx4dUlDQWdJQ0FnSUNCdmRtVnlabXh2ZHkxNU9pQmhkWFJ2WEc0Z0lDQWdJQ0FnSUMxM1pXSnJhWFF0YjNabGNtWnNiM2N0YzJOeWIyeHNhVzVuT2lCMGIzVmphRnh1WEc0Z0lDQWdJQ0FnSUNZNmJuUm9MV05vYVd4a0tEUnVLeklwWEc0Z0lDQWdJQ0FnSUNBZ0x5b2dLeklnWW1WallYVnpaU0IzWlNCb1lYWmxJRElnYkdsemRDQnBkR1Z0Y3lCM2FYUm9JR1JwYzNCc1lYazZibTl1WlZ4dUlDQWdJQ0FnSUNBZ0lHMWhjbWRwYmkxeWFXZG9kRG9nTUZ4dUlDQWdJQ0FnSUNBZ0lHSnZjbVJsY2kxeWFXZG9kRG9nYm05dVpWeHVYRzRnSUNBZ0lDQWdJRDRnWVZ4dUlDQWdJQ0FnSUNBZ0lDOHFJSE5sWTI5dVpHRnllU0J1WVhZZ2RHbDBiR1ZjYmlBZ0lDQWdJQ0FnSUNCamIyeHZjam9nSkdkeVpXVnVYRzRnSUNBZ0lDQWdJQ0FnWm05dWRDMTNaV2xuYUhRNklHSnZiR1JjYmlBZ0lDQWdJQ0FnSUNCbWIyNTBMWE5wZW1VNklERXVObkpsYlZ4dUlDQWdJQ0FnSUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2SUM0MlpXMWNibHh1SUNBZ0lDQWdZVnh1SUNBZ0lDQWdJQ0JvWldsbmFIUTZJRE13Y0hoY2JpQWdJQ0FnSUNBZ2JHbHVaUzFvWldsbmFIUTZJRE13Y0hoY2JpQWdJQ0FnSUNBZ2NHRmtaR2x1WnpvZ01DQXhPQ1VnTUNBd1hHNGdJQ0FnSUNBZ0lHTnZiRzl5T2lBa2JtbG5hSFJuY21WbGJseHVJQ0FnSUNBZ0lDQmliM0prWlhJdFltOTBkRzl0T2lCdWIyNWxYRzRnSUNBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTVM0MGNtVnRYRzVjYmlBZ0lDQWdJQ0FnSmpwb2IzWmxjbHh1SUNBZ0lDQWdJQ0FnSUdOdmJHOXlPaUFrWjNKbFpXNWNibHh1SUNBZ0lDQWdkV3hjYmlBZ0lDQWdJQ0FnTHlvZ1JtOXlZMlVnU0dGeVpIZGhjbVVnUVdOalpXeGxjbUYwYVc5dUlHbHVJRmRsWWt0cGRGeHVJQ0FnSUNBZ0lDQjBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaVm9vTUNsY2JseHVJQ0FnSUNBZ2RXd2dkV3hjYmlBZ0lDQWdJQ0FnTHlvZ2RHVnlkR2xoY25rZ2JtRjJhV2RoZEdsdmJseHVJQ0FnSUNBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVmNiaUFnSUNBZ0lDQWdkRzl3T2lBd1hHNGdJQ0FnSUNBZ0lHeGxablE2SURCY2JpQWdJQ0FnSUNBZ2FHVnBaMmgwT2lBeE1EQWxYRzRnSUNBZ0lDQWdJSGRwWkhSb09pQXhNREFsWEc1Y2JpQWdJQ0FnSUNBZ0ppNXBjeTFvYVdSa1pXNWNiaUFnSUNBZ0lDQWdJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlZnb01UQXdKU2xjYmx4dUlDQWdJQ0FnSUNBdVoyOHRZbUZqYTF4dUlDQWdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yWEc1Y2JpQWdJQ0FnSUNBZ0lDQmhYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyeHZjam9nZEhKaGJuTndZWEpsYm5SY2JseHVJQ0FnSUNBZ0lDQXVjMlZsTFdGc2JGeHVJQ0FnSUNBZ0lDQWdJR1JwYzNCc1lYazZJR0pzYjJOclhHNWNiaUFnSUNBZ0lDNXRiM1psY3kxdmRYUWdQaUJzYVNBK0lHRmNiaUFnSUNBZ0lDQWdMeW9nY0hWemFDQjBhR1VnYm1GMmFXZGhkR2x2YmlCcGRHVnRjeUIwYnlCMGFHVWdiR1ZtZENBdElHRnVaQ0JzYjNkbGNpQmtiM2R1SUc5d1lXTnBkSGtnTFNCM2FHVnVJSFJsY25ScFlYSjVJRzVoZGlCemJHbGtaWE1nYVc1Y2JpQWdJQ0FnSUNBZ2RISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVllLQzB4TURBbEtWeHVYRzRnSUNBZ0xtTmtMVzVoZGkxbllXeHNaWEo1WEc0Z0lDQWdJQ0JpYjNndGMyaGhaRzkzT2lBd0lEVndlQ0ExY0hnZ2NtZGlZU2d4TURBc01UQXdMREV3TUN3dU15bGNibHh1SUNBZ0lDQWdiR2xjYmlBZ0lDQWdJQ0FnTHlvZ2MyVjBJR2hsY21VZ2JuVnRZbVZ5SUc5bUlHTnZiSFZ0Ym5NZ0xTQjFjMlVnZDJsa2RHZ2djR1Z5WTJWdWRHRm5aVnh1SUNBZ0lDQWdJQ0F2THl0amIyeDFiVzRvTUM0eU1pbGNiaUFnSUNBZ0lDQWdMeTl0WVhKbmFXNDZJREFnTkNVZ05EQndlQ0F3WEc1Y2JpQWdJQ0FnSUNBZ1pteHZZWFE2SUd4bFpuUmNiaUFnSUNBZ0lDQWdkMmxrZEdnNklESTFKVnh1SUNBZ0lDQWdJQ0J3WVdSa2FXNW5PaUF4Y21WdFhHNWNiaUFnSUNBZ0lDQWdKanB1ZEdndFkyaHBiR1FvTkc0ck1pbGNiaUFnSUNBZ0lDQWdJQ0F2S2lBck1pQmlaV05oZFhObElIZGxJR2hoZG1VZ2RIZHZJR0ZrWkdsMGFXOXVZV3dnYkdsemRDQnBkR1Z0Y3lCM2FYUm9JR1JwYzNCc1lYazZibTl1WlZ4dUlDQWdJQ0FnSUNBZ0lDOHZiV0Z5WjJsdUxYSnBaMmgwT2lBd1hHNWNiaUFnSUNBZ0lDNWpaQzF1WVhZdGFYUmxiVnh1SUNBZ0lDQWdJQ0JpYjNKa1pYSXRZbTkwZEc5dE9pQnViMjVsWEc0Z0lDQWdJQ0FnSUhCaFpHUnBibWM2SURCY2JpQWdJQ0FnSUNBZ2FHVnBaMmgwT2lCaGRYUnZYRzRnSUNBZ0lDQWdJR3hwYm1VdGFHVnBaMmgwT2lBeExqSmNibHh1SUNBZ0lDQWdJQ0JwYldkY2JpQWdJQ0FnSUNBZ0lDQndiM05wZEdsdmJqb2djM1JoZEdsalhHNGdJQ0FnSUNBZ0lDQWdiV0Z5WjJsdUxYUnZjRG9nTUZ4dUlDQWdJQ0FnSUNBZ0lHaGxhV2RvZERvZ1lYVjBiMXh1SUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUF4TURBbFhHNGdJQ0FnSUNBZ0lDQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ0xqWnlaVzFjYmx4dUlDQWdJQ0FnSUNCb00xeHVJQ0FnSUNBZ0lDQWdJR052Ykc5eU9pQWtaM0psWlc1Y2JpQWdJQ0FnSUNBZ0lDQm1iMjUwTFhkbGFXZG9kRG9nWW05c1pGeHVJQ0FnSUNBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTGpseVpXMWNiaUFnSUNBZ0lDQWdJQ0J3WVdSa2FXNW5PaUF3SUM0MGNtVnRYRzVjYmlBZ0lDQXVZMlF0Ym1GMkxXbGpiMjV6WEc1Y2JpQWdJQ0FnSUd4cFhHNGdJQ0FnSUNBZ0lDOHFJSE5sZENCb1pYSmxJRzUxYldKbGNpQnZaaUJqYjJ4MWJXNXpJQzBnZFhObElIZHBaSFJvSUhCbGNtTmxiblJoWjJWY2JpQWdJQ0FnSUNBZ0syTnZiSFZ0Ymlnd0xqTXlLVnh1SUNBZ0lDQWdJQ0J0WVhKbmFXNDZJREFnTWlVZ01qQndlQ0F3WEc0Z0lDQWdJQ0FnSUNZNmJuUm9MV05vYVd4a0tETnVLeklwWEc0Z0lDQWdJQ0FnSUNBZ0x5b2dLeklnWW1WallYVnpaU0IzWlNCb1lYWmxJSFIzYnlCaFpHUnBkR2x2Ym1Gc0lHeHBjM1FnYVhSbGJYTWdkMmwwYUNCa2FYTndiR0Y1T201dmJtVmNiaUFnSUNBZ0lDQWdJQ0J0WVhKbmFXNHRjbWxuYUhRNklEQmNiaUFnSUNBZ0lDNWpaQzF1WVhZdGFYUmxiVnh1SUNBZ0lDQWdJQ0JpYjNKa1pYSXRZbTkwZEc5dE9pQnViMjVsWEc0Z0lDQWdJQ0FnSUdobGFXZG9kRG9nT0RCd2VGeHVJQ0FnSUNBZ0lDQnNhVzVsTFdobGFXZG9kRG9nTVM0eVhHNGdJQ0FnSUNBZ0lIQmhaR1JwYm1jNklESTBjSGdnTUNBd0lEZzFjSGhjYmlBZ0lDQWdJQ0FnSmpwb2IzWmxjbHh1SUNBZ0lDQWdJQ0FnSUdKaFkydG5jbTkxYm1RNklHeHBaMmgwWlc0b0pHTnNiM1ZrTENBNEpTbGNiaUFnSUNBZ0lDQWdhRE5jYmlBZ0lDQWdJQ0FnSUNCamIyeHZjam9nSkdkeVpXVnVYRzRnSUNBZ0lDQWdJQ0FnWm05dWRDMTNaV2xuYUhRNklHSnZiR1JjYmlBZ0lDQWdJQ0FnY0Z4dUlDQWdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yWEc0Z0lDQWdJQ0FnSUNZNk9tSmxabTl5WlZ4dUlDQWdJQ0FnSUNBZ0lHeGxablE2SURJMWNIaGNibHh1WEc0dWFHRnpMV05vYVd4a2NtVnVJRDRnWVN3Z0xtZHZMV0poWTJzZ1lWeHVJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVZjYmlBZ0pqbzZZbVZtYjNKbExDQW1PanBoWm5SbGNseHVJQ0FnSUM4cUlHRnljbTkzSUdsamIyNGdhVzRnUTFOVElDMGdabTl5SUdWc1pXMWxiblFnZDJsMGFDQnVaWE4wWldRZ2RXNXZjbVJsY21Wa0lHeHBjM1J6WEc0Z0lDQWdZMjl1ZEdWdWREb2dKeWRjYmlBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVmNiaUFnSUNCMGIzQTZJRFV3SlZ4dUlDQWdJRzFoY21kcGJpMTBiM0E2SUMweGNIaGNiaUFnSUNCa2FYTndiR0Y1T2lCcGJteHBibVV0WW14dlkydGNiaUFnSUNCb1pXbG5hSFE2SURKd2VGeHVJQ0FnSUhkcFpIUm9PaUF4TUhCNFhHNGdJQ0FnWW1GamEyZHliM1Z1WkRvZ2JHbG5hSFJsYmlna2JtbG5hSFJuY21WbGJpd2dNVEFsS1Z4dVhHNGdJQ0FnWW1GamEyWmhZMlV0ZG1semFXSnBiR2wwZVRvZ2FHbGtaR1Z1WEc0Z0lDWTZPbUpsWm05eVpWeHVJQ0FnSUhSeVlXNXpabTl5YlRvZ2NtOTBZWFJsS0RRMVpHVm5LVnh1SUNBbU9qcGhablJsY2x4dUlDQWdJSFJ5WVc1elptOXliVG9nY205MFlYUmxLQzAwTldSbFp5bGNiaUFnSzIxbFpHbGhLRndpUG1SbGMydDBiM0JjSWlsY2JpQWdJQ0FtT2pwaVpXWnZjbVVzSUNZNk9tRm1kR1Z5WEc0Z0lDQWdJQ0JpWVdOclozSnZkVzVrT2lCa1lYSnJaVzRvSkdOc2IzVmtMQ0F4TUNVcFhHNGdJQ0FnSmpwb2IzWmxjam82WW1WbWIzSmxMQ0FtT21odmRtVnlPanBoWm5SbGNseHVJQ0FnSUNBZ1ltRmphMmR5YjNWdVpEb2dKR2R5WldWdVhHNWNiaTVvWVhNdFkyaHBiR1J5Wlc0Z1BpQmhYRzRnSUhCaFpHUnBibWN0Y21sbmFIUTZJRFF3Y0hoY2JpQWdKam82WW1WbWIzSmxMQ0FtT2pwaFpuUmxjbHh1SUNBZ0lDOHFJR0Z5Y205M0lHZHZaWE1nYjI0Z2RHaGxJSEpwWjJoMElITnBaR1VnTFNCamFHbHNaSEpsYmlCdVlYWnBaMkYwYVc5dVhHNGdJQ0FnY21sbmFIUTZJREl3Y0hoY2JpQWdJQ0IwY21GdWMyWnZjbTB0YjNKcFoybHVPaUE1Y0hnZ05UQWxYRzVjYmk1alpDMXdjbWx0WVhKNUxXNWhkaUF1WjI4dFltRmpheUJoWEc0Z0lIQmhaR1JwYm1jdGJHVm1kRG9nTkRCd2VGeHVJQ0FtT2pwaVpXWnZjbVVzSUNZNk9tRm1kR1Z5WEc0Z0lDQWdMeW9nWVhKeWIzY2daMjlsY3lCdmJpQjBhR1VnYkdWbWRDQnphV1JsSUMwZ1oyOGdZbUZqYXlCaWRYUjBiMjVjYmlBZ0lDQnNaV1owT2lBeU1IQjRYRzRnSUNBZ2RISmhibk5tYjNKdExXOXlhV2RwYmpvZ01YQjRJRFV3SlZ4dVhHNHJiV1ZrYVdFb1hDSStaR1Z6YTNSdmNGd2lLVnh1SUNBdWFHRnpMV05vYVd4a2NtVnVJRDRnWVZ4dUlDQWdJQ1k2T21KbFptOXlaU3dnSmpvNllXWjBaWEpjYmlBZ0lDQWdJSEpwWjJoME9pQXhOU1ZjYmlBZ0xtTmtMWEJ5YVcxaGNua3RibUYySUQ0Z0xtaGhjeTFqYUdsc1pISmxiaUErSUdGY2JpQWdJQ0F2S2lCdFlXbHVJRzVoZG1sbllYUnBiMjRnWVhKeWIzZHpJRzl1SUd4aGNtZGxjaUJrWlhacFkyVnpYRzRnSUNBZ2NHRmtaR2x1WnkxeWFXZG9kRG9nTXpCd2VDQWhhVzF3YjNKMFlXNTBYRzRnSUNBZ0pqbzZZbVZtYjNKbExDQW1PanBoWm5SbGNseHVJQ0FnSUNBZ2QybGtkR2c2SURsd2VGeHVJQ0FnSUNBZ2RISmhibk5tYjNKdExXOXlhV2RwYmpvZ05UQWxJRFV3SlZ4dUlDQWdJQ0FnWW1GamEyZHliM1Z1WkRvZ1pHRnlhMlZ1S0NSamJHOTFaQ3dnTVRBbEtWeHVYRzRnSUNBZ0lDQmlZV05yWm1GalpTMTJhWE5wWW1sc2FYUjVPaUJvYVdSa1pXNWNiaUFnSUNBZ0lIUnlZVzV6YVhScGIyNDZJSGRwWkhSb0lEQXVNM01zSUhSeVlXNXpabTl5YlNBd0xqTnpYRzRnSUNBZ0pqbzZZbVZtYjNKbFhHNGdJQ0FnSUNCeWFXZG9kRG9nTVRKd2VGeHVJQ0FnSUNZNk9tRm1kR1Z5WEc0Z0lDQWdJQ0J5YVdkb2REb2dOM0I0WEc0Z0lDQWdKaTV6Wld4bFkzUmxaRG82WW1WbWIzSmxMQ0FtTG5ObGJHVmpkR1ZrT2pwaFpuUmxjbHh1SUNBZ0lDQWdkMmxrZEdnNklERTBjSGhjYmlBZ0lDQW1Mbk5sYkdWamRHVmtPanBpWldadmNtVmNiaUFnSUNBZ0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxXQ2cxY0hncElISnZkR0YwWlNndE5EVmtaV2NwWEc0Z0lDQWdKaTV6Wld4bFkzUmxaRG82WVdaMFpYSmNiaUFnSUNBZ0lIUnlZVzV6Wm05eWJUb2djbTkwWVhSbEtEUTFaR1ZuS1Z4dUlDQXVZMlF0YzJWamIyNWtZWEo1TFc1aGRpQStJQzVvWVhNdFkyaHBiR1J5Wlc0Z1BpQmhPanBpWldadmNtVXNJQzVqWkMxelpXTnZibVJoY25rdGJtRjJJRDRnTG1oaGN5MWphR2xzWkhKbGJpQStJR0U2T21GbWRHVnlYRzRnSUNBZ0x5b2djbVZ0YjNabElHRnljbTkzY3lCdmJpQnpaV052Ym1SaGNua2dibUYySUhScGRHeGxjMXh1SUNBZ0lHUnBjM0JzWVhrNklHNXZibVZjYmlBZ0xtTmtMWEJ5YVcxaGNua3RibUYySUM1bmJ5MWlZV05ySUdGY2JpQWdJQ0J3WVdSa2FXNW5MV3hsWm5RNklESXdjSGhjYmlBZ0lDQW1PanBpWldadmNtVXNJQ1k2T21GbWRHVnlYRzRnSUNBZ0lDQnNaV1owT2lBeGNIaGNibHh1WEc1Y2JseHVMbU5rTFhObFlYSmphRnh1SUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdWY2JpQWdhR1ZwWjJoME9pQWtjMlZoY21Ob0xXaGxhV2RvZEMxVFhHNGdJSGRwWkhSb09pQXhNREFsWEc0Z0lIUnZjRG9nSkdobFlXUmxjaTFvWldsbmFIUXRVMXh1SUNCc1pXWjBPaUF3WEc0Z0lIb3RhVzVrWlhnNklDUmhZbTkyWlMxamIyNTBaVzUwWEc0Z0lHOXdZV05wZEhrNklEQmNiaUFnZG1semFXSnBiR2wwZVRvZ2FHbGtaR1Z1WEc0Z0lIUnlZVzV6YVhScGIyNDZJRzl3WVdOcGRIa2dMak56SURCekxDQjJhWE5wWW1sc2FYUjVJREJ6SUM0emMxeHVYRzRnSUdadmNtMWNiaUFnSUNCb1pXbG5hSFE2SURFd01DVmNiaUFnSUNCM2FXUjBhRG9nTVRBd0pWeHVYRzRnSUdsdWNIVjBYRzRnSUNBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTUZ4dUlDQWdJR0p2Y21SbGNqb2dibTl1WlZ4dUlDQWdJR0poWTJ0bmNtOTFibVE2SUNSM2FHbDBaVnh1SUNBZ0lHWnZiblF0Wm1GdGFXeDVPaUJ6WlhKcFpseHVJQ0FnSUdobGFXZG9kRG9nTVRBd0pWeHVJQ0FnSUhkcFpIUm9PaUF4TURBbFhHNGdJQ0FnWm05dWRDMXphWHBsT2lBeWNtVnRYRzRnSUNBZ2NHRmtaR2x1WnpvZ01DQTFKVnh1SUNBZ0lDOHZZbTk0TFhOb1lXUnZkem9nYVc1elpYUWdNQ0F4Y0hnZ01DQWtZMnh2ZFdRc0lEQWdNM0I0SURad2VDQnlaMkpoS0NNd01EQXNJREF1TURVcFhHNGdJQ0FnWVhCd1pXRnlZVzVqWlRvZ2JtOXVaVnh1WEc0Z0lDQWdKam82TFhkbFltdHBkQzFwYm5CMWRDMXdiR0ZqWldodmJHUmxjaXhjYmlBZ0lDQW1Pam90Ylc5NkxYQnNZV05sYUc5c1pHVnlMRnh1SUNBZ0lDWTZMVzF6TFdsdWNIVjBMWEJzWVdObGFHOXNaR1Z5WEc0Z0lDQWdJQ0JqYjJ4dmNqb2daR0Z5YTJWdUtDUmpiRzkxWkN3Z01UQWxLVnh1WEc0Z0lDQWdKanBtYjJOMWMxeHVJQ0FnSUNBZ2IzVjBiR2x1WlRvZ2JtOXVaVnh1WEc0Z0lDWXVhWE10ZG1semFXSnNaVnh1SUNBZ0lHOXdZV05wZEhrNklERmNiaUFnSUNCMmFYTnBZbWxzYVhSNU9pQjJhWE5wWW14bFhHNGdJQ0FnZEhKaGJuTnBkR2x2YmpvZ2IzQmhZMmwwZVNBdU0zTWdNSE1zSUhacGMybGlhV3hwZEhrZ01ITWdNSE5jYmlBZ0lDQXZMMkp2ZUMxemFHRmtiM2M2SURGd2VDQXhjSGdnTlhCNElISm5ZbUVvTVRBd0xERXdNQ3d4TURBc0lDNDFLVnh1WEc0Z0lDNXVZWFl0YVhNdFptbDRaV1FnSmx4dUlDQWdJSEJ2YzJsMGFXOXVPaUJtYVhobFpGeHVYRzRnSUN0dFpXUnBZU2hjSWo1a1pYTnJkRzl3WENJcFhHNGdJQ0FnYUdWcFoyaDBPaUFrYzJWaGNtTm9MV2hsYVdkb2RDMU1YRzRnSUNBZ2RHOXdPaUFrYUdWaFpHVnlMV2hsYVdkb2RDMU1YRzVjYmlBZ0lDQnBibkIxZEZ4dUlDQWdJQ0FnWW05NExYTnBlbWx1WnpvZ1ltOXlaR1Z5TFdKdmVGeHVJQ0FnSUNBZ1ltOXlaR1Z5T2lCdWIyNWxYRzRnSUNBZ0lDQmpiMnh2Y2pvZ0pHZHlaV1Z1WEc0Z0lDQWdJQ0JtYjI1MExXWmhiV2xzZVRvZ2MyVnlhV1pjYmlBZ0lDQWdJSEJoWkdScGJtYzZJREFnTW5KbGJWeHVJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQXpMakp5WlcxY2JseHVYRzR1WTJRdGIzWmxjbXhoZVZ4dUlDQXZLaUJ6YUdGa2IzY2diR0Y1WlhJZ2RtbHphV0pzWlNCM2FHVnVJRzVoZG1sbllYUnBiMjRnYVhNZ1lXTjBhWFpsWEc0Z0lIQnZjMmwwYVc5dU9pQm1hWGhsWkZ4dUlDQjZMV2x1WkdWNE9pQXlYRzRnSUdobGFXZG9kRG9nTVRBd0pWeHVJQ0IzYVdSMGFEb2dNVEF3SlZ4dUlDQjBiM0E2SURCY2JpQWdiR1ZtZERvZ01GeHVJQ0JqZFhKemIzSTZJSEJ2YVc1MFpYSmNiaUFnTHk5aVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCeVoySmhLQ1JuY21WbGJpd2dNQzQ0S1Z4dUlDQjJhWE5wWW1sc2FYUjVPaUJvYVdSa1pXNWNiaUFnYjNCaFkybDBlVG9nTUZ4dUlDQmlZV05yWm1GalpTMTJhWE5wWW1sc2FYUjVPaUJvYVdSa1pXNWNiaUFnZEhKaGJuTnBkR2x2YmpvZ2IzQmhZMmwwZVNBd0xqTnpJREJ6TENCMmFYTnBZbWxzYVhSNUlEQnpJREF1TTNNc0lIUnlZVzV6Wm05eWJTQXdMak56SURCelhHNWNiaUFnSmk1cGN5MTJhWE5wWW14bFhHNGdJQ0FnYjNCaFkybDBlVG9nTVZ4dUlDQWdJSFpwYzJsaWFXeHBkSGs2SUhacGMybGliR1ZjYmlBZ0lDQjBjbUZ1YzJsMGFXOXVPaUJ2Y0dGamFYUjVJREF1TTNNZ01ITXNJSFpwYzJsaWFXeHBkSGtnTUhNZ01ITXNJSFJ5WVc1elptOXliU0F3TGpOeklEQnpYRzVjYmlBZ0syMWxaR2xoS0Z3aVBHUmxjMnQwYjNCY0lpbGNiaUFnSUNBbUxtbHpMWFpwYzJsaWJHVmNiaUFnSUNBZ0lDOHZkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1ZZS0Mwa2JtRjJMWGRwWkhSb0xWTXBYRzRnSUNBZ0lDQjBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaVmdvTUNsY2JseHVJQ0FnSUM1dVlYWXRiMjR0YkdWbWRDQW1MbWx6TFhacGMybGliR1ZjYmlBZ0lDQWdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsV0Nna2JtRjJMWGRwWkhSb0xWTXBYRzVjYmlBZ0lDQW1MbWx6TFhacGMybGliR1V1YzJWaGNtTm9MV2x6TFhacGMybGliR1VzWEc0Z0lDQWdMbTVoZGkxdmJpMXNaV1owSUNZdWFYTXRkbWx6YVdKc1pTNXpaV0Z5WTJndGFYTXRkbWx6YVdKc1pWeHVJQ0FnSUNBZ2RISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVllLREFwWEc1Y2JpOHFJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdFhHNGdLbHh1SUNwemRYQndiM0owSUdadmNpQnVieUJxYzF4dUlDcGNiaUFxTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMWNibHh1TG01dkxXcHpJQzVqWkMxd2NtbHRZWEo1TFc1aGRseHVJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVZjYmlBZ2FHVnBaMmgwT2lCaGRYUnZYRzRnSUhkcFpIUm9PaUF4TURBbFhHNGdJRzkyWlhKbWJHOTNPaUIyYVhOcFlteGxYRzRnSUhacGMybGlhV3hwZEhrNklIWnBjMmxpYkdWY2JpQWdlaTFwYm1SbGVEb2dKR052Ym5SbGJuUmNibHh1TG01dkxXcHpJQzVqWkMxelpXRnlZMmhjYmlBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabFhHNGdJSFJ2Y0RvZ01GeHVJQ0J2Y0dGamFYUjVPaUF4WEc0Z0lIWnBjMmxpYVd4cGRIazZJSFpwYzJsaWJHVmNibHh1SzIxbFpHbGhLRndpUG1SbGMydDBiM0JjSWlsY2JpQWdMbTV2TFdweklDNWpaQzF3Y21sdFlYSjVMVzVoZGx4dUlDQWdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVnh1SUNBZ0lIb3RhVzVrWlhnNklDUmhZbTkyWlMxamIyNTBaVzUwWEc0Z0lDQWdaR2x6Y0d4aGVUb2dhVzVzYVc1bExXSnNiMk5yWEc0Z0lDQWdkMmxrZEdnNklHRjFkRzljYmlBZ0lDQjBiM0E2SURCY2JpQWdJQ0J5YVdkb2REb2dNVFV3Y0hoY2JpQWdJQ0J3WVdSa2FXNW5PaUF3WEc0Z0lDNXVieTFxY3lBdWJtRjJMV2x6TFdacGVHVmtJQzVqWkMxd2NtbHRZWEo1TFc1aGRseHVJQ0FnSUhCdmMybDBhVzl1T2lCbWFYaGxaRnh1SWl3aUxtNWhkaTFtYjI5MFpYSmNibHgwY0dGa1pHbHVaem9nTXpCd2VDQXlNSEI0SURJd2NIaGNibHgwZEdWNGRDMWhiR2xuYmpvZ2JHVm1kRnh1WEc1Y2RDdHRaV1JwWVNoY0lqdzlkR0ZpYkdWMFhDSXBYRzVjZEZ4MFpHbHpjR3hoZVRvZ2JtOXVaVnh1WEc1Y2RDWmZYMmhsWVdScGJtZGNibHgwWEhSbWIyNTBMV1poYldsc2VUb2dKSE5oYm5OY2JseDBYSFJtYjI1MExYTnBlbVU2SURGeVpXMWNibHgwWEhSbWIyNTBMWGRsYVdkb2REb2dKR0p2YkdSY2JseDBYSFJ0WVhKbmFXNHRZbTkwZEc5dE9pQXhjbVZ0WEc1Y2JseDBYSFJoWEc1Y2RGeDBYSFJqYjJ4dmNqb2dKR05vWVhKamIyRnNYRzVjZEZ4MFhIUW1PbWh2ZG1WeVhHNWNkRngwWEhSY2RHTnZiRzl5T2lBa1ozSmxaVzVjYmx4dVhIUW1YMTlzYVc1clhHNWNkRngwWm05dWRDMXphWHBsT2lBeE5IQjRYRzVjYmx4MEpsOWZZbTk0WEc1Y2RGeDBjR0ZrWkdsdVp6b2dNQ0F4TUhCNFhHNWNkRngwZG1WeWRHbGpZV3d0WVd4cFoyNDZJSFJ2Y0Z4dVhHNWNkQ1pmWDJKdmVDMXVZWEp5YjNkY2JseDBYSFJ3WVdSa2FXNW5PaUF3SURFd2NIaGNibHgwWEhSMlpYSjBhV05oYkMxaGJHbG5iam9nZEc5d1hHNWNibHgwSmw5ZlluVjBkRzl1WEc1Y2RGeDBZbTl5WkdWeUxYZHBaSFJvT2lBeGNIaGNibHgwWEhSamIyeHZjam9nSkdkeVpXVnVYRzVjZEZ4MFptOXVkQzF6YVhwbE9pQXVPWEpsYlZ4dVhIUmNkRzFoY21kcGJpMWliM1IwYjIwNklERnlaVzFjYmx4MFhIUndZV1JrYVc1bk9pQXVOWEpsYlNBeGNtVnRYRzVjYmx4dVhIUXZMeUJUZFdJdGJtRjJhV2RoZEdsdmJpd2dkMmhwWTJnZ2FHbGtaWE1nYjI0Z2MyMWhiR3dnYzJsNlpYTmNibHgwSmw5ZmMzVmlMV3hwYm10elhHNWNkRngwWm05dWRDMXphWHBsT2lBeE5IQjRYRzVjYmx4MFhIUmhYRzVjZEZ4MFhIUmpiMnh2Y2pvZ0pHTm9ZWEpqYjJGc1hHNWNkRngwWEhRbU9taHZkbVZ5WEc1Y2RGeDBYSFJjZEdOdmJHOXlPaUFrWjNKbFpXNWNibHh1WEhSY2RHeHBPbTUwYUMxamFHbHNaQ2d4S1Z4dVhIUmNkRngwWm05dWRDMW1ZVzFwYkhrNklDUnpZVzV6WEc1Y2RGeDBYSFJtYjI1MExYTnBlbVU2SURGeVpXMWNibHgwWEhSY2RHWnZiblF0ZDJWcFoyaDBPaUFrWW05c1pGeHVYSFJjZEZ4MGJXRnlaMmx1TFdKdmRIUnZiVG9nTGpWeVpXMWNiaUlzSWk4dlFtRnVibVZ5SUZSaGJHd2dMU0JVYUdseklHbHpJR1p2ZFc1a0lHOXVJSFJvWlNCb2IyMWxjR0ZuWlNCdmJteDVYRzR1WW1GdWJtVnlMWFJoYkd4Y2JpQWdZbUZqYTJkeWIzVnVaQzFwYldGblpUb2dkWEpzS0dsdFlXZGxjeTlpYjJGMExtcHdaeWxjYmlBZ1ltRmphMmR5YjNWdVpDMXdiM05wZEdsdmJqb2dZMlZ1ZEdWeVhHNGdJR0poWTJ0bmNtOTFibVF0YzJsNlpUb2dZMjkyWlhKY2JpQWdhR1ZwWjJoME9pQXlNREJ3ZUZ4dUlDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVmNibHh1SUNBcmJXVmthV0VvWENJK2RHRmliR1YwWENJcFhHNGdJQ0FnYUdWcFoyaDBPaUEwTmpWd2VGeHVYRzVjYmlBZ0psOWZhR1ZoWkd4cGJtVmNiaUFnSUNCaWIzUjBiMjA2SUROeVpXMWNiaUFnSUNCamIyeHZjam9nSkhkb2FYUmxYRzRnSUNBZ1ptOXVkQzFtWVcxcGJIazZJSE5sY21sbVhHNGdJQ0FnWm05dWRDMXphWHBsT2lBMWNtVnRYRzRnSUNBZ1ptOXVkQzEzWldsbmFIUTZJQ1J1YjNKdFlXeGNiaUFnSUNCc1pXWjBPaUF5Y21WdFhHNGdJQ0FnYkdsdVpTMW9aV2xuYUhRNklERmNiaUFnSUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdWY2JpQWdJQ0J0WVhKbmFXNDZJREFnTUNBeGNtVnRJREZ5WlcxY2JpQWdJQ0IwWlhoMExYTm9ZV1J2ZHpvZ01uQjRJREp3ZUNBeWNIZ2dKR05vWVhKamIyRnNYRzVjYmlBZ0lDQXJiV1ZrYVdFb1hDSThkR0ZpYkdWMFhDSXBYRzRnSUNBZ0lDQndiM05wZEdsdmJqb2djM1JoZEdsalhHNGdJQ0FnSUNCbWIyNTBMWE5wZW1VNklESnlaVzFjYmlBZ0lDQWdJSEJoWkdScGJtYzZJREp5WlcxY2JseHVYRzR2THlCQ1lXNXVaWElnVTNSaGJtUmhjbVFnTFNCVWFHbHpJR2x6SUdadmRXNWtJRzl1SUhSb1pTQnRZV3B2Y21sMGVTQnZaaUIwYUdVZ2FXNTBaWEp1WVd3Z2NHRm5aWE5jYmk1aVlXNXVaWEl0YzNSaGJtUmhjbVJjYmlBZ1ltRmphMmR5YjNWdVpEb2dKR2R5WldWdVhHNGdJR052Ykc5eU9pQWtkMmhwZEdWY2JpQWdaR2x6Y0d4aGVUb2dkR0ZpYkdWY2JpQWdhR1ZwWjJoME9pQXpOREJ3ZUZ4dVhHNGdJQ1pmWDJKdmVGeHVJQ0FnSUhCaFpHUnBibWM2SURGeVpXMGdNbkpsYlZ4dVhHNGdJQ1pmWDJobFlXUnBibWRjYmlBZ0lDQmpiMnh2Y2pvZ0pIZG9hWFJsWEc1Y2JpQWdKbDlmZEdWNGRGeHVYRzRnSUNaZlgyMWxaR2xoWEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dKSE5zWVhSbFhHNWNiaUFnTHk4Z1ZFaHBjeUJwY3lCbWIzVnVaQ0J2YmlCMGFHVWdRWEJ3Y205aFkyZ2dVR0ZuWlZ4dUlDQW1YMTl0WldScFlTMWhjSEJ5YjJGamFGeHVJQ0FnSUdKaFkydG5jbTkxYm1RdGFXMWhaMlU2SUhWeWJDZ3VMaTlwYldGblpYTXZiV1ZsZEdsdVp5NXFjR2NwWEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzF3YjNOcGRHbHZiam9nWTJWdWRHVnlYRzRnSUNBZ1ltRmphMmR5YjNWdVpDMXphWHBsT2lCamIzWmxjbHh1WEc0Z0lDQWdLMjFsWkdsaEtGd2lQRDEwWVdKc1pYUmNJaWxjYmlBZ0lDQWdJR2hsYVdkb2REb2dNekF3Y0hoY2JseHVJQ0F2THlCVWFHbHpJR2x6SUdadmRXNWtJRzl1SUhSb1pTQk1aV0ZrWlhKemFHbHdJSEJoWjJWY2JpQWdKbDlmYldWa2FXRXRiR1ZoWkdWeWMyaHBjRnh1SUNBZ0lHSmhZMnRuY205MWJtUXRhVzFoWjJVNklIVnliQ2d1TGk5cGJXRm5aWE12Y0dWdmNHeGxMbXB3WnlsY2JpQWdJQ0JpWVdOclozSnZkVzVrTFhCdmMybDBhVzl1T2lCalpXNTBaWEpjYmlBZ0lDQmlZV05yWjNKdmRXNWtMWE5wZW1VNklHTnZkbVZ5WEc1Y2JpQWdJQ0FyYldWa2FXRW9YQ0k4UFhSaFlteGxkRndpS1Z4dUlDQWdJQ0FnYUdWcFoyaDBPaUF6TURCd2VGeHVYRzR2THlCQ1lXNXVaWElnVUdGdWIzSmhiV0VnTFNCVWFHbHpJR2x6SUdadmRXNWtJRzl1SUhSb1pTQk9aWGR6SUhCaFoyVmNiaTVpWVc1dVpYSXRjR0Z1YjNKaGJXRmNiaUFnWW1GamEyZHliM1Z1WkMxcGJXRm5aVG9nZFhKc0tDNHVMMmx0WVdkbGN5OTBjbVZsY3k1cWNHY3BYRzRnSUdKaFkydG5jbTkxYm1RdGNHOXphWFJwYjI0NklHTmxiblJsY2x4dUlDQmlZV05yWjNKdmRXNWtMWE5wZW1VNklHTnZkbVZ5WEc0Z0lHaGxhV2RvZERvZ01qVTFjSGhjYmlJc0lpNWpZWEprTFdScGNIUnBZMXh1SUNCa2FYTndiR0Y1T2lCMFlXSnNaVnh1SUNCaWIzSmtaWEl0ZEc5d09pQXhjSGdnYzI5c2FXUWdKR0p2Y21SbGNrTnZiRzl5WEc0Z0lHSnZjbVJsY2kxaWIzUjBiMjA2SURGd2VDQnpiMnhwWkNBa1ltOXlaR1Z5UTI5c2IzSmNibHh1SUNBcmNtVnpjRzl1YzJsMlpTMXpkR0ZqYTF4dVhHNGdJQ1pmWDJKdmVGeHVJQ0FnSUdScGMzQnNZWGs2SUhSaFlteGxMV05sYkd4Y2JpQWdJQ0IyWlhKMGFXTmhiQzFoYkdsbmJqb2diV2xrWkd4bFhHNWNiaUFnSUNCd1lXUmthVzVuT2lBeWNtVnRJREZ5WlcxY2JseHVJQ0FnSUN0dFpXUnBZU2hjSWo1MFlXSnNaWFJjSWlsY2JpQWdJQ0FnSUhCaFpHUnBibWM2SURKeVpXMGdNWEpsYlNBeWNtVnRJREp5WlcxY2JseHVJQ0FnSUNZNmJuUm9MV05vYVd4a0tESXBYRzRnSUNBZ0lDQXJiV1ZrYVdFb1hDSStkR0ZpYkdWMFhDSXBYRzRnSUNBZ0lDQWdJR0p2Y21SbGNpMXNaV1owT2lBeGNIZ2djMjlzYVdRZ0pHSnZjbVJsY2tOdmJHOXlYRzRnSUNBZ0lDQWdJSEJoWkdScGJtYzZJREp5WlcwZ01uSmxiU0F5Y21WdElERnlaVzFjYmx4dUlDQW1YMTlvWldGa2FXNW5YRzRnSUNBZ2RHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeVhHNWNiaUFnSmw5ZmJXVmthV0ZjYmlBZ0lDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWtaM0psWlc1Y2JpQWdJQ0JvWldsbmFIUTZJREUxTUhCNFhHNGdJQ0FnYjNabGNtWnNiM2M2SUdocFpHUmxibHh1SUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2SURKeVpXMWNibHh1SUNBbVgxOTBaWGgwWEc0Z0lDQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlYRzRnSUNBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTW5KbGJWeHVYRzRnSUhWc1hHNGdJQ0FnYkdsemRDMXpkSGxzWlRvZ2JtOXVaVnh1SUNBZ0lIUmxlSFF0WVd4cFoyNDZJR05sYm5SbGNseHVYRzRnSUNBZ2JHbGNiaUFnSUNBZ0lHUnBjM0JzWVhrNklHbHViR2x1WlMxaWJHOWphMXh1SUNBZ0lDQWdjR0ZrWkdsdVp6b2dMalZ5WlcxY2JpQWdJQ0FnSUhkcFpIUm9PaUEwTnlWY2JseHVYRzRnSUNaZlgyeHBibXRjYmlBZ0lDQmpiMnh2Y2pvZ0pITnBkR1V0ZEdWNGRDMWpiMnh2Y2kxc2FXNXJYRzRnSUNBZ1pHbHpjR3hoZVRvZ2FXNXNhVzVsTFdKc2IyTnJYRzRnSUNBZ1ptOXVkQzFtWVcxcGJIazZJQ1J6WlhKcFpseHVJQ0FnSUhCaFpHUnBibWM2SURBZ0xqUnlaVzFjYmlBZ0lDQW1PbWh2ZG1WeVhHNGdJQ0FnSUNCamIyeHZjam9nSkhOcGRHVXRkR1Y0ZEMxamIyeHZjaTFzYVc1ckxXaHZkbVZ5WEc1Y2JseHVMeThnUTJGeVpDQkNhVzhnTFNCVWFHVnpaU0JoY21VZ1ptOTFibVFnYjI0Z2RHaGxJRXhsWVdSbGNuTm9hWEFnY0dGblpWeHVMbU5oY21RdFltbHZYRzRnSUhCaFpHUnBibWN0WW05MGRHOXRPaUF5Y21WdFhHNWNiaUFnSzIxbFpHbGhLRndpUEQxMFlXSnNaWFJjSWlsY2JpQWdJQ0JpYjNKa1pYSXRZbTkwZEc5dE9pQXhjSGdnYzI5c2FXUWdKR05zYjNWa1hHNGdJQ0FnYldGeVoybHVMV0p2ZEhSdmJUb2dNbkpsYlZ4dVhHNGdJQ1pmWDIxbFpHbGhYRzVjYmlBZ0lDQXJiV1ZrYVdFb1hDSThQWFJoWW14bGRGd2lLVnh1SUNBZ0lDQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ01YSmxiVnh1SUNBZ0lDQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlYRzVjYmlBZ0lDQnBiV2RjYmlBZ0lDQWdJQ3R0WldScFlTaGNJanc5ZEdGaWJHVjBYQ0lwWEc0Z0lDQWdJQ0FnSUdScGMzQnNZWGs2SUdsdWJHbHVaUzFpYkc5amExeHVJQ0FnSUNBZ0lDQjNhV1IwYURvZ016TWxYRzVjYmlBZ0psOWZZbTk0WEc0Z0lDQWdjR0ZrWkdsdVp5MXNaV1owT2lBeWNtVnRYRzRnSUNBZ2NHRmtaR2x1WnkxMGIzQTZJREJjYmlBZ0lDQjJaWEowYVdOaGJDMWhiR2xuYmpvZ2RHOXdYRzVjYmlBZ0lDQXJiV1ZrYVdFb1hDSThQWFJoWW14bGRGd2lLVnh1SUNBZ0lDQWdjR0ZrWkdsdVp6b2dNRnh1WEc0Z0lDWmZYMmhsWVdScGJtZGNiaUFnSUNBdkwwMXBlR2x1SUdOaGJpQmlaU0JtYjNWdVpDQnBiaUIwZVhCdlozSmhjR2g1WEc0Z0lDQWdLM04wWVc1a1lYSmtMV2hsWVdScGJtY29LVnh1WEc0Z0lDWmZYM04xWW5ScGRHeGxYRzRnSUNBZ1kyOXNiM0k2SUNSbmNtRndhR2wwWlZ4dVhHNGdJQ1pmWDNSbGVIUmNibHh1SUNBZ0lDdHRaV1JwWVNoY0lqdzlkR0ZpYkdWMFhDSXBYRzRnSUNBZ0lDQjBaWGgwTFdGc2FXZHVPaUJzWldaMFhHNWNiaUFnSUNBcUlDc2dLbHh1SUNBZ0lDQWdiV0Z5WjJsdUxYUnZjRG9nTVhKbGJWeHVYRzVjYmk4dklFTmhjbVFnWVhKMGFXTnNaU0F0SUZSb1pYTmxJR0Z5WlNCbWIzVnVaQ0J2YmlCMGFHVWdUbVYzY3lCaGJtUWdTVzV6YVdkb2RITWdjR0ZuWlZ4dUxtTmhjbVF0WVhKMGFXTnNaVnh1WEc1Y2JpQWdKbDlmWW05NFhHNGdJQ0FnWW05NExYTm9ZV1J2ZHpvZ01DQXhjSGdnTUNBa1ozSmxaVzVjYmlBZ0lDQmthWE53YkdGNU9pQnViMjVsWEc0Z0lDQWdLM1psY25RdGNHRmtaR2x1WnlneExERXBYRzVjYmlBZ0lDQXFJQ3NnS2x4dUlDQWdJQ0FnYldGeVoybHVMWFJ2Y0RvZ01YSmxiVnh1WEc0Z0lHZ3lYRzRnSUNBZ0szTjBZVzVrWVhKa0xXaGxZV1JwYm1jb0tTQXZMMDFwZUdsdUlHTmhiaUJpWlNCbWIzVnVaQ0JwYmlCMGVYQnZaM0poY0doNVhHNWNiaUFnYzIxaGJHeGNiaUFnSUNCamIyeHZjam9nSkdkeVlYQm9hWFJsWEc0Z0lDQWdabTl1ZEMxemFYcGxPaUF1TnpWeVpXMWNibHh1SUNCd1hHNWNiaTVzYjJGa1pYSmZYMjVoZGx4dUlDQmthWE53YkdGNU9pQjBZV0pzWlMxalpXeHNYRzVjYmx4dUxtTmhjbVF0ZEhKcGNIUnBZMXh1SUNCa2FYTndiR0Y1T2lCMFlXSnNaVnh1SUNCaWIzSmtaWEl0ZEc5d09pQXhjSGdnYzI5c2FXUWdKR0p2Y21SbGNrTnZiRzl5WEc0Z0lHSnZjbVJsY2kxaWIzUjBiMjA2SURGd2VDQnpiMnhwWkNBa1ltOXlaR1Z5UTI5c2IzSmNibHh1SUNBbVgxOWliM2hjYmlBZ0lDQndZV1JrYVc1bk9pQXljbVZ0WEc0Z0lDQWdkbVZ5ZEdsallXd3RZV3hwWjI0NklIUnZjRnh1WEc0Z0lDQWdKanB1ZEdndFkyaHBiR1FvTWlsY2JpQWdJQ0FnSUN0dFpXUnBZU2hjSWo1MFlXSnNaWFJjSWlsY2JpQWdJQ0FnSUNBZ1ltOXlaR1Z5TFd4bFpuUTZJREZ3ZUNCemIyeHBaQ0FrWW05eVpHVnlRMjlzYjNKY2JpQWdJQ0FnSUNBZ0x5OXdZV1JrYVc1bk9pQXljbVZ0SURGeVpXMGdNbkpsYlNBeGNtVnRYRzVjYmlBZ0lDQW1PbTUwYUMxamFHbHNaQ2d6S1Z4dUlDQWdJQ0FnSzIxbFpHbGhLRndpUG5SaFlteGxkRndpS1Z4dUlDQWdJQ0FnSUNCaWIzSmtaWEl0YkdWbWREb2dNWEI0SUhOdmJHbGtJQ1JpYjNKa1pYSkRiMnh2Y2x4dUlDQWdJQ0FnSUNBdkwzQmhaR1JwYm1jNklESnlaVzBnTW5KbGJTQXljbVZ0SURGeVpXMWNibHh1SUNBbVgxOXRaV1JwWVZ4dUlDQWdJQzh2WW1GamEyZHliM1Z1WkMxamIyeHZjam9nSkdkeVpXVnVYRzRnSUNBZ2FHVnBaMmgwT2lBeE5UQndlRnh1SUNBZ0lHOTJaWEptYkc5M09pQm9hV1JrWlc1Y2JpQWdJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXljbVZ0WEc1Y2JpQWdJQ0JwYldkY2JseHVJQ0FtWDE5b1pXRmthVzVuTFd4cGJtdGNiaUFnSUNBcmMyMWhiR3d0YUdWaFpHbHVaeWdwWEc0Z0lDQWdZMjlzYjNJNklDUnphWFJsTFhSbGVIUXRZMjlzYjNJdGJHbHVhMXh1SUNBZ0lHUnBjM0JzWVhrNklHbHViR2x1WlMxaWJHOWphMXh1SUNBZ0lIUmxlSFF0WVd4cFoyNDZJR05sYm5SbGNseHVYRzRnSUNBZ0pqcG9iM1psY2x4dUlDQWdJQ0FnWTI5c2IzSTZJQ1J6YVhSbExYUmxlSFF0WTI5c2IzSXRiR2x1YXkxb2IzWmxjbHh1WEc0Z0lDWmZYM1JsZUhSY2JpQWdJQ0IwWlhoMExXRnNhV2R1T2lCalpXNTBaWEpjYmlJc0lpOHZYRzR2TDBOVVFYTWdMU0JEWVd4c0lIUnZJRUZqZEdsdmJpQnRiMlIxYkdWelhHNHZMMXh1WEc0dkwwTnZiblJoWTNRZ1ExUkJYRzR2TDFSb2FYTWdhWE1nWm05MWJtUWdiMjRnZEdobElHaHZiV1Z3WVdkbElHOXViSGtnY21sbmFIUWdibTkzWEc0dVkzUmhMV052Ym5SaFkzUmNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nSUNObFkyVmxaVFpjYmlBZ1pHbHpjR3hoZVRvZ2RHRmliR1ZjYmlBZ0x5OGdaR2x6Y0d4aGVUb2dabXhsZUZ4dUlDQXZMeUJoYkdsbmJpMXBkR1Z0Y3pvZ1kyVnVkR1Z5WEc0Z0lDOHZJR3AxYzNScFpua3RZMjl1ZEdWdWREb2dZMlZ1ZEdWeVhHNWNibHh1SUNBbVgxOWliM2hjYmlBZ0lDQndZV1JrYVc1bk9pQXljbVZ0WEc1Y2JpQWdKbDlmWW05NE9tNTBhQzFqYUdsc1pDZ3lLVnh1SUNBZ0lIQmhaR1JwYm1jNklESnlaVzBnTUZ4dVhHNWNiaUFnSUNBdkx5dHlaWE53YjI1emFYWmxMWE4wWVdOclhHNWNiaUFnSmw5ZmRHVjRkRnh1SUNBZ0lHMWhjbWRwYmpvZ01GeHVJQ0FnSUhCaFpHUnBibWM2SURBZ015NDFjbVZ0SURBZ01uSmxiVnh1WEc0Z0lDQWdLMjFsWkdsaEtGd2lQRDEwWVdKc1pYUmNJaWxjYmlBZ0lDQWdJSEJoWkdScGJtYzZJREJjYmx4dUlDQW1YMTlpZFhSMGIyNWNiaUFnSUNCa2FYTndiR0Y1T2lCcGJteHBibVV0WW14dlkydGNiaUFnSUNCdFlYSm5hVzQ2SURBZ01uSmxiU0F3SURCY2JseHVJQ0FnSUN0dFpXUnBZU2hjSWp3OWRHRmliR1YwWENJcFhHNGdJQ0FnSUNCdFlYSm5hVzQ2SURCY2JseHVYRzR2TDFacFpHVnZJSFJsWVhObGNpQkRWRUZjYmk4dlZHaHBjeUJwY3lCbWIzVnVaQ0J2YmlCMGFHVWdhRzl0WlhCaFoyVWdiMjVzZVNCeWFXZG9kQ0J1YjNkY2JpNWpkR0V0ZEdWaGMyVnlYRzRnSUM4dklHUnBjM0JzWVhrNklHWnNaWGhjYmlBZ0x5OGdabXhsZUMxbWJHOTNPaUJ5YjNjZ2QzSmhjRnh1SUNBdkx5QnFkWE4wYVdaNUxXTnZiblJsYm5RNklITndZV05sTFdGeWIzVnVaRnh1SUNBdkx5QmhiR2xuYmkxcGRHVnRjem9nYzNSeVpYUmphRnh1SUNCa2FYTndiR0Y1T2lCMFlXSnNaVnh1SUNCd1lXUmthVzVuT2lBeGNtVnRJREp5WlcxY2JseHVJQ0FyYldWa2FXRW9YQ0k4UFhSaFlteGxkRndpS1Z4dUlDQWdJR1pzWlhndFpteHZkem9nWTI5c2RXMXVYRzVjYmlBZ0psOWZZbTk0WEc0Z0lDQWdjR0ZrWkdsdVp5MXlhV2RvZERvZ01uSmxiVnh1WEc0Z0lDQWdLMjFsWkdsaEtGd2lQRDEwWVdKc1pYUmNJaWxjYmlBZ0lDQWdJSEJoWkdScGJtYzZJREJjYmx4dUlDQW1YMTlvWldGa2FXNW5YRzVjYmlBZ0psOWZkR1Y0ZEZ4dUlDQWdJRzFoY21kcGJpMWliM1IwYjIwNklESnlaVzFjYmx4dVhHNGdJQ1pmWDIxbFpHbGhYRzRnSUNBZ2FHVnBaMmgwT2lBek1EQndlRnh1SUNBZ0lHOTJaWEptYkc5M09pQm9hV1JrWlc1Y2JseHVJQ0FnSUN0dFpXUnBZU2hjSWp3OWRHRmliR1YwWENJcFhHNGdJQ0FnSUNCb1pXbG5hSFE2SURFMU1IQjRYRzRnSUNBZ0lDQnRZWEpuYVc0dGRHOXdPaUF5Y21WdFhHNWNibHh1THk5RFpXNTBaWEpsWkNCRFZFRmNiaTh2VkdocGN5QnBjeUJtYjNWdVpDQnZiaUIwYUdVZ2FHOXRaWEJoWjJVZ2IyNXNlU0J5YVdkb2RDQnViM2RjYmk1amRHRXRZMlZ1ZEdWeVhHNGdJSEJoWkdScGJtYzZJREp5WlcxY2JpQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlYRzVjYmlBZ0psOWZhR1ZoWkdsdVoxeHVYRzRnSUNaZlgzUmxlSFJjYmlBZ0lDQndZV1JrYVc1bk9pQXdJRGh5WlcxY2JpQWdJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXljbVZ0WEc1Y2JpQWdJQ0FyYldWa2FXRW9YQ0k4UFhSaFlteGxkRndpS1Z4dUlDQWdJQ0FnY0dGa1pHbHVaem9nTUZ4dVhHNGdJQ1pmWDJKMWRIUnZibHh1WEc1Y2JseHVMeTlUZFdKelkzSnBZbVVnUTFSQklDMGdWR2hwY3lCcGN5Qm1iM1Z1WkNCaGRDQjBhR1VnZEc5d0lHOW1JSFJvWlNCbWIyOTBaWEpjYmk1amRHRXRjM1ZpYzJOeWFXSmxYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNSbmNtVmxibHh1SUNCamIyeHZjam9nSkhkb2FYUmxYRzRnSUN0MlpYSjBMWEJoWkdScGJtY29NU3d4TGpVcFhHNWNiaUFnSmw5ZmFHVmhaR2x1WjF4dUlDQWdJR052Ykc5eU9pQWtkMmhwZEdWY2JpQWdJQ0IwWlhoMExXRnNhV2R1T2lCalpXNTBaWEpjYmx4dUlDQW1YMTlpYjNoY2JpQWdJQ0JrYVhOd2JHRjVPaUIwWVdKc1pWeHVJQ0FnSUcxaGNtZHBiam9nTUNCaGRYUnZYRzRnSUNBZ2QybGtkR2c2SURjMUpWeHVYRzRnSUM4dklGUlBSRThnZFhObElHTnZiQ0JqYkdGemN5QnBibk4wWldGa0lHWnZjaUIzYVdSMGFGeHVJQ0FtWDE5cGJuQjFkQzFoWkdRdGIyNWNibHh1WEc0Z0lDWmZYMmx1Y0hWMFhHNGdJQ0FnY0dGa1pHbHVaem9nTGpseVpXMWNiaUFnSUNCM2FXUjBhRG9nTVRBd0pWeHVYRzRnSUNaZlgySjFkSFJ2Ymx4dUlDQWdJR0p2Y21SbGNqb2dNWEI0SUhOdmJHbGtJQ1IzYUdsMFpWeHVJQ0FnSUdOdmJHOXlPaUFrZDJocGRHVmNiaUFnSUNCbWIyNTBMWE5wZW1VNklERXVOWEpsYlZ4dUlDQWdJRzFoY21kcGJpMXNaV1owT2lBeGNtVnRYRzRnSUNBZ2QybGtkR2c2SURFd01DVmNibHh1SUNBZ0lDdHRaV1JwWVNoY0lqdzlkR0ZpYkdWMFhDSXBYRzRnSUNBZ0lDQnRZWEpuYVc0NklERnlaVzBnTUNBd0lEQmNibHh1SUNBbVgxOXRaWE56WVdkbFhHNGdJQ0FnWkdsemNHeGhlVG9nYm05dVpWeHVJQ0FnSUhCaFpHUnBibWN0ZEc5d09pQXlMalZ5WlcxY2JseHVJQ0FtWDE5MllXeHBaR0YwYVc5dVhHNWNibHh1THk5VGFXUmxZbUZ5SUVOVVFTQXRJRlJvYVhNZ2FYTWdabTkxYm1RZ2IyNGdhVzUwWlhKdVlXd2djR0ZuWlhNZ2IyNXNlVnh1TG1OMFlTMXphV1JsWW1GeVhHNGdJSEJoWkdScGJtYzZJREZ5WlcwZ01DQXdJRFZ5WlcxY2JpQWdkbVZ5ZEdsallXd3RZV3hwWjI0NklIUnZjRnh1WEc0Z0lDdHRaV1JwWVNoY0lqdzlkR0ZpYkdWMFhDSXBYRzRnSUNBZ2NHRmtaR2x1WnpvZ00zSmxiU0F5Y21WdFhHNWNiaUFnSmw5ZmJXVmthV0ZjYmlBZ0lDQXZMMmhsYVdkb2REb2dNVGd3Y0hoY2JpQWdJQ0F2TDI5MlpYSm1iRzkzT2lCb2FXUmtaVzVjYmx4dUlDQWdJQ3R0WldScFlTaGNJanc5ZEdGaWJHVjBYQ0lwWEc1Y2JseHVJQ0FnSUdsdFoxeHVYRzRnSUNaZlgyaGxZV1JwYm1kY2JpQWdJQ0JtYjI1MExYTnBlbVU2SURFdU1qVnlaVzFjYmlBZ0lDQXJkbVZ5ZEMxdFlYSm5hVzRvTGpVc0xqVXBYRzVjYmlBZ0psOWZkR1Y0ZEZ4dVhHNGdJQ1pmWDJKMWRIUnZibHh1SUNBZ0lHMWhjbWRwYmkxMGIzQTZJREZ5WlcxY2JseHVYRzR2TDFOdlkybGhiQ0JEVkVFZ0xTQlVhR1Z6WlNCaGNtVWdZM1Z5Y21WdWRHeDVJR1p2ZFc1a0lHRjBJSFJvWlNCaWIzUjBiMjBnYjJZZ2RHaGxJR0pzYjJjZ2NHOXpkSE5jYmk1amRHRXRjMjlqYVdGc1hHNGdJSEJoWkdScGJtY3RiR1ZtZERvZ01YSmxiVnh1WEc0Z0lDNXBZMjl1WEc0Z0lDQWdabWxzYkRvZ0pHZHlaV1Z1WEc1Y2JpQWdJQ0FtT21odmRtVnlYRzRnSUNBZ0lDQm1hV3hzT2lBa1ozSmhjR2hwZEdWY2JpSXNJaTh2Um05dmRHVnlYRzRrWm05dmRHVnlMV2hsWVdSbGNpMXVZWFk2SUZSeVpXSjFZMmhsZENCTlUxeHVYRzVtYjI5MFpYSmNibHgwY0dGa1pHbHVaeTFpYjNSMGIyMDZJREl3TlhCNFhHNWNibHgwSzIxbFpHbGhLRndpUEQxMFlXSnNaWFJjSWlsY2JseDBYSFJ3WVdSa2FXNW5PaUF3WEc1Y2JseHVMbVp2YjNSbGNpMWpiM0I1Y21sbmFIUmNibHgwWW05eVpHVnlMWFJ2Y0RvZ01YQjRJSE52Ykdsa0lDUmpiRzkxWkZ4dVhIUmthWE53YkdGNU9pQjBZV0pzWlZ4dVhIUndZV1JrYVc1bk9pQXljbVZ0WEc1Y2RIZHBaSFJvT2lBeE1EQWxYRzVjYmx4MEsyMWxaR2xoS0Z3aVBEMTBZV0pzWlhSY0lpbGNibHgwWEhSd1lXUmthVzVuT2lBeWNtVnRJREFnTUNBd1hHNWNibHgwSmw5ZmJHOW5ieTFpYjNoY2JseDBYSFIzYVdSMGFEb2dORFV3Y0hoY2JseHVYSFJjZEN0dFpXUnBZU2hjSWp3OWRHRmliR1YwWENJcFhHNWNkRngwWEhSa2FYTndiR0Y1T2lCcGJteHBibVV0WW14dlkydGNibHh1WEhSY2RGeDBMbXh2WjI5ZlgzTjBZV05yWldSY2JseDBYSFJjZEZ4MFpHbHpjR3hoZVRvZ2FXNXNhVzVsTFdKc2IyTnJYRzVjZEZ4MFhIUmNkSGRwWkhSb09pQXlOVEJ3ZUZ4dVhHNWNibHgwSmw5ZlltOTRYRzVjZEZ4MGRHVjRkQzFoYkdsbmJqb2djbWxuYUhSY2JseHVYSFJjZEN0dFpXUnBZU2hjSWo0OWRHRmliR1YwWENJc0lGd2lQajFrWlhOcmRHOXdYQ0lwWEc1Y2RGeDBYSFIwWlhoMExXRnNhV2R1T2lCeWFXZG9kRnh1WEc1Y2RGeDBjMjFoYkd4Y2JseDBYSFJjZEdScGMzQnNZWGs2SUdsdWJHbHVaUzFpYkc5amExeHVYSFJjZEZ4MFptOXVkQzF6YVhwbE9pQXhOSEI0WEc1Y2RGeDBYSFJ3WVdSa2FXNW5MWEpwWjJoME9pQXVOWEpsYlZ4dVhHNWNkRngwWEhRbU9qcGlaV1p2Y21WY2JseDBYSFJjZEZ4MFkyOXVkR1Z1ZERvZ0ozd25YRzVjYmx4MFhIUmNkQ1k2Ym5Sb0xXTm9hV3hrS0RFcFhHNWNkRngwWEhSY2RDWTZPbUpsWm05eVpWeHVYSFJjZEZ4MFhIUmNkR052Ym5SbGJuUTZJQ2NnSjF4dVhHNWNibHgwWEhSY2RDdHRaV1JwWVNoY0lqNDlkR0ZpYkdWMFhDSXNJRndpUGoxa1pYTnJkRzl3WENJcFhHNWNkRngwWEhSY2RHWnZiblF0YzJsNlpUb2dNVEp3ZUZ4dVhHNWNkRngwTG01aGRpMXRhVzV2Y2x4dVhHNWNkRngwWEhSc2FWeHVYSFJjZEZ4MElDQmhYRzVjZEZ4MFhIUWdJQ0FnWm05dWRDMXphWHBsT2lBeE5IQjRYRzVjYmx4MFhIUmNkQ0FnSUNBcmJXVmthV0VvWENJK1BYUmhZbXhsZEZ3aUxDQmNJajQ5WkdWemEzUnZjRndpS1Z4dVhIUmNkRngwSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF4TW5CNFhHNWNiaTVtYjI5MFpYSXRaR2x6WTJ4aGFXMWxjbHh1WEhSMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhKY2JseDBkMmxrZEdnNklERXdNQ1ZjYmx4dVhIUW1YMTlpYjNoY2JseDBYSFJpYjNKa1pYSTZJREZ3ZUNCemIyeHBaQ0FrWm05dmRHVnlMWFJsZUhSY2JseDBYSFJrYVhOd2JHRjVPaUJwYm14cGJtVXRZbXh2WTJ0Y2JseDBYSFIwWlhoMExXRnNhV2R1T2lCalpXNTBaWEpjYmx4MFhIUndZV1JrYVc1bk9pQXlNSEI0WEc1Y2RGeDBiV0Z5WjJsdU9pQTFNSEI0SUdGMWRHOGdNVEJ3ZUZ4dVhHNWNkR2cyTENCd0xDQjFiRnh1WEhSY2RHWnZiblF0YzJsNlpUb2dNVFJ3ZUZ4dVhIUmNkRzFoY21kcGJpMWliM1IwYjIwNklERnlaVzFjYmx4dVhIUmNkQ3R0WldScFlTaGNJajQ5ZEdGaWJHVjBYQ0lzSUZ3aVBqMWtaWE5yZEc5d1hDSXBYRzVjZEZ4MFhIUm1iMjUwTFhOcGVtVTZJREV5Y0hoY2JseHVYSFIxYkZ4dVhIUmNkRUJsZUhSbGJtUWdKVzFsYm5WY2JseDBYSFJ0WVhKbmFXNHRkRzl3T2lBd1hHNWNibHgwWEhSc2FWeHVYSFJjZEZ4MFpHbHpjR3hoZVRvZ2FXNXNhVzVsTFdKc2IyTnJYRzVjZEZ4MFhIUnRZWEpuYVc0NklEQWdNVEJ3ZUZ4dVhIUmNkRngwY0dGa1pHbHVaem9nTGpWeVpXMWNiaUlzSWx4dVFHdGxlV1p5WVcxbGN5Qm1ZV1JsU1c1Y2JpQWdabkp2YlZ4dUlDQWdJRzl3WVdOcGRIazZJREJjYmlBZ2RHOWNiaUFnSUNCdmNHRmphWFI1T2lBeFhHNWNiaTVvWldGa1pYSmZYMnh2WjI4dFltOTRYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNSM2FHbDBaVnh1SUNCaWIzSmtaWEl0YkdWbWREb2dNWEI0SUhOdmJHbGtJQ1JpYjNKa1pYSkRiMnh2Y2x4dUlDQmliM0prWlhJdGNtbG5hSFE2SURGd2VDQnpiMnhwWkNBa1ltOXlaR1Z5UTI5c2IzSmNiaUFnYldGeVoybHVPaUF3SUdGMWRHOWNiaUFnY0dGa1pHbHVaeTEwYjNBNklERnlaVzFjYmlBZ2JXRjRMWGRwWkhSb09pQXhNakF3Y0hoY2JpQWdYRzR1YUdWaFpHVnlYMTlzYjJkdlhHNGdJR0poWTJ0bmNtOTFibVE2SUNSM2FHbDBaVnh1WEc1Y2JpNXNiMmR2WEc0Z0lHUnBjM0JzWVhrNklHSnNiMk5yWEc0Z0lIQmhaR1JwYm1jNklERnlaVzFjYmlBZ2QybGtkR2c2SURZd01IQjRYRzVjYmlBZ0syMWxaR2xoS0Z3aVBEa3dNSEI0WENJcFhHNGdJQ0FnZDJsa2RHZzZJRFF3TUhCNFhHNWNiaUFnSzIxbFpHbGhLRndpUERVd01IQjRYQ0lwWEc0Z0lDQWdjR0ZrWkdsdVp6b2dNWEpsYlZ4dUlDQWdJSGRwWkhSb09pQXpNREJ3ZUZ4dVhHNWNibHh1WEc1emRtZGNibHh1SUNCd1lYUm9MQ0J3YjJ4NVoyOXVYRzRnSUNBZ1ptbHNiRG9nSkdkeVpXVnVYRzVjYmlBZ0pqcG9iM1psY2lCd1lYUm9MRnh1SUNBbU9taHZkbVZ5SUhCdmJIbG5iMjVjYmlBZ0lDQnZjR0ZqYVhSNU9pQXVOMXh1SUNBZ0lIUnlZVzV6YVhScGIyNDZJR1pwYkd3Z01DNHljeUJsWVhObFhHNWNiaTVzYjJkdlgxOXpkSEpsZEdOb1pXUmNiaUFnWkdsemNHeGhlVG9nWW14dlkydGNibHh1SUNBcmJXVmthV0VvWENJOE9UQXdjSGhjSWlsY2JpQWdJQ0JrYVhOd2JHRjVPaUJ1YjI1bFhHNWNiaTVzYjJkdlgxOXpkR0ZqYTJWa1hHNGdJR1JwYzNCc1lYazZJRzV2Ym1WY2JseHVJQ0FyYldWa2FXRW9YQ0k4T1RBd2NIaGNJaWxjYmlBZ0lDQmthWE53YkdGNU9pQmliRzlqYTF4dVhHNWNibHh1WEc0dkx5QXlOU0J3YVdWalpYTmNiaTVzYjJkdlgxOW5iRzlpWlZ4dUlDQndZWFJvWEc0Z0lDQWdiM0JoWTJsMGVUb2dNRnh1SUNBZ0lHRnVhVzFoZEdsdmJqb2dabUZrWlVsdUlHVmhjMlV0YVc0Z01WeHVJQ0FnSUdGdWFXMWhkR2x2YmkxbWFXeHNMVzF2WkdVNklHWnZjbmRoY21SelhHNGdJQ0FnWVc1cGJXRjBhVzl1TFdSMWNtRjBhVzl1T2lBdU5YTmNibHh1SUNCd1lYUm9PbTUwYUMxamFHbHNaQ2d4S1Z4dUlDQWdJR0Z1YVcxaGRHbHZiaTFrWld4aGVUb2dNQzR4YzF4dVhHNGdJSEJoZEdnNmJuUm9MV05vYVd4a0tESXBYRzRnSUNBZ1lXNXBiV0YwYVc5dUxXUmxiR0Y1T2lBd0xqRXhjMXh1WEc0Z0lIQmhkR2c2Ym5Sb0xXTm9hV3hrS0RNcFhHNGdJQ0FnWVc1cGJXRjBhVzl1TFdSbGJHRjVPaUF3TGpJeWMxeHVYRzRnSUhCaGRHZzZiblJvTFdOb2FXeGtLRFFwWEc0Z0lDQWdZVzVwYldGMGFXOXVMV1JsYkdGNU9pQXdMakV6YzF4dVhHNGdJSEJoZEdnNmJuUm9MV05vYVd4a0tEVXBYRzRnSUNBZ1lXNXBiV0YwYVc5dUxXUmxiR0Y1T2lBd0xqRTBjMXh1WEc0Z0lIQmhkR2c2Ym5Sb0xXTm9hV3hrS0RZcFhHNGdJQ0FnWVc1cGJXRjBhVzl1TFdSbGJHRjVPaUF3TGpFMWMxeHVYRzRnSUhCaGRHZzZiblJvTFdOb2FXeGtLRGNwWEc0Z0lDQWdZVzVwYldGMGFXOXVMV1JsYkdGNU9pQXdMakUyYzF4dVhHNGdJSEJoZEdnNmJuUm9MV05vYVd4a0tEZ3BYRzRnSUNBZ1lXNXBiV0YwYVc5dUxXUmxiR0Y1T2lBd0xqTTNjMXh1WEc0Z0lIQmhkR2c2Ym5Sb0xXTm9hV3hrS0RrcFhHNGdJQ0FnWVc1cGJXRjBhVzl1TFdSbGJHRjVPaUF3TGpFNGMxeHVYRzRnSUhCaGRHZzZiblJvTFdOb2FXeGtLREV3S1Z4dUlDQWdJR0Z1YVcxaGRHbHZiaTFrWld4aGVUb2dNQzR4T1hOY2JseHVJQ0J3WVhSb09tNTBhQzFqYUdsc1pDZ3hNU2xjYmlBZ0lDQmhibWx0WVhScGIyNHRaR1ZzWVhrNklEQXVNakJ6WEc1Y2JpQWdjR0YwYURwdWRHZ3RZMmhwYkdRb01USXBYRzRnSUNBZ1lXNXBiV0YwYVc5dUxXUmxiR0Y1T2lBd0xqSXhjMXh1WEc0Z0lIQmhkR2c2Ym5Sb0xXTm9hV3hrS0RFektWeHVJQ0FnSUdGdWFXMWhkR2x2Ymkxa1pXeGhlVG9nTUM0eE1uTmNibHh1SUNCd1lYUm9PbTUwYUMxamFHbHNaQ2d4TkNsY2JpQWdJQ0JoYm1sdFlYUnBiMjR0WkdWc1lYazZJREF1TWpOelhHNWNiaUFnY0dGMGFEcHVkR2d0WTJocGJHUW9NVFVwWEc0Z0lDQWdZVzVwYldGMGFXOXVMV1JsYkdGNU9pQXdMak0wYzF4dVhHNGdJSEJoZEdnNmJuUm9MV05vYVd4a0tERTJLVnh1SUNBZ0lHRnVhVzFoZEdsdmJpMWtaV3hoZVRvZ01DNHlOWE5jYmx4dUxteHZaMjlmWDNSbGVIUmNibHh1TG14dloyOWZYMk52YlcxbGNtTmxYRzRnSUhCaGRHZ3NJSEJ2YkhsbmIyNWNibHh1WEc0dWJHOW5iMTlmZEhKMWMzUmNiaUFnY0dGMGFDd2djRzlzZVdkdmJseHVYRzVjYmk1c2IyZHZYMTkwWVdkc2FXNWxYRzRnSUhCaGRHZ3NJSEJ2YkhsbmIyNWNiaUlzSWk4dkxTQlVhR2x6SUdOdmJuUmhhVzVsY2lCb2IyeGtJSFJvWlNCdFlXbHVJR052Ym5SbGJuUWdiMjRnWldGamFDQndZV2RsWEc0dkx5MGdTWFFnYVhNZ1ptOTFibVFnYjI0Z1lXeHNJR2x1ZEdWeWJtRnNJSEJoWjJWelhHNWNiaTh2TFNCQmJHd2dYQ0pOWVdsdVhDSWdZMnhoYzNObGN5Qm9ZWFpsSUhOb1lYSmxJSFJvWlhObElISjFiR1Z6WEc0bGJXRnBibHh1SUNCa2FYTndiR0Y1T2lCMFlXSnNaVnh1SUNCd1lXUmthVzVuT2lBeGNtVnRJREp5WlcxY2JseHVMbTFoYVc0dGMzUmhibVJoY21SY2JpQWdRR1Y0ZEdWdVpDQWxiV0ZwYmx4dUlDQndZV1JrYVc1bkxXSnZkSFJ2YlRvZ05YSmxiVnh1WEc0Z0lDWmZYMk52Ym5SbGJuUmNibHh1SUNBZ0lDdHRaV1JwWVNoY0lqdzlkR0ZpYkdWMFhDSXBYRzRnSUNBZ0lDQjBaWGgwTFdGc2FXZHVPaUJzWldaMFhHNWNiaUFnSmw5ZmRHVjRkRnh1WEc0Z0lDQWdLaUFySUNwY2JpQWdJQ0FnSUcxaGNtZHBiaTEwYjNBNklERnlaVzFjYmx4dUlDQWdJR2d5WEc0Z0lDQWdJQ0FyYzNSaGJtUmhjbVF0YUdWaFpHbHVaeWdwWEc0Z0lDQWdJQ0FyZG1WeWRDMXdZV1JrYVc1bktERXNNQ2xjYmx4dVhHNHZMeUJOWVdsdUlHTnZiblJsYm5RZ1lteHZZMnNnYjI0Z1RHVmhaR1Z5YzJocGNDQndZV2RsWEc0dWJXRnBiaTFpYVc5elhHNGdJR1JwYzNCc1lYazZJSFJoWW14bFhHNGdJSEJoWkdScGJtYzZJREp5WlcxY2JseHVYRzR2THlCTllXbHVJR052Ym5SbGJuUWdZbXh2WTJzZ2IyNGdUbVYzY3lCd1lXZGxYRzR1YldGcGJpMXVaWGR6WEc0Z0lFQmxlSFJsYm1RZ0pXMWhhVzVjYmx4dVhHNHZMeUJOWVdsdUlHTnZiblJsYm5RZ1lteHZZMnNnYjI0Z1FteHZaeUJRYjNOMElIQmhaMlZjYmk1dFlXbHVMWEJ2YzNSY2JpQWdRR1Y0ZEdWdVpDQWxiV0ZwYmx4dVhHNGdJQ1pmWDNSbGVIUmNibHh1SUNBZ0lDdHRaV1JwWVNoY0lqdzlkR0ZpYkdWMFhDSXBYRzRnSUNBZ0lDQjBaWGgwTFdGc2FXZHVPaUJzWldaMFhHNWNiaUFnSUNBcUlDc2dLbHh1SUNBZ0lDQWdiV0Z5WjJsdUxYUnZjRG9nTVhKbGJWeHVYRzRnSUNBZ2FESmNiaUFnSUNBZ0lDdHpkR0Z1WkdGeVpDMW9aV0ZrYVc1bktDbGNibHh1SUNBZ0lHZ3pYRzRnSUNBZ0lDQXJiV2x1YjNJdGFHVmhaR2x1WnlncFhHNWNiaUFnSUNCbWFXZGpZWEIwYVc5dVhHNGdJQ0FnSUNCamIyeHZjam9nSkdkeVlYQm9hWFJsWEc0Z0lDQWdJQ0JtYjI1MExYTnBlbVU2SUM0M05YSmxiVnh1SUNBZ0lDQWdiV0Z5WjJsdUxYUnZjRG9nTUZ4dVhHNGdJQ0FnWW14dlkydHhkVzkwWlZ4dUlDQWdJQ0FnSzJKc2IyTnJjWFZ2ZEdVb0tWeHVJaXdpTG1admNtMHRjM1JoYm1SaGNtUmNiaUFnYVc1d2RYUXNYRzRnSUdsdWNIVjBXM1I1Y0dVOVhDSmxiV0ZwYkZ3aVhTeGNiaUFnYVc1d2RYUmJkSGx3WlQxY0ltNTFiV0psY2x3aVhTeGNiaUFnYVc1d2RYUmJkSGx3WlQxY0luQmhjM04zYjNKa1hDSmRMRnh1SUNCcGJuQjFkRnQwZVhCbFBWd2ljMlZoY21Ob1hDSmRMRnh1SUNCcGJuQjFkRnQwZVhCbFBWd2lkR1ZzWENKZExGeHVJQ0JwYm5CMWRGdDBlWEJsUFZ3aWRHVjRkRndpWFN4Y2JpQWdhVzV3ZFhSYmRIbHdaVDFjSW5WeWJGd2lYU3hjYmlBZ2FXNXdkWFJiZEhsd1pUMWNJbU52Ykc5eVhDSmRMRnh1SUNCcGJuQjFkRnQwZVhCbFBWd2laR0YwWlZ3aVhTeGNiaUFnYVc1d2RYUmJkSGx3WlQxY0ltNWhiV1ZjSWwwc1hHNGdJR2x1Y0hWMFczUjVjR1U5WENKa1lYUmxkR2x0WlZ3aVhTeGNiaUFnYVc1d2RYUmJkSGx3WlQxY0ltUmhkR1YwYVcxbExXeHZZMkZzWENKZExGeHVJQ0JwYm5CMWRGdDBlWEJsUFZ3aWJXOXVkR2hjSWwwc1hHNGdJR2x1Y0hWMFczUjVjR1U5WENKMGFXMWxYQ0pkTEZ4dUlDQnBibkIxZEZ0MGVYQmxQVndpZDJWbGExd2lYU3hjYmlBZ2RHVjRkR0Z5WldGY2JpQWdYSFJqYjJ4dmNqb2dKSE5wZEdVdGRHVjRkQzFqYjJ4dmNseHVJQ0JjZEdKdmNtUmxjam9nTVhCNElITnZiR2xrSUNSaWIzSmtaWEpEYjJ4dmNseHVJQ0FnSUdKdmVDMXphWHBwYm1jNklHTnZiblJsYm5RdFltOTRYRzRnSUZ4MFltOXlaR1Z5TFhKaFpHbDFjem9nTUZ4dUlDQWdJR1p2Ym5RdGMybDZaVG9nTVhKbGJWeHVJQ0JjZEhCaFpHUnBibWM2SURGeVpXMWNiaUFnWEhSa2FYTndiR0Y1T2lCaWJHOWphMXh1SUNCY2RIZHBaSFJvT2lBeE1EQWxYRzVjYmx4dUlDQnNZV0psYkZ4dUlDQWdJR1JwYzNCc1lYazZJR0pzYjJOclhHNWNiaUFnYVc1d2RYUmJkSGx3WlQxY0ltSjFkSFJ2Ymx3aVhTeGNiaUFnYVc1d2RYUmJkSGx3WlQxY0luSmxjMlYwWENKZExGeHVJQ0JwYm5CMWRGdDBlWEJsUFZ3aWMzVmliV2wwWENKZFhHNGdJQ0FnTHk4Z1lXNTVJR1JsWm1GMWJIUWdZblYwZEc5dUlITjBlV3hsY3lCMGFHRjBJRzVsWldRZ2RHOGdZbVVnWkdsbVptVnlaVzUwSUc5dUlHWnZjbTF6SUdkdklHaGxjbVZjYmlBZ0lDQmthWE53YkdGNU9pQmliRzlqYTF4dVhHNWNiaUFnSmw5ZlkyaGxZMnRpYjNoY2JpQWdJQ0JrYVhOd2JHRjVPaUJwYm14cGJtVXRZbXh2WTJ0Y2JseHVJQ0FtWDE5amFHVmphMkp2ZUNBcklHeGhZbVZzWEc0Z0lDQWdaR2x6Y0d4aGVUb2dhVzVzYVc1bExXSnNiMk5yWEc1Y2JpQWc0b0NZWEc0Z0lDNXpaV3hsWTNSaWIzaGNiaUFnSUNCaVlXTnJaM0p2ZFc1a09pQWtkMmhwZEdWY2JpQWdJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQXdYRzRnSUNBZ1kzVnljMjl5T2lCd2IybHVkR1Z5WEc0Z0lDQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxYRzRnSUNBZ2FHVnBaMmgwT2lBME9IQjRYRzVjYmx4dUlDQnpaV3hsWTNSY2JpQWdJQ0JpWVdOclozSnZkVzVrT2lBa2QyaHBkR1ZjYmlBZ0lDQmliM2d0YzJoaFpHOTNPaUJ1YjI1bFhHNGdJQ0FnWW05eVpHVnlMWEpoWkdsMWN6b2dNRnh1SUNBZ0lHSnZjbVJsY2pvZ01YQjRJSE52Ykdsa0lDUmliM0prWlhKRGIyeHZjbHh1SUNBZ0lHTnZiRzl5T2lBa2MybDBaUzEwWlhoMExXTnZiRzl5WEc0Z0lDQWdZM1Z5YzI5eU9pQndiMmx1ZEdWeVhHNGdJQ0FnWkdsemNHeGhlVG9nWW14dlkydGNiaUFnSUNCbWIyNTBMWE5wZW1VNklERnlaVzFjYmlBZ0lDQm9aV2xuYUhRNklEUTFjSGhjYmlBZ0lDQndZV1JrYVc1bk9pQXhjbVZ0WEc0Z0lDQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxYRzRnSUNBZ2QybGtkR2c2SURFd01DVmNidUtBbVZ4dUlsMHNJbk52ZFhKalpWSnZiM1FpT2lJdmMyOTFjbU5sTHlKOSAqLyIsIi8vIFZhcnNcbiRiYXNlLWZvbnQtc2l6ZTogMTZweFxuJGJhc2UtbGluZS1oZWlnaHQ6IDEuNVxuXG4vLyBUeXBlZmFjZXNcbiRzYW5zOiBOZXdzIEN5Y2xlLCBzYW5zLXNlcmlmXG4kc2VyaWY6IFBsYXlmYWlyIERpc3BsYXksIHNlcmlmXG5cbi8vIEZvbnQgd2VpZ2h0c1xuJHhsaWdodDogMjAwXG4kbGlnaHQ6IDMwMFxuJG5vcm1hbDogNDAwXG4kc2VtaWJvbGQ6IDYwMFxuJGJvbGQ6IDcwMFxuXG4vLyBMaW5lIGhlaWdodCBmdW5jdGlvblxuQGZ1bmN0aW9uIGxpbmUtaGVpZ2h0KClcbiAgQHJldHVybiAkYmFzZS1mb250LXNpemUgKiAkYmFzZS1saW5lLWhlaWdodFxuXG4vLyBWYXIgbXVzdCBiZSBzcGVjaWZpZWQgYWZ0ZXIgcmV0dXJuaW5nIHRoZSBsaW5lLWhlaWdodCBmdW5jdGlvblxuJGNhbC1saW5lLWhlaWdodDogbGluZS1oZWlnaHQoKVxuXG4vLyBNaXhpbnNcbj12ZXJ0LW1hcmdpbigkdG9wOiAxLCAkYm90dG9tOiAxKVxuICBtYXJnaW4tdG9wOiAkY2FsLWxpbmUtaGVpZ2h0ICogJHRvcFxuICBtYXJnaW4tYm90dG9tOiAkY2FsLWxpbmUtaGVpZ2h0ICogJGJvdHRvbVxuXG49dmVydC1wYWRkaW5nKCR0b3A6IDEsICRib3R0b206IDEpXG4gIHBhZGRpbmctdG9wOiAkY2FsLWxpbmUtaGVpZ2h0ICogJHRvcFxuICBwYWRkaW5nLWJvdHRvbTogJGNhbC1saW5lLWhlaWdodCAqICRib3R0b21cblxuXG5odG1sXG4gIGZvbnQtc2l6ZTogJGJhc2UtZm9udC1zaXplXG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGVcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWRcblxuYm9keVxuICBjb2xvcjogJGNoYXJjb2FsXG4gIGxpbmUtaGVpZ2h0OiAxLjVcbiAgZm9udC1mYW1pbHk6ICRzYW5zXG4gIC8vYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRyYW5zcGFyZW50LCB0cmFuc3BhcmVudCBsaW5lLWhlaWdodCgpIC0gMXB4LCAkZ3JlZW4gMXB4ICwgdHJhbnNwYXJlbnQpXG4gIGJhY2tncm91bmQtc2l6ZTogYXV0byBsaW5lLWhlaWdodCgpXG4gIG1hcmdpbjogMFxuXG5cbi8vW2NsYXNzKj0nX19oZWFkbGluZSddXG5cblxuLy8gVXNlZCBpbiBhcnRpY2xlIGhlYWRlcnMgaW4gdGhlIC5NYWluIGNvbHVtbnNcbltjbGFzcyo9J19faGVhZGluZyddXG4gIGNvbG9yOiAkZ3JlZW5cbiAgZm9udC1mYW1pbHk6ICRzZXJpZlxuICBmb250LXNpemU6IDIuNXJlbVxuICBmb250LXdlaWdodDogJG5vcm1hbFxuICBsaW5lLWhlaWdodDogMVxuICBtYXJnaW4tYm90dG9tOiAycmVtXG5cbj1zdGFuZGFyZC1oZWFkaW5nKClcbiAgY29sb3I6ICRncmVlblxuICBmb250LWZhbWlseTogJHNlcmlmXG4gIGZvbnQtc2l6ZTogMnJlbVxuICBmb250LXdlaWdodDogJG5vcm1hbFxuICBsaW5lLWhlaWdodDogMVxuXG5cbi8vIEZvdW5kIGluIHRoZSBNYWluIEJsb2cgUG9zdHNcbj1taW5vci1oZWFkaW5nKClcbiAgY29sb3I6ICRuaWdodGdyZWVuXG4gIGZvbnQtZmFtaWx5OiAkc2VyaWZcbiAgZm9udC1zaXplOiAxLjI1cmVtXG4gIGZvbnQtd2VpZ2h0OiAkYm9sZFxuICBsaW5lLWhlaWdodDogMVxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlXG4gICt2ZXJ0LW1hcmdpbigxLjUsMClcblxuXG4vLyBVc2VkIGluIGFydGljbGUgaGVhZGVycyBpbiB0aGUgLk1haW4gY29sdW1uc1xuPXNtYWxsLWhlYWRpbmcoKVxuICBjb2xvcjogJGdyZWVuXG4gIGZvbnQtZmFtaWx5OiAkc2VyaWZcbiAgZm9udC1zaXplOiAxLjM3NXJlbVxuICBmb250LXdlaWdodDogJG5vcm1hbFxuICBsaW5lLWhlaWdodDogMVxuXG5cbi8vIEZvdW5kIGluIHRoZSBNYWluIEJsb2cgUG9zdHNcbj1ibG9ja3F1b3RlKClcbiAgY29sb3I6ICRncmVlblxuICBmb250LWZhbWlseTogJHNlcmlmXG4gIGZvbnQtc2l6ZTogMS41cmVtXG4gIGZvbnQtc3R5bGU6IGl0YWxpY1xuICBmb250LXdlaWdodDogJGJvbGRcbiAgK3ZlcnQtbWFyZ2luKDEuNSwxLjUpXG5cblxuLy9pbnB1dFt0eXBlPVwic3VibWl0XCJdXG5cbltjbGFzcyo9X19idXR0b25dLFxuaW5wdXRbdHlwZT1cImJ1dHRvblwiXSxcbmlucHV0W3R5cGU9XCJyZXNldFwiXVxuICBib3JkZXI6IDFweCBzb2xpZCAkZ3JlZW5cbiAgZGlzcGxheTogaW5saW5lLWJsb2NrXG4gIGZvbnQtZmFtaWx5OiAkc2VyaWZcbiAgZm9udC1zaXplOiAxLjJyZW1cbiAgZm9udC1zdHlsZTogaXRhbGljXG4gIHRleHQtYWxpZ246IGNlbnRlclxuICBwYWRkaW5nOiAuNzVyZW0gM3JlbVxuICB0ZXh0LWRlY29yYXRpb246IG5vbmVcbiAgLypJdGVtcyBmb3IgdHJhbnNpdGlvblxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudFxuICBjb2xvcjogJGdyZWVuXG4gIC8qVHJhbnNpdGlvbiBzZXR0aW5nc1xuICB0cmFuc2l0aW9uOiBhbGwgLjJzIGVhc2VcblxuICAmOmhvdmVyXG4gICAgLypUaGVzZSB3aWxsIHRyYW5zaXRpb24gb24gaG92ZXJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JlZW5cbiAgICBjb2xvcjogJHdoaXRlXG5cblxuLy8gaW4gcHJvZ3Jlc3NcblxuLy8gTWl4aW5zXG49YnV0dG9uKCRiYWNrZ3JvdW5kLCAkY29sb3IsICRib3JkZXItY29sb3IpXG4gIGJvcmRlcjogMXB4IHNvbGlkICRib3JkZXItY29sb3JcbiAgZm9udC1mYW1pbHk6ICRzZXJpZlxuICBmb250LXNpemU6IDEuMnJlbVxuICBmb250LXN0eWxlOiBpdGFsaWNcbiAgcGFkZGluZzogLjVyZW0gMXJlbVxuICB0ZXh0LWRlY29yYXRpb246IG5vbmVcbiAgLypJdGVtcyBmb3IgdHJhbnNpdGlvblxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudFxuICBjb2xvcjogJGNvbG9yXG4gIC8qVHJhbnNpdGlvbiBzZXR0aW5nc1xuICB0cmFuc2l0aW9uOiBhbGwgLjJzIGVhc2VcbiAgJjpob3ZlclxuICAgIC8qVGhlc2Ugd2lsbCB0cmFuc2l0aW9uIG9uIGhvdmVyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGdyZWVuXG4gICAgY29sb3I6ICRjb2xvclxuIiwiLy8gU2l0ZSBjb2xvciBwYWxldHRlXG4kZ3JlZW46ICMyNjdlNjRcbiRuaWdodGdyZWVuOiAjNDU1NjUyXG4kc2xhdGU6ICNlZGVlZWJcblxuLy8gNTAgc2hhZGVzIG9mIGdyYXlcbiR3aGl0ZTogI2ZmZlxuJHN0ZWFtOiAjZjhmOGY4XG4kY2xvdWQ6ICNlNWU2ZTdcbiRncmFwaGl0ZTogI2NjY1xuJHN0b25lOiAjN2Y3ZTdlXG4kbGVhZDogIzZlNmI2Y1xuJGNoYXJjb2FsOiAjMzMzXG4kYmxhY2s6ICMwMDBcblxuLy8gTmF2aWdhdGlvbiBjb2xvcnNcbi8vICRuYXYtbGluazpcbi8vICRuYXYtbGluay1jdXJyZW50LXBhZ2U6XG4vLyAkbmF2LWxpbmstaG92ZXI6XG4kbW9iaWxlLW5hdi1idG46ICRzbGF0ZVxuXG4vL0JvcmRlciBDb2xvclxuJGJvcmRlckNvbG9yOiAkZ3JhcGhpdGVcblxuLy8gU2l0ZSBiYXNlIHRleHQgY29sb3JzXG4kc2l0ZS10ZXh0LWNvbG9yOiAkY2hhcmNvYWxcbiRzaXRlLXRleHQtY29sb3ItbGluazogJGdyZWVuXG4kc2l0ZS10ZXh0LWNvbG9yLWxpbmstaG92ZXI6ICM0NTU2NTJcblxuLy8gQnV0dG9uc1xuLy8gJGJ1dHRvbi1jb2xvcjpcbi8vICRidXR0b24tYmc6XG4vLyAkYnV0dG9uLWhvdmVyLWNvbG9yOlxuLy8gJGJ1dHRvbi1ob3Zlci1iZzpcblxuLy8gRm9vdGVyIGNvbG9yc1xuJGZvb3Rlci10ZXh0OiAkbmlnaHRncmVlblxuJGZvb3Rlci10ZXh0LWxpbms6ICRuaWdodGdyZWVuXG4kZm9vdGVyLXRleHQtbGluay1ob3ZlcjogJGdyZWVuXG5cbi8vIFNvY2lhbCBjb2xvcnNcbi8vICRzb2NpYWwtaWNvbi1jb2xvcjpcbi8vICRzb2NpYWwtaWNvbi1iZy1jb2xvcjpcbi8vICRzb2NpYWwtaWNvbi1jb2xvci1ob3ZlcjpcbiIsIi8vIGh0dHA6Ly9jc3Ntb2pvLmNvbS9sYXRlc3RfbmV3X2NsZWFyZml4X3NvX2Zhci9cbi5jbGVhcmZpeDphZnRlclxuICBjb250ZW50OiBcIlwiXG4gIGRpc3BsYXk6IHRhYmxlXG4gIGNsZWFyOiBib3RoXG4iLCIvLyBSRVNQT05TSVZFIElNQUdFU1xuaW1nLCBpZnJhbWUsIGVtYmVkXG4gIHdpZHRoOiAxMDAlXG4iLCIuY29udGFpbmVyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZcbiAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAkYm9yZGVyQ29sb3JcbiAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgJGJvcmRlckNvbG9yXG4gIG1hcmdpbjogMCBhdXRvXG4gIG1heC13aWR0aDogMTIwMHB4XG5cblxuW2NsYXNzKj0nY29sLSddXG4gIGRpc3BsYXk6IHRhYmxlLWNlbGxcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZVxuXG4gICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrXG4gICAgdGV4dC1hbGlnbjogY2VudGVyXG5cbi8vMiBjb2x1bW5zIHdpZGVcbi8vIFRoaXMgaXMgdXNlZCBpbiB0aGUgZm9vdGVyIGZvciBuYXJyb3dlciBjb2x1bW5zIG9mIGxpbmtzXG4uY29sLTItMTJcbiAgd2lkdGg6IDIvMTIgKiAxMDAlXG5cbiAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICB3aWR0aDogMTAwJVxuXG4vLzMgY29sdW1ucyB3aWRlXG4vLyBUaGlzIGlzIHVzZWQgaW4gdGhlIGZvb3RlciBmb3IgZmF0dGVyIGNvbHVtbnMgb2YgbG9uZ2VyLXRpdGxlZCBsaW5rc1xuLmNvbC0zLTEyXG4gIHdpZHRoOiAzLzEyICogMTAwJVxuXG4gICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgd2lkdGg6IDEwMCVcblxuLy8gNCBjb2x1bW5zIHdpZGUuXG4vLyBUaGlzIGlzIHVzZWQgaW4gdGhlIExlYWRlcnNoaXAgcGFnZS5cbi5jb2wtNC0xMlxuICB3aWR0aDogNC8xMiAqIDEwMCVcblxuICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgIHdpZHRoOiAxMDAlXG5cblxuLy8gNSBjb2x1bW5zIHdpZGUuXG4vLyBUaGlzIGlzIHVzZWQgaW4gbW9zdCBvZiB0aGUgYmFubmVycy5cbi8vIEl0IGlzIGFsc28gdXNlZCBpbiB0aGUgTWFpbiBtb2R1bGUgYXJlYSB0aGF0IGluY2x1ZGVzIHRoZSBzaWRlYmFyLlxuLmNvbC01LTEyXG4gIHdpZHRoOiA1LzEyICogMTAwJVxuXG4gICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgd2lkdGg6IDEwMCVcblxuXG4vLyA2IGNvbHVtbnMgd2lkZS5cbi8vIFRoaXMgd2lsbCBzcGFuIGhhbGYgdGhlIGF2YWlsYWJsZSB3aWR0aFxuLy8gVGhlIENhcmQgTW9kdWxlIG9uIHRoZSBob21lcGFnZSB1c2VzIHRoaXNcbi5jb2wtNi0xMlxuICB3aWR0aDogNi8xMiAqIDEwMCVcblxuICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgIHdpZHRoOiAxMDAlXG5cblxuLy8gNyBjb2x1bW5zIHdpZGUuXG4vLyBUaGlzIGlzIHVzZWQgaW4gbW9zdCBvZiB0aGUgYmFubmVycy5cbi8vIEl0IGlzIGFsc28gdXNlZCBpbiB0aGUgTWFpbiBtb2R1bGUgYXJlYSB0aGF0IGluY2x1ZGVzIHRoZSBzaWRlYmFyLlxuLy8gW2NsYXNzKj0nLS1jb2wtNy0xMiddXG4uY29sLTctMTJcbiAgd2lkdGg6IDcvMTIgKiAxMDAlXG5cbiAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICB3aWR0aDogMTAwJVxuXG5cbi8vIDggY29sdW1ucyB3aWRlLlxuLy8gVGhpcyBpcyB1c2VkIGluIHRoZSBMZWFkZXJzaGlwIHBhZ2UuXG4uY29sLTgtMTJcbiAgd2lkdGg6IDgvMTIgKiAxMDAlXG5cbiAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICB3aWR0aDogMTAwJVxuXG5cbi5jb2wtOS0xMlxuICB3aWR0aDogOS8xMiAqIDEwMCVcblxuICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgIHdpZHRoOiAxMDAlXG5cblxuLmNvbC0xMC0xMlxuICB3aWR0aDogMTAvMTIgKiAxMDAlXG5cbiAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICB3aWR0aDogMTAwJVxuXG4uY29sLTExLTEyXG4gIHdpZHRoOiAxMS8xMiAqIDEwMCVcblxuICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgIHdpZHRoOiAxMDAlXG4iLCIqXG4gIG1hcmdpbjogMFxuICBwYWRkaW5nOiAwXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3hcblxuICAmOjphZnRlciwgJjo6YmVmb3JlXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveFxuXG5ib2R5XG4gIGJhY2tncm91bmQtY29sb3I6ICRzbGF0ZVxuICBwYWRkaW5nOiAwXG5cbmFcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lXG5cbi8vUmVzZXQgZmxleGJveCBzZXR0aW5ncyB3aGVuIHJlc3BvbmRpbmcgYmVsb3cgZGVza3RvcFxuPXJlc3BvbnNpdmUtc3RhY2tcbiAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICBmbGV4LWZsb3c6IGNvbHVtblxuIiwiLy8gVGhlIHRhYmxlcyBzdGFydCB0byBsb29rIGZ1Z2x5IGF0IGFyb3VuZCA3MDBweCwgc28gbGV0J3Mgc3RhcnQgcmVzcG9uZGluZyB0aGVyZVxuJHRhYmxlLWJyZWFrOiBcIjw9NzAwcHhcIlxuXG50YWJsZVxuXHRtYXJnaW46IDAgMCAxLjVlbVxuXHR3aWR0aDogMTAwJVxuXG50clxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJGNsb3VkXG5cbiAgK21lZGlhKCR0YWJsZS1icmVhaylcbiAgICBtYXJnaW4tdG9wOiAwICFpbXBvcnRhbnQ7XG5cbiAgICAmOmZpcnN0LWNoaWxkXG4gICAgICBib3JkZXItdG9wOiAxcHggc29saWQgJGNsb3VkXG5cbiAgJjpudGgtY2hpbGQoZXZlbilcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc3RlYW1cblxudGRcbiAgdmVydGljYWwtYWxpZ246IHRvcFxuICBwYWRkaW5nOiAxMHB4IDVweFxuXG4gICttZWRpYSgkdGFibGUtYnJlYWspXG4gICAgbWFyZ2luLXRvcDogMCAhaW1wb3J0YW50O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZVxuICAgIHBhZGRpbmctbGVmdDogNDAlXG5cbiAgICAmOmJlZm9yZVxuICAgICAgcG9zaXRpb246IGFic29sdXRlXG4gICAgICB0b3A6IDZweFxuICAgICAgbGVmdDogNnB4XG4gICAgICB3aWR0aDogNDAlXG4gICAgICBwYWRkaW5nLXJpZ2h0OiAxMHB4XG4gICAgICB3aGl0ZS1zcGFjZTogbm93cmFwXG4gICAgICBmb250LXdlaWdodDogJHNlbWlib2xkXG5cblxuICAgICY6bnRoLW9mLXR5cGUoMSlcbiAgICAgICY6YmVmb3JlXG4gICAgICAgIGNvbnRlbnQ6IFwiQ2l0eTogXCJcbiAgICAmOm50aC1vZi10eXBlKDIpXG4gICAgICAmOmJlZm9yZVxuICAgICAgICBjb250ZW50OiBcIkFkZHJlc3M6IFwiXG4gICAgJjpudGgtb2YtdHlwZSgzKVxuICAgICAgJjpiZWZvcmVcbiAgICAgICAgY29udGVudDogXCJQaG9uZTogXCJcblxudGhlYWRcbiAgYmFja2dyb3VuZC1jb2xvcjogJGNsb3VkXG5cbiAgdHJcbiAgICAvL0hpZGUgdGhlIHRoZWFkIGluZm9ybWF0aW9uIGluIGFuIGFjY2Vzc2libGUgd2F5XG5cbiAgICArbWVkaWEoJHRhYmxlLWJyZWFrKVxuICAgICAgcG9zaXRpb246IGFic29sdXRlXG4gICAgICB0b3A6IC05OTk5cHhcbiAgICAgIGxlZnQ6IC05OTk5cHhcblxuICB0aFxuICAgIGZvbnQtd2VpZ2h0OiAkc2VtaWJvbGRcbiAgICB0ZXh0LWFsaWduOiBsZWZ0XG4gICAgcGFkZGluZzogNXB4XG5cbnRhYmxlLCB0aGVhZCwgdGJvZHksIHRoLCB0ZCwgdHJcbiAgK21lZGlhKCR0YWJsZS1icmVhaylcbiAgICBkaXNwbGF5OiBibG9ja1xuIiwiLm5hdi1taW5vclxuICBkaXNwbGF5OiBibG9ja1xuICB0ZXh0LWFsaWduOiByaWdodFxuXG4gICZfX2NvbnRhaW5lclxuICAgIGJhY2tncm91bmQtY29sb3I6ICR3aGl0ZVxuICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgJGJvcmRlckNvbG9yXG4gICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgJGJvcmRlckNvbG9yXG4gICAgbWFyZ2luOiAwIGF1dG9cbiAgICBwYWRkaW5nLXRvcDogMXJlbVxuICAgIG1heC13aWR0aDogMTIwMHB4XG5cbiAgICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgICAgZGlzcGxheTogbm9uZVxuXG4gIGxpXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrXG5cbiAgICAmOmFmdGVyXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgICAgIGNvbnRlbnQ6ICcgfCAnXG4gICAgICBjb2xvcjogJGdyZWVuXG4gICAgICBtYXJnaW46IDAgMnB4XG5cbiAgICAmOm50aC1jaGlsZCgzKVxuXG4gICAgICAmOmFmdGVyXG4gICAgICAgIGNvbnRlbnQ6ICcgJ1xuXG4gICZfX2xpbmtcbiAgICBjb2xvcjogJGNoYXJjb2FsXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrXG4gICAgcGFkZGluZzogMCAuNXJlbVxuXG4gICAgJjpob3ZlclxuICAgICAgY29sb3I6ICRncmVlblxuIiwiLy8gaGVhZGVyIHNpemVcbiRoZWFkZXItaGVpZ2h0LVM6IDUwcHhcbiRoZWFkZXItaGVpZ2h0LUw6IDgwcHhcblxuLy8gTmF2aWdhdGlvbiBzaXplXG4kbmF2LXdpZHRoLVM6IDI2MHB4XG5cbi8vIFNlYXJjaCBzaXplXG4kc2VhcmNoLWhlaWdodC1TOiA1MHB4XG4kc2VhcmNoLWhlaWdodC1MOiAxMjBweFxuXG4vLyB6LWluZGV4XG4kYmVsb3ctY29udGVudDogMVxuJGNvbnRlbnQ6IDJcbiRhYm92ZS1jb250ZW50OiAzXG5cbi8vXG4gIFwicGhvbmVcIjogMzIwcHgsXG4gIFwidGFibGV0XCI6IDc2OHB4LFxuICBcImRlc2t0b3BcIjogMTAyNHB4KVxuXG5cbi8vIGJyZWFrcG9pbnRzXG4gICRTOiA0ODBweFxuICAkTTogNzY4cHhcbiAgJEw6IDEwMjRweFxuICAkbWF4TDogJEwgLSAxcHhcblxuXG4vL1xuICArTVEobWF4TClcbiAgK21lZGlhKFwiPGRlc2t0b3BcIilcblxuLy9cbiAgK01RKEwpXG4gICttZWRpYShcIj5kZXNrdG9wXCIpXG5cblxuLy8gc3VwZXIgbGlnaHQgZ3JpZCAtIGl0IHdvcmtzIHdpdGggdGhlIC5jZC1jb250YWluZXIgY2xhc3MgaW5zaWRlIHN0eWxlLnNjc3NcblxuPWNvbHVtbigkcGVyY2VudGFnZSwgJGZsb2F0LWRpcmVjdGlvbjogbGVmdClcbiAgd2lkdGg6IDEwMCUgKiAkcGVyY2VudGFnZVxuICBmbG9hdDogJGZsb2F0LWRpcmVjdGlvblxuXG49Y2xlYXJmaXhcbiAgJjphZnRlclxuICAgIGNvbnRlbnQ6IFwiXCJcbiAgICBkaXNwbGF5OiB0YWJsZVxuICAgIGNsZWFyOiBib3RoXG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKlxuICpQcmltYXJ5IHN0eWxlXG4gKlxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5ib2R5XG4gICttZWRpYShcIjxkZXNrdG9wXCIpXG4gICAgLy8gbGF5b3V0IG1peGlucyBpbnNpZGUgcGFydGlhbHMgPiBfbGF5b3V0LnNjc3NcbiAgICAmLm5hdi1vbi1sZWZ0Lm92ZXJmbG93LWhpZGRlblxuICAgICAgb3ZlcmZsb3c6IGhpZGRlblxuXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotbXMtY2xlYXJcbiAgLyogcmVtb3ZlcyBjbG9zZSBpY29uIC0gSUVcbiAgZGlzcGxheTogbm9uZVxuXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uLFxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLXJlc3VsdHMtYnV0dG9uLFxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtcmVzdWx0cy1kZWNvcmF0aW9uXG4gIGRpc3BsYXk6IG5vbmVcblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqXG4gKk1haW4gY29tcG9uZW50c1xuICpcbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLmNkLW1haW4tY29udGVudCxcbi5jZC1tYWluLWhlYWRlclxuICAvKiBGb3JjZSBIYXJkd2FyZSBBY2NlbGVyYXRpb24gaW4gV2ViS2l0XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKVxuICB3aWxsLWNoYW5nZTogdHJhbnNmb3JtXG5cbiAgdWxcbiAgICBsaXN0LXN0eWxlOiBub25lXG5cbi5jZC1tYWluLWNvbnRlbnRcbiAgcG9zaXRpb246IHJlbGF0aXZlXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzXG5cbiAgK21lZGlhKFwiPGRlc2t0b3BcIilcbiAgICAmLm5hdi1pcy12aXNpYmxlXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLSRuYXYtd2lkdGgtUylcblxuICAgIC5uYXYtb24tbGVmdCAmLm5hdi1pcy12aXNpYmxlXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoJG5hdi13aWR0aC1TKVxuXG4uY2QtbWFpbi1oZWFkZXJcbiAgZm9udC1mYW1pbHk6ICRzZXJpZlxuICBwb3NpdGlvbjogcmVsYXRpdmVcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3NcblxuICArbWVkaWEoXCI8ZGVza3RvcFwiKVxuICAgICYubmF2LWlzLXZpc2libGVcbiAgICAgIC8vdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0kbmF2LXdpZHRoLVMpXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMClcblxuICAgIC5uYXYtb24tbGVmdCAmLm5hdi1pcy12aXNpYmxlXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoJG5hdi13aWR0aC1TKVxuXG4uY2QtbWFpbi1jb250ZW50XG4gIC8vQ0hBTkdFRFxuICAvL2JhY2tncm91bmQ6ICRjbG91ZFxuICBtaW4taGVpZ2h0OiAxMDB2aFxuICB6LWluZGV4OiAkY29udGVudFxuXG4uY2QtbWFpbi1oZWFkZXJcbiAgaGVpZ2h0OiAkaGVhZGVyLWhlaWdodC1TXG4gIGJhY2tncm91bmQ6ICR3aGl0ZVxuICB6LWluZGV4OiAkYWJvdmUtY29udGVudFxuXG4gIC8vQ0hBTkdFRFxuICAvL2JveC1zaGFkb3c6IDAgMXB4IDVweCByZ2JhKDEwMCwxMDAsMTAwLCAuNSlcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRjbG91ZFxuXG4gIC5uYXYtaXMtZml4ZWQgJlxuICAgIC8qIGFkZCAubmF2LWlzLWZpeGVkIGNsYXNzIHRvIGJvZHkgaWYgeW91IHdhbnQgYSBmaXhlZCBuYXZpZ2F0aW9uIG9uID4gMTAyNHB4XG4gICAgcG9zaXRpb246IGZpeGVkXG4gICAgdG9wOiAwXG4gICAgbGVmdDogMFxuICAgIHdpZHRoOiAxMDAlXG5cbiAgK21lZGlhKFwiPmRlc2t0b3BcIilcbiAgICBoZWlnaHQ6ICRoZWFkZXItaGVpZ2h0LUxcbiAgICArY2xlYXJmaXhcblxuLmNkLWxvZ29cbiAgcG9zaXRpb246IGFic29sdXRlXG4gIHRvcDogMTJweFxuICBsZWZ0OiA1JVxuXG4gIGltZ1xuICAgIGRpc3BsYXk6IGJsb2NrXG5cbiAgK21lZGlhKFwiPGRlc2t0b3BcIilcbiAgICAubmF2LW9uLWxlZnQgJlxuICAgICAgbGVmdDogYXV0b1xuICAgICAgcmlnaHQ6IDUlXG5cbiAgK21lZGlhKFwiPmRlc2t0b3BcIilcbiAgICB0b3A6IDI2cHhcbiAgICBsZWZ0OiA0ZW1cblxuLmNkLWhlYWRlci1idXR0b25zXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZVxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgdG9wOiAzcHhcbiAgcmlnaHQ6IDUlXG5cbiAgbGlcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcblxuICArbWVkaWEoXCI8ZGVza3RvcFwiKVxuICAgIC5uYXYtb24tbGVmdCAmXG4gICAgICByaWdodDogYXV0b1xuICAgICAgbGVmdDogNSVcbiAgICAgIGxpXG4gICAgICAgIGZsb2F0OiByaWdodFxuXG4gICttZWRpYShcIj5kZXNrdG9wXCIpXG4gICAgdG9wOiAxcmVtXG4gICAgcmlnaHQ6IDFyZW1cblxuLmNkLXNlYXJjaC10cmlnZ2VyLFxuLmNkLW5hdi10cmlnZ2VyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZVxuICBkaXNwbGF5OiBibG9ja1xuICB3aWR0aDogNDRweFxuICBoZWlnaHQ6IDQ0cHhcbiAgb3ZlcmZsb3c6IGhpZGRlblxuICB3aGl0ZS1zcGFjZTogbm93cmFwXG4gIC8qIGhpZGUgdGV4dFxuICBjb2xvcjogdHJhbnNwYXJlbnRcbiAgei1pbmRleDogJGFib3ZlLWNvbnRlbnRcblxuLmNkLXNlYXJjaC10cmlnZ2VyXG4gICY6OmJlZm9yZSwgJjo6YWZ0ZXJcbiAgICAvKiBzZWFyY2ggaWNvblxuICAgIGNvbnRlbnQ6ICcnXG4gICAgcG9zaXRpb246IGFic29sdXRlXG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzXG4gICAgLyogRm9yY2UgSGFyZHdhcmUgQWNjZWxlcmF0aW9uIGluIFdlYktpdFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKVxuICAgIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlblxuXG4gICY6OmJlZm9yZVxuICAgIC8qIGxlbnNcbiAgICB0b3A6IDExcHhcbiAgICBsZWZ0OiAxMXB4XG4gICAgd2lkdGg6IDE4cHhcbiAgICBoZWlnaHQ6IDE4cHhcbiAgICBib3JkZXItcmFkaXVzOiA1MCVcbiAgICBib3JkZXI6IDNweCBzb2xpZCAkbmlnaHRncmVlblxuXG4gICY6OmFmdGVyXG4gICAgLyogaGFuZGxlXG4gICAgaGVpZ2h0OiAzcHhcbiAgICB3aWR0aDogOHB4XG4gICAgYmFja2dyb3VuZDogJG5pZ2h0Z3JlZW5cbiAgICBib3R0b206IDE0cHhcbiAgICByaWdodDogMTFweFxuICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKVxuICBzcGFuXG4gICAgLyogY29udGFpbmVyIGZvciB0aGUgWCBpY29uXG4gICAgcG9zaXRpb246IGFic29sdXRlXG4gICAgaGVpZ2h0OiAxMDAlXG4gICAgd2lkdGg6IDEwMCVcbiAgICB0b3A6IDBcbiAgICBsZWZ0OiAwXG4gIHNwYW46OmJlZm9yZSwgc3Bhbjo6YWZ0ZXJcbiAgICAvKiBjbG9zZSBpY29uXG4gICAgY29udGVudDogJydcbiAgICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgICBoZWlnaHQ6IDNweFxuICAgIHdpZHRoOiAyMnB4XG4gICAgdG9wOiA1MCVcbiAgICBtYXJnaW4tdG9wOiAtMnB4XG4gICAgbGVmdDogNTAlXG4gICAgbWFyZ2luLWxlZnQ6IC0xMXB4XG4gICAgYmFja2dyb3VuZDogJG5pZ2h0Z3JlZW5cbiAgICBvcGFjaXR5OiAwXG4gICAgLyogRm9yY2UgSGFyZHdhcmUgQWNjZWxlcmF0aW9uIGluIFdlYktpdFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKVxuICAgIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlblxuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcywgdHJhbnNmb3JtIDAuM3NcblxuICBzcGFuOjpiZWZvcmVcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZylcblxuICBzcGFuOjphZnRlclxuICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZylcblxuICAmLnNlYXJjaC1pcy12aXNpYmxlXG4gICAgJjo6YmVmb3JlLCAmOjphZnRlclxuICAgICAgLyogaGlkZSBzZWFyY2ggaWNvblxuICAgICAgb3BhY2l0eTogMFxuICAgIHNwYW46OmJlZm9yZSwgc3Bhbjo6YWZ0ZXJcbiAgICAgIC8qIHNob3cgY2xvc2UgaWNvblxuICAgICAgb3BhY2l0eTogMVxuICAgIHNwYW46OmJlZm9yZVxuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMTM1ZGVnKVxuICAgIHNwYW46OmFmdGVyXG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZylcblxuLmNkLW5hdi10cmlnZ2VyXG4gIHNwYW4sIHNwYW46OmJlZm9yZSwgc3Bhbjo6YWZ0ZXJcbiAgICAvKiBoYW1idXJnZXIgaWNvbiBpbiBDU1NcbiAgICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgICBoZWlnaHQ6IDNweFxuICAgIHdpZHRoOiAyNHB4XG4gICAgYmFja2dyb3VuZDogJG5pZ2h0Z3JlZW5cbiAgc3BhblxuICAgIC8qIGxpbmUgaW4gdGhlIGNlbnRlclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZVxuICAgIHRvcDogNTAlXG4gICAgcmlnaHQ6IDEwcHhcbiAgICBtYXJnaW4tdG9wOiAtMnB4XG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjNzIDAuM3NcbiAgc3Bhbjo6YmVmb3JlLCBzcGFuOjphZnRlclxuICAgIC8qIG90aGVyIDIgbGluZXNcbiAgICBjb250ZW50OiAnJ1xuICAgIHJpZ2h0OiAwXG4gICAgLyogRm9yY2UgSGFyZHdhcmUgQWNjZWxlcmF0aW9uIGluIFdlYktpdFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKVxuICAgIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlblxuICAgIHRyYW5zZm9ybS1vcmlnaW46IDAlIDUwJVxuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzIDAuM3NcbiAgc3Bhbjo6YmVmb3JlXG4gICAgLyogbWVudSBpY29uIHRvcCBsaW5lXG4gICAgdG9wOiAtNnB4XG4gIHNwYW46OmFmdGVyXG4gICAgLyogbWVudSBpY29uIGJvdHRvbSBsaW5lXG4gICAgdG9wOiA2cHhcbiAgJi5uYXYtaXMtdmlzaWJsZVxuICAgIHNwYW5cbiAgICAgIC8qIGhpZGUgbGluZSBpbiB0aGUgY2VudGVyXG4gICAgICBiYWNrZ3JvdW5kOiByZ2JhKCRuaWdodGdyZWVuLCAwKVxuICAgIHNwYW46OmJlZm9yZSwgc3Bhbjo6YWZ0ZXJcbiAgICAgIC8qIGtlZXAgdmlzaWJsZSBvdGhlciAyIGxpbmVzXG4gICAgICBiYWNrZ3JvdW5kOiByZ2JhKCRuaWdodGdyZWVuLCAxKVxuICAgIHNwYW46OmJlZm9yZVxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDRweCkgdHJhbnNsYXRlWSgtM3B4KSByb3RhdGUoNDVkZWcpXG4gICAgc3Bhbjo6YWZ0ZXJcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg0cHgpIHRyYW5zbGF0ZVkoMnB4KSByb3RhdGUoLTQ1ZGVnKVxuICArbWVkaWEoXCI+ZGVza3RvcFwiKVxuICAgIGRpc3BsYXk6IG5vbmVcblxuXG4uY2QtcHJpbWFyeS1uYXYsXG4uY2QtcHJpbWFyeS1uYXYgdWxcbiAgcG9zaXRpb246IGZpeGVkXG4gIHRvcDogMFxuICByaWdodDogMFxuICBoZWlnaHQ6IDEwMCVcbiAgd2lkdGg6ICRuYXYtd2lkdGgtU1xuICBiYWNrZ3JvdW5kOiAkbmlnaHRncmVlblxuICBvdmVyZmxvdzogYXV0b1xuICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2hcbiAgei1pbmRleDogJGJlbG93LWNvbnRlbnRcblxuICAvKiBGb3JjZSBIYXJkd2FyZSBBY2NlbGVyYXRpb24gaW4gV2ViS2l0XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKVxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMClcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3NcblxuICBhXG4gICAgZGlzcGxheTogYmxvY2tcbiAgICBmb250LXNpemU6IDEuMnJlbVxuICAgIGhlaWdodDogNTBweFxuICAgIGxpbmUtaGVpZ2h0OiA1MHB4XG4gICAgcGFkZGluZzogMCAyMHB4XG4gICAgY29sb3I6ICR3aGl0ZVxuICAgIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkXG4gICAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZVxuICAgIG92ZXJmbG93OiBoaWRkZW5cbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpc1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXBcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgbGlnaHRlbigkbmlnaHRncmVlbiwgNSUpXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApXG4gICAgd2lsbC1jaGFuZ2U6IHRyYW5zZm9ybSwgb3BhY2l0eVxuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzLCBvcGFjaXR5IDAuM3NcblxuICAmLmlzLWhpZGRlblxuICAgIC8qIHNlY29uZGFyeSBuYXZpZ2F0aW9ucyBoaWRkZW4gYnkgZGVmYXVsdFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMDAlKVxuXG4gICYubW92ZXMtb3V0ID4gbGkgPiBhXG4gICAgLyogcHVzaCB0aGUgbmF2aWdhdGlvbiBpdGVtcyB0byB0aGUgbGVmdCAtIGFuZCBsb3dlciBkb3duIG9wYWNpdHkgLSB3aGVuIHNlY29uZGFyeSBuYXYgc2xpZGVzIGluXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKVxuICAgIG9wYWNpdHk6IDBcblxuK21lZGlhKFwiPGRlc2t0b3BcIilcbiAgLm5hdi1vbi1sZWZ0IC5jZC1wcmltYXJ5LW5hdixcbiAgLm5hdi1vbi1sZWZ0IC5jZC1wcmltYXJ5LW5hdiB1bFxuICAgIHJpZ2h0OiBhdXRvXG4gICAgbGVmdDogMFxuXG5cbi5jZC1wcmltYXJ5LW5hdlxuICAuc2VlLWFsbCBhXG4gICAgLyogZGlmZmVyZW50IHN0eWxlIGZvciB0aGUgU2VlIGFsbCBidXR0b24gb24gbW9iaWxlIGFuZCB0YWJsZXRcbiAgICBjb2xvcjogJGdyZWVuXG5cbiAgLmNkLW5hdi1nYWxsZXJ5IC5jZC1uYXYtaXRlbSxcbiAgLmNkLW5hdi1pY29ucyAuY2QtbmF2LWl0ZW1cbiAgICAvKiBpdGVtcyB3aXRoIHBpY3R1cmUgKG9yIGljb24pIGFuZCB0aXRsZVxuICAgIGhlaWdodDogODBweFxuICAgIGxpbmUtaGVpZ2h0OiA4MHB4XG5cbiAgICBoM1xuICAgICAgb3ZlcmZsb3c6IGhpZGRlblxuICAgICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXNcblxuICAuY2QtbmF2LWdhbGxlcnkgLmNkLW5hdi1pdGVtXG4gICAgcGFkZGluZy1sZWZ0OiA5MHB4XG5cbiAgICBpbWdcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZVxuICAgICAgZGlzcGxheTogYmxvY2tcbiAgICAgIGhlaWdodDogNDBweFxuICAgICAgd2lkdGg6IGF1dG9cbiAgICAgIGxlZnQ6IDIwcHhcbiAgICAgIHRvcDogNTAlXG4gICAgICBtYXJnaW4tdG9wOiAtMjBweFxuXG4gIC5jZC1uYXYtaWNvbnMgLmNkLW5hdi1pdGVtXG4gICAgcGFkZGluZy1sZWZ0OiA3NXB4XG5cbiAgICBwXG4gICAgICBjb2xvcjogJG5pZ2h0Z3JlZW5cbiAgICAgIGZvbnQtc2l6ZTogMS4zcmVtXG4gICAgICAvKiBoaWRlIGRlc2NyaXB0aW9uIG9uIHNtYWxsIGRldmljZXNcbiAgICAgIGRpc3BsYXk6IG5vbmVcblxuICAgICY6OmJlZm9yZVxuICAgICAgLyogaXRlbSBpY29uXG4gICAgICBjb250ZW50OiAnJ1xuICAgICAgZGlzcGxheTogYmxvY2tcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZVxuICAgICAgbGVmdDogMjBweFxuICAgICAgdG9wOiA1MCVcbiAgICAgIG1hcmdpbi10b3A6IC0yMHB4XG4gICAgICB3aWR0aDogNDBweFxuICAgICAgaGVpZ2h0OiA0MHB4XG4gICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0XG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyXG4gICAgICBiYWNrZ3JvdW5kLXNpemU6IDQwcHggNDBweFxuXG4gICAgJi5pdGVtLTE6OmJlZm9yZVxuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiL2ltYWdlcy9saW5lLWljb24tMS5zdmdcIilcbiAgICAmLml0ZW0tMjo6YmVmb3JlXG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIvaW1hZ2VzL2xpbmUtaWNvbi0yLnN2Z1wiKVxuICAgICYuaXRlbS0zOjpiZWZvcmVcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi9pbWFnZXMvbGluZS1pY29uLTMuc3ZnXCIpXG4gICAgJi5pdGVtLTQ6OmJlZm9yZVxuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiL2ltYWdlcy9saW5lLWljb24tNC5zdmdcIilcbiAgICAmLml0ZW0tNTo6YmVmb3JlXG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIvaW1hZ2VzL2xpbmUtaWNvbi01LnN2Z1wiKVxuICAgICYuaXRlbS02OjpiZWZvcmVcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi9pbWFnZXMvbGluZS1pY29uLTYuc3ZnXCIpXG4gICAgJi5pdGVtLTc6OmJlZm9yZVxuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiL2ltYWdlcy9saW5lLWljb24tNy5zdmdcIilcbiAgICAmLml0ZW0tODo6YmVmb3JlXG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIvaW1hZ2VzL2xpbmUtaWNvbi04LnN2Z1wiKVxuXG4gICttZWRpYShcIjxkZXNrdG9wXCIpXG4gICAgLyogYnkgZGVmYXVsdCAuY2QtcHJpbWFyeS1uYXYgaXMgaGlkZGVuIC0gdHJpY2sgZm9yIGlPUyBkZXZpY2VzIHdoZXJlIHlvdSBjYW4gc2VlIHRoZSBuYXZpZ2F0aW9uIGlmIHlvdSBwdWxsIGRvd25cbiAgICB2aXNpYmlsaXR5OiBoaWRkZW5cbiAgICB0cmFuc2l0aW9uOiB2aXNpYmlsaXR5IDBzIDAuM3NcbiAgICAmLm5hdi1pcy12aXNpYmxlXG4gICAgICB2aXNpYmlsaXR5OiB2aXNpYmxlXG4gICAgICB0cmFuc2l0aW9uOiB2aXNpYmlsaXR5IDBzIDBzXG5cbittZWRpYShcIj5kZXNrdG9wXCIpXG5cbiAgLmNkLXByaW1hcnktbmF2XG4gICAgcG9zaXRpb246IHN0YXRpY1xuICAgIHBhZGRpbmc6IDAgNTBweCAwIDBcbiAgICBoZWlnaHQ6IGF1dG9cbiAgICB3aWR0aDogMTAwJVxuICAgIC8vZmxvYXQ6IHJpZ2h0XG4gICAgb3ZlcmZsb3c6IHZpc2libGVcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudFxuICAgIHRleHQtYWxpZ246IGNlbnRlclxuXG4gICAgK2NsZWFyZml4XG5cbiAgICAmLm1vdmVzLW91dCA+IGxpID4gYVxuICAgICAgLyogcmVzZXQgbW9iaWxlIHN0eWxlXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMClcbiAgICAgIG9wYWNpdHk6IDFcblxuICAgIHVsXG4gICAgICBwb3NpdGlvbjogc3RhdGljXG4gICAgICBoZWlnaHQ6IGF1dG9cbiAgICAgIHdpZHRoOiBhdXRvXG4gICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudFxuICAgICAgb3ZlcmZsb3c6IHZpc2libGVcbiAgICAgIHRleHQtYWxpZ246IGxlZnRcbiAgICAgIHotaW5kZXg6ICRhYm92ZS1jb250ZW50XG5cbiAgICAgICYuaXMtaGlkZGVuXG4gICAgICAgIC8qIHJlc2V0IG1vYmlsZSBzdHlsZVxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMClcblxuICAgICAgJi5tb3Zlcy1vdXQgPiBsaSA+IGFcbiAgICAgICAgLyogcmVzZXQgbW9iaWxlIHN0eWxlXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKVxuICAgICAgICBvcGFjaXR5OiAxXG5cbiAgICAvL1RvcCBuYXYgaXRlbXNcbiAgICA+IGxpXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgICAgIC8vZmxvYXQ6IGxlZnRcbiAgICAgIG1hcmdpbi1sZWZ0OiAuNXJlbVxuXG4gICAgPiBsaSA+IGFcbiAgICAgIC8qIG1haW4gbmF2aWdhdGlvbiBidXR0b25zIHN0eWxlXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmVcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgICAgaGVpZ2h0OiAkaGVhZGVyLWhlaWdodC1MXG4gICAgICBsaW5lLWhlaWdodDogJGhlYWRlci1oZWlnaHQtTFxuICAgICAgcGFkZGluZzogMFxuICAgICAgY29sb3I6ICRuaWdodGdyZWVuXG4gICAgICBvdmVyZmxvdzogdmlzaWJsZVxuICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZVxuICAgICAgdHJhbnNpdGlvbjogY29sb3IgMC4zcywgYm94LXNoYWRvdyAwLjNzXG5cbiAgICAgICY6aG92ZXJcbiAgICAgICAgY29sb3I6ICRncmVlblxuICAgICAgJi5zZWxlY3RlZFxuICAgICAgICBjb2xvcjogJGdyZWVuXG4gICAgICAgIGJveC1zaGFkb3c6IGluc2V0IDAgLTJweCAwICRncmVlblxuXG4gICAgLmdvLWJhY2ssIC5zZWUtYWxsXG4gICAgICBkaXNwbGF5OiBub25lXG5cbiAgICAuY2Qtc2Vjb25kYXJ5LW5hdixcbiAgICAuY2QtbmF2LWdhbGxlcnksXG4gICAgLmNkLW5hdi1pY29uc1xuICAgICAgLyogZHJvcGRvd24gbWVudSBzdHlsZVxuICAgICAgcG9zaXRpb246IGFic29sdXRlXG4gICAgICB0b3A6ICRoZWFkZXItaGVpZ2h0LUxcbiAgICAgIC8vd2lkdGg6IDEwMHZ3XG4gICAgICB3aWR0aDogMTAwJVxuICAgICAgYmFja2dyb3VuZDogJHdoaXRlXG4gICAgICAvL0NIQU5HRURcbiAgICAgIC8vcGFkZGluZzogNDhweCA2NHB4IDEzMHB4XG4gICAgICBwYWRkaW5nOiAycmVtXG4gICAgICBib3gtc2hhZG93OiBpbnNldCAwIDFweCAwICRjbG91ZCwgMCAzcHggNnB4IHJnYmEoIzAwMCwgMC4wNSlcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKVxuICAgICAgK2NsZWFyZml4XG5cbiAgICAgIHRyYW5zaXRpb246IG9wYWNpdHkgLjNzIDBzLCB2aXNpYmlsaXR5IDBzIDBzXG5cbiAgICAgICYuaXMtaGlkZGVuXG4gICAgICAgIG9wYWNpdHk6IDBcbiAgICAgICAgdmlzaWJpbGl0eTogaGlkZGVuXG4gICAgICAgIHRyYW5zaXRpb246IG9wYWNpdHkgLjNzIDBzLCB2aXNpYmlsaXR5IDBzIC4zc1xuXG4gICAgICA+IC5zZWUtYWxsXG4gICAgICAgIC8qIHRoaXMgaXMgdGhlIEJJRyBTZWUgYWxsIGJ1dHRvbiBhdCB0aGUgYm90dG9tIG9mIHRoZSBkcm9wZG93biBtZW51XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZVxuICAgICAgICBsZWZ0OiAwXG4gICAgICAgIGJvdHRvbTogMFxuICAgICAgICBoZWlnaHQ6IDgwcHhcbiAgICAgICAgd2lkdGg6IDEwMCVcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlblxuICAgICAgICAvKiByZXNldCBzb21lIGluaGVyaXRlZCBzdHlsZVxuICAgICAgICBtYXJnaW46IDBcbiAgICAgICAgcGFkZGluZzogMFxuXG4gICAgICAgIGFcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgICAgICAgICB3aWR0aDogMTAwJVxuICAgICAgICAgIGhlaWdodDogMTAwJVxuICAgICAgICAgIHRvcDogMFxuICAgICAgICAgIGxlZnQ6IDBcbiAgICAgICAgICBmb250LXNpemU6IDIuMnJlbVxuICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkXG4gICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyXG4gICAgICAgICAgbGluZS1oZWlnaHQ6IDgwcHhcbiAgICAgICAgICBib3JkZXItdG9wOiAxcHggc29saWQgJGNsb3VkXG4gICAgICAgICAgLyogcmVzZXQgc29tZSBpbmhlcml0ZWQgc3R5bGVcbiAgICAgICAgICBib3JkZXItYm90dG9tOiBub25lXG4gICAgICAgICAgbWFyZ2luOiAwXG4gICAgICAgICAgcGFkZGluZzogMFxuICAgICAgICAgIHRyYW5zaXRpb246IGNvbG9yIDAuMnMsIGJhY2tncm91bmQgMC4ycywgYm9yZGVyIDAuMnNcblxuICAgICAgICAgICY6aG92ZXJcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICRuaWdodGdyZWVuXG4gICAgICAgICAgICBib3JkZXItY29sb3I6ICRuaWdodGdyZWVuXG4gICAgICAgICAgICBjb2xvcjogJHdoaXRlXG5cbiAgICAuY2Qtc2Vjb25kYXJ5LW5hdlxuXG4gICAgICA+IGxpXG4gICAgICAgIC8qIGNoYW5nZSB0aGUgaGVpZ2h0IGFjY29yZGluZyB0byB5b3VyIG5lZWRzIC0geW91IGNhbiBldmVuIHNldCBoZWlnaHQ6IGF1dG9cbiAgICAgICAgaGVpZ2h0OiAzNDBweFxuICAgICAgICAvKiBoZXJlIHlvdSBzZXQgdGhlIG51bWJlciBvZiBjb2x1bW5zIC0gdXNlIHdpZHRoIHBlcmNlbnRhZ2VcbiAgICAgICAgK2NvbHVtbigwLjIzKVxuICAgICAgICAvLyBzZWUgcGFydGlhbHMgPiBfbGF5b3V0LnNjc3NcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAyLjY2JVxuICAgICAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAkY2xvdWRcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlblxuICAgICAgICBvdmVyZmxvdy14OiBoaWRkZW5cbiAgICAgICAgb3ZlcmZsb3cteTogYXV0b1xuICAgICAgICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2hcblxuICAgICAgICAmOm50aC1jaGlsZCg0bisyKVxuICAgICAgICAgIC8qICsyIGJlY2F1c2Ugd2UgaGF2ZSAyIGxpc3QgaXRlbXMgd2l0aCBkaXNwbGF5Om5vbmVcbiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDBcbiAgICAgICAgICBib3JkZXItcmlnaHQ6IG5vbmVcblxuICAgICAgICA+IGFcbiAgICAgICAgICAvKiBzZWNvbmRhcnkgbmF2IHRpdGxlXG4gICAgICAgICAgY29sb3I6ICRncmVlblxuICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkXG4gICAgICAgICAgZm9udC1zaXplOiAxLjZyZW1cbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAuNmVtXG5cbiAgICAgIGFcbiAgICAgICAgaGVpZ2h0OiAzMHB4XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAzMHB4XG4gICAgICAgIHBhZGRpbmc6IDAgMTglIDAgMFxuICAgICAgICBjb2xvcjogJG5pZ2h0Z3JlZW5cbiAgICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZVxuICAgICAgICBmb250LXNpemU6IDEuNHJlbVxuXG4gICAgICAgICY6aG92ZXJcbiAgICAgICAgICBjb2xvcjogJGdyZWVuXG5cbiAgICAgIHVsXG4gICAgICAgIC8qIEZvcmNlIEhhcmR3YXJlIEFjY2VsZXJhdGlvbiBpbiBXZWJLaXRcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApXG5cbiAgICAgIHVsIHVsXG4gICAgICAgIC8qIHRlcnRpYXJ5IG5hdmlnYXRpb25cbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlXG4gICAgICAgIHRvcDogMFxuICAgICAgICBsZWZ0OiAwXG4gICAgICAgIGhlaWdodDogMTAwJVxuICAgICAgICB3aWR0aDogMTAwJVxuXG4gICAgICAgICYuaXMtaGlkZGVuXG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwMCUpXG5cbiAgICAgICAgLmdvLWJhY2tcbiAgICAgICAgICBkaXNwbGF5OiBibG9ja1xuXG4gICAgICAgICAgYVxuICAgICAgICAgICAgY29sb3I6IHRyYW5zcGFyZW50XG5cbiAgICAgICAgLnNlZS1hbGxcbiAgICAgICAgICBkaXNwbGF5OiBibG9ja1xuXG4gICAgICAubW92ZXMtb3V0ID4gbGkgPiBhXG4gICAgICAgIC8qIHB1c2ggdGhlIG5hdmlnYXRpb24gaXRlbXMgdG8gdGhlIGxlZnQgLSBhbmQgbG93ZXIgZG93biBvcGFjaXR5IC0gd2hlbiB0ZXJ0aWFyeSBuYXYgc2xpZGVzIGluXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSlcblxuICAgIC5jZC1uYXYtZ2FsbGVyeVxuICAgICAgYm94LXNoYWRvdzogMCA1cHggNXB4IHJnYmEoMTAwLDEwMCwxMDAsLjMpXG5cbiAgICAgIGxpXG4gICAgICAgIC8qIHNldCBoZXJlIG51bWJlciBvZiBjb2x1bW5zIC0gdXNlIHdpZHRoIHBlcmNlbnRhZ2VcbiAgICAgICAgLy8rY29sdW1uKDAuMjIpXG4gICAgICAgIC8vbWFyZ2luOiAwIDQlIDQwcHggMFxuXG4gICAgICAgIGZsb2F0OiBsZWZ0XG4gICAgICAgIHdpZHRoOiAyNSVcbiAgICAgICAgcGFkZGluZzogMXJlbVxuXG4gICAgICAgICY6bnRoLWNoaWxkKDRuKzIpXG4gICAgICAgICAgLyogKzIgYmVjYXVzZSB3ZSBoYXZlIHR3byBhZGRpdGlvbmFsIGxpc3QgaXRlbXMgd2l0aCBkaXNwbGF5Om5vbmVcbiAgICAgICAgICAvL21hcmdpbi1yaWdodDogMFxuXG4gICAgICAuY2QtbmF2LWl0ZW1cbiAgICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZVxuICAgICAgICBwYWRkaW5nOiAwXG4gICAgICAgIGhlaWdodDogYXV0b1xuICAgICAgICBsaW5lLWhlaWdodDogMS4yXG5cbiAgICAgICAgaW1nXG4gICAgICAgICAgcG9zaXRpb246IHN0YXRpY1xuICAgICAgICAgIG1hcmdpbi10b3A6IDBcbiAgICAgICAgICBoZWlnaHQ6IGF1dG9cbiAgICAgICAgICB3aWR0aDogMTAwJVxuICAgICAgICAgIG1hcmdpbi1ib3R0b206IC42cmVtXG5cbiAgICAgICAgaDNcbiAgICAgICAgICBjb2xvcjogJGdyZWVuXG4gICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGRcbiAgICAgICAgICBmb250LXNpemU6IC45cmVtXG4gICAgICAgICAgcGFkZGluZzogMCAuNHJlbVxuXG4gICAgLmNkLW5hdi1pY29uc1xuXG4gICAgICBsaVxuICAgICAgICAvKiBzZXQgaGVyZSBudW1iZXIgb2YgY29sdW1ucyAtIHVzZSB3aWR0aCBwZXJjZW50YWdlXG4gICAgICAgICtjb2x1bW4oMC4zMilcbiAgICAgICAgbWFyZ2luOiAwIDIlIDIwcHggMFxuICAgICAgICAmOm50aC1jaGlsZCgzbisyKVxuICAgICAgICAgIC8qICsyIGJlY2F1c2Ugd2UgaGF2ZSB0d28gYWRkaXRpb25hbCBsaXN0IGl0ZW1zIHdpdGggZGlzcGxheTpub25lXG4gICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwXG4gICAgICAuY2QtbmF2LWl0ZW1cbiAgICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZVxuICAgICAgICBoZWlnaHQ6IDgwcHhcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuMlxuICAgICAgICBwYWRkaW5nOiAyNHB4IDAgMCA4NXB4XG4gICAgICAgICY6aG92ZXJcbiAgICAgICAgICBiYWNrZ3JvdW5kOiBsaWdodGVuKCRjbG91ZCwgOCUpXG4gICAgICAgIGgzXG4gICAgICAgICAgY29sb3I6ICRncmVlblxuICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkXG4gICAgICAgIHBcbiAgICAgICAgICBkaXNwbGF5OiBibG9ja1xuICAgICAgICAmOjpiZWZvcmVcbiAgICAgICAgICBsZWZ0OiAyNXB4XG5cblxuLmhhcy1jaGlsZHJlbiA+IGEsIC5nby1iYWNrIGFcbiAgcG9zaXRpb246IHJlbGF0aXZlXG4gICY6OmJlZm9yZSwgJjo6YWZ0ZXJcbiAgICAvKiBhcnJvdyBpY29uIGluIENTUyAtIGZvciBlbGVtZW50IHdpdGggbmVzdGVkIHVub3JkZXJlZCBsaXN0c1xuICAgIGNvbnRlbnQ6ICcnXG4gICAgcG9zaXRpb246IGFic29sdXRlXG4gICAgdG9wOiA1MCVcbiAgICBtYXJnaW4tdG9wOiAtMXB4XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrXG4gICAgaGVpZ2h0OiAycHhcbiAgICB3aWR0aDogMTBweFxuICAgIGJhY2tncm91bmQ6IGxpZ2h0ZW4oJG5pZ2h0Z3JlZW4sIDEwJSlcblxuICAgIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlblxuICAmOjpiZWZvcmVcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZylcbiAgJjo6YWZ0ZXJcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpXG4gICttZWRpYShcIj5kZXNrdG9wXCIpXG4gICAgJjo6YmVmb3JlLCAmOjphZnRlclxuICAgICAgYmFja2dyb3VuZDogZGFya2VuKCRjbG91ZCwgMTAlKVxuICAgICY6aG92ZXI6OmJlZm9yZSwgJjpob3Zlcjo6YWZ0ZXJcbiAgICAgIGJhY2tncm91bmQ6ICRncmVlblxuXG4uaGFzLWNoaWxkcmVuID4gYVxuICBwYWRkaW5nLXJpZ2h0OiA0MHB4XG4gICY6OmJlZm9yZSwgJjo6YWZ0ZXJcbiAgICAvKiBhcnJvdyBnb2VzIG9uIHRoZSByaWdodCBzaWRlIC0gY2hpbGRyZW4gbmF2aWdhdGlvblxuICAgIHJpZ2h0OiAyMHB4XG4gICAgdHJhbnNmb3JtLW9yaWdpbjogOXB4IDUwJVxuXG4uY2QtcHJpbWFyeS1uYXYgLmdvLWJhY2sgYVxuICBwYWRkaW5nLWxlZnQ6IDQwcHhcbiAgJjo6YmVmb3JlLCAmOjphZnRlclxuICAgIC8qIGFycm93IGdvZXMgb24gdGhlIGxlZnQgc2lkZSAtIGdvIGJhY2sgYnV0dG9uXG4gICAgbGVmdDogMjBweFxuICAgIHRyYW5zZm9ybS1vcmlnaW46IDFweCA1MCVcblxuK21lZGlhKFwiPmRlc2t0b3BcIilcbiAgLmhhcy1jaGlsZHJlbiA+IGFcbiAgICAmOjpiZWZvcmUsICY6OmFmdGVyXG4gICAgICByaWdodDogMTUlXG4gIC5jZC1wcmltYXJ5LW5hdiA+IC5oYXMtY2hpbGRyZW4gPiBhXG4gICAgLyogbWFpbiBuYXZpZ2F0aW9uIGFycm93cyBvbiBsYXJnZXIgZGV2aWNlc1xuICAgIHBhZGRpbmctcmlnaHQ6IDMwcHggIWltcG9ydGFudFxuICAgICY6OmJlZm9yZSwgJjo6YWZ0ZXJcbiAgICAgIHdpZHRoOiA5cHhcbiAgICAgIHRyYW5zZm9ybS1vcmlnaW46IDUwJSA1MCVcbiAgICAgIGJhY2tncm91bmQ6IGRhcmtlbigkY2xvdWQsIDEwJSlcblxuICAgICAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuXG4gICAgICB0cmFuc2l0aW9uOiB3aWR0aCAwLjNzLCB0cmFuc2Zvcm0gMC4zc1xuICAgICY6OmJlZm9yZVxuICAgICAgcmlnaHQ6IDEycHhcbiAgICAmOjphZnRlclxuICAgICAgcmlnaHQ6IDdweFxuICAgICYuc2VsZWN0ZWQ6OmJlZm9yZSwgJi5zZWxlY3RlZDo6YWZ0ZXJcbiAgICAgIHdpZHRoOiAxNHB4XG4gICAgJi5zZWxlY3RlZDo6YmVmb3JlXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNXB4KSByb3RhdGUoLTQ1ZGVnKVxuICAgICYuc2VsZWN0ZWQ6OmFmdGVyXG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZylcbiAgLmNkLXNlY29uZGFyeS1uYXYgPiAuaGFzLWNoaWxkcmVuID4gYTo6YmVmb3JlLCAuY2Qtc2Vjb25kYXJ5LW5hdiA+IC5oYXMtY2hpbGRyZW4gPiBhOjphZnRlclxuICAgIC8qIHJlbW92ZSBhcnJvd3Mgb24gc2Vjb25kYXJ5IG5hdiB0aXRsZXNcbiAgICBkaXNwbGF5OiBub25lXG4gIC5jZC1wcmltYXJ5LW5hdiAuZ28tYmFjayBhXG4gICAgcGFkZGluZy1sZWZ0OiAyMHB4XG4gICAgJjo6YmVmb3JlLCAmOjphZnRlclxuICAgICAgbGVmdDogMXB4XG5cblxuXG5cbi5jZC1zZWFyY2hcbiAgcG9zaXRpb246IGFic29sdXRlXG4gIGhlaWdodDogJHNlYXJjaC1oZWlnaHQtU1xuICB3aWR0aDogMTAwJVxuICB0b3A6ICRoZWFkZXItaGVpZ2h0LVNcbiAgbGVmdDogMFxuICB6LWluZGV4OiAkYWJvdmUtY29udGVudFxuICBvcGFjaXR5OiAwXG4gIHZpc2liaWxpdHk6IGhpZGRlblxuICB0cmFuc2l0aW9uOiBvcGFjaXR5IC4zcyAwcywgdmlzaWJpbGl0eSAwcyAuM3NcblxuICBmb3JtXG4gICAgaGVpZ2h0OiAxMDAlXG4gICAgd2lkdGg6IDEwMCVcblxuICBpbnB1dFxuICAgIGJvcmRlci1yYWRpdXM6IDBcbiAgICBib3JkZXI6IG5vbmVcbiAgICBiYWNrZ3JvdW5kOiAkd2hpdGVcbiAgICBmb250LWZhbWlseTogc2VyaWZcbiAgICBoZWlnaHQ6IDEwMCVcbiAgICB3aWR0aDogMTAwJVxuICAgIGZvbnQtc2l6ZTogMnJlbVxuICAgIHBhZGRpbmc6IDAgNSVcbiAgICAvL2JveC1zaGFkb3c6IGluc2V0IDAgMXB4IDAgJGNsb3VkLCAwIDNweCA2cHggcmdiYSgjMDAwLCAwLjA1KVxuICAgIGFwcGVhcmFuY2U6IG5vbmVcblxuICAgICY6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIsXG4gICAgJjo6LW1vei1wbGFjZWhvbGRlcixcbiAgICAmOi1tcy1pbnB1dC1wbGFjZWhvbGRlclxuICAgICAgY29sb3I6IGRhcmtlbigkY2xvdWQsIDEwJSlcblxuICAgICY6Zm9jdXNcbiAgICAgIG91dGxpbmU6IG5vbmVcblxuICAmLmlzLXZpc2libGVcbiAgICBvcGFjaXR5OiAxXG4gICAgdmlzaWJpbGl0eTogdmlzaWJsZVxuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgLjNzIDBzLCB2aXNpYmlsaXR5IDBzIDBzXG4gICAgLy9ib3gtc2hhZG93OiAxcHggMXB4IDVweCByZ2JhKDEwMCwxMDAsMTAwLCAuNSlcblxuICAubmF2LWlzLWZpeGVkICZcbiAgICBwb3NpdGlvbjogZml4ZWRcblxuICArbWVkaWEoXCI+ZGVza3RvcFwiKVxuICAgIGhlaWdodDogJHNlYXJjaC1oZWlnaHQtTFxuICAgIHRvcDogJGhlYWRlci1oZWlnaHQtTFxuXG4gICAgaW5wdXRcbiAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3hcbiAgICAgIGJvcmRlcjogbm9uZVxuICAgICAgY29sb3I6ICRncmVlblxuICAgICAgZm9udC1mYW1pbHk6IHNlcmlmXG4gICAgICBwYWRkaW5nOiAwIDJyZW1cbiAgICAgIGZvbnQtc2l6ZTogMy4ycmVtXG5cblxuLmNkLW92ZXJsYXlcbiAgLyogc2hhZG93IGxheWVyIHZpc2libGUgd2hlbiBuYXZpZ2F0aW9uIGlzIGFjdGl2ZVxuICBwb3NpdGlvbjogZml4ZWRcbiAgei1pbmRleDogMlxuICBoZWlnaHQ6IDEwMCVcbiAgd2lkdGg6IDEwMCVcbiAgdG9wOiAwXG4gIGxlZnQ6IDBcbiAgY3Vyc29yOiBwb2ludGVyXG4gIC8vYmFja2dyb3VuZC1jb2xvcjogcmdiYSgkZ3JlZW4sIDAuOClcbiAgdmlzaWJpbGl0eTogaGlkZGVuXG4gIG9wYWNpdHk6IDBcbiAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuXG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyAwcywgdmlzaWJpbGl0eSAwcyAwLjNzLCB0cmFuc2Zvcm0gMC4zcyAwc1xuXG4gICYuaXMtdmlzaWJsZVxuICAgIG9wYWNpdHk6IDFcbiAgICB2aXNpYmlsaXR5OiB2aXNpYmxlXG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzIDBzLCB2aXNpYmlsaXR5IDBzIDBzLCB0cmFuc2Zvcm0gMC4zcyAwc1xuXG4gICttZWRpYShcIjxkZXNrdG9wXCIpXG4gICAgJi5pcy12aXNpYmxlXG4gICAgICAvL3RyYW5zZm9ybTogdHJhbnNsYXRlWCgtJG5hdi13aWR0aC1TKVxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApXG5cbiAgICAubmF2LW9uLWxlZnQgJi5pcy12aXNpYmxlXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoJG5hdi13aWR0aC1TKVxuXG4gICAgJi5pcy12aXNpYmxlLnNlYXJjaC1pcy12aXNpYmxlLFxuICAgIC5uYXYtb24tbGVmdCAmLmlzLXZpc2libGUuc2VhcmNoLWlzLXZpc2libGVcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKVxuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICpcbiAqc3VwcG9ydCBmb3Igbm8ganNcbiAqXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi5uby1qcyAuY2QtcHJpbWFyeS1uYXZcbiAgcG9zaXRpb246IHJlbGF0aXZlXG4gIGhlaWdodDogYXV0b1xuICB3aWR0aDogMTAwJVxuICBvdmVyZmxvdzogdmlzaWJsZVxuICB2aXNpYmlsaXR5OiB2aXNpYmxlXG4gIHotaW5kZXg6ICRjb250ZW50XG5cbi5uby1qcyAuY2Qtc2VhcmNoXG4gIHBvc2l0aW9uOiByZWxhdGl2ZVxuICB0b3A6IDBcbiAgb3BhY2l0eTogMVxuICB2aXNpYmlsaXR5OiB2aXNpYmxlXG5cbittZWRpYShcIj5kZXNrdG9wXCIpXG4gIC5uby1qcyAuY2QtcHJpbWFyeS1uYXZcbiAgICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgICB6LWluZGV4OiAkYWJvdmUtY29udGVudFxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgIHdpZHRoOiBhdXRvXG4gICAgdG9wOiAwXG4gICAgcmlnaHQ6IDE1MHB4XG4gICAgcGFkZGluZzogMFxuICAubm8tanMgLm5hdi1pcy1maXhlZCAuY2QtcHJpbWFyeS1uYXZcbiAgICBwb3NpdGlvbjogZml4ZWRcbiIsIi5uYXYtZm9vdGVyXG5cdHBhZGRpbmc6IDMwcHggMjBweCAyMHB4XG5cdHRleHQtYWxpZ246IGxlZnRcblxuXHQrbWVkaWEoXCI8PXRhYmxldFwiKVxuXHRcdGRpc3BsYXk6IG5vbmVcblxuXHQmX19oZWFkaW5nXG5cdFx0Zm9udC1mYW1pbHk6ICRzYW5zXG5cdFx0Zm9udC1zaXplOiAxcmVtXG5cdFx0Zm9udC13ZWlnaHQ6ICRib2xkXG5cdFx0bWFyZ2luLWJvdHRvbTogMXJlbVxuXG5cdFx0YVxuXHRcdFx0Y29sb3I6ICRjaGFyY29hbFxuXHRcdFx0Jjpob3ZlclxuXHRcdFx0XHRjb2xvcjogJGdyZWVuXG5cblx0Jl9fbGlua1xuXHRcdGZvbnQtc2l6ZTogMTRweFxuXG5cdCZfX2JveFxuXHRcdHBhZGRpbmc6IDAgMTBweFxuXHRcdHZlcnRpY2FsLWFsaWduOiB0b3BcblxuXHQmX19ib3gtbmFycm93XG5cdFx0cGFkZGluZzogMCAxMHB4XG5cdFx0dmVydGljYWwtYWxpZ246IHRvcFxuXG5cdCZfX2J1dHRvblxuXHRcdGJvcmRlci13aWR0aDogMXB4XG5cdFx0Y29sb3I6ICRncmVlblxuXHRcdGZvbnQtc2l6ZTogLjlyZW1cblx0XHRtYXJnaW4tYm90dG9tOiAxcmVtXG5cdFx0cGFkZGluZzogLjVyZW0gMXJlbVxuXG5cblx0Ly8gU3ViLW5hdmlnYXRpb24sIHdoaWNoIGhpZGVzIG9uIHNtYWxsIHNpemVzXG5cdCZfX3N1Yi1saW5rc1xuXHRcdGZvbnQtc2l6ZTogMTRweFxuXG5cdFx0YVxuXHRcdFx0Y29sb3I6ICRjaGFyY29hbFxuXHRcdFx0Jjpob3ZlclxuXHRcdFx0XHRjb2xvcjogJGdyZWVuXG5cblx0XHRsaTpudGgtY2hpbGQoMSlcblx0XHRcdGZvbnQtZmFtaWx5OiAkc2Fuc1xuXHRcdFx0Zm9udC1zaXplOiAxcmVtXG5cdFx0XHRmb250LXdlaWdodDogJGJvbGRcblx0XHRcdG1hcmdpbi1ib3R0b206IC41cmVtXG4iLCIvL0Jhbm5lciBUYWxsIC0gVGhpcyBpcyBmb3VuZCBvbiB0aGUgaG9tZXBhZ2Ugb25seVxuLmJhbm5lci10YWxsXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChpbWFnZXMvYm9hdC5qcGcpXG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlclxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyXG4gIGhlaWdodDogMjAwcHhcbiAgcG9zaXRpb246IHJlbGF0aXZlXG5cbiAgK21lZGlhKFwiPnRhYmxldFwiKVxuICAgIGhlaWdodDogNDY1cHhcblxuXG4gICZfX2hlYWRsaW5lXG4gICAgYm90dG9tOiAzcmVtXG4gICAgY29sb3I6ICR3aGl0ZVxuICAgIGZvbnQtZmFtaWx5OiBzZXJpZlxuICAgIGZvbnQtc2l6ZTogNXJlbVxuICAgIGZvbnQtd2VpZ2h0OiAkbm9ybWFsXG4gICAgbGVmdDogMnJlbVxuICAgIGxpbmUtaGVpZ2h0OiAxXG4gICAgcG9zaXRpb246IGFic29sdXRlXG4gICAgbWFyZ2luOiAwIDAgMXJlbSAxcmVtXG4gICAgdGV4dC1zaGFkb3c6IDJweCAycHggMnB4ICRjaGFyY29hbFxuXG4gICAgK21lZGlhKFwiPHRhYmxldFwiKVxuICAgICAgcG9zaXRpb246IHN0YXRpY1xuICAgICAgZm9udC1zaXplOiAycmVtXG4gICAgICBwYWRkaW5nOiAycmVtXG5cblxuLy8gQmFubmVyIFN0YW5kYXJkIC0gVGhpcyBpcyBmb3VuZCBvbiB0aGUgbWFqb3JpdHkgb2YgdGhlIGludGVybmFsIHBhZ2VzXG4uYmFubmVyLXN0YW5kYXJkXG4gIGJhY2tncm91bmQ6ICRncmVlblxuICBjb2xvcjogJHdoaXRlXG4gIGRpc3BsYXk6IHRhYmxlXG4gIGhlaWdodDogMzQwcHhcblxuICAmX19ib3hcbiAgICBwYWRkaW5nOiAxcmVtIDJyZW1cblxuICAmX19oZWFkaW5nXG4gICAgY29sb3I6ICR3aGl0ZVxuXG4gICZfX3RleHRcblxuICAmX19tZWRpYVxuICAgIGJhY2tncm91bmQtY29sb3I6ICRzbGF0ZVxuXG4gIC8vIFRIaXMgaXMgZm91bmQgb24gdGhlIEFwcHJvYWNoIFBhZ2VcbiAgJl9fbWVkaWEtYXBwcm9hY2hcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1hZ2VzL21lZXRpbmcuanBnKVxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlclxuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXJcblxuICAgICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgICBoZWlnaHQ6IDMwMHB4XG5cbiAgLy8gVGhpcyBpcyBmb3VuZCBvbiB0aGUgTGVhZGVyc2hpcCBwYWdlXG4gICZfX21lZGlhLWxlYWRlcnNoaXBcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1hZ2VzL3Blb3BsZS5qcGcpXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlclxuXG4gICAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICAgIGhlaWdodDogMzAwcHhcblxuLy8gQmFubmVyIFBhbm9yYW1hIC0gVGhpcyBpcyBmb3VuZCBvbiB0aGUgTmV3cyBwYWdlXG4uYmFubmVyLXBhbm9yYW1hXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZXMvdHJlZXMuanBnKVxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXJcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlclxuICBoZWlnaHQ6IDI1NXB4XG4iLCIuY2FyZC1kaXB0aWNcbiAgZGlzcGxheTogdGFibGVcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICRib3JkZXJDb2xvclxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJGJvcmRlckNvbG9yXG5cbiAgK3Jlc3BvbnNpdmUtc3RhY2tcblxuICAmX19ib3hcbiAgICBkaXNwbGF5OiB0YWJsZS1jZWxsXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZVxuXG4gICAgcGFkZGluZzogMnJlbSAxcmVtXG5cbiAgICArbWVkaWEoXCI+dGFibGV0XCIpXG4gICAgICBwYWRkaW5nOiAycmVtIDFyZW0gMnJlbSAycmVtXG5cbiAgICAmOm50aC1jaGlsZCgyKVxuICAgICAgK21lZGlhKFwiPnRhYmxldFwiKVxuICAgICAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICRib3JkZXJDb2xvclxuICAgICAgICBwYWRkaW5nOiAycmVtIDJyZW0gMnJlbSAxcmVtXG5cbiAgJl9faGVhZGluZ1xuICAgIHRleHQtYWxpZ246IGNlbnRlclxuXG4gICZfX21lZGlhXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGdyZWVuXG4gICAgaGVpZ2h0OiAxNTBweFxuICAgIG92ZXJmbG93OiBoaWRkZW5cbiAgICBtYXJnaW4tYm90dG9tOiAycmVtXG5cbiAgJl9fdGV4dFxuICAgIHRleHQtYWxpZ246IGNlbnRlclxuICAgIG1hcmdpbi1ib3R0b206IDJyZW1cblxuICB1bFxuICAgIGxpc3Qtc3R5bGU6IG5vbmVcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXJcblxuICAgIGxpXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgICAgIHBhZGRpbmc6IC41cmVtXG4gICAgICB3aWR0aDogNDclXG5cblxuICAmX19saW5rXG4gICAgY29sb3I6ICRzaXRlLXRleHQtY29sb3ItbGlua1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgIGZvbnQtZmFtaWx5OiAkc2VyaWZcbiAgICBwYWRkaW5nOiAwIC40cmVtXG4gICAgJjpob3ZlclxuICAgICAgY29sb3I6ICRzaXRlLXRleHQtY29sb3ItbGluay1ob3ZlclxuXG5cbi8vIENhcmQgQmlvIC0gVGhlc2UgYXJlIGZvdW5kIG9uIHRoZSBMZWFkZXJzaGlwIHBhZ2Vcbi5jYXJkLWJpb1xuICBwYWRkaW5nLWJvdHRvbTogMnJlbVxuXG4gICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRjbG91ZFxuICAgIG1hcmdpbi1ib3R0b206IDJyZW1cblxuICAmX19tZWRpYVxuXG4gICAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICAgIG1hcmdpbi1ib3R0b206IDFyZW1cbiAgICAgIHRleHQtYWxpZ246IGNlbnRlclxuXG4gICAgaW1nXG4gICAgICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgICAgICAgd2lkdGg6IDMzJVxuXG4gICZfX2JveFxuICAgIHBhZGRpbmctbGVmdDogMnJlbVxuICAgIHBhZGRpbmctdG9wOiAwXG4gICAgdmVydGljYWwtYWxpZ246IHRvcFxuXG4gICAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICAgIHBhZGRpbmc6IDBcblxuICAmX19oZWFkaW5nXG4gICAgLy9NaXhpbiBjYW4gYmUgZm91bmQgaW4gdHlwb2dyYXBoeVxuICAgICtzdGFuZGFyZC1oZWFkaW5nKClcblxuICAmX19zdWJ0aXRsZVxuICAgIGNvbG9yOiAkZ3JhcGhpdGVcblxuICAmX190ZXh0XG5cbiAgICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgICAgdGV4dC1hbGlnbjogbGVmdFxuXG4gICAgKiArICpcbiAgICAgIG1hcmdpbi10b3A6IDFyZW1cblxuXG4vLyBDYXJkIGFydGljbGUgLSBUaGVzZSBhcmUgZm91bmQgb24gdGhlIE5ld3MgYW5kIEluc2lnaHRzIHBhZ2Vcbi5jYXJkLWFydGljbGVcblxuXG4gICZfX2JveFxuICAgIGJveC1zaGFkb3c6IDAgMXB4IDAgJGdyZWVuXG4gICAgZGlzcGxheTogbm9uZVxuICAgICt2ZXJ0LXBhZGRpbmcoMSwxKVxuXG4gICAgKiArICpcbiAgICAgIG1hcmdpbi10b3A6IDFyZW1cblxuICBoMlxuICAgICtzdGFuZGFyZC1oZWFkaW5nKCkgLy9NaXhpbiBjYW4gYmUgZm91bmQgaW4gdHlwb2dyYXBoeVxuXG4gIHNtYWxsXG4gICAgY29sb3I6ICRncmFwaGl0ZVxuICAgIGZvbnQtc2l6ZTogLjc1cmVtXG5cbiAgcFxuXG4ubG9hZGVyX19uYXZcbiAgZGlzcGxheTogdGFibGUtY2VsbFxuXG5cbi5jYXJkLXRyaXB0aWNcbiAgZGlzcGxheTogdGFibGVcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICRib3JkZXJDb2xvclxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJGJvcmRlckNvbG9yXG5cbiAgJl9fYm94XG4gICAgcGFkZGluZzogMnJlbVxuICAgIHZlcnRpY2FsLWFsaWduOiB0b3BcblxuICAgICY6bnRoLWNoaWxkKDIpXG4gICAgICArbWVkaWEoXCI+dGFibGV0XCIpXG4gICAgICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgJGJvcmRlckNvbG9yXG4gICAgICAgIC8vcGFkZGluZzogMnJlbSAxcmVtIDJyZW0gMXJlbVxuXG4gICAgJjpudGgtY2hpbGQoMylcbiAgICAgICttZWRpYShcIj50YWJsZXRcIilcbiAgICAgICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAkYm9yZGVyQ29sb3JcbiAgICAgICAgLy9wYWRkaW5nOiAycmVtIDJyZW0gMnJlbSAxcmVtXG5cbiAgJl9fbWVkaWFcbiAgICAvL2JhY2tncm91bmQtY29sb3I6ICRncmVlblxuICAgIGhlaWdodDogMTUwcHhcbiAgICBvdmVyZmxvdzogaGlkZGVuXG4gICAgbWFyZ2luLWJvdHRvbTogMnJlbVxuXG4gICAgaW1nXG5cbiAgJl9faGVhZGluZy1saW5rXG4gICAgK3NtYWxsLWhlYWRpbmcoKVxuICAgIGNvbG9yOiAkc2l0ZS10ZXh0LWNvbG9yLWxpbmtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXJcblxuICAgICY6aG92ZXJcbiAgICAgIGNvbG9yOiAkc2l0ZS10ZXh0LWNvbG9yLWxpbmstaG92ZXJcblxuICAmX190ZXh0XG4gICAgdGV4dC1hbGlnbjogY2VudGVyXG4iLCIvL1xuLy9DVEFzIC0gQ2FsbCB0byBBY3Rpb24gbW9kdWxlc1xuLy9cblxuLy9Db250YWN0IENUQVxuLy9UaGlzIGlzIGZvdW5kIG9uIHRoZSBob21lcGFnZSBvbmx5IHJpZ2h0IG5vd1xuLmN0YS1jb250YWN0XG4gIGJhY2tncm91bmQtY29sb3I6ICAjZWNlZWU2XG4gIGRpc3BsYXk6IHRhYmxlXG4gIC8vIGRpc3BsYXk6IGZsZXhcbiAgLy8gYWxpZ24taXRlbXM6IGNlbnRlclxuICAvLyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlclxuXG5cbiAgJl9fYm94XG4gICAgcGFkZGluZzogMnJlbVxuXG4gICZfX2JveDpudGgtY2hpbGQoMilcbiAgICBwYWRkaW5nOiAycmVtIDBcblxuXG4gICAgLy8rcmVzcG9uc2l2ZS1zdGFja1xuXG4gICZfX3RleHRcbiAgICBtYXJnaW46IDBcbiAgICBwYWRkaW5nOiAwIDMuNXJlbSAwIDJyZW1cblxuICAgICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgICBwYWRkaW5nOiAwXG5cbiAgJl9fYnV0dG9uXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrXG4gICAgbWFyZ2luOiAwIDJyZW0gMCAwXG5cbiAgICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgICAgbWFyZ2luOiAwXG5cblxuLy9WaWRlbyB0ZWFzZXIgQ1RBXG4vL1RoaXMgaXMgZm91bmQgb24gdGhlIGhvbWVwYWdlIG9ubHkgcmlnaHQgbm93XG4uY3RhLXRlYXNlclxuICAvLyBkaXNwbGF5OiBmbGV4XG4gIC8vIGZsZXgtZmxvdzogcm93IHdyYXBcbiAgLy8ganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmRcbiAgLy8gYWxpZ24taXRlbXM6IHN0cmV0Y2hcbiAgZGlzcGxheTogdGFibGVcbiAgcGFkZGluZzogMXJlbSAycmVtXG5cbiAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICBmbGV4LWZsb3c6IGNvbHVtblxuXG4gICZfX2JveFxuICAgIHBhZGRpbmctcmlnaHQ6IDJyZW1cblxuICAgICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgICBwYWRkaW5nOiAwXG5cbiAgJl9faGVhZGluZ1xuXG4gICZfX3RleHRcbiAgICBtYXJnaW4tYm90dG9tOiAycmVtXG5cblxuICAmX19tZWRpYVxuICAgIGhlaWdodDogMzAwcHhcbiAgICBvdmVyZmxvdzogaGlkZGVuXG5cbiAgICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgICAgaGVpZ2h0OiAxNTBweFxuICAgICAgbWFyZ2luLXRvcDogMnJlbVxuXG5cbi8vQ2VudGVyZWQgQ1RBXG4vL1RoaXMgaXMgZm91bmQgb24gdGhlIGhvbWVwYWdlIG9ubHkgcmlnaHQgbm93XG4uY3RhLWNlbnRlclxuICBwYWRkaW5nOiAycmVtXG4gIHRleHQtYWxpZ246IGNlbnRlclxuXG4gICZfX2hlYWRpbmdcblxuICAmX190ZXh0XG4gICAgcGFkZGluZzogMCA4cmVtXG4gICAgbWFyZ2luLWJvdHRvbTogMnJlbVxuXG4gICAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICAgIHBhZGRpbmc6IDBcblxuICAmX19idXR0b25cblxuXG5cbi8vU3Vic2NyaWJlIENUQSAtIFRoaXMgaXMgZm91bmQgYXQgdGhlIHRvcCBvZiB0aGUgZm9vdGVyXG4uY3RhLXN1YnNjcmliZVxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JlZW5cbiAgY29sb3I6ICR3aGl0ZVxuICArdmVydC1wYWRkaW5nKDEsMS41KVxuXG4gICZfX2hlYWRpbmdcbiAgICBjb2xvcjogJHdoaXRlXG4gICAgdGV4dC1hbGlnbjogY2VudGVyXG5cbiAgJl9fYm94XG4gICAgZGlzcGxheTogdGFibGVcbiAgICBtYXJnaW46IDAgYXV0b1xuICAgIHdpZHRoOiA3NSVcblxuICAvLyBUT0RPIHVzZSBjb2wgY2xhc3MgaW5zdGVhZCBmb3Igd2lkdGhcbiAgJl9faW5wdXQtYWRkLW9uXG5cblxuICAmX19pbnB1dFxuICAgIHBhZGRpbmc6IC45cmVtXG4gICAgd2lkdGg6IDEwMCVcblxuICAmX19idXR0b25cbiAgICBib3JkZXI6IDFweCBzb2xpZCAkd2hpdGVcbiAgICBjb2xvcjogJHdoaXRlXG4gICAgZm9udC1zaXplOiAxLjVyZW1cbiAgICBtYXJnaW4tbGVmdDogMXJlbVxuICAgIHdpZHRoOiAxMDAlXG5cbiAgICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgICAgbWFyZ2luOiAxcmVtIDAgMCAwXG5cbiAgJl9fbWVzc2FnZVxuICAgIGRpc3BsYXk6IG5vbmVcbiAgICBwYWRkaW5nLXRvcDogMi41cmVtXG5cbiAgJl9fdmFsaWRhdGlvblxuXG5cbi8vU2lkZWJhciBDVEEgLSBUaGlzIGlzIGZvdW5kIG9uIGludGVybmFsIHBhZ2VzIG9ubHlcbi5jdGEtc2lkZWJhclxuICBwYWRkaW5nOiAxcmVtIDAgMCA1cmVtXG4gIHZlcnRpY2FsLWFsaWduOiB0b3BcblxuICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgIHBhZGRpbmc6IDNyZW0gMnJlbVxuXG4gICZfX21lZGlhXG4gICAgLy9oZWlnaHQ6IDE4MHB4XG4gICAgLy9vdmVyZmxvdzogaGlkZGVuXG5cbiAgICArbWVkaWEoXCI8PXRhYmxldFwiKVxuXG5cbiAgICBpbWdcblxuICAmX19oZWFkaW5nXG4gICAgZm9udC1zaXplOiAxLjI1cmVtXG4gICAgK3ZlcnQtbWFyZ2luKC41LC41KVxuXG4gICZfX3RleHRcblxuICAmX19idXR0b25cbiAgICBtYXJnaW4tdG9wOiAxcmVtXG5cblxuLy9Tb2NpYWwgQ1RBIC0gVGhlc2UgYXJlIGN1cnJlbnRseSBmb3VuZCBhdCB0aGUgYm90dG9tIG9mIHRoZSBibG9nIHBvc3RzXG4uY3RhLXNvY2lhbFxuICBwYWRkaW5nLWxlZnQ6IDFyZW1cblxuICAuaWNvblxuICAgIGZpbGw6ICRncmVlblxuXG4gICAgJjpob3ZlclxuICAgICAgZmlsbDogJGdyYXBoaXRlXG4iLCIvL0Zvb3RlclxuJGZvb3Rlci1oZWFkZXItbmF2OiBUcmVidWNoZXQgTVNcblxuZm9vdGVyXG5cdHBhZGRpbmctYm90dG9tOiAyMDVweFxuXG5cdCttZWRpYShcIjw9dGFibGV0XCIpXG5cdFx0cGFkZGluZzogMFxuXG5cbi5mb290ZXItY29weXJpZ2h0XG5cdGJvcmRlci10b3A6IDFweCBzb2xpZCAkY2xvdWRcblx0ZGlzcGxheTogdGFibGVcblx0cGFkZGluZzogMnJlbVxuXHR3aWR0aDogMTAwJVxuXG5cdCttZWRpYShcIjw9dGFibGV0XCIpXG5cdFx0cGFkZGluZzogMnJlbSAwIDAgMFxuXG5cdCZfX2xvZ28tYm94XG5cdFx0d2lkdGg6IDQ1MHB4XG5cblx0XHQrbWVkaWEoXCI8PXRhYmxldFwiKVxuXHRcdFx0ZGlzcGxheTogaW5saW5lLWJsb2NrXG5cblx0XHRcdC5sb2dvX19zdGFja2VkXG5cdFx0XHRcdGRpc3BsYXk6IGlubGluZS1ibG9ja1xuXHRcdFx0XHR3aWR0aDogMjUwcHhcblxuXG5cdCZfX2JveFxuXHRcdHRleHQtYWxpZ246IHJpZ2h0XG5cblx0XHQrbWVkaWEoXCI+PXRhYmxldFwiLCBcIj49ZGVza3RvcFwiKVxuXHRcdFx0dGV4dC1hbGlnbjogcmlnaHRcblxuXHRcdHNtYWxsXG5cdFx0XHRkaXNwbGF5OiBpbmxpbmUtYmxvY2tcblx0XHRcdGZvbnQtc2l6ZTogMTRweFxuXHRcdFx0cGFkZGluZy1yaWdodDogLjVyZW1cblxuXHRcdFx0Jjo6YmVmb3JlXG5cdFx0XHRcdGNvbnRlbnQ6ICd8J1xuXG5cdFx0XHQmOm50aC1jaGlsZCgxKVxuXHRcdFx0XHQmOjpiZWZvcmVcblx0XHRcdFx0XHRjb250ZW50OiAnICdcblxuXG5cdFx0XHQrbWVkaWEoXCI+PXRhYmxldFwiLCBcIj49ZGVza3RvcFwiKVxuXHRcdFx0XHRmb250LXNpemU6IDEycHhcblxuXHRcdC5uYXYtbWlub3JcblxuXHRcdFx0bGlcblx0XHRcdCAgYVxuXHRcdFx0ICAgIGZvbnQtc2l6ZTogMTRweFxuXG5cdFx0XHQgICAgK21lZGlhKFwiPj10YWJsZXRcIiwgXCI+PWRlc2t0b3BcIilcblx0XHRcdCAgICAgIGZvbnQtc2l6ZTogMTJweFxuXG4uZm9vdGVyLWRpc2NsYWltZXJcblx0dGV4dC1hbGlnbjogY2VudGVyXG5cdHdpZHRoOiAxMDAlXG5cblx0Jl9fYm94XG5cdFx0Ym9yZGVyOiAxcHggc29saWQgJGZvb3Rlci10ZXh0XG5cdFx0ZGlzcGxheTogaW5saW5lLWJsb2NrXG5cdFx0dGV4dC1hbGlnbjogY2VudGVyXG5cdFx0cGFkZGluZzogMjBweFxuXHRcdG1hcmdpbjogNTBweCBhdXRvIDEwcHhcblxuXHRoNiwgcCwgdWxcblx0XHRmb250LXNpemU6IDE0cHhcblx0XHRtYXJnaW4tYm90dG9tOiAxcmVtXG5cblx0XHQrbWVkaWEoXCI+PXRhYmxldFwiLCBcIj49ZGVza3RvcFwiKVxuXHRcdFx0Zm9udC1zaXplOiAxMnB4XG5cblx0dWxcblx0XHRAZXh0ZW5kICVtZW51XG5cdFx0bWFyZ2luLXRvcDogMFxuXG5cdFx0bGlcblx0XHRcdGRpc3BsYXk6IGlubGluZS1ibG9ja1xuXHRcdFx0bWFyZ2luOiAwIDEwcHhcblx0XHRcdHBhZGRpbmc6IC41cmVtXG4iLCJcbkBrZXlmcmFtZXMgZmFkZUluXG4gIGZyb21cbiAgICBvcGFjaXR5OiAwXG4gIHRvXG4gICAgb3BhY2l0eTogMVxuXG4uaGVhZGVyX19sb2dvLWJveFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGVcbiAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAkYm9yZGVyQ29sb3JcbiAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgJGJvcmRlckNvbG9yXG4gIG1hcmdpbjogMCBhdXRvXG4gIHBhZGRpbmctdG9wOiAxcmVtXG4gIG1heC13aWR0aDogMTIwMHB4XG4gIFxuLmhlYWRlcl9fbG9nb1xuICBiYWNrZ3JvdW5kOiAkd2hpdGVcblxuXG4ubG9nb1xuICBkaXNwbGF5OiBibG9ja1xuICBwYWRkaW5nOiAxcmVtXG4gIHdpZHRoOiA2MDBweFxuXG4gICttZWRpYShcIjw5MDBweFwiKVxuICAgIHdpZHRoOiA0MDBweFxuXG4gICttZWRpYShcIjw1MDBweFwiKVxuICAgIHBhZGRpbmc6IDFyZW1cbiAgICB3aWR0aDogMzAwcHhcblxuXG5cblxuc3ZnXG5cbiAgcGF0aCwgcG9seWdvblxuICAgIGZpbGw6ICRncmVlblxuXG4gICY6aG92ZXIgcGF0aCxcbiAgJjpob3ZlciBwb2x5Z29uXG4gICAgb3BhY2l0eTogLjdcbiAgICB0cmFuc2l0aW9uOiBmaWxsIDAuMnMgZWFzZVxuXG4ubG9nb19fc3RyZXRjaGVkXG4gIGRpc3BsYXk6IGJsb2NrXG5cbiAgK21lZGlhKFwiPDkwMHB4XCIpXG4gICAgZGlzcGxheTogbm9uZVxuXG4ubG9nb19fc3RhY2tlZFxuICBkaXNwbGF5OiBub25lXG5cbiAgK21lZGlhKFwiPDkwMHB4XCIpXG4gICAgZGlzcGxheTogYmxvY2tcblxuXG5cblxuLy8gMjUgcGllY2VzXG4ubG9nb19fZ2xvYmVcbiAgcGF0aFxuICAgIG9wYWNpdHk6IDBcbiAgICBhbmltYXRpb246IGZhZGVJbiBlYXNlLWluIDFcbiAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkc1xuICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogLjVzXG5cbiAgcGF0aDpudGgtY2hpbGQoMSlcbiAgICBhbmltYXRpb24tZGVsYXk6IDAuMXNcblxuICBwYXRoOm50aC1jaGlsZCgyKVxuICAgIGFuaW1hdGlvbi1kZWxheTogMC4xMXNcblxuICBwYXRoOm50aC1jaGlsZCgzKVxuICAgIGFuaW1hdGlvbi1kZWxheTogMC4yMnNcblxuICBwYXRoOm50aC1jaGlsZCg0KVxuICAgIGFuaW1hdGlvbi1kZWxheTogMC4xM3NcblxuICBwYXRoOm50aC1jaGlsZCg1KVxuICAgIGFuaW1hdGlvbi1kZWxheTogMC4xNHNcblxuICBwYXRoOm50aC1jaGlsZCg2KVxuICAgIGFuaW1hdGlvbi1kZWxheTogMC4xNXNcblxuICBwYXRoOm50aC1jaGlsZCg3KVxuICAgIGFuaW1hdGlvbi1kZWxheTogMC4xNnNcblxuICBwYXRoOm50aC1jaGlsZCg4KVxuICAgIGFuaW1hdGlvbi1kZWxheTogMC4zN3NcblxuICBwYXRoOm50aC1jaGlsZCg5KVxuICAgIGFuaW1hdGlvbi1kZWxheTogMC4xOHNcblxuICBwYXRoOm50aC1jaGlsZCgxMClcbiAgICBhbmltYXRpb24tZGVsYXk6IDAuMTlzXG5cbiAgcGF0aDpudGgtY2hpbGQoMTEpXG4gICAgYW5pbWF0aW9uLWRlbGF5OiAwLjIwc1xuXG4gIHBhdGg6bnRoLWNoaWxkKDEyKVxuICAgIGFuaW1hdGlvbi1kZWxheTogMC4yMXNcblxuICBwYXRoOm50aC1jaGlsZCgxMylcbiAgICBhbmltYXRpb24tZGVsYXk6IDAuMTJzXG5cbiAgcGF0aDpudGgtY2hpbGQoMTQpXG4gICAgYW5pbWF0aW9uLWRlbGF5OiAwLjIzc1xuXG4gIHBhdGg6bnRoLWNoaWxkKDE1KVxuICAgIGFuaW1hdGlvbi1kZWxheTogMC4zNHNcblxuICBwYXRoOm50aC1jaGlsZCgxNilcbiAgICBhbmltYXRpb24tZGVsYXk6IDAuMjVzXG5cbi5sb2dvX190ZXh0XG5cbi5sb2dvX19jb21tZXJjZVxuICBwYXRoLCBwb2x5Z29uXG5cblxuLmxvZ29fX3RydXN0XG4gIHBhdGgsIHBvbHlnb25cblxuXG4ubG9nb19fdGFnbGluZVxuICBwYXRoLCBwb2x5Z29uXG4iLCIvLy0gVGhpcyBjb250YWluZXIgaG9sZCB0aGUgbWFpbiBjb250ZW50IG9uIGVhY2ggcGFnZVxuLy8tIEl0IGlzIGZvdW5kIG9uIGFsbCBpbnRlcm5hbCBwYWdlc1xuXG4vLy0gQWxsIFwiTWFpblwiIGNsYXNzZXMgaGF2ZSBzaGFyZSB0aGVzZSBydWxlc1xuJW1haW5cbiAgZGlzcGxheTogdGFibGVcbiAgcGFkZGluZzogMXJlbSAycmVtXG5cbi5tYWluLXN0YW5kYXJkXG4gIEBleHRlbmQgJW1haW5cbiAgcGFkZGluZy1ib3R0b206IDVyZW1cblxuICAmX19jb250ZW50XG5cbiAgICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgICAgdGV4dC1hbGlnbjogbGVmdFxuXG4gICZfX3RleHRcblxuICAgICogKyAqXG4gICAgICBtYXJnaW4tdG9wOiAxcmVtXG5cbiAgICBoMlxuICAgICAgK3N0YW5kYXJkLWhlYWRpbmcoKVxuICAgICAgK3ZlcnQtcGFkZGluZygxLDApXG5cblxuLy8gTWFpbiBjb250ZW50IGJsb2NrIG9uIExlYWRlcnNoaXAgcGFnZVxuLm1haW4tYmlvc1xuICBkaXNwbGF5OiB0YWJsZVxuICBwYWRkaW5nOiAycmVtXG5cblxuLy8gTWFpbiBjb250ZW50IGJsb2NrIG9uIE5ld3MgcGFnZVxuLm1haW4tbmV3c1xuICBAZXh0ZW5kICVtYWluXG5cblxuLy8gTWFpbiBjb250ZW50IGJsb2NrIG9uIEJsb2cgUG9zdCBwYWdlXG4ubWFpbi1wb3N0XG4gIEBleHRlbmQgJW1haW5cblxuICAmX190ZXh0XG5cbiAgICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgICAgdGV4dC1hbGlnbjogbGVmdFxuXG4gICAgKiArICpcbiAgICAgIG1hcmdpbi10b3A6IDFyZW1cblxuICAgIGgyXG4gICAgICArc3RhbmRhcmQtaGVhZGluZygpXG5cbiAgICBoM1xuICAgICAgK21pbm9yLWhlYWRpbmcoKVxuXG4gICAgZmlnY2FwdGlvblxuICAgICAgY29sb3I6ICRncmFwaGl0ZVxuICAgICAgZm9udC1zaXplOiAuNzVyZW1cbiAgICAgIG1hcmdpbi10b3A6IDBcblxuICAgIGJsb2NrcXVvdGVcbiAgICAgICtibG9ja3F1b3RlKClcbiIsIi5mb3JtLXN0YW5kYXJkXG4gIGlucHV0LFxuICBpbnB1dFt0eXBlPVwiZW1haWxcIl0sXG4gIGlucHV0W3R5cGU9XCJudW1iZXJcIl0sXG4gIGlucHV0W3R5cGU9XCJwYXNzd29yZFwiXSxcbiAgaW5wdXRbdHlwZT1cInNlYXJjaFwiXSxcbiAgaW5wdXRbdHlwZT1cInRlbFwiXSxcbiAgaW5wdXRbdHlwZT1cInRleHRcIl0sXG4gIGlucHV0W3R5cGU9XCJ1cmxcIl0sXG4gIGlucHV0W3R5cGU9XCJjb2xvclwiXSxcbiAgaW5wdXRbdHlwZT1cImRhdGVcIl0sXG4gIGlucHV0W3R5cGU9XCJuYW1lXCJdLFxuICBpbnB1dFt0eXBlPVwiZGF0ZXRpbWVcIl0sXG4gIGlucHV0W3R5cGU9XCJkYXRldGltZS1sb2NhbFwiXSxcbiAgaW5wdXRbdHlwZT1cIm1vbnRoXCJdLFxuICBpbnB1dFt0eXBlPVwidGltZVwiXSxcbiAgaW5wdXRbdHlwZT1cIndlZWtcIl0sXG4gIHRleHRhcmVhXG4gIFx0Y29sb3I6ICRzaXRlLXRleHQtY29sb3JcbiAgXHRib3JkZXI6IDFweCBzb2xpZCAkYm9yZGVyQ29sb3JcbiAgICBib3gtc2l6aW5nOiBjb250ZW50LWJveFxuICBcdGJvcmRlci1yYWRpdXM6IDBcbiAgICBmb250LXNpemU6IDFyZW1cbiAgXHRwYWRkaW5nOiAxcmVtXG4gIFx0ZGlzcGxheTogYmxvY2tcbiAgXHR3aWR0aDogMTAwJVxuXG5cbiAgbGFiZWxcbiAgICBkaXNwbGF5OiBibG9ja1xuXG4gIGlucHV0W3R5cGU9XCJidXR0b25cIl0sXG4gIGlucHV0W3R5cGU9XCJyZXNldFwiXSxcbiAgaW5wdXRbdHlwZT1cInN1Ym1pdFwiXVxuICAgIC8vIGFueSBkZWZhdWx0IGJ1dHRvbiBzdHlsZXMgdGhhdCBuZWVkIHRvIGJlIGRpZmZlcmVudCBvbiBmb3JtcyBnbyBoZXJlXG4gICAgZGlzcGxheTogYmxvY2tcblxuXG4gICZfX2NoZWNrYm94XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrXG5cbiAgJl9fY2hlY2tib3ggKyBsYWJlbFxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuXG4gIOKAmFxuICAuc2VsZWN0Ym94XG4gICAgYmFja2dyb3VuZDogJHdoaXRlXG4gICAgYm9yZGVyLXJhZGl1czogMFxuICAgIGN1cnNvcjogcG9pbnRlclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZVxuICAgIGhlaWdodDogNDhweFxuXG5cbiAgc2VsZWN0XG4gICAgYmFja2dyb3VuZDogJHdoaXRlXG4gICAgYm94LXNoYWRvdzogbm9uZVxuICAgIGJvcmRlci1yYWRpdXM6IDBcbiAgICBib3JkZXI6IDFweCBzb2xpZCAkYm9yZGVyQ29sb3JcbiAgICBjb2xvcjogJHNpdGUtdGV4dC1jb2xvclxuICAgIGN1cnNvcjogcG9pbnRlclxuICAgIGRpc3BsYXk6IGJsb2NrXG4gICAgZm9udC1zaXplOiAxcmVtXG4gICAgaGVpZ2h0OiA0NXB4XG4gICAgcGFkZGluZzogMXJlbVxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZVxuICAgIHdpZHRoOiAxMDAlXG7igJlcbiIsIi8vXG5cdCBfICAgICAgICAgICAgXyAgICAgICAgICAgXyAgICAgICAgICAgICAgICAgICAgICAgICAgIF8gX1xuXHQoXykgICAgICAgICAgfCB8ICAgICAgICAgfCB8ICAgICAgICAgICAgICAgICAgICAgICAgIHwgKF8pXG5cdCBfIF8gX18gICBfX198IHxfICAgXyAgX198IHwgX19fICAgXyBfXyBfX18gICBfX18gIF9ffCB8XyAgX18gX1xuXHR8IHwgJ18gXFwgLyBfX3wgfCB8IHwgfC8gX2AgfC8gXyBcXCB8ICdfIGAgXyBcXCAvIF8gXFwvIF9gIHwgfC8gX2AgfFxuXHR8IHwgfCB8IHwgKF9ffCB8IHxffCB8IChffCB8ICBfXy8gfCB8IHwgfCB8IHwgIF9fLyAoX3wgfCB8IChffCB8XG5cdHxffF98IHxffFxcX19ffF98XFxfXyxffFxcX18sX3xcXF9fX3wgfF98IHxffCB8X3xcXF9fX3xcXF9fLF98X3xcXF9fLF98XG5cblx0U2ltcGxlLCBlbGVnYW50IGFuZCBtYWludGFpbmFibGUgbWVkaWEgcXVlcmllcyBpbiBTYXNzXG5cblx0aHR0cDovL2luY2x1ZGUtbWVkaWEuY29tXG5cbiAgQXV0aG9yOiBFZHVhcmRvIEJvdWNhcyA8bWFpbEBlZHVhcmRvYm91Y2FzLmNvbT5cblxuXG4gIENyZWF0ZXMgYSBsaXN0IG9mIGdsb2JhbCBicmVha3BvaW50c1xuXG4gIEBhdXRob3IgRWR1YXJkbyBCb3VjYXNcblxuICBAZXhhbXBsZSBzY3NzIC0gQ3JlYXRlcyBhIHNpbmdsZSBicmVha3BvaW50IHdpdGggdGhlIGxhYmVsIGBwaG9uZWBcbiAgJGJyZWFrcG9pbnRzOiAoJ3Bob25lJzogMzIwcHgpO1xuXG4kYnJlYWtwb2ludHM6IChcInBob25lXCI6IDMyMHB4LCBcInRhYmxldFwiOiA3NjhweCwgXCJkZXNrdG9wXCI6IDEwMjNweCkgIWRlZmF1bHRcblxuLy9cbiAgQ3JlYXRlcyBhIGxpc3Qgb2Ygc3RhdGljIGV4cHJlc3Npb25zIG9yIG1lZGlhIHR5cGVzXG5cbiAgQGF1dGhvciBFZHVhcmRvIEJvdWNhc1xuXG4gIEBleGFtcGxlIHNjc3MgLSBDcmVhdGVzIGEgc2luZ2xlIG1lZGlhIHR5cGUgKHNjcmVlbilcbiAgICRtZWRpYS1leHByZXNzaW9uczogKCdzY3JlZW4nOiAnc2NyZWVuJyk7XG5cbiAgQGV4YW1wbGUgc2NzcyAtIENyZWF0ZXMgYSBzdGF0aWMgZXhwcmVzc2lvbiB3aXRoIGxvZ2ljYWwgZGlzanVuY3Rpb24gKE9SIG9wZXJhdG9yKVxuICAgJG1lZGlhLWV4cHJlc3Npb25zOiAoXG4gIFx0XHQncmV0aW5hMngnOiAoXG4gIFx0XHRcdCcoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKScsXG4gIFx0XHRcdCcobWluLXJlc29sdXRpb246IDE5MmRwaSknXG4gIFx0XHQpXG4gIFx0KTtcblxuJG1lZGlhLWV4cHJlc3Npb25zOiAoXCJzY3JlZW5cIjogXCJzY3JlZW5cIiwgXCJwcmludFwiOiBcInByaW50XCIsIFwiaGFuZGhlbGRcIjogXCJoYW5kaGVsZFwiLCBcInJldGluYTJ4XCI6IChcIigtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpXCIsIFwiKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpXCIpLCBcInJldGluYTN4XCI6IChcIigtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDMpXCIsIFwiKG1pbi1yZXNvbHV0aW9uOiAzNTBkcGkpXCIpKSAhZGVmYXVsdFxuXG4vL1xuICBEZWZpbmVzIGEgbnVtYmVyIHRvIGJlIGFkZGVkIG9yIHN1YnRyYWN0ZWQgZnJvbSBlYWNoIHVuaXQgd2hlbiBkZWNsYXJpbmcgYnJlYWtwb2ludHMgd2l0aCBleGNsdXNpdmUgaW50ZXJ2YWxzXG5cbiAgQGF1dGhvciBFZHVhcmRvIEJvdWNhc1xuXG4gIEBleGFtcGxlIHNjc3MgLSBJbnRlcnZhbCBmb3IgcGl4ZWxzIGlzIGRlZmluZWQgYXMgYDFgIGJ5IGRlZmF1bHRcbiAgIEBpbmNsdWRlIG1lZGlhKFwiPjEyOHB4XCIpIHt9XG5cbiAgR2VuZXJhdGVzOlxuICBAbWVkaWEgKG1pbi13aWR0aDogMTI5cHgpIHt9XG5cbiAgQGV4YW1wbGUgc2NzcyAtIEludGVydmFsIGZvciBlbXMgaXMgZGVmaW5lZCBhcyBgMC4wMWAgYnkgZGVmYXVsdFxuICAgQGluY2x1ZGUgbWVkaWEoXCI+MjBlbVwiKSB7fVxuXG4gIEdlbmVyYXRlczpcbiAgQG1lZGlhIChtaW4td2lkdGg6IDIwLjAxZW0pIHt9XG5cbiAgQGV4YW1wbGUgc2NzcyAtIEludGVydmFsIGZvciByZW1zIGlzIGRlZmluZWQgYXMgYDAuMWAgYnkgZGVmYXVsdCwgdG8gYmUgdXNlZCB3aXRoIGBmb250LXNpemU6IDYyLjUlO2BcbiAgIEBpbmNsdWRlIG1lZGlhKFwiPjIuMHJlbVwiKSB7fVxuXG4gIEdlbmVyYXRlczpcbiAgQG1lZGlhIChtaW4td2lkdGg6IDIuMXJlbSkge31cblxuJHVuaXQtaW50ZXJ2YWxzOiAoXCJweFwiOiAxLCBcImVtXCI6IDAuMDEsIFwicmVtXCI6IDAuMSkgIWRlZmF1bHRcblxuLy9cbiAgR2VuZXJhdGVzIGEgbWVkaWEgcXVlcnkgYmFzZWQgb24gYSBsaXN0IG9mIGNvbmRpdGlvbnNcblxuICBAYXV0aG9yIEVkdWFyZG8gQm91Y2FzXG5cbiAgQHBhcmFtIHtMaXN0fSAgICRjb25kaXRpb25zICAtIE1lZGlhIHF1ZXJ5IGNvbmRpdGlvbnNcblxuICBAZXhhbXBsZSBzY3NzIC0gV2l0aCBhIHNpbmdsZSBzZXQgYnJlYWtwb2ludFxuICAgQGluY2x1ZGUgbWVkaWEoXCI+cGhvbmVcIikgeyB9XG5cbiAgQGV4YW1wbGUgc2NzcyAtIFdpdGggdHdvIHNldCBicmVha3BvaW50c1xuICAgQGluY2x1ZGUgbWVkaWEoXCI+cGhvbmVcIiwgXCI8PXRhYmxldFwiKSB7IH1cblxuICBAZXhhbXBsZSBzY3NzIC0gV2l0aCBjdXN0b20gdmFsdWVzXG4gICBAaW5jbHVkZSBtZWRpYShcIj49MzU4cHhcIiwgXCI8ODUwcHhcIikgeyB9XG5cbiAgQGV4YW1wbGUgc2NzcyAtIFdpdGggc2V0IGJyZWFrcG9pbnRzIHdpdGggY3VzdG9tIHZhbHVlc1xuICAgQGluY2x1ZGUgbWVkaWEoXCI+ZGVza3RvcFwiLCBcIjw9MTM1MHB4XCIpIHsgfVxuXG4gIEBleGFtcGxlIHNjc3MgLSBXaXRoIGEgc3RhdGljIGV4cHJlc3Npb25cbiAgIEBpbmNsdWRlIG1lZGlhKFwicmV0aW5hMnhcIikgeyB9XG5cbiAgQGV4YW1wbGUgc2NzcyAtIE1peGluZyBldmVyeXRoaW5nXG4gICBAaW5jbHVkZSBtZWRpYShcIj49MzUwcHhcIiwgXCI8dGFibGV0XCIsIFwicmV0aW5hM3hcIikgeyB9XG5cblxuPW1lZGlhKCRjb25kaXRpb25zLi4uKVxuICBAZm9yICRpIGZyb20gMSB0aHJvdWdoIGxlbmd0aCgkY29uZGl0aW9ucylcbiAgICAkY29uZGl0aW9uczogc2V0LW50aCgkY29uZGl0aW9ucywgJGksIHBhcnNlLWV4cHJlc3Npb24obnRoKCRjb25kaXRpb25zLCAkaSkpKVxuICAkYnJhbmNoZXM6IGdldC1xdWVyeS1icmFuY2hlcygkY29uZGl0aW9ucylcbiAgJHF1ZXJ5OiBcIlwiXG4gIEBlYWNoICRicmFuY2ggaW4gJGJyYW5jaGVzXG4gICAgQGlmIHN0ci1sZW5ndGgoJHF1ZXJ5KSAhPSAwXG4gICAgICAkcXVlcnk6ICRxdWVyeSArIFwiLCBcIlxuICAgICRxdWVyeTogJHF1ZXJ5ICsgJGJyYW5jaFxuICBAbWVkaWEgI3skcXVlcnl9XG4gICAgQGNvbnRlbnRcblxuLy9cbiAgUmVhZHMgYSBsaXN0IG9mIG1lZGlhIHF1ZXJ5IGV4cHJlc3Npb25zIGFuZCBzZXBhcmF0ZXMgbG9naWNhbCBkaXNqdW5jdGlvbnMgaW50byBkaWZmZXJlbnQgYnJhbmNoZXNcblxuICBAYXV0aG9yIEVkdWFyZG8gQm91Y2FzXG4gIEBwYXJhbSB7TGlzdH0gICAkZXhwcmVzc2lvbnMgIC0gbGlzdCBvZiBleHByZXNzaW9uc1xuICBAdGhyb3dzIGAkZXhwcmVzc2lvbmAgaXMgbm90IGEgdmFsaWQgZXhwcmVzc2lvblxuXG4gIEByZXR1cm4ge0xpc3QgfCBOdWxsfVxuXG5cbkBmdW5jdGlvbiBnZXQtcXVlcnktYnJhbmNoZXMoJGV4cHJlc3Npb25zKVxuICAkcmVzdWx0OiBcIlwiXG4gICRoYXMtZ3JvdXBzOiBmYWxzZVxuICAvLyBHZXR0aW5nIGluaXRpYWwgc25hcHNob3QgYW5kIGxvb2tpbmcgZm9yIGdyb3Vwc1xuICBAZWFjaCAkZXhwcmVzc2lvbiBpbiAkZXhwcmVzc2lvbnNcbiAgICBAaWYgc3RyLWxlbmd0aCgkcmVzdWx0KSAhPSAwXG4gICAgICAkcmVzdWx0OiAkcmVzdWx0ICsgXCIgYW5kIFwiXG4gICAgQGlmIHR5cGUtb2YoJGV4cHJlc3Npb24pID09IFwic3RyaW5nXCJcbiAgICAgICRyZXN1bHQ6ICRyZXN1bHQgKyAkZXhwcmVzc2lvblxuICAgIEBlbHNlIGlmIHR5cGUtb2YoJGV4cHJlc3Npb24pID09IFwibGlzdFwiXG4gICAgICAkcmVzdWx0OiAkcmVzdWx0ICsgbnRoKCRleHByZXNzaW9uLCAxKVxuICAgICAgJGhhcy1ncm91cHM6IHRydWVcbiAgICBAZWxzZVxuICAgICAgQHdhcm4gXCIjeyRleHByZXNzaW9ufSBpcyBub3QgYSB2YWxpZCBleHByZXNzaW9uLlwiXG4gIC8vIElmIHdlIGhhdmUgZ3JvdXBzLCB3ZSBoYXZlIHRvIGNyZWF0ZSBhbGwgcG9zc2libGUgY29tYmluYXRpb25zXG4gIEBpZiAkaGFzLWdyb3Vwc1xuICAgIEBlYWNoICRleHByZXNzaW9uIGluICRleHByZXNzaW9uc1xuICAgICAgQGlmIHR5cGUtb2YoJGV4cHJlc3Npb24pID09IFwibGlzdFwiXG4gICAgICAgICRmaXJzdDogbnRoKCRleHByZXNzaW9uLCAxKVxuICAgICAgICBAZWFjaCAkbWVtYmVyIGluICRleHByZXNzaW9uXG4gICAgICAgICAgQGlmICRtZW1iZXIgIT0gJGZpcnN0XG4gICAgICAgICAgICBAZWFjaCAkcGFydGlhbCBpbiAkcmVzdWx0XG4gICAgICAgICAgICAgICRyZXN1bHQ6IGpvaW4oJHJlc3VsdCwgc3RyLXJlcGxhY2UtZmlyc3QoJGZpcnN0LCAkbWVtYmVyLCAkcGFydGlhbCkpXG4gIEByZXR1cm4gJHJlc3VsdFxuXG4vL1xuICBQYXJzZXMgYSBzdHJpbmcgdG8gZm9ybSBhIG1lZGlhIHF1ZXJ5IGV4cHJlc3Npb25cblxuICBAYXV0aG9yIEVkdWFyZG8gQm91Y2FzXG5cbiAgQHBhcmFtIHtTdHJpbmd9ICAgJGV4cHJlc3Npb24gIC0gZXhwcmVzc2lvbiAoaW4gc3RyaW5nKVxuICBAdGhyb3dzIEV4cHJlc3Npb24gd2l0aCB0eXBlIGB0eXBlLW9mKCRleHByZXNzaW9uKWAgZGV0ZWN0ZWQsIHN0cmluZyBleHBlY3RlZFxuICBAdGhyb3dzIGAkZXhwcmVzc2lvbmAgaXMgbWlzc2luZyBhbiBvcGVyYXRvclxuICBAdGhyb3dzIFVua25vd24gdW5pdDogYCR1bml0YFxuXG4gIEByZXR1cm4ge1N0cmluZyB8IE51bGx9XG5cblxuQGZ1bmN0aW9uIHBhcnNlLWV4cHJlc3Npb24oJGV4cHJlc3Npb24pXG4gICRvcGVyYXRvcjogXCJcIlxuICAkdmFsdWU6IFwiXCJcbiAgJGVsZW1lbnQ6IFwiXCJcbiAgJHJlc3VsdDogXCJcIlxuICAkaXMtd2lkdGg6IHRydWVcbiAgQGlmIHR5cGUtb2YoJGV4cHJlc3Npb24pICE9IFwic3RyaW5nXCJcbiAgICBAd2FybiBcIkV4cHJlc3Npb24gd2l0aCB0eXBlIGAje3R5cGUtb2YoJGV4cHJlc3Npb24pfWAgZGV0ZWN0ZWQsIHN0cmluZyBleHBlY3RlZC5cIlxuICAvLyBTZXBhcmF0aW5nIHRoZSBvcGVyYXRvciBmcm9tIHRoZSByZXN0IG9mIHRoZSBleHByZXNzaW9uXG4gIEBpZiBzdHItc2xpY2UoJGV4cHJlc3Npb24sIDIsIDIpID09IFwiPVwiXG4gICAgJG9wZXJhdG9yOiBzdHItc2xpY2UoJGV4cHJlc3Npb24sIDEsIDIpXG4gICAgJHZhbHVlOiBzdHItc2xpY2UoJGV4cHJlc3Npb24sIDMpXG4gIEBlbHNlXG4gICAgJG9wZXJhdG9yOiBzdHItc2xpY2UoJGV4cHJlc3Npb24sIDEsIDEpXG4gICAgJHZhbHVlOiBzdHItc2xpY2UoJGV4cHJlc3Npb24sIDIpXG4gIC8vIENoZWNraW5nIHdoYXQgdHlwZSBvZiBleHByZXNzaW9uIHdlcmUgZGVhbGluZyB3aXRoXG4gIEBpZiBtYXAtaGFzLWtleSgkYnJlYWtwb2ludHMsICR2YWx1ZSlcbiAgICAkcmVzdWx0OiBtYXAtZ2V0KCRicmVha3BvaW50cywgJHZhbHVlKVxuICBAZWxzZSBpZiBtYXAtaGFzLWtleSgkbWVkaWEtZXhwcmVzc2lvbnMsICRleHByZXNzaW9uKVxuICAgICRyZXN1bHQ6IG1hcC1nZXQoJG1lZGlhLWV4cHJlc3Npb25zLCAkZXhwcmVzc2lvbilcbiAgICAkaXMtd2lkdGg6IGZhbHNlXG4gIEBlbHNlXG4gICAgJHJlc3VsdDogdG8tbnVtYmVyKCR2YWx1ZSlcbiAgQGlmICRpcy13aWR0aFxuICAgICR1bml0OiB1bml0KCRyZXN1bHQpXG4gICAgJGludGVydmFsOiAwXG4gICAgQGlmIG1hcC1oYXMta2V5KCR1bml0LWludGVydmFscywgJHVuaXQpXG4gICAgICAkaW50ZXJ2YWw6IG1hcC1nZXQoJHVuaXQtaW50ZXJ2YWxzLCAkdW5pdClcbiAgICBAZWxzZVxuICAgICAgQHdhcm4gXCJVbmtub3duIHVuaXQ6ICN7JHVuaXR9XCJcbiAgICBAaWYgJG9wZXJhdG9yID09IFwiPlwiXG4gICAgICAkZWxlbWVudDogXCIobWluLXdpZHRoOiAjeyRyZXN1bHQgKyAkaW50ZXJ2YWx9KVwiXG4gICAgQGVsc2UgaWYgJG9wZXJhdG9yID09IFwiPFwiXG4gICAgICAkZWxlbWVudDogXCIobWF4LXdpZHRoOiAjeyRyZXN1bHQgLSAkaW50ZXJ2YWx9KVwiXG4gICAgQGVsc2UgaWYgJG9wZXJhdG9yID09IFwiPj1cIlxuICAgICAgJGVsZW1lbnQ6IFwiKG1pbi13aWR0aDogI3skcmVzdWx0fSlcIlxuICAgIEBlbHNlIGlmICRvcGVyYXRvciA9PSBcIjw9XCJcbiAgICAgICRlbGVtZW50OiBcIihtYXgtd2lkdGg6ICN7JHJlc3VsdH0pXCJcbiAgICBAZWxzZVxuICAgICAgQHdhcm4gXCIjeyRleHByZXNzaW9ufSBpcyBtaXNzaW5nIGFuIG9wZXJhdG9yLlwiXG4gIEBlbHNlXG4gICAgJGVsZW1lbnQ6ICRyZXN1bHRcbiAgQHJldHVybiAkZWxlbWVudFxuXG4vL1xuICBSZXBsYWNlcyB0aGUgZmlyc3Qgb2NjdXJlbmNlIG9mIHRoZSBzdHJpbmcgd2l0aCB0aGUgcmVwbGFjZW1lbnQgc3RyaW5nXG5cbiAgQGF1dGhvciBFZHVhcmRvIEJvdWNhc1xuXG4gIEBwYXJhbSB7U3RyaW5nfSAgICRzZWFyY2ggIC0gVGhlIHZhbHVlIGJlaW5nIHNlYXJjaGVkIGZvclxuICBAcGFyYW0ge1N0cmluZ30gICAkcmVwbGFjZSAgLSBUaGUgcmVwbGFjZW1lbnQgc3RyaW5nXG4gIEBwYXJhbSB7U3RyaW5nfSAgICRzdWJqZWN0ICAtIFRoZSBzdHJpbmcgYmVpbmcgcmVwbGFjZWQgb25cblxuICBAcmV0dXJuIHtTdHJpbmcgfCBOdWxsfVxuXG5cbkBmdW5jdGlvbiBzdHItcmVwbGFjZS1maXJzdCgkc2VhcmNoLCAkcmVwbGFjZSwgJHN1YmplY3QpXG4gICRzZWFyY2gtc3RhcnQ6IHN0ci1pbmRleCgkc3ViamVjdCwgJHNlYXJjaClcbiAgQGlmICRzZWFyY2gtc3RhcnQgPT0gbnVsbFxuICAgIEByZXR1cm4gJHN1YmplY3RcbiAgJHJlc3VsdDogc3RyLXNsaWNlKCRzdWJqZWN0LCAwLCAkc2VhcmNoLXN0YXJ0IC0gMSlcbiAgJHJlc3VsdDogJHJlc3VsdCArICRyZXBsYWNlXG4gICRyZXN1bHQ6ICRyZXN1bHQgKyBzdHItc2xpY2UoJHN1YmplY3QsICRzZWFyY2gtc3RhcnQgKyBzdHItbGVuZ3RoKCRzZWFyY2gpKVxuICBAcmV0dXJuICRyZXN1bHRcblxuLy9cbiAgQ2FzdHMgYSBudW1iZXIgdG8gYSBzdHJpbmdcblxuICBAYXV0aG9yIEh1Z28gR2lyYXVkZWxcblxuICBAcGFyYW0ge1N0cmluZ30gICAkc3RyaW5nICAtIE51bWJlciB0byBiZSBwYXJzZWRcblxuICBAcmV0dXJuIHtMaXN0IHwgTnVsbH1cblxuQGZ1bmN0aW9uIHRvLW51bWJlcigkc3RyaW5nKVxuICAvLyBNYXRyaWNlc1xuICAkc3RyaW5nczogXCIwXCIgXCIxXCIgXCIyXCIgXCIzXCIgXCI0XCIgXCI1XCIgXCI2XCIgXCI3XCIgXCI4XCIgXCI5XCJcbiAgJG51bWJlcnM6IDAgMSAyIDMgNCA1IDYgNyA4IDlcbiAgLy8gUmVzdWx0XG4gICRyZXN1bHQ6IDBcbiAgJGRpdmlkZXI6IDBcbiAgJG1pbnVzOiBmYWxzZVxuICAvLyBMb29waW5nIHRocm91Z2ggYWxsIGNoYXJhY3RlcnNcbiAgQGZvciAkaSBmcm9tIDEgdGhyb3VnaCBzdHItbGVuZ3RoKCRzdHJpbmcpXG4gICAgJGNoYXJhY3Rlcjogc3RyLXNsaWNlKCRzdHJpbmcsICRpLCAkaSlcbiAgICAkaW5kZXg6IGluZGV4KCRzdHJpbmdzLCAkY2hhcmFjdGVyKVxuICAgIEBpZiAkY2hhcmFjdGVyID09IFwiLVwiXG4gICAgICAkbWludXM6IHRydWVcbiAgICBAZWxzZSBpZiAkY2hhcmFjdGVyID09IFwiLlwiXG4gICAgICAkZGl2aWRlcjogMVxuICAgIEBlbHNlXG4gICAgICBAaWYgdHlwZS1vZigkaW5kZXgpICE9IFwibnVtYmVyXCJcbiAgICAgICAgJHJlc3VsdDogaWYoJG1pbnVzLCAkcmVzdWx0ICogLTEsICRyZXN1bHQpXG4gICAgICAgIEByZXR1cm4gX2xlbmd0aCgkcmVzdWx0LCBzdHItc2xpY2UoJHN0cmluZywgJGkpKVxuICAgICAgJG51bWJlcjogbnRoKCRudW1iZXJzLCAkaW5kZXgpXG4gICAgICBAaWYgJGRpdmlkZXIgPT0gMFxuICAgICAgICAkcmVzdWx0OiAkcmVzdWx0ICogMTBcbiAgICAgIEBlbHNlXG4gICAgICAgIC8vIE1vdmUgdGhlIGRlY2ltYWwgZG90IHRvIHRoZSBsZWZ0XG4gICAgICAgICRkaXZpZGVyOiAkZGl2aWRlciAqIDEwXG4gICAgICAgICRudW1iZXI6ICRudW1iZXIgLyAkZGl2aWRlclxuICAgICAgJHJlc3VsdDogJHJlc3VsdCArICRudW1iZXJcbiAgQHJldHVybiBpZigkbWludXMsICRyZXN1bHQgKiAtMSwgJHJlc3VsdClcblxuQGZ1bmN0aW9uIF9sZW5ndGgoJG51bWJlciwgJHVuaXQpXG4gICRzdHJpbmdzOiBcInB4XCIgXCJjbVwiIFwibW1cIiBcIiVcIiBcImNoXCIgXCJwaWNhXCIgXCJpblwiIFwiZW1cIiBcInJlbVwiIFwicHRcIiBcInBjXCIgXCJleFwiIFwidndcIiBcInZoXCIgXCJ2bWluXCIgXCJ2bWF4XCJcbiAgJHVuaXRzOiAxcHggMWNtIDFtbSAxJSAxY2ggMXBpY2EgMWluIDFlbSAxcmVtIDFwdCAxcGMgMWV4IDF2dyAxdmggMXZtaW4gMXZtYXhcbiAgJGluZGV4OiBpbmRleCgkc3RyaW5ncywgJHVuaXQpXG4gIEBpZiB0eXBlLW9mKCRpbmRleCkgIT0gXCJudW1iZXJcIlxuICAgIEB3YXJuIFwiVW5rbm93biB1bml0IGAjeyR1bml0fWAuXCJcbiAgICBAcmV0dXJuIGZhbHNlXG4gIEByZXR1cm4gJG51bWJlciAqIG50aCgkdW5pdHMsICRpbmRleClcbiJdfQ== */